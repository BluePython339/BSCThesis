sub_401000
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x160 ]
mov eax [ esi ]
mov [ ebp - 0xc ] eax
je r-xdata
mov ecx edi
call sub_40124c
push [ ebp + 0x8 ]
and [ edi + 0x474 ] 0x0
and [ edi + 0xfc ] 0x0
mov ecx edi
mov [ ebp - 0x8 ] eax
call sub_40e1f0
mov ecx [ edi ]
lea eax [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
add eax ecx
mov ecx eax
mov [ ebp - 0x4 ] eax
call sub_407be1
mov ebx [ ebp + 0x10 ]
mov al [ eax + 0x10 ]
mov [ ebp + 0xb ] al
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
call sub_40109f
test al al
je r-xdata
push [ ebp - 0x8 ]
mov ecx edi
call sub_401ac0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_407be1
push eax
mov ecx ebx
call sub_40d89e
jmp r-xdata
mov edi [ ebp - 0xc ]
mov ecx rw-data
call sub_401188
mov ecx esi
call sub_40d9f2
jmp r-xdata
mov al [ ebp + 0xb ]
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp edi [ esi ]
jb r-xdata
sub_40109f
push ebp
mov ebp esp
sub esp 0xc
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
call sub_4010cc
mov eax ecx
push eax
mov ecx rw-data
call sub_4010e8
push [ ebp - 0xc ]
lea ecx [ ebp - 0xc ]
call sub_4011ca
leave
retn 0x4
sub_4010e8
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
cmp [ edi + 0x9 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ edi + 0x4 ]
mov eax [ edx ]
mov [ esi ] eax
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0xc
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
inc [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ esi ] 0x0
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
js r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x8 ] eax
mov [ edi + 0x4 ] esi
and [ esi + 0x4 ] 0x0
jmp r-xdata
push [ eax ]
mov ecx esi
push esi
call sub_40113c
sub_40113c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x4 ] ecx
push 0x20
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
and [ esi ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
xor edi edi
mov ecx edi
call sub_40d3d2
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
mov ecx edi
mov [ esi ] edi
call sub_40c935
mov ecx [ esi ]
mov eax [ ebx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov ecx [ esi ]
mov eax [ ebx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
and [ eax + 0x18 ] 0x0
mov eax [ esi ]
and [ eax + 0x1c ] 0x0
mov eax [ esi ]
push [ ebx + 0x18 ]
add eax 0x18
push eax
call sub_40113c
mov esi [ esi ]
mov ebx [ ebx + 0x1c ]
add esi 0x1c
jmp r-xdata
sub_401188
push esi
mov esi ecx
push edi
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x8 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_43ea90
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov edi [ esi + 0x4 ]
push ebx
mov ebx [ edi + 0x8 ]
test edi edi
je r-xdata
dec [ esi ]
pop edi
pop esi
retn
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
pop ebx
push [ edi ]
mov ecx edi
call sub_4011ca
push edi
call j_sub_4228ca#2
pop ecx
sub_4011ca
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push [ esi + 0x18 ]
call sub_4011ca
push [ esi + 0x1c ]
mov ecx edi
call sub_4011ca
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
test edi edi
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
push [ esi ]
call j_sub_4228ca#2
push [ esi + 0xc ]
call j_sub_4228ca#2
pop ecx
pop ecx
mov ecx edi
call sub_414430
push edi
call j_sub_4228ca#2
pop ecx
sub_40123e
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ ecx + 0x8 ]
push ecx
call sub_43ea90
mov ecx esi
test esi esi
jne r-xdata
pop esi
retn
sub_40124c
push ebp
mov ebp esp
sub esp 0x38
push esi
push edi
push 0x58
mov edi ecx
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov ecx eax
call sub_4018cf
mov esi eax
mov eax [ edi + 0xf4 ]
mov [ esi ] eax
lea eax [ edi + 0x1d8 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_40d89e
lea eax [ edi + 0x1e8 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_40c935
mov eax [ edi + 0x98 ]
mov [ esi + 0x28 ] eax
mov eax [ edi + 0x310 ]
mov [ esi + 0x2c ] eax
mov eax [ edi + 0x1f8 ]
lea ecx [ esi + 0x38 ]
mov eax [ eax ]
mov [ esi + 0x30 ] eax
mov eax [ edi + 0x318 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x458 ]
push eax
call sub_40c935
mov eax [ edi + 0x468 ]
mov [ esi + 0x48 ] eax
mov eax [ edi + 0x46c ]
mov [ esi + 0x4c ] eax
mov eax [ edi + 0x474 ]
mov [ esi + 0x50 ] eax
mov eax [ edi + 0xfc ]
lea ecx [ ebp - 0x38 ]
mov [ esi + 0x54 ] eax
call sub_401842
push eax
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_40175e
lea ecx [ ebp - 0x18 ]
call sub_412570
lea ecx [ ebp - 0x38 ]
call sub_412570
pop edi
mov eax esi
pop esi
leave
retn
sub_40131c
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
xor ebx ebx
push edi
mov ecx rw-data
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] r--data
call sub_40182d
push ecx
call sub_401624
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ eax + rw-data ] r--data
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x4b4 ]
mov [ ecx + rw-data ] eax
mov ecx rw-data
call sub_4016db
mov ecx rw-data
call sub_40d3d2
mov ecx rw-data
call sub_40d3d2
mov ecx rw-data
call sub_40d3d2
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40d3d2
xor edi edi
inc edi
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
call sub_40d3d2
mov ecx rw-data
call sub_401673
mov ecx rw-data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_4016f2
mov ecx rw-data
call sub_40d3d2
push ebx
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_414700
lea ecx [ ebp - 0x3c ]
call sub_401842
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
add ecx rw-data
call sub_40175e
lea ecx [ ebp - 0x1c ]
call sub_412570
lea ecx [ ebp - 0x3c ]
call sub_412570
push 0xfffffff6
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bx
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] ebx
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov [ rw-data ] ebx
mov ecx esi
call sub_449bd1
mov ecx eax
mov [ rw-data ] eax
call sub_44a2f6
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push 0xa
pop eax
mov ecx 0xfa
push ebx
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] bx
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] 0x64
mov [ rw-data ] bx
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ CoInitialize@IAT ]
pop edi
pop esi
mov eax rw-data
pop ebx
leave
retn 0x4
sub_401624
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor ecx ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov [ eax + rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov ecx rw-data
call sub_4017e0
push r--data
mov ecx rw-data
call sub_407e53
mov eax rw-data
leave
retn 0x4
sub_401673
push esi
mov esi ecx
push edi
xor edi edi
lea ecx [ esi + 0x14 ]
mov [ esi ] edi
call sub_40d3d2
lea ecx [ esi + 0x24 ]
call sub_40d3d2
lea ecx [ esi + 0x34 ]
call sub_407d70
lea ecx [ esi + 0x78 ]
call sub_407d70
lea ecx [ esi + 0xbc ]
call sub_40d3d2
push 0x4
mov [ esi + 0xec ] r--data
mov [ esi + 0xf0 ] edi
mov [ esi + 0xf4 ] edi
mov [ esi + 0xf8 ] edi
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax edi
jmp r-xdata
mov [ eax ] edi
mov [ esi ] eax
pop edi
mov eax esi
pop esi
retn
sub_4016f2
push esi
mov esi ecx
and [ esi ] 0x0
lea ecx [ esi + 0x8 ]
call sub_40181b
lea ecx [ esi + 0x8c ]
call sub_40d3d2
lea ecx [ esi + 0x9c ]
call sub_40d3d2
lea ecx [ esi + 0xac ]
call sub_40d3d2
lea ecx [ esi + 0xbc ]
call sub_40d3d2
lea ecx [ esi + 0xec ]
call sub_407d70
push 0x4
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
push r--data
mov [ esi ] eax
call [ RegisterWindowMessageW@IAT ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
retn
sub_40175e
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_44d231
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push edi
push 0x40
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
inc [ esi ]
pop esi
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_40179c
mov eax [ esi + 0x4 ]
mov [ edi + 0x38 ] eax
mov [ esi + 0x4 ] edi
pop edi
sub_40179c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
push esi
and [ edi + 0x8 ] 0x0
call sub_4113a0
mov al [ esi + 0x10 ]
mov [ edi + 0x10 ] al
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov al [ esi + 0x18 ]
mov [ edi + 0x18 ] al
lea ecx [ edi + 0x20 ]
lea eax [ esi + 0x20 ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_4113a0
mov al [ esi + 0x30 ]
mov [ edi + 0x30 ] al
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_401842
xor edx edx
mov [ ecx ] edx
mov [ ecx + 0x8 ] edx
xor eax eax
inc eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] dl
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] dl
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x28 ] edx
mov [ ecx + 0x30 ] dl
mov eax ecx
retn
sub_401867
push ebx
push esi
mov esi [ MapVirtualKeyW@IAT ]
push edi
mov edi ecx
push 0x5
pop eax
xor ebx ebx
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x1
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
push ebx
mov [ edi + 0x1c ] ebx
push 0x5b
mov [ edi + 0xc ] 0x4
call esi
push ebx
push 0x10
mov [ edi + 0x29 ] al
call esi
push ebx
push 0xa0
mov [ edi + 0x26 ] al
call esi
push ebx
push 0xa1
mov [ edi + 0x27 ] al
call esi
push ebx
push 0x11
mov [ edi + 0x28 ] al
call esi
push ebx
push 0x12
mov [ edi + 0x24 ] al
call esi
mov [ edi + 0x25 ] al
pop edi
pop esi
pop ebx
retn
sub_40193b
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1388
push 0x2
xor eax eax
push eax
push eax
push eax
push [ ebp + 0x8 ]
call [ SendMessageTimeoutW@IAT ]
neg eax
sbb al al
inc al
leave
retn 0x4
sub_401962
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
push ecx
call sub_401926
sub_40197e
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push 0x4
mov eax [ esi + 0xc ]
pop ebx
cmp [ esi + 0x8 ] eax
jne r-xdata
push ebx
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jae r-xdata
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
mov eax ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mul ebx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
jmp r-xdata
sub_4019ee
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov edi ecx
push [ eax ]
lea ecx [ edi + 0x1d8 ]
call sub_40d89e
cmp [ esi + 0x8 ] 0x2
jb r-xdata
push r--data
lea ecx [ edi + 0x1e8 ]
call sub_407e53
jmp r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ edi + 0x1e8 ]
call sub_40c935
pop edi
pop esi
pop ebp
retn 0x4
sub_401a33
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_4019ee
xor ebx ebx
inc ebx
push ebx
mov ecx edi
call sub_401dce
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov ecx [ edi + 0x1f8 ]
push 0x0
push [ esi + 0x8 ]
call sub_401a85
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_401a85
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_40193b
test al al
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
push 0x0
push 0xc
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0x1
push 0x0
push [ esi ]
call [ GetParent@IAT ]
push eax
call [ InvalidateRect@IAT ]
jmp r-xdata
mov al 0x1
sub_401ac0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_402d7f
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x1d8 ]
lea eax [ esi + 0x8 ]
push eax
call sub_40d89e
lea eax [ esi + 0x18 ]
push eax
lea ecx [ edi + 0x1e8 ]
call sub_40c935
mov eax [ esi + 0x28 ]
mov [ edi + 0x98 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x310 ] eax
push [ esi + 0x30 ]
lea ecx [ edi + 0x1f8 ]
call sub_40200a
mov eax [ esi + 0x34 ]
mov [ edi + 0x318 ] eax
lea eax [ esi + 0x38 ]
push eax
lea ecx [ edi + 0x458 ]
call sub_40c935
cmp [ edi + 0xfc ] 0x1
mov eax [ esi + 0x48 ]
mov [ edi + 0x468 ] eax
mov eax [ esi + 0x4c ]
mov [ edi + 0x46c ] eax
mov eax [ esi + 0x50 ]
mov [ edi + 0x474 ] eax
je r-xdata
mov eax [ esi ]
push ecx
mov ecx esi
mov [ edi + 0xf4 ] eax
call sub_4018f5
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x54 ]
mov [ edi + 0xfc ] eax
sub_401b72
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xbc
push ebx
push esi
push edi
push 0x0
call [ Sleep@IAT ]
lea eax [ esp + 0x88 ]
push eax
mov [ esp + 0x8c ] 0x40
call [ GlobalMemoryStatusEx@IAT ]
mov esi [ ebp + 0xc ]
xor ebx ebx
push 0x7
inc ebx
push ebx
push esi
call sub_403320
fild [ esp + 0x98 ]
mov eax [ esp + 0x98 ]
test eax eax
js r-xdata
fadd [ r--data ]
jmp r-xdata
and [ esp + 0x6c ] 0x0
fstp [ esp + 0x64 ]
push 0x3
pop edi
push 0x0
push ebx
lea eax [ esp + 0x6c ]
push eax
push esi
mov [ esp + 0x80 ] edi
call sub_412320
add esp 0x1c
lea ecx [ esp + 0x58 ]
call sub_412570
fild [ esp + 0x90 ]
push ebx
push ebx
fstp [ esp + 0x18 ]
lea eax [ esp + 0x40 ]
fld [ esp + 0x18 ]
and [ esp + 0x48 ] 0x0
fmul [ r--data ]
push eax
push esi
mov [ esp + 0x54 ] edi
fstp [ esp + 0x48 ]
call sub_412320
add esp 0x10
lea ecx [ esp + 0x38 ]
call sub_412570
fild [ esp + 0x98 ]
push 0x2
push ebx
fstp [ esp + 0x18 ]
lea eax [ esp + 0x80 ]
fld [ esp + 0x18 ]
and [ esp + 0x88 ] 0x0
fmul [ r--data ]
push eax
push esi
mov [ esp + 0x94 ] edi
fstp [ esp + 0x88 ]
call sub_412320
add esp 0x10
lea ecx [ esp + 0x78 ]
call sub_412570
fild [ esp + 0xa0 ]
push edi
push ebx
fstp [ esp + 0x18 ]
lea eax [ esp + 0x20 ]
fld [ esp + 0x18 ]
and [ esp + 0x28 ] 0x0
fmul [ r--data ]
push eax
push esi
mov [ esp + 0x34 ] edi
fstp [ esp + 0x28 ]
call sub_412320
add esp 0x10
lea ecx [ esp + 0x18 ]
call sub_412570
fild [ esp + 0xa8 ]
push 0x4
push ebx
fstp [ esp + 0x18 ]
lea eax [ esp + 0x30 ]
fld [ esp + 0x18 ]
and [ esp + 0x38 ] 0x0
fmul [ r--data ]
push eax
push esi
mov [ esp + 0x44 ] edi
fstp [ esp + 0x38 ]
call sub_412320
add esp 0x10
lea ecx [ esp + 0x28 ]
call sub_412570
fild [ esp + 0xb0 ]
fstp [ esp + 0x10 ]
fld [ esp + 0x10 ]
fmul [ r--data ]
and [ esp + 0x50 ] 0x0
push 0x5
push ebx
lea eax [ esp + 0x50 ]
fstp [ esp + 0x50 ]
push eax
push esi
mov [ esp + 0x64 ] edi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x48 ]
call sub_412570
fild [ esp + 0xb8 ]
push 0x6
push ebx
fstp [ esp + 0x18 ]
lea eax [ esp + 0x70 ]
fld [ esp + 0x18 ]
and [ esp + 0x78 ] 0x0
fmul [ r--data ]
push eax
push esi
mov [ esp + 0x84 ] edi
fstp [ esp + 0x78 ]
call sub_412320
add esp 0x10
lea ecx [ esp + 0x68 ]
call sub_412570
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_401d74
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
push 0x5
mov ecx esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] eax
call sub_40d2c0
test al al
je r-xdata
push 0xf
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
xor ebx ebx
inc ebx
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push ebx
add ecx edi
jmp r-xdata
cmp [ esi + 0xc ] 0xf
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
push eax
mov ecx esi
call sub_40218e
mov edi [ ebp + 0xc ]
mov ecx edi
mov esi eax
call sub_412570
mov ecx edi
mov [ edi + 0xc ] ebx
mov [ edi ] esi
call sub_40cdb4
test eax eax
jne r-xdata
push ebx
mov ecx esi
call sub_40218e
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi + 0xc ] ebx
call sub_44d7e4
jmp r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov edx [ ebp - 0x8 ]
push eax
mov eax [ edx ]
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edx
mov [ esi ] edi
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
jmp r-xdata
sub_401dce
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ebx [ esi + 0x300 ]
mov ecx ebx
call sub_402d1a
lea edi [ esi + 0x1d8 ]
push 0x7
mov ecx edi
call sub_40d2c0
mov ecx edi
test al al
jne r-xdata
call sub_44be63
mov edi eax
push edi
mov [ ebp + 0x8 ] edi
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_40d2c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push edi
lea ecx [ esi + 0x1f8 ]
call sub_40200a
lea eax [ ebp + 0x8 ]
push eax
mov ecx ebx
call sub_40197e
xor eax eax
inc eax
jmp r-xdata
mov ecx edi
call sub_44be63
mov edi eax
push edi
mov [ ebp + 0x8 ] edi
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
mov ecx edi
call sub_4084a6
push [ ebp + 0x8 ]
movzx eax [ esi + 0x2fc ]
push eax
movzx eax [ esi + 0x2fd ]
push eax
push [ esi + 0x2f4 ]
lea eax [ esi + 0x1e8 ]
push ebx
push eax
push [ edi + 0x8 ]
lea ecx [ esi + 0x1f8 ]
call sub_401f04
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_401e58
push ebp
mov ebp esp
sub esp 0x3c0
dec [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x3b4
lea eax [ ebp - 0x3b8 ]
push 0x0
push eax
mov [ ebp - 0x3bc ] 0x3a8
call sub_421970
add esp 0xc
mov ecx esi
call sub_4038e4
mov edi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
call [ KillTimer@IAT ]
push 0x0
push 0x2ee
push ebx
push edi
call [ SetTimer@IAT ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x3b8 ] edi
mov [ ebp - 0x3b4 ] ebx
mov [ ebp - 0x3b0 ] 0x2
jne r-xdata
cmp [ esi + 0x194 ] 0x1
je r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov [ esi + 0x194 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1a8 ]
mov [ esi + 0x194 ] bl
jmp r-xdata
cmp [ esi + 0x195 ] 0x0
je r-xdata
cmp [ esi + 0x194 ] bl
je r-xdata
mov eax [ esi + 0x19c ]
mov [ ebp - 0x3a8 ] eax
lea eax [ ebp - 0x3bc ]
push eax
push ebx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
mov eax [ esi + 0x1b0 ]
mov [ esi + 0x195 ] bl
jmp r-xdata
mov [ esi + 0x195 ] 0x0
sub_401f04
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x10 ]
call sub_402d1a
lea ecx [ edi + 0xec ]
call sub_402d1a
mov al [ ebp + 0x20 ]
push [ ebp + 0x8 ]
mov [ edi + 0x4 ] al
mov al [ ebp + 0x1c ]
lea esi [ edi + 0x14 ]
mov ecx esi
mov [ edi + 0x5 ] al
call sub_40c935
push [ ebp + 0xc ]
lea ecx [ edi + 0x24 ]
call sub_40c935
lea ecx [ edi + 0xbc ]
push r--data
call sub_407e53
mov eax [ ebp + 0x14 ]
xor ebx ebx
lea ecx [ esp + 0x18 ]
mov [ edi + 0xcc ] 0x1
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] 0x1
mov [ edi + 0x8 ] ebx
mov [ edi + 0xd0 ] ebx
mov [ edi + 0xe4 ] ebx
call sub_40d3d2
lea ecx [ esp + 0x28 ]
call sub_40d3d2
lea ecx [ esp + 0x38 ]
call sub_40d3d2
cmp [ edi + 0x10 ] ebx
jl r-xdata
push [ edi + 0x10 ]
call sub_422626
pop ecx
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] bl
jmp r-xdata
cmp [ edi + 0x10 ] 0x4
je r-xdata
push esi
call sub_43e4ea
mov [ edi + 0x10 ] 0x1
jmp r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
push ebx
mov ecx esi
call sub_40a4f6
cmp [ eax ] 0x5b
jne r-xdata
cmp [ edi + 0x28 ] ebx
jne r-xdata
cmp [ esp + 0x3c ] ebx
je r-xdata
mov eax [ edi + 0x18 ]
dec eax
push eax
mov ecx esi
call sub_40a4f6
cmp [ eax ] 0x5d
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
mov ecx edi
call sub_40200a
mov eax [ edi ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
lea eax [ esp + 0x38 ]
push eax
mov ecx esi
call sub_40c935
mov eax [ edi + 0x18 ]
sub eax 0x2
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x10 ] eax
or [ edi + 0x8 ] 0x4
mov esi [ CharUpperBuffW@IAT ]
cmp [ edi + 0xc ] bl
jne r-xdata
mov [ edi + 0x8 ] 0x1
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
jne r-xdata
test [ edi + 0x8 ] 0x1
je r-xdata
lea ecx [ edi + 0x24 ]
call sub_40b8a7
push [ edi + 0x28 ]
push [ edi + 0x24 ]
call esi
mov edx r--data
lea ecx [ esp + 0x28 ]
call sub_41f885
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
jne r-xdata
push edi
push sub_43e69d
cmp [ ebp + 0x18 ] bl
je r-xdata
cmp [ edi + 0xc ] bl
jne r-xdata
or ebx 0xffffffff
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov edx r--data
lea ecx [ esp + 0x28 ]
call sub_41f885
test al al
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
jne r-xdata
call [ EnumWindows@IAT ]
call [ GetDesktopWindow@IAT ]
push eax
call [ EnumChildWindows@IAT ]
jmp r-xdata
lea ecx [ edi + 0x14 ]
call sub_40b8a7
push [ edi + 0x18 ]
push [ edi + 0x14 ]
call esi
lea ecx [ esp + 0x38 ]
call sub_405cd3
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea ecx [ esp + 0x18 ]
call sub_405cd3
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x1c
jmp r-xdata
call [ GetForegroundWindow@IAT ]
push eax
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x10 ]
call sub_4488a2
push [ esp + 0x10 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov ebx [ edi + 0xe4 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx edi
mov eax [ eax ]
push [ eax ]
call sub_40200a
mov ebx [ ebp + 0x10 ]
lea esi [ edi + 0xec ]
push esi
mov ecx ebx
call sub_43e44e
mov ecx esi
call sub_402d1a
cmp [ edi + 0xe4 ] 0x1
jl r-xdata
mov eax [ eax ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push eax
call sub_40197e
xor ebx ebx
inc ebx
push [ esp + 0x10 ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x8 ]
test al 0x1
jne r-xdata
mov ecx edi
call sub_40200a
mov eax [ edi ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
or [ edi + 0x8 ] 0x8
lea ecx [ edi + 0xbc ]
jmp r-xdata
push 0xfffffffd
jmp r-xdata
or eax 0x2
lea ecx [ edi + 0x34 ]
mov [ edi + 0x8 ] eax
call sub_405cf6
lea ecx [ edi + 0x34 ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
or [ edi + 0x8 ] 0x10
lea ecx [ edi + 0x78 ]
call sub_405cf6
lea ecx [ edi + 0x78 ]
lea eax [ esp + 0x28 ]
push eax
call sub_40c935
jmp r-xdata
pop ebx
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
call sub_405be9
test eax eax
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x80
call sub_422241
pop ecx
mov [ edi + 0xd4 ] eax
jmp r-xdata
push 0xfffffffe
jmp r-xdata
lea esi [ edi + 0x14 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x100
call sub_422241
pop ecx
mov [ edi + 0xd8 ] eax
jmp r-xdata
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x24 ]
push eax
push esi
call sub_43d68d
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x200
call sub_422241
pop ecx
mov [ edi + 0xdc ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x400
call sub_422241
pop ecx
mov [ edi + 0xe0 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x20
call sub_422241
pop ecx
mov [ edi + 0xcc ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x28 ]
call sub_41f885
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_43d614
test al al
jne r-xdata
mov eax [ edi + 0x8 ]
test al 0x2
jne r-xdata
or [ edi + 0x8 ] 0x40
jmp r-xdata
push 0xfffffffc
or eax 0x1
mov [ edi + 0x8 ] eax
lea ecx [ esp + 0x38 ]
sub_40200a
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
push 0x4
call sub_42010a
pop ecx
test eax eax
je r-xdata
push ecx
call sub_402dd4
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ esi ] eax
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_40203a
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
inc [ esi ]
mov edx [ esi ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] 0x1
cmp edx [ edi + 0x8 ]
jae r-xdata
lea ecx [ ebp - 0x24 ]
call sub_412570
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x14
mov [ ebp - 0xc ] 0x4e
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7d
mov esi [ edi + 0x4 ]
mov esi [ esi + edx * 4 ]
movzx esi [ esi + 0x8 ]
cmp si [ ebp - 0xc ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp + 0xc ]
je r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ ecx + 0x1 ]
push eax
push edx
push [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ ebp - 0x8 ]
push esi
push edi
call sub_40203a
test al al
je r-xdata
cmp ecx eax
jl r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7e
jmp r-xdata
mov esi [ edi + 0x4 ]
push 0x4f
mov eax [ esi + edx * 4 ]
mov esi [ ebp + 0xc ]
movsx eax [ eax + 0xa ]
mov [ ebp - 0x14 ] eax
pop eax
cmp [ ebp - 0x10 ] ax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
call sub_44d520
jmp r-xdata
mov eax [ edi + 0x4 ]
push 0x4e
mov eax [ eax + edx * 4 - 0x4 ]
pop edx
cmp [ eax + 0x8 ] dx
je r-xdata
mov ecx [ ebp - 0x8 ]
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
push esi
push edi
call sub_40fa40
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov ecx edx
push 0x4f
mov eax [ eax + ecx * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax + ecx * 4 - 0x4 ]
inc edx
mov [ esi ] edx
cmp edx [ edi + 0x8 ]
jb r-xdata
mov edx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_40346e
cmp [ ebp + 0x18 ] 0x0
mov [ ebp - 0x10 ] ebx
jle r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x6b
jmp r-xdata
lea eax [ ecx + 0x1 ]
xor ebx ebx
mov [ esi ] eax
inc ebx
mov ecx [ ebp + 0x10 ]
push ebx
call sub_40218e
mov ecx [ ebp + 0x18 ]
cmp ecx eax
jg r-xdata
jmp r-xdata
push ebx
push ebx
push [ ebp + 0x10 ]
call sub_4114a0
add esp 0xc
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov edi ebx
mov ebx [ ebp + 0x14 ]
push [ ebp - 0x14 ]
push 0x7a
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx eax
call sub_40d89e
push [ ebx + edi * 4 ]
mov ecx [ ebp + 0x10 ]
call sub_403489
inc edi
cmp edi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
sub_40218e
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
pop ebp
retn 0x4
js r-xdata
mov eax [ ecx + 0x20c ]
cmp eax [ ecx + 0x20c ]
jg r-xdata
mov eax [ ecx + eax * 4 + 0x8 ]
jmp r-xdata
sub_4021bc
push esi
mov esi ecx
push esi
call sub_4218fb
pop ecx
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + eax * 2 - 0x2 ] 0x5c
je r-xdata
xor ecx ecx
mov [ esi + eax * 2 - 0x2 ] cx
pop esi
retn
sub_4021dd
push ebp
mov ebp esp
sub esp 0x8c
push ebx
xor ebx ebx
push esi
mov eax ebx
mov ecx ebx
mov edx ebx
push edi
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] bx
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] bx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] bx
mov [ ebp - 0x88 ] ebx
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x80 ] bx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] bx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x68 ] bx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x50 ] bx
mov esi ebx
mov [ ebp - 0x8c ] 0x7f
jmp r-xdata
mov edi [ ebp - 0x30 ]
cmp edi [ rw-data ]
jg r-xdata
inc edi
mov [ ebp - 0x30 ] edi
or edi 0xffffffff
test ebx ebx
je r-xdata
test edi edi
jle r-xdata
push [ ebp - 0x20 ]
xor ebx ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push ecx
push eax
push edx
push ebx
call sub_4028af
test eax eax
js r-xdata
mov eax [ ebp - 0x30 ]
dec eax
mov [ rw-data ] eax
mov ecx [ ebx + 0x4 ]
xor eax eax
mov edx eax
mov [ ebp - 0x24 ] eax
mov eax [ ecx ]
mov [ ebp - 0x34 ] eax
movzx eax [ eax + 0x8 ]
push 0x7f
pop ecx
cmp ax cx
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx edi
shl ebx 0x4
add ebx [ rw-data ]
lea ecx [ ebp - 0x58 ]
call sub_402933
lea ecx [ ebp - 0x70 ]
call sub_402933
lea ecx [ ebp - 0x64 ]
call sub_402933
lea ecx [ ebp - 0x88 ]
call sub_402933
lea ecx [ ebp - 0x40 ]
call sub_402933
lea ecx [ ebp - 0x7c ]
call sub_402933
lea ecx [ ebp - 0x4c ]
call sub_402933
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
mov edi ebx
test ax ax
mov eax [ ebp - 0x8 ]
jne r-xdata
push 0x7f
mov edx ecx
mov ecx [ ebp - 0x24 ]
pop edi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
cmp eax 0x13
jg r-xdata
lea edx [ edx + 0x4 ]
inc ecx
mov eax [ edx ]
cmp [ eax + 0x8 ] di
jne r-xdata
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ ebx + 0x4 ]
or edi 0xffffffff
test eax eax
je r-xdata
cmp eax 0x20
jg r-xdata
cmp eax 0x12
jge r-xdata
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0x24 ] eax
sub eax 0x21
jne r-xdata
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
pop ebx
test edx edx
jne r-xdata
sub eax 0x4
cmp eax 0xa
ja r-xdata
sub eax 0x4
je r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ebx [ ebp - 0x2c ]
inc ebx
mov [ ebp - 0x2c ] ebx
cmp ebx 0x1
jg r-xdata
sub eax 0x14
je r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_402809 ]
inc [ ebp - 0x20 ]
lea ecx [ ebp - 0x58 ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x72
dec [ ebp - 0x2c ]
jne r-xdata
push edi
push 0x83
jmp r-xdata
push [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push esi
call sub_4028af
test eax eax
jns r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
dec eax
je r-xdata
test ecx ecx
jne r-xdata
xor eax eax
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
inc [ ebp - 0x4 ]
lea ecx [ ebp - 0x64 ]
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
inc [ ebp - 0x8 ]
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov edx [ ebp - 0xc ]
dec edx
dec esi
cmp [ ebp - 0x70 ] 0x0
mov [ ebp - 0xc ] edx
je r-xdata
push edi
push 0x81
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] esi
push eax
inc esi
call sub_402876
jmp r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
push 0x0
sub eax 0x5
mov eax [ ebp - 0x8 ]
pop ebx
jne r-xdata
jmp r-xdata
mov ecx rw-data
call sub_44d520
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x1c ]
lea ecx [ ebp - 0x40 ]
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp [ eax ] 0x5
jne r-xdata
inc edx
mov [ ebp - 0x28 ] edx
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x34 ] eax
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x8c ]
jne r-xdata
mov eax [ ebp - 0x14 ]
dec eax
dec esi
cmp [ ebp - 0x7c ] 0x0
mov [ ebp - 0x14 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
dec ecx
dec esi
cmp [ ebp - 0x64 ] 0x0
mov [ ebp - 0x4 ] ecx
je r-xdata
push edi
push 0x74
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
dec esi
cmp [ ebp - 0x88 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
inc [ ebp - 0xc ]
lea ecx [ ebp - 0x70 ]
jmp r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x70 ]
call sub_402835
mov ebx [ eax ]
lea ecx [ ebp - 0x70 ]
call sub_402843
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
dec eax
dec esi
cmp [ ebp - 0x58 ] 0x0
mov [ ebp - 0x20 ] eax
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x40 ]
call sub_402835
mov edx [ ebp - 0xc ]
lea ecx [ esi - 0x1 ]
cmp ecx [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
pop ebx
je r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
dec eax
je r-xdata
push edi
push 0x96
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov eax [ ecx + eax * 4 ]
xor ecx ecx
cmp [ eax + 0x8 ] cx
je r-xdata
test ax ax
je r-xdata
jmp r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x7c ]
call sub_402835
mov ebx [ eax ]
lea ecx [ ebp - 0x7c ]
call sub_402843
mov eax [ ebp - 0x14 ]
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x64 ]
call sub_402835
mov ebx [ eax ]
lea ecx [ ebp - 0x64 ]
call sub_402843
mov ecx [ ebp - 0x4 ]
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x88 ]
call sub_402835
mov ebx [ eax ]
lea ecx [ ebp - 0x88 ]
call sub_402843
mov eax [ ebp - 0x8 ]
test edx edx
js r-xdata
push edi
push 0x93
jmp r-xdata
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0x58 ]
call sub_402835
mov ebx [ eax ]
lea ecx [ ebp - 0x58 ]
call sub_402843
mov eax [ ebp - 0x20 ]
lea ebx [ esi + 0x1 ]
jmp r-xdata
jmp r-xdata
push edi
push 0x98
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_402835
lea ecx [ esi - 0x1 ]
cmp ecx [ eax ]
je r-xdata
mov eax [ ebp - 0x1c ]
dec eax
dec esi
cmp [ ebp - 0x40 ] 0x0
mov [ ebp - 0x1c ] eax
je r-xdata
inc [ ebp - 0x18 ]
lea ecx [ ebp - 0x4c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
dec eax
mov eax [ ebp - 0x8 ]
jne r-xdata
cmp [ eax ] 0x5
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax [ ebx + 0x4 ]
xor edx edx
mov eax [ eax + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] dx
mov edx [ ebp - 0xc ]
je r-xdata
push edi
push 0xa1
jmp r-xdata
test eax eax
js r-xdata
push edi
push 0x75
jmp r-xdata
cmp esi ebx
jne r-xdata
test ecx ecx
js r-xdata
push edi
push 0x95
jmp r-xdata
cmp esi ebx
jne r-xdata
test eax eax
js r-xdata
push edi
push 0x78
jmp r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
push edi
push 0x68
jmp r-xdata
cmp esi ebx
je r-xdata
test eax eax
js r-xdata
jmp r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x40 ]
call sub_402835
mov ebx [ eax ]
lea ecx [ ebp - 0x40 ]
call sub_402843
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
inc [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] esi
push eax
lea ecx [ ebp - 0x7c ]
inc esi
call sub_402876
jmp r-xdata
cmp [ eax ] 0x12
jl r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
test eax eax
js r-xdata
push edi
push 0x99
jmp r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x18 ]
dec eax
dec esi
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x18 ] eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x9f
jmp r-xdata
cmp [ eax ] 0x13
jle r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_402835
mov ebx [ eax ]
lea ecx [ ebp - 0x4c ]
call sub_402843
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x18
jle r-xdata
test eax eax
js r-xdata
push edi
push 0xb3
jmp r-xdata
cmp esi ebx
je r-xdata
cmp [ eax ] 0x1e
mov edx [ ebp - 0xc ]
jle r-xdata
jmp r-xdata
cmp [ eax ] 0x21
jle r-xdata
cmp [ eax ] 0x23
jle r-xdata
jmp r-xdata
sub_402843
push esi
push edi
mov edi ecx
cmp [ edi + 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
push eax
mov esi [ eax + 0x4 ]
call j_sub_4228ca#2
pop ecx
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
mov esi [ eax + 0x4 ]
call j_sub_4228ca#2
pop ecx
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
dec [ edi ]
pop edi
pop esi
retn
sub_402876
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ eax ]
mov [ edx ] eax
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push 0x8
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
inc [ esi ]
pop esi
pop ebp
retn 0x4
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
mov eax [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
mov [ esi + 0x4 ] edx
sub_4028af
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jg r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0xffffffff
push 0x92
jmp r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx rw-data
call sub_44d520
or eax 0xffffffff
jmp r-xdata
push 0xffffffff
push 0x77
jmp r-xdata
cmp [ ebp + 0x14 ] eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
pop ebp
retn 0x20
push 0xffffffff
push 0x97
jmp r-xdata
cmp [ ebp + 0x18 ] eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push 0xffffffff
push 0xa0
jmp r-xdata
cmp [ ebp + 0x1c ] eax
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push 0xffffffff
push 0xb4
jmp r-xdata
cmp [ ebp + 0x20 ] eax
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
jmp r-xdata
push 0xffffffff
push 0x73
jmp r-xdata
push 0xffffffff
push 0x6a
xor eax eax
sub_402933
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ eax + 0x4 ]
push eax
call j_sub_4228ca#2
pop ecx
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_402941
call sub_402ac7
mov ecx rw-data
call sub_402bf8
mov ecx rw-data
call sub_4029ad
mov ecx rw-data
call sub_4404e2
mov ecx rw-data
call sub_402c64
mov ecx rw-data
call sub_405cd3
mov ecx rw-data
jmp sub_402933
sub_402982
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_4228ca#2
mov eax [ esi + 0x4 ]
pop ecx
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_4029ad
push edi
mov edi ecx
mov ecx [ edi ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
and [ edi + 0x8 ] 0x0
pop edi
retn
mov esi [ ecx + 0x4 ]
push ecx
call sub_402b56
mov ecx esi
test esi esi
jne r-xdata
pop esi
jmp r-xdata
sub_4029cb
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi eax
jne r-xdata
test eax eax
je r-xdata
cmp edi 0x11
jbe r-xdata
jmp r-xdata
je r-xdata
mov eax edi
sub eax 0x82
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call [ DefWindowProcW@IAT ]
mov eax [ ebp + 0x14 ]
and eax 0x80000000
neg eax
sbb eax eax
add eax 0x4
mov ebx rw-data
mov ecx ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_40322e
mov ecx ebx
call sub_41ec33
jmp r-xdata
mov eax edi
dec eax
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
sub eax 0x8f
je r-xdata
push 0x0
push 0x2ee
push 0x1
push esi
call [ SetTimer@IAT ]
push r--data
call [ RegisterWindowMessageW@IAT ]
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
push ecx
mov ecx rw-data
call sub_4457fb
cmp al 0x1
je r-xdata
dec eax
dec eax
je r-xdata
call [ CreatePopupMenu@IAT ]
mov [ rw-data ] eax
jmp r-xdata
sub eax 0x3
je r-xdata
push 0x1
push esi
call [ KillTimer@IAT ]
mov ecx rw-data
call sub_402b94
call sub_402ac7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
push ecx
push [ ebp + 0x10 ]
mov ecx rw-data
push esi
call sub_401e58
jmp r-xdata
sub eax 0x1ff
je r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
mov eax ecx
shr eax 0x10
push eax
movzx eax cx
push eax
push 0x0
push 0x0
push [ rw-data ]
call [ MoveWindow@IAT ]
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub eax 0xef
je r-xdata
push [ rw-data ]
call [ SetFocus@IAT ]
jmp r-xdata
sub eax 0x9
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_43b31f
jmp r-xdata
push [ ebp + 0x14 ]
push ecx
push ecx
push esi
mov ecx rw-data
call sub_445fdb
jmp r-xdata
cmp edi [ rw-data ]
je r-xdata
mov ecx rw-data
mov [ rw-data ] 0x1
call sub_40322e
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov ebx rw-data
mov ecx ebx
call sub_402b94
mov ecx ebx
call sub_403598
jmp r-xdata
sub_402ac7
push esi
mov esi rw-data
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx esi
call sub_402b6e
pop esi
jmp r-xdata
mov ecx esi
call sub_4041e7
jmp r-xdata
push [ eax ]
call [ DestroyWindow@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push [ eax + 0x8 ]
call [ DeleteObject@IAT ]
mov ecx rw-data
call sub_402b2b
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
jmp r-xdata
retn
mov eax [ rw-data ]
mov ecx rw-data
mov esi [ eax ]
call sub_446417
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ecx
mov ecx esi
call sub_468ba4
pop esi
retn
sub_402b2b
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx + 0x8 ]
push ecx
mov [ esi + 0x4 ] eax
call sub_402b56
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
and [ eax + 0x4 ] 0x0
dec [ esi + 0x8 ]
sub_402b6e
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
ja r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_4228ca#2
pop ecx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
jmp r-xdata
sub_402b94
push ebp
mov ebp esp
sub esp 0x3b8
cmp [ rw-data ] 0x0
je r-xdata
leave
retn
xor eax eax
push 0x3b4
push eax
mov [ rw-data ] al
mov [ ecx + 0x19c ] eax
lea eax [ ebp - 0x3b4 ]
push eax
call sub_421970
mov eax [ rw-data ]
add esp 0xc
mov [ ebp - 0x3b4 ] eax
lea eax [ ebp - 0x3b8 ]
push eax
push 0x2
mov [ ebp - 0x3b8 ] 0x3a8
mov [ ebp - 0x3b0 ] 0x1
call [ Shell_NotifyIconW@IAT ]
sub_402bf8
push edi
mov edi ecx
mov ecx [ edi ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
and [ edi + 0x8 ] 0x0
pop edi
retn
mov esi [ ecx + 0x4 ]
push ecx
call sub_468b88
mov ecx esi
test esi esi
jne r-xdata
pop esi
jmp r-xdata
sub_402c0d
push esi
mov ecx rw-data
call sub_402c7d
xor esi esi
cmp [ rw-data ] esi
jbe r-xdata
push [ rw-data ]
call j_sub_4228ca#2
pop ecx
mov ecx rw-data
call sub_402c64
mov ecx rw-data
call sub_402e54
mov ecx rw-data
pop esi
jmp sub_402e54
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call j_sub_4228ca#2
inc esi
pop ecx
cmp esi [ rw-data ]
jb r-xdata
sub_402c7d
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x8 ]
test ebx ebx
je r-xdata
mov ecx [ edi + 0x44 ]
xor ebx ebx
test ecx ecx
je r-xdata
push [ ebx ]
mov esi [ ebx + 0xc ]
call j_sub_4228ca#2
push ebx
call j_sub_4228ca#2
pop ecx
pop ecx
mov ebx esi
test esi esi
jne r-xdata
push [ edi + 0x14 ]
call j_sub_4228ca#2
pop ecx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x44 ] ebx
mov [ edi ] bx
mov esi ebx
cmp [ edi + 0x20 ] ebx
jbe r-xdata
lea eax [ ecx - 0x4 ]
cmp [ eax ] ebx
je r-xdata
lea ecx [ edi + 0x18 ]
call sub_402d1a
lea ecx [ edi + 0x28 ]
call sub_402d1a
cmp [ edi + 0x50 ] ebx
ja r-xdata
mov eax [ edi + 0x1c ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call j_sub_4228ca#2
inc esi
pop ecx
cmp esi [ edi + 0x20 ]
jb r-xdata
push eax
call j_sub_4228ca#2
pop ecx
jmp r-xdata
mov eax [ ecx ]
push 0x3
call [ eax ]
mov eax [ edi + 0x4c ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
lea ecx [ edi + 0x48 ]
pop edi
pop esi
pop ebx
jmp sub_402b6e
inc ebx
cmp ebx [ edi + 0x50 ]
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
sub_402d1a
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
ja r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_4228ca#2
pop ecx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jae r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
jmp r-xdata
sub_402d47
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
push esi
mov esi ecx
je r-xdata
call sub_405800
test [ ebp + 0x8 ] 0x1
je r-xdata
push edi
push sub_405800
lea edi [ esi - 0x4 ]
push [ edi ]
push 0x10
pop edx
call sub_4057d8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
jmp r-xdata
push esi
call j_sub_4228ca#2
pop ecx
mov eax edi
pop edi
push edi
call j_sub_4228ca#2
pop ecx
pop esi
pop ebp
retn 0x4
sub_402d7f
push esi
mov esi ecx
push edi
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x38 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_402db5
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x38 ]
test ecx ecx
je r-xdata
dec [ esi ]
pop edi
pop esi
retn
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
push ecx
call sub_402db5
sub_402de4
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xec ]
call sub_402e54
lea ecx [ esi + 0xbc ]
call sub_405cd3
lea ecx [ esi + 0x78 ]
call sub_405cbb
lea ecx [ esi + 0x34 ]
call sub_405cbb
lea ecx [ esi + 0x24 ]
call sub_405cd3
lea ecx [ esi + 0x14 ]
pop esi
jmp sub_405cd3
push ecx
call sub_402dd4
sub_402e39
push esi
push edi
mov edi ecx
xor esi esi
push 0x8000
push 0x0
push eax
push [ edi + esi * 8 ]
call [ VirtualFreeEx@IAT ]
push [ edi + esi * 8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
inc esi
cmp esi 0x10
jl r-xdata
mov eax [ edi + esi * 8 + 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
sub_402e6d
push edi
mov edi ecx
mov ecx [ edi ]
test ecx ecx
jne r-xdata
push esi
and [ edi + 0x8 ] 0x0
pop edi
retn
mov esi [ ecx + 0x4 ]
push ecx
call sub_401962
mov ecx esi
test esi esi
jne r-xdata
pop esi
jmp r-xdata
sub_402e8f
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ ecx + 0x10 ]
push ecx
call sub_41bdcc
mov ecx esi
test esi esi
jne r-xdata
pop esi
retn
sub_402e9d
push esi
push edi
mov esi [ CreateWindowExW@IAT ]
xor edi edi
push edi
push [ rw-data ]
mov eax 0x80000000
push edi
push edi
push 0x64
push 0x12c
push eax
push eax
push 0xcf0000
mov eax r--data
push eax
push eax
push edi
call esi
push edi
push [ rw-data ]
mov [ rw-data ] eax
push 0x1
push eax
push edi
push edi
push edi
push edi
push 0x50b008c4
push edi
push r--data
push edi
call esi
mov esi [ ShowWindow@IAT ]
push edi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push edi
push [ rw-data ]
call esi
pop edi
pop esi
retn
sub_402f0e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
lea ebx [ ecx + 0x4 ]
push edi
mov edi [ eax ]
mov ecx ebx
call sub_407be1
mov esi eax
mov ecx esi
call sub_412570
mov ecx ebx
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_407be1
pop edi
pop esi
mov [ eax + 0x10 ] 0x0
pop ebx
pop ebp
retn 0x8
sub_402f47
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ ecx + 0x30 ]
push ecx
call sub_44d28e
mov ecx esi
test esi esi
jne r-xdata
pop esi
retn
sub_402f58
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
push esi
xor esi esi
push 0xf
mov [ rw-data ] eax
mov [ ebp - 0x3c ] 0x30
mov [ ebp - 0x38 ] 0x2b
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] 0x1e
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] esi
call [ GetSysColorBrush@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x34 ] sub_41ad5c
call [ RegisterClassExW@IAT ]
push r--data
mov [ rw-data ] ax
call [ RegisterWindowMessageW@IAT ]
mov [ rw-data ] eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] 0x8
mov [ ebp - 0x8 ] 0x13b
call [ InitCommonControlsEx@IAT ]
push 0x1
push 0x1
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
push 0xa9
push [ rw-data ]
mov [ rw-data ] eax
call [ LoadIconW@IAT ]
push eax
push 0xffffffff
push [ rw-data ]
call [ ImageList_ReplaceIcon@IAT ]
mov [ rw-data ] esi
pop esi
leave
retn 0xc
sub_403029
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x160 ]
xor ebx ebx
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
mov ecx edi
call sub_40d9f2
lea ecx [ esi + 0x178 ]
call sub_402b6e
lea edi [ esi + 0x16c ]
mov ecx edi
call sub_45d058
jmp r-xdata
cmp [ esi + 0x188 ] ebx
jne r-xdata
cmp [ edi ] ebx
jne r-xdata
lea ecx [ esi + 0x188 ]
call sub_440fe1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_403097
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ ecx + 0x38 ]
push ecx
call sub_402db5
mov ecx esi
test esi esi
jne r-xdata
pop esi
retn
sub_4030a5
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push 0xf
call [ GetSysColorBrush@IAT ]
push 0x7f00
push 0x0
mov edi eax
call [ LoadCursorW@IAT ]
mov esi [ LoadIconW@IAT ]
push 0x63
push [ rw-data ]
mov ebx eax
call esi
push 0xa4
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa2
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
push 0x4
jmp r-xdata
push 0xffffffff
push ecx
push ecx
call sub_40318a
mov ecx eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
add esp 0xc
xor edx edx
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ rw-data ] ecx
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x23
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x28 ] sub_4029c2
call [ RegisterClassExW@IAT ]
push [ rw-data ]
mov [ rw-data ] ax
push [ rw-data ]
push ecx
call sub_402f58
pop edi
pop esi
pop ebx
leave
retn
sub_40318a
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
and [ rw-data ] 0x0
push 0x10
pop esi
push 0x63
push sub_447212
push 0xe
push 0x0
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] eax
call [ EnumResourceNamesW@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push 0x10
pop esi
pop edi
pop esi
leave
retn
push eax
jmp r-xdata
push esi
push esi
push 0x1
push 0x63
push edi
call [ LoadImageW@IAT ]
sub_4031b8
push ebp
mov ebp esp
push ecx
push edi
mov edi edx
cmp ecx edi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0x104
push ecx
call [ GetFullPathNameW@IAT ]
mov ecx edi
call sub_4021bc
jmp r-xdata
push esi
call sub_403bcf
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0x104
push esi
call [ GetFullPathNameW@IAT ]
mov ecx edi
call sub_4021bc
push esi
call j_sub_4228ca#2
pop ecx
pop esi
pop edi
leave
retn
sub_4031f2
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x10 ]
push ebx
push 0x1
push 0x0
call [ CreateStreamOnHGlobal@IAT ]
test eax eax
js r-xdata
pop esi
pop ebx
leave
retn
push edi
push 0x0
push r--data
push 0xa
push [ esi + 0xc ]
call [ FindResourceExW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push [ esi + 0xc ]
call [ LoadResource@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
push edi
push [ esi + 0xc ]
call [ SizeofResource@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ ebp - 0x4 ]
call [ LockResource@IAT ]
test eax eax
je r-xdata
mov ecx [ ebx ]
push 0x0
mov edx [ ecx ]
push edi
push eax
push ecx
call [ edx + 0x10 ]
mov eax [ ebx ]
xor edx edx
mov ecx [ eax ]
push edx
push edx
push edx
push edx
push eax
call [ ecx + 0x14 ]
mov [ esi + 0x14 ] 0x1
jmp r-xdata
sub_40322e
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
call sub_40325d
mov esi [ esi + 0x488 ]
mov [ ebp - 0x4 ] esi
mov ecx [ esi ]
call sub_44a3d2
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_468b5a
mov esi [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn
push ecx
mov eax esp
lea ecx [ ebp - 0x4 ]
and [ eax ] 0x0
call sub_402e2a
test al al
jne r-xdata
sub_40325d
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ecx + 0x4 ]
mov [ ebp - 0x4 ] esi
mov ecx [ esi ]
call sub_45592d
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_468b5a
mov esi [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn
push ecx
mov eax esp
lea ecx [ ebp - 0x4 ]
and [ eax ] 0x0
call sub_402e2a
test al al
jne r-xdata
sub_4032b4
push edi
mov edi ecx
mov ecx [ edi ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
and [ edi + 0x8 ] 0x0
pop edi
retn
mov esi [ ecx + 0x4 ]
push ecx
call sub_4548bd
mov ecx esi
test esi esi
jne r-xdata
pop esi
jmp r-xdata
sub_4032c9
push edi
mov edi ecx
mov ecx [ edi ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
and [ edi + 0x8 ] 0x0
pop edi
retn
mov esi [ ecx + 0x4 ]
push ecx
call sub_44d307
mov ecx esi
test esi esi
jne r-xdata
pop esi
jmp r-xdata
sub_4032de
push ebp
mov ebp esp
push ecx
push ebx
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x2000
mov edi ecx
mov [ ebp - 0x4 ] ebx
call [ SystemParametersInfoW@IAT ]
mov eax [ ebp - 0x4 ]
push 0x2
push ebx
push ebx
push 0x2001
mov [ edi + 0x4 ] eax
call [ SystemParametersInfoW@IAT ]
pop edi
pop ebx
leave
retn
sub_403320
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0xc ] 0x5
mov ecx esi
je r-xdata
call sub_4143a0
jmp r-xdata
call sub_40342c
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov ecx [ esi ]
xor edi edi
mov eax [ ecx + 0x210 ]
mov [ ecx + 0x20c ] eax
mov eax [ esi ]
mov [ eax + 0x8 ] 0x1
mov eax [ esi ]
cmp [ eax + 0x20c ] edi
jle r-xdata
mov ecx esi
call sub_40346e
test edi edi
jle r-xdata
mov eax [ esi ]
xor ecx ecx
mov eax [ eax + 0x8 ]
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ esi ]
push 0x4
mov [ ecx ] eax
call sub_42010a
mov ecx eax
add esp 0x8
test ecx ecx
je r-xdata
mov ecx eax
mov edx 0xc
jmp r-xdata
push ebx
lea ebx [ ebp + 0xc ]
nop
xor ecx ecx
jmp r-xdata
mov [ ecx ] 0x1
mov eax [ edx + ecx + 0x100 ]
mov [ edx + ecx ] eax
mov ecx [ esi ]
mov eax [ edx + ecx ]
imul eax [ ecx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov ecx [ esi ]
cmp [ ecx + 0x8 ] 0x1000000
jg r-xdata
push [ ebx + 0x4 ]
lea ebx [ ebx + 0x4 ]
mov ecx esi
call sub_403489
dec edi
jne r-xdata
pop ebx
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi ]
xor eax eax
cmp [ ecx + 0x8 ] eax
jle r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn
mov ecx [ ecx ]
inc eax
mov [ ecx + eax * 4 - 0x4 ] 0x0
mov ecx [ esi ]
cmp eax [ ecx + 0x8 ]
jl r-xdata
pop edi
xor al al
pop esi
pop ebp
retn
inc edi
add edx 0x4
cmp edi [ ecx + 0x20c ]
jl r-xdata
sub_40342c
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x5
je r-xdata
pop esi
retn
call sub_412570
push 0x214
call sub_42010a
mov [ esi ] eax
pop ecx
xor ecx ecx
mov [ eax ] ecx
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
mov eax [ esi ]
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
mov [ eax + 0x20c ] ecx
mov eax [ esi ]
mov [ eax + 0x210 ] ecx
mov [ esi + 0xc ] 0x5
sub_403489
push ebp
mov ebp esp
cmp [ ecx + 0xc ] 0x5
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ecx ]
push esi
mov esi [ edx + 0x210 ]
cmp esi 0x40
jge r-xdata
pop ebp
retn 0x4
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx + esi * 4 + 0x10c ] eax
mov eax [ ecx ]
inc [ eax + 0x210 ]
mov al 0x1
pop esi
sub_4034c1
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
inc ebx
xor eax eax
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] al
call sub_403f9b
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push r--data
lea ecx [ ebp - 0x1c ]
call sub_44cc82
test eax eax
je r-xdata
xor bl bl
push [ ebp + 0xc ]
call sub_4228ca
pop ecx
lea ecx [ ebp - 0x1c ]
call sub_403e39
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_403e39
jmp r-xdata
mov al bl
pop ebx
leave
retn 0x8
sub_4034f3
push ebp
mov ebp esp
sub esp 0x218
call sub_40a716
test al al
je r-xdata
or eax 0xffffffff
jmp r-xdata
call sub_4021dd
test eax eax
js r-xdata
leave
retn 0x8
call sub_405460
test eax eax
js r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x218 ]
push eax
push 0x104
push [ ebp + 0x8 ]
call [ GetFullPathNameW@IAT ]
lea eax [ ebp - 0x218 ]
push eax
mov ecx rw-data
call sub_407e53
push [ ebp - 0x4 ]
mov ecx rw-data
call sub_407e53
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov [ eax - 0x2 ] cx
cmp [ ebp - 0x214 ] cx
je r-xdata
lea eax [ ebp - 0x218 ]
push r--data
push eax
call sub_421914
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x218 ]
push eax
mov ecx rw-data
call sub_407e53
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
xor eax eax
sub_403588
cmp [ rw-data ] 0x0
jne r-xdata
push esi
jmp r-xdata
retn
mov eax [ rw-data ]
mov ecx rw-data
mov esi [ eax ]
call sub_446417
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ecx
mov ecx esi
call sub_468ba4
pop esi
retn
sub_403598
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3bc
push ebx
push esi
push edi
push 0x3b4
xor ebx ebx
lea eax [ esp + 0x18 ]
push ebx
push eax
mov esi ecx
mov [ esp + 0x1c ] 0x3a8
call sub_421970
add esp 0xc
cmp [ esi + 0x198 ] ebx
jne r-xdata
cmp [ esi + 0x1a4 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x198 ] eax
cmp [ esi + 0x1b0 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x1a4 ] eax
mov [ esi + 0x1a8 ] eax
lea ebx [ esi + 0x1a0 ]
push ebx
lea edi [ esi + 0x19c ]
push edi
call sub_4038c4
mov eax [ rw-data ]
xor ecx ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x1c ] 0x3
mov [ esp + 0x20 ] 0x401
mov [ esp + 0x24 ] ecx
cmp [ esi + 0x40 ] ecx
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x1b0 ] eax
push ebx
push [ esi + 0x3c ]
mov ecx esi
push [ esi + 0x10 ]
call sub_446237
xor ecx ecx
mov [ esp + 0x24 ] eax
mov [ edi ] eax
cmp [ esi + 0x40 ] ecx
je r-xdata
mov eax [ esi + 0x198 ]
mov [ esp + 0x24 ] eax
mov [ edi ] eax
cmp eax ecx
jne r-xdata
push 0x1
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
push ecx
call [ Shell_NotifyIconW@IAT ]
mov [ rw-data ] 0x1
cmp [ rw-data ] 0x1
lea eax [ esp + 0x10 ]
push eax
je r-xdata
jmp r-xdata
mov ecx esi
call sub_4038e4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403682
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ rw-data ]
sub esp 0x20
cmp [ eax + 0x1d ] 0x0
push esi
push edi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
xor edi edi
xor esi esi
inc esi
lea ecx [ esp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x8 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] esi
call sub_412570
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x6
mov [ esp + 0x8 ] eax
call [ IsThemeActive@IAT ]
push sub_43b35d
mov [ rw-data ] eax
call sub_422025
pop ecx
push esi
call sub_42208d
pop ecx
mov ecx [ rw-data ]
call sub_4032de
push [ ebp + 0x10 ]
call sub_40374e
mov eax [ rw-data ]
push 0x2
push [ eax + 0x4 ]
push edi
push 0x2001
call [ SystemParametersInfoW@IAT ]
mov esi [ rw-data ]
lea ecx [ esp + 0x18 ]
call sub_412570
lea ecx [ esp + 0x8 ]
call sub_412570
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_40374e
push ebp
mov ebp esp
sub esp 0x440
push ebx
push esi
push edi
lea eax [ ebp - 0x22c ]
push eax
xor bl bl
push 0x104
mov [ ebp - 0x5 ] bl
xor bh bh
call [ GetCurrentDirectoryW@IAT ]
lea eax [ ebp - 0x6 ]
push eax
push [ ebp + 0x8 ]
call sub_404257
call [ IsDebuggerPresent@IAT ]
test eax eax
jne r-xdata
push 0x10
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
or [ rw-data ] 0xffffffff
jmp r-xdata
xor edi edi
inc edi
mov esi rw-data
cmp eax edi
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
push 0xffffffff
push [ rw-data ]
mov ecx esi
push edi
call sub_442f5b
mov al [ rw-data ]
mov [ rw-data ] al
jmp r-xdata
lea eax [ ebp - 0x5 ]
push eax
push ecx
push rw-data
push rw-data
mov ecx esi
call sub_403bff
test al al
je r-xdata
push [ rw-data ]
push rw-data
call sub_4034f3
test eax eax
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov al [ rw-data ]
mov bh [ rw-data ]
push rw-data
mov [ rw-data ] al
lea eax [ ebp - 0x43c ]
push eax
push 0x104
push rw-data
call [ GetFullPathNameW@IAT ]
mov bl [ ebp - 0x5 ]
mov ecx esi
call sub_402c7d
lea eax [ ebp - 0x22c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov [ rw-data ] edi
jmp r-xdata
cmp bh 0x1
je r-xdata
call sub_43be31
test al al
jne r-xdata
call sub_4030a5
call sub_402e9d
cmp [ rw-data ] 0x0
mov ebx rw-data
jne r-xdata
cmp [ ebp - 0x6 ] al
jne r-xdata
push edi
mov ecx rw-data
call sub_40e1f0
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx ebx
call sub_403598
push 0x104
lea eax [ ebp - 0x43c ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x18 ]
call sub_40caee
lea ecx [ ebp - 0x18 ]
test bl bl
je r-xdata
mov ecx esi
call sub_402c7d
mov ecx ebx
call sub_402b94
push [ ebp + 0x8 ]
call sub_4039e8
push edi
mov edi r--data
push edi
call sub_4039e8
push rw-data
lea ecx [ ebp - 0x18 ]
call sub_4039e8
push edi
lea ecx [ ebp - 0x18 ]
call sub_4039e8
push 0x1
jmp r-xdata
lea eax [ ebp - 0x22c ]
push eax
push [ ebp - 0x18 ]
lea eax [ ebp - 0x43c ]
push eax
push r--data
call [ GetForegroundWindow@IAT ]
push eax
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x18 ]
call sub_405cd3
jmp r-xdata
sub_40387e
push esi
mov esi rw-data
push ecx
call sub_44aa9c
and [ esi ] 0x0
jmp r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
push rw-data
push rw-data
call sub_4038c4
push rw-data
push rw-data
call sub_4038c4
pop esi
jmp sub_403588
sub_4038c4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
and [ edi ] 0x0
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x8
push [ edi ]
call [ DestroyIcon@IAT ]
jmp r-xdata
sub_4038e4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4cc
cmp [ rw-data ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x104
lea ecx [ esp + 0xc ]
call sub_407b6e
cmp [ rw-data ] 0x1
je r-xdata
push 0x7f
lea eax [ esp + 0x1c ]
push eax
push 0x65
push [ rw-data ]
call [ LoadStringW@IAT ]
jmp r-xdata
xor eax eax
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0xc ]
call sub_407e53
cmp [ rw-data ] 0x0
lea ecx [ esp + 0x8 ]
jne r-xdata
push [ rw-data ]
call sub_4039e8
mov esi [ rw-data ]
push esi
call sub_443438
test eax eax
je r-xdata
cmp [ esi + 0x60 ] 0x0
jne r-xdata
push 0x3b4
lea eax [ esp + 0x120 ]
push 0x0
push eax
call sub_421970
mov eax [ rw-data ]
mov edx [ esp + 0x14 ]
xor esi esi
inc esi
push 0x80
lea ecx [ esp + 0x28 ]
mov [ esp + 0x128 ] 0x3a8
mov [ esp + 0x12c ] eax
mov [ esp + 0x130 ] esi
mov [ esp + 0x134 ] 0x4
call sub_403b1e
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x144 ]
push eax
call sub_421943
add esp 0x18
lea eax [ esp + 0x118 ]
push eax
push esi
call [ Shell_NotifyIconW@IAT ]
lea ecx [ esp + 0x8 ]
call sub_405cd3
push r--data
lea ecx [ esp + 0xc ]
call sub_4039e8
push esi
call sub_443438
push eax
lea ecx [ esp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x5c ]
push eax
call sub_40c935
jmp r-xdata
push [ rw-data ]
call sub_4039e8
sub_4039e8
push ebp
mov ebp esp
push edi
mov edi ecx
call sub_408176
test al al
jne r-xdata
mov eax [ edi + 0xc ]
push esi
dec [ eax ]
mov ecx edi
call sub_40a6f8
push [ ebp + 0x8 ]
call sub_4218fb
pop ecx
mov ecx [ edi + 0x4 ]
inc ecx
add eax ecx
push eax
call sub_40c91c
xor ecx ecx
push 0x2
pop edx
mov [ edi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_41faa0
add esp 0x10
mov [ edi ] esi
pop esi
jmp r-xdata
push ecx
push [ ebp + 0x8 ]
mov ecx edi
call sub_403a0b
pop edi
pop ebp
retn 0x4
sub_403a0b
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_4218fb
pop ecx
mov ecx edi
mov ebx eax
call sub_408176
test al al
jne r-xdata
mov ecx [ edi + 0xc ]
push esi
dec [ ecx ]
mov ecx edi
call sub_40a6f8
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
push eax
call sub_40c91c
xor ecx ecx
push 0x2
pop edx
mov [ edi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_41faa0
add esp 0x10
mov [ edi ] esi
pop esi
jmp r-xdata
mov eax [ edi + 0x4 ]
add eax ebx
push eax
mov ecx edi
call sub_40bd71
mov ecx [ edi + 0x4 ]
lea eax [ ebx + ebx ]
push eax
mov eax [ edi ]
push [ ebp + 0x8 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_41faa0
add [ edi + 0x4 ] ebx
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
add esp 0xc
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x8
sub_403a67
push ebp
mov ebp esp
sub esp 0x424
lea eax [ ebp - 0x4 ]
push ebx
push esi
push edi
push eax
mov edi edx
mov ebx ecx
xor esi esi
call [ SHGetMalloc@IAT ]
test eax eax
jne r-xdata
push 0x105
mov edx ebx
mov ecx edi
call sub_403b1e
pop ecx
xor al al
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ SHGetDesktopFolder@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
test esi esi
je r-xdata
push 0x105
mov edx ebx
lea ecx [ ebp - 0x218 ]
call sub_403b1e
mov eax [ ebp - 0xc ]
pop ecx
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x8 ]
push edx
push esi
lea edx [ ebp - 0x218 ]
push edx
push esi
push esi
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov al 0x1
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x424 ]
push eax
push [ ebp - 0x8 ]
call [ SHGetPathFromIDListW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
push 0x105
lea edx [ ebp - 0x424 ]
mov ecx edi
call sub_403b1e
pop ecx
sub_403b1e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
lea eax [ esi - 0x1 ]
push eax
push edx
push edi
call sub_422c1d
add esp 0xc
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
sub_403b45
push ebp
mov ebp esp
sub esp 0x210
lea eax [ ebp - 0x4 ]
push esi
push edi
push eax
lea eax [ ebp - 0x210 ]
push eax
push 0x104
push [ ebp + 0x8 ]
mov edi ecx
call [ GetFullPathNameW@IAT ]
xor esi esi
cmp [ edi + 0x20 ] esi
ja r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x210 ]
mov eax [ eax + esi * 4 ]
push ecx
push [ eax ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x210 ]
call sub_403bcf
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ edi + 0x18 ]
call sub_40197e
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x28 ]
mov [ ebp + 0x8 ] 0x1
call sub_40197e
mov eax [ edi + 0x20 ]
dec eax
mov ecx [ edi + 0x2c ]
mov eax esi
mov ecx [ ecx + esi * 4 ]
inc [ ecx ]
jmp r-xdata
inc esi
cmp esi [ edi + 0x20 ]
jb r-xdata
pop edi
pop esi
leave
retn 0x4
jmp r-xdata
sub_403bcf
push esi
push edi
mov edi ecx
push edi
call sub_4218fb
xor ecx ecx
push 0x2
inc eax
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
push edi
push esi
call sub_421943
add esp 0x10
mov eax esi
pop edi
pop esi
retn
sub_403bff
push ebp
mov ebp esp
mov al [ rw-data ]
sub esp 0x58
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
xor ecx ecx
mov [ edi + 0x2 ] al
cmp [ esi ] cx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x58
mov [ eax ] 0x1
push ecx
lea eax [ ebp - 0x58 ]
push eax
call sub_421970
and [ ebp - 0x54 ] 0x0
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] 0x58
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] 0x104
mov [ ebp - 0x4c ] r--data
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x24 ] 0x1804
mov [ ebp - 0x1c ] r--data
call [ GetOpenFileNameW@IAT ]
test eax eax
jne r-xdata
mov edx esi
mov ecx esi
call sub_4031b8
mov edx esi
mov ecx esi
call sub_403a67
push [ ebp + 0xc ]
mov ecx edi
push esi
call sub_403b45
push eax
push esi
mov ecx edi
call sub_403dcb
xor al al
jmp r-xdata
pop edi
pop esi
leave
retn 0x10
sub_403c4b
push esi
push edi
mov edi ecx
lea ecx [ edi + 0x14 ]
call sub_407dd0
and [ edi ] 0x0
lea ecx [ edi + 0x14 ]
mov [ edi + 0x24 ] 0x0
call sub_407da8
lea ecx [ edi + 0x4 ]
pop edi
pop esi
jmp sub_405cd3
sub_403c70
push ebx
push esi
mov esi ecx
xor ebx ebx
lea ecx [ esi + 0x4 ]
mov [ esi ] ebx
call sub_40d3d2
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x14 ] r--data
mov [ esi + 0x24 ] bl
mov eax esi
pop esi
pop ebx
retn
sub_403c98
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp eax 0x6
jge r-xdata
xor ecx ecx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov edx [ esi ]
pop ecx
xor ecx ecx
mov [ esi + 0x8 ] eax
cmp [ esi + 0xc ] ecx
jle r-xdata
pop esi
leave
retn
push ebx
push edi
mov eax [ esi + 0x8 ]
mov [ eax + ecx * 4 ] edx
mov edx [ edx + 0x24 ]
inc ecx
cmp ecx [ esi + 0xc ]
jl r-xdata
pop edi
pop ebx
jmp r-xdata
mov edx [ esi + 0x8 ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov ebx [ edx + ecx * 4 ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ebx
cmp edx [ ebx + 0x4 ]
ja r-xdata
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov edi [ ebx ]
mov ebx [ eax ]
mov [ ebp - 0x8 ] edx
test edx edx
je r-xdata
mov edi [ ebp - 0xc ]
cmp edx [ edi + 0x4 ]
jb r-xdata
mov ax [ ebx ]
cmp ax [ edi ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] eax
mov eax [ esi + 0x8 ]
mov bl 0x1
mov [ ebp - 0x1 ] bl
mov [ eax + ecx * 4 + 0x4 ] edi
jmp r-xdata
jmp r-xdata
jb r-xdata
add ebx 0x2
add edi 0x2
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ esi + 0xc ]
inc ecx
dec eax
cmp ecx eax
jl r-xdata
mov bl [ ebp - 0x1 ]
mov edi [ ebp - 0xc ]
test bl bl
jne r-xdata
mov eax [ esi + 0xc ]
xor bl bl
xor ecx ecx
dec eax
mov [ ebp - 0x1 ] bl
test eax eax
jle r-xdata
sub_403d65
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push [ esi ]
push [ ebp + 0x8 ]
call sub_404ca0
mov [ esi ] eax
test eax eax
setne al
pop esi
pop ebp
retn 0x8
sub_403d9b
push edi
mov edi ecx
mov ecx [ edi ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
and [ edi + 0x8 ] 0x0
pop edi
retn
mov esi [ ecx + 0x4 ]
push ecx
call sub_401962
mov ecx esi
test esi esi
jne r-xdata
pop esi
jmp r-xdata
sub_403dcb
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push 0x1
mov edi ecx
push esi
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x54 ] bl
call sub_403f9b
test eax eax
je r-xdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp + 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x68 ]
call sub_44cc82
test eax eax
je r-xdata
push 0x2
push esi
lea ecx [ ebp - 0x68 ]
call sub_403f9b
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
or ecx 0xffffffff
mov eax [ eax ]
push 0x4
mov [ edi + 0x10 ] eax
inc eax
pop esi
mov [ ebp - 0x18 ] cx
mov [ ebp + 0xc ] eax
xor ecx ecx
push 0x10
pop edx
mul edx
seto cl
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
neg ecx
or ecx eax
xor eax eax
add ecx esi
setb al
neg eax
or eax ecx
push eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x68 ]
call sub_403e39
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x4
je r-xdata
mov eax ebx
mov ecx [ ebp + 0xc ]
push sub_41ac85
push ecx
mov [ eax ] ecx
add eax esi
push 0x10
pop edx
mov ecx eax
mov [ ebp + 0xc ] eax
call sub_41ac65
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0xc
movzx eax [ edi + 0x2 ]
push eax
push ecx
mov ecx [ edi + 0x58 ]
call sub_44757b
pop ecx
pop ecx
jmp r-xdata
push ebx
push r--data
push esi
push [ ebp + 0xc ]
mov ecx edi
push esi
mov [ eax ] 0x2
call sub_40bdf0
mov bl al
push [ ebp + 0x10 ]
call sub_4228ca
pop ecx
lea ecx [ ebp - 0x68 ]
call sub_403e39
mov bl 0x1
mov [ ebp - 0x8 ] 0x10
mov [ edi + 0x44 ] eax
or eax 0xffffffff
mov [ ebp - 0x16 ] ax
xor eax eax
inc eax
mov [ ebp - 0xc ] eax
cmp [ edi + 0x10 ] eax
jl r-xdata
lea ecx [ ebp - 0x20 ]
call sub_44a5a8
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
add eax esi
add esi 0x4
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_44a592
test al al
je r-xdata
mov ecx [ ebp + 0x10 ]
add ecx esi
add esi 0x8
mov eax [ ecx ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_40b6d0
cmp [ ebp - 0x14 ] 0x7f
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_41df5b
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
add eax esi
add esi 0x8
fld [ eax ]
fstp [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax esi
inc esi
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0xc ] esi
mov [ ebp - 0x14 ] eax
call sub_40b7ff
lea ecx [ ebp - 0x20 ]
call sub_44a5be
test al al
je r-xdata
mov ecx [ edi + 0x44 ]
add ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x30 ]
push eax
call sub_40a870
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ edi + 0x10 ]
jle r-xdata
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x10 ]
call sub_4430ac
mov esi eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esi
push esi
cmp eax 0x31
jne r-xdata
lea ecx [ ebp - 0x30 ]
call sub_443460
cmp eax 0x30
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_40caee
mov ecx [ edi + 0x4 ]
push [ ebp - 0x40 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
lea ecx [ ebp - 0x40 ]
mov esi eax
call sub_405cd3
push 0x1
jmp r-xdata
cmp eax 0x37
jne r-xdata
lea ecx [ ebp - 0x50 ]
call sub_40caee
lea eax [ ebp - 0x50 ]
push eax
call sub_4434b4
lea ecx [ ebp - 0x50 ]
mov esi eax
call sub_405cd3
push ebx
lea ecx [ ebp - 0x20 ]
call sub_40b7ff
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x10 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_44a525
mov ecx edi
call sub_442fcd
test eax eax
je r-xdata
push esi
call j_sub_4228ca#2
mov esi [ ebp + 0xc ]
pop ecx
mov eax [ ebp - 0xc ]
push r--data
push r--data
push eax
push [ ebp + 0x8 ]
mov ecx edi
call sub_4432b0
push esi
call j_sub_4228ca#2
pop ecx
push [ ebp + 0x10 ]
call sub_4228ca
pop ecx
lea ecx [ ebp - 0x68 ]
call sub_403e39
jmp r-xdata
push esi
call j_sub_4228ca#2
mov esi [ ebp + 0xc ]
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405800
lea ecx [ ebp - 0x20 ]
call sub_44a46f
jmp r-xdata
sub_403e39
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
jne r-xdata
push [ esi ]
call sub_424274
pop ecx
mov [ esi ] ebx
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov [ esi + 0x10 ] ebx
jmp r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
push [ esi + 0xc ]
call [ FreeLibrary@IAT ]
mov [ esi + 0xc ] ebx
jmp r-xdata
mov [ esi + 0x14 ] bl
pop esi
pop ebx
retn
sub_403e78
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
lea ecx [ ebp - 0xc ]
call sub_403eb3
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop esi
je r-xdata
push [ esi ]
lea ecx [ ebp - 0xc ]
call sub_403ef0
call eax
leave
retn
push [ ebp - 0xc ]
call [ FreeLibrary@IAT ]
sub_403ec5
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_403f32
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_403f5d
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
xor eax eax
lea ecx [ ebp - 0xc ]
mov [ esi ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
call sub_403f20
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_403f08
call eax
mov eax esi
pop esi
leave
retn
push [ ebp - 0xc ]
call [ FreeLibrary@IAT ]
sub_403f9b
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x4 ]
call sub_403f5d
push r--data
push [ ebp + 0x8 ]
call sub_424129
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov ecx esi
call sub_403e39
lea ecx [ ebp - 0x4 ]
call sub_403e78
xor eax eax
inc eax
jmp r-xdata
push 0x2
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
lea ecx [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
call sub_403e78
cmp [ ebp + 0xc ] 0x1
mov ecx esi
sete al
push eax
call sub_404010
mov edi eax
mov ecx esi
test edi edi
je r-xdata
pop edi
pop esi
leave
retn 0x8
push [ esi ]
lea eax [ ebp - 0x14 ]
push 0x10
push 0x1
push eax
call sub_40417d
push 0x99f2
push 0x10
lea eax [ ebp - 0x14 ]
push eax
call sub_44c846
push [ esi ]
and [ esi + 0x8 ] 0x0
mov ecx esi
call sub_4041cb
mov [ esi + 0x4 ] eax
xor eax eax
jmp r-xdata
call sub_403e39
mov eax edi
sub_404010
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x10000
mov ebx ecx
call sub_42010a
add esp 0x4
lea ecx [ ebp - 0x14 ]
push eax
call sub_404bce
xor edx edx
movzx eax [ edx + rw-data ]
mov [ ebp + edx - 0x28 ] al
movzx eax [ edx + rw-data ]
mov [ ebp + edx - 0x20 ] al
inc edx
cmp edx 0x8
jl r-xdata
push 0x4
lea eax [ ebp - 0x18 ]
push rw-data
push eax
call sub_41faa0
add esp 0xc
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
mov ecx ebx
je r-xdata
push [ ebx ]
mov ecx ebx
call sub_4041cb
mov esi eax
mov [ ebp + 0x8 ] eax
lea ebx [ ebx ]
call sub_44d03f
jmp r-xdata
call sub_4031f2
jmp r-xdata
mov ecx 0x18
jmp r-xdata
mov ecx 0x10000
push [ ebx ]
push ecx
push 0x1
push [ ebp - 0x14 ]
mov ecx ebx
call sub_40417d
mov [ ebp - 0x8 ] eax
cmp eax 0x18
jl r-xdata
mov esi 0x3
lea edi [ eax - 0x14 ]
xor edx edx
test edi edi
jle r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov esi [ ebp - 0x14 ]
add esi 0x2
push 0x1
add esi 0xffffffec
push 0xffffffec
push [ ebx ]
add esi eax
mov ecx ebx
mov [ ebp + 0x8 ] esi
call sub_4041a7
jmp r-xdata
mov cl [ ebp + eax - 0x28 ]
cmp cl [ esi + eax - 0x2 ]
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov cl [ ebp + eax - 0x27 ]
cmp cl [ esi + eax - 0x1 ]
je r-xdata
cmp eax 0x14
je r-xdata
mov cl [ ebp + eax - 0x26 ]
cmp cl [ esi + eax ]
je r-xdata
inc eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x14
push 0x0
add eax edx
push eax
push [ ebx ]
mov ecx ebx
call sub_4041a7
push [ ebx ]
lea eax [ ebp - 0xc ]
push 0x1
push 0x4
push eax
mov ecx ebx
call sub_40417d
cmp [ ebp - 0xc ] 0x36304145
je r-xdata
inc edx
inc esi
cmp edx edi
jl r-xdata
mov cl [ ebp + eax - 0x25 ]
cmp cl [ esi + eax + 0x1 ]
jne r-xdata
add eax 0x2
jmp r-xdata
xor esi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0x3
jmp r-xdata
mov cl [ ebp + eax - 0x24 ]
cmp cl [ esi + eax + 0x2 ]
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_404fd2
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add eax 0x5
cmp eax 0x14
jl r-xdata
add eax 0x4
jmp r-xdata
jmp r-xdata
sub_40417d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx [ ecx ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
push ecx
call [ edx + 0xc ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4244ae
add esp 0x10
leave
retn 0x10
sub_4041a7
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ecx + 0x10 ]
push esi
mov esi [ ecx ]
push edi
lea edi [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
cdq
push edx
push eax
push ecx
call [ esi + 0x14 ]
mov eax [ ebp - 0x8 ]
pop edi
pop esi
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42471d
add esp 0xc
leave
retn 0xc
sub_4041cb
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ ecx + 0x10 ]
lea edx [ ebp - 0x8 ]
mov ecx [ eax ]
push edx
push 0x1
push 0x0
push 0x0
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
push [ ebp + 0x8 ]
call sub_424af5
pop ecx
leave
retn 0x4
sub_4041e7
push esi
mov esi ecx
dec [ esi + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push [ eax + edx * 4 ]
call j_sub_4228ca#2
mov eax [ esi + 0x4 ]
pop ecx
mov ecx [ esi + 0x8 ]
pop esi
and [ eax + ecx * 4 ] 0x0
retn
sub_404208
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xec ]
call sub_405cbb
lea ecx [ esi + 0xbc ]
call sub_405cd3
lea ecx [ esi + 0xac ]
call sub_405cd3
lea ecx [ esi + 0x9c ]
call sub_405cd3
lea ecx [ esi + 0x8c ]
call sub_405cd3
lea ecx [ esi + 0x8 ]
pop esi
jmp sub_402e39
push ecx
call sub_402dd4
sub_404257
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
lea ecx [ ebp - 0x50 ]
call sub_403c70
push [ ebp + 0x8 ]
xor edi edi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] edi
call sub_40a359
mov ecx [ ebp + 0xc ]
mov al [ ebp - 0x2c ]
push 0x104
mov esi rw-data
push esi
push edi
mov [ ecx ] al
call [ GetModuleFileNameW@IAT ]
push esi
push ecx
call sub_4034c1
mov bl al
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ rw-data ] esi
call sub_408182
push r--data
lea ecx [ ebp - 0x14 ]
call sub_40caee
push edi
push 0x1
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40d380
lea ecx [ ebp - 0x14 ]
call sub_405cd3
lea ecx [ ebp - 0x28 ]
call sub_412570
mov esi r--data
push esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x28 ] edi
call sub_40caee
push edi
push 0x100
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40d380
lea ecx [ ebp - 0x14 ]
call sub_405cd3
push esi
lea ecx [ ebp - 0x14 ]
call sub_40caee
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40d2d2
lea ecx [ ebp - 0x14 ]
call sub_405cd3
mov edi [ ebp - 0x34 ]
lea ecx [ ebp - 0x14 ]
call sub_40d3d2
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_404477
mov esi [ ebp - 0x14 ]
push esi
push r--data
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ rw-data ] 0x1
dec edi
call sub_404477
mov esi [ ebp - 0x14 ]
jmp r-xdata
push esi
push r--data
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ rw-data ] 0x1
dec edi
call sub_404477
mov esi [ ebp - 0x14 ]
jmp r-xdata
push esi
push r--data
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
test bl bl
sete al
push 0x104
push rw-data
push 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] eax
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_404477
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
call sub_40c935
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
sub edi 0x2
call sub_404477
mov esi [ ebp - 0x14 ]
jmp r-xdata
push esi
push r--data
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
push esi
push rw-data
call sub_421943
pop ecx
pop ecx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
dec edi
call sub_404477
jmp r-xdata
test edi edi
js r-xdata
and [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x3
xor edi edi
jmp r-xdata
lea eax [ edi + 0x1 ]
push eax
xor ebx ebx
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_403320
add esp 0xc
push 0x0
push ebx
push 0x0
push [ ebp + 0x8 ]
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] edi
xor esi esi
test edi edi
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_404477
push [ ebp - 0x14 ]
push rw-data
call sub_421943
pop ecx
pop ecx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
sub edi 0x2
call sub_404477
mov esi [ ebp - 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_405cd3
lea ecx [ ebp - 0x28 ]
call sub_412570
lea ecx [ ebp - 0x50 ]
call sub_403c4b
pop edi
pop esi
pop ebx
leave
retn 0x8
inc esi
push esi
push ebx
push 0x0
push [ ebp + 0x8 ]
call sub_4114a0
add esp 0x10
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx eax
call sub_407bef
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_404477
cmp esi edi
jl r-xdata
sub_404477
push ebp
mov ebp esp
mov edx [ ecx ]
cmp edx [ ecx + 0x1c ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_407e53
xor al al
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov eax [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax + edx * 4 ]
call sub_40c935
mov al 0x1
pop ebp
retn 0x4
sub_4044ab
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x1
call sub_404ae8
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
mov ecx ebx
mov [ ebp - 0x40 ] 0x1
call sub_405322
test eax eax
js r-xdata
lea ecx [ ebp - 0x20 ]
call sub_412570
lea ecx [ ebp - 0x30 ]
call sub_412570
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx ebx
call sub_44d520
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x38 ]
mov esi [ edx ]
dec esi
xor eax eax
mov [ ebp + 0xc ] esi
mov [ ebp - 0x3c ] esi
mov ecx eax
mov bl al
cmp [ ebp - 0x1 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x38 ] edi
je r-xdata
test bl bl
jne r-xdata
lea eax [ edi + 0x1 ]
mov [ edx ] eax
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ edx ] eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebx + 0x160 ]
call sub_404b02
mov eax [ eax + 0x4 ]
xor esi esi
mov eax [ eax ]
cmp [ eax + 0x8 ] si
jne r-xdata
mov eax [ edx ]
push eax
lea esi [ eax + 0x1 ]
mov [ ebp + 0x8 ] esi
mov [ edx ] esi
call sub_405554
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0x9
je r-xdata
inc ecx
jmp r-xdata
dec eax
jne r-xdata
test ecx ecx
jne r-xdata
dec ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
inc bl
dec edi
jmp r-xdata
sub_4045a7
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea ecx [ edi - 0x4b4 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov [ eax + edi - 0x4b4 ] r--data
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x4b4 ]
mov [ edx + edi - 0x4b8 ] eax
mov eax [ edi - 0x3cc ]
test eax eax
jne r-xdata
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push r--data
call [ mciSendStringW@IAT ]
mov esi ebx
cmp [ edi - 0x2e8 ] ebx
ja r-xdata
mov eax [ edi - 0x2ec ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi - 0x318 ] ebx
ja r-xdata
inc esi
cmp esi [ edi - 0x2e8 ]
jae r-xdata
push [ eax ]
push [ rw-data ]
call [ UnregisterHotKey@IAT ]
mov eax [ edi - 0x2ec ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ edi - 0x31c ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
test eax eax
jne r-xdata
lea ebx [ edi - 0x4b4 ]
mov ecx ebx
call sub_403029
xor esi esi
cmp [ edi - 0x308 ] esi
ja r-xdata
jmp r-xdata
push ecx
call sub_41f902
cmp [ eax ] 0x0
jne r-xdata
inc ebx
cmp ebx [ edi - 0x318 ]
jae r-xdata
mov eax [ edi - 0x30c ]
mov eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
xor esi esi
cmp [ edi - 0x2f8 ] esi
ja r-xdata
push [ eax + 0x8 ]
call [ FindClose@IAT ]
mov eax [ edi - 0x31c ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
push [ eax + 0xc ]
call j_sub_4228ca#2
pop ecx
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4050ec
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
jmp r-xdata
jmp r-xdata
inc esi
cmp esi [ edi - 0x308 ]
jb r-xdata
push [ eax ]
call [ FreeLibrary@IAT ]
mov eax [ edi - 0x2fc ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
lea esi [ edi - 0x2dc ]
mov ecx esi
call sub_412570
xor ecx ecx
mov [ esi + 0xc ] 0x1
mov [ esi ] ecx
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax - 0x4b0 ] ecx
je r-xdata
mov eax [ edi - 0x31c ]
mov eax [ eax + ebx * 4 ]
push [ eax ]
call j_sub_4228ca#2
pop ecx
jmp r-xdata
jmp r-xdata
inc esi
cmp esi [ edi - 0x2f8 ]
jb r-xdata
push 0x8000
push 0x0
push [ eax + 0x10 ]
call [ VirtualFree@IAT ]
mov eax [ edi - 0x2fc ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
call [ CoUninitialize@IAT ]
mov ecx [ edi - 0x20 ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x4 ] ecx
jmp r-xdata
push ecx
call sub_44d323
dec [ ecx + 0x4 ]
jne r-xdata
lea ecx [ edi - 0x2c ]
call sub_4032c9
lea ecx [ edi - 0x3c ]
call sub_402e6d
lea ecx [ edi - 0x5c ]
call sub_405cd3
lea ecx [ edi - 0x198 ]
call sub_404208
lea ecx [ edi - 0x1b4 ]
call sub_402e54
lea ecx [ edi - 0x2bc ]
call sub_402de4
lea ecx [ edi - 0x2cc ]
call sub_405cd3
mov ecx esi
call sub_412570
lea ecx [ edi - 0x2f0 ]
call sub_402e54
lea ecx [ edi - 0x300 ]
call sub_402c64
lea ecx [ edi - 0x310 ]
call sub_402c64
lea ecx [ edi - 0x320 ]
call sub_402e54
lea ecx [ edi - 0x32c ]
call sub_41f8a4
lea ecx [ edi - 0x33c ]
call sub_402c64
lea ecx [ edi - 0x348 ]
call sub_402e8f
lea ecx [ edi - 0x354 ]
call sub_402f47
lea ecx [ edi - 0x364 ]
call sub_405cd3
lea ecx [ edi - 0x37c ]
call sub_405202
lea ecx [ edi - 0x388 ]
call sub_403d9b
lea ecx [ edi - 0x394 ]
call sub_403d9b
lea ecx [ edi - 0x3dc ]
call sub_405cd3
lea ecx [ edi - 0x3ec ]
call sub_405cd3
lea ecx [ edi - 0x3fc ]
call sub_405cd3
lea ecx [ edi - 0x42c ]
call sub_403282
pop edi
pop esi
pop ebx
leave
retn
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ eax - 0x4b4 ]
call sub_402f0e
mov eax [ ebx ]
lea ecx [ edi - 0x4b0 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_402d7f
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax - 0x4b0 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
sub_404825
call sub_40387e
push sub_405cd3
push 0xf
push 0x10
pop edx
mov ecx rw-data
call sub_4057d8
mov ecx rw-data
call sub_402933
mov ecx rw-data
call sub_405cd3
mov ecx rw-data
call sub_405cd3
mov ecx rw-data
call sub_405cd3
mov ecx rw-data
call sub_405cd3
mov ecx rw-data
call sub_405cd3
mov ecx rw-data
call sub_405cd3
mov ecx rw-data
jmp sub_405cd3
sub_40488e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
push eax
mov ecx rw-data
call sub_4048c8
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4048c8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
lea eax [ esp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
lea eax [ esp + 0x20 ]
push eax
push esi
mov ebx ecx
call sub_40cf2c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x60 ]
mov eax [ esp + 0x1c ]
mov edx [ ebx + 0x74 ]
mov eax [ ecx + eax * 4 ]
or [ esp + 0x18 ] 0xffffffff
mov ecx [ eax ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x14 ] ecx
mov eax [ edx + eax * 4 ]
mov edi [ eax ]
mov [ esp + 0x24 ] edi
mov al [ edi + 0x90 ]
mov [ esp + 0x13 ] al
movzx eax al
cmp eax 0x11
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
je r-xdata
sub eax 0x13
je r-xdata
push [ edi + 0x10 ]
push 0x0
push 0x1101
push [ edi + 0x34 ]
call [ SendMessageW@IAT ]
jmp r-xdata
cmp eax 0xc
jg r-xdata
cmp [ edi + 0x38 ] 0x0
mov esi [ ImageList_Destroy@IAT ]
je r-xdata
dec eax
je r-xdata
mov esi [ esp + 0x14 ]
cmp eax 0xe
jl r-xdata
je r-xdata
cmp [ edi + 0x3c ] 0x0
je r-xdata
push [ edi + 0x38 ]
call esi
lea eax [ esp + 0x28 ]
push eax
push [ esp + 0x1c ]
mov [ esp + 0x38 ] esi
mov esi [ SendMessageW@IAT ]
push 0x1053
push [ edi + 0x34 ]
mov [ esp + 0x38 ] 0x1
call esi
cmp eax [ esp + 0x18 ]
je r-xdata
dec eax
dec eax
je r-xdata
push [ edi + 0x44 ]
call [ DeleteObject@IAT ]
jmp r-xdata
cmp [ edi + 0x64 ] 0x0
jne r-xdata
push [ edi ]
call [ DestroyWindow@IAT ]
cmp eax 0xf
jle r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
cmp eax 0x2
jl r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
push [ edi + 0x3c ]
call esi
push 0x0
push eax
push 0x1008
push [ edi + 0x34 ]
call esi
jmp r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
sub eax 0x5
jne r-xdata
push [ edi + 0x64 ]
call [ DeleteObject@IAT ]
jmp r-xdata
cmp [ edi + 0x68 ] 0x0
jne r-xdata
cmp [ esp + 0x13 ] 0xe
jne r-xdata
cmp eax 0x10
jne r-xdata
mov eax [ ecx + 0x1a0 ]
cmp [ edi + 0xc ] eax
jne r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
push 0x3
pop esi
cmp eax esi
jle r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
test edx edx
je r-xdata
lea eax [ edx + 0xc ]
mov [ esp + 0x1c ] eax
dec eax
dec eax
jne r-xdata
push edi
push ecx
call sub_4049ca
push [ edi + 0x68 ]
call [ DestroyIcon@IAT ]
jmp r-xdata
cmp [ edi + 0x50 ] 0x0
jne r-xdata
push 0x0
push esi
push [ edi + 0xc ]
call [ DeleteMenu@IAT ]
test eax eax
jne r-xdata
push 0x2c
lea eax [ esp + 0x48 ]
push 0x0
push eax
mov [ esp + 0x4c ] 0x30
call sub_421970
add esp 0xc
lea eax [ esp + 0x40 ]
push eax
push 0x0
push esi
push [ edi + 0xc ]
mov [ esp + 0x54 ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x40 ] 0x0
je r-xdata
push [ edi + 0xc ]
call [ DestroyMenu@IAT ]
jmp r-xdata
push eax
call [ DestroyMenu@IAT ]
mov esi [ esp + 0x14 ]
and [ esi + 0x1a0 ] 0x0
jmp r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edi + 0xc ]
jne r-xdata
mov eax [ ecx + 0x1c4 ]
test eax eax
jle r-xdata
cmp eax 0xa
je r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ edx + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov eax [ esp + 0x1c ]
inc esi
add eax 0x4
mov [ esp + 0x1c ] eax
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov eax [ edx + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ecx
push edi
mov ecx ebx
call sub_46cefc
jmp r-xdata
push [ edi + 0x50 ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax [ esi + 0x1c ]
je r-xdata
mov esi [ esp + 0x14 ]
push eax
push esi
mov esi [ esp + 0x1c ]
push [ esi + 0x19c ]
call [ DeleteMenu@IAT ]
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov [ esp + 0x24 ] ecx
test ecx ecx
je r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
push [ edi + 0x40 ]
call [ ImageList_Destroy@IAT ]
cmp [ edi + 0x44 ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
mov al [ ecx + 0x90 ]
cmp al 0xf
je r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ ebx + 0x84 ]
cmp eax esi
jl r-xdata
cmp eax 0xb
jne r-xdata
jmp r-xdata
cmp [ edx + 0x90 ] 0x14
jne r-xdata
mov eax [ eax ]
mov edx [ eax ]
test edx edx
je r-xdata
jmp r-xdata
cmp [ edx + 0x90 ] 0x3
jne r-xdata
mov ecx [ esp + 0x18 ]
mov [ esi + 0x1c ] ecx
jmp r-xdata
push eax
mov ecx ebx
call sub_404a54
xor eax eax
inc eax
push [ esi ]
call [ DrawMenuBar@IAT ]
jmp r-xdata
push eax
call [ GetMenuItemCount@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
push esi
mov ecx ebx
call sub_404a54
cmp al 0xe
je r-xdata
and [ ecx + 0x1c4 ] 0x0
jmp r-xdata
mov edx [ esp + 0x18 ]
xor eax eax
mov [ ecx + 0x188 ] eax
mov [ ecx + 0x18c ] edx
mov [ ecx + 0x190 ] edx
mov [ ecx + 0x194 ] eax
mov [ ecx + 0x198 ] al
push [ edi ]
call [ DestroyWindow@IAT ]
cmp [ edi + 0x40 ] 0x0
je r-xdata
mov edi eax
mov eax [ ecx + 0x190 ]
mov [ esp + 0x1c ] eax
movzx eax [ edi + 0x93 ]
push 0x0
push eax
push 0x1308
push [ ecx + 0x188 ]
call [ SendMessageW@IAT ]
mov eax [ esp + 0x14 ]
mov ecx ebx
push [ eax + 0x188 ]
call sub_41b155
mov ecx eax
mov eax [ ebx + 0x74 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
mov eax [ edx + 0x34 ]
cmp eax [ edi ]
jne r-xdata
mov eax [ edx ]
cmp eax [ edi + 0x34 ]
jne r-xdata
push eax
push [ esi ]
call [ SetMenu@IAT ]
push [ esi + 0x19c ]
call [ DestroyMenu@IAT ]
and [ esi + 0x19c ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov eax [ ecx + 0x34 ]
cmp eax [ edi ]
jne r-xdata
and [ ecx + 0xc ] 0x0
jmp r-xdata
push [ edi + 0x40 ]
call [ ImageList_Destroy@IAT ]
jmp r-xdata
dec edi
cmp edi esi
jge r-xdata
cmp [ eax + 0x90 ] 0xb
jne r-xdata
cmp [ ebx + 0x84 ] esi
jl r-xdata
movzx eax [ edi + 0x88 ]
cmp ax [ esp + 0x18 ]
je r-xdata
push esi
mov ecx ebx
call sub_4048c8
mov eax [ ebx + 0x74 ]
push 0x0
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
movsx eax [ ecx + 0x8e ]
push eax
movsx eax [ ecx + 0x8c ]
push eax
movsx eax [ ecx + 0x8a ]
push eax
movsx eax [ ecx + 0x88 ]
push eax
push [ ecx ]
call [ MoveWindow@IAT ]
jmp r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
cmp [ eax + 0xc ] ecx
jne r-xdata
jmp r-xdata
cmp [ ecx + 0x90 ] 0x11
jne r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edi [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
push edi
mov ecx ebx
call sub_4048c8
movzx eax [ edi + 0x93 ]
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
cmp eax ecx
jne r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
cwde
push eax
push ecx
call [ ImageList_Remove@IAT ]
cmp [ eax + 0x90 ] 0xf
jne r-xdata
push esi
mov ecx ebx
call sub_404a54
mov eax [ esp + 0x18 ]
mov [ esi + 0x190 ] eax
movzx eax [ edi + 0x93 ]
cmp ecx eax
jle r-xdata
cmp ecx [ esi + 0x18c ]
je r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov al [ ecx + 0x93 ]
cmp al 0xff
je r-xdata
push esi
mov ecx ebx
call sub_404a54
mov ecx [ esp + 0x24 ]
push ecx
push esi
mov ecx ebx
mov [ edi + 0x93 ] 0xff
call sub_46e1a7
dec [ esi + 0x18c ]
and [ esi + 0x194 ] 0x0
jmp r-xdata
dec ecx
jmp r-xdata
mov dl [ edi + 0x93 ]
cmp al dl
jne r-xdata
jbe r-xdata
cmp [ ecx + 0x90 ] 0xb
je r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
cmp [ edx + 0x90 ] 0xb
jne r-xdata
dec al
mov [ ecx + 0x93 ] al
cmp al dl
push esi
mov ecx ebx
call sub_4048c8
jmp r-xdata
movzx ecx [ edi + 0x88 ]
test cx cx
js r-xdata
movzx eax [ edx + 0x88 ]
test ax ax
js r-xdata
cmp ax cx
jle r-xdata
dec eax
mov [ edx + 0x88 ] ax
mov ecx [ ebx + 0x74 ]
mov [ esp + 0x40 ] 0x2
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
movsx eax [ eax + 0x88 ]
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x40 ]
push eax
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
movzx eax [ eax + 0x93 ]
push eax
mov eax [ esp + 0x1c ]
push 0x133d
push [ eax + 0x188 ]
call [ SendMessageW@IAT ]
sub_4049ca
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x1c8 ]
mov ecx esi
mov [ ebp + 0x8 ] ecx
test esi esi
je r-xdata
push 0x1
push 0x0
push [ edi ]
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x4 ]
test ebx ebx
jne r-xdata
cmp esi [ eax + 0x80 ]
jne r-xdata
push ebx
mov ebx [ ebx + 0x4 ]
call j_sub_4228ca#2
pop ecx
test ebx ebx
jne r-xdata
mov eax [ edi + 0x1c8 ]
cmp esi eax
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ecx ] eax
je r-xdata
mov eax [ esi ]
mov [ edi + 0x1c8 ] eax
mov ecx esi
mov esi [ esi ]
jmp r-xdata
mov esi [ edi + 0x1c8 ]
mov ecx esi
mov eax [ esi ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
mov [ ebp + 0x8 ] ecx
test esi esi
je r-xdata
jmp r-xdata
push esi
call j_sub_4228ca#2
mov eax [ ebp + 0xc ]
pop ecx
test eax eax
je r-xdata
test eax eax
je r-xdata
sub_404a54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ebx edi
mov eax [ esi + 0x74 ]
shl ebx 0x2
mov eax [ ebx + eax ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x74 ]
mov eax [ ebx + eax ]
and [ eax ] 0x0
dec [ esi + 0x80 ]
cmp edi [ esi + 0x84 ]
jne r-xdata
push ecx
call sub_404ad3
cmp [ esi + 0x78 ] 0x3
jbe r-xdata
cmp edi 0x3
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x74 ]
mov eax [ eax + ecx * 4 - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x84 ] edi
jmp r-xdata
mov ecx [ esi + 0x74 ]
add ecx ebx
lea ecx [ esi + 0x70 ]
call sub_4041e7
dec edi
sub ecx 0x4
cmp edi 0x3
jge r-xdata
mov eax [ ecx ]
cmp [ eax ] 0x0
jne r-xdata
sub_404b02
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_45d1da
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push edi
push 0x38
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
inc [ esi ]
pop esi
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_404b40
mov eax [ esi + 0x4 ]
mov [ edi + 0x30 ] eax
mov [ esi + 0x4 ] edi
pop edi
sub_404b40
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi ]
mov edi ecx
mov [ edi ] eax
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
lea ecx [ edi + 0x10 ]
lea eax [ esi + 0x10 ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_4113a0
lea ecx [ edi + 0x20 ]
lea eax [ esi + 0x20 ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_4113a0
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_404b88
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
or [ esi ] 0xffffffff
test [ ebp + 0xc ] 0x2000
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
push 0x80
push 0x3
push ebx
push 0x7
push 0x80000000
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
push ebx
push 0x80
push 0x4
push ebx
push 0x7
push 0xc0000000
push [ eax ]
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
pop esi
mov al bl
pop ebx
pop ebp
retn 0x8
xor ebx ebx
inc ebx
push ebx
push 0x80
push 0x2
push ebx
push 0x7
push 0xc0000000
jmp r-xdata
push 0x2
push ebx
push ebx
mov ecx esi
call sub_404ee9
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp [ esi ] 0xffffffff
je r-xdata
sub_404bce
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push 0x4
mov [ esi ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404bf9
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4050ec
mov eax [ ebp + 0xc ]
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
mov [ esi + 0x28 ] eax
test al 0x3
jne r-xdata
push [ esi + 0x28 ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_404b88
test al al
je r-xdata
or eax 0x2000
mov [ esi + 0x28 ] eax
xor al al
jmp r-xdata
mov ecx esi
call sub_404df0
mov ecx esi
call sub_404dd9
mov ecx esi
call sub_404fef
mov al 0x1
pop esi
pop ebp
retn 0x8
sub_404c4f
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
call sub_41f324
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x1 ] bl
cmp [ esi ] ebx
jbe r-xdata
mov [ esi ] ebx
mov al 0x1
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_404ca0
test eax eax
je r-xdata
mov al [ ebp - 0x1 ]
test al al
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1 ] 0x1
call sub_404d29
inc ebx
cmp ebx [ esi ]
jb r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_404ca0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
call sub_404dc1
jmp r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
test ebx ebx
je r-xdata
add [ esi + 0x10 ] edi
mov eax edi
pop edi
adc [ esi + 0x14 ] 0x0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x8 ]
je r-xdata
push 0x0
lea eax [ ebp + 0xc ]
push eax
push 0x10000
push [ esi + 0x4 ]
push [ esi ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0xc ]
inc edi
mov al [ ecx + eax ]
mov ecx [ ebp + 0x8 ]
mov [ edi + ecx - 0x1 ] al
inc [ esi + 0xc ]
cmp edi ebx
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x0
jmp r-xdata
sub_404d29
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
push esi
mov ecx edi
call sub_40a6f8
mov eax [ edi + 0x4 ]
add eax 0x2
push eax
call sub_403d82
push eax
mov [ edi + 0x8 ] eax
call sub_42010a
mov ecx [ edi + 0x4 ]
inc ecx
push ecx
push [ edi ]
mov esi eax
push esi
call sub_41faa0
add esp 0x10
mov [ edi ] esi
pop esi
jmp r-xdata
mov eax [ edi + 0x4 ]
inc eax
push eax
mov ecx edi
call sub_404d67
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
mov al [ ebp + 0x8 ]
mov [ edx + ecx ] al
inc [ edi + 0x4 ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov [ ecx + eax ] 0x0
mov eax edi
pop edi
pop ebp
retn 0x4
sub_404d67
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
inc eax
cmp [ esi + 0x8 ] eax
jb r-xdata
cmp eax 0x41c2
jae r-xdata
pop esi
leave
retn 0x4
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp eax 0x8000000
jae r-xdata
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov [ esi ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
inc ecx
push ecx
push [ esi ]
push edi
call sub_41faa0
push [ esi ]
call j_sub_4228ca#2
add esp 0x10
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
call sub_471e16
jmp r-xdata
push edi
push eax
mov [ esi + 0x8 ] eax
call sub_403d82
push eax
mov [ esi + 0x8 ] eax
call sub_42010a
cmp [ esi ] 0x0
pop ecx
mov edi eax
je r-xdata
sub_404df0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
mov edi ecx
xor ebx ebx
mov eax [ edi + 0x28 ]
mov [ edi + 0x2c ] ebx
mov [ edi + 0x30 ] ebx
test eax 0x2000
je r-xdata
test al 0x1
je r-xdata
test al 0x10
jne r-xdata
pop edi
pop ebx
leave
retn
jmp r-xdata
test eax 0x180
jne r-xdata
mov [ edi + 0x2c ] 0x4
jmp r-xdata
test al 0x20
jne r-xdata
mov eax [ edi + 0x10 ]
push esi
push ebx
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
push ebx
push ebx
mov [ ebp - 0x4 ] eax
call sub_404ee9
mov esi 0x10000
push esi
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_404bce
push esi
mov esi [ ebp - 0x10 ]
push esi
mov ecx edi
call sub_404ca0
push 0x2
pop edx
cmp eax edx
jb r-xdata
mov [ edi + 0x2c ] 0x1
jmp r-xdata
test al 0x40
jne r-xdata
push 0x3
pop ecx
cmp eax ecx
jb r-xdata
mov cl [ esi ]
cmp cl 0xff
je r-xdata
mov [ edi + 0x2c ] 0x2
jmp r-xdata
test eax eax
je r-xdata
cmp [ esi ] 0xef
je r-xdata
cmp [ esi + 0x1 ] 0xfe
jne r-xdata
cmp cl 0xfe
je r-xdata
push ebx
push [ ebp - 0x4 ]
mov ecx edi
push [ ebp - 0x8 ]
call sub_404ee9
lea ecx [ ebp - 0x10 ]
call sub_404fd2
pop esi
cmp [ edi + 0x2c ] ebx
jne r-xdata
cmp [ esi + 0x1 ] 0xbb
jne r-xdata
mov [ edi + 0x2c ] 0x1
cmp [ esi + 0x1 ] 0xff
jne r-xdata
cmp eax 0x10000
je r-xdata
cmp [ esi + 0x2 ] 0xbf
jne r-xdata
mov [ edi + 0x2c ] edx
jmp r-xdata
test [ edi + 0x28 ] 0x4000
je r-xdata
push eax
push esi
call sub_405010
test al al
jne r-xdata
mov [ edi + 0x30 ] ecx
mov [ edi + 0x30 ] edx
jmp r-xdata
push ebx
push ebx
push ebx
mov ecx edi
call sub_404ee9
mov ecx edi
call sub_41f0b5
mov esi eax
push esi
call sub_42010a
pop ecx
mov ebx eax
push esi
push ebx
mov ecx edi
call sub_404ca0
push eax
push ebx
call sub_405010
test al al
je r-xdata
mov [ edi + 0x30 ] ebx
jmp r-xdata
push ebx
call j_sub_4228ca#2
pop ecx
xor ebx ebx
jmp r-xdata
and [ edi + 0x30 ] 0x0
mov [ edi + 0x2c ] 0x4
mov [ edi + 0x2c ] 0x4
jmp r-xdata
sub_404ee9
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0xc
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
cmp ebx 0x1
je r-xdata
cmp ebx 0x1
je r-xdata
mov ecx edi
call sub_404fb3
mov ecx [ edi + 0x10 ]
sub ecx eax
mov eax [ edi + 0x14 ]
sbb eax edx
mov edx [ ebp + 0xc ]
add esi ecx
adc edx eax
jmp r-xdata
push ebx
push 0x0
push edx
push esi
push [ edi ]
call [ SetFilePointerEx@IAT ]
mov ecx edi
mov esi eax
call sub_404fb3
test esi esi
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
setne al
jmp r-xdata
mov ecx edx
mov [ ebp - 0x8 ] edx
cmp ebx 0x1
je r-xdata
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov esi [ edi + 0x10 ]
add esi [ ebp + 0x8 ]
mov ecx [ edi + 0x14 ]
adc ecx edx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
cdq
sub ebx eax
mov eax [ edi + 0x14 ]
sbb eax edx
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp ecx eax
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
jmp r-xdata
jg r-xdata
mov eax [ edi + 0x8 ]
cdq
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
add [ ebp + 0x10 ] eax
adc edx [ ebp - 0xc ]
sub [ ebp + 0x10 ] 0x1
sbb edx 0x0
cmp ecx edx
jg r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
jl r-xdata
mov ecx esi
sub ecx eax
mov [ edi + 0xc ] ecx
mov ecx [ ebp - 0x8 ]
mov [ edi + 0x10 ] esi
mov [ edi + 0x14 ] ecx
mov al 0x1
cmp esi [ ebp + 0x10 ]
ja r-xdata
sub_404fb3
push ebp
mov ebp esp
push ecx
push ecx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push [ ecx ]
call [ SetFilePointerEx@IAT ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
leave
retn
sub_404fd2
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
pop esi
retn
push [ esi + 0x4 ]
call j_sub_4228ca#2
push [ esi ]
call j_sub_4228ca#2
pop ecx
pop ecx
sub_404fef
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x28 ]
test cl 0x3
jne r-xdata
test cl 0x10
jne r-xdata
pop edi
pop esi
retn
test cl 0x1
je r-xdata
test cl 0x20
je r-xdata
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
test cl 0x40
je r-xdata
push 0x2
pop edi
push edi
push r--data
mov ecx esi
call sub_446852
mov [ esi + 0x2c ] 0x1
jmp r-xdata
test cl cl
jns r-xdata
push 0x2
pop edi
push edi
push r--data
mov ecx esi
call sub_446852
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
jmp r-xdata
test ecx 0x100
je r-xdata
push 0x3
pop edi
push edi
push r--data
mov ecx esi
call sub_446852
mov [ esi + 0x30 ] edi
jmp r-xdata
and [ esi + 0x30 ] 0x0
mov [ esi + 0x2c ] 0x4
jmp r-xdata
sub_405010
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
xor eax eax
push esi
mov bh 0x1
test edx edx
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov esi [ ebp + 0x8 ]
cmp cl 0xc2
jb r-xdata
inc eax
cmp cl 0xe0
jb r-xdata
cmp cl 0xdf
ja r-xdata
mov cl [ eax + esi ]
cmp cl 0x7f
ja r-xdata
test bh bh
je r-xdata
cmp cl 0xf0
jb r-xdata
cmp cl 0xef
ja r-xdata
mov ecx 0x1
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
pop esi
xor al al
pop ebx
pop ebp
retn 0x8
cmp cl 0xf4
ja r-xdata
mov ecx 0x2
jmp r-xdata
mov bl [ eax + esi ]
cmp bl 0x80
jae r-xdata
mov ecx 0x3
jmp r-xdata
inc eax
xor bh bh
cmp bl 0xbf
ja r-xdata
inc eax
dec ecx
jne r-xdata
cmp eax edx
jae r-xdata
jmp r-xdata
cmp eax edx
jb r-xdata
sub_4050c2
push esi
mov esi ecx
call sub_4050ec
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
lea ecx [ esi + 0x18 ]
call sub_405cd3
mov ecx esi
call sub_4050ec
push [ esi + 0x4 ]
call j_sub_4228ca#2
pop ecx
pop esi
retn
sub_4050ec
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi ] edi
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
push [ esi ]
call [ CloseHandle@IAT ]
mov [ esi ] edi
jmp r-xdata
sub_405116
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
pop edi
pop ebp
retn 0x4
push esi
push 0x28
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
mov ecx esi
call sub_40d3d2
push [ ebp + 0x8 ]
mov ecx esi
call sub_405176
mov ecx esi
call sub_40b8a7
push [ esi + 0x4 ]
push [ esi ]
call [ CharUpperBuffW@IAT ]
and [ esi + 0x24 ] 0x0
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ edi ] esi
jmp r-xdata
mov [ eax + 0x24 ] esi
inc [ edi + 0xc ]
mov [ edi + 0x4 ] esi
pop esi
sub_405176
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_40c935
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov al [ esi + 0x20 ]
mov [ edi + 0x20 ] al
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4051ac
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov dl bl
mov ecx ebx
jmp r-xdata
test ecx ecx
jle r-xdata
test ecx ecx
je r-xdata
shl ecx 0x4
add ecx [ rw-data ]
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
dec eax
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] bx
jne r-xdata
test dl dl
je r-xdata
cmp [ eax ] 0x21
je r-xdata
mov ecx [ esi ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
cmp ecx [ rw-data ]
jg r-xdata
mov dl 0x1
jmp r-xdata
sub_405202
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push [ esi + 0x8 ]
call j_sub_4228ca#2
pop ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
mov esi [ ecx + 0x24 ]
push ecx
call sub_401926
mov ecx esi
test esi esi
jne r-xdata
pop esi
retn
pop esi
retn
sub_405265
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
push edi
lea edi [ esi + 0x160 ]
mov ecx edi
call sub_4053b6
push [ eax + 0x4 ]
call sub_405554
lea ecx [ ebp - 0x1 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x8 ] 0x1
call sub_405322
test eax eax
js r-xdata
pop edi
pop esi
leave
retn 0x4
cmp [ ebp - 0x1 ] 0x0
mov ecx edi
je r-xdata
call sub_40d9f2
jmp r-xdata
call sub_4053b6
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
inc ecx
mov [ eax ] ecx
sub_4052c2
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
mov esi ecx
mov [ ebp - 0x8 ] 0x1
call sub_405322
test eax eax
js r-xdata
pop edi
pop esi
leave
retn 0x8
mov ecx [ edi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx esi
call sub_44d520
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
lea ecx [ esi + 0x160 ]
jne r-xdata
call sub_40d9f2
jmp r-xdata
call sub_4053b6
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
sub_405322
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x14 ] 0x0
and [ ebp - 0xc ] 0x0
push esi
or esi 0xffffffff
push esi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x1
push [ ebp + 0x8 ]
call sub_40fa40
test eax eax
js r-xdata
lea ecx [ ebp - 0x14 ]
call sub_412570
mov eax esi
pop esi
leave
retn 0xc
lea ecx [ ebp - 0x14 ]
call sub_405372
test al al
mov eax [ ebp + 0x10 ]
setne cl
mov [ eax ] cl
xor esi esi
sub_405372
mov eax [ ecx + 0xc ]
dec eax
je r-xdata
cmp [ ecx ] 0x0
dec eax
je r-xdata
mov eax [ ecx ]
or eax [ ecx + 0x4 ]
jne r-xdata
dec eax
je r-xdata
mov al 0x1
retn
xor al al
retn
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
dec eax
je r-xdata
mov ecx [ ecx + 0x8 ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jmp sub_4756c0
sub eax 0x3
je r-xdata
xor eax eax
cmp [ ecx ] eax
jmp sub_4756c0
dec eax
dec eax
jne r-xdata
dec eax
dec eax
jne r-xdata
mov al [ ecx ]
retn
mov eax [ ecx ]
cmp [ eax ] 0x0
jmp r-xdata
setne al
retn
sub_4053c4
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
mov [ ebp - 0x4 ] ecx
push edi
lea ecx [ ebp - 0x38 ]
call sub_404ae8
mov edi [ ebp + 0xc ]
xor eax eax
mov esi [ edi ]
dec esi
mov [ ebp + 0xc ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] 0x2
mov ecx eax
mov dl al
xor esi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
add ecx 0x160
call sub_404b02
mov eax [ ebp + 0xc ]
inc eax
lea ecx [ ebp - 0x18 ]
mov [ edi ] eax
call sub_412570
lea ecx [ ebp - 0x28 ]
call sub_412570
pop edi
pop esi
pop ebx
leave
retn 0x8
test dl dl
jne r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] si
jne r-xdata
mov eax [ edi ]
push eax
lea ebx [ eax + 0x1 ]
mov [ edi ] ebx
call sub_405554
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0xb
je r-xdata
inc ecx
jmp r-xdata
dec eax
jne r-xdata
test ecx ecx
jne r-xdata
dec ecx
jmp r-xdata
lea eax [ ebx - 0x1 ]
inc dl
mov [ ebp - 0x30 ] eax
jmp r-xdata
sub_405460
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push esi
push edi
call sub_40d3d2
xor edx edx
inc edx
mov ecx rw-data
call sub_403c98
xor eax eax
mov esi eax
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
mov ecx [ ebx + 0x4 ]
mov edi esi
mov eax [ ecx ]
cmp [ eax + 0x8 ] si
jne r-xdata
push edx
inc edx
mov [ ebp - 0x8 ] edx
call sub_405554
mov ebx eax
test ebx ebx
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp [ eax ] 0x2b
je r-xdata
cmp [ eax ] 0x2b
jne r-xdata
xor edi edi
mov [ ebp - 0x4 ] 0x1
inc edi
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] al
mov eax [ ecx + edi * 4 + 0x4 ]
or esi 0xffffffff
cmp [ eax + 0x8 ] 0x34
jne r-xdata
push esi
push 0x69
jmp r-xdata
push [ eax ]
lea ecx [ ebp - 0x1c ]
call sub_40c935
sub esp 0x10
mov ecx esp
push [ ebp - 0x1c ]
call sub_40caee
mov ecx rw-data
call sub_40a9a0
test eax eax
jne r-xdata
mov ecx rw-data
call sub_44d520
jmp r-xdata
push esi
push 0x84
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 4 + 0x8 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405cd3
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xc ]
push eax
add edi 0x3
push ebx
mov [ ebp - 0xc ] edi
call sub_40589c
test eax eax
js r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
xor esi esi
sub_405554
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jg r-xdata
xor eax eax
jmp r-xdata
test eax eax
jle r-xdata
pop ebp
retn 0x4
shl eax 0x4
add eax [ rw-data ]
sub_405577
push ebp
mov ebp esp
sub esp 0x168
push ebx
xor edx edx
push esi
mov esi [ ebp + 0xc ]
mov eax edx
inc [ esi ]
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ esi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] 0x1
mov eax [ eax + ecx * 4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x1c ] edx
cmp [ eax + 0x8 ] dx
je r-xdata
cmp [ eax ] 0x2c
jne r-xdata
lea ecx [ ebp - 0x60 ]
call sub_40d3d2
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
push 0x7f
mov eax [ ecx + eax * 4 ]
pop edx
push 0x33
mov [ ebp - 0x48 ] edx
pop edx
cmp [ eax + 0x8 ] dx
push 0x7f
mov [ ebp - 0x3c ] edx
pop edx
jne r-xdata
push [ ebp + 0x10 ]
mov ecx ebx
push esi
push edi
call sub_45d443
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push edx
mov [ ebp - 0x50 ] 0x4e
mov [ ebp - 0x64 ] 0x4f
mov [ ebp - 0x4c ] 0x47
mov [ ebp - 0x44 ] 0x48
mov [ ebp - 0x38 ] 0x40
lea ecx [ ebp - 0x34 ]
call sub_412570
pop edi
pop esi
pop ebx
leave
retn 0xc
lea ecx [ ebp - 0x60 ]
call sub_405cd3
test [ ebp - 0x1c ] 0x100
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call sub_40ca8e
push [ ebp + 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x100
push eax
lea eax [ ebp - 0x60 ]
push eax
call sub_40d380
push [ ebp + 0x10 ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call sub_40d2d2
inc [ esi ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
push 0x4e
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
push 0xa4
jmp r-xdata
push 0xae
jmp r-xdata
and [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
call sub_44d520
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
push 0x4f
mov eax [ eax + ecx * 4 ]
movsx ecx [ eax + 0xa ]
mov [ ebp - 0xc ] ecx
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x80
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0xc ] eax
mov [ esi ] eax
mov eax [ edx + eax * 4 ]
push 0x4e
movsx ecx [ eax + 0xa ]
mov [ ebp - 0x14 ] ecx
pop ecx
cmp [ eax + 0x8 ] cx
mov ecx [ ebp - 0x10 ]
push 0x5
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x34 ]
push eax
push esi
push edi
mov ecx ebx
call sub_40fa40
test eax eax
js r-xdata
sub esp 0x10
mov ecx esp
push edi
call sub_45d154
push 0x0
push [ esi ]
push [ ebp - 0x18 ]
call sub_45ec7e
lea ecx [ ebp - 0x34 ]
mov esi eax
call sub_412570
mov [ ebp - 0x34 ] esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
mov ecx ebx
call sub_40d2c0
test al al
jne r-xdata
call sub_40d2c0
test al al
jne r-xdata
push [ ebp - 0xc ]
push 0x7b
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40cdb4
test eax eax
js r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
sub esp 0x10
dec eax
mov ecx esp
push edi
mov [ esi ] eax
call sub_45d154
lea eax [ ebp - 0x20 ]
push eax
push [ esi ]
push 0x0
call sub_45ec7e
xor ecx ecx
mov [ ebp - 0x164 ] eax
mov eax [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x18 ] eax
cmp eax ecx
jle r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
xor ecx ecx
mov [ ebp - 0x8 ] ecx
cmp eax [ edi + 0x8 ]
jae r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
push 0x4f
mov eax [ eax + ecx * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
lea eax [ eax + edx * 4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
call sub_40346e
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x18 ] eax
jle r-xdata
mov ebx ecx
push 0xffffffff
lea eax [ ebp - 0x34 ]
push eax
push esi
push edi
mov ecx ebx
call sub_40fa40
test eax eax
js r-xdata
push 0x7f
mov ebx eax
pop edx
lea eax [ ecx + 0x1 ]
lea ecx [ ebp - 0x34 ]
mov [ esi ] eax
call sub_40cdb4
mov edx [ ebp - 0x18 ]
mov ecx [ esi ]
mov [ ebp + edx * 4 - 0x164 ] eax
mov eax [ edi + 0x4 ]
push 0x4e
mov eax [ eax + ecx * 4 ]
inc edx
pop ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] edx
cmp [ eax + 0x8 ] cx
je r-xdata
push 0x1
lea eax [ ebp - 0x164 ]
push eax
push [ ebp - 0x10 ]
mov ecx ebx
push esi
push edi
call sub_40203a
test al al
je r-xdata
mov ecx eax
xor eax eax
lea edi [ ebp - 0x164 ]
[ edi ]
mov edi [ ebp + 0x8 ]
push 0x4e
pop ecx
cmp ax cx
je r-xdata
mov ecx [ ecx ]
lea edx [ ebp - 0x60 ]
call sub_405b2a
test al al
jne r-xdata
push 0x0
push [ ebp - 0x10 ]
call sub_403320
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp + eax * 4 - 0x164 ]
mov ecx [ ebp - 0x10 ]
call sub_403489
test al al
je r-xdata
sub esp 0x10
mov ecx esp
push edi
call sub_45d154
push 0x0
push [ esi ]
push ebx
call sub_45ec7e
mov [ ebp + ebx * 4 - 0x164 ] eax
inc ebx
cmp ebx [ ebp - 0x18 ]
jl r-xdata
mov ebx [ ebp - 0x40 ]
push [ ebp - 0x14 ]
push 0x6e
jmp r-xdata
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push eax
mov [ rw-data ] 0x0
call sub_40d89e
mov ebx [ ebp - 0x40 ]
cmp ax [ ebp - 0x4c ]
je r-xdata
cmp edx 0x1
jl r-xdata
jmp r-xdata
inc [ ebp - 0x8 ]
push 0x47
pop ecx
cmp ax cx
je r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
movsx eax [ eax + 0xa ]
push eax
push 0xb1
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
push [ ebp - 0x14 ]
inc [ esi ]
mov edx [ esi ]
mov [ ebp - 0xc ] edx
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp ax [ ebp - 0x38 ]
jne r-xdata
inc ecx
jmp r-xdata
cmp ax [ ebp - 0x50 ]
je r-xdata
push [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call sub_40346e
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x18 ] eax
jle r-xdata
mov edx [ esi ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x48 ]
jne r-xdata
mov ecx [ eax ]
movzx eax [ ecx + 0x8 ]
mov [ ebp - 0x24 ] eax
cmp ax [ ebp - 0x3c ]
jne r-xdata
push 0x4f
pop ecx
cmp ax cx
je r-xdata
and [ ebp - 0x8 ] 0x0
cmp edx [ edi + 0x8 ]
jae r-xdata
mov eax [ edi + 0x4 ]
mov ecx edx
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
pop eax
push eax
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ ecx + eax * 4 ]
push 0x33
pop edx
cmp [ eax + 0x8 ] dx
je r-xdata
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp ax [ ebp - 0x44 ]
je r-xdata
push 0x7e
jmp r-xdata
push 0x0
push [ ebp - 0x10 ]
call sub_403320
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp + eax * 4 - 0x164 ]
mov ecx [ ebp - 0x10 ]
call sub_403489
test al al
je r-xdata
dec [ ebp - 0x8 ]
jmp r-xdata
push 0x48
pop ecx
cmp ax cx
je r-xdata
mov eax [ esi ]
mov eax [ ecx + eax * 4 ]
lea ecx [ ebp - 0x60 ]
push [ eax ]
call sub_40c935
push [ ebp + 0x10 ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call sub_40d2d2
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push 0x7f
pop edx
inc ebx
cmp ebx [ edi + 0x8 ]
jb r-xdata
dec ecx
cmp ax [ ebp - 0x64 ]
je r-xdata
push [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp - 0x14 ]
inc edx
add eax 0x4
mov [ ebp - 0xc ] edx
mov [ ebp - 0x14 ] eax
cmp edx [ edi + 0x8 ]
jb r-xdata
push 0x40
pop ecx
cmp ax cx
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x24 ] eax
movzx eax [ eax + 0x8 ]
cmp ax dx
je r-xdata
cmp ax [ ebp - 0x38 ]
je r-xdata
push 0x82
jmp r-xdata
push 0x7d
jmp r-xdata
push 0x7f
pop ecx
cmp ax cx
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
cmp ax [ ebp - 0x3c ]
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x60 ]
mov ecx [ ecx ]
call sub_405b2a
mov ecx [ ebp - 0x8 ]
push 0x7f
pop edx
test al al
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
sub_4057d8
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
push edi
mov edi [ ebp + 0x8 ]
mov esi ebx
imul esi edi
add esi ecx
jmp r-xdata
dec edi
jns r-xdata
sub esi ebx
mov ecx esi
call [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_405800
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push edi
xor edi edi
mov [ ebx ] r--data
cmp [ ebx + 0x8 ] edi
jbe r-xdata
push [ ebx + 0x4 ]
mov [ ebx + 0x8 ] 0x0
call j_sub_4228ca#2
add esp 0x4
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax [ ebx + 0x4 ]
inc edi
mov [ eax + edi * 4 - 0x4 ] 0x0
cmp edi [ ebx + 0x8 ]
jb r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x3f
jg r-xdata
mov esi [ ebx + 0x4 ]
mov esi [ esi + edi * 4 ]
test esi esi
je r-xdata
pop esi
push esi
call j_sub_4228ca#2
add esp 0x4
cmp ax 0x30
jge r-xdata
mov ecx [ esi ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ ecx + 0xc ]
dec [ eax ]
mov eax [ ecx + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push ecx
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push [ ecx ]
call j_sub_4228ca#2
mov eax [ ebp - 0x4 ]
push [ eax + 0xc ]
call j_sub_4228ca#2
mov ecx [ ebp - 0x4 ]
add esp 0x8
sub_40589c
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_40d3d2
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
or edi 0xffffffff
mov eax [ eax ]
dec eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] eax
call sub_40d3d2
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edx [ ebx + 0x4 ]
mov eax [ esi ]
push 0x48
mov eax [ edx + eax * 4 ]
pop ecx
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x1c ] 0x7f
cmp ax cx
je r-xdata
inc [ esi ]
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov [ ebp - 0x14 ] 0x40
push 0xffffffff
push 0x72
mov ebx [ ebp + 0x14 ]
push ebx
call sub_4051ac
test eax eax
js r-xdata
mov ecx [ esi ]
mov eax [ edx + ecx * 4 ]
mov eax [ eax ]
cmp eax 0x24
jne r-xdata
mov eax [ esi ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_405cd3
lea ecx [ ebp - 0x30 ]
call sub_407da8
lea ecx [ ebp - 0x64 ]
call sub_405cd3
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
leave
retn 0x14
or [ ebp - 0x18 ] 0xffffffff
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x64 ]
call sub_40c935
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebx ]
dec eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x50 ] eax
cmp edi 0xffffffff
je r-xdata
cmp eax 0x1e
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov ecx [ esi ]
push [ eax ]
lea ecx [ ebp - 0x40 ]
call sub_40c935
mov eax [ ebp - 0x28 ]
xor edi edi
test eax eax
je r-xdata
mov edi eax
jmp r-xdata
mov al [ ebp + 0x18 ]
mov [ ebp - 0x44 ] al
lea eax [ ebp - 0x64 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4c ] edi
call sub_405116
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ edx + eax * 4 ]
xor ecx ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
jmp r-xdata
jmp r-xdata
mov ecx rw-data
call sub_44d520
cmp edi eax
jne r-xdata
mov esi [ ebp - 0x2c ]
mov ebx eax
push 0x69
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xab
jmp r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_405b47
inc [ esi ]
mov ecx [ esi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x41
je r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
inc edi
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp edi 0xffffffff
jne r-xdata
mov ecx [ esi + edi * 4 ]
lea edx [ ebp - 0x40 ]
call sub_405b2a
test al al
jne r-xdata
lea eax [ ecx + 0x1 ]
xor ecx ecx
push 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
inc ecx
jmp r-xdata
push 0x48
pop ebx
cmp ax bx
mov ebx [ ebp + 0x8 ]
je r-xdata
push 0x48
pop ebx
cmp ax bx
mov ebx [ ebp + 0x8 ]
jne r-xdata
inc ecx
push 0x48
mov eax [ edx + ecx * 4 ]
pop edi
cmp [ eax + 0x8 ] di
mov edi [ ebp - 0x10 ]
mov [ esi ] ecx
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
dec ecx
js r-xdata
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp ax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
jmp r-xdata
mov eax [ esi ]
push 0x48
mov eax [ edx + eax * 4 ]
pop ecx
movzx eax [ eax + 0x8 ]
cmp ax cx
jne r-xdata
mov edi eax
mov [ esi ] eax
mov eax [ edx + edi * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
je r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
cmp edi 0xffffffff
jne r-xdata
jmp r-xdata
test ecx ecx
jne r-xdata
cmp ax [ ebp - 0x1c ]
je r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x0
test ax ax
je r-xdata
mov ecx [ esi ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ edx + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x14 ]
jne r-xdata
mov edi eax
mov [ ebp - 0x10 ] edi
jmp r-xdata
sub_405b2a
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov edx [ edx ]
mov ecx [ ecx ]
push eax
call sub_40b96c
pop ecx
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
sub_405b47
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jae r-xdata
push 0x10
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
mov eax ecx
jmp r-xdata
push edi
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
jmp r-xdata
sub_405be9
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
call sub_405cf6
push [ ebp + 0x8 ]
lea ecx [ edi + 0x14 ]
call sub_40c935
mov edx [ edi + 0x3c ]
push ecx
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov ecx [ edi + 0x14 ]
call sub_405d32
add esp 0x10
mov [ edi + 0x24 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea esi [ edi + 0x30 ]
push esi
push ecx
mov ecx eax
call sub_405c5b
mov eax [ esi ]
inc eax
imul eax eax 0x3
xor ecx ecx
push 0x4
pop edx
mov [ esi ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0xc
mov [ edi + 0x2c ] eax
xor eax eax
pop edi
pop esi
leave
retn 0x4
sub_405c5b
push ebp
mov ebp esp
push esi
test ecx ecx
je r-xdata
push 0xfffffffe
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
pop eax
jmp r-xdata
mov esi [ ecx ]
cmp esi 0x50435245
jne r-xdata
pop esi
pop ebp
retn
xor eax eax
cmp esi 0x45524350
setne al
dec eax
and eax 0xffffffe7
add eax 0xfffffffc
jmp r-xdata
test [ ecx + 0xc ] 0x2
je r-xdata
push 0xffffffe4
jmp r-xdata
movzx eax [ ecx + 0x1e ]
mov [ edx ] eax
xor eax eax
sub_405cd3
push esi
mov esi ecx
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
retn
push [ esi ]
call j_sub_4228ca#2
push [ esi + 0xc ]
call j_sub_4228ca#2
pop ecx
pop ecx
sub_405cf6
push ebx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
push [ esi + 0x24 ]
call sub_4228ca
pop ecx
jmp r-xdata
xor ebx ebx
mov [ esi + 0x24 ] ebx
cmp [ esi + 0x2c ] ebx
jne r-xdata
push [ esi + 0x2c ]
call j_sub_4228ca#2
pop ecx
jmp r-xdata
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x10 ] bl
pop esi
pop ebx
retn
sub_405d32
push ebp
mov ebp esp
mov eax 0x10b4
call sub_430650
mov eax [ ebp + 0xc ]
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x1c ] 0xffffffff
push ebx
push esi
mov ebx ecx
xor ecx ecx
push edi
mov edi edx
xor edx edx
inc edx
mov esi ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x20 ] ebx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x10
jmp r-xdata
mov [ eax ] ecx
mov [ ebp - 0xb0 ] r--data
mov [ ebp - 0xac ] r--data
mov [ ebp - 0xa8 ] r--data
mov [ ebp - 0xa4 ] r--data
test edi 0xd8028580
jne r-xdata
pop esi
jmp r-xdata
push 0x11
jmp r-xdata
test edi 0x10000
jne r-xdata
mov ecx esi
call sub_470c78
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
pop esi
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
push 0x28
mov [ ebp - 0x5c ] ecx
pop ecx
cmp [ ebx ] cx
push 0x0
pop ecx
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x10 ]
sar eax 0x1
mov [ ecx ] eax
cmp [ ebx + esi * 2 + 0x2 ] 0x2a
jne r-xdata
test edi 0x800
je r-xdata
mov eax [ ebp + 0x10 ]
xor edx edx
xor ecx ecx
inc edx
jmp r-xdata
lea ebx [ ebx + esi * 2 ]
add ebx 0x4
push 0x6
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] edx
jne r-xdata
add esi 0x8
jmp r-xdata
push 0x4
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
mov ecx 0x1800000
mov eax edi
and eax ecx
cmp eax ecx
je r-xdata
push 0x4e
jmp r-xdata
test edi 0x2000
je r-xdata
or edi 0x800
jmp r-xdata
add esi 0x6
push 0x4
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
push 0x38
jmp r-xdata
mov eax edi
push 0x2
pop edx
and eax 0x700000
jne r-xdata
push eax
or edx 0xffffffff
mov ecx ebx
call sub_471a42
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edi
add esi 0x6
or edi 0x20000000
jmp r-xdata
push 0xd
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
cmp eax 0x100000
je r-xdata
mov [ ebp - 0x48 ] edx
jmp r-xdata
add esi 0xf
or edi 0x4000000
jmp r-xdata
push 0xc
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
push 0xd
cmp eax 0x200000
je r-xdata
cmp [ ebp - 0x30 ] 0x10000
jg r-xdata
push 0x4a
mov ebx [ ebp - 0x18 ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0xe ]
mov [ ebp - 0xc ] eax
movzx eax [ ebx + eax * 2 ]
push eax
call sub_422952
pop ecx
test eax eax
je r-xdata
push 0x10
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x44 ] 0x1
mov [ ebp - 0x40 ] cx
jmp r-xdata
mov eax ecx
sar eax 0x8
and eax 0xff
mov [ ebp - 0x40 ] ax
movzx eax cl
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x3e ] ax
jmp r-xdata
push 0xa
jmp r-xdata
cmp eax 0x300000
je r-xdata
push 0x14
jmp r-xdata
mov eax [ ebp - 0x80 ]
imul eax [ ebp - 0x84 ]
add eax [ ebp - 0x30 ]
lea esi [ eax * 2 + 0x38 ]
push esi
call [ rw-data ]
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
push 0x29
pop edx
cmp [ ebx + ecx * 2 ] dx
jne r-xdata
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebp - 0x18 ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x12 ]
mov [ ebp - 0xc ] eax
movzx eax [ ebx + eax * 2 ]
push eax
call sub_422952
pop ecx
test eax eax
je r-xdata
push 0x3
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x10b0 ]
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x88 ] ecx
mov ecx ebx
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x8c ] eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x7c ] 0x800
mov [ ebp - 0x98 ] ebx
call sub_40784a
lea eax [ ebx + eax * 2 ]
mov [ ebp - 0x94 ] eax
push 0x7d
lea eax [ ebx + esi * 2 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10b0 ]
mov [ ebp - 0x10 ] eax
pop eax
mov [ ebp - 0x10b0 ] ax
xor ecx ecx
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
push ecx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push ecx
push ecx
push ecx
push ecx
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x90 ] ecx
push eax
lea edx [ ebp - 0x10 ]
mov ecx edi
mov [ ebp - 0x60 ] edi
call sub_406348
mov esi [ ebp - 0x28 ]
add esp 0x34
test esi esi
jne r-xdata
pop ecx
mov ecx 0xd0a
jmp r-xdata
cmp eax __dos_header
je r-xdata
push 0x15
mov [ ebx + 0x4 ] esi
mov [ ebx ] 0x50435245
mov eax [ ebp - 0x60 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x24 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
push 0x1c
pop eax
mov [ ebx + 0x22 ] ax
mov ax [ ebp - 0x80 ]
mov [ ebx + 0x24 ] ax
mov ax [ ebp - 0x84 ]
mov [ ebx + 0x26 ] ax
xor esi esi
xor eax eax
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] esi
mov [ ebx + 0x34 ] esi
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x84 ] esi
movzx eax [ ebx + 0x22 ]
push 0x7d
lea edx [ ebx + eax * 2 ]
mov [ ebp - 0x88 ] edx
movzx eax [ ebx + 0x24 ]
movzx ecx [ ebx + 0x26 ]
imul ecx eax
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x20 ] eax
pop eax
push esi
lea edi [ edx + ecx * 2 ]
mov [ ebp - 0x9c ] edi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x90 ] esi
mov [ edi ] ax
mov ecx [ ebx + 0x8 ]
lea eax [ ebp - 0xb0 ]
push eax
push esi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x10 ] edi
call sub_406348
mov ax [ ebp - 0x78 ]
mov [ ebx + 0x1e ] ax
mov ax [ ebp - 0x6c ]
add esp 0x34
mov [ ebx + 0x20 ] ax
mov ax [ ebp - 0x70 ]
mov [ ebx + 0x1c ] ax
mov eax [ ebp - 0x5c ]
or eax 0x2
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x54 ] esi
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
mov edi [ ebp - 0x8 ]
movzx eax [ ebx + edi * 2 ]
imul esi esi 0xa
add eax 0xffffffd0
add esi eax
inc edi
movzx eax [ ebx + edi * 2 ]
push eax
call sub_422952
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x29
pop edx
cmp [ ebx + ecx * 2 ] dx
jne r-xdata
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
add esi 0x5
mov eax 0x100000
jmp r-xdata
push 0x3
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x48 ] eax
cmp ecx 0xff
jle r-xdata
mov [ ebp - 0x48 ] 0x1
jmp r-xdata
cmp eax r--data
je r-xdata
mov eax esi
mov [ ebp - 0x2c ] eax
or eax 0xffffffff
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
lea esi [ ecx + 0x1 ]
jmp r-xdata
or [ ebp - 0x5c ] 0x2000
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi 0x19999998
ja r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
mov edi [ ebp - 0x8 ]
movzx eax [ ebx + edi * 2 ]
imul esi esi 0xa
add eax 0xffffffd0
add esi eax
inc edi
movzx eax [ ebx + edi * 2 ]
push eax
call sub_422952
pop ecx
test eax eax
jne r-xdata
and edi 0xff8fffff
jmp r-xdata
add esi 0x5
mov eax 0x200000
push 0x5
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x28 ]
xor edx edx
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov [ eax ] cx
add eax 0x2
sub eax edi
sar eax 0x1
cmp eax [ ebp - 0x30 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax ] dx
jne r-xdata
push 0x28
pop eax
mov [ ebp - 0x4 ] esi
cmp [ ebx + esi * 2 ] ax
je r-xdata
or [ ebp - 0x5c ] 0x4000
mov [ ebp - 0x1c ] eax
cmp esi 0x19999998
ja r-xdata
or edi eax
add esi 0x7
mov eax 0x300000
jmp r-xdata
push 0x4
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
push 0x17
pop esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov ecx [ ebp - 0xa0 ]
cmp eax ecx
ja r-xdata
push 0x16
pop esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
add esi 0x6
mov eax __dos_header
jmp r-xdata
push 0x8
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
test esi esi
jne r-xdata
cmp [ ebp - 0x7c ] 0x800
jg r-xdata
add esi 0xa
mov eax r--data
jmp r-xdata
push 0xc
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
jne r-xdata
cmp eax ecx
jbe r-xdata
push ecx
call [ rw-data ]
pop ecx
jmp r-xdata
test esi esi
jne r-xdata
push 0xc
mov edx r--data
mov ecx ebx
call sub_41ee64
pop ecx
test eax eax
jne r-xdata
mov eax 0x800000
sub eax 0x2
mov [ ebp - 0x8c ] eax
movzx eax [ eax ]
mov [ ebp - 0x1c ] eax
movzx eax [ edi + eax * 2 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
mov ax [ ebx + 0x20 ]
cmp ax [ ebx + 0x1e ]
ja r-xdata
mov ebx [ ebp - 0x18 ]
jmp r-xdata
mov eax 0x1000000
jmp r-xdata
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
push eax
mov ecx edi
call sub_47035d
pop ecx
mov ecx [ ebp - 0x1c ]
mov edx eax
movzx eax [ edi + ecx * 2 ]
mov ecx [ ebp - 0xa0 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x4 ]
push 0xffffffff
mov ecx edi
call sub_47035d
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
push 0xf
pop esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
add esi 0xe
and edi 0xfe7fffff
push 0x35
pop esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx edx
sub ecx edi
sar ecx 0x1
mov [ edi + eax * 2 ] cx
mov eax [ ebp - 0x8c ]
mov ecx [ ebp - 0xa0 ]
jmp r-xdata
xor ecx ecx
cmp [ eax + 0x2 ] cx
jne r-xdata
push ebx
call [ rw-data ]
pop ecx
mov eax [ ebx + 0x8 ]
mov [ ebp + 0xc ] eax
mov esi 0x80
test al 0x10
jne r-xdata
mov edx [ ebp - 0x4 ]
push 0xffffffff
lea ecx [ eax + 0x4 ]
call sub_47035d
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
movzx edi [ eax - 0x2 ]
movzx esi [ eax + edi * 2 - 0x4 ]
mov [ eax + edi * 2 - 0x4 ] cx
mov edx [ ebx + 0x8 ]
lea ecx [ ebp - 0xb0 ]
push ecx
shr edx 0xb
and edx 0x1
push 0x1
mov ecx eax
call sub_470c98
pop ecx
pop ecx
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ eax + edi * 2 - 0x4 ] si
test ecx ecx
js r-xdata
mov eax [ ebp - 0x38 ]
test eax eax
jns r-xdata
xor esi esi
lea eax [ ebp - 0xb0 ]
push esi
push eax
xor edx edx
mov ecx edi
call sub_40776b
pop ecx
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp - 0x8 ]
jmp r-xdata
cmp ecx 0xfffffffe
jne r-xdata
cmp ecx [ ebp - 0x70 ]
jle r-xdata
test [ ebx + 0x8 ] 0x10
jne r-xdata
mov eax ebx
mov eax [ ebp + 0xc ]
or eax 0x10
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
test eax eax
jns r-xdata
mov edi [ ebp - 0x24 ]
jmp r-xdata
cmp ecx 0xfffffffc
je r-xdata
push 0x24
jmp r-xdata
mov [ eax + 0x2 ] cx
mov [ ebp - 0x70 ] ecx
test al 0x2
je r-xdata
mov edx [ ebp - 0x2c ]
mov [ ebx + 0x1a ] dx
test al 0x1
je r-xdata
mov esi 0x80
mov edx [ ebp - 0x34 ]
push esi
lea edx [ ebp - 0xc ]
mov ecx edi
call sub_407a0f
mov edx eax
mov eax [ ebp - 0xc ]
pop ecx
test eax eax
jns r-xdata
test esi esi
jne r-xdata
push 0x46
push 0x19
pop esi
pop esi
jmp r-xdata
or [ ebx + 0xc ] 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
mov esi 0x80
mov [ ebx + 0x18 ] dx
test al 0x1
jne r-xdata
lea eax [ ebp - 0xb0 ]
push esi
push eax
xor edx edx
mov ecx edi
call sub_407932
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax 0xff
cmp dx ax
ja r-xdata
cmp dx si
jae r-xdata
mov eax 0xff
cmp dx ax
ja r-xdata
mov esi 0x80
cmp dx si
jb r-xdata
or [ ebx + 0xc ] 0x100
jmp r-xdata
jmp r-xdata
movzx esi dx
mov eax esi
shr eax 0x7
mov edi 0x80
movzx ecx [ eax + r--data ]
mov eax esi
cdq
idiv edi
shl ecx 0x7
add ecx edx
movzx eax [ ecx * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax esi
cmp eax esi
je r-xdata
mov eax [ ebp - 0xac ]
movzx ecx dx
movzx eax [ ecx + eax ]
cmp ax dx
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xac ]
movzx ecx dx
movzx eax [ ecx + eax ]
cmp ax dx
movzx esi dx
mov eax esi
shr eax 0x7
mov edi 0x80
movzx ecx [ eax + r--data ]
mov eax esi
cdq
idiv edi
shl ecx 0x7
add ecx edx
movzx eax [ ecx * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax esi
cmp eax esi
mov esi edi
jmp r-xdata
or [ ebx + 0xc ] edi
jmp r-xdata
or [ ebx + 0xc ] esi
jmp r-xdata
mov esi 0x80
or [ ebx + 0xc ] 0x10
jmp r-xdata
or [ ebx + 0xc ] 0x20
jmp r-xdata
je r-xdata
sub_406348
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
push esi
mov esi [ edx ]
push edi
mov edi [ ebp + 0x34 ]
mov [ esp + 0x40 ] ecx
xor ecx ecx
mov [ esp + 0x20 ] eax
mov eax [ ebp + 0x30 ]
mov [ esp + 0x50 ] edx
mov edx [ ebp + 0x18 ]
mov [ esp + 0x68 ] eax
push 0xfffffffe
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x30 ] ecx
pop eax
mov [ esp + 0x6c ] esi
cmp [ esi ] 0x7f
lea ecx [ edx + 0x4 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0xc ] ecx
je r-xdata
movzx ebx [ esi + 0x4 ]
mov eax [ edi + 0x20 ]
mov [ esp + 0x60 ] eax
xor eax eax
mov [ esp + 0x66 ] ax
lea eax [ esp + 0x60 ]
mov [ esp + 0x48 ] ebx
mov [ esp + 0x64 ] bx
mov [ edi + 0x20 ] eax
jmp r-xdata
lea eax [ esi + 0x2 ]
xor ebx ebx
mov [ esp + 0x5c ] eax
mov [ eax ] bx
lea eax [ edx * 2 + 0x4 ]
mov [ esp + 0x54 ] eax
add esi eax
mov eax [ edi + 0x38 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x58 ] eax
mov [ edi + 0x38 ] eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x76
pop eax
mov [ esi ] ax
add esi 0x2
xor eax eax
mov [ esp + 0x44 ] esi
mov [ esi ] ax
add esi 0x2
add ecx 0x2
mov [ esp + 0x18 ] esi
mov [ esp + 0xc ] ecx
jmp r-xdata
mov ebx [ ebp + 0x38 ]
mov eax ebx
neg eax
sbb eax eax
lea ecx [ esp + 0xc ]
and eax ecx
push eax
push edi
push [ ebp + 0x1c ]
lea eax [ esp + 0x74 ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x58 ]
push eax
push [ ebp + 0xc ]
lea eax [ esp + 0x44 ]
push eax
lea edx [ esp + 0x40 ]
lea ecx [ esp + 0x68 ]
call sub_406670
add esp 0x28
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ esp + 0x20 ]
mov [ ecx ] eax
mov eax [ esp + 0x34 ]
cmp [ edi + 0x38 ] eax
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x38 ]
mov [ esp + 0x34 ] eax
jmp r-xdata
mov esi [ esp + 0x18 ]
test ebx ebx
jne r-xdata
mov ebx [ esp + 0x20 ]
cmp [ ebx ] 0x7c
je r-xdata
mov eax [ esp + 0x14 ]
push 0x71
pop ecx
cmp [ eax ] cx
je r-xdata
cmp [ ebp + 0x38 ] 0x0
mov ecx [ esp + 0xc ]
je r-xdata
cmp [ ebp + 0x38 ] 0x0
jne r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
test ecx ecx
jns r-xdata
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x28 ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x38 ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x10 ] ecx
push 0x71
pop eax
mov [ esi ] ax
mov eax esi
sub eax [ esp + 0x14 ]
mov [ esp + 0x14 ] esi
sar eax 0x1
mov [ esi + 0x2 ] ax
mov [ esp + 0x6c ] esi
add esi 0x4
jmp r-xdata
mov eax [ esp + 0x50 ]
mov esi [ eax ]
add esi [ esp + 0x54 ]
add ecx 0x2
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0x4c ]
push 0x72
pop eax
mov [ esi ] ax
mov eax esi
sub eax ecx
sar eax 0x1
mov [ esi + 0x2 ] ax
add esi 0x4
cmp [ esp + 0x48 ] 0x0
jg r-xdata
mov edi [ esp + 0x14 ]
mov edx esi
sub edx edi
sar edx 0x1
cmp [ esp + 0x2c ] edx
jne r-xdata
test eax eax
js r-xdata
mov edx [ esp + 0x40 ]
xor ecx ecx
xor ebx ebx
shr edx 0xb
push edi
mov [ esi ] cx
inc ebx
push ecx
and edx ebx
mov ecx eax
call sub_470c98
pop ecx
pop ecx
mov ecx eax
cmp ecx 0xfffffffd
jne r-xdata
mov eax [ esp + 0x58 ]
add ebx 0x2
mov [ esp + 0x20 ] ebx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
mov [ esp + 0x18 ] esi
jne r-xdata
mov eax [ edi + 0x20 ]
xor edx edx
cmp [ eax + 0x6 ] dx
jne r-xdata
mov ecx [ esp + 0xc ]
movzx ecx [ edi + 0x2 ]
mov eax ecx
neg eax
mov [ edi + 0x2 ] dx
mov edx ecx
lea edi [ edi + eax * 2 ]
test ecx ecx
jg r-xdata
mov edi [ ebp + 0x34 ]
mov ebx [ esp + 0x10 ]
test ebx ebx
jns r-xdata
cmp ecx eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
test ecx ecx
jns r-xdata
test ecx ecx
js r-xdata
mov [ edi + 0x64 ] ebx
jmp r-xdata
mov eax esi
sub eax ecx
and eax 0xfffffffe
push eax
push ecx
lea eax [ ecx + 0x4 ]
push eax
call sub_426c10
mov ecx [ esp + 0x58 ]
add esp 0xc
push 0x7b
pop eax
mov [ ecx ] ax
lea eax [ esi + 0x4 ]
sub eax ecx
mov ecx [ esp + 0x5c ]
sar eax 0x1
mov [ ecx ] ax
push 0x72
pop ecx
mov [ esi + 0x4 ] cx
mov ecx [ esp + 0xc ]
mov [ esi + 0x6 ] ax
add esi 0x8
add ecx 0x4
jmp r-xdata
mov ecx [ esp + 0xc ]
xor eax eax
inc eax
mov edx [ ebx ]
mov eax 0x7fffffeb
sub eax edx
cmp eax ecx
jl r-xdata
or ecx 0xffffffff
mov [ esp + 0x30 ] ecx
jmp r-xdata
mov ebx [ esp + 0x2c ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x10 ] ecx
test ecx ecx
js r-xdata
mov ebx [ esp + 0x10 ]
mov eax ecx
xor eax ebx
test eax 0xfffffffd
je r-xdata
mov edx [ esp + 0x28 ]
jmp r-xdata
mov ecx eax
mov [ esp + 0x28 ] edx
mov [ esp + 0x24 ] ecx
cmp ecx 0xfffffffe
jne r-xdata
cmp ecx [ edi + 0x40 ]
jle r-xdata
mov eax [ edi + 0x20 ]
mov eax [ eax ]
mov [ edi + 0x20 ] eax
jmp r-xdata
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x2c ]
mov [ edi + 0x38 ] eax
mov eax [ esp + 0x50 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
mov eax [ ebp + 0x20 ]
mov ebx [ esp + 0x10 ]
mov [ eax ] edx
mov eax [ ebp + 0x24 ]
mov edx [ esp + 0x30 ]
mov [ eax ] edx
mov eax [ ebp + 0x28 ]
mov edx [ esp + 0x1c ]
mov [ eax ] edx
mov eax [ ebp + 0x2c ]
mov [ eax ] ebx
mov ebx [ ebp + 0x38 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x14
jmp r-xdata
add ecx edx
mov [ ebx ] ecx
cmp [ esp + 0x1c ] edx
jne r-xdata
or [ esp + 0x10 ] 0xffffffff
xor eax eax
cmp ecx 0xfffffffc
setne al
dec eax
and eax 0x2d
add eax 0x19
push 0x24
pop eax
jmp r-xdata
mov eax [ esp + 0x44 ]
mov [ eax ] cx
jmp r-xdata
mov [ edi + 0x40 ] ecx
xor eax eax
jmp r-xdata
or ebx ecx
mov [ esp + 0x1c ] edx
mov [ esp + 0x10 ] ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ esp + 0x14 ]
jmp r-xdata
sub_406670
push ebp
mov ebp esp
sub esp 0x140
push ebx
mov ebx [ ecx ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edx
mov edi [ edi ]
mov edx [ eax ]
mov [ ebp - 0x114 ] ecx
xor ecx ecx
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0x84 ] 0x0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xd0 ] edx
mov [ ebp - 0xcc ] edx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0xa4 ] 0x0
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x40 ] ecx
test ebx 0x800
je r-xdata
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
test ebx 0x200
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x9c ] eax
xor eax 0x1
mov [ ebp - 0xe0 ] eax
movsx eax bl
and eax 0x1
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x68 ] 0xfffffffe
mov [ ebp - 0x6c ] 0xfffffffe
mov [ ebp - 0x54 ] 0xfffffffe
mov [ ebp - 0x34 ] 0xfffffffe
mov [ ebp - 0x88 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ eax + 0x34 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 2 ]
add eax 0xffffff38
cmp [ ebp + 0x2c ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x28 ]
cmp [ ecx + 0x24 ] eax
jbe r-xdata
cmp edx eax
ja r-xdata
mov edi ecx
mov [ ebp - 0x4 ] edi
movzx esi [ edi ]
mov [ ebp - 0x80 ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x34
mov eax [ ebp - 0xd0 ]
cmp edx eax
jb r-xdata
test esi esi
je r-xdata
cmp esi 0x2a
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx edx
sub ecx eax
mov eax [ ebp + 0x2c ]
sar ecx 0x1
mov ebx [ eax ]
mov eax 0x7fffffeb
sub eax ebx
cmp eax ecx
jl r-xdata
fstp st0
cmp esi 0x5c
jne r-xdata
mov ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
cmp esi 0x3f
je r-xdata
mov eax [ ebp + 0xc ]
fstp st0
mov [ eax ] 0x14
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
lea eax [ ebx + ecx ]
mov ecx [ ebp + 0x2c ]
mov ebx [ ebp - 0x18 ]
mov [ ecx ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x7c ]
mov ecx [ ebp + 0x28 ]
test eax eax
je r-xdata
cmp [ edi + 0x2 ] 0x45
jne r-xdata
and ebx 0x8
mov [ ebp - 0x1c ] ebx
jne r-xdata
cmp esi 0x2b
je r-xdata
mov edx [ ebp - 0xcc ]
jmp r-xdata
mov ecx [ ebp - 0xcc ]
cmp ebx ecx
jbe r-xdata
test ebx 0x4000
je r-xdata
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
mov [ ebp - 0x2c ] 0x0
add edi 0x2
jmp r-xdata
mov eax 0xff
cmp [ edi ] ax
ja r-xdata
mov eax [ ebp - 0x10 ]
test eax 0x4000
jne r-xdata
cmp esi 0x7b
je r-xdata
mov [ ebp - 0x8 ] edx
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0xd0 ] edx
sub edx ebx
fstp st0
and edx 0xfffffffe
push edx
push ebx
push ecx
call sub_426c10
fld [ r--data ]
mov ecx [ ebp - 0xcc ]
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
sub ebx ecx
sar ebx 0x1
add esp 0xc
neg ebx
mov [ ebp - 0x18 ] ecx
lea edx [ edx + ebx * 2 ]
cmp [ ebp - 0x28 ] 0x0
mov bx si
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x104 ] bx
je r-xdata
mov [ edx ] 0xff0070
sub edi [ ecx + 0x18 ]
xor ecx ecx
sar edi 0x1
mov [ edx + 0x4 ] di
mov [ edx + 0x6 ] cx
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x7c ] edx
add edx 0x8
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov [ ebp - 0x7c ] 0x0
sub edi [ ecx + 0x18 ]
sar edi 0x1
sub di [ eax + 0x4 ]
mov [ eax + 0x6 ] di
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x80 ]
add edi 0x2
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp esi 0x23
jne r-xdata
mov eax [ ebp + 0x28 ]
mov eax [ eax + 0xc ]
test [ esi + eax ] 0x1
jne r-xdata
test ecx ecx
jne r-xdata
cmp esi 0x5f
jae r-xdata
lea ecx [ edi + 0x2 ]
call sub_471591
mov edx [ ebp - 0x8 ]
test eax eax
jne r-xdata
xor ecx ecx
mov [ ebp - 0x20 ] ecx
cmp [ ebp - 0x7c ] ecx
jne r-xdata
mov esi 0x1
jmp r-xdata
and esi 0xfc00
cmp esi 0xd800
je r-xdata
movzx esi [ edi ]
fld [ r--data ]
test esi esi
je r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx esi [ edi ]
test si si
je r-xdata
fstp st0
jmp r-xdata
mov [ edx ] 0xff0070
lea eax [ edx + 0x4 ]
mov [ ebp - 0x7c ] edx
mov edx [ ebp + 0x28 ]
sub edi [ edx + 0x18 ]
sar edi 0x1
xor edx edx
mov [ eax + 0x2 ] dx
lea edx [ eax + 0x4 ]
mov [ eax ] di
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp esi 0x7b
jae r-xdata
cmp esi 0x2f
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0xa0 ]
dec [ ebp - 0xa0 ]
test eax eax
jg r-xdata
cmp [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
je r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov esi [ ebp - 0xc ]
xor esi esi
jmp r-xdata
mov ecx [ ebp + 0x28 ]
mov eax [ ebp - 0x28 ]
mov ebx [ ebp - 0x10 ]
fstp st0
cmp esi 0x3f
jb r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x2c ] ecx
jne r-xdata
test al 0x1
je r-xdata
test al 0x1
je r-xdata
mov [ ebp - 0x4 ] edi
mov ax [ edi ]
mov esi 0x2
mov [ ebp - 0x102 ] ax
mov [ ebp - 0xc ] esi
jmp r-xdata
mov edx [ ecx + 0x6c ]
mov ecx [ ecx + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp edi ecx
mov ecx [ ebp + 0x28 ]
ja r-xdata
mov ecx [ ecx + 0x1c ]
cmp edi ecx
jae r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
fstp st0
mov ecx [ ebp - 0x64 ]
mov ebx [ ebp + 0x2c ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x5c ]
mov [ eax ] ecx
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0x54 ]
mov [ eax ] ecx
mov eax [ ebp - 0x110 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
test ebx ebx
je r-xdata
cmp esi 0x28
je r-xdata
mov [ ebp - 0x7c ] ecx
jmp r-xdata
mov eax [ ebp + 0x28 ]
sub edi [ eax + 0x18 ]
mov eax [ ebp - 0x7c ]
sar edi 0x1
sub di [ eax + 0x4 ]
mov [ eax + 0x6 ] di
mov edi [ ebp - 0x4 ]
mov eax 0x1d
jmp r-xdata
mov eax 0x1e
movzx ecx bx
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
mov eax [ ebp - 0x28 ]
cmp si [ ecx + 0x70 ]
jne r-xdata
mov ecx [ ebp + 0x28 ]
jmp r-xdata
push eax
mov eax [ ebp + 0x28 ]
add eax 0x6c
push eax
push ecx
mov ecx edi
call sub_4080a0
mov ecx [ ebp + 0x28 ]
add esp 0xc
test eax eax
je r-xdata
mov eax 0x1
sub edx [ ebp - 0xd0 ]
mov eax [ ebx ]
mov ecx 0x7fffffeb
sar edx 0x1
sub ecx eax
cmp ecx edx
jl r-xdata
mov ecx [ ebp + 0x28 ]
fstp st0
add edi 0x2
mov esi [ ecx + 0x24 ]
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x4 ] edi
movzx esi [ edi ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0xc ] 0x7f
mov [ ebp - 0x44 ] 0x0
cmp esi 0x2a
je r-xdata
lea eax [ esi - 0x24 ]
cmp eax 0x58
ja r-xdata
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] edx
test esi esi
je r-xdata
cmp bx 0xd
je r-xdata
mov ecx esi
shr ecx 0x1
mov edi edx
lea esi [ ebp - 0x104 ]
[ edi ] [ esi ]
adc ecx ecx
[ edi ] [ esi ]
mov esi [ ebp - 0xc ]
lea edx [ edx + esi * 2 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x102 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
jmp r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
movzx esi [ edi ]
test si si
jne r-xdata
mov ax [ edi ]
mov edx 0xfc00
and ax dx
mov edx 0xdc00
cmp ax dx
mov eax [ ebp - 0x28 ]
jne r-xdata
cmp edx 0x1
je r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ecx + 0x6c ]
lea edi [ edi + eax * 2 ]
add edi 0xfffffffe
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x14
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
lea ecx [ eax + edx ]
mov [ ebx ] ecx
lea eax [ edi + 0x2 ]
mov [ ebp - 0x50 ] eax
movzx eax [ eax ]
cmp eax 0x3a
je r-xdata
cmp esi 0x3f
jne r-xdata
movzx eax [ eax + lookup_table_40769c ]
jmp [ eax * 4 + jump_table_40766c ]
mov eax [ ebp + 0x28 ]
or [ eax + 0x54 ] 0x800
jmp r-xdata
cmp bx 0xa
je r-xdata
mov edx [ ebp - 0x8 ]
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
test eax eax
jne r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov edx [ ecx + 0x68 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
add edi 0x2
mov [ ebp - 0x4 ] edi
mov ax [ edi + 0x2 ]
cmp ax [ ecx + 0x72 ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ ebp - 0x50 ]
xor ecx ecx
mov edi edx
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x18 ] ecx
mov ecx 0xff
xor esi esi
mov [ ebp - 0x20 ] r--data
cmp ax cx
ja r-xdata
mov [ ebp - 0x48 ] 0xff
cmp ax [ ebp - 0x48 ]
ja r-xdata
test eax 0x1000
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx esi [ edi ]
mov eax esi
cmp eax 0x53
jl r-xdata
movzx eax [ edi + 0x2 ]
fstp st0
mov [ ebp - 0x18 ] edx
cmp eax 0x3a
je r-xdata
mov esi [ ebp + 0xc ]
fstp st0
push 0x0
push [ ebp - 0x10 ]
mov [ ebp - 0x8c ] edi
mov edi [ ebp + 0x28 ]
lea edx [ ebp - 0xd4 ]
push [ edi + 0x38 ]
lea ecx [ ebp - 0x4 ]
push esi
call sub_407888
add esp 0x10
cmp [ esi ] 0x0
mov ecx eax
mov [ ebp - 0xc ] ecx
jne r-xdata
xor ebx ebx
or eax 0xffffffff
mov eax [ ebp - 0x34 ]
fstp st0
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x10 ]
fstp st0
mov [ ebp - 0x18 ] 0x0
test bl 0x2
je r-xdata
mov ebx [ ebp - 0x10 ]
fstp st0
test bl 0x2
mov eax 0x0
setne al
mov [ ebp - 0x18 ] 0x0
add eax 0x1b
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp + 0x28 ]
fstp st0
test [ eax + 0x50 ] 0x2000000
je r-xdata
test ecx ecx
je r-xdata
mov ebx 0x1
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx 0xfffffffe
je r-xdata
mov eax [ ebp + 0x28 ]
mov ebx [ ebp - 0x10 ]
mov [ edx ] 0x90010
mov [ edx + 0x4 ] ax
add edx 0x6
cmp [ ebp - 0x34 ] 0xfffffffe
mov [ ebp - 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x10 ]
mov ebx edi
sub ebx edx
sar ebx 0x1
cmp [ edi ] 0x3a
jne r-xdata
mov ecx [ ebp + 0x28 ]
mov ecx [ ecx + 0xc ]
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx eax
mov eax [ ebp + 0x28 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x2
jne r-xdata
mov esi 0x7d
mov [ ebp - 0xc ] esi
jmp r-xdata
mov esi [ ebp + 0x28 ]
sub eax 0x21
cmp eax 0x5b
ja r-xdata
cmp eax 0x7c
jge r-xdata
lea edx [ ebp - 0x8c ]
mov ecx edi
call sub_47077a
test eax eax
je r-xdata
cmp eax 0x2e
je r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
fstp st0
mov [ eax ] 0x9
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
test ebx ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x18 ] edx
test bl 0x4
jne r-xdata
or eax 0xffffffff
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x30 ] eax
mov eax 0x19
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp [ ebp - 0x34 ] 0xfffffffe
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x40
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push ebx
push eax
lea ecx [ edi + 0x2 ]
lea edx [ ebp - 0x74 ]
call sub_471603
add esp 0x8
cmp [ ebx ] 0x0
mov edi eax
mov [ ebp - 0x4 ] edi
jne r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x6c ] 0xffffffff
cmp esi 0x1
jne r-xdata
mov ebx [ ebp - 0x64 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x68 ] ecx
cmp esi 0x1
jne r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x6c ] 0xffffffff
mov [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x80 ]
add edi 0x2
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp [ edi ] 0x29
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov ecx edi
mov [ ebp - 0x58 ] ecx
test ax ax
je r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov ebx 0xff
cmp ax bx
jbe r-xdata
mov ecx [ ebp + 0x28 ]
mov ebx [ ebp - 0x14 ]
mov edx 0x1
jmp r-xdata
xor edx edx
cmp esi 0x79
je r-xdata
xor eax eax
xor ebx ebx
mov [ ebp - 0xdc ] eax
mov [ ebp - 0xd8 ] ebx
lea ecx [ ebp - 0xd8 ]
cmp si 0x29
je r-xdata
movzx eax [ eax + lookup_table_48332b ]
jmp [ eax * 4 + jump_table_4832ef ]
xor eax eax
mov ecx [ ebp + 0xc ]
xor eax eax
cmp [ edi + 0x2 ] 0x3a
setne al
dec eax
and eax 0xffffffee
add eax 0x1f
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
cmp eax 0x3d
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0xd4 ]
cmp ecx 0x1a
je r-xdata
cmp ebx eax
je r-xdata
mov esi [ ebp - 0x70 ]
mov [ ebp - 0x64 ] esi
mov esi [ ebp - 0x6c ]
mov [ ebp - 0x34 ] esi
mov esi [ ebp - 0x78 ]
mov [ ebp - 0x5c ] esi
mov esi [ ebp - 0x68 ]
mov [ ebp - 0x54 ] esi
mov eax 0xd
jmp r-xdata
mov eax 0xc
mov eax 0x1a
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov [ ebp - 0x34 ] 0xffffffff
fstp st0
mov ebx [ ebp - 0x74 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x30 ]
jmp r-xdata
test ecx ecx
je r-xdata
movzx ebx bx
mov [ ebp - 0x64 ] ebx
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] ecx
cmp esi 0x1
je r-xdata
cmp [ ebp - 0x88 ] 0x0
je r-xdata
mov eax [ eax + 0x58 ]
movzx ecx [ edx - 0x2 ]
or eax [ ebp - 0x88 ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0x3c
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
xor ecx ecx
mov eax r--data
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] eax
mov esi edi
sub esi ecx
sar esi 0x1
cmp esi 0xffff
jbe r-xdata
cmp ax 0x29
je r-xdata
movzx eax ax
test [ eax + ecx ] 0x2
je r-xdata
xor ecx ecx
mov ecx 0x1
jmp r-xdata
cmp esi 0x7a
je r-xdata
or ebx [ ebp - 0x10 ]
not eax
and ebx eax
cmp [ edi ] 0x29
jne r-xdata
cmp si 0x3a
je r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
test ax ax
je r-xdata
mov [ ebp - 0x44 ] 0x1
mov esi 0x7d
add edi 0x2
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp [ edi + 0x2 ] 0x3f
mov esi 0x81
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8c ] edi
jne r-xdata
inc [ ecx + 0x4c ]
mov esi 0x77
add edi 0x2
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x29
jne r-xdata
movzx eax [ edi + 0x2 ]
mov ecx eax
cmp ecx 0x21
je r-xdata
mov esi 0x7b
add edi 0x2
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax 0x70
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
xor ecx ecx
mov [ ebp - 0x7c ] edx
mov [ ebp - 0xa0 ] 0x1
cmp eax 0x30
jb r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
cmp eax 0x3d
je r-xdata
mov ebx [ ebp + 0x28 ]
mov eax 0x29
mov [ ebp - 0x14 ] eax
add edi 0x2
mov [ ebp - 0x4 ] edi
mov eax 0x29
mov [ ebp - 0x14 ] eax
cmp [ edi + 0x2 ] 0x45
lea ecx [ edi + 0x2 ]
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov esi 0x1
mov [ ebp - 0x104 ] bx
mov [ ebp - 0xc ] esi
jmp r-xdata
mov edi [ ebp - 0x4 ]
cmp [ edi + 0x2 ] 0x5c
jne r-xdata
cmp ecx 0x19
je r-xdata
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
mov [ ebp - 0x58 ] 0x2
mov ecx [ ebp - 0x80 ]
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
add edx 0x2
add edi 0x2
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x54 ] 0xffffffff
mov [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
jmp r-xdata
mov ebx [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
add eax edx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
add eax 0xc
inc ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] eax
cmp eax r--data
jl r-xdata
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x50 ]
push ebx
call sub_41ee64
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x4b
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
test ax ax
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax 0x7b
je r-xdata
mov esi [ ebp + 0x28 ]
push eax
push esi
push [ ebp + 0x20 ]
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0xe8 ]
push eax
mov eax [ ebp + 0x24 ]
add eax edx
push eax
push [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x44 ]
lea edx [ ebp - 0x3c ]
push ecx
push [ ebp + 0xc ]
mov ecx ebx
push eax
call sub_406348
add esp 0x34
test eax eax
je r-xdata
mov esi 0x7d
add edi 0x2
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ecx [ ebp + 0x28 ]
mov eax [ ecx + 0x14 ]
add eax 0x4
cmp edx eax
je r-xdata
mov ebx [ ebp - 0xd8 ]
mov eax [ ebp - 0xdc ]
movzx eax si
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp eax 0x69
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
cmp ax 0x29
je r-xdata
mov eax 0x87
mov [ edx + 0x4 ] ax
mov edi [ ebp - 0x4 ]
or eax 0xffffffff
mov [ ebp - 0x58 ] eax
movzx eax [ edi + 0x2 ]
mov [ ebp - 0x24 ] 0x2
cmp eax 0x52
jne r-xdata
cmp [ edi + 0x4 ] 0x43
jne r-xdata
inc [ ecx + 0x4c ]
mov esi 0x78
mov [ ebp - 0xc ] esi
jmp r-xdata
mov eax 0x97
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov esi 0x7a
inc [ eax + 0x4c ]
add edi 0x4
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp ecx 0x3d
je r-xdata
cmp [ edi ] 0x29
jne r-xdata
cmp ax 0x39
ja r-xdata
mov eax 0x29
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp eax 0x3e
je r-xdata
mov ecx 0x3e
mov ecx 0x27
jmp r-xdata
mov ecx edi
sub ecx [ ebp - 0x38 ]
sar ecx 0x1
cmp [ ebp + 0x2c ] 0x0
mov [ ebp - 0x44 ] ecx
je r-xdata
mov eax [ ebp + 0x28 ]
mov esi [ eax + 0xc ]
cmp ecx 0x2d
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
cmp ecx 0x30
jb r-xdata
mov edi ecx
jmp r-xdata
push 0x3
mov edx r--data
call sub_41ee64
add esp 0x4
test eax eax
jne r-xdata
cmp ebx 0x5d
je r-xdata
cmp ebx 0x5e
je r-xdata
lea edx [ ebp - 0x104 ]
mov ecx ebx
call sub_471a0c
mov bx [ ebp - 0x104 ]
mov edx [ ebp - 0x8 ]
mov esi eax
mov [ ebp - 0xc ] esi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ edi + 0x4 ] 0x45
jne r-xdata
mov edi [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov esi [ ebp - 0x34 ]
cmp esi 0xfffffffe
jne r-xdata
mov eax ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x3c ] eax
movzx eax [ edi + 0x2 ]
mov [ ebp - 0x24 ] 0x0
cmp eax 0x2b
je r-xdata
xor esi esi
mov eax 0x1
add edi 0x2
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp eax 0x3f
mov eax [ ebp - 0x24 ]
jne r-xdata
movzx ecx [ edx - 0x2 ]
mov eax [ eax + 0x58 ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x54 ] eax
jmp r-xdata
mov edx [ eax ]
mov [ ebp - 0x48 ] edx
cmp ebx edx
jne r-xdata
mov eax [ ebp - 0x38 ]
lea eax [ eax + eax * 2 ]
mov ecx [ eax * 4 + r--data ]
cmp ecx 0x98
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x48 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp + 0x2c ]
cmp [ esi + 0x38 ] edi
ja r-xdata
cmp eax 0x7a
jle r-xdata
mov [ edx ] si
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x3c ] edx
mov edx [ ebp + 0x28 ]
lea ecx [ ebp - 0x84 ]
mov eax [ edx + 0x58 ]
mov edi [ edx + 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x2c ]
neg eax
sbb eax eax
and eax ecx
mov [ ebp - 0x84 ] 0x0
cmp esi 0x81
je r-xdata
mov eax [ ebp + 0x2c ]
test eax eax
je r-xdata
test ebx 0x200
jne r-xdata
sub eax 0x2d
cmp eax 0x4b
ja r-xdata
or [ ecx ] 0x1
cmp [ edi ] 0x0
je r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
test ax ax
jne r-xdata
cmp eax 0x3c
jne r-xdata
cmp [ edi + 0x4 ] 0x26
lea ebx [ edi + 0x4 ]
mov [ ebp - 0x48 ] ebx
mov ebx [ ebp - 0x1c ]
jne r-xdata
cmp [ edi + 0x2 ] 0x3f
jne r-xdata
movzx ecx [ edi + 0x6 ]
lea eax [ esi - 0x7e ]
cmp ecx 0x30
jb r-xdata
mov eax [ ebp + 0x28 ]
mov esi 0x79
inc [ eax + 0x4c ]
add edi 0x4
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ebx 0xff
cmp ax bx
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x27
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
cmp ecx 0xff
jg r-xdata
lea ecx [ ecx + ecx * 4 ]
movzx eax ax
add edi 0x2
lea ecx [ ecx - 0x18 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + ecx * 2 ]
movzx eax [ edi ]
cmp eax 0x30
jae r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
mov esi 0xff
mov [ ebp - 0x38 ] edi
cmp cx si
ja r-xdata
mov eax 0x29
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp eax 0x3c
jne r-xdata
mov ebx edi
sub ebx [ ebp - 0x58 ]
sar ebx 0x1
cmp [ ebp + 0x2c ] 0x0
je r-xdata
mov esi [ ebx + 0xc ]
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov esi 0xff
mov [ ebp - 0x58 ] edi
cmp ax si
ja r-xdata
mov eax [ ebp + 0x28 ]
xor edi edi
mov esi [ eax + 0x28 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x48 ] eax
test eax eax
jle r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
mov eax 0xff
cmp cx ax
jbe r-xdata
movzx esi [ edi ]
xor ecx ecx
mov [ ebp - 0xc ] ecx
cmp esi 0x30
jb r-xdata
lea ecx [ edi + 0x2 ]
mov [ ebp - 0x48 ] ecx
movzx ecx [ ecx ]
cmp ecx 0x30
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x3f
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
cmp ecx 0x39
jbe r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx ebx [ edi ]
cmp ebx 0x5c
je r-xdata
xor eax eax
push 0x20
push eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc4 ]
push eax
call sub_421970
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
add esi 0x6
xor eax eax
add esp 0xc
mov edx esi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x14 ] edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
add edi 0x6
jmp r-xdata
mov ecx [ ebp + 0x28 ]
test [ ecx + 0x50 ] 0x2000000
je r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edi 0x4
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x68 ] eax
cmp ecx 0x1b
je r-xdata
lea eax [ ecx - 0x6 ]
cmp eax 0x10
ja r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] esi
cmp [ ecx ] 0x6f
je r-xdata
mov esi [ ebp - 0x9c ]
jmp r-xdata
mov esi [ ebp - 0xe0 ]
add edi 0x2
mov [ ebp - 0x4 ] edi
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x94 ]
mov ecx [ ebp - 0x98 ]
mov ecx 0x7c
mov [ edx ] cx
jmp r-xdata
cmp eax 0x77
jl r-xdata
mov ebx [ ebp + 0x2c ]
mov edx [ ebp - 0x8 ]
cmp eax 0x81
je r-xdata
mov [ ecx + 0x50 ] ebx
jmp r-xdata
cmp [ eax ] 0x4
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
sub edi 0x2
mov [ eax ] 0xc
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
movzx eax [ eax + lookup_table_4833a7 ]
jmp [ eax * 4 + jump_table_483387 ]
jmp r-xdata
cmp eax 0x27
jne r-xdata
add edi 0x2
mov [ ebp - 0x38 ] 0x3e
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] eax
mov eax 0x89
mov [ edx + 0x4 ] ax
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x38 ] 0xffffffff
jmp r-xdata
movzx eax [ edi + 0x4 ]
cmp eax 0x3d
je r-xdata
cmp [ edi + eax * 2 ] 0x29
lea eax [ edi + eax * 2 ]
jne r-xdata
cmp cx 0x39
ja r-xdata
mov eax [ ebp + 0xc ]
add edi 0x2
mov [ eax ] 0x18
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x28 ]
mov eax [ ebx + 0xc ]
test [ ecx + eax ] 0x10
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x26
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov [ edx + 0x2 ] cx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x28 ]
sub eax [ ecx + 0x18 ]
sar eax 0x1
inc eax
mov [ edx + 0x4 ] ax
xor eax eax
mov [ edx + 0x6 ] ax
mov edi [ ebp - 0x4 ]
add edx 0x8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x29
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x28 ]
mov ecx [ ebp + 0x28 ]
xor eax eax
mov esi [ ecx + 0x28 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x50 ] eax
cmp [ ecx + 0x2c ] eax
jle r-xdata
cmp [ edi ] cx
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov ebx 0xff
cmp ax bx
jbe r-xdata
cmp edi eax
mov edi [ ebp + 0x28 ]
jge r-xdata
mov ebx [ ebp - 0x44 ]
mov eax [ ebp + 0xc ]
mov [ eax ] 0x3e
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
cmp [ edi ] ax
jne r-xdata
movzx eax cx
test [ eax + esi ] 0x10
je r-xdata
cmp [ edi ] ax
jne r-xdata
cmp si 0x39
ja r-xdata
cmp ecx 0x39
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x6
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
neg eax
sbb eax eax
and eax 0xffffff76
add eax 0x97
mov [ edx ] ax
mov eax [ ebp - 0x34 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
cmp eax 0xfffffffe
jne r-xdata
mov [ ebp - 0x20 ] eax
mov eax [ edi + 0x24 ]
mov edi [ ebp - 0x4 ]
add edi 0x2
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x3c
movzx ecx [ edi + 0x2 ]
setne al
lea edx [ edi + 0x2 ]
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x50 ] edx
dec eax
and eax 0x17
add eax 0x27
mov [ ebp - 0x14 ] eax
cmp ecx 0x2b
je r-xdata
cmp ecx 0x1c
je r-xdata
or esi 0xffffffff
mov [ ebp - 0x34 ] esi
mov edi [ ebp - 0x18 ]
fstp st0
push 0x4
lea eax [ edi + 0x4 ]
push edi
push eax
call sub_426c10
mov edx [ ebp - 0x8 ]
mov [ edi ] 0x4007b
add edx 0x8
add esp 0xc
cmp [ ebp + 0x2c ] 0x0
mov [ edi + 0x8 ] 0x40072
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x84 ] 0x6
jne r-xdata
movzx ecx [ ecx ]
mov [ ebp - 0x48 ] ecx
cmp ecx 0x1d
je r-xdata
cmp [ eax * 4 + r--data ] 0x0
jl r-xdata
test ecx ecx
js r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x3b
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x28 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebx + 0x20 ]
mov [ ebx + 0x5c ] 0x1
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0xe
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
dec [ esi + 0x4c ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x114 ]
mov ecx [ ebp - 0x80 ]
add edi 0x2
mov [ ebp - 0x10 ] ebx
mov [ eax ] ebx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov [ ebp - 0x9c ] eax
xor eax 0x1
mov [ ebp - 0xe0 ] eax
test bl 0x1
je r-xdata
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
mov [ ebp - 0x88 ] 0x1
lea ecx [ ebp - 0xdc ]
jmp r-xdata
mov eax [ ebp + 0x28 ]
or [ ecx ] 0x80000
or [ eax + 0x54 ] 0x400
jmp r-xdata
or [ ecx ] 0x2
jmp r-xdata
or [ ecx ] 0x4
jmp r-xdata
or [ ecx ] 0x8
jmp r-xdata
or [ ecx ] 0x200
jmp r-xdata
or [ ecx ] 0x40
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
cmp eax 0x2d
je r-xdata
add edi 0x2
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp - 0x48 ] eax
movzx eax [ eax ]
mov ecx 0xff
cmp ax cx
ja r-xdata
cmp eax 0x21
je r-xdata
lea edi [ eax + 0x2 ]
mov [ ebp - 0x8c ] edi
movzx ecx [ edi + eax * 2 + 0x2 ]
inc eax
cmp ecx 0x30
jae r-xdata
cmp esi 0x3c
je r-xdata
mov eax [ ecx + 0x28 ]
xor edx edx
mov [ ebp - 0x50 ] eax
cmp [ ecx + 0x2c ] edx
jle r-xdata
mov edi eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0x2a
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x28 ]
cmp [ esi + 0x2c ] 0x2710
jge r-xdata
movzx eax ax
test [ eax + esi ] 0x10
je r-xdata
push [ ebp - 0x28 ]
mov edx [ ebp - 0x38 ]
xor eax eax
test ebx ebx
setne al
push eax
push ecx
mov ecx edi
call sub_470f54
mov ecx eax
add esp 0xc
mov [ ebp - 0xc ] ecx
test ecx ecx
jle r-xdata
movzx ecx [ esi ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x28 ]
inc edi
mov eax [ eax + 0x30 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x48 ]
cmp edi eax
jl r-xdata
cmp [ esi + ebx * 2 + 0x2 ] ax
jne r-xdata
cmp ecx 0x20
jg r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1d
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
add edi 0x2
lea ecx [ ecx + ecx * 4 ]
movzx eax si
mov [ ebp - 0x4 ] edi
movzx esi [ edi ]
lea ecx [ ecx - 0x18 ]
lea ecx [ eax + ecx * 2 ]
cmp esi 0x30
jae r-xdata
mov edi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
jmp r-xdata
or eax 0xffffffff
mov [ ebp - 0x34 ] eax
movzx edx [ edi + 0x4 ]
lea ecx [ edi + 0x4 ]
cmp edx 0x30
jb r-xdata
cmp ecx 0x2d
je r-xdata
mov edi [ ebp - 0x4 ]
movzx eax [ edi + 0x2 ]
cmp eax 0x3c
je r-xdata
test ecx ecx
js r-xdata
mov eax [ ebp - 0x3c ]
fld [ r--data ]
mov ecx [ ebp - 0x18 ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ eax + 0x24 ]
mov eax [ eax + 0x10 ]
add eax 0x2
cmp ecx eax
jb r-xdata
movzx eax cx
fstp st0
sub eax 0x1e
je r-xdata
cmp ecx 0x1e
je r-xdata
movzx eax [ eax * 4 + r--data ]
mov ecx [ ebp - 0x8 ]
mov edi eax
mov [ ecx ] ax
lea eax [ esi + esi ]
push eax
push [ ebp - 0x58 ]
mov [ ecx + 0x2 ] si
add ecx 0x4
push ecx
mov [ ebp - 0x8 ] ecx
call sub_41faa0
mov edx [ ebp - 0x8 ]
add esp 0xc
lea edx [ edx + esi * 2 ]
xor eax eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
movzx eax cx
mov edi eax
jmp r-xdata
xor eax eax
cmp [ ebx + 0x4c ] eax
setg al
add edx 0x2
mov [ ebp - 0x8 ] edx
add eax 0x98
cmp [ ebp - 0x34 ] 0xfffffffe
mov [ edx - 0x2 ] ax
movzx edi ax
jne r-xdata
mov eax 0x9a
mov [ edx ] ax
mov ax [ ecx + 0x4 ]
mov [ edx + 0x2 ] ax
mov ecx [ ecx ]
add edx 0x4
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x8 ] edx
cmp eax 0x8b
je r-xdata
mov esi [ ebx ]
mov ebx [ ebp - 0x84 ]
mov ecx 0x7fffffeb
sub ecx esi
lea eax [ ebx - 0x4 ]
cmp ecx eax
jl r-xdata
mov esi edx
xor ecx ecx
movzx esi [ edi ]
cmp esi 0x29
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov [ ebp - 0x58 ] eax
cmp eax 0x2b
jne r-xdata
mov eax [ ebp + 0xc ]
add edi 0x2
mov [ eax ] 0x1c
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x28 ]
mov ecx [ ecx + 0xc ]
mov [ ebp - 0x18 ] ecx
test [ eax + ecx ] 0x10
je r-xdata
cmp eax 0x3c
je r-xdata
mov ax [ ecx + 0x38 ]
inc ax
mov [ esi ] ax
lea eax [ ebx + ebx ]
push eax
push [ ebp - 0x58 ]
lea eax [ esi + 0x2 ]
push eax
call sub_41faa0
mov edx [ ebp - 0x8 ]
add esp 0xc
xor eax eax
mov [ esi + ebx * 2 + 0x2 ] ax
mov edi [ ebp - 0x4 ]
mov esi [ ebp + 0x28 ]
cmp eax esi
je r-xdata
js r-xdata
cmp [ esi + ebx * 2 + 0x2 ] ax
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x31
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
lea eax [ ebx + 0x2 ]
cmp eax [ esi + 0x30 ]
jle r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov [ eax ] 0xf
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x38 ]
push ebx
lea edx [ esi + 0x2 ]
call sub_47191e
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x44 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x30
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x28 ]
push [ ebp - 0x28 ]
mov esi [ eax + 0x1c ]
mov edx [ ebp - 0x38 ]
mov [ eax + 0x1c ] edi
mov edi [ ebp + 0x28 ]
xor eax eax
test ebx ebx
setne al
push eax
push ecx
mov ecx edi
call sub_470f54
mov edx [ ebp - 0x8 ]
mov ecx eax
add esp 0xc
mov [ ebp - 0xc ] ecx
mov [ edi + 0x1c ] esi
test ecx ecx
jns r-xdata
cmp eax 0x2b
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x2c ]
test ecx ecx
je r-xdata
mov eax ebx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
mov edx [ ebp - 0x8 ]
cmp [ ecx ] ax
je r-xdata
cmp dx 0x39
ja r-xdata
movzx ecx [ edx ]
mov esi 0x1
test cx cx
je r-xdata
mov edx [ ebp - 0x8 ]
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
mov [ ebp - 0x20 ] 0x0
cmp ecx 0x3c
jne r-xdata
cmp eax 0x27
je r-xdata
mov edx [ ebp - 0x8 ]
neg ecx
jmp r-xdata
cmp ecx 0xf
je r-xdata
mov eax edi
mov edi [ ebp + 0x28 ]
sub eax [ edi + 0x14 ]
movzx edi [ ecx - 0x2 ]
add eax 0x2
sar eax 0x1
cmp edi eax
jne r-xdata
mov [ ebp - 0x20 ] 0xd
dec eax
je r-xdata
cmp ecx 0x1f
je r-xdata
jmp [ edi * 4 + jump_table_4832d7 ]
mov ebx [ ebp + 0x28 ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] edx
add edi 0xffffff70
cmp edi 0x5
ja r-xdata
mov [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] ebx
mov ebx [ ebp - 0x54 ]
mov [ ebp - 0x68 ] ebx
mov ebx [ ebp - 0x64 ]
mov [ ebp - 0x70 ] ebx
mov ebx [ ebp - 0x34 ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0xa4 ] 0x0
cmp eax 0x7b
jl r-xdata
mov ecx [ ebp + 0x2c ]
lea eax [ ebx - 0x4 ]
mov ebx [ ebp - 0x10 ]
add eax esi
mov [ ecx ] eax
mov ecx [ ebp - 0x80 ]
mov [ edx + 0x2 ] 0x720002
mov eax 0x2
mov [ edx + 0x6 ] ax
mov edi [ ebp - 0x4 ]
add edx 0x8
add edi eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] edi
jmp r-xdata
movzx eax [ esi + 0x2 ]
inc ecx
cmp [ esi + eax * 2 ] 0x72
lea esi [ esi + eax * 2 ]
jne r-xdata
mov eax 0x8b
cmp [ edx + 0x4 ] ax
jne r-xdata
mov edi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
xor ecx ecx
mov [ ebp - 0x48 ] 0xff
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x20 ] edi
cmp ax [ ebp - 0x48 ]
ja r-xdata
inc [ esi + 0x38 ]
mov ax [ esi + 0x38 ]
mov esi [ ebp - 0xc ]
dec edx
mov ecx [ ecx + 0x38 ]
movzx eax [ eax ]
inc ecx
cmp eax ecx
je r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ eax + 0x30 ]
mov eax [ eax + 0x2c ]
sub eax edi
imul eax ecx
add eax eax
push eax
lea eax [ esi + ecx * 2 ]
push esi
push eax
call sub_426c10
mov ecx [ ebp + 0x28 ]
add esp 0xc
mov ecx [ ebp + 0x28 ]
inc edi
mov eax [ ecx + 0x30 ]
lea esi [ esi + eax * 2 ]
cmp edi [ ecx + 0x2c ]
jge r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ eax + 0x38 ]
movzx eax [ esi ]
inc ecx
cmp eax ecx
je r-xdata
inc [ esi + 0x2c ]
add edi 0x2
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov [ esi + 0x30 ] eax
cmp ebx 0x20
jle r-xdata
cmp [ ebp + 0x2c ] 0x0
mov esi [ edi + 0x14 ]
mov [ ebp - 0x18 ] edx
jne r-xdata
mov esi [ ebp - 0x34 ]
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edi [ ebp + 0x28 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x3a
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov eax [ eax + 0x38 ]
sub eax ecx
lea ecx [ eax + 0x1 ]
mov [ ebp - 0xc ] ecx
test ecx ecx
jg r-xdata
mov ecx [ ebp - 0x2c ]
test ecx ecx
jne r-xdata
cmp esi edx
ja r-xdata
movzx ebx [ edi ]
mov eax ebx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov edi [ ebp - 0x50 ]
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x39
jmp r-xdata
movzx edx [ ecx + 0x2 ]
add ecx 0x2
cmp edx 0x30
jae r-xdata
cmp [ edx ] ax
je r-xdata
cmp cx ax
je r-xdata
xor eax eax
cmp ecx 0x27
setne al
dec eax
and eax 0xffffffaa
add eax 0x7d
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax 0x3e
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp eax 0x7b
je r-xdata
cmp esi 0xfffffffe
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0xf0 ]
push eax
lea eax [ ebp - 0xec ]
push eax
lea edx [ ebp - 0x10c ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0xec ] 0x0
mov [ ebp - 0xf0 ] 0x0
call sub_4714aa
add esp 0xc
test eax eax
je r-xdata
cmp ecx 0x10
je r-xdata
lea eax [ edi + 0x2 ]
mov [ ecx - 0x2 ] ax
movzx esi [ edx - 0x2 ]
mov [ ebp - 0x38 ] esi
cmp ecx 0x1e
ja r-xdata
mov ax [ edx - 0x2 ]
lea esi [ edx - 0x2 ]
mov [ ebp - 0x48 ] 0xfc00
and ax [ ebp - 0x48 ]
mov [ ebp - 0x48 ] 0xdc00
mov [ ebp - 0x44 ] esi
cmp ax [ ebp - 0x48 ]
jne r-xdata
mov [ ebp - 0x20 ] 0x1a
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x20
je r-xdata
or [ ebx + 0x54 ] 0x1000
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebx + 0x60 ] 0x1
jmp r-xdata
cmp eax 0x77
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
cmp ecx 0x2
jg r-xdata
cmp ecx 0x1
jle r-xdata
mov eax edi
sub eax [ ebp - 0x20 ]
sar eax 0x1
cmp [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] eax
jle r-xdata
mov esi [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
mov [ eax ] 0x41
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x28 ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x48 ]
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x48 ] 0x1
jmp r-xdata
test [ ebp - 0x10 ] 0x80000
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax 0x6f
mov [ edx ] ax
sub esi [ edi + 0x14 ]
add edx 0x4
sar esi 0x1
cmp [ ebp - 0x34 ] 0xfffffffe
mov [ edx - 0x2 ] si
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xa4 ] 0x0
jne r-xdata
xor eax eax
mov [ edx ] ax
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x10 ]
test bl 0x1
mov eax 0x0
setne al
mov [ ebp - 0x18 ] edx
add edx 0x4
mov [ ebp - 0x8 ] edx
add eax 0x6d
mov [ edx - 0x4 ] ax
mov [ edx - 0x2 ] cx
mov eax 0x1
cmp ecx 0x20
jge r-xdata
mov [ ebp - 0x34 ] 0xffffffff
mov edi [ ebp + 0x28 ]
add ecx [ edi + 0x38 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0xf
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
cmp ebx 0x5c
jne r-xdata
cmp ebx 0x5b
je r-xdata
sub esi edx
sar esi 0x1
add [ ecx ] esi
mov esi edx
mov [ ebp - 0x44 ] 0x1
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x60 ] esi
jmp r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
and ebx 0x3ff
shl ebx 0xa
and eax 0x3ff
or ebx eax
add ebx 0x10000
mov [ ebp - 0x4 ] edi
jmp r-xdata
movzx esi [ edi ]
mov ecx esi
mov [ ebp - 0x50 ] ecx
cmp ecx 0x2b
jne r-xdata
mov edx [ ebp - 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax ] 0x39
jmp r-xdata
mov [ ebp - 0x48 ] 0xff
cmp cx [ ebp - 0x48 ]
ja r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax ] 0x45
jmp r-xdata
mov edx [ ebp - 0x8 ]
xor eax eax
cmp [ ebp - 0xc ] 0x10
mov [ ebp - 0x18 ] edx
sete al
xor ecx ecx
cmp eax [ ebp - 0x10c ]
movzx eax [ ebp - 0xec ]
setne cl
add ecx 0xf
mov [ edx ] cx
mov [ edx + 0x2 ] ax
movzx eax [ ebp - 0xf0 ]
mov [ edx + 0x4 ] ax
mov edi [ ebp - 0x4 ]
add edx 0x6
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp ecx 0x5
je r-xdata
mov eax [ ebp + 0x28 ]
mov eax [ ebp + 0x28 ]
cmp ebx 0x1
jle r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x27
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
cmp ecx 0x17
jae r-xdata
mov ebx [ ebp - 0x10 ]
test esi esi
js r-xdata
test ecx ecx
js r-xdata
test ecx ecx
jns r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov [ eax ] 0x1b
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp ecx 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov [ eax ] 0x36
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ax [ edi ]
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp ax 0x29
jne r-xdata
mov ax [ edi ]
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp ax [ ebp - 0x38 ]
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov esi [ ebp - 0xc ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x50 ] ecx
test ecx ecx
js r-xdata
mov eax [ ecx + 0x30 ]
mov ecx [ ebp - 0x50 ]
inc edx
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x28 ]
mov eax [ ebp - 0x50 ]
cmp edx [ ecx + 0x2c ]
jl r-xdata
lea eax [ ebx + ebx ]
push eax
lea eax [ esi + 0x2 ]
push eax
push [ ebp - 0x58 ]
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov [ eax ] 0x2b
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
test esi esi
jne r-xdata
mov edx [ ebp - 0x28 ]
push ecx
mov ecx [ edi + 0x14 ]
call sub_47035d
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
add esp 0x4
mov esi eax
or [ edi + 0x48 ] eax
cmp ecx [ edi + 0x44 ]
jle r-xdata
shl eax cl
mov edx [ ebp - 0xc ]
cmp [ edi + 0x2 ] 0x45
jne r-xdata
movzx esi [ edi + 0x2 ]
cmp esi 0x3a
je r-xdata
cmp ebx 0x5c
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
mov eax [ ebp + 0x28 ]
movzx ecx cx
mov eax [ eax + 0xc ]
mov cl [ ecx + eax ]
mov al cl
and al 0x4
movzx eax al
neg eax
sbb eax eax
and esi eax
mov eax [ ebp - 0x14 ]
test cl 0x10
je r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
cmp ecx 0x4
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ eax + 0x58 ]
or ecx [ ebp - 0x88 ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x54 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x44 ]
mov esi edx
sub esi ecx
sar esi 0x1
lea eax [ esi + esi ]
push eax
push ecx
lea eax [ ebp - 0x140 ]
push eax
call sub_41faa0
mov edi [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add esp 0xc
or esi 0x10000000
mov [ ebp - 0x38 ] esi
sub esi 0x2
mov [ ebp - 0x44 ] esi
cmp ecx 0x6a
jne r-xdata
movzx esi cx
fstp st0
mov [ ebp - 0x20 ] 0x34
mov [ ebp - 0x38 ] esi
test eax eax
jne r-xdata
mov eax [ ebp - 0xc8 ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x54 ] esi
jmp r-xdata
mov [ ebp - 0x34 ] 0xffffffff
mov [ ebp - 0x6c ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xe8 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0xa4 ] 0x1
mov [ ebp - 0x6c ] 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
test esi esi
js r-xdata
or esi 0xffffffff
or ecx esi
mov [ ebp - 0x94 ] esi
mov [ ebp - 0x98 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub edi 0x2
mov [ eax ] 0x1a
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov ebx 0xff
cmp ax bx
jbe r-xdata
cmp ax 0x30
jb r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
push [ ebp - 0x28 ]
xor eax eax
test ebx ebx
setne al
xor edx edx
push eax
push ecx
mov ecx edi
call sub_470f54
add esp 0xc
test eax eax
js r-xdata
mov esi [ edi + 0x20 ]
test esi esi
je r-xdata
mov [ edi + 0x44 ] ecx
cmp [ edi + 0x4 ] 0x45
jne r-xdata
mov esi edi
cmp ebx 0xd
je r-xdata
mov ecx [ ebp - 0x1c ]
add edi 0x2
mov [ ebp - 0x2c ] 0x0
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8c ]
mov ecx edi
call sub_47077a
test eax eax
je r-xdata
cmp esi 0x2e
je r-xdata
mov ebx [ ebp - 0x10 ]
mov edi [ ebp + 0x28 ]
push 0x1
push ebx
push [ edi + 0x38 ]
lea edx [ ebp - 0xd4 ]
push [ ebp + 0xc ]
lea ecx [ ebp - 0x4 ]
call sub_407888
mov esi eax
mov eax [ ebp + 0xc ]
add esp 0x10
cmp [ eax ] 0x0
jne r-xdata
movzx ecx [ edx + 0x2 ]
add edx 0x2
test cx cx
jne r-xdata
cmp ecx 0x1d
jge r-xdata
mov [ edi + 0x40 ] 0x1
jmp r-xdata
cmp ecx 0x1
je r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x2 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp eax 0xf
je r-xdata
push eax
jmp r-xdata
cmp ecx 0x6b
je r-xdata
mov ecx [ ebp - 0x30 ]
fstp st0
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] eax
jge r-xdata
mov eax [ ebp - 0xc8 ]
mov ebx [ ebp - 0x10 ]
mov ecx [ ebp - 0x80 ]
add edi 0x2
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax [ ebp - 0xe8 ]
mov esi ecx
or esi [ ebp - 0x48 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x94 ] esi
jmp r-xdata
mov edi [ ebp - 0x4 ]
cmp [ edi ] 0x29
jne r-xdata
mov eax [ ebp - 0x58 ]
test eax eax
jle r-xdata
movzx ebx ax
test [ esi + ebx ] 0x10
je r-xdata
or ecx 0xffffffff
cmp ax 0x39
ja r-xdata
cmp [ ebp + 0x24 ] 0x0
jg r-xdata
mov eax [ edi + 0x14 ]
mov ecx [ ebp - 0xc ]
lea esi [ eax + ecx * 2 ]
mov ecx [ edi + 0x34 ]
mov eax [ edi + 0x10 ]
lea eax [ eax + ecx * 2 ]
add eax 0xffffff38
cmp [ edi + 0x24 ] eax
jb r-xdata
movzx eax [ esi + 0x4 ]
cmp eax ecx
je r-xdata
mov [ ebp - 0x2c ] ecx
jmp r-xdata
add edi 0x4
xor ecx ecx
mov [ ebp - 0x4 ] edi
cmp [ edi + 0x2 ] 0x5c
je r-xdata
mov eax [ ebp + 0x28 ]
or [ eax + 0x54 ] 0x800
jmp r-xdata
cmp ebx 0xa
je r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
movzx ebx [ edi ]
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x2c ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x28 ]
mov ebx [ eax + 0x8 ]
cmp esi 0x3a
jne r-xdata
cmp esi 0x3d
jne r-xdata
test esi esi
jne r-xdata
jmp r-xdata
cmp ecx 0x22
jg r-xdata
mov edx [ ebp - 0x8 ]
lea eax [ ecx - 0x6 ]
cmp eax 0x10
ja r-xdata
cmp [ ebp - 0x30 ] 0x0
mov eax edx
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x8 ] edx
je r-xdata
or eax 0xffffffff
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x1c ] eax
push [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
lea eax [ edi + 0x2 ]
push eax
call sub_407ad2
mov edi [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add esp 0xc
test eax eax
jne r-xdata
cmp ecx 0x6c
je r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
push [ ebp + 0x28 ]
mov edi [ ebp + 0x28 ]
xor ecx ecx
mov eax [ edi + 0x28 ]
cmp [ edi + 0x2c ] ecx
jle r-xdata
test ecx ecx
jle r-xdata
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx - 0x18 ]
lea ecx [ ebx + ecx * 2 ]
jmp r-xdata
push edi
push [ ebp - 0x28 ]
mov ecx esi
push [ ebp + 0x20 ]
call sub_4707f5
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x24 ]
mov ecx edx
sub ecx [ edi + 0x14 ]
add ecx 0x2
sar ecx 0x1
mov [ eax ] cx
add [ edi + 0x24 ] 0x2
jmp r-xdata
mov ecx edi
call sub_470bfc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax 0x1
mov [ esi + 0x6 ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
test ecx ecx
jne r-xdata
mov ebx [ ebp - 0x80 ]
test ebx ebx
je r-xdata
cmp ebx 0x5d
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1f
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5e
jne r-xdata
cmp esi 0x5
jne r-xdata
mov ebx [ ebp - 0xd4 ]
mov eax [ ebp - 0x4 ]
mov edi [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x80 ] eax
sub edi 0x2
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] edx
mov ecx [ ebp + 0x28 ]
mov eax [ ebp - 0x58 ]
or [ ecx + 0x58 ] eax
mov ebx [ ebp - 0x10 ]
mov ecx [ ebp - 0x80 ]
add edi 0x2
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov edx [ ebp - 0x20 ]
add ecx edx
mov [ ebp - 0x14 ] ecx
test ebx ebx
jne r-xdata
xor ecx ecx
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp ecx 0x6d
je r-xdata
cmp ebx 0x1
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov edi [ ebp + 0x28 ]
cmp ecx [ edi + 0x2c ]
mov edi [ ebp - 0x48 ]
jge r-xdata
mov edi [ ebp - 0x48 ]
mov ebx eax
mov esi ecx
cmp eax 0x2d
mov eax [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov [ eax ] 0x28
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
jmp r-xdata
cmp edx 0x2
jl r-xdata
cmp [ edi + 0x2 ] 0x2d
je r-xdata
lea edi [ ebx + 0x2 ]
mov [ ebp - 0x4 ] edi
movzx ebx [ edi ]
mov [ ebp - 0x80 ] 0x0
test ebx ebx
jne r-xdata
test eax eax
jne r-xdata
mov esi [ ebp - 0x68 ]
mov esi 0x1
add edi 0x2
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp esi 0xc
je r-xdata
lea ebx [ esi + 0x3 ]
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp ecx 0xe
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov [ edx ] cx
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x80 ]
add edx 0x2
add edi 0x2
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp ebx 0x1
jne r-xdata
mov ebx [ ebp - 0x30 ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax 0x10
je r-xdata
cmp ecx 0x6e
je r-xdata
lea eax [ esi + 0x68 ]
mov [ edx ] ax
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
mov [ edx + 0x2 ] bx
mov [ edx + 0x4 ] ax
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
add edx 0x6
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
lea eax [ esi + 0x62 ]
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp ecx 0x1
jne r-xdata
push [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
xor eax eax
test ebx ebx
mov ebx [ ebp + 0x28 ]
setne al
mov ecx ebx
push eax
push edi
call sub_470f54
add esp 0xc
test eax eax
jle r-xdata
mov ax [ eax ]
inc [ edx + 0x4 ]
mov [ edx + 0x6 ] ax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x58 ] esi
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x28 ]
inc esi
mov eax [ ecx + 0x30 ]
lea ebx [ ebx + eax * 2 ]
cmp esi [ ecx + 0x2c ]
jl r-xdata
add ecx [ eax + 0x38 ]
mov eax [ eax + 0x38 ]
sub eax ecx
lea ecx [ eax + 0x1 ]
mov eax [ ebp + 0x28 ]
jmp r-xdata
inc edx
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp edx 0x1
je r-xdata
add edi 0x4
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5c
je r-xdata
cmp esi edx
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1e
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
test al 0x1
je r-xdata
mov edx [ ebp - 0x8c ]
sub edx edi
sar edx 0x1
mov ecx edi
call sub_47072f
mov edx eax
test edx edx
js r-xdata
mov [ eax ] 0x47
jmp r-xdata
cmp esi 0x1a
jne r-xdata
mov edi [ ebp - 0x4 ]
mov ecx 0xd
jmp r-xdata
lea eax [ edx + 0x29 ]
mov edx [ ebp - 0x18 ]
add edx 0x4
mov [ edx - 0x4 ] ax
mov eax [ ebp - 0x30 ]
mov [ edx - 0x2 ] bx
mov [ ebp - 0x8 ] edx
test eax eax
jns r-xdata
mov ebx [ ebp - 0x30 ]
cmp ebx 0xffffffff
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp ebx 0x1
jne r-xdata
lea eax [ ecx + 0x21 ]
cmp ecx 0x77
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
lea eax [ esi + 0x64 ]
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
lea eax [ esi + 0x66 ]
mov [ edx ] ax
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
inc [ edx + 0x4 ]
mov [ edx + 0x6 ] ax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
push edi
lea edx [ ebx + 0x2 ]
call sub_47191e
add esp 0x4
test eax eax
je r-xdata
cmp ecx [ eax + 0x3c ]
jg r-xdata
test ecx ecx
jle r-xdata
cmp [ edi + 0x2 ] 0x5d
jne r-xdata
push ebx
push ebx
push [ ebp + 0x28 ]
cmp [ edi + 0x2 ] 0x45
jne r-xdata
movzx eax [ edi ]
test ax ax
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x44 ]
test eax 0x20000000
je r-xdata
xor ecx ecx
cmp edx 0x2
setle cl
dec ecx
and edx ecx
mov ecx [ ebp - 0x1c ]
cmp esi 0x19
je r-xdata
mov edi [ ebp - 0x4 ]
cmp [ edi + 0x2 ] 0x5c
jne r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov edx eax
mov [ ebp - 0x8 ] edx
cmp ebx 0x1
je r-xdata
lea eax [ ecx + 0x23 ]
jmp r-xdata
lea eax [ ecx + 0x27 ]
mov ecx [ ebp - 0x18 ]
lea edx [ ecx + 0x2 ]
mov [ ecx ] ax
mov [ edx ] bx
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
lea eax [ ecx + 0x25 ]
mov ecx [ ebp - 0x18 ]
lea edx [ ecx + 0x2 ]
mov [ ecx ] ax
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov [ edx ] si
add edx 0x2
test esi 0x10000000
jne r-xdata
mov eax 0x97
fstp st0
cmp cx ax
je r-xdata
mov eax 0x81
cmp cx ax
ja r-xdata
movzx eax [ ecx ]
cmp eax 0x5d
jne r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ecx ] 0x52
jne r-xdata
mov [ edx + 0x6 ] cx
jmp r-xdata
jmp r-xdata
cmp [ edi ] 0x5c
jne r-xdata
add edi 0x4
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5c
je r-xdata
mov edi esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx 0xfffffffe
jne r-xdata
mov ebx [ ebp - 0x64 ]
mov [ ebp - 0x6c ] edx
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] edx
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x70 ] ebx
mov ebx [ ebp - 0x10 ]
test eax eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x68 ] edx
jne r-xdata
or edx 0xffffffff
mov [ ebp - 0x34 ] edx
lea esi [ edx + edx * 2 ]
push 0x20
mov eax [ esi * 4 + r--data ]
add eax ebx
push eax
lea eax [ ebp - 0x134 ]
push eax
call sub_41faa0
mov eax [ esi * 4 + r--data ]
mov ecx [ esi * 4 + r--data ]
add esp 0xc
test eax eax
js r-xdata
mov eax esi
neg eax
sbb eax eax
and eax 0xe
add eax edx
mov edi [ eax * 4 + rw-data ]
test edi edi
je r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x24 ]
jmp r-xdata
add [ ebp - 0xc ] 0x2
mov edx [ edi + 0x8 ]
inc ecx
lea eax [ esi - 0x6 ]
mov [ ebp - 0x1c ] ecx
cmp eax 0x1c
ja r-xdata
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
mov eax 0x1
mov [ ebp - 0x2c ] eax
jmp r-xdata
cmp [ edi + 0x4 ] 0x45
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov edi [ ebp - 0x1c ]
mov [ edx ] si
add edx 0x2
test edi edi
js r-xdata
test esi 0x10000000
je r-xdata
mov edx [ ebp - 0x48 ]
lea eax [ ecx + 0x27 ]
mov [ edx ] ax
lea eax [ ebx - 0x1 ]
mov [ edx + 0x2 ] ax
add edx 0x4
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ecx ] ax
lea edx [ ecx + 0x2 ]
mov ebx [ ebp - 0xc ]
mov [ edx ] di
mov [ edx + 0x2 ] bx
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
add edx 0x4
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
and esi 0x7
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x140 ]
push eax
push edx
call sub_41faa0
mov edx [ ebp - 0x8 ]
add esp 0xc
lea edx [ edx + esi * 2 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0xb
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov eax edx
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] 0x81
sar eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x50 ] 0x0
cmp cx [ ebp - 0x44 ]
je r-xdata
cmp eax 0x29
je r-xdata
movzx eax [ ecx + 0x4 ]
cmp eax 0x10
je r-xdata
cmp edi 0x6
jne r-xdata
xor eax eax
lea ebx [ eax + 0x1 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp - 0x5c ]
add edi 0x2
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x68 ] eax
test edi edi
je r-xdata
cmp [ edi + 0x2 ] 0x51
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
mov ecx eax
mov [ ebp - 0x90 ] ecx
je r-xdata
cmp eax 0x5d
je r-xdata
test eax eax
je r-xdata
mov edi [ ebp - 0x20 ]
cmp edi eax
jne r-xdata
test ecx ecx
jns r-xdata
xor edx edx
lea esi [ eax + ebx ]
test ecx ecx
js r-xdata
mov eax [ ebp - 0x8c ]
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
add eax 0x2
mov [ ebp - 0x80 ] eax
add edi 0xfffffffe
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edi [ ebp - 0x4 ]
test bl 0x40
jne r-xdata
movzx eax [ eax + lookup_table_483227 ]
jmp [ eax * 4 + jump_table_4831f3 ]
mov edx [ ebp - 0x14 ]
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
add edi 0x4
jmp r-xdata
mov [ edx ] si
add edx 0x2
test esi 0x10000000
je r-xdata
mov ebx [ ebp - 0xc ]
lea eax [ ecx + 0x21 ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov [ edx ] di
mov [ edx + 0x2 ] bx
add edx 0x4
lea eax [ ecx + 0x21 ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
and esi 0x7
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x140 ]
push eax
push edx
call sub_41faa0
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x1c ]
lea edx [ edx + esi * 2 ]
mov esi [ ebp - 0x38 ]
add esp 0xc
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] edx
test edi edi
jns r-xdata
mov eax [ ebp - 0x18 ]
mov ebx 0x8b
cmp [ eax + 0x4 ] bx
mov ebx [ ebp - 0x74 ]
mov eax [ ebp - 0xc ]
jne r-xdata
cmp cx 0x7b
jb r-xdata
movzx eax [ eax + r--data ]
mov ebx [ ebp - 0x28 ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x3c ] ecx
test ebx ebx
je r-xdata
cmp eax 0x43
jne r-xdata
mov eax 0x2
cmp eax 0xf
je r-xdata
mov eax [ ebp - 0x50 ]
test eax eax
jle r-xdata
push edi
mov edx r--data
call sub_41ee64
add esp 0x4
test eax eax
jne r-xdata
mov eax 0xffff
movzx edx [ ecx + ebx * 2 ]
cmp edx 0x30
jb r-xdata
cmp ebx 0xffff
ja r-xdata
mov eax [ ebp - 0x34 ]
cmp eax 0xfffffffe
jne r-xdata
add edi 0x4
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5c
jne r-xdata
cmp ecx 0x5c
je r-xdata
and eax 0xfc00
cmp eax 0xd800
je r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0x20 ]
xor eax eax
mov [ esi ] ax
mov eax 0x6c
mov [ edx ] ax
xor eax eax
add esi 0x2
test edi edi
setne al
mov [ ebp - 0x60 ] esi
mov [ edx + 0x4 ] ax
test ecx ecx
jle r-xdata
test ebx 0x20000000
je r-xdata
mov eax 0x6b
jmp r-xdata
mov eax 0x6a
cmp ecx 0x1
jne r-xdata
neg ecx
mov al [ esi + edx ]
not al
and [ ebp + edx - 0x134 ] al
inc edx
cmp edx 0x20
jb r-xdata
mov al [ esi + edx ]
or [ ebp + edx - 0x134 ] al
inc edx
cmp edx 0x20
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x7
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xc ]
movzx ebx [ edi ]
dec ecx
sub edx 0x2
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edi [ esi * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
mov esi [ ebp - 0x24 ]
sub edi 0x2
mov [ ebp - 0x80 ] eax
dec ecx
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x38 ] 0x1
xor ecx ecx
xor ecx ecx
mov [ ebp - 0x38 ] 0x1
xor ecx ecx
movzx eax [ edx ]
or [ ebp - 0xc4 ] al
movzx eax [ edx + 0x1 ]
and al 0xf7
or [ ebp - 0xc3 ] al
mov ecx 0x2
lea eax [ ebp - 0xc4 ]
xor esi esi
mov [ ebp - 0x38 ] 0x1
sub edx eax
push 0xffffffff
push r--data
jmp r-xdata
push 0xffffffff
push r--data
push r--data
push edi
push ebx
lea edx [ ebp - 0x60 ]
lea ecx [ ebp - 0xc4 ]
call sub_47050a
mov esi [ ebp - 0x60 ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] esi
jmp r-xdata
push r--data
push edi
push ebx
lea edx [ ebp - 0x60 ]
lea ecx [ ebp - 0xc4 ]
call sub_47050a
mov esi [ ebp - 0x60 ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] esi
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0xf4 ]
push eax
lea eax [ ebp - 0xe4 ]
push eax
lea edx [ ebp - 0x108 ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0xe4 ] 0x0
mov [ ebp - 0xf4 ] 0x0
call sub_4714aa
add esp 0xc
test eax eax
je r-xdata
sub eax ebx
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edx ] di
mov [ edx + 0x2 ] ax
mov eax [ ebp - 0x30 ]
add edx 0x4
and esi 0x7
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x140 ]
push eax
push edx
call sub_41faa0
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x30 ]
lea edx [ edx + esi * 2 ]
mov esi [ ebp - 0x38 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
fstp st0
jmp r-xdata
test ebx ebx
jg r-xdata
mov ecx [ ebp - 0x30 ]
mov esi edx
sub esi ecx
sar esi 0x1
test esi esi
jle r-xdata
mov ax [ ecx - 0x2 ]
mov esi 0xfc00
and ax si
mov esi 0xd800
cmp ax si
jne r-xdata
mov ebx [ ebp - 0x28 ]
movzx eax [ ecx ]
add eax 0xffffffdf
cmp eax 0x3a
ja r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xffffffec
add eax 0x23
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
cmp eax [ ebx + 0x3c ]
jg r-xdata
mov edx [ ebp - 0x8 ]
mov eax 0x8b
jmp r-xdata
cmp edx 0x39
ja r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x70 ] ecx
test esi esi
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x34 ] eax
mov ecx 0x1
mov [ ebp - 0x2c ] ecx
jmp r-xdata
cmp [ edi + 0x2 ] 0x45
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp ecx ebx
jb r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov edx esi
mov [ ebp - 0x8 ] esi
or eax 0x2
mov [ edx + 0x4 ] ax
add edx 0x6
mov eax esi
sub eax edx
and eax 0xfffffffe
push eax
push edx
lea eax [ edx + 0x20 ]
push eax
mov [ ebp - 0x8 ] edx
call sub_426c10
mov ecx [ ebp - 0x8 ]
push 0x20
lea eax [ ebp - 0xc4 ]
push eax
push ecx
call sub_41faa0
lea edx [ esi + 0x20 ]
add esp 0x18
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x2
cmp [ ebp + 0x2c ] 0x0
mov [ edx - 0x2 ] ax
mov [ ebp - 0x8 ] edx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x80 ]
add edx 0x20
add edi 0x2
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] edi
jmp r-xdata
test edi edi
jne r-xdata
cmp ecx 0x2
jne r-xdata
and [ ebp - 0x133 ] 0xc3
jmp r-xdata
jmp r-xdata
cmp [ edi + 0x2 ] 0x5c
je r-xdata
mov [ ebp - 0x1c ] ecx
mov al [ edx + ecx + 0x40 ]
or [ ebp + ecx - 0xc4 ] al
inc ecx
cmp ecx 0x20
jb r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov al [ edx + ecx + 0x40 ]
not al
or [ ebp + ecx - 0xc4 ] al
inc ecx
cmp ecx 0x20
jb r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov al [ edx + ecx + 0xa0 ]
or [ ebp + ecx - 0xc4 ] al
inc ecx
cmp ecx 0x20
jb r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov al [ edx + ecx + 0xa0 ]
not al
or [ ebp + ecx - 0xc4 ] al
inc ecx
cmp ecx 0x20
jb r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov al [ edx + ecx ]
or [ ebp + ecx - 0xc4 ] al
inc ecx
cmp ecx 0x20
jb r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
jmp r-xdata
lea ecx [ ebp - 0xc4 ]
add ecx esi
inc esi
mov al [ edx + ecx ]
not al
or [ ecx ] al
cmp esi 0x20
jb r-xdata
or [ ebp - 0xc3 ] 0x8
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
jmp r-xdata
push edi
push ebx
lea edx [ ebp - 0x60 ]
lea ecx [ ebp - 0xc4 ]
call sub_4704aa
mov esi [ ebp - 0x60 ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
add esp 0x10
mov [ ebp - 0x24 ] esi
jmp r-xdata
xor eax eax
cmp esi 0x10
mov esi [ ebp - 0x24 ]
sete al
xor ecx ecx
cmp eax [ ebp - 0x108 ]
movzx eax [ ebp - 0xe4 ]
sete cl
add esi 0x6
mov [ ebp - 0x60 ] esi
add ecx 0x3
mov [ esi - 0x6 ] cx
mov ecx [ ebp - 0x1c ]
mov [ esi - 0x4 ] ax
movzx eax [ ebp - 0xf4 ]
mov [ esi - 0x2 ] ax
dec ecx
jmp r-xdata
lea eax [ ecx + 0x27 ]
mov [ edx ] ax
mov eax [ ebp - 0x30 ]
mov [ edx + 0x2 ] ax
add edx 0x4
mov [ ebp - 0x8 ] edx
jmp r-xdata
lea eax [ ecx + 0x25 ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edi [ ebp - 0x1c ]
test edi edi
js r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
js r-xdata
cmp ebx 0x1
jle r-xdata
push [ ebp - 0x40 ]
fstp st0
xor eax eax
push [ ebp + 0x28 ]
mov [ edx ] ax
push [ ebp - 0x28 ]
cmp ecx 0x1
jg r-xdata
add ecx 0x2
mov [ ebp - 0x3c ] ecx
jmp r-xdata
push [ ebp - 0x40 ]
xor eax eax
push [ ebp + 0x28 ]
mov [ edx ] ax
mov ecx [ ebp - 0x3c ]
push ebx
lea edx [ eax + 0x2 ]
call sub_41ed7b
lea eax [ esi + esi ]
push eax
mov eax [ ebp - 0x3c ]
push eax
add eax 0x4
push eax
call sub_426c10
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x8 ]
mov ecx 0x7b
mov [ eax ] cx
add esi 0x2
mov eax 0x72
mov [ edx + 0x4 ] ax
mov [ edx + 0x6 ] si
mov eax [ ebp - 0x3c ]
add esp 0x18
add edx 0x8
mov [ eax + 0x2 ] si
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
movzx eax [ eax + lookup_table_48329b ]
jmp [ eax * 4 + jump_table_483247 ]
lea ecx [ ecx + eax * 2 ]
add ecx 0x6
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov [ edx + 0x4 ] ax
lea ecx [ eax - 0x6 ]
inc ebx
lea ecx [ eax + ecx * 4 ]
lea eax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x20 ]
cmp ebx edi
jl r-xdata
test al 0x1
test al 0x1
je r-xdata
add edi 0x4
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5c
je r-xdata
mov eax [ ebp + 0x28 ]
mov edi [ ebp + 0xc ]
push 0x1
push [ ebp - 0x10 ]
lea edx [ ebp - 0x90 ]
push [ eax + 0x38 ]
lea ecx [ ebp - 0x4 ]
push edi
call sub_407888
add esp 0x10
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x8
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax edx
sub eax ecx
sar eax 0x1
mov [ ecx + 0x2 ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
push 0x20
lea eax [ ebp - 0xc4 ]
push eax
push edx
call sub_41faa0
mov edx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ebp - 0x68 ]
xor ecx ecx
test eax eax
je r-xdata
and [ ebp - 0x129 ] 0x7f
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x24 ] esi
mov ecx 0x1
mov [ ebp - 0x30 ] ecx
jmp r-xdata
cmp ecx 0x1
jle r-xdata
fstp st0
cmp [ ebp + 0x2c ] 0x0
je r-xdata
mov edi [ ebp - 0x18 ]
mov edx 0x3
mov ecx edi
call sub_41ed7b
mov edx [ ebp - 0xc ]
lea eax [ edx + edx ]
push eax
lea eax [ edi + 0x6 ]
push edi
push eax
call sub_426c10
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x8c ]
mov [ edi ] ax
mov eax 0x7d
mov [ edi + 0x2 ] ax
add edi 0x4
xor eax eax
add edx 0x6
add esp 0x18
mov [ ebp - 0x20 ] edi
mov [ edi ] ax
mov [ ebp - 0x8 ] edx
add edi 0x2
jmp r-xdata
mov ecx [ ebp - 0x18 ]
lea edx [ ebx + 0x1 ]
call sub_41ed7b
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
lea eax [ edx + edx ]
push eax
lea edi [ ecx + 0x2 ]
push ecx
push edi
call sub_426c10
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x18 ]
add edx 0x2
add esp 0x18
mov [ ebp - 0x8 ] edx
test ecx ecx
je r-xdata
mov eax 0x2a
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x2b
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x2c
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x2d
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x37
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x38
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x39
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x3a
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x44
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x45
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x46
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x47
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x51
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x52
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x53
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x54
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x5e
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x5f
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x60
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x61
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
test eax eax
jne r-xdata
mov [ edx ] bx
mov edi [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp ebx 0xffff
jbe r-xdata
mov edx [ ebp - 0x8 ]
mov eax 0x0
setne al
add edx 0x2
add eax 0x1f
mov [ edx - 0x2 ] ax
test esi esi
je r-xdata
mov eax ebx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax ebx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0xc ] 0x2
cmp ecx 0xd
je r-xdata
not [ ebp + ecx - 0xc4 ]
inc ecx
cmp ecx 0x20
jb r-xdata
mov al [ ebp + ecx - 0x134 ]
or [ ebp + ecx - 0xc4 ] al
inc ecx
cmp ecx 0x20
jb r-xdata
mov al [ ebp + ecx - 0x134 ]
not al
or [ ebp + ecx - 0xc4 ] al
inc ecx
cmp ecx 0x20
jb r-xdata
test ebx ebx
jne r-xdata
js r-xdata
sub ecx ebx
jmp r-xdata
cmp [ ebp - 0xa4 ] 0x0
fstp st0
je r-xdata
dec ebx
mov [ ebp - 0x48 ] ebx
imul ebx [ ebp - 0x84 ]
fild [ ebp - 0x48 ]
fstp [ ebp - 0x4c ]
fld [ ebp - 0x4c ]
fild [ ebp - 0x84 ]
fstp [ ebp - 0x4c ]
fmul [ ebp - 0x4c ]
fcompp
fnstsw ax
test ah 0x41
je r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x18 ] edi
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
dec ecx
mov ecx 0x9b
mov [ eax ] cx
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x50 ] eax
lea eax [ esi + 0x8c ]
mov [ ecx ] ax
mov edx [ ebp - 0x8 ]
mov ecx 0x89
mov [ edx + 0x4 ] cx
mov [ edx + 0x6 ] ax
jmp r-xdata
mov ecx ebx
call sub_471a0c
mov edi [ ebp - 0x4 ]
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
test eax eax
je r-xdata
dec eax
or eax 0xffffff80
inc eax
mov ecx [ ebp - 0x90 ]
mov edi [ ebp - 0x4 ]
jmp r-xdata
cmp eax 0x5
jne r-xdata
mov eax [ ebp + 0x28 ]
or [ eax + 0x54 ] 0x800
jmp r-xdata
cmp ecx 0xa
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x8c ]
mov esi [ ebp - 0x24 ]
add edi 0x2
mov ecx 0x1
mov [ ebp - 0xc ] 0x2
jmp r-xdata
jmp r-xdata
movzx eax [ edx - 0x2 ]
lea ecx [ edx - 0x4 ]
add eax eax
mov edi ecx
sub edi eax
mov [ ebp - 0x20 ] ecx
movzx eax [ edi ]
cmp eax 0x7b
je r-xdata
mov ebx [ ebp + 0x2c ]
test ebx ebx
je r-xdata
mov [ ebp - 0x30 ] ecx
test ecx ecx
mov [ ebp - 0x44 ] 0x1
cmp ebx 0x1
jle r-xdata
cmp [ ebp - 0x54 ] 0x0
jge r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov [ eax ] 0x14
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x2c ]
mov eax 0x7fffffeb
mov ecx [ edi ]
sub eax ecx
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
add edx 0x6
mov [ edx - 0x6 ] 0x9000f
mov [ edx - 0x2 ] ax
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov ecx 0x8
mov [ ebp - 0x90 ] ecx
jmp r-xdata
push ecx
push ebx
push eax
jmp r-xdata
mov eax [ ebp + 0x28 ]
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp eax 0x7c
jne r-xdata
lea ebx [ ecx - 0x1 ]
test ebx ebx
jns r-xdata
test ecx ecx
jg r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp + 0x28 ]
add eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + ecx ]
mov ebx [ ebp - 0x74 ]
mov ecx [ ebp - 0x30 ]
mov [ edi ] eax
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x10 ]
lea edx [ ebp - 0x60 ]
lea ecx [ ebp - 0xc4 ]
call sub_4076f5
mov ecx [ ebp - 0x1c ]
mov esi [ ebp - 0x60 ]
add esp 0x10
add ecx eax
cmp eax 0x7b
je r-xdata
mov eax 0x7d
mov [ edi ] ax
jmp r-xdata
lea edi [ esi + 0x8c ]
lea ecx [ eax + eax ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] ecx
mov ebx [ ebp - 0x20 ]
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0x84 ]
add ecx 0x5
mov [ ebp - 0x48 ] ecx
imul ecx [ ebp - 0x30 ]
fild [ ebp - 0x48 ]
fstp [ ebp - 0x4c ]
fld [ ebp - 0x4c ]
fild [ ebp - 0x30 ]
fstp [ ebp - 0x4c ]
sub ecx 0x4
fmul [ ebp - 0x4c ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
je r-xdata
cmp [ ebp - 0x40 ] edi
jae r-xdata
mov eax [ ebp - 0x40 ]
sub eax edx
sar eax 0x1
sub edi edx
mov [ ebp - 0x40 ] eax
sar edi 0x1
call sub_470bfc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
lea eax [ esi + 0x73 ]
mov [ ecx ] ax
jmp r-xdata
cmp eax 0x7c
je r-xdata
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
push ecx
push [ ebp - 0x18 ]
push edx
call sub_41faa0
mov eax [ ebp + 0x28 ]
mov ecx esi
sub ecx [ ebp - 0x40 ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x34 ]
sar ecx 0x1
sub eax ecx
mov ecx [ ebp + 0x28 ]
add eax 0xffffff9c
add esp 0xc
lea eax [ edx + eax * 2 ]
cmp [ ecx + 0x24 ] eax
jbe r-xdata
mov eax 0x7d
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx edx
sub ecx ebx
sar ecx 0x1
inc ecx
mov esi edx
lea eax [ ecx + ecx ]
sub esi eax
movzx eax [ esi + 0x2 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov esi [ ebx ]
mov eax 0x7fffffeb
sub eax esi
cmp eax ecx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x40 ] edi
lea edx [ edx + eax * 2 ]
mov eax [ ebp - 0x44 ]
inc eax
mov [ ebp - 0x44 ] eax
cmp eax ebx
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x8 ] edx
jl r-xdata
mov edx [ ebp - 0xc ]
mov ebx [ ebp - 0x40 ]
mov eax [ ebp + 0x28 ]
mov ecx [ ebp - 0x40 ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x34 ]
lea ecx [ edx + ecx * 2 ]
mov [ ebp - 0x40 ] ecx
lea edi [ edx + edi * 2 ]
mov ecx edi
sub ecx [ ebp - 0x40 ]
sar ecx 0x1
sub eax ecx
mov ecx [ ebp + 0x28 ]
add eax 0xffffff9c
lea eax [ edx + eax * 2 ]
cmp [ ecx + 0x24 ] eax
ja r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx edi
mov [ ebp - 0x44 ] edi
cmp [ ebp - 0x40 ] esi
jae r-xdata
mov eax [ ebp - 0x40 ]
sub eax edx
sar eax 0x1
sub esi edx
mov [ ebp - 0x40 ] eax
sar esi 0x1
call sub_470bfc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax edx
sub eax [ ebp - 0x20 ]
sar eax 0x1
xor eax eax
jmp r-xdata
neg eax
lea ebx [ ebx + eax * 2 ]
xor ebx ebx
jmp r-xdata
mov edi [ ebp - 0x4 ]
lea eax [ ecx + esi ]
mov [ ebx ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edi [ ecx + 0x24 ]
push eax
push [ ebp - 0x18 ]
push edx
call sub_41faa0
mov eax [ ebp + 0x28 ]
mov ecx edi
sub ecx [ ebp - 0x40 ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x34 ]
sar ecx 0x1
sub eax ecx
mov ecx [ ebp + 0x28 ]
add eax 0xffffff9c
add esp 0xc
lea eax [ edx + eax * 2 ]
cmp [ ecx + 0x24 ] eax
jbe r-xdata
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
jmp r-xdata
mov cx [ ebx ]
mov esi [ ebp + 0x28 ]
add cx dx
mov eax [ esi + 0x24 ]
add ebx 0x2
mov [ eax ] cx
mov ecx esi
add [ ecx + 0x24 ] 0x2
cmp ebx edi
jb r-xdata
mov ebx [ ebp - 0x74 ]
mov esi [ ebp - 0x14 ]
lea eax [ esi + 0x73 ]
mov [ ecx ] ax
mov edi [ ebp - 0x4 ]
jmp r-xdata
movzx eax [ edi ]
mov esi 0x81
cmp ax si
je r-xdata
add [ edi ] 0x5
mov ecx [ ebp - 0x44 ]
movzx eax [ ecx + 0x2 ]
cmp [ ecx + eax * 2 ] 0x71
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x44 ] ecx
je r-xdata
dec ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x44 ]
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x8 ] edx
jns r-xdata
mov edx [ ebp - 0xc ]
mov edi [ ebp + 0x28 ]
mov eax [ ebp + 0x28 ]
mov ecx [ ebp - 0x40 ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x34 ]
lea ecx [ edx + ecx * 2 ]
mov [ ebp - 0x40 ] ecx
lea esi [ edx + esi * 2 ]
mov ecx esi
sub ecx [ ebp - 0x40 ]
sar ecx 0x1
sub eax ecx
mov ecx [ ebp + 0x28 ]
add eax 0xffffff9c
lea eax [ edx + eax * 2 ]
cmp [ ecx + 0x24 ] eax
ja r-xdata
mov [ ebp - 0x20 ] edx
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] edx
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax 0x72
mov [ edx ] ax
mov [ edx + 0x2 ] cx
add edx 0x4
mov [ esi + 0x2 ] cx
test ebx ebx
jne r-xdata
push [ ebp - 0x40 ]
mov esi edx
push [ ebp + 0x28 ]
xor eax eax
push [ ebp - 0x28 ]
mov [ edx ] ax
sub esi edi
lea edx [ eax + 0x2 ]
mov ecx edi
sar esi 0x1
call sub_41ed7b
lea eax [ esi + esi ]
push eax
lea eax [ edi + 0x4 ]
push edi
push eax
call sub_426c10
mov edx [ ebp - 0x8 ]
mov eax 0x7e
mov [ edi ] ax
add esi 0x2
mov eax 0x75
mov [ edx + 0x4 ] ax
mov [ edx + 0x6 ] si
add esp 0x18
add edx 0x8
mov [ ebp - 0x8 ] edx
mov [ edi + 0x2 ] si
mov esi 0x86
cmp ax si
je r-xdata
push [ ebp + 0x28 ]
mov edx [ ebp - 0x20 ]
push [ ebp - 0x28 ]
call sub_470830
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x28 ]
add edx 0x2
mov esi [ eax + 0x24 ]
mov [ edx - 0x2 ] di
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
xor eax eax
test ebx ebx
setne al
lea ecx [ edx + 0x1 ]
lea ecx [ ecx + eax * 2 ]
mov eax [ ebp - 0x40 ]
add cx [ eax ]
mov eax [ edi + 0x24 ]
mov [ eax ] cx
mov eax [ ebp - 0x40 ]
add [ edi + 0x24 ] 0x2
add eax 0x2
mov [ ebp - 0x40 ] eax
cmp eax esi
jb r-xdata
mov edi [ ebp - 0x48 ]
mov edi [ ebp - 0x4 ]
cmp ebx 0x2
jl r-xdata
mov ecx 0x8e
mov [ eax ] cx
inc eax
mov [ edi ] ax
mov eax 0x75
mov [ ecx ] ax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x3c ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
test eax eax
je r-xdata
sub_4076f5
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
xor ecx ecx
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
test bl 0x1
jne r-xdata
test ebx 0x800
je r-xdata
and ebx 0x800
je r-xdata
mov edx esi
cmp esi edi
jmp r-xdata
and ebx 0xfffffffe
mov [ ebp - 0x10 ] esi
mov eax 0xffff
cmp edi eax
jbe r-xdata
cmp edi 0x100
jae r-xdata
mov [ ebp + 0x8 ] edx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
jle r-xdata
mov edi eax
jmp r-xdata
mov edx [ edx ]
test ebx ebx
je r-xdata
cmp esi edi
ja r-xdata
cmp edx 0x100
jae r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp edx esi
jb r-xdata
push [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea eax [ eax * 4 + r--data ]
push eax
push [ ebp + 0xc ]
push ebx
call sub_4704aa
jmp r-xdata
cmp esi edi
jae r-xdata
cmp esi edi
jae r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax edi
sub eax esi
inc ecx
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
movzx ecx [ eax + edx ]
mov edx ecx
and ecx 0x7
shr edx 0x3
mov al 0x1
shl al cl
mov ecx [ ebp - 0xc ]
or [ edx + ecx ] al
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
inc ecx
inc edx
mov [ ebp - 0x4 ] ecx
cmp edx edi
lea eax [ esi - 0x1 ]
cmp ecx eax
jb r-xdata
cmp ecx edi
jbe r-xdata
add esp 0x10
add [ ebp - 0x4 ] eax
jmp r-xdata
jne r-xdata
push 0x2
pop eax
mov [ edx ] ax
add edx eax
mov [ edx ] si
add edx eax
mov [ edx ] di
jmp r-xdata
jne r-xdata
push 0x2
pop eax
mov [ edx ] ax
add edx eax
mov ecx esi
call sub_471a0c
lea edx [ edx + eax * 2 ]
mov ecx edi
jmp r-xdata
mov ecx esi
and ecx 0x7
mov al 0x1
shl al cl
mov ecx [ ebp - 0xc ]
mov edx esi
shr edx 0x3
or [ edx + ecx ] al
inc esi
cmp esi edi
jbe r-xdata
cmp ecx edi
jbe r-xdata
mov esi edx
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov edx edi
lea ecx [ ebp - 0x10 ]
call sub_4713fa
pop ecx
pop ecx
test eax eax
js r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] edx
jmp r-xdata
xor eax eax
inc eax
mov [ edx ] ax
push 0x2
pop eax
add edx eax
mov [ edx ] si
add edx eax
xor eax eax
inc eax
mov [ edx ] ax
add edx 0x2
mov ecx esi
call sub_471a0c
lea edx [ edx + eax * 2 ]
jmp r-xdata
push ecx
mov ecx [ ebp - 0xc ]
push edx
push [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push ebx
call sub_4076f5
lea eax [ edi + 0x1 ]
cmp edx eax
ja r-xdata
mov edi ecx
jmp r-xdata
sub_40776b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov ebx ecx
push [ ebp + 0xc ]
jmp r-xdata
cmp eax 0x7e
je r-xdata
mov edx [ ebp - 0x4 ]
cmp eax 0x82
je r-xdata
xor eax eax
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
cmp [ ebx ] 0x71
je r-xdata
cmp eax 0x83
je r-xdata
movzx eax [ ebx ]
xor edx edx
movzx eax [ eax + r--data ]
lea ecx [ ebx + eax * 2 ]
call sub_40785a
mov esi eax
movzx eax [ esi ]
cmp eax 0x7d
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x7f
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx ecx [ esi + 0x4 ]
xor edx edx
inc edx
cmp ecx 0x20
jge r-xdata
cmp eax 0x80
je r-xdata
push [ ebp + 0xc ]
or edx [ ebp - 0x4 ]
jmp r-xdata
shl edx cl
cmp eax 0x84
je r-xdata
push edi
mov ecx esi
call sub_40776b
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x77
je r-xdata
cmp eax 0x81
je r-xdata
cmp eax 0x7b
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
push eax
jmp r-xdata
cmp eax 0x7c
je r-xdata
cmp eax 0x55
je r-xdata
cmp [ esi + 0x2 ] 0xd
jne r-xdata
cmp eax 0x56
je r-xdata
mov eax [ ebp - 0x4 ]
test [ edi + 0x48 ] eax
jne r-xdata
cmp eax 0x5e
je r-xdata
cmp [ ebp + 0xc ] edx
jg r-xdata
cmp eax 0x1
je r-xdata
cmp [ edi + 0x60 ] edx
jmp r-xdata
cmp eax 0x2
je r-xdata
je r-xdata
cmp eax 0x19
sub_40785a
movzx eax [ ecx ]
cmp eax 0x4
jl r-xdata
mov eax ecx
retn
cmp eax 0x5
jle r-xdata
test edx edx
je r-xdata
cmp eax 0x70
je r-xdata
movzx eax [ eax + r--data ]
lea ecx [ ecx + eax * 2 ]
jmp sub_40785a
cmp eax 0x77
jg r-xdata
cmp eax 0x7a
jle r-xdata
test edx edx
je r-xdata
cmp eax 0x86
jle r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] 0x71
je r-xdata
cmp eax 0x8b
jg r-xdata
movzx eax [ ecx ]
jmp r-xdata
jmp r-xdata
sub_407888
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov eax ecx
mov ecx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x20 ] edx
push edi
mov edi [ eax ]
xor edx edx
movzx esi [ edi + 0x2 ]
inc edx
shr ecx 0xb
and ecx edx
xor ebx ebx
add edi 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
test ecx ecx
je r-xdata
sub edi 0x2
mov [ ebp - 0x8 ] edi
test esi esi
je r-xdata
mov eax esi
and eax 0xfc00
cmp eax 0xd800
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
lea eax [ esi - 0x30 ]
cmp eax 0x4a
ja r-xdata
movzx eax [ edi ]
and esi 0x3ff
shl esi 0xa
and eax 0x3ff
or esi eax
add esi 0x10000
add edi 0x2
jmp r-xdata
test [ ebp + 0x10 ] 0x20000000
jne r-xdata
lea edx [ esi - 0x30 ]
mov [ ebp - 0x18 ] 0x7b
movsx eax [ edx * 2 + r--data ]
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
lea ecx [ ebx - 0x6 ]
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x1c ]
mov [ eax ] edi
mov eax [ ebp - 0x20 ]
pop edi
mov [ eax ] esi
pop esi
mov eax ebx
pop ebx
leave
retn
mov esi eax
jmp r-xdata
je r-xdata
add ebx 0x17
jmp r-xdata
cmp esi 0x63
ja r-xdata
mov ebx eax
cmp esi 0x67
je r-xdata
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ edi + 0x2 ] ax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi 0x6c
je r-xdata
push 0x2
pop ecx
add edi ecx
movzx esi [ edi ]
test esi esi
jne r-xdata
push 0x30
pop ecx
cmp esi ecx
je r-xdata
lea ecx [ edi + 0x4 ]
call sub_471591
test eax eax
lea eax [ edi + 0x2 ]
mov [ ebp - 0x10 ] eax
movzx edx [ eax ]
cmp edx 0x3c
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x25
jmp r-xdata
cmp esi 0x75
je r-xdata
cmp esi 0x7f
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push 0x37
sub esi ecx
pop edx
jbe r-xdata
push 0x1b
pop ebx
jmp r-xdata
cmp edx 0x27
je r-xdata
test [ ebp + 0x10 ] 0x2000000
je r-xdata
cmp esi 0x78
jne r-xdata
lea eax [ esi - 0x61 ]
cmp eax 0x19
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x44
jmp r-xdata
cmp ax dx
ja r-xdata
test [ ebp + 0x10 ] 0x40
je r-xdata
cmp esi 0x39
jbe r-xdata
cmp ebx 0xc
je r-xdata
push 0x30
pop ecx
push 0x39
pop eax
push 0x0
mov [ ebp - 0xc ] 0x7d
pop ebx
cmp dx [ ebp - 0x18 ]
jne r-xdata
movzx eax [ edi + 0x2 ]
mov edx 0xff
cmp ax dx
ja r-xdata
test [ ebp + 0x10 ] 0x2000000
mov edx 0xff
je r-xdata
xor esi 0x40
jmp r-xdata
sub esi 0x20
mov edi [ ebp - 0x18 ]
movzx eax [ edi ]
add eax 0xffffffd0
lea esi [ eax + esi * 8 ]
mov eax [ ebp - 0x4 ]
cmp eax 0x2
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi 0x4c
je r-xdata
mov [ ebp - 0x4 ] ebx
lea edx [ edi + 0x4 ]
movzx eax [ edx ]
test ax ax
je r-xdata
test [ eax + r--data ] 0x8
je r-xdata
cmp [ edi + 0x2 ] 0x7b
jne r-xdata
movzx eax [ edi + 0x2 ]
cmp ax dx
ja r-xdata
inc eax
mov [ ebp - 0x4 ] eax
lea eax [ edi + 0x2 ]
mov [ ebp - 0x18 ] eax
movzx eax [ eax ]
cmp ax cx
jb r-xdata
jmp r-xdata
movzx esi [ edi ]
cmp esi 0x38
jb r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp ax cx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] edi
jb r-xdata
cmp esi 0x55
jne r-xdata
mov [ ebp - 0x14 ] ebx
add edi 0x2
jmp r-xdata
mov edi [ ebp - 0x10 ]
push 0x39
mov [ ebp - 0x4 ] 0x1
pop eax
jmp r-xdata
push 0x39
pop ebx
push 0x2d
pop edi
movzx eax [ edi + 0x4 ]
cmp ax dx
ja r-xdata
mov esi ebx
lea ecx [ edi + 0x4 ]
mov [ ebp - 0x8 ] ecx
movzx eax [ ecx ]
mov [ ebp - 0xc ] eax
cmp ax dx
mov eax [ ebp - 0x4 ]
mov esi ebx
ja r-xdata
test [ eax + r--data ] 0x8
je r-xdata
sub edi 0x2
mov esi ebx
jmp r-xdata
cmp edx 0xa
jl r-xdata
push 0x39
pop eax
cmp [ ebp - 0x8 ] ax
ja r-xdata
test [ ebp + 0x10 ] 0x2000000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] ax
ja r-xdata
mov edx ebx
lea ebx [ edi + 0x2 ]
push 0x30
mov [ ebp - 0x10 ] ebx
movzx ebx [ ebx ]
pop ecx
push 0x0
mov [ ebp - 0x8 ] ebx
cmp bx cx
pop ebx
jb r-xdata
push 0x2d
pop ecx
cmp [ edi + 0x2 ] cx
jne r-xdata
movzx eax [ edx ]
mov edi [ ebp - 0x8 ]
push 0x0
pop ebx
test ax ax
je r-xdata
cmp ax di
je r-xdata
test [ eax + r--data ] 0x8
je r-xdata
test [ eax + r--data ] 0x8
je r-xdata
cmp [ ecx ] 0x7d
jne r-xdata
push 0x30
pop ecx
movzx eax [ edi + 0x4 ]
cmp ax dx
ja r-xdata
mov ebx edx
jmp r-xdata
cmp edx [ ebp + 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp edx 0xccccccb
jg r-xdata
jne r-xdata
test edx edx
jne r-xdata
mov eax [ ebp - 0xc ]
add edi 0x2
cmp [ edi ] ax
je r-xdata
cmp edx 0xccccccb
jg r-xdata
cmp ax [ ebp - 0xc ]
je r-xdata
add edx 0x2
movzx eax [ edx ]
test ax ax
jne r-xdata
cmp ax cx
jb r-xdata
movzx eax [ edi + 0x6 ]
cmp ax dx
ja r-xdata
add edi 0x2
movzx ecx [ edi ]
cmp ecx 0x61
jb r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
test [ eax + r--data ] 0x8
je r-xdata
neg ebx
mov edi [ ebp - 0x14 ]
lea edx [ edi + 0x2 ]
mov [ ebp - 0x18 ] edx
movzx edx [ edx ]
cmp dx cx
jb r-xdata
mov edi [ ebp - 0xc ]
imul edx edx 0xa
movzx eax [ edi ]
add eax 0xffffffd0
add edx eax
lea eax [ edi + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp ax cx
jae r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3a
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x39
jmp r-xdata
lea edx [ edi + 0x2 ]
mov [ ebp - 0x18 ] edx
movzx edx [ edx ]
cmp dx cx
jb r-xdata
mov edi [ ebp - 0x10 ]
imul edx edx 0xa
movzx eax [ edi ]
add eax 0xffffffd0
add edx eax
lea eax [ edi + 0x2 ]
mov [ ebp - 0x10 ] eax
movzx eax [ eax ]
push 0x39
mov [ ebp - 0x8 ] eax
cmp ax cx
pop eax
jae r-xdata
push 0x1c
pop ebx
jmp r-xdata
cmp ax [ ebp - 0xc ]
je r-xdata
cmp ax bx
ja r-xdata
test [ eax + r--data ] 0x8
je r-xdata
cmp ecx 0x41
sbb eax eax
and eax 0xfffffff9
add eax 0x37
shl esi 0x4
sub esi eax
mov eax [ ebp - 0x4 ]
add esi ecx
cmp eax 0x2
jl r-xdata
sub ecx 0x20
mov edi ecx
jmp r-xdata
lea eax [ esi - 0xd800 ]
cmp eax 0x7ff
ja r-xdata
mov eax [ ebp - 0xc ]
cmp eax 0x61
jb r-xdata
cmp [ ebp - 0xc ] ecx
je r-xdata
push 0x37
mov esi ebx
mov [ ebp - 0xc ] 0x2
pop edx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3d
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
cmp edx eax
jle r-xdata
mov ebx [ ebp - 0x18 ]
movzx eax [ edi + 0x8 ]
cmp ax dx
ja r-xdata
inc eax
mov [ ebp - 0x4 ] eax
movzx eax [ edi + 0x2 ]
cmp ax dx
ja r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x49
cmp eax 0x41
sbb eax eax
and eax 0xfffffff9
add eax 0x37
shl esi 0x4
sub esi eax
add esi [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
neg eax
sbb eax eax
and eax 0x100000
add eax 0xffff
cmp esi eax
ja r-xdata
sub eax 0x20
mov [ ebp - 0xc ] eax
movzx ebx [ eax ]
push 0x0
mov [ ebp - 0xc ] ebx
cmp bx dx
pop ebx
jbe r-xdata
cmp ecx 0x41
sbb eax eax
and eax 0xfffffff9
shl esi 0x4
add eax edx
sub esi eax
add esi ecx
dec [ ebp - 0xc ]
jne r-xdata
sub ecx 0x20
xor ebx ebx
mov edi ebx
lea ebx [ edi + 0x2 ]
movzx edx [ ebx ]
cmp dx cx
jae r-xdata
sub eax edx
lea edx [ eax + 0x1 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xf
jmp r-xdata
mov edi ebx
lea ebx [ edi + 0x2 ]
movzx edx [ ebx ]
cmp dx cx
jae r-xdata
test [ eax + r--data ] 0x8
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
movzx eax ax
mov [ ebp - 0xc ] eax
test [ eax + r--data ] 0x8
mov eax [ ebp - 0x8 ]
je r-xdata
add edi 0x2
movzx ecx [ edi ]
cmp ecx 0x61
jb r-xdata
jmp r-xdata
cmp dx ax
ja r-xdata
cmp dx ax
ja r-xdata
jmp r-xdata
mov esi ebx
mov [ ebp - 0x10 ] 0x4
movzx eax [ ecx ]
cmp ax dx
jbe r-xdata
cmp edx 0x41
sbb eax eax
and eax 0xfffffff9
shl esi 0x4
add eax 0x37
sub esi eax
add esi edx
dec [ ebp - 0x10 ]
jne r-xdata
sub edx 0x20
movzx eax ax
test [ eax + r--data ] 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x22
jmp r-xdata
add edi 0x2
movzx edx [ edi ]
cmp edx 0x61
jb r-xdata
mov eax ecx
neg eax
sbb eax eax
and eax 0x100000
add eax 0xffff
cmp esi eax
jbe r-xdata
add ecx 0x2
mov eax [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x4c
jmp r-xdata
lea eax [ esi - 0xd800 ]
cmp eax 0x7ff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x49
jmp r-xdata
sub_407932
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
mov [ ebp - 0x4 ] ecx
add esi 0x4
cmp [ esi ] 0x70
jne r-xdata
cmp eax 0x7d
je r-xdata
movzx eax [ esi ]
cmp eax 0x87
jl r-xdata
add esi 0x8
push [ ebp + 0xc ]
jmp r-xdata
cmp eax 0x7e
je r-xdata
push [ ebp + 0xc ]
mov edx ebx
push edi
mov ecx esi
call sub_407932
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x8b
jle r-xdata
mov edx ebx
cmp eax 0x82
je r-xdata
xor eax eax
push 0x71
pop ecx
mov ecx [ ebp - 0x4 ]
push 0x71
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
pop eax
mov [ ebp - 0x4 ] ecx
cmp [ ecx ] ax
je r-xdata
cmp eax 0x83
je r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] cx
je r-xdata
lea ecx [ esi + 0x4 ]
xor edx edx
call sub_40785a
mov esi eax
movzx eax [ esi ]
jmp r-xdata
movzx eax [ ecx ]
xor edx edx
movzx eax [ eax + r--data ]
lea ecx [ ecx + eax * 2 ]
call sub_40785a
mov esi eax
movzx eax [ esi ]
cmp eax 0x81
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x7f
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx ecx [ esi + 0x4 ]
xor edx edx
inc edx
cmp ecx 0x20
jge r-xdata
cmp eax 0x80
je r-xdata
push [ ebp + 0xc ]
or edx ebx
jmp r-xdata
shl edx cl
jmp r-xdata
cmp eax 0x84
je r-xdata
push edi
mov ecx esi
call sub_407932
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x77
je r-xdata
cmp eax 0x7b
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
push eax
jmp r-xdata
cmp eax 0x7c
je r-xdata
cmp eax 0x55
je r-xdata
cmp [ esi + 0x2 ] 0xc
jne r-xdata
cmp eax 0x56
je r-xdata
test [ edi + 0x48 ] ebx
jne r-xdata
cmp eax 0x5e
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp eax 0x19
je r-xdata
cmp [ edi + 0x60 ] 0x0
jmp r-xdata
cmp eax 0x1a
je r-xdata
sub_407a0f
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov eax edx
xor edi edi
or esi 0xffffffff
mov [ ebp - 0xc ] eax
mov ebx ecx
mov [ eax ] esi
mov [ ebp - 0x4 ] 0x77
xor eax eax
inc eax
jmp r-xdata
mov ecx 0x84
cmp ax cx
je r-xdata
lea eax [ eax + 0x2 ]
xor edx edx
lea ecx [ ebx + eax * 2 ]
inc edx
call sub_40785a
mov ecx eax
movzx edx [ ecx ]
mov eax edx
cmp eax 0x31
jg r-xdata
add ecx 0xfffffffc
cmp ax cx
je r-xdata
cmp eax 0x36
je r-xdata
cmp eax 0x30
jge r-xdata
mov ecx 0x85
cmp ax cx
je r-xdata
add ecx 0x2
cmp eax 0x38
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp eax 0x1d
je r-xdata
xor eax eax
xor eax eax
test esi esi
jns r-xdata
cmp eax 0x77
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp eax 0x1e
je r-xdata
movzx eax [ ecx + 0x2 ]
cmp edi eax
xor esi esi
inc esi
jmp r-xdata
xor eax eax
cmp dx [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
sete al
push eax
call sub_407a0f
pop ecx
mov ecx [ ebp - 0x8 ]
test ecx ecx
js r-xdata
cmp eax 0x7a
jle r-xdata
jmp r-xdata
cmp eax 0x22
jg r-xdata
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
cmp [ ebx ] 0x71
je r-xdata
movzx edi [ ecx + 0x2 ]
jmp r-xdata
test esi esi
jns r-xdata
jmp r-xdata
test esi esi
jns r-xdata
cmp eax 0x24
jle r-xdata
movzx eax [ ebx ]
cmp eax 0x7f
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] esi
mov eax edi
jmp r-xdata
cmp edi eax
jne r-xdata
mov edi eax
mov esi ecx
jmp r-xdata
cmp eax 0x81
jle r-xdata
xor esi esi
cmp eax 0x29
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi ecx
jmp r-xdata
add eax 0xffffff7c
cmp eax 0x1
ja r-xdata
add ecx 0x2
jmp r-xdata
cmp eax 0x2b
jne r-xdata
jne r-xdata
jmp r-xdata
sub_407ad2
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov eax ecx
mov ecx [ ebp + 0x8 ]
or esi 0xffffffff
mov [ ebp - 0xc ] esi
movzx esi [ eax ]
add eax 0x2
push edi
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
and eax 0x8
mov edi 0xff
push 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] edi
pop edx
mov [ ebp - 0x4 ] ecx
jne r-xdata
movzx eax [ ecx ]
mov ebx [ ebp + 0x10 ]
cmp ax di
ja r-xdata
movzx edi [ ecx ]
mov ebx 0x80
cmp edi 0x5c
je r-xdata
push 0x23
pop eax
cmp [ ecx ] ax
jne r-xdata
mov esi [ ebx + 0xc ]
mov eax [ ebp + 0x10 ]
xor ebx ebx
push ebx
push [ ebp + 0xc ]
lea edx [ ebp - 0x14 ]
push [ eax + 0x38 ]
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
call sub_407888
add esp 0x10
mov esi eax
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebx + 0x7f ]
cmp di ax
ja r-xdata
add ecx 0x2
mov [ ebp - 0x4 ] ecx
movzx esi [ ecx ]
mov [ ebp + 0x8 ] ecx
test si si
je r-xdata
mov [ ebp - 0x4 ] ecx
add ecx 0x2
mov [ ebp + 0x8 ] ecx
movzx eax [ ecx ]
cmp ax di
jbe r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edi [ ebp - 0x14 ]
xor edx edx
add ecx 0x2
inc edx
jmp r-xdata
xor ebx ebx
mov esi ebx
add ecx 0x2
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx edi
mov eax [ eax + 0xc ]
test [ ecx + eax ] bl
je r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
movzx eax ax
test [ eax + esi ] dl
je r-xdata
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] ecx
mov eax edi
and eax 0xfc00
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] ecx
cmp eax 0xd800
jne r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov edi [ ebx + 0x6c ]
mov ecx [ ebx + 0x1c ]
lea eax [ edi + edi ]
sub ecx eax
cmp [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
ja r-xdata
cmp ecx [ ebx + 0x1c ]
jae r-xdata
movzx eax [ ecx ]
push 0x2a
pop edx
cmp ax dx
je r-xdata
push 0x23
mov esi 0xff
pop edi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ ecx ]
and edi 0x3ff
shl edi 0xa
and eax 0x3ff
or edi eax
add edi 0x10000
mov [ ebp - 0x14 ] edi
add ecx 0x2
add ecx 0x2
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp si [ ebx + 0x70 ]
jne r-xdata
push [ ebp - 0x8 ]
mov edx [ ebx + 0x68 ]
lea eax [ ebx + 0x6c ]
push eax
push [ ebx + 0x1c ]
call sub_4080a0
mov ecx [ ebp - 0x4 ]
xor edx edx
add esp 0xc
inc edx
test eax eax
je r-xdata
push 0x3f
pop edx
cmp ax dx
je r-xdata
cmp [ ecx ] di
jne r-xdata
mov esi [ ebx + 0xc ]
movzx esi [ ecx ]
test si si
jne r-xdata
mov ax [ ecx ]
mov esi 0xfc00
and ax si
mov esi 0xdc00
cmp ax si
jne r-xdata
cmp edi edx
je r-xdata
mov eax [ ebx + 0x6c ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] ecx
push 0x3
mov edx r--data
call sub_41ee64
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x20 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
add ecx 0x2
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi 0xff
add ecx 0x2
movzx eax [ ecx ]
cmp ax [ ebp - 0x24 ]
jbe r-xdata
jmp r-xdata
add ecx 0x2
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] ecx
mov ax [ ecx + 0x2 ]
cmp ax [ ebx + 0x72 ]
je r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
pop edx
push 0x1d
pop ecx
cmp ax cx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
movzx eax ax
test [ eax + esi ] dl
je r-xdata
mov edi 0xff
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
mov [ ebp - 0xc ] edx
je r-xdata
push 0x1e
pop ecx
cmp ax cx
je r-xdata
mov ebx [ ebp + 0x10 ]
mov eax [ eax + 0x6c ]
mov ecx [ ebx + 0x1c ]
add eax eax
sub ecx eax
cmp [ ebp - 0x4 ] ecx
ja r-xdata
mov edx [ eax + 0x1c ]
cmp ecx edx
jae r-xdata
test esi esi
jne r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
push 0x1f
pop ecx
cmp ax cx
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov eax ebx
cmp cx [ eax + 0x70 ]
mov ecx [ ebp - 0x4 ]
jne r-xdata
mov ebx eax
push [ ebp - 0x8 ]
add eax 0x6c
push eax
push edx
mov edx ebx
call sub_4080a0
mov ecx [ ebp - 0x4 ]
add esp 0xc
test eax eax
jne r-xdata
movzx eax ax
push 0x11
pop ecx
cmp eax ecx
jg r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
mov eax [ ebp - 0x10 ]
movzx eax [ ecx + 0x2 ]
mov ecx 0x3ff
and edx ecx
and eax ecx
shl edx 0xa
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
cmp ax dx
je r-xdata
add ecx 0x2
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp [ eax + 0x6c ] edx
je r-xdata
xor edx edx
inc edx
jmp r-xdata
mov ax [ ecx ]
mov edx 0xfc00
and ax dx
mov edx 0xdc00
cmp ax dx
jne r-xdata
mov eax [ ebp + 0x10 ]
xor edx edx
inc edx
mov ebx [ ebp + 0x10 ]
jmp r-xdata
cmp eax 0x12
je r-xdata
je r-xdata
mov esi [ ebp - 0x10 ]
movzx eax si
cmp eax 0x10
jg r-xdata
cmp edx 0xffffffff
je r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
mov eax [ eax + 0x6c ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ax [ ecx + 0x2 ]
cmp ax [ ebx + 0x72 ]
jne r-xdata
movzx eax [ ecx ]
mov [ ebp - 0x1c ] eax
test ax ax
je r-xdata
add ecx 0x2
mov [ ebp - 0x4 ] ecx
mov ebx [ ebp + 0x10 ]
xor eax eax
cmp esi 0x13
jmp r-xdata
cmp eax 0x13
je r-xdata
cmp esi 0x14
sub eax 0x6
je r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
test [ ebp + 0xc ] cl
je r-xdata
mov eax ebx
jmp r-xdata
sete al
jmp r-xdata
cmp esi 0x8
je r-xdata
cmp eax 0x14
je r-xdata
xor ebx ebx
inc ebx
cmp esi 0x7
je r-xdata
xor eax eax
cmp esi 0x7
dec eax
je r-xdata
sub eax 0x1e
je r-xdata
je r-xdata
push ebx
sub eax 0x6
je r-xdata
mov eax edi
cdq
lea esi [ ecx + 0x7f ]
idiv esi
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx edx [ eax * 8 + r--data ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0x12
je r-xdata
cmp esi 0x15
je r-xdata
push 0x15
pop edi
cmp eax edi
je r-xdata
cmp esi 0xb
jmp r-xdata
cmp esi 0x6
je r-xdata
dec eax
je r-xdata
mov esi [ ebp - 0xc ]
cmp esi edi
je r-xdata
dec eax
je r-xdata
xor eax eax
cmp [ ebp - 0xc ] edi
jmp r-xdata
cmp eax 0x11
je r-xdata
mov eax 0xff
cmp edi eax
ja r-xdata
dec eax
je r-xdata
mov esi [ ebp - 0x10 ]
push 0x1f
pop eax
cmp si ax
sbb eax eax
inc eax
push eax
push edx
push 0x9
pop edx
jmp r-xdata
cmp esi 0x7
je r-xdata
cmp esi ecx
xor ecx ecx
add eax 0xffffffe3
inc ecx
cmp eax ecx
ja r-xdata
jne r-xdata
cmp esi 0x9
je r-xdata
cmp esi 0x9
jmp r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0xc ] edi
jmp r-xdata
dec eax
jne r-xdata
setne al
jmp r-xdata
cmp edi 0xa
jb r-xdata
jle r-xdata
mov ecx ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edi + eax ] 0x4
jmp r-xdata
mov eax 0xff
cmp edi eax
ja r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp esi 0xb
jg r-xdata
cmp esi 0xa
je r-xdata
cmp esi 0x8
jmp r-xdata
dec eax
je r-xdata
mov eax 0xff
cmp edi eax
ja r-xdata
mov ecx 0x80
cmp edi ecx
jae r-xdata
mov esi [ ebp - 0xc ]
cmp esi edi
je r-xdata
xor eax eax
cmp si 0x14
jmp r-xdata
cmp edi 0xd
jbe r-xdata
cmp eax 0x13
jle r-xdata
jne r-xdata
mov ebx ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edi + eax ] 0x4
jmp r-xdata
mov eax 0xff
cmp edi eax
ja r-xdata
dec eax
je r-xdata
call sub_470597
pop ecx
pop ecx
jmp r-xdata
cmp esi 0xb
cmp esi edi
jg r-xdata
je r-xdata
cmp esi 0x13
jmp r-xdata
je r-xdata
cmp esi 0xb
je r-xdata
dec eax
jne r-xdata
xor eax eax
cmp esi edi
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
movzx edi [ eax + edi ]
mov eax edi
cdq
idiv ecx
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
mov ecx [ eax * 8 + r--data ]
add ecx edi
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
movzx ecx [ eax + edi ]
jmp r-xdata
mov eax ecx
jmp r-xdata
cmp [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
cmp si 0x14
jmp r-xdata
cmp edi 0x85
je r-xdata
mov eax 0x180e
cmp edi eax
ja r-xdata
cmp eax 0x15
jg r-xdata
jne r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edi + eax ] cl
jmp r-xdata
mov eax 0xff
cmp edi eax
ja r-xdata
dec eax
je r-xdata
lea eax [ esi - 0x1d ]
cmp eax 0x5
ja r-xdata
cmp esi 0x14
jge r-xdata
mov eax 0xff
cmp edx eax
ja r-xdata
sub esi 0x6
je r-xdata
je r-xdata
cmp esi 0x7
jmp r-xdata
cmp esi 0xa
je r-xdata
xor eax eax
cmp esi ecx
jmp r-xdata
mov eax 0xff
cmp edi eax
ja r-xdata
mov ecx 0x80
cmp edi ecx
jae r-xdata
lea eax [ edi - 0x2028 ]
cmp eax ecx
ja r-xdata
cmp edi 0x2000
jb r-xdata
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edi + eax ] cl
jmp r-xdata
mov eax 0xff
cmp edi eax
ja r-xdata
dec eax
je r-xdata
mov eax [ eax * 4 + rw-data ]
push ebx
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x20 ]
push ebx
push eax
lea edx [ ebp - 0x14 ]
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ebx
call sub_407888
add esp 0x10
cmp [ ebp - 0x20 ] 0x0
mov esi eax
jne r-xdata
cmp edx 0xa
jb r-xdata
cmp esi 0xf
jl r-xdata
jmp r-xdata
mov eax 0xff
cmp edx eax
ja r-xdata
dec esi
je r-xdata
xor eax eax
cmp esi edi
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
movzx edi [ eax + edi ]
mov eax edi
cdq
idiv ecx
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
mov ecx [ eax * 8 + r--data ]
add ecx edi
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
movzx ecx [ eax + edi ]
jmp r-xdata
xor eax eax
cmp si 0x12
jmp r-xdata
cmp edi 0x200a
jbe r-xdata
xor eax eax
cmp si 0x12
jmp r-xdata
cmp edi 0x9
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edi + eax ] 0x10
jmp r-xdata
mov eax 0xff
cmp edi eax
ja r-xdata
sub eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
jmp r-xdata
cmp edx 0xd
jbe r-xdata
cmp esi 0x10
jle r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edx + eax ] 0x10
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edx + eax ] 0x4
jmp r-xdata
mov eax 0xff
cmp edx eax
ja r-xdata
dec esi
je r-xdata
xor eax eax
cmp esi ecx
jmp r-xdata
cmp edi 0x202f
je r-xdata
cmp edi 0x20
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edi + eax ] 0x10
jmp r-xdata
push ecx
jmp r-xdata
sub eax 0x2
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp + 0xc ] ebx
call sub_4714aa
add esp 0xc
test eax eax
je r-xdata
cmp edx 0x85
je r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ esi - 0x12 ]
cmp eax ecx
ja r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edx + eax ] 0x4
jmp r-xdata
mov eax 0xff
cmp edx eax
ja r-xdata
dec esi
je r-xdata
cmp edi 0x205f
je r-xdata
cmp edi 0xa0
je r-xdata
mov ecx [ ebp - 0x18 ]
movzx eax [ ecx + 0x2 ]
movzx edx [ ecx ]
push eax
mov ecx edi
mov ecx [ ebp + 0x8 ]
add ecx 0x2
push 0x2a
movzx eax [ ecx ]
pop edi
cmp ax di
je r-xdata
lea eax [ edx - 0x2028 ]
cmp eax ecx
ja r-xdata
mov eax 0x180e
cmp edx eax
ja r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edx + eax ] cl
jmp r-xdata
mov eax 0xff
cmp edx eax
ja r-xdata
dec esi
jne r-xdata
cmp edi 0x3000
jne r-xdata
cmp edi 0x1680
je r-xdata
push 0x3f
pop edi
cmp ax di
je r-xdata
jmp r-xdata
cmp edx 0x2000
jb r-xdata
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edx + eax ] cl
jmp r-xdata
mov eax 0xff
cmp edx eax
ja r-xdata
push 0x3
mov edx r--data
call sub_41ee64
pop ecx
test eax eax
je r-xdata
cmp edx 0x200a
jbe r-xdata
xor eax eax
cmp esi 0x13
cmp edx 0x9
je r-xdata
jmp r-xdata
jmp r-xdata
cmp edx 0x202f
je r-xdata
cmp edx 0x20
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
test [ edx + eax ] 0x10
mov edx [ ebp - 0x20 ]
xor ecx ecx
cmp esi 0xf
sete cl
xor eax eax
cmp ecx [ ebp - 0x24 ]
setne al
push eax
push [ ebp + 0xc ]
cmp edx 0x205f
je r-xdata
cmp edx 0xa0
je r-xdata
cmp edx 0x3000
je r-xdata
cmp edx 0x1680
je r-xdata
jmp r-xdata
sub_407b4b
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
call sub_43c0a2
push eax
mov ecx esi
call sub_40c935
lea ecx [ ebp - 0x14 ]
call sub_405cd3
mov eax esi
jmp r-xdata
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
call sub_40bbd9
pop esi
leave
retn 0x4
sub_407b6e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
xor ecx ecx
and [ esi + 0x4 ] 0x0
inc eax
push 0x2
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
xor ecx ecx
mov [ esi ] eax
mov [ eax ] cx
mov ecx esi
call sub_40a6f8
mov eax esi
pop esi
pop ebp
retn 0x4
sub_407ba9
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx + 0x4 ]
mov ecx edi
call sub_407be1
lea esi [ eax + 0x20 ]
mov ecx esi
call sub_412570
mov eax [ ebp + 0x8 ]
mov ecx edi
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
call sub_407be1
mov cl [ ebp + 0xc ]
pop edi
mov [ eax + 0x30 ] cl
pop esi
pop ebp
retn 0x8
sub_407bef
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x4
je r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_40c935
jmp r-xdata
call sub_412570
push 0x10
mov [ esi + 0xc ] 0x4
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov [ esi + 0x8 ] edx
sub_407c4b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push ebx
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov ebx [ eax + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
test edi edi
js r-xdata
xor edi edi
jmp r-xdata
cmp edi ebx
jg r-xdata
mov edi ebx
jmp r-xdata
sub ebx edi
push ebx
lea ecx [ ebp - 0x10 ]
call sub_407b6e
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push ebx
push edi
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f40
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_407cca
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
push edi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
or edi 0xffffffff
mov esi [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
lea ebx [ eax - 0x1 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jbe r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
cmp ebx esi
jg r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov edi eax
mov ebx esi
jmp r-xdata
test ebx ebx
js r-xdata
test edi edi
js r-xdata
mov edi esi
sub edi ebx
jmp r-xdata
mov eax esi
sub eax ebx
cmp edi eax
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push edi
push ebx
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f40
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_407d70
push ebx
push esi
mov esi ecx
call sub_40d3d2
xor ebx ebx
lea ecx [ esi + 0x14 ]
mov [ esi + 0x10 ] bl
call sub_40d3d2
mov [ esi + 0x24 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] 0x2800
mov [ esi + 0x40 ] 0x2000
mov eax esi
pop esi
pop ebx
retn
sub_407dd0
push ebx
push edi
mov ebx ecx
xor edi edi
cmp [ ebx + 0x8 ] edi
jbe r-xdata
mov [ ebx + 0x8 ] edi
pop edi
pop ebx
retn
push esi
lea esp [ esp ]
mov eax [ ebx + 0x4 ]
inc edi
mov [ eax + edi * 4 - 0x4 ] 0x0
cmp edi [ ebx + 0x8 ]
jb r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov esi [ esi + edi * 4 ]
test esi esi
je r-xdata
pop esi
pop edi
mov [ ebx + 0x8 ] 0x0
pop ebx
retn
push [ esi ]
call j_sub_4228ca#2
push [ esi + 0xc ]
call j_sub_4228ca#2
add esp 0x8
jmp r-xdata
push esi
call j_sub_4228ca#2
add esp 0x4
sub_407e53
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push 0xffffffff
push 0x0
call sub_40a2fb
jmp r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_4218fb
pop ecx
mov ebx eax
mov ecx esi
mov [ esi + 0x4 ] ebx
call sub_408176
mov ecx esi
test al al
je r-xdata
pop esi
pop ebp
retn 0x4
push ebx
call sub_407eda
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
call sub_40a6f8
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_40c91c
xor ecx ecx
push 0x2
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
pop ecx
mov [ esi ] eax
mov eax [ esi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_41faa0
add esp 0xc
pop ebx
sub_407eda
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_407f2f
test al al
je r-xdata
lea eax [ edi + 0x1 ]
push eax
call sub_40c91c
cmp [ esi ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
xor ecx ecx
mov [ esi ] eax
mov [ eax + edi * 2 ] cx
jmp r-xdata
push [ esi ]
call j_sub_4228ca#2
pop ecx
sub_407f40
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
test esi esi
je r-xdata
push 0xffffffff
push 0x0
mov ecx edi
call sub_40a2fb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
cmp ebx [ ecx + 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp esi 0xffffffff
je r-xdata
mov esi [ ecx + 0x4 ]
sub esi ebx
jmp r-xdata
lea eax [ ebx + esi ]
cmp eax [ ecx + 0x4 ]
ja r-xdata
mov ecx edi
call sub_408176
mov ecx edi
test al al
jne r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
call sub_40a6f8
lea eax [ esi + 0x1 ]
push eax
call sub_40c91c
xor ecx ecx
push 0x2
pop edx
mov [ edi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov [ edi ] eax
jmp r-xdata
push esi
call sub_407eda
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] esi
mov eax [ eax ]
add esi esi
push esi
lea eax [ eax + ebx * 2 ]
push eax
push [ edi ]
call sub_41faa0
mov eax [ edi ]
add esp 0xc
xor ecx ecx
mov [ esi + eax ] cx
sub_407fba
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x30 ]
call sub_407d70
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
and [ esp + 0x14 ] 0x0
cmp [ ebx + 0x8 ] 0x4
mov [ esp + 0x1c ] eax
jae r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov [ esp + 0x14 ] eax
jmp r-xdata
push [ esp + 0x18 ]
lea ecx [ esp + 0x34 ]
call sub_405be9
mov ebx [ esp + 0x10 ]
mov esi eax
push ebx
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_407bef
mov ecx [ edi ]
push 0x0
mov ecx [ ecx + 0x4 ]
push 0x2
add ecx edi
call sub_44d7e4
push 0x0
lea eax [ esi + 0x1 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
jmp r-xdata
lea ecx [ esp + 0x34 ]
call sub_407e36
push [ ebx + 0x4 ]
lea ecx [ esp + 0x24 ]
call sub_407b6e
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x18 ]
lea ecx [ esp + 0x38 ]
push [ esp + 0x24 ]
call sub_408530
mov ecx [ ebp + 0xc ]
mov esi eax
lea eax [ esp + 0x20 ]
push eax
call sub_407bef
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push esi
add ecx edi
call sub_407ba9
lea ecx [ esp + 0x20 ]
call sub_405cd3
lea ecx [ esp + 0x30 ]
call sub_405cbb
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4080a0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
movzx esi [ ecx ]
push edi
je r-xdata
push 0x2
pop edi
push 0xa
pop ebx
cmp edx edi
jne r-xdata
mov eax esi
and eax 0xfc00
cmp eax 0xd800
je r-xdata
cmp esi ebx
jb r-xdata
cmp esi ebx
je r-xdata
movzx eax [ ecx + 0x2 ]
mov edi 0x3ff
and esi edi
and eax edi
shl esi 0xa
or esi eax
add esi 0x10000
jmp r-xdata
xor eax eax
xor edx edx
cmp esi 0xc
jbe r-xdata
xor edx edx
jmp r-xdata
cmp esi 0xd
je r-xdata
inc edx
cmp esi 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffffe
xor edx edx
cmp ecx eax
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0xfffffffe
cmp ecx eax
jae r-xdata
inc edx
cmp esi 0x85
je r-xdata
lea edi [ edx + 0x1 ]
cmp [ ecx + 0x2 ] bx
je r-xdata
lea edi [ edx + 0x1 ]
cmp [ ecx + 0x2 ] bx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov eax edx
jmp r-xdata
lea eax [ esi - 0x2028 ]
cmp eax edx
ja r-xdata
lea eax [ edx + 0x1 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
jmp r-xdata
sub_4080ea
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
test esi esi
je r-xdata
push 0xffffffff
push 0x0
call sub_40a2fb
jmp r-xdata
cmp esi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_408176
mov ecx edi
test al al
je r-xdata
push esi
call sub_407eda
jmp r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
call sub_40a6f8
lea eax [ esi + 0x1 ]
push eax
call sub_40c91c
xor ecx ecx
push 0x2
pop edx
mov [ edi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov [ edi ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x4 ] esi
add esi esi
push esi
lea eax [ ebx + eax * 2 ]
push eax
push [ edi ]
call sub_41faa0
mov eax [ edi ]
add esp 0xc
xor ecx ecx
mov [ esi + eax ] cx
sub_408182
push ebp
mov ebp esp
push esi
push 0x10
mov esi ecx
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4081c6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
mov [ esp + 0x30 ] ecx
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push edi
mov esi [ eax + 0x4 ]
lea ecx [ esp + 0x3c ]
mov [ esp + 0x18 ] esi
call sub_407b6e
mov eax [ ebp + 0x8 ]
xor ebx ebx
xor ecx ecx
mov dl bl
inc ecx
cmp [ eax + 0x8 ] 0x3
mov [ esp + 0x2c ] ebx
mov [ esp + 0xf ] dl
jb r-xdata
mov eax ebx
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
xor ecx ecx
inc ecx
mov [ esp + 0x2c ] eax
test al 0x2
je r-xdata
test esi esi
je r-xdata
mov dl bl
jmp r-xdata
mov dl cl
and eax ecx
mov [ esp + 0xf ] dl
mov [ esp + 0x2c ] eax
xor eax eax
test dl dl
sete al
mov [ esp + 0x28 ] eax
add eax edi
push eax
push ecx
push [ ebp + 0xc ]
call sub_403320
xor esi esi
add esp 0xc
inc esi
cmp [ esp + 0xf ] bl
jne r-xdata
sub eax ebx
je r-xdata
test edi edi
jle r-xdata
push ebx
push esi
lea eax [ esp + 0x50 ]
push eax
push [ ebp + 0xc ]
mov [ esp + 0x58 ] edi
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x48 ]
call sub_412570
mov esi ebx
mov eax ebx
mov [ esp + 0x18 ] esi
mov [ esp + 0x30 ] eax
test edi edi
jle r-xdata
dec eax
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push ebx
push [ esp + 0x18 ]
lea ecx [ esp + 0x44 ]
call sub_4080ea
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_408182
push [ esp + 0x28 ]
lea eax [ esp + 0x4c ]
push esi
push eax
push [ ebp + 0xc ]
call sub_412320
add esp 0x10
inc [ esp + 0x28 ]
lea ecx [ esp + 0x48 ]
call sub_412570
inc ebx
cmp ebx edi
jl r-xdata
xor edi edi
inc edi
cmp [ esp + 0xf ] 0x0
je r-xdata
mov ebx [ esp + 0x10 ]
or [ esp + 0x18 ] 0xffffffff
jmp r-xdata
mov [ esp + 0x18 ] ebx
test edi edi
jle r-xdata
jmp r-xdata
push 0x2
push edi
push [ ebp + 0xc ]
call sub_403320
push ebx
push edi
lea eax [ esp + 0x5c ]
push eax
push [ ebp + 0xc ]
mov [ esp + 0x64 ] edi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] edi
call sub_412320
add esp 0x1c
lea ecx [ esp + 0x48 ]
call sub_412570
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x38 ]
push [ eax + 0x4 ]
push ebx
push [ esp + 0x18 ]
call sub_4080ea
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x5c ]
call sub_408182
push edi
push edi
push edi
push [ ebp + 0xc ]
call sub_403320
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x38 ]
push [ eax + 0x4 ]
push ebx
push [ esp + 0x18 ]
call sub_4080ea
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x5c ]
call sub_408182
push ebx
jmp r-xdata
mov eax [ esp + 0x30 ]
inc eax
mov [ esp + 0x30 ] eax
cmp eax edi
jl r-xdata
inc esi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ esp + 0x18 ]
mov edi [ eax + 0x4 ]
mov esi [ esp + 0x10 ]
push edi
lea eax [ esp + 0x60 ]
push eax
push [ ebp + 0xc ]
call sub_412320
add esp 0x10
lea ecx [ esp + 0x58 ]
call sub_412570
mov edx [ esp + 0x34 ]
sub edi [ esp + 0x18 ]
mov eax [ edx ]
push ebx
mov ecx [ eax + 0x4 ]
push edi
add ecx edx
call sub_44d7e4
jmp r-xdata
push [ esp + 0x14 ]
mov dx [ ebx + eax * 2 ]
mov ecx [ esp + 0x20 ]
call sub_408489
pop ecx
test eax eax
je r-xdata
mov [ esp + 0x18 ] esi
xor ebx ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
xor esi esi
inc esi
cmp [ esp + 0xf ] 0x0
mov [ esp + 0x30 ] eax
je r-xdata
mov edi ebx
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx edx
sub ecx esi
sar ecx 0x1
add ecx eax
sub edi ecx
js r-xdata
test esi esi
jle r-xdata
inc eax
push eax
push esi
push [ ebp + 0xc ]
call sub_403320
mov eax [ esp + 0x3c ]
push ebx
mov [ esp + 0x58 ] eax
push esi
lea eax [ esp + 0x5c ]
push eax
push [ ebp + 0xc ]
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] esi
call sub_412320
add esp 0x1c
lea ecx [ esp + 0x48 ]
call sub_412570
mov [ esp + 0x18 ] esi
jmp r-xdata
push eax
push esi
push [ ebp + 0xc ]
call sub_403320
add esp 0xc
mov [ esp + 0x18 ] ebx
test edi edi
jg r-xdata
push eax
push [ esp + 0x20 ]
push edx
call sub_422315
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x3c ]
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x38 ]
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_40c4cd
cmp [ esp + 0x30 ] 0x0
jle r-xdata
mov eax [ esp + 0x2c ]
sub eax ebx
je r-xdata
mov eax [ esp + 0x1c ]
push edi
mov dx [ eax ]
mov ecx esi
call sub_408489
mov edx eax
pop ecx
mov [ esp + 0x30 ] edx
test edx edx
je r-xdata
dec ecx
add esi 0x2
add edi ecx
jmp r-xdata
inc [ esp + 0x18 ]
lea esi [ esi + ecx * 2 ]
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x10 ]
push [ esp + 0x14 ]
movzx eax [ eax + ecx * 2 ]
mov ecx [ esp + 0x20 ]
mov edx eax
mov [ esp + 0x38 ] eax
call sub_408489
pop ecx
test eax eax
jne r-xdata
dec eax
jne r-xdata
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x5c ]
call sub_408182
push [ esp + 0x18 ]
lea eax [ esp + 0x5c ]
push esi
push eax
push [ ebp + 0xc ]
call sub_412320
add esp 0x10
inc [ esp + 0x18 ]
lea ecx [ esp + 0x58 ]
call sub_412570
lea ecx [ esp + 0x38 ]
call sub_40c4cd
inc [ esp + 0x24 ]
cmp [ esp + 0x28 ] edi
je r-xdata
mov eax [ esp + 0x24 ]
cmp eax [ esp + 0x30 ]
jl r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x34 ] eax
push [ esp + 0x34 ]
lea ecx [ esp + 0x3c ]
call sub_40bd2f
jmp r-xdata
mov eax [ esp + 0x10 ]
lea edx [ eax + edi * 2 ]
mov eax [ esp + 0x14 ]
mov ecx edx
sub ecx [ esp + 0x10 ]
sar ecx 0x1
add ecx eax
sub edi ecx
js r-xdata
inc [ esp + 0x28 ]
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov eax edx
sub eax ecx
sar eax 0x1
push eax
push ebx
push ecx
lea ecx [ esp + 0x44 ]
call sub_4080ea
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_408182
push [ esp + 0x18 ]
lea eax [ esp + 0x4c ]
push esi
push eax
push [ ebp + 0xc ]
call sub_412320
add esp 0x10
inc [ esp + 0x18 ]
lea ecx [ esp + 0x48 ]
call sub_412570
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x20 ]
inc [ esp + 0x24 ]
lea eax [ ecx + eax * 2 ]
mov [ esp + 0x10 ] eax
add eax edi
lea edx [ edx + eax * 2 ]
jmp r-xdata
push eax
push [ esp + 0x20 ]
push edx
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
mov [ esp + 0x20 ] edx
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
add eax 0x2
dec ecx
mov [ esp + 0x10 ] eax
add edi ecx
jmp r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push edi
mov dx [ ecx ]
mov ecx eax
call sub_408489
mov edx eax
pop ecx
mov [ esp + 0x20 ] edx
test edx edx
je r-xdata
sub_408489
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
cmp [ ecx ] dx
je r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x2
dec eax
jne r-xdata
sub_4084a6
push ebp
mov ebp esp
sub esp 0x94
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax [ esi + 0xc ]
dec eax
je r-xdata
pop edi
pop esi
leave
retn
push 0xa
lea eax [ ebp - 0x94 ]
push eax
push [ esi ]
call sub_422177
dec eax
je r-xdata
push 0x10
call sub_42010a
pop ecx
test eax eax
je r-xdata
push 0xa
lea eax [ ebp - 0x94 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_422147
jmp r-xdata
dec eax
jne r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
call sub_40caee
mov edi eax
add esp 0x10
sub eax 0x4
je r-xdata
fld [ esi ]
push ecx
push ecx
lea eax [ ebp - 0x94 ]
fstp [ esp ]
push r--data
push eax
call sub_42234b
push [ esi ]
lea eax [ ebp - 0x94 ]
push r--data
push eax
call sub_42234b
jmp r-xdata
push 0x2
pop edx
sub eax edx
je r-xdata
add esp 0xc
jmp r-xdata
cmp [ esi ] 0x0
lea eax [ ebp - 0x94 ]
je r-xdata
dec eax
je r-xdata
push r--data
push r--data
jmp r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0xc ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x14 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
push edx
lea eax [ ebp - 0x94 ]
push eax
mov [ ebp - 0x10 ] edx
call sub_421943
pop ecx
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_405cd3
jmp r-xdata
dec eax
je r-xdata
push eax
call sub_421943
pop ecx
pop ecx
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
mov eax [ eax ]
push ebx
lea eax [ eax * 4 + 0x6 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov ecx [ esi ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov [ ebp - 0x94 ] ax
jmp r-xdata
xor eax eax
mov [ ebx ] ax
push ecx
push [ ecx ]
mov ecx [ ecx + 0x4 ]
mov edx ebx
call sub_4485c0
pop ecx
pop ecx
jmp r-xdata
push ebx
mov [ esi + 0x8 ] edi
call j_sub_4228ca#2
pop ecx
pop ebx
jmp r-xdata
push ebx
mov ecx eax
call sub_40caee
mov edi eax
push 0x10
call sub_42010a
pop ecx
test eax eax
je r-xdata
sub_408530
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x24 ] 0x0
mov [ ebp - 0x14 ] esi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0x10 ]
xor eax eax
push 0xffffffff
push eax
mov ecx edi
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x18 ] eax
call sub_40a2fb
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_40d3d2
lea ecx [ ebp - 0x34 ]
call sub_40d3d2
xor edx edx
xor ebx ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
lea esp [ esp ]
mov [ ebp - 0x5 ] 0x1
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
sub eax ebx
push eax
push ebx
push esi
lea ecx [ ebp - 0x34 ]
call sub_407f40
lea eax [ ebp - 0x34 ]
push eax
mov ecx edi
call sub_407b4b
lea ecx [ ebp - 0x34 ]
call sub_405cd3
lea ecx [ ebp - 0x44 ]
call sub_405cd3
mov eax [ ebp - 0x18 ]
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx [ esi + 0x28 ]
cmp edx ecx
jg r-xdata
push [ esi + 0x30 ]
mov eax [ esi + 0x40 ]
push [ esi + 0x2c ]
or eax [ esi + 0x38 ]
push eax
push edx
push ecx
push [ esi ]
mov ecx [ esi + 0x24 ]
call sub_408ca0
mov ecx eax
add esp 0x18
mov [ esi + 0x34 ] ecx
test ecx ecx
jle r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
mov edx [ eax + 0x4 ]
mov [ esi + 0x38 ] 0x0
mov edi [ eax ]
cmp edi [ eax + 0x4 ]
mov [ ebp - 0x20 ] edi
mov edi [ ebp + 0x10 ]
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov eax [ esi + 0x28 ]
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov [ ebp - 0x10 ] edx
inc [ ebp - 0x10 ]
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
mov [ esi + 0x38 ] 0x0
call sub_41de96
mov ecx eax
jmp r-xdata
mov [ esi + 0x38 ] 0x10000010
jmp r-xdata
lea edx [ eax + 0x1 ]
jmp r-xdata
mov eax [ esi + 0x2c ]
mov ebx [ eax ]
mov eax [ ebp - 0xc ]
sub ebx eax
je r-xdata
test ecx ecx
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x34 ]
call sub_40a2fb
mov ebx [ ebp - 0x30 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp eax ecx
jae r-xdata
lea eax [ ebp - 0x34 ]
cmp edi eax
je r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
lea eax [ ebp - 0x54 ]
push eax
mov ecx edi
call sub_43c0a2
push eax
mov ecx edi
call sub_40c935
lea ecx [ ebp - 0x54 ]
call sub_405cd3
jmp r-xdata
test ebx ebx
je r-xdata
mov ebx ecx
sub ebx eax
jmp r-xdata
add eax ebx
cmp eax ecx
ja r-xdata
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40a0c0
add [ ebp - 0x18 ] eax
lea eax [ ebp - 0x44 ]
cmp edi eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov ecx [ ebp - 0x28 ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov eax [ ebp - 0xc ]
push edi
lea eax [ ebp - 0x64 ]
push eax
mov ecx edi
call sub_43c0a2
push eax
mov ecx edi
call sub_40c935
lea ecx [ ebp - 0x64 ]
call sub_405cd3
jmp r-xdata
mov ebx [ ebp - 0x40 ]
test ebx ebx
je r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
call sub_40a6f8
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
push eax
call sub_40c91c
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
mov eax [ edi + 0x4 ]
add esp 0x4
lea eax [ eax * 2 + 0x2 ]
push eax
push [ edi ]
push esi
call sub_41faa0
mov [ edi ] esi
mov esi [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
cmp [ edi + 0x8 ] eax
jb r-xdata
dec eax
mov [ ecx ] eax
lea ecx [ ebp - 0x34 ]
call sub_40a6f8
lea eax [ ebx + 0x1 ]
push eax
call sub_40c91c
xor ecx ecx
mov [ ebp - 0x2c ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
jmp r-xdata
lea eax [ ebx + 0x1 ]
cmp [ ebp - 0x2c ] eax
jb r-xdata
mov edx [ ebp - 0x10 ]
dec [ ebp + 0xc ]
mov ebx edx
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov ecx [ edi + 0x4 ]
lea eax [ ebx + ebx ]
push eax
mov eax [ edi ]
push [ ebp - 0x34 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_41faa0
add [ edi + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
add esp 0xc
xor edx edx
mov [ eax + ecx * 2 ] dx
cmp eax 0x41c2
jae r-xdata
mov [ ebp - 0x34 ] eax
jmp r-xdata
push eax
call sub_40c91c
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x34 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov eax [ eax ]
lea esi [ ebx + ebx ]
push esi
lea eax [ eax + ecx * 2 ]
push eax
push [ ebp - 0x34 ]
mov [ ebp - 0x30 ] ebx
call sub_41faa0
mov eax [ ebp - 0x34 ]
add esp 0xc
xor ecx ecx
mov [ esi + eax ] cx
mov esi [ ebp - 0x14 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
call sub_40a6f8
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
push eax
call sub_40c91c
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
mov eax [ edi + 0x4 ]
add esp 0x4
lea eax [ eax * 2 + 0x2 ]
push eax
push [ edi ]
push esi
call sub_41faa0
mov [ edi ] esi
mov esi [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
cmp [ edi + 0x8 ] eax
jb r-xdata
cmp eax 0x2000000
jae r-xdata
add eax eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
xor ecx ecx
mov [ eax + ebx * 2 ] cx
push eax
call j_sub_4228ca#2
add esp 0x4
mov ecx [ edi + 0x4 ]
lea eax [ ebx + ebx ]
push eax
mov eax [ edi ]
push [ ebp - 0x44 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_41faa0
add [ edi + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
add esp 0xc
xor edx edx
mov [ eax + ecx * 2 ] dx
cmp eax 0x41c2
jae r-xdata
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
push eax
mov [ edi + 0x8 ] eax
call sub_40c91c
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
mov edx [ edi ]
add esp 0x4
mov ecx eax
mov [ ebp - 0x20 ] ecx
test edx edx
je r-xdata
cmp eax 0x2000000
jae r-xdata
add eax eax
jmp r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
jmp r-xdata
fadd [ r--data ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ edi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push edx
push ecx
call sub_41faa0
add esp 0xc
push [ edi ]
call j_sub_4228ca
mov ecx [ ebp - 0x20 ]
add esp 0x4
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
push eax
mov [ edi + 0x8 ] eax
call sub_40c91c
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
mov edx [ edi ]
add esp 0x4
mov ecx eax
mov [ ebp - 0x20 ] ecx
test edx edx
je r-xdata
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
fadd [ r--data ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
jmp r-xdata
fadd [ r--data ]
mov ebx [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
jmp r-xdata
fadd [ r--data ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ edi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push edx
push ecx
call sub_41faa0
add esp 0xc
push [ edi ]
call j_sub_4228ca
mov ecx [ ebp - 0x20 ]
add esp 0x4
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
fadd [ r--data ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
jmp r-xdata
fadd [ r--data ]
sub_408800
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xb4
push ebx
push esi
mov [ esp + 0x10 ] ecx
push edi
lea ecx [ esp + 0x78 ]
call sub_407d70
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ edi + 0x4 ]
mov ebx [ esi + 0x8 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x38 ] eax
xor esi esi
mov [ esp + 0xc ] 0x1
call sub_40d3d2
cmp [ edi + 0x8 ] 0x3
jb r-xdata
cmp [ edi + 0x8 ] 0x4
jae r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov esi eax
test esi esi
js r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
jmp r-xdata
mov eax [ esp + 0xc ]
xor esi esi
jmp r-xdata
cmp esi 0x4
jg r-xdata
cmp eax 0x1
jl r-xdata
mov eax 0x1
jmp r-xdata
push [ esp + 0x38 ]
dec eax
lea ecx [ esp + 0x7c ]
mov [ esp + 0x10 ] eax
call sub_405be9
mov edi eax
test edi edi
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
mov esi [ esp + 0x14 ]
push 0x0
mov eax [ esi ]
push 0x2
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
lea eax [ edi + 0x1 ]
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_407ba9
jmp r-xdata
push ebx
lea ecx [ esp + 0x7c ]
call sub_407e36
test esi esi
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea ecx [ esp + 0x78 ]
call sub_405cbb
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x80 ]
call sub_41de96
mov esi [ ebp + 0xc ]
mov ecx esi
test eax eax
je r-xdata
cmp esi 0x1
je r-xdata
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
jmp r-xdata
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x1
jmp r-xdata
push 0x0
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x80 ]
call sub_41de96
mov esi eax
test esi esi
jne r-xdata
cmp esi 0x2
je r-xdata
mov ebx [ ebp + 0xc ]
cmp esi 0x2
jl r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
push 0x0
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x80 ]
call sub_41de96
mov esi eax
test esi esi
je r-xdata
cmp esi 0x3
jne r-xdata
xor edi edi
push esi
lea eax [ esi - 0x1 ]
mov edi 0x1
push eax
jmp r-xdata
mov esi [ esp + 0x14 ]
push 0x0
mov eax [ esi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
jmp r-xdata
mov ebx [ ebp + 0xc ]
push esi
push 0x1
push ebx
call sub_403320
add esp 0xc
xor edi edi
test esi esi
jle r-xdata
cmp esi 0x4
jne r-xdata
mov ebx [ esp + 0x34 ]
xor eax eax
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x3c ] eax
mov [ esp + 0x24 ] eax
mov eax [ esp + 0xc ]
mov esi [ esp + 0x14 ]
inc eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_407ba9
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
push edi
lea ecx [ esp + 0x80 ]
call sub_442d53
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_408182
push [ esp + 0x10 ]
lea eax [ esp + 0x4c ]
push 0x1
push eax
push ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x48 ]
call sub_412570
inc [ esp + 0x10 ]
inc edi
cmp edi esi
jb r-xdata
push 0x1
push ebx
call sub_403320
add esp 0xc
mov [ esp + 0x10 ] 0x0
cmp edi esi
jae r-xdata
lea eax [ esp + 0x28 ]
push eax
push edi
lea ecx [ esp + 0x80 ]
call sub_442d53
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_408182
push edi
push 0x1
lea eax [ esp + 0x50 ]
push eax
push ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x48 ]
call sub_412570
inc edi
cmp edi esi
jl r-xdata
mov [ esp + 0x60 ] r--data
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x54 ] 0x1
mov ecx [ esp + 0x9c ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ esp + 0x20 ]
test edi edi
jne r-xdata
cmp [ esp + 0x68 ] 0x0
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
cmp [ esp + 0x88 ] 0x0
je r-xdata
mov ebx [ ebp + 0xc ]
push edi
push 0x1
push ebx
call sub_403320
add esp 0xc
xor esi esi
test edi edi
je r-xdata
mov esi [ esp + 0x14 ]
push edi
mov eax [ esi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
jmp r-xdata
push ecx
lea eax [ esp + 0x64 ]
push eax
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x84 ]
call sub_442d9a
test eax eax
je r-xdata
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_412490
lea eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_41baef
jmp r-xdata
mov esi [ esp + 0x14 ]
push 0x0
mov eax [ esi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x18 ]
push eax
call sub_412490
cmp edx 0xffffffff
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_412570
lea ecx [ esp + 0x18 ]
call sub_4404c9
lea ecx [ esp + 0x60 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
push esi
push 0x1
push [ eax + esi * 4 ]
push ebx
call sub_412320
inc esi
add esp 0x10
cmp esi edi
jb r-xdata
lea ecx [ esp + 0x18 ]
cmp edx edi
jg r-xdata
call sub_407da8
push [ esp + 0xa8 ]
mov eax [ esp + 0xb4 ]
push [ esp + 0xa8 ]
or eax [ esp + 0xc0 ]
push eax
push edx
push edi
push [ esp + 0x8c ]
call sub_408ca0
add esp 0x18
mov [ esp + 0xac ] eax
test eax eax
jle r-xdata
cmp [ esp + 0xb0 ] 0x0
jne r-xdata
mov ecx [ esp + 0xa4 ]
mov edi [ esp + 0xa0 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0xb0 ] 0x0
mov esi [ ecx ]
cmp esi [ ecx + 0x4 ]
je r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp esi edi
jne r-xdata
mov [ esp + 0xc ] edx
mov ecx eax
inc [ esp + 0xc ]
push 0x1
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x80 ]
mov [ esp + 0xb8 ] 0x0
call sub_41de96
mov edi [ esp + 0xa0 ]
mov edx [ esp + 0xc ]
mov ecx eax
mov eax [ esp + 0xac ]
jmp r-xdata
mov [ esp + 0xb0 ] 0x10000010
jmp r-xdata
lea edx [ edi + 0x1 ]
jmp r-xdata
cmp ecx 0x2
jge r-xdata
mov [ esp + 0x38 ] ecx
test ecx ecx
je r-xdata
mov esi 0x1
jmp r-xdata
xor esi esi
cmp esi ecx
jae r-xdata
lea ecx [ esi * 8 ]
mov [ esp + 0x44 ] ecx
push 0xffffffff
push 0x0
lea ecx [ esp + 0x30 ]
call sub_40a2fb
mov ebx [ esp + 0x34 ]
mov edi [ esp + 0x2c ]
jmp r-xdata
mov eax [ esp + 0x78 ]
mov [ esp + 0x70 ] eax
test esi esi
js r-xdata
mov eax [ esp + 0x3c ]
cmp [ esp + 0x20 ] eax
je r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
add ecx [ esp + 0xa4 ]
mov [ esp + 0x5c ] ecx
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
mov ecx [ rw-data ]
mov [ esp + 0x74 ] eax
add eax eax
mov [ esp + 0x40 ] eax
add eax 0x2
push eax
cmp ecx sub_40a0b1
jne r-xdata
add eax eax
mov [ esp + 0x3c ] eax
cmp eax 0x8
jb r-xdata
push 0x10
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
test eax eax
je r-xdata
call ecx
jmp r-xdata
call sub_4245ec
mov eax 0x8
mov [ esp + 0x3c ] eax
jmp r-xdata
xor ecx ecx
mov [ esp + 0x24 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
cmp [ esp + 0x1c ] 0x0
mov edx eax
mov [ esp + 0x40 ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov [ eax ] ecx
mov ecx [ esp + 0x30 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ebx
inc [ ebx ]
push 0xffffffff
push 0x0
lea ecx [ esp + 0x30 ]
call sub_40a2fb
mov ebx [ esp + 0x34 ]
mov edi [ esp + 0x2c ]
jmp r-xdata
push eax
call sub_4218fb
mov ecx [ ebx ]
add esp 0x4
mov edi eax
mov [ esp + 0x2c ] edi
cmp ecx 0x1
jle r-xdata
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x70 ]
add eax eax
push eax
mov eax [ esp + 0x60 ]
mov eax [ eax ]
lea eax [ ecx + eax * 2 ]
push eax
push edi
call sub_41faa0
mov eax [ esp + 0x4c ]
add esp 0xc
xor ecx ecx
mov [ eax + edi ] cx
mov eax edi
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] edx
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
inc ecx
mov [ edx + ecx * 4 - 0x4 ] eax
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x44 ]
inc esi
add ecx 0x8
mov [ esp + 0x44 ] ecx
cmp esi [ esp + 0x38 ]
jae r-xdata
mov edx [ esp + 0xc ]
mov edi [ esp + 0xa0 ]
jmp r-xdata
mov eax [ esp + 0xac ]
jmp r-xdata
mov eax [ rw-data ]
push [ esp + 0x10 ]
cmp eax r-xdata
jne r-xdata
push edi
lea ecx [ esp + 0x2c ]
call sub_407eda
mov ebx [ esp + 0x34 ]
mov edi [ esp + 0x2c ]
jmp r-xdata
dec ecx
push 0x4
mov [ ebx ] ecx
call sub_42010a
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
lea ecx [ eax * 4 ]
push ecx
push [ esp + 0x20 ]
push edx
call sub_41faa0
add esp 0xc
push [ esp + 0x1c ]
call j_sub_4228ca#2
mov edx [ esp + 0x44 ]
add esp 0x4
cmp esi eax
jge r-xdata
call eax
jmp r-xdata
call sub_4228ca
lea eax [ edi * 2 + 0x2 ]
push eax
push [ esp + 0x14 ]
push [ esp + 0x30 ]
call sub_41faa0
add esp 0xc
xor ebx ebx
jmp r-xdata
mov [ ebx ] 0x1
add esp 0x4
lea eax [ edi + 0x1 ]
mov [ esp + 0x34 ] ebx
test eax eax
je r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
and eax 0xfffffff8
xor ecx ecx
mov [ esp + 0x30 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
add esp 0x4
mov [ esp + 0x28 ] eax
sub_408ca0
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
lea eax [ esi + esi ]
mov [ ebp - 0x110 ] eax
add eax ecx
mov [ ebp - 0x104 ] eax
mov [ ebp - 0x4 ] eax
add eax 0xfffffffe
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xfc ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x14 ]
test edx 0xe20f5a6f
jne r-xdata
cmp edi 0xfffffc19
jne r-xdata
mov eax 0xfffffffd
jmp r-xdata
test ebx ebx
je r-xdata
cmp esi edi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0xfffffffe
jmp r-xdata
test ecx ecx
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
xor edx edx
call sub_409460
add esp 0x14
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x1c ]
je r-xdata
test eax eax
jle r-xdata
test eax eax
js r-xdata
mov eax 0xfffffff1
jmp r-xdata
test edi edi
js r-xdata
mov eax 0xffffffe0
jmp r-xdata
test esi esi
js r-xdata
mov eax 0xffffffe8
jmp r-xdata
cmp esi edi
jg r-xdata
mov eax [ ebx ]
cmp eax 0x50435245
jne r-xdata
sub eax 0x45524350
neg eax
sbb eax eax
and eax 0x19
add eax 0xffffffe3
jmp r-xdata
test [ ebx + 0xc ] 0x2
je r-xdata
mov eax 0xffffffe4
jmp r-xdata
mov ecx [ ebx + 0x8 ]
test ecx 0x800
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0xa8 ] eax
test edx 0x8000000
jne r-xdata
mov eax 0x2
jmp r-xdata
test edx 0x8000
jne r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x6c ] eax
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
test [ ebx + 0xc ] 0x2000
movzx eax [ ebx + 0x22 ]
movzx edx [ ebx + 0x24 ]
lea eax [ ebx + eax * 2 ]
mov [ ebp - 0xc8 ] eax
movzx eax [ ebx + 0x26 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebx + 0x30 ]
mov [ ebp - 0xd4 ] edx
mov [ ebp - 0xf4 ] 0x989680
mov [ ebp - 0xf0 ] 0x989680
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x14 ] eax
jne r-xdata
test edx 0x2000
je r-xdata
cmp [ ebx + 0x10 ] 0x989680
jae r-xdata
test [ ebx + 0xc ] 0x4000
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov edx edi
call sub_471a42
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebx + 0x10 ]
mov [ ebp - 0xf4 ] esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebx + 0x14 ] 0x989680
mov edi [ ebp + 0xc ]
jae r-xdata
test eax eax
jne r-xdata
test esi esi
jle r-xdata
cmp [ ebp + 0x1c ] 0x2
jl r-xdata
mov esi [ ebx + 0x14 ]
mov [ ebp - 0xf0 ] esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
mov eax ecx
or eax [ ebp + 0x14 ]
test al 0x10
jne r-xdata
mov eax r--data
mov [ ebp - 0x14 ] eax
mov ecx [ ebx + 0x8 ]
jmp r-xdata
cmp esi edi
jge r-xdata
cmp eax 0x1
jg r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ ebp - 0x1c ]
mov [ edx ] ecx
mov [ edx + 0x4 ] eax
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x104 ]
mov ecx 0xfc00
mov ax [ eax ]
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov eax 0xfffffff6
jmp r-xdata
cmp [ ebp - 0x6c ] 0x1
mov eax 0xffffffe7
jg r-xdata
test [ ebx + 0xc ] 0x100
jne r-xdata
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax 0xfffffff5
jmp r-xdata
test ecx 0x40000
jne r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
movzx eax [ ebx + 0x26 ]
imul edx eax
movzx eax [ ebx + 0x22 ]
add edx eax
mov [ ebp - 0x60 ] esi
lea eax [ ebx + edx * 2 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
lea eax [ eax + edi * 2 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x8 ] eax
test cl 0x20
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x9c ] eax
test ecx 0x20000000
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xa0 ] eax
test ecx 0x2000000
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov edx [ ebp + 0x14 ]
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xcc ] 0x0
test dl dl
js r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xb0 ] eax
test edx 0x100
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xac ] eax
test edx 0x400
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x98 ] eax
test edx 0x10000000
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov esi [ ebx + 0xc ]
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x50 ] 0x0
test esi 0x1000
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xbc ] eax
lea edi [ eax + 0x100 ]
add eax 0x340
mov [ ebp - 0xb4 ] eax
mov eax edx
mov [ ebp - 0xb8 ] edi
and eax 0x1800000
jne r-xdata
cmp eax 0x800000
je r-xdata
test ecx 0x1800000
jne r-xdata
mov [ ebp - 0x8c ] 0x1
cmp eax 0x1000000
jne r-xdata
test ecx 0x800000
je r-xdata
mov ecx edx
jmp r-xdata
and ecx 0x700000
jne r-xdata
mov eax 0xffffffe9
jmp r-xdata
mov [ ebp - 0x8c ] 0x0
jmp r-xdata
xor eax eax
mov [ ebp - 0x8c ] eax
jmp r-xdata
mov eax 0x1
mov [ ebp - 0x8c ] eax
jmp r-xdata
cmp ecx 0x300000
ja r-xdata
mov [ ebp - 0xe0 ] 0x2
test edx 0x700000
jne r-xdata
cmp ecx __dos_header
je r-xdata
je r-xdata
test esi 0x200
je r-xdata
mov eax 0x55555556
imul [ ebp + 0x1c ]
mov eax edx
shr eax 0x1f
add eax edx
lea edi [ eax + eax * 2 ]
mov eax 0x55555556
lea ecx [ edi + edi ]
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x14 ] eax
movzx eax [ ebx + 0x20 ]
test ax ax
jne r-xdata
mov [ ebp - 0xe0 ] 0x1
jmp r-xdata
cmp ecx r--data
je r-xdata
mov ecx 0xd0a
cmp ecx 0x100000
je r-xdata
mov eax 0xfffffff3
jmp r-xdata
mov ecx eax
mov eax 0x55555556
imul edi
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jl r-xdata
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xec ] esi
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
mov [ ebp - 0xdc ] 0x1
mov [ ebp - 0xc4 ] cx
jmp r-xdata
mov eax ecx
sar eax 0x8
and eax 0xff
mov [ ebp - 0xc4 ] ax
movzx eax cl
mov [ ebp - 0xdc ] 0x2
mov [ ebp - 0xc2 ] ax
jmp r-xdata
mov ecx 0xd
jmp r-xdata
cmp ecx 0x200000
jne r-xdata
lea edi [ ecx + 0x1 ]
lea edi [ edi + edi * 2 ]
lea eax [ edi * 4 ]
push eax
call [ rw-data ]
mov esi eax
add esp 0x4
mov [ ebp - 0xec ] esi
test esi esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
movzx eax [ ebx + 0x1e ]
lea ecx [ esi + edi * 4 ]
shl eax 0x2
mov edx ecx
sub edx eax
lea eax [ esi + 0x8 ]
cmp edx eax
jb r-xdata
mov [ ebp - 0xe0 ] 0x0
cmp ecx 0xff
jle r-xdata
mov ecx 0xa
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
lea eax [ esi - 0x6 ]
jmp r-xdata
mov edx [ ebp - 0xb8 ]
mov eax [ ebx + 0xc ]
test al 0x10
jne r-xdata
mov edx eax
jmp r-xdata
sub ecx 0x4
cmp ecx edx
jae r-xdata
lea ecx [ edi + edi ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0xe8 ] edi
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0x64 ] 0x0
test esi esi
je r-xdata
movzx edi [ ebx + 0x1a ]
movzx esi di
mov [ ebp - 0x100 ] 0x1
mov [ ebp - 0x18 ] edi
mov [ ebp - 0xfc ] esi
test al al
jns r-xdata
jmp r-xdata
movzx edi [ ebx + 0x18 ]
movzx esi di
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x34 ] esi
test al 0x20
je r-xdata
mov [ ecx ] 0xffffffff
sub ecx 0x4
cmp ecx edx
jae r-xdata
mov [ esi + 0x4 ] 0xffffffff
mov eax [ ebp - 0xec ]
mov [ eax ] 0xffffffff
cmp [ ebp - 0x30 ] 0x0
mov edi [ ebp - 0x8 ]
mov ecx edi
mov [ ebp + 0x10 ] ecx
jne r-xdata
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0xec ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov esi eax
je r-xdata
mov esi [ ebx + 0x8 ]
or esi [ ebp + 0x14 ]
and esi 0x4000000
jne r-xdata
mov eax 0xff
cmp di ax
ja r-xdata
mov edx [ ebp - 0xb8 ]
mov eax 0xff
cmp di ax
ja r-xdata
cmp eax [ ebp - 0x7c ]
jae r-xdata
cmp eax [ ebp - 0x7c ]
jae r-xdata
mov [ ebp - 0x8 ] ecx
test esi esi
jne r-xdata
cmp [ ebp - 0x24 ] esi
jne r-xdata
test ecx ecx
je r-xdata
movzx eax di
movzx eax [ eax + edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
movzx eax di
movzx edi [ eax + edx ]
mov [ ebp - 0x10 ] edi
mov edi esi
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov edx [ ebp - 0xe0 ]
mov edi [ ebp - 0xdc ]
mov eax [ ebp - 0x7c ]
mov edx [ ebp - 0xe0 ]
mov edi [ ebp - 0xdc ]
mov eax [ ebp - 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x84 ]
push 0x0
push 0x0
lea ecx [ ebp - 0xf8 ]
push ecx
push 0x2
push eax
mov ecx eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0xf8 ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0xd0 ] 0x0
call sub_409460
add esp 0x14
cmp [ ebp - 0x90 ] 0x0
mov esi eax
jne r-xdata
cmp [ ebp - 0x100 ] esi
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
cmp dx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
cmp esi 0x7f
jbe r-xdata
mov eax [ ebx + 0xc ]
test al 0x40
jne r-xdata
cmp esi 0x7f
jbe r-xdata
mov ecx [ ebp - 0x7c ]
lea eax [ edi + edi ]
sub ecx eax
cmp esi ecx
ja r-xdata
push 0x0
lea ecx [ ebp - 0xdc ]
push ecx
push eax
mov ecx esi
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x7c ]
lea eax [ edi + edi ]
sub ecx eax
cmp esi ecx
ja r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp - 0xdc ]
push ecx
push eax
mov ecx esi
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
cmp eax edi
jae r-xdata
cmp eax edi
jae r-xdata
mov edx [ ebp - 0x80 ]
mov eax [ ebp - 0x110 ]
mov edi [ ebp - 0x4 ]
add eax edx
cmp edi eax
jbe r-xdata
movzx ecx si
mov eax ecx
shr eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
movzx ecx si
mov eax ecx
shr eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax [ ebp - 0x7c ]
add esi 0x2
cmp esi eax
jb r-xdata
mov ax [ esi ]
cmp ax [ ebp - 0xc4 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0xe0 ]
mov edi [ ebp - 0xdc ]
jmp r-xdata
add esi 0x2
cmp esi [ ebp - 0x8 ]
jae r-xdata
mov ax [ esi ]
cmp ax [ ebp - 0xc4 ]
jne r-xdata
mov edx [ ebp - 0xe0 ]
mov edi [ ebp - 0xdc ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
jmp r-xdata
jne r-xdata
cmp esi 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ecx
sub eax edx
and eax 0xfffffffe
cmp eax 0x7d0
jge r-xdata
movzx edx [ eax ]
cmp dx [ ebp - 0x34 ]
je r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
mov ax [ eax * 8 + r--data ]
add ax si
movzx eax ax
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
add eax ecx
movzx eax [ eax * 2 + r--data ]
mov ax [ eax * 8 + r--data ]
add ax si
movzx eax ax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
test edx edx
je r-xdata
cmp edi 0x1
je r-xdata
mov eax [ ebp - 0x7c ]
cmp esi eax
jb r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp edi 0x1
je r-xdata
lea eax [ esi + 0x3e4 ]
cmp eax 0x4
ja r-xdata
mov edx [ ebp - 0x4 ]
cmp esi 0xfffffc19
je r-xdata
cmp [ ebp - 0x20 ] 0x0
mov esi [ ebp - 0x14 ]
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp dx [ ebp - 0x10 ]
je r-xdata
add eax 0x2
mov [ ebp - 0x4 ] eax
cmp eax edi
jb r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
mov ax [ esi + 0x2 ]
cmp ax [ ebp - 0xc2 ]
je r-xdata
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edi esi
mov [ ebp - 0x8 ] edi
jmp r-xdata
add esi 0x2
mov ax [ esi + 0x2 ]
cmp ax [ ebp - 0xc2 ]
je r-xdata
jmp [ eax * 4 + jump_table_48cdcb ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp edi ecx
jae r-xdata
mov ecx [ ebp + 0x10 ]
jmp r-xdata
cmp esi 0x4
jl r-xdata
test [ ebp - 0x64 ] 0x10000
mov ecx [ ebp - 0x68 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
add eax 0x2
mov [ ebp - 0x4 ] eax
cmp eax edi
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0xe0 ]
mov eax [ ebp - 0xe0 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0xd0 ]
mov [ ebp - 0xcc ] eax
mov edx edi
jmp r-xdata
mov edi [ ebp - 0x78 ]
mov edx [ ebp - 0x4 ]
cmp edi edx
jbe r-xdata
mov ecx [ ebp + 0x10 ]
xor esi esi
jmp r-xdata
mov eax [ ebp - 0xe0 ]
xor esi esi
cmp [ ebp - 0x30 ] esi
jne r-xdata
mov ax [ edi ]
mov esi 0xfc00
and ax si
mov esi 0xdc00
cmp ax si
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x68 ] esi
jle r-xdata
lea eax [ esi * 4 - 0x8 ]
push eax
mov eax [ ebp - 0xec ]
add eax 0x8
push eax
mov eax [ ebp + 0x18 ]
add eax 0x8
push eax
call sub_41faa0
add esp 0xc
cmp ecx esi
jl r-xdata
mov eax ecx
cdq
sub eax edx
mov esi eax
sar esi 0x1
lea edx [ edx + eax * 2 ]
cmp edx [ ebp - 0x108 ]
jbe r-xdata
mov esi [ ebp - 0xfc ]
mov eax [ ebp - 0x18 ]
cmp si ax
jne r-xdata
jmp r-xdata
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0xdc ]
lea edx [ eax + eax ]
mov eax [ ebp - 0x80 ]
add eax edx
cmp edi eax
jb r-xdata
cmp edi edx
jbe r-xdata
mov eax [ ebp - 0xdc ]
lea edx [ eax + eax ]
mov eax [ ebp - 0x80 ]
add eax edx
cmp edi eax
jb r-xdata
cmp edi edx
jbe r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0xcc ] 0x0
lea edi [ edx + 0x2 ]
je r-xdata
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0xdc ]
add edi 0x2
jmp r-xdata
push [ ebp - 0xec ]
call [ rw-data ]
mov ecx [ ebp + 0x10 ]
add esp 0x4
jmp r-xdata
test esi esi
jne r-xdata
push [ ebp - 0xec ]
call [ rw-data ]
add esp 0x4
jmp r-xdata
or [ ebp - 0x64 ] 0x10000
xor esi esi
jmp r-xdata
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] 0x2
jl r-xdata
cmp edx ecx
jae r-xdata
cmp edx ecx
jae r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0xe0 ]
jmp r-xdata
mov ecx edi
sub ecx edx
mov ax [ ecx ]
cmp ax [ ebp - 0xc4 ]
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp edi ecx
jb r-xdata
push 0x0
lea ecx [ ebp - 0xdc ]
push ecx
push edx
mov edx eax
mov ecx edi
call sub_471953
add esp 0xc
test eax eax
mov eax [ ebp - 0xe0 ]
jne r-xdata
mov eax [ ebp - 0xe0 ]
mov ecx edi
sub ecx edx
mov ax [ ecx ]
cmp ax [ ebp - 0xc4 ]
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp edi ecx
jae r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp - 0xdc ]
push ecx
push edx
mov edx eax
mov ecx edi
call sub_471953
add esp 0xc
test eax eax
mov eax [ ebp - 0xe0 ]
jne r-xdata
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0x7c ]
lea ecx [ edx + edx ]
sub eax ecx
mov ecx [ ebp - 0x4 ]
cmp ecx eax
ja r-xdata
cmp edx [ ebp - 0x7c ]
jae r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
cmp esi 0xfffffff4
jne r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
jne r-xdata
movzx edi [ ebx + 0x1e ]
mov eax ecx
cdq
sub eax edx
sar eax 0x1
cmp eax edi
mov eax [ ebp + 0x18 ]
jle r-xdata
mov edx [ ebp + 0x1c ]
lea edi [ edi * 2 + 0x2 ]
cmp edi edx
jle r-xdata
xor esi esi
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x78 ]
sub ecx [ ebp - 0x80 ]
sar ecx 0x1
mov [ eax ] ecx
mov ecx [ ebp - 0x74 ]
sub ecx [ ebp - 0x80 ]
sar ecx 0x1
mov [ eax + 0x4 ] ecx
xor esi esi
movzx edi si
jmp r-xdata
cmp [ edi ] 0xa
jne r-xdata
mov edx [ ebp - 0x80 ]
mov eax [ ebp - 0xe0 ]
cmp [ ebp - 0xdc ] 0x1
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
jmp r-xdata
jmp r-xdata
mov ax [ edi ]
mov [ ebp - 0x2c ] 0xfc00
and ax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0xdc00
cmp ax [ ebp - 0x2c ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0xdc ] 0x1
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0xe0 ]
jmp r-xdata
mov ax [ ecx ]
cmp ax [ ebp - 0xc4 ]
jne r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp - 0xdc ]
push ecx
push [ ebp - 0x7c ]
mov ecx [ ebp - 0x4 ]
mov edx eax
call sub_4080a0
mov ecx [ ebp + 0x10 ]
add esp 0xc
test eax eax
jne r-xdata
cmp edi [ ebp - 0x104 ]
jbe r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x1
jle r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ eax + ecx * 4 ]
lea ecx [ eax + edi * 4 ]
cmp edx ecx
jae r-xdata
mov edi edx
sub edx 0x2
cmp edx ecx
jae r-xdata
movzx eax ax
cmp esi eax
je r-xdata
mov ax [ edx ]
add edx 0x2
cmp ax si
je r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov ax [ ecx + 0x2 ]
cmp ax [ ebp - 0xc2 ]
je r-xdata
cmp [ edi - 0x2 ] 0xd
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp edi ecx
jb r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
mov ax [ ecx + 0x2 ]
cmp ax [ ebp - 0xc2 ]
mov eax [ ebp - 0xe0 ]
je r-xdata
mov edx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] edi
cmp edi ecx
ja r-xdata
cmp edx 0x1
je r-xdata
mov eax [ ebp - 0xe0 ]
jmp r-xdata
mov [ ebp - 0x48 ] esi
jmp r-xdata
cmp [ edi - 0x2 ] 0xd
je r-xdata
mov eax 0xfffffff4
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x18 ]
sub esi ebx
sub ecx ebx
sar esi 0x1
sar ecx 0x1
mov [ edx ] esi
mov [ edx + 0x4 ] ecx
cmp eax 0x2
jle r-xdata
sub ecx edx
dec ecx
shr ecx 0x2
inc ecx
or eax 0xffffffff
mov edi edx
[ edi ]
mov eax [ ebp + 0x18 ]
jmp r-xdata
mov [ ebp - 0x108 ] edx
jmp r-xdata
cmp edx ecx
jae r-xdata
cmp edx ecx
jb r-xdata
mov eax [ ebp - 0xe0 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ecx + 0x2 ]
mov ecx [ ebp + 0x10 ]
cmp ax [ ebp - 0xc2 ]
je r-xdata
cmp edi ecx
jae r-xdata
mov eax [ ebp - 0x10c ]
sub eax ebx
sar eax 0x1
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xe0 ]
jmp r-xdata
cmp [ edi ] 0xa
jne r-xdata
movzx esi [ edx ]
add edx 0x2
cmp esi edi
je r-xdata
test [ ebx + 0xc ] 0x800
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp eax 0x1
je r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x48 ] esi
jmp r-xdata
cmp edx 0x2
jne r-xdata
jmp r-xdata
sub_409460
push ebp
mov ebp esp
sub esp 0x150
push ebx
push esi
push edi
mov edi edx
mov eax ecx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
lea ecx [ ebp + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x40 ] 0x0
mov eax [ ebx ]
mov ecx [ ebx + 0x50 ]
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x20 ] ecx
cmp eax [ ebx + 0x4 ]
jae r-xdata
sub ecx eax
test ecx ecx
jle r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
xor edx edx
call sub_409460
add esp 0x14
jmp r-xdata
inc [ ebx ]
mov eax 0xfffffff8
jmp r-xdata
inc eax
mov [ ebx ] eax
mov eax [ ebp + 0x18 ]
cmp eax [ ebx + 0x8 ]
jae r-xdata
mov eax ecx
jmp r-xdata
neg ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0xffffffeb
jmp r-xdata
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x60 ]
mov [ ebp + 0x14 ] eax
mov [ ebx + 0x9c ] 0x0
jmp r-xdata
lea esp [ esp ]
movzx ecx [ edi ]
xor edx edx
mov esi ecx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x2c ] edx
cmp esi 0x9b
ja r-xdata
mov eax 0xfffffffb
jmp r-xdata
movzx eax [ esi + lookup_table_40a000 ]
jmp [ eax * 4 + jump_table_409eb8 ]
cmp esi 0x82
jae r-xdata
movzx eax [ edi + 0x2 ]
add eax eax
mov esi edi
sub esi eax
mov ecx 0x82
movzx eax [ esi ]
mov [ ebp - 0x18 ] esi
cmp ax cx
jae r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x8 ]
cmp edx edi
je r-xdata
movzx ecx [ edi + 0x22 ]
lea eax [ edi + 0x2 ]
add edi 0x22
mov [ ebp - 0x1c ] eax
mov eax ecx
mov [ ebp - 0x38 ] edi
cmp eax 0x69
jle r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x7c ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] esi
cmp eax esi
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov edx [ ebx + 0x7c ]
mov eax [ ebp - 0x8 ]
cmp eax edx
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx edx [ edi + 0x4 ]
mov [ ebp - 0xc ] edx
lea eax [ edx + edx ]
cmp eax [ ebx + 0x14 ]
jge r-xdata
lea ecx [ esi - 0x55 ]
add edi 0x2
test cl 0x1
je r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
add edi 0x2
push ebx
push [ ebp + 0xc ]
mov edx edi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
add edi 0x2
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
inc [ ebx + 0x28 ]
mov eax [ ebx + 0x28 ]
cmp eax [ ebx + 0x2c ]
ja r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebx + 0xb0 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x30 ] eax
cmp [ edi + 0x4 ] 0x70
movzx eax [ edi + 0x2 ]
mov [ ebp - 0x10 ] eax
jne r-xdata
movzx esi [ edi + 0x2 ]
mov eax [ ebx + 0x94 ]
and eax 0xffff0000
or eax esi
lea edx [ esi + esi ]
mov [ ebx + 0x94 ] eax
cmp edx [ ebx + 0x14 ]
jl r-xdata
cmp [ ebx + 0x9c ] 0x1
mov eax [ ebx + 0xb0 ]
mov [ ebp - 0xc ] eax
jne r-xdata
cmp [ ebx + 0x9c ] 0x1
mov eax [ ebx + 0xb0 ]
mov [ ebp - 0xc ] eax
jne r-xdata
cmp [ ebp - 0x20 ] edx
je r-xdata
cmp [ rw-data ] edx
je r-xdata
movzx eax [ edi + 0x2 ]
mov ecx [ ebx + 0x74 ]
lea esi [ ecx + eax * 2 ]
cmp esi ecx
jne r-xdata
add edi 0x2
mov [ ebp - 0x38 ] edi
mov edx edi
movzx esi [ edi + 0x2 ]
add edi 0x2
mov [ ebp - 0x10 ] 0x1
cmp esi 0x80
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ ebx + 0x48 ] edx
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebx + 0x48 ] edx
je r-xdata
mov ecx [ ebx + 0x98 ]
mov eax [ ebx + 0x78 ]
lea eax [ eax + ecx * 2 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
add edi 0x2
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov ecx [ ebx + 0x7c ]
mov eax [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
cmp [ ebx + 0x4c ] edx
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jb r-xdata
mov ecx [ ebx + 0x7c ]
mov eax [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] edx
je r-xdata
mov edx [ ebx + 0x18 ]
mov ecx [ ebx + 0x7c ]
test edx edx
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
movzx ecx [ edi + 0x2 ]
xor edx edx
cmp esi 0x6e
sete dl
add ecx ecx
add edi 0x4
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x28 ] edx
cmp ecx [ ebp + 0xc ]
jge r-xdata
lea eax [ edi + 0x4 ]
mov [ ebp - 0x28 ] eax
movzx eax [ edi + 0x2 ]
movzx edx [ edi + eax * 2 ]
lea edi [ edi + eax * 2 ]
mov ecx edx
mov [ ebp - 0x38 ] edi
lea eax [ ecx - 0x62 ]
cmp eax 0x7
ja r-xdata
movzx eax [ edi + 0x2 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
add edi 0x4
jmp r-xdata
mov edx 0x1
mov [ ebp - 0x24 ] edx
movzx eax [ edi + 0x2 ]
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x34 ] eax
cmp ecx 0x28
je r-xdata
mov eax [ ebp - 0x2c ]
mov edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] 0x0
add edi 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] edx
add edi 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x34 ] edx
add edi 0x2
jmp r-xdata
cmp esi 0x2e
sbb eax eax
and eax 0xfffffff3
add eax 0x2e
mov ecx esi
sub ecx eax
movzx eax cl
movsx ebx [ ecx + r--data ]
movsx ecx [ ecx + r--data ]
and eax 0x1
add edi 0x2
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x34 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
movzx eax [ edi + 0x2 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
add edi 0x4
jmp r-xdata
movzx eax [ edi + 0x2 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x14 ] eax
cmp ecx 0x42
je r-xdata
mov eax [ ebp - 0x2c ]
mov edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] 0x0
add edi 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] edx
add edi 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] edx
add edi 0x2
jmp r-xdata
movzx eax [ edi + 0x2 ]
mov edx 0x1
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] 0x0
add edi 0x4
jmp r-xdata
cmp esi 0x48
sbb eax eax
and eax 0xfffffff3
add eax 0x48
mov ecx esi
sub ecx eax
movzx eax cl
movsx ebx [ ecx + r--data ]
movsx ecx [ ecx + r--data ]
and eax 0x1
add edi 0x2
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] ecx
test ecx ecx
jne r-xdata
movzx ecx [ edi + 0x2 ]
mov esi ecx
mov eax 0x1
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x2c ] eax
add edi 0x4
jmp r-xdata
movzx eax [ edi + 0x2 ]
xor esi esi
mov [ ebp - 0x1c ] eax
xor eax eax
cmp ecx 0x5c
sete al
mov [ ebp - 0x14 ] esi
add edi 0x4
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
xor esi esi
mov edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x14 ] esi
add edi 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edx 0x1
mov esi edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x14 ] esi
add edi 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edx 0x1
xor esi esi
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] edx
add edi 0x2
jmp r-xdata
movzx ecx [ edi + 0x2 ]
mov eax [ ebp - 0x2c ]
xor esi esi
mov edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] ecx
add edi 0x4
jmp r-xdata
mov esi [ ebp - 0x8 ]
lea eax [ edi + 0x4 ]
mov [ ebx + 0xb4 ] eax
mov [ ebx + 0xb0 ] edx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ edi ]
push [ ebp + 0x14 ]
movzx ecx [ eax + r--data ]
movzx eax [ edi + 0x2 ]
push ebx
push [ ebp + 0xc ]
add ecx eax
push [ ebp + 0x8 ]
lea edx [ edi + ecx * 2 ]
mov ecx esi
call sub_409460
mov edi eax
add esp 0x14
cmp edi 0x1
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ edi + eax * 2 ]
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ edi + eax * 2 ]
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
lea esi [ edi + 0x4 ]
mov [ ebx + 0xb4 ] esi
mov [ ebx + 0xb0 ] edx
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ edi ]
push [ ebp + 0x14 ]
movzx ecx [ eax + r--data ]
movzx eax [ edi + 0x2 ]
push ebx
push [ ebp + 0xc ]
add ecx eax
push [ ebp + 0x8 ]
lea edx [ edi + ecx * 2 ]
mov ecx [ ebp - 0x8 ]
call sub_409460
add esp 0x14
cmp eax 0x1
je r-xdata
mov eax [ ebp + 0x18 ]
mov esi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ edi + eax * 2 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ edi + eax * 2 ]
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
jmp r-xdata
lea esi [ edi + 0x4 ]
mov [ ebx + 0xb4 ] esi
mov [ ebx + 0xb0 ] edx
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ edi ]
push [ ebp + 0x14 ]
movzx ecx [ eax + r--data ]
movzx eax [ edi + 0x2 ]
push ebx
push [ ebp + 0xc ]
add ecx eax
push [ ebp + 0x8 ]
lea edx [ edi + ecx * 2 ]
mov ecx [ ebp - 0x8 ]
call sub_409460
add esp 0x14
cmp eax 0x1
je r-xdata
mov [ ebx + 0x9c ] 0x2
jmp r-xdata
cmp esi 0x7b
je r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebp + 0x14 ] edx
jmp r-xdata
cmp eax 0x7b
je r-xdata
cmp esi 0x99
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0x84 ] edx
mov [ ebx + 0x90 ] eax
mov [ ebx + 0x80 ] edi
test esi esi
jne r-xdata
sub eax 0x62
cmp eax 0x7
ja r-xdata
mov edx [ ebp - 0x2c ]
mov eax 0x1
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x34 ] eax
cmp [ ebx + 0x8c ] edx
jmp r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
cmp [ ebp - 0x20 ] edx
je r-xdata
cmp [ ebx + 0x8c ] 0x0
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
mov eax [ ebx + 0x7c ]
mov ecx [ ebp - 0x8 ]
sub eax ecx
and eax 0xfffffffe
cmp eax 0x2
jl r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
mov ecx 0xfc00
and ax cx
mov ecx 0xd800
mov esi 0x1
mov [ ebp - 0x38 ] edi
cmp ax cx
je r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ ecx + eax * 4 ]
mov eax [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebx + 0x10 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
lea ecx [ ecx + eax * 4 ]
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x94 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0xb0 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x8 ]
sub eax [ ebx + 0x78 ]
sar eax 0x1
mov [ ecx ] eax
xor eax eax
jmp r-xdata
mov eax 0x1
mov [ ebp - 0x38 ] edi
jmp r-xdata
jmp r-xdata
movzx edx [ edi + 0x4 ]
mov [ ebp - 0x18 ] edx
lea eax [ edx + edx ]
cmp eax [ ebx + 0x14 ]
jge r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
cmp eax [ ebx + 0x78 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ edi ]
push [ ebp + 0x14 ]
movzx ecx [ eax + r--data ]
movzx eax [ edi + 0x2 ]
push ebx
push [ ebp + 0xc ]
add ecx eax
push [ ebp + 0x8 ]
lea edx [ edi + ecx * 2 ]
mov ecx [ ebp - 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
movzx eax [ edi ]
movzx ecx [ eax + r--data ]
movzx eax [ edi + 0x2 ]
add ecx eax
lea edi [ edi + ecx * 2 ]
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov ecx [ ebx + 0x80 ]
mov [ ebp + 0x8 ] ecx
cmp eax 0xfffffc20
jne r-xdata
movzx ecx [ edi + 0x4 ]
lea edx [ edi + 0x4 ]
cmp ecx 0x89
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
sub eax esi
mov eax [ ecx + eax * 4 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebx + 0x78 ]
mov eax [ ebx + 0xc ]
sar ecx 0x1
mov [ eax + edx * 4 + 0x4 ] ecx
cmp [ ebp + 0xc ] edx
jg r-xdata
or eax 0x10000
add edi 0x4
mov [ ebx + 0x94 ] eax
mov [ ebp - 0x38 ] edi
jmp r-xdata
xor esi esi
mov esi 0x1
mov [ ebx + 0x9c ] edx
jmp r-xdata
xor esi esi
mov esi 0x1
mov [ ebx + 0x9c ] edx
jmp r-xdata
movzx eax [ edi + 0x2 ]
mov ecx [ ebp - 0x8 ]
neg eax
lea ecx [ ecx + eax * 2 ]
mov eax ecx
mov [ ebp - 0x8 ] ecx
cmp eax [ ebx + 0x78 ]
jb r-xdata
movzx ecx [ edi + 0x2 ]
test ecx ecx
jle r-xdata
add edi 0x8
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov [ ebp - 0xd4 ] 0x2
movzx eax [ edi + 0x2 ]
mov [ ebp - 0xd0 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xcc ] eax
mov eax [ ebx + 0x78 ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebx + 0x7c ]
sub eax [ ebx + 0x78 ]
sar eax 0x1
mov [ ebp - 0xc4 ] eax
mov eax [ ebp + 0x8 ]
sub eax [ ebx + 0x78 ]
sar eax 0x1
mov [ ebp - 0xc0 ] eax
mov eax [ ebp - 0x8 ]
sub eax [ ebx + 0x78 ]
sar eax 0x1
mov [ ebp - 0xbc ] eax
movzx eax [ edi + 0x4 ]
mov [ ebp - 0xac ] eax
movzx eax [ edi + 0x6 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0xb8 ] eax
movzx eax [ ebx + 0x94 ]
mov [ ebp - 0xb4 ] eax
test eax eax
jne r-xdata
movzx edx [ esi + 0x4 ]
xor edx edx
jmp r-xdata
movzx eax [ edx + 0x2 ]
cmp [ edx + eax * 2 ] 0x71
lea edx [ edx + eax * 2 ]
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
add edx 0x4
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp esi 0x85
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ edi + eax * 2 ]
push [ ebp + 0x8 ]
call sub_409460
mov ecx eax
add esp 0x14
cmp ecx 0xfffffc1a
jne r-xdata
mov [ ebx + 0x9c ] 0x2
cmp eax [ ebx + 0x78 ]
je r-xdata
mov ecx [ ebx + 0x78 ]
cmp eax ecx
je r-xdata
cmp eax [ ebx + 0x78 ]
je r-xdata
add edi 0x2
mov [ ebp - 0x38 ] edi
jmp r-xdata
cmp [ ebx + 0x4c ] edx
jne r-xdata
mov edx [ ebx + 0x18 ]
test edx edx
je r-xdata
cmp [ ebx + 0x5c ] edx
je r-xdata
cmp [ ebx + 0x8c ] edx
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
mov edx [ ebx + 0x18 ]
lea esi [ ebx + 0x1c ]
test edx edx
je r-xdata
cmp eax [ ebx + 0x78 ]
je r-xdata
cmp eax [ ebx + 0x78 ]
je r-xdata
mov edx [ ebx + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
mov eax [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x20 ] edx
je r-xdata
mov esi [ ebx + 0x54 ]
neg esi
sbb esi esi
neg esi
dec esi
mov eax [ ebx + 0xc ]
cmp [ eax + ecx * 4 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x2c ]
mov eax 0x1
mov edx eax
mov [ ebp - 0x18 ] edx
movzx eax [ eax + lookup_table_48c2e7 ]
jmp [ eax * 4 + jump_table_48c2df ]
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
mov eax 0x1
mov [ ebp - 0x2c ] eax
add edi 0x4
jmp r-xdata
cmp ecx 0x35
je r-xdata
mov [ ebp - 0x34 ] 0x7fffffff
cmp [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ edi ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x20 ]
add edi 0x2
mov [ ebp - 0x38 ] edi
test ecx ecx
je r-xdata
mov eax 0x1
mov [ ebp - 0x2c ] eax
add edi 0x4
jmp r-xdata
cmp ecx 0x4f
je r-xdata
mov [ ebp - 0x14 ] 0x7fffffff
movzx ecx [ edi ]
add edi 0x2
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] edi
cmp ecx 0x10
je r-xdata
mov [ ebp - 0x1c ] 0x7fffffff
cmp [ ebx + 0xb0 ] 0x0
jne r-xdata
cmp edi 0xfffffc19
jne r-xdata
mov eax 0xfffffc1c
jmp r-xdata
mov eax 0xfffffc1d
jmp r-xdata
cmp [ ebx + 0xb0 ] 0x0
jne r-xdata
cmp eax 0xfffffc19
jne r-xdata
mov [ ebx + 0x80 ] esi
mov eax 0xfffffc1e
jmp r-xdata
test eax eax
jne r-xdata
cmp [ ebx + 0xb0 ] 0x0
jne r-xdata
cmp eax 0xfffffc19
jne r-xdata
mov eax [ ebx + 0xb0 ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x94 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ edi + eax * 2 ]
push [ ebp + 0x8 ]
call sub_409460
mov edx eax
add esp 0x14
cmp edx 0xfffffc20
je r-xdata
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] ecx
cmp eax 0x7a
jbe r-xdata
xor ecx ecx
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
mov eax 0xfffffc19
jmp r-xdata
mov eax 0x1
movzx eax [ eax + lookup_table_40a0a4 ]
jmp [ eax * 4 + jump_table_40a09c ]
cmp eax 0x1
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] 0x1
jl r-xdata
mov [ ebp - 0x28 ] 0x1
cmp eax 0x1
jl r-xdata
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
movzx ecx [ edi + 0x2 ]
mov edx 0xff
cmp cx dx
ja r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x2
mov eax esi
and eax 0xfc00
mov edx 0x1
cmp eax 0xd800
je r-xdata
jmp r-xdata
cmp ecx 0xe
jb r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
mov eax [ ebp - 0x8 ]
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0x30 ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
cmp [ ebx + 0x8c ] edx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
mov [ ebp - 0x8 ] ecx
cmp [ edi + 0x2 ] ax
jne r-xdata
mov esi 0x2
jmp r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ ebp - 0x8 ]
sub eax edx
sar eax 0x1
cmp esi eax
jg r-xdata
mov [ ebx + 0x9c ] 0x2
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ edi + eax * 2 ]
push [ ebp + 0x8 ]
call sub_409460
mov edx eax
add esp 0x14
cmp edx 0xfffffc1b
je r-xdata
movsx esi [ ecx + r--data ]
movsx ecx [ ecx + r--data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] ecx
test ecx ecx
jne r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
xor ecx ecx
mov [ ebp - 0x34 ] ecx
mov ecx edi
sub ecx [ ebx + 0x74 ]
shl eax 0x2
sar ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x28 ] eax
mov edx [ eax + ecx ]
mov eax [ eax + ecx + 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebx + 0x10 ]
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x38 ] edx
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] eax
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
add edi 0x2
mov [ ebp - 0x38 ] edi
jmp r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
test esi esi
je r-xdata
lea eax [ edi + 0x4 ]
mov [ ebx + 0x80 ] eax
mov eax 0xfffffc1f
jmp r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
cmp eax 0x71
jne r-xdata
test eax eax
jne r-xdata
movzx ecx [ edi + 0x2 ]
lea ecx [ edi + ecx * 2 ]
cmp [ ebx + 0x80 ] ecx
jae r-xdata
mov edx [ ebx + 0xa8 ]
test edx edx
jne r-xdata
cmp ecx 0x8a
je r-xdata
add edi 0x8
sub eax 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xa0 ] 0x2
movzx eax [ edi + 0x6 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x98 ] eax
mov eax [ ebx + 0x78 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebx + 0x7c ]
sub eax [ ebx + 0x78 ]
sar eax 0x1
mov [ ebp - 0x90 ] eax
mov eax [ ebp + 0x8 ]
sub eax [ ebx + 0x78 ]
sar eax 0x1
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x8 ]
sub eax [ ebx + 0x78 ]
sar eax 0x1
mov [ ebp - 0x88 ] eax
movzx eax [ edi + 0x8 ]
mov [ ebp - 0x78 ] eax
movzx eax [ edi + 0xa ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x84 ] eax
movzx eax [ ebx + 0x94 ]
mov [ ebp - 0x80 ] eax
test eax eax
jne r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
lea eax [ edx + 0x2 ]
mov [ ebp + 0xc ] eax
mov eax [ ebx + 0x80 ]
mov [ ebp + 0x8 ] eax
cmp ecx 0xfffffc19
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push 0x0
push ebx
push [ ebp + 0xc ]
lea edx [ edi + 0x4 ]
push [ ebp + 0x8 ]
call sub_409460
mov ecx eax
add esp 0x14
cmp ecx 0x1
je r-xdata
mov eax ecx
sub eax 0x0
je r-xdata
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push 0x0
push ebx
push [ ebp + 0xc ]
lea edx [ edi + 0x4 ]
push [ ebp + 0x8 ]
call sub_409460
mov ecx eax
mov eax [ ebp - 0xc ]
add esp 0x14
mov [ ebx + 0xb0 ] eax
cmp ecx 0xfffffc20
jg r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
sub eax 0x2
dec ecx
mov [ ebp - 0x8 ] eax
cmp eax [ ebx + 0x78 ]
jb r-xdata
mov eax [ ebx + 0xac ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebx + 0xb4 ]
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0xd4 ]
push eax
call [ rw-data ]
add esp 0x4
test eax eax
jg r-xdata
mov [ ebp - 0xb4 ] 0xffffffff
mov [ ebp - 0x54 ] edx
mov eax [ ebx + 0x94 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebx + 0xa8 ]
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebx + 0xa8 ] eax
mov ecx [ ebx + 0x10 ]
add edi 0x4
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x4c ] ecx
cmp ecx 0x1e
jg r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebx + 0xa8 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax edi
sub eax [ ebx + 0x74 ]
mov [ ebp - 0x30 ] 0x0
sar eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x94 ]
mov [ ebp - 0x28 ] eax
cmp ecx 0xfffffc20
jne r-xdata
mov eax [ ebx + 0x90 ]
mov ecx [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebx + 0x84 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x74 ]
mov [ ebp - 0x30 ] 0x1
lea edi [ eax + ecx * 2 ]
jmp r-xdata
add edi 0x2
cmp eax [ ebx + 0x7c ]
je r-xdata
cmp [ ebx + 0x8c ] edx
jmp r-xdata
mov edx [ ebx + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
mov eax [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
push [ ebp - 0x20 ]
lea eax [ ebx + 0x1c ]
push eax
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
je r-xdata
cmp eax [ ebx + 0x88 ]
jbe r-xdata
mov edx [ esi ]
lea eax [ edx + edx ]
sub ecx eax
mov eax [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
push [ ebp - 0x20 ]
push esi
push ecx
mov ecx eax
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
xor esi esi
cmp eax [ ebx + 0x88 ]
ja r-xdata
xor esi esi
lea edx [ eax - 0x2 ]
mov ecx 0xfc00
mov ax [ edx ]
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov esi [ ebp - 0x20 ]
mov ax [ eax ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
push esi
lea eax [ ebx + 0x1c ]
push eax
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
cmp ecx 0x100
jae r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0xff
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x100
jae r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0xff
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x100
jae r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0xff
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x180e
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x180e
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x85
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x85
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
push edx
mov edx [ ebp - 0x8 ]
push ebx
push esi
call sub_4716b8
mov ecx eax
add esp 0xc
test ecx ecx
js r-xdata
movzx eax [ eax + lookup_table_48c2d7 ]
jmp [ eax * 4 + jump_table_48c2cf ]
mov esi [ eax + ecx * 4 + 0x4 ]
sub esi [ eax + ecx * 4 ]
jmp r-xdata
cmp edx eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
lea eax [ ecx - 0x62 ]
movzx ecx al
movsx edx [ eax + r--data ]
movsx eax [ eax + r--data ]
add edi 0x2
and ecx 0x1
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
movzx eax [ edi + 0x4 ]
xor ecx ecx
cmp edx 0x69
movzx edx [ edi + 0x2 ]
sete cl
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] ecx
test eax eax
jne r-xdata
movzx ebx [ edi ]
add edi 0x2
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x38 ] edi
jmp r-xdata
movzx eax [ edi ]
mov [ ebp - 0x18 ] eax
and eax 0xfc00
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x28 ] edi
cmp eax 0xd800
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
add edi 0x4
jmp r-xdata
movzx edx [ eax ]
movzx ecx [ edi + 0x2 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp ecx edx
je r-xdata
movzx edx [ edi + 0x2 ]
mov eax edx
add edi 0x4
and eax 0xfc00
mov [ ebp - 0xc ] edx
mov [ ebp - 0x38 ] edi
cmp eax 0xd800
jne r-xdata
cmp esi 0x48
jb r-xdata
mov eax [ ebp - 0x34 ]
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
add edi 0x4
jmp r-xdata
mov [ ebp - 0x3c ] 0x0
cmp ecx 0xf
je r-xdata
cmp edi 0xfffffc1f
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebx + 0xb0 ] ecx
mov eax edi
jmp r-xdata
test eax eax
jne r-xdata
mov [ ebx + 0xb0 ] esi
mov [ ebx + 0x80 ] edi
mov eax 0xfffffc20
jmp r-xdata
jmp r-xdata
movzx ecx [ edi + 0x2 ]
lea eax [ edi + ecx * 2 ]
cmp [ ebx + 0x80 ] eax
jae r-xdata
test edx edx
jne r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
je r-xdata
cmp eax 0x77
jb r-xdata
cmp eax 0x7f
je r-xdata
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
add ecx 0xffffff9e
add edi 0x2
mov [ ebp - 0x38 ] edi
test cl 0x1
jne r-xdata
movzx ecx [ edi + 0x4 ]
movzx eax [ edi + 0x2 ]
xor edx edx
cmp [ edi ] 0x69
mov [ ebp - 0x34 ] eax
sete dl
mov [ ebp - 0x18 ] ecx
test ecx ecx
jne r-xdata
mov ebx [ ebp - 0x18 ]
cmp [ ebp - 0x34 ] ebx
mov ebx [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebx + 0x7c ]
lea esp [ esp ]
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
cmp eax esi
jae r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
jmp r-xdata
mov edx ecx
mov eax [ ebx + 0x3c ]
movzx edx [ eax + ecx ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ edi + 0x2 ]
and esi 0x3ff
and eax 0x3ff
shl esi 0xa
or esi eax
add esi 0x10000
mov edx 0x2
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
cmp esi 0x80
jae r-xdata
cmp eax [ ebx + 0x88 ]
jmp r-xdata
cmp ecx 0xd
ja r-xdata
cmp ecx 0x85
jb r-xdata
movzx eax [ eax ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ ebp - 0x8 ]
jmp r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx ecx [ edi + 0x2 ]
cmp ecx 0x9
jne r-xdata
dec eax
or eax 0xffffff80
inc eax
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x30 ] ecx
jmp r-xdata
cmp ecx [ ebx + 0x88 ]
jmp r-xdata
add edi 0x4
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
test esi esi
jle r-xdata
mov esi [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov edi [ ebp - 0x10 ]
lea ecx [ esi + esi ]
mov [ eax + ecx * 4 ] edi
mov eax [ ebx + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ eax + ecx * 4 + 0x4 ] edi
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0xc ]
sub ecx esi
mov esi [ ebp - 0x18 ]
mov [ eax + ecx * 4 ] esi
jmp r-xdata
cmp edx 0xfffffc20
je r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ edi + eax * 2 ]
push [ ebp + 0x8 ]
call sub_409460
mov ecx eax
add esp 0x14
cmp ecx 0xfffffc1a
jne r-xdata
mov [ ebx + 0x9c ] 0x2
cmp eax ecx
jae r-xdata
cmp [ edi ] 0x72
mov edx [ ebx + 0x90 ]
mov eax [ ebx + 0x84 ]
mov [ ebp + 0xc ] edx
mov [ ebp - 0x8 ] eax
je r-xdata
movzx eax [ edi + 0x2 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0x30 ]
mov [ ebx + 0xb0 ] eax
cmp [ edi ] 0x71
je r-xdata
cmp [ edi ] 0x71
je r-xdata
movzx eax [ edi + 0x6 ]
mov [ ebp - 0xc ] eax
cmp eax 0xffff
je r-xdata
movzx eax [ edi + 0x2 ]
lea edi [ edi + eax * 2 ]
jmp r-xdata
cmp ecx 0x87
je r-xdata
mov eax [ ebx + 0xac ]
mov [ ebp - 0x7c ] eax
mov eax [ ebx + 0xb4 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xa0 ]
push eax
call [ rw-data ]
add esp 0x4
test eax eax
jg r-xdata
mov [ ebp - 0x80 ] 0xffffffff
test esi esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebx + 0xb0 ] eax
cmp ecx 0xfffffc20
jne r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
dec eax
je r-xdata
cmp ecx 0xfffffc19
je r-xdata
movzx eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
cmp [ ebx + 0x80 ] eax
jae r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov [ ebx + 0x88 ] eax
mov ax [ eax ]
mov edx 0xfc00
and ax dx
mov edx 0xdc00
cmp ax dx
mov eax [ ebp - 0x8 ]
jne r-xdata
js r-xdata
lea eax [ ecx * 4 ]
push eax
call [ rw-data ]
add esp 0x4
mov [ ebp - 0x50 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x14c ]
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
cmp eax [ ecx + 0x14 ]
jne r-xdata
test ecx ecx
jne r-xdata
movzx eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
cmp [ ebx + 0x80 ] eax
jae r-xdata
cmp esi 0x82
jb r-xdata
mov edx [ ebx + 0x18 ]
test edx edx
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov ax [ eax ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
mov ax [ eax ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
mov ecx [ esi ]
mov eax [ ebx + 0x7c ]
add ecx ecx
sub eax ecx
cmp [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
cmp [ ebx + 0x58 ] 0x0
je r-xdata
movzx ecx [ eax - 0x2 ]
cmp [ ebx + 0x58 ] edx
je r-xdata
add eax 0xfffffffe
mov [ ebx + 0x88 ] eax
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp edx [ ebx + 0x88 ]
jae r-xdata
sub edx 0x2
mov ecx [ ebx + 0x7c ]
cmp eax ecx
jae r-xdata
add eax 0x2
cmp eax [ ebx + 0x7c ]
mov eax [ ebp - 0x8 ]
jb r-xdata
cmp edx 0x1
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x4
jne r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
cmp ecx 0x205f
ja r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
cmp ecx 0x205f
ja r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
cmp ecx 0x2028
jb r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
cmp ecx 0xfffffffe
jne r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0xffffff9e
movzx ecx al
movsx edx [ eax + r--data ]
and ecx 0x1
mov [ ebp - 0xc ] ecx
movsx ecx [ eax + r--data ]
add edi 0x2
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] edx
test edx edx
jne r-xdata
movzx edx [ edi + 0x4 ]
movzx ecx [ edi + 0x2 ]
xor eax eax
cmp [ edi ] 0x69
mov [ ebp - 0x10 ] ecx
sete al
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] eax
test edx edx
jne r-xdata
movzx eax [ edi ]
mov [ ebp - 0xc ] eax
add eax 0xffffff9e
mov [ ebp - 0x2c ] esi
cmp eax 0x7
ja r-xdata
mov esi [ ebp - 0x8 ]
test ecx ecx
je r-xdata
movzx esi [ eax ]
mov ecx [ ebp - 0x20 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
mov [ ebp - 0x30 ] 0x1
cmp edx 0x1
jl r-xdata
mov eax 0x7fffffff
jmp r-xdata
add edi 0x6
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x10 ] eax
cmp esi 0x2e
jb r-xdata
mov eax 0x1
mov ebx [ ebp - 0x18 ]
movzx eax [ edi + 0x2 ]
and ebx 0x3ff
and eax 0x3ff
shl ebx 0xa
or eax ebx
mov ebx [ ebp + 0x10 ]
add eax 0x10000
mov [ ebp - 0x18 ] eax
mov eax 0x2
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi 0x20
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
movzx ecx [ eax - 0x2 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
and eax 0xfc00
mov [ ebp - 0x30 ] ecx
cmp eax 0xd800
jne r-xdata
movzx eax [ edi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add edi 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0xc ] 0x1
test ecx ecx
je r-xdata
mov esi [ ebp - 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ edi ]
and [ ebp - 0x34 ] 0x3ff
shl [ ebp - 0x34 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x34 ]
add eax 0x10000
add edi 0x2
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x30 ] ecx
test esi esi
jg r-xdata
mov [ ebp - 0x3c ] 0x1
jmp r-xdata
or ecx 0xffffffff
mov eax edi
jmp r-xdata
mov edx [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
call sub_4718ee
test eax eax
je r-xdata
mov eax 0xfffffc1d
jmp r-xdata
mov [ ebx + 0xb0 ] esi
mov eax edx
jmp r-xdata
cmp [ edi ] 0x71
je r-xdata
cmp edx 0xfffffc1b
jne r-xdata
movzx eax [ edi + 0x2 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0xc ]
mov [ ebx + 0xb0 ] eax
cmp [ edi ] 0x71
jne r-xdata
movzx eax [ edi ]
movzx eax [ eax + r--data ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x84 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x90 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x80 ] eax
jmp r-xdata
movzx ecx [ esi + 0x4 ]
mov eax [ ebx + 0xa8 ]
mov [ ebp - 0xc ] ecx
lea edx [ ecx + ecx ]
test eax eax
jne r-xdata
cmp eax 0x7c
je r-xdata
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
add edi 0x6
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov [ ebp - 0x18 ] 0x7fffffff
test edx edx
jne r-xdata
movzx ebx [ eax ]
add eax 0x2
mov [ ebp - 0x10 ] ebx
cmp ebx 0xff
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov eax ecx
and eax 0xfc00
mov [ ebp - 0x30 ] ecx
cmp eax 0xd800
je r-xdata
cmp [ ebx + 0x8c ] 0x0
jne r-xdata
mov edi [ ebp - 0x20 ]
mov ebx eax
cmp edx ecx
jne r-xdata
mov eax [ ebx + 0x3c ]
movzx ecx [ eax + ecx ]
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
mov esi 0xff
cmp cx si
ja r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
mov eax ecx
and eax 0xfc00
mov [ ebp - 0x30 ] ecx
cmp eax 0xd800
jne r-xdata
cmp ecx 0xff
ja r-xdata
jbe r-xdata
cmp ecx 0x85
je r-xdata
jne r-xdata
cmp ecx 0xa
ja r-xdata
movzx eax [ edi + 0x4 ]
mov ecx [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
cmp edx ecx
jb r-xdata
mov [ ebp - 0x38 ] edi
jmp r-xdata
cmp edx [ ebx + 0x7c ]
jb r-xdata
mov edi edi
pop edi
pop esi
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ edi + 0x2 ]
lea eax [ edi + ecx * 2 ]
cmp [ ebx + 0x80 ] eax
jae r-xdata
test edx edx
je r-xdata
cmp ecx 0xfffffc20
jne r-xdata
mov eax [ ebx + 0x90 ]
mov ecx [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebx + 0x84 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x74 ]
lea edi [ eax + ecx * 2 ]
mov ecx 0x1
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov ax [ eax ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
cmp eax [ ebp - 0x28 ]
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
lea edx [ edi + 0x4 ]
push ebx
push [ ebp + 0xc ]
push esi
call sub_409460
add esp 0x14
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ecx ] 0x71
jne r-xdata
mov ecx 0x2
mov eax 0x1
mov edx [ edx + 0x4 ]
mov [ ebp - 0x30 ] edx
cmp eax edx
je r-xdata
cmp [ edi ] 0x71
je r-xdata
movzx edx [ edi + 0x6 ]
add edx edx
cmp edx [ ebp + 0xc ]
jge r-xdata
cmp ecx 0x88
je r-xdata
js r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
test ecx ecx
jne r-xdata
movzx eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
cmp [ ebx + 0x80 ] eax
jae r-xdata
jmp r-xdata
mov eax ecx
jmp r-xdata
lea eax [ ecx + 0x3e4 ]
cmp eax 0x3
ja r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
cmp [ edi ] 0x71
je r-xdata
test ecx ecx
jg r-xdata
sub eax 0x2
mov [ ebp - 0x8 ] eax
mov eax 0xfffffffa
jmp r-xdata
mov ecx [ ebp - 0x4c ]
shl ecx 0x2
push ecx
push [ ebx + 0xc ]
push eax
call sub_41faa0
mov eax 0x82
add esp 0xc
cmp [ esi ] ax
sbb eax eax
inc eax
mov [ ebp - 0x30 ] eax
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov eax 0xffffffe6
jmp r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
jne r-xdata
cmp [ edi ] 0x71
je r-xdata
mov esi [ ebx + 0x1c ]
lea edx [ esi + esi ]
lea eax [ ecx + edx ]
cmp [ ebp - 0x8 ] eax
jb r-xdata
cmp eax ecx
jbe r-xdata
add eax 0x2
cmp eax [ ebx + 0x7c ]
jb r-xdata
cmp edx 0x1
je r-xdata
mov eax 0xfffffff4
jmp r-xdata
add edi 0x2
mov [ ebp - 0x38 ] edi
jmp r-xdata
cmp edx 0x1
je r-xdata
jmp r-xdata
xor ecx ecx
cmp eax [ ebx + 0x88 ]
jbe r-xdata
movzx eax [ eax ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx ecx [ eax ]
cmp ecx 0x5f
je r-xdata
mov edx 0xff
cmp cx dx
ja r-xdata
cmp ecx 0x5f
jne r-xdata
cmp [ ebx + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax + 0x2 ]
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
movzx ecx [ edx ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov [ ebx + 0x88 ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x2 ]
cmp ax [ ebx + 0x36 ]
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0x3000
je r-xdata
je r-xdata
cmp ecx 0xa0
ja r-xdata
cmp ecx 0x3000
jne r-xdata
je r-xdata
cmp ecx 0xa0
ja r-xdata
cmp ecx 0x2029
jbe r-xdata
cmp ecx 0xa
jb r-xdata
jmp r-xdata
lea eax [ ecx - 0xa ]
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
jmp r-xdata
test esi esi
je r-xdata
mov edx 0x7fffffff
mov [ ebp - 0x18 ] edx
jmp r-xdata
add edi 0x6
mov [ ebp - 0x38 ] edi
mov edx 0x7fffffff
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x40 ] esi
cmp edx eax
jge r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov edx [ ebp - 0x28 ]
push ecx
mov ecx esi
call sub_471abf
add esp 0x4
test eax eax
je r-xdata
mov eax esi
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] 0x1
cmp ecx 0x1
jge r-xdata
mov esi [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
cmp esi 0x2e
jb r-xdata
lea edx [ eax + eax ]
add edi edx
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] edi
cmp eax 0x1
jle r-xdata
cmp ecx 0xff
ja r-xdata
cmp esi 0x1f
jne r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x1c ] 0x1
jl r-xdata
mov esi [ ebp - 0x1c ]
cmp esi 0x1
jl r-xdata
cmp esi 0xff
ja r-xdata
cmp esi 0x7f
jbe r-xdata
test ecx ecx
js r-xdata
mov esi [ ebp - 0x8 ]
movzx ebx [ edi + 0x2 ]
movzx ecx [ edi ]
add edi 0x4
mov [ ebp - 0x40 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x38 ] edi
jmp r-xdata
cmp [ eax ] 0x71
jne r-xdata
movzx eax [ edi ]
cmp eax 0x7b
je r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x94 ] eax
jmp r-xdata
jmp r-xdata
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov eax [ ebx + 0x94 ]
and eax 0xffff0000
or eax ecx
mov [ ebx + 0x94 ] eax
cmp edx [ ebx + 0x14 ]
jge r-xdata
mov edx 0x84
cmp ax dx
je r-xdata
mov ecx [ ebx + 0x98 ]
mov eax [ ebx + 0x78 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
mov [ ebp - 0x2c ] eax
movsx eax [ ecx + r--data ]
movsx ecx [ ecx + r--data ]
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x18 ] ecx
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x18 ] 0x7fffffff
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
test ecx ecx
mov ecx [ ebp - 0x8 ]
push ebx
push [ ebp + 0xc ]
mov edx edi
push [ ebp + 0x8 ]
je r-xdata
mov [ ebp - 0x40 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
shr [ ebp - 0x10 ] 0x3
mov ebx [ ebp - 0x10 ]
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x1c ]
test [ ebx + ecx ] al
mov ebx [ ebp + 0x10 ]
je r-xdata
cmp esi 0x6a
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x30 ] ecx
jmp r-xdata
cmp ecx 0xff
ja r-xdata
cmp eax esi
jb r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
add edi 0x4
jmp r-xdata
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x38 ] edi
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x30 ] ecx
mov eax [ ebx + 0x3c ]
movzx eax [ eax + esi ]
cmp eax ecx
jne r-xdata
mov eax [ ebx + 0x3c ]
movzx ecx [ eax + ecx ]
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
cmp ecx 0xa
je r-xdata
cmp eax edx
jae r-xdata
mov eax 0xfffffff2
jmp r-xdata
jmp [ ecx * 4 + jump_table_48c2a3 ]
cmp esi 0x10
je r-xdata
lea ecx [ ecx ]
cmp edx [ ebx + 0x88 ]
jmp r-xdata
test esi esi
jle r-xdata
cmp [ edi ] 0x71
je r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x94 ] eax
movzx eax [ edi + 0x2 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0x28 ]
mov [ ebx + 0xb0 ] eax
cmp [ edi ] 0x71
je r-xdata
test ecx ecx
jne r-xdata
movzx eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
cmp [ ebx + 0x80 ] eax
jae r-xdata
mov eax [ ebx + 0x94 ]
mov [ ebp - 0x30 ] eax
add [ ebp - 0x8 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
cmp [ edi ] 0x74
push eax
push [ ebp + 0x14 ]
push ebx
push edx
push ecx
mov ecx [ ebp - 0x8 ]
jne r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
movzx eax [ edi ]
cmp eax 0x7c
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
cmp ecx 0x8a
jne r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
cmp ecx 0x88
jne r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax + edx * 4 ] 0x0
jge r-xdata
cmp ecx 0x8b
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebx + 0x90 ]
add edi 0x4
mov [ ebp - 0x38 ] edi
mov [ ebp + 0xc ] eax
jmp r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
cmp [ edi ] 0x71
je r-xdata
test esi esi
jne r-xdata
cmp [ eax ] 0x71
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ esi ]
push ebx
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
lea edx [ esi + eax * 2 ]
push [ ebp + 0x8 ]
call sub_409460
mov ecx [ ebp - 0x4c ]
add esp 0x14
shl ecx 0x2
push ecx
push [ ebp - 0x50 ]
mov [ ebp - 0xc ] eax
push [ ebx + 0xc ]
call sub_41faa0
mov eax [ ebp - 0x48 ]
mov [ ebx + 0x94 ] eax
mov eax [ ebp - 0x58 ]
mov [ ebx + 0xa8 ] eax
mov eax [ ebp - 0xc ]
add esp 0xc
cmp eax 0x1
je r-xdata
mov [ ebx + 0x9c ] 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x94 ] eax
jmp r-xdata
cmp [ eax ] 0x71
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx edx
mov ax [ ecx ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
push [ ebp - 0x20 ]
lea eax [ ebx + 0x1c ]
push eax
push ecx
mov ecx [ ebp - 0x8 ]
call sub_471953
add esp 0xc
test eax eax
je r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x2 ]
cmp ax [ ebx + 0x36 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x2 ]
cmp ax [ ebx + 0x36 ]
jne r-xdata
cmp ecx esi
je r-xdata
cmp ecx esi
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
mov ecx eax
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov ecx 0x1
jmp r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
lea esi [ ecx - 0x5e ]
jmp r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x5f
je r-xdata
cmp [ ebx + 0x58 ] 0x0
je r-xdata
movzx eax [ edx + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
cmp [ ebx + 0x1c ] 0x2
jne r-xdata
jmp r-xdata
cmp ecx 0x2000
jb r-xdata
cmp ecx 0x1680
je r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0x2000
jb r-xdata
cmp ecx 0x1680
jne r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0xd
jbe r-xdata
jmp r-xdata
cmp eax [ ebx + 0x7c ]
jb r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
jns r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x18 ] eax
jge r-xdata
mov esi [ ebp - 0x30 ]
mov edx [ ebp - 0x18 ]
inc esi
mov [ ebp - 0x30 ] esi
cmp esi edx
jle r-xdata
mov eax [ ebp - 0x8 ]
and esi 0x3ff
movzx eax [ eax ]
shl esi 0xa
and eax 0x3ff
or esi eax
add esi 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov esi [ ebp - 0x8 ]
jmp r-xdata
cmp esi 0xff
ja r-xdata
cmp esi 0x7f
jbe r-xdata
mov [ ebp - 0x18 ] 0x0
mov esi [ ebp - 0x18 ]
mov eax esi
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax esi
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebx + 0x40 ]
movzx ecx [ eax + ecx ]
cmp edx 0x7f
jbe r-xdata
cmp edx ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebx + 0x40 ]
movzx esi [ eax + esi ]
mov eax [ ebp - 0x2c ]
mov eax esi
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax esi
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
cmp [ ebp - 0x34 ] 0x16
mov ecx [ ebp - 0x20 ]
jne r-xdata
cmp ecx 0xa
ja r-xdata
test eax eax
mov eax [ ebp - 0x30 ]
je r-xdata
jmp r-xdata
mov eax [ ebx + 0xb8 ]
sub eax edi
neg eax
sbb eax eax
and edx eax
cmp eax 0x71
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x80 ] eax
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x10 ]
or eax 0x10000
mov [ ebx + 0x94 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp edx ecx
jg r-xdata
mov edx 0x80
cmp ax dx
je r-xdata
jmp r-xdata
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ebp - 0x34 ] ecx
jge r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x34 ]
jmp r-xdata
cmp esi 0x6a
je r-xdata
mov ebx [ ebp - 0x1c ]
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x30 ]
shr ecx 0x3
test [ ecx + ebx ] al
mov ebx [ ebp + 0x10 ]
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x30 ]
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ edx * 4 + r--data ] eax
jne r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ ebx + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
mov esi 0x2
jmp r-xdata
mov eax esi
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax esi
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
add edi 0x2
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov eax 0xfffffff4
jmp r-xdata
jmp r-xdata
jbe r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
cmp esi 0xf
je r-xdata
mov al [ eax * 8 + r--data ]
cmp al 0x9
je r-xdata
movzx ecx [ eax * 8 + r--data ]
movzx eax [ edi + 0x4 ]
xor edx edx
cmp eax [ ecx * 4 + r--data ]
setne dl
xor eax eax
cmp esi 0x10
sete al
cmp edx eax
je r-xdata
movzx eax [ eax * 8 + r--data ]
jmp r-xdata
movzx eax [ eax * 8 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
cmp edx 0x24
je r-xdata
jmp r-xdata
cmp esi 0x10
jne r-xdata
mov ecx [ eax ]
cmp edx ecx
jae r-xdata
jmp r-xdata
xor edx edx
cmp [ eax ] 0x71
jne r-xdata
cmp esi 0x82
jae r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x94 ] eax
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
cmp [ edi ] 0x71
je r-xdata
mov edx [ ebp - 0xc ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
lea edx [ edi + 0x4 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov [ ebx + 0x9c ] 0x2
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
lea edx [ edi + 0x4 ]
push ebx
push ecx
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_409460
add esp 0x14
jmp r-xdata
add edi 0x4
jmp r-xdata
movzx ecx [ edi + 0x2 ]
jmp r-xdata
mov ecx [ ebx + 0x30 ]
xor edx edx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x10 ] edx
cmp [ ebx + 0x20 ] eax
jle r-xdata
mov ecx [ ebx + 0x30 ]
sar edx 0x1
mov [ ebp - 0xc ] edx
xor edx edx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x10 ] edx
cmp [ ebx + 0x20 ] eax
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x9c ] 0x1
mov eax [ ebp + 0x18 ]
inc eax
push eax
push 0x0
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
cmp eax 0x1
je r-xdata
movzx eax [ edi + 0x2 ]
lea edi [ edi + eax * 2 ]
jmp r-xdata
jmp r-xdata
cmp [ eax ] 0x71
jne r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
cmp eax [ ebx + 0x88 ]
jae r-xdata
mov eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x14c ]
cmp eax ecx
je r-xdata
cmp eax 0xfffffc19
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
jmp r-xdata
cmp esi 0x1
je r-xdata
jmp r-xdata
cmp [ ebx + 0x1c ] 0x2
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ax [ edi ]
add edi 0x2
mov [ ebp - 0x38 ] edi
cmp ax 0x5
jne r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov esi 0x1
jmp r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
js r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x5f
jne r-xdata
mov ax [ eax ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x30 ] 0x1
cmp ecx 0x1
jl r-xdata
test ecx ecx
je r-xdata
mov eax esi
sub esi 0x2
cmp eax [ ebp - 0x40 ]
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx edx [ esi ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x30 ] edx
test ecx ecx
je r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
mov esi [ ebp - 0x8 ]
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp [ ebp - 0x18 ] eax
jne r-xdata
cmp ecx [ ebp - 0x34 ]
je r-xdata
mov [ ebp - 0x14 ] esi
mov eax [ ebx + 0x40 ]
movzx esi [ eax + esi ]
mov eax [ ebp - 0x2c ]
mov eax esi
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax esi
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov ecx [ ebp - 0x34 ]
cmp esi ecx
je r-xdata
mov eax [ ebx + 0x7c ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
cmp ecx eax
ja r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov ecx [ eax * 8 + r--data ]
add ecx esi
cmp ecx esi
je r-xdata
dec eax
or eax 0xffffff80
inc eax
cmp edx 0xff
ja r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
jmp r-xdata
test eax eax
jne r-xdata
movzx eax [ eax ]
mov esi [ ebp - 0x8 ]
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp [ ebp - 0x34 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov eax ecx
and eax 0xfc00
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x20 ]
cmp eax 0xd800
jne r-xdata
cmp [ ebp - 0x1c ] 0x1
jl r-xdata
mov esi [ ebp - 0x1c ]
cmp esi 0x1
jl r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov ecx [ ebp - 0x20 ]
mov eax [ eax * 8 + r--data ]
add eax esi
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
dec eax
or eax 0xffffff80
inc eax
test ecx ecx
je r-xdata
cmp esi 0x1
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0x1
jl r-xdata
jmp [ ecx * 4 + jump_table_48c2ef ]
mov [ ebp - 0x2c ] esi
test eax eax
js r-xdata
test eax eax
jns r-xdata
movzx eax [ edi + 0x2 ]
neg eax
lea edi [ edi + eax * 2 ]
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
lea ecx [ eax + ecx * 4 ]
mov [ ebp - 0x30 ] ecx
lea ecx [ eax + edx * 4 ]
mov eax [ ebp - 0x30 ]
cmp eax ecx
jae r-xdata
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
sub eax [ ebp - 0xc ]
mov eax [ ecx + eax * 4 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebx + 0x78 ]
mov eax [ ebx + 0xc ]
sar ecx 0x1
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
cmp [ ebp + 0xc ] edx
jg r-xdata
mov edx 0x85
cmp ax dx
je r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov esi [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp + 0x18 ]
mov esi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov [ ebp - 0xc ] 0x1
cmp eax [ ebx + 0x7c ]
jae r-xdata
cmp eax [ ebx + 0x7c ]
jae r-xdata
jmp r-xdata
inc [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] ecx
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebx + 0x7c ]
inc eax
mov [ ebp - 0x28 ] eax
cmp eax [ ebp - 0x34 ]
jle r-xdata
lea ebx [ ebx + esi * 2 ]
mov esi [ ebp - 0x28 ]
mov [ ebp - 0x30 ] ecx
cmp ebx esi
jb r-xdata
mov esi [ ebp - 0x28 ]
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax esi
cmp [ ebp - 0x30 ] eax
je r-xdata
dec eax
or eax 0xffffff80
inc eax
cmp ecx 0xc
ja r-xdata
cmp eax [ ebx + 0x88 ]
jbe r-xdata
add eax 0x2
add edi 0x2
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x38 ] edi
jmp r-xdata
jmp r-xdata
mov ecx 0x1
jmp r-xdata
cmp al 0x5
je r-xdata
jmp r-xdata
xor ecx ecx
cmp [ edi + 0x4 ] ax
setne cl
xor eax eax
cmp esi 0x10
sete al
cmp ecx eax
je r-xdata
jmp r-xdata
cmp eax 0x3
je r-xdata
cmp edx 0x9
je r-xdata
cmp edx 0x9
je r-xdata
cmp eax 0x3
je r-xdata
cmp edx 0x40
je r-xdata
add edi 0x6
mov [ ebp - 0x38 ] edi
jmp r-xdata
lea eax [ eax + 0x4 ]
cmp edx ecx
je r-xdata
jmp r-xdata
mov cx [ edi ]
mov ax [ edx ]
add edx 0x2
add edi 0x2
dec esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x38 ] edi
cmp cx ax
jne r-xdata
mov edx [ ebp - 0x8 ]
sub edx [ ebx + 0x78 ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebp - 0x18 ]
mov eax [ ebx + 0xc ]
sar edx 0x1
mov [ eax + ecx * 4 ] edx
cmp esi 0x82
jb r-xdata
mov eax [ ebp - 0x34 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x71
jne r-xdata
add edi 0x4
jmp r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x38 ] edi
lea edi [ edi + ecx * 2 ]
test eax eax
jne r-xdata
cmp edx [ ebx + 0x20 ]
jge r-xdata
movzx eax [ ecx ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp edx [ ebx + 0x20 ]
jge r-xdata
movzx eax [ ecx ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebx + 0x90 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jle r-xdata
test eax eax
je r-xdata
cmp [ edi ] 0x72
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x84 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x80 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
push eax
call [ rw-data ]
add esp 0x4
cmp eax 0xfffffc1c
jl r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov ax [ ecx + 0x2 ]
cmp ax [ ebx + 0x36 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
cmp eax 0x3
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esi 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ ecx - 0x5e ]
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
cmp ecx 0x202f
je r-xdata
cmp ecx 0x20
je r-xdata
cmp ecx 0x202f
jne r-xdata
cmp ecx 0x20
jne r-xdata
cmp ecx edx
je r-xdata
push [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
push ebx
push esi
mov edx eax
call sub_4716b8
mov ecx eax
add esp 0xc
test ecx ecx
js r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp esi [ ebx + 0x88 ]
jbe r-xdata
movzx eax [ esi ]
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx edx [ esi ]
mov ecx [ ebp - 0x20 ]
add esi 0x2
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax ecx
jle r-xdata
test eax eax
jne r-xdata
cmp ecx [ ebp - 0x34 ]
je r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov edx [ ebp - 0x24 ]
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax esi
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
dec eax
or eax 0xffffff80
inc eax
mov eax [ ebp - 0x2c ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
test edx edx
jle r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
push eax
push [ ebp - 0x28 ]
push ecx
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x24 ]
lea edx [ ebp - 0x6c ]
call sub_471a0c
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax edx
mov eax [ ebx + 0x40 ]
movzx eax [ eax + edx ]
jmp r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov ecx [ ebp - 0x30 ]
mov eax [ eax * 8 + r--data ]
add eax edx
jmp r-xdata
dec eax
or eax 0xffffff80
inc eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
test ecx ecx
push ebx
push [ ebp + 0xc ]
mov edx edi
push [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov esi eax
mov [ ebp - 0x18 ] esi
test ecx ecx
je r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x1c ]
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
and [ ebp - 0x10 ] 0x3ff
movzx eax [ eax ]
shl [ ebp - 0x10 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x10 ]
add eax 0x10000
add [ ebp - 0x8 ] 0x2
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x34 ]
add edx 0xfffffffa
cmp edx 0xf
ja r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0xfffffffa
cmp ecx 0xf
ja r-xdata
mov edx [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] edx
mov edx [ ebp - 0x24 ]
je r-xdata
mov eax [ ebx + 0x7c ]
mov [ ebp - 0x28 ] eax
cmp esi eax
jae r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] 0x1
cmp esi 0x1
jl r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi 0x1
jl r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi 0x1
jl r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi 0x1
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] 0x1
cmp esi 0x1
jl r-xdata
cmp esi 0x1
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x28 ] 0x1
jl r-xdata
cmp esi 0x1
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x28 ] 0x1
jl r-xdata
cmp esi 0x1
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x28 ] 0x1
jl r-xdata
mov ecx [ ebp - 0x20 ]
cmp esi 0x1
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x28 ] 0x1
jl r-xdata
mov ecx [ ebp - 0x20 ]
cmp esi 0x1
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x28 ] 0x1
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp eax 0x16
jne r-xdata
cmp eax 0xa
ja r-xdata
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0x18 ]
inc eax
cmp [ ebp - 0x34 ] 0x16
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax ecx
je r-xdata
cmp [ esi ] 0x7b
je r-xdata
mov edi [ ebp - 0x30 ]
sub ecx eax
dec ecx
shr ecx 0x2
inc ecx
or eax 0xffffffff
[ edi ]
mov edi [ ebp - 0x38 ]
jmp r-xdata
add edx 0x2
mov [ ebp + 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebx + 0x7c ]
jae r-xdata
sub esi 0x2
cmp esi [ ebp - 0x40 ]
jae r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx ecx [ eax ]
mov [ ebp - 0x28 ] ecx
cmp ecx 0xff
jbe r-xdata
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov eax ecx
and eax 0xfc00
mov [ ebp - 0x10 ] ecx
cmp eax 0xd800
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x8 ]
movzx ecx [ ebx ]
mov esi 0x1
test edi edi
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
xor eax eax
cmp esi 0xf
sete al
cmp ecx eax
je r-xdata
cmp al 0x8
je r-xdata
xor ecx ecx
jmp r-xdata
cmp edx 0xa
jmp r-xdata
cmp edx 0xa
je r-xdata
jmp r-xdata
cmp edx 0x60
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x38 ]
mov [ ecx + eax ] edx
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x2c ]
mov [ ecx + eax + 0x4 ] edx
mov ecx [ ebx + 0x10 ]
sub ecx [ ebp - 0x18 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ eax + ecx * 4 ] edx
mov eax [ ebp - 0x34 ]
jmp r-xdata
mov [ ebp - 0x38 ] ecx
cmp ecx [ ebx + 0x30 ]
jbe r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x34 ] ecx
mov eax [ ebx + 0x24 ]
inc edx
lea ecx [ ecx + eax * 2 ]
cmp edx [ ebx + 0x20 ]
jl r-xdata
mov [ ebp - 0x38 ] ecx
cmp ecx [ ebx + 0x30 ]
jbe r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x34 ] ecx
mov eax [ ebx + 0x24 ]
inc edx
lea ecx [ ecx + eax * 2 ]
cmp edx [ ebx + 0x20 ]
jl r-xdata
movzx eax [ edi + 0x6 ]
lea edi [ edi + eax * 2 ]
add edi 0x4
cmp [ edi ] 0x71
jne r-xdata
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ ebp - 0x10 ]
lea edi [ edi + eax * 2 ]
jmp r-xdata
cmp eax 0xfffffc20
jne r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffc20
jle r-xdata
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
lea ecx [ eax - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi 0x1
jmp r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
cmp eax [ ebx + 0x7c ]
jae r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x30 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ ebp - 0x10 ]
inc edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x30 ] edx
cmp edx ecx
jle r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
inc edx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x18 ] edx
cmp edx [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0x30 ]
jmp r-xdata
movzx eax [ esi + 0x2 ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or eax edx
add eax 0x10000
mov [ ebp - 0xc ] 0x2
jmp r-xdata
cmp esi [ ebx + 0x88 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esi eax
mov [ ebp - 0x10 ] esi
cmp ecx [ ebp - 0x34 ]
jge r-xdata
test eax eax
jne r-xdata
movzx edx [ esi ]
cmp [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
je r-xdata
mov ecx [ ebp - 0x1c ]
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0x1
cmp ecx 0x1
jl r-xdata
mov eax [ ebp + 0x18 ]
mov esi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x30 ] eax
cmp esi ecx
jge r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
lea eax [ edx + edx ]
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0x7c ]
sub eax [ ebp - 0x30 ]
cmp ecx eax
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov [ ebp - 0xc ] 0x1
cmp esi 0x1
jl r-xdata
cmp eax ecx
jne r-xdata
cmp edx ecx
je r-xdata
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov esi [ ebp - 0x1c ]
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax esi
jle r-xdata
cmp [ ebp - 0x34 ] eax
je r-xdata
test eax eax
jne r-xdata
movzx ecx [ esi ]
cmp [ ebp - 0x34 ] ecx
je r-xdata
movzx edx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov eax edx
and eax 0xfc00
mov [ ebp - 0x18 ] edx
cmp eax 0xd800
jne r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0xfffffffa
jmp [ ecx * 4 + r-xdata ]
mov ecx [ ebp - 0x34 ]
add ecx 0xfffffffa
jmp [ ecx * 4 + sub_48c31b ]
movzx edx [ esi ]
add esi 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
cmp esi 0x1
mov esi [ ebp - 0x8 ]
mov [ ebp - 0xc ] 0x1
jl r-xdata
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0x20 ]
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
add eax 0xfffffffa
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
jmp [ eax * 4 + jump_table_48c39b ]
jmp [ eax * 4 + jump_table_48c447 ]
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
test ecx ecx
mov ecx esi
je r-xdata
movzx ecx [ edi ]
cmp ecx 0x75
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
push ebx
push edx
push [ ebp + 0x8 ]
lea edx [ edi + 0x4 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
cmp [ edi ] 0x72
jne r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x8 ] eax
cmp ecx 0xff
jbe r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx eax [ ecx ]
mov [ ebp - 0x10 ] eax
add ecx 0x2
and eax 0xfc00
mov [ ebp - 0x8 ] ecx
cmp eax 0xd800
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
cmp eax [ ebp - 0x40 ]
jb r-xdata
cmp eax [ ebx + 0x88 ]
jbe r-xdata
shr [ ebp - 0x28 ] 0x3
mov ebx [ ebp - 0x28 ]
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x1c ]
test [ ebx + ecx ] al
mov ebx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
je r-xdata
cmp esi 0x6a
jne r-xdata
mov eax esi
sub esi 0x2
cmp eax [ ebp - 0x40 ]
je r-xdata
cmp eax [ ebx + 0x88 ]
jbe r-xdata
movzx eax [ edx + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] 0x2
jmp r-xdata
cmp ecx 0xff
ja r-xdata
mov edi [ ebp - 0x38 ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
xor ecx ecx
jmp r-xdata
je r-xdata
jmp r-xdata
cmp edx 0x5f
cmp edx 0xa0
jb r-xdata
test eax eax
je r-xdata
inc edx
mov [ ebp - 0x10 ] edx
cmp edx [ ebx + 0x20 ]
jge r-xdata
mov eax [ ebx + 0x24 ]
add eax eax
add ecx 0x2
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
inc edx
mov [ ebp - 0x10 ] edx
cmp edx [ ebx + 0x20 ]
jge r-xdata
mov eax [ ebx + 0x24 ]
add eax eax
add ecx 0x2
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
cmp esi 0x86
je r-xdata
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x71
lea edi [ edi + eax * 2 ]
je r-xdata
mov ecx [ ebp - 0x50 ]
lea edx [ ebp - 0x14c ]
cmp ecx edx
je r-xdata
lea eax [ ebp - 0x58 ]
mov [ ebx + 0xa8 ] eax
movzx eax [ esi + 0x2 ]
cmp [ esi + eax * 2 ] 0x71
lea esi [ esi + eax * 2 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esi 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov [ ebp - 0xc ] eax
cmp ecx edx
jl r-xdata
mov eax [ ebp + 0x18 ]
mov esi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
jmp r-xdata
sub esi 0x2
jmp r-xdata
mov edx [ ebp - 0x28 ]
push ecx
mov ecx eax
call sub_471abf
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
inc [ ebp - 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
movzx eax [ esi ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or eax edx
add eax 0x10000
add esi 0x2
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x34 ]
jge r-xdata
test edx edx
jne r-xdata
mov esi [ ebp - 0x18 ]
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esi eax
mov [ ebp - 0x10 ] esi
cmp ecx [ ebp - 0x34 ]
jge r-xdata
inc [ ebp - 0x10 ]
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp [ ebp - 0x10 ] ecx
jle r-xdata
movzx ebx [ esi ]
cmp [ ebp - 0x14 ] ebx
mov ebx [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + ecx ]
mov [ ebp - 0xc ] edx
test edx edx
jne r-xdata
mov eax [ ebx + 0x7c ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
cmp ecx eax
ja r-xdata
cmp ecx [ ebx + 0x7c ]
jb r-xdata
lea eax [ edx + edx ]
push eax
lea eax [ ebp - 0x6c ]
push eax
push ecx
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax esi
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
test edx edx
jne r-xdata
mov esi [ ebp - 0x34 ]
test edx edx
jne r-xdata
mov [ ebp - 0xc ] 0x1
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov edx [ ebp - 0x14 ]
cmp [ ebp - 0x1c ] edx
mov edx [ ebp - 0x24 ]
je r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
test ecx ecx
push ebx
push [ ebp + 0xc ]
mov edx edi
push [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov esi eax
mov [ ebp - 0x18 ] esi
test ecx ecx
je r-xdata
movzx edx [ esi ]
cmp [ ebp - 0x10 ] edx
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
and [ ebp - 0x18 ] 0x3ff
movzx eax [ eax ]
shl [ ebp - 0x18 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x18 ]
add eax 0x10000
add [ ebp - 0x8 ] 0x2
jmp r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
movzx edx [ eax ]
add eax 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx edx [ eax ]
add eax 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov esi eax
test ecx ecx
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] esi
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] esi
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] esi
je r-xdata
movzx edx [ esi ]
add esi 0x2
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
movzx edx [ esi ]
add esi 0x2
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
cmp eax 0xf
ja r-xdata
cmp eax 0xf
ja r-xdata
test edx edx
jne r-xdata
mov eax [ ebx + 0x7c ]
mov [ ebp - 0x30 ] eax
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x90 ] edx
mov eax 0xfffffc1a
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
push ebx
push edx
push [ ebp + 0x8 ]
cmp ecx 0x74
jne r-xdata
mov [ ebx + 0xb8 ] esi
mov eax 0xfffffc1b
jmp r-xdata
shr [ ebp - 0x28 ] 0x3
mov ebx [ ebp - 0x28 ]
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x1c ]
test [ ebx + ecx ] al
mov ebx [ ebp + 0x10 ]
je r-xdata
cmp esi 0x6a
je r-xdata
cmp ecx [ ebx + 0x88 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
movzx eax [ ecx ]
mov ebx [ ebp - 0x10 ]
and ebx 0x3ff
and eax 0x3ff
shl ebx 0xa
or eax ebx
mov ebx [ ebp + 0x10 ]
add eax 0x10000
add ecx 0x2
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
add eax 0x2
inc edx
mov [ ebp - 0x8 ] eax
cmp edx [ ebp - 0x18 ]
jl r-xdata
jmp r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
cmp esi 0x6a
je r-xdata
shr [ ebp - 0x10 ] 0x3
mov ebx [ ebp - 0x10 ]
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x1c ]
test [ ebx + ecx ] al
mov ebx [ ebp + 0x10 ]
jne r-xdata
cmp edx 0xc
je r-xdata
cmp edx 0xb
jmp r-xdata
cmp edx 0xe000
jae r-xdata
cmp edx 0xd7ff
jbe r-xdata
add edi 0x4
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov eax [ ebx + 0x24 ]
add eax eax
lea edx [ ecx + 0x2 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x38 ]
movzx eax [ ecx ]
cmp eax [ ebp - 0x30 ]
je r-xdata
mov eax [ ebx + 0x24 ]
add eax eax
lea edx [ ecx + 0x2 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x38 ]
movzx edx [ ecx ]
add edx edx
cmp edx [ ebp + 0xc ]
jge r-xdata
jmp r-xdata
push ecx
call [ rw-data ]
mov eax [ ebp - 0xc ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebx + 0xa8 ] eax
mov eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x14c ]
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x30 ]
jmp r-xdata
push [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
push ebx
push esi
mov edx eax
call sub_4716b8
add esp 0xc
test eax eax
js r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x10 ] eax
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
push ecx
mov ecx eax
call sub_471abf
add esp 0x4
test eax eax
je r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp eax esi
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx eax [ eax ]
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x34 ]
jge r-xdata
test edx edx
jne r-xdata
mov esi [ ebp - 0x18 ]
mov eax [ ebx + 0x7c ]
sub eax edx
cmp esi eax
ja r-xdata
cmp eax [ ebp - 0x30 ]
je r-xdata
mov edx [ ebp - 0x18 ]
test edx edx
jle r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
push eax
push [ ebp - 0x28 ]
push ecx
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp eax esi
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx eax [ eax ]
cmp esi eax
je r-xdata
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx eax [ eax ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov esi [ ebp - 0x1c ]
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
add esi 0x2
cmp ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] esi
jle r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
cmp [ ebp - 0x34 ] eax
je r-xdata
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx edx [ eax * 8 + r--data ]
mov eax [ ebx + 0x7c ]
mov [ ebp - 0xc ] edx
cmp esi eax
jae r-xdata
dec edx
or edx 0xffffff80
inc edx
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add esi 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] esi
movzx edx [ esi ]
add esi 0x2
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov ebx [ ebp - 0x40 ]
lea ebx [ ebx * 4 + r--data ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebx ]
cmp [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov ebx [ ebp + 0x10 ]
jb r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp [ ebp - 0x18 ] 0x24
je r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
jmp [ eax * 4 + jump_table_48c407 ]
jmp [ eax * 4 + jump_table_48c3c7 ]
cmp esi [ ebp - 0x2c ]
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx edx [ esi ]
add esi 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov esi [ ebx + 0x7c ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0x8 ]
mov edx [ ebx + 0x7c ]
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebx + 0x7c ]
mov [ ebp - 0x30 ] eax
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov edx esi
mov esi [ ebp - 0x8 ]
mov ecx esi
call sub_409460
add esp 0x14
cmp eax 0xfffffc1b
jne r-xdata
mov esi [ ebp - 0x8 ]
lea edx [ edi + 0x4 ]
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc edx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x34 ] edx
push [ ebp + 0x8 ]
mov edx edi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
shr [ ebp - 0x10 ] 0x3
mov edx [ ebp - 0x10 ]
mov ecx eax
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x1c ]
test [ edx + ecx ] al
mov edx [ ebp - 0x34 ]
je r-xdata
cmp esi 0x6a
je r-xdata
cmp eax 0xff
jbe r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
sub esi 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
lea edx [ edx + eax * 2 ]
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x34 ] eax
cmp eax [ ebp - 0x18 ]
jge r-xdata
cmp edx 0xd
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x34 ]
movzx eax [ ecx ]
cmp eax [ ebp - 0x30 ]
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
cmp ecx [ ebx + 0x30 ]
jbe r-xdata
mov ecx [ ebp - 0x34 ]
movzx edx [ ecx ]
add edx edx
cmp edx [ ebp + 0xc ]
jge r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
cmp ecx [ ebx + 0x30 ]
jbe r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax + edx * 4 ] 0x0
jge r-xdata
push eax
call [ rw-data ]
add esp 0x4
jmp r-xdata
test eax eax
je r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax * 2 ]
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
push ebx
push [ ebp - 0x2c ]
mov edx esi
call sub_4716b8
add esp 0xc
test eax eax
js r-xdata
movzx eax [ esi ]
add esi 0x2
cmp [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ ebx + 0x50 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx ]
cmp eax [ ebx + 0x4 ]
jb r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
cmp eax [ ebx + 0x88 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x2
mov eax [ ebp - 0x8 ]
inc ecx
cmp ecx [ ebp - 0x34 ]
jl r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp eax esi
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx edx [ eax ]
cmp esi edx
mov edx [ ebp - 0x24 ]
je r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
jle r-xdata
lea eax [ ecx + ecx ]
push eax
push [ ebp - 0x28 ]
push esi
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x8 ]
cmp [ ebx + 0x8c ] 0x0
mov eax [ ebp - 0x8 ]
je r-xdata
lea eax [ edx + edx ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x7c ]
sub eax [ ebp - 0xc ]
cmp ecx eax
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
jmp r-xdata
cmp ecx [ ebx + 0x88 ]
movzx eax [ esi ]
add esi 0x2
cmp [ ebp - 0x34 ] eax
je r-xdata
movzx edx [ esi ]
mov eax edx
and eax 0xfc00
add esi 0x2
cmp eax 0xd800
jne r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ ebp - 0x18 ]
cmp eax [ ebx + 0x88 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x2
mov eax [ ebp - 0x8 ]
inc ecx
cmp ecx [ ebp - 0x14 ]
jl r-xdata
mov esi [ ebp - 0x8 ]
cmp eax [ ebx + 0x88 ]
jbe r-xdata
mov eax [ ebp - 0x10 ]
movzx eax [ ecx + 0x2 ]
and [ ebp - 0x10 ] 0x3ff
shl [ ebp - 0x10 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x2
add eax 0x10000
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
test edx edx
jne r-xdata
mov esi [ ebp - 0x34 ]
test edx edx
jne r-xdata
mov [ ebp - 0xc ] 0x1
cmp eax [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax esi
jle r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov ebx [ ebp - 0x20 ]
mov edi edx
mov ebx [ ebp - 0xc ]
inc ebx
cmp ebx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp + 0x10 ]
jle r-xdata
and [ ebp - 0x10 ] 0xfc00
cmp [ ebp - 0x10 ] 0xd800
jne r-xdata
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax 0x9
je r-xdata
dec edx
or edx 0xffffff80
inc edx
mov eax [ ebp - 0x8 ]
and edx 0x3ff
movzx eax [ eax ]
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x40 ]
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] edx
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x40 ]
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x40 ]
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
movzx eax [ eax ]
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec edx
or edx 0xffffff80
inc edx
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add esi 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] esi
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi 0x2
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] esi
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi 0x2
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] esi
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi 0x2
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] esi
cmp [ ebp - 0x3c ] 0x0
mov esi [ ebp - 0x8 ]
je r-xdata
mov edx [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x18 ] edx
je r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ esi ]
and [ ebp - 0x18 ] 0x3ff
shl [ ebp - 0x18 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x18 ]
add eax 0x10000
add esi 0x2
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] 0x1
cmp [ ebp - 0x18 ] 0x40
je r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ esi ]
and [ ebp - 0x18 ] 0x3ff
shl [ ebp - 0x18 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x18 ]
add eax 0x10000
add esi 0x2
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] esi
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebx + 0x7c ]
mov [ ebp - 0x1c ] eax
mov eax ecx
sub eax esi
sar eax 0x1
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x7fffffff
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x7fffffff
jge r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebx + 0x7c ]
mov [ ebp - 0x1c ] eax
mov eax ecx
sub eax esi
sar eax 0x1
cmp [ ebp - 0x1c ] eax
ja r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov edx [ ebp - 0x24 ]
cmp esi [ ebx + 0x88 ]
jbe r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp esi [ ebp - 0x2c ]
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
test ecx ecx
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx edx [ esi ]
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
movzx eax [ esi ]
mov [ ebp - 0x30 ] eax
test ecx ecx
je r-xdata
movzx eax [ esi ]
mov [ ebp - 0x30 ] eax
test ecx ecx
je r-xdata
movzx eax [ esi ]
mov [ ebp - 0x30 ] eax
test ecx ecx
je r-xdata
movzx edx [ esi ]
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
movzx edx [ esi ]
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
movzx edx [ esi ]
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
movzx edx [ esi ]
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
movzx edx [ esi ]
mov [ ebp - 0x18 ] edx
test ecx ecx
je r-xdata
movzx edx [ esi ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
test ecx ecx
je r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
movzx edx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] edx
je r-xdata
mov edx [ ebx + 0x7c ]
cmp esi edx
jae r-xdata
mov edx [ ebx + 0x7c ]
cmp esi edx
jae r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ebx + 0xb8 ] ecx
jne r-xdata
mov edi [ ebp - 0x18 ]
movzx eax [ edi ]
cmp eax 0x7b
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
mov eax edx
jmp r-xdata
je r-xdata
mov edx [ ebp - 0x10 ]
inc edx
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] edx
cmp edx [ ebx + 0x20 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
inc edx
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] edx
cmp edx [ ebx + 0x20 ]
jge r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax + edx * 4 ] 0x0
jge r-xdata
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x30 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
neg eax
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp edx [ ebp - 0xc ]
jae r-xdata
cmp eax 0xfffffffe
jne r-xdata
inc [ ebp - 0x10 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
cmp eax [ ebx + 0x7c ]
jae r-xdata
movzx ecx [ esi ]
cmp [ ebp - 0x18 ] ecx
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
cmp eax [ ebx + 0x88 ]
jbe r-xdata
add eax 0x2
inc ecx
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0x34 ]
jl r-xdata
movzx edx [ eax ]
cmp [ ebp - 0x14 ] edx
mov edx [ ebp - 0x24 ]
jne r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov eax [ ebx + 0x7c ]
lea edx [ ecx + ecx ]
sub eax edx
mov [ ebp - 0x30 ] edx
cmp esi eax
ja r-xdata
add esi [ ebp - 0xc ]
jmp r-xdata
mov ax [ esi - 0x2 ]
sub esi 0x2
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
mov [ ebp - 0x8 ] esi
cmp ax cx
jne r-xdata
mov edx [ ebp - 0x24 ]
cmp eax [ ebx + 0x7c ]
jb r-xdata
lea eax [ edx + edx ]
push eax
lea eax [ ebp - 0x6c ]
push eax
push ecx
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
add [ ebp - 0x8 ] eax
inc esi
cmp esi [ ebp - 0x34 ]
jl r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x34 ] edx
je r-xdata
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add esi 0x2
sub esi 0x2
mov [ ebp - 0x8 ] esi
cmp esi [ ebp - 0x18 ]
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
cmp eax [ ebx + 0x7c ]
jae r-xdata
mov ax [ esi - 0x2 ]
sub esi 0x2
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
mov [ ebp - 0x8 ] esi
cmp ax cx
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc esi
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov eax ecx
cmp esi [ ebp - 0x14 ]
jl r-xdata
cmp [ ebp - 0x34 ] eax
je r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp eax esi
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx ebx [ eax ]
cmp esi ebx
mov ebx [ ebp + 0x10 ]
je r-xdata
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx eax [ eax ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp [ ebp - 0x1c ] edx
mov edx [ ebp - 0x24 ]
je r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp - 0x14 ]
jle r-xdata
cmp esi eax
jb r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
jmp r-xdata
add esi 0x2
mov [ ebp - 0x8 ] esi
mov eax 0x1
cmp eax 0x5
je r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx esi
jle r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx esi
jle r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx esi
jle r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
mov eax 0x1
cmp edx 0x9
je r-xdata
mov eax 0x1
cmp edx 0x9
je r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
inc [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] eax
jle r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
cmp [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x20 ]
jae r-xdata
inc [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] eax
jle r-xdata
cmp [ ebp - 0x18 ] 0x60
je r-xdata
test edx edx
jne r-xdata
mov edx [ ebx + 0x7c ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x1c ]
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov esi ecx
mov [ ebp - 0x8 ] esi
mov ecx [ ebx + 0x7c ]
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp [ ebp - 0x14 ] eax
jge r-xdata
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov esi [ ebx + 0x7c ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx eax
jge r-xdata
mov esi ecx
mov eax [ ebp - 0x1c ]
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ ebx + 0x7c ]
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov ebx [ ebp - 0x20 ]
sub esi 0x2
mov [ ebp - 0x8 ] esi
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx edx [ eax * 8 + r--data ]
mov eax [ ebx + 0x7c ]
mov [ ebp - 0xc ] edx
cmp esi eax
jae r-xdata
dec edx
or edx 0xffffff80
inc edx
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add esi 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] esi
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
cmp esi [ ebx + 0x88 ]
jbe r-xdata
cmp [ ebp - 0x3c ] 0x0
mov ebx [ ebp + 0x10 ]
jne r-xdata
mov ax [ esi ]
mov [ ebp - 0x30 ] 0xfc00
and ax [ ebp - 0x30 ]
mov [ ebp - 0x30 ] 0xd800
cmp ax [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x24 ]
cmp esi [ ebx + 0x88 ]
jbe r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ esi ]
mov ecx eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ esi ]
mov ecx eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ esi ]
mov ecx eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov edx [ ebp - 0x40 ]
lea edx [ edx * 4 + r--data ]
mov [ ebp - 0x28 ] edx
mov edx [ edx ]
cmp [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x24 ]
jb r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp [ ebp - 0x18 ] 0x24
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
je r-xdata
movzx edx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] edx
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
je r-xdata
movzx edx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] edx
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] ecx
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] ecx
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] ecx
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
je r-xdata
movzx ecx [ esi ]
add esi 0x2
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax 0xc
jne r-xdata
cmp [ ebp - 0x34 ] 0xc
jne r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov ecx 0x82
cmp ax cx
jb r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc edx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x34 ] edx
push [ ebp + 0x8 ]
mov edx edi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp - 0x28 ]
jmp r-xdata
sub ecx eax
mov [ ebp - 0x38 ] ecx
lea edx [ ecx + 0x2 ]
mov ecx [ ebp - 0xc ]
call sub_4718ee
test eax eax
jne r-xdata
mov eax [ ebp - 0x30 ]
jmp r-xdata
sub ecx eax
mov [ ebp - 0x38 ] ecx
lea edx [ ecx + 0x2 ]
mov ecx [ ebp - 0xc ]
call sub_4718ee
test eax eax
jne r-xdata
mov eax [ ebx + 0x7c ]
cmp eax [ ebx + 0x88 ]
jbe r-xdata
cmp ecx [ ebp - 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x7c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
sub esi 0x2
add esp 0x14
mov [ ebp - 0x8 ] esi
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
add esi 0x2
push ebx
push [ ebp + 0xc ]
mov edx edi
push [ ebp + 0x8 ]
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] ecx
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
cmp eax [ ebx + 0x7c ]
jae r-xdata
jmp r-xdata
cmp esi [ ebx + 0x7c ]
jb r-xdata
lea eax [ ecx + ecx ]
push eax
lea eax [ ebp - 0x6c ]
push eax
push esi
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
inc [ ebp - 0x1c ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
mov ecx [ ebp - 0x10 ]
add esp 0x14
lea edx [ ecx + ecx ]
test eax eax
je r-xdata
cmp esi [ ebp - 0x30 ]
jne r-xdata
sub esi 0x2
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x88 ]
jbe r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp esi [ ebp - 0x18 ]
jne r-xdata
sub esi 0x2
mov [ ebp - 0x8 ] esi
mov eax 0xfffffff4
jmp r-xdata
movzx ecx [ esi ]
cmp [ ebp - 0x34 ] ecx
je r-xdata
movzx edx [ esi ]
mov eax edx
and eax 0xfc00
add esi 0x2
cmp eax 0xd800
jne r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ ebp - 0x18 ]
cmp eax [ ebx + 0x88 ]
jbe r-xdata
movzx edx [ eax ]
cmp [ ebp - 0x10 ] edx
mov edx [ ebp - 0x24 ]
je r-xdata
mov esi [ ebp - 0x8 ]
cmp eax [ ebx + 0x88 ]
jbe r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ ecx + 0x2 ]
and [ ebp - 0x2c ] 0x3ff
shl [ ebp - 0x2c ] 0xa
and eax 0x3ff
or eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] 0x2
add eax 0x10000
jmp r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
cmp esi [ ebx + 0x88 ]
jbe r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ edi * 4 + r--data ] eax
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ esi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
cmp eax esi
jle r-xdata
cmp eax 0x8
je r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
cmp eax [ ebp - 0x14 ]
jle r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ ebp - 0x14 ]
jle r-xdata
cmp edx 0xa
je r-xdata
mov ecx [ ebp - 0x28 ]
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ ebp - 0x14 ]
jle r-xdata
cmp edx 0xa
je r-xdata
mov ecx [ ebp - 0x28 ]
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ ebp - 0x14 ]
jle r-xdata
cmp edx 0x5f
je r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
jmp r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
cmp [ ebp - 0x18 ] 0xa0
jb r-xdata
cmp esi [ ebp - 0x2c ]
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
cmp esi [ ebx + 0x88 ]
jbe r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ecx 0xd
jne r-xdata
movzx ecx [ esi ]
cmp ecx 0x180e
jg r-xdata
movzx ecx [ esi ]
cmp ecx 0x180e
jg r-xdata
movzx ecx [ esi ]
cmp ecx 0x85
jg r-xdata
movzx eax [ esi ]
cmp eax 0x85
jg r-xdata
movzx ecx [ esi ]
mov [ ebp - 0xc ] 0xff
cmp cx [ ebp - 0xc ]
ja r-xdata
movzx eax [ esi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx ecx [ esi ]
mov [ ebp - 0xc ] 0xff
cmp cx [ ebp - 0xc ]
ja r-xdata
movzx eax [ esi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx ecx [ esi ]
mov [ ebp - 0xc ] 0xff
cmp cx [ ebp - 0xc ]
ja r-xdata
movzx eax [ esi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
lea eax [ esi + 0x2 ]
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x2 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] esi
mov eax [ ebx + 0x7c ]
cmp esi [ ebx + 0x88 ]
jbe r-xdata
cmp esi [ ebp - 0x2c ]
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
movzx eax [ esi ]
mov [ ebp - 0x10 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x10 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x10 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x28 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x28 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x28 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x28 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x28 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x28 ] eax
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
movzx ecx [ esi ]
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov ebx [ ebp - 0x20 ]
mov edi edx
sub esi 0x2
mov [ ebp - 0x8 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
mov edx [ ebp - 0xc ]
inc eax
lea esi [ esi + edx * 2 ]
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov [ ebp - 0xc ] 0x2
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax 0x9
je r-xdata
dec edx
or edx 0xffffff80
inc edx
movzx eax [ esi + 0x2 ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
mov [ ebp - 0x30 ] 0x2
mov edx [ ebp - 0x40 ]
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] edx
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
movzx eax [ esi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] 0x2
jmp r-xdata
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x40 ]
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
movzx eax [ esi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] 0x2
jmp r-xdata
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x40 ]
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
movzx eax [ esi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] 0x2
jmp r-xdata
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec edx
or edx 0xffffff80
inc edx
movzx eax [ esi + 0x2 ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
mov [ ebp - 0x30 ] 0x2
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi + 0x2 ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
mov [ ebp - 0x30 ] 0x2
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi + 0x2 ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
mov [ ebp - 0x30 ] 0x2
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi + 0x2 ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
mov [ ebp - 0x30 ] 0x2
cmp [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x24 ]
je r-xdata
mov ebx [ ebp - 0xc ]
add [ ebp - 0x28 ] 0x4
cmp [ ebp - 0x18 ] ebx
mov ebx [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ esi + 0x2 ]
and [ ebp - 0x18 ] 0x3ff
shl [ ebp - 0x18 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] 0x2
add eax 0x10000
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x1
cmp [ ebp - 0x18 ] 0x40
je r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ esi + 0x2 ]
and [ ebp - 0x18 ] 0x3ff
shl [ ebp - 0x18 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] 0x2
add eax 0x10000
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
and ecx 0xfc00
cmp ecx 0xd800
jne r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and edx 0x8000007f
jns r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov edx [ ebp - 0x40 ]
mov ebx [ edx * 4 + r--data ]
lea edx [ edx * 4 + r--data ]
mov [ ebp - 0xc ] ebx
cmp ecx ebx
mov ebx [ ebp + 0x10 ]
jb r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x24
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx edx [ eax * 8 + r--data ]
mov eax [ ebx + 0x7c ]
mov [ ebp - 0xc ] edx
cmp esi eax
jae r-xdata
dec edx
or edx 0xffffff80
inc edx
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
add esi 0x2
movzx edx [ esi ]
add eax 0xfffffffa
add esi 0x2
cmp eax 0xf
ja r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
movzx edx [ esi ]
mov eax edx
and eax 0xfc00
add esi 0x2
cmp eax 0xd800
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
lea edx [ edi + 0x4 ]
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
add edi 0x4
jmp r-xdata
cmp [ ecx ] 0x7b
je r-xdata
mov [ ebx + 0xb8 ] edi
mov eax 0xfffffc1b
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
jmp r-xdata
add ecx eax
mov [ ebp - 0x34 ] ecx
lea edx [ ecx + 0x2 ]
mov ecx [ ebp - 0xc ]
call sub_4718ee
test eax eax
jne r-xdata
add ecx eax
mov [ ebp - 0x34 ] ecx
lea edx [ ecx + 0x2 ]
mov ecx [ ebp - 0xc ]
call sub_4718ee
test eax eax
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
sub esi 0x2
add esp 0x14
mov [ ebp - 0x8 ] esi
test eax eax
jne r-xdata
jmp r-xdata
cmp esi [ ebx + 0x88 ]
jmp r-xdata
add esi [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x1c ] eax
jge r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] ecx
je r-xdata
cmp [ ebp - 0x34 ] edx
je r-xdata
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add esi 0x2
sub esi 0x2
mov [ ebp - 0x8 ] esi
cmp esi [ ebp - 0x18 ]
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
add eax 0x2
inc ecx
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0x14 ]
jl r-xdata
mov ax [ esi - 0x2 ]
sub esi 0x2
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
mov [ ebp - 0x8 ] esi
cmp ax cx
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x10 ] eax
je r-xdata
cmp [ ebp - 0x34 ] eax
je r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
mov edi ecx
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x28 ]
cmp esi eax
jb r-xdata
mov eax [ ebp - 0x2c ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
jmp r-xdata
cmp edx 0xc
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
jmp r-xdata
cmp edx 0xb
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0xe000
mov [ ebp - 0xc ] 0x0
jb r-xdata
cmp [ ebp - 0x18 ] 0xd7ff
jbe r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov edx [ ebp - 0x24 ]
cmp esi [ ebx + 0x88 ]
jbe r-xdata
mov eax [ ebx + 0x1c ]
add eax eax
sub edx eax
cmp esi edx
ja r-xdata
lea eax [ ebx + 0x1c ]
push 0x0
push eax
push edx
mov edx [ ebx + 0x18 ]
mov ecx esi
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
cmp ecx 0xa
je r-xdata
mov ecx [ ebx + 0x7c ]
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp esi ecx
jae r-xdata
cmp ecx 0x205f
jg r-xdata
je r-xdata
cmp ecx 0x205f
jg r-xdata
je r-xdata
cmp ecx 0x2028
jl r-xdata
je r-xdata
add eax 0xffffdfd8
cmp eax 0x1
ja r-xdata
je r-xdata
inc eax
add esi 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x4
jne r-xdata
mov ecx eax
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x4
je r-xdata
inc eax
add esi 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x1
jne r-xdata
mov ecx eax
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x1
je r-xdata
inc eax
add esi 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov ecx eax
mov eax [ ebx + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp esi eax
jae r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
movzx eax [ esi + 0x2 ]
and [ ebp - 0x10 ] 0x3ff
shl [ ebp - 0x10 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x2
add eax 0x10000
jmp r-xdata
mov eax [ ebp - 0x10 ]
movzx eax [ esi + 0x2 ]
and [ ebp - 0x10 ] 0x3ff
shl [ ebp - 0x10 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] 0x2
add eax 0x10000
jmp r-xdata
mov eax [ ebp - 0x10 ]
movzx eax [ esi + 0x2 ]
and [ ebp - 0x10 ] 0x3ff
shl [ ebp - 0x10 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] 0x2
add eax 0x10000
jmp r-xdata
movzx eax [ esi ]
mov edx [ ebp - 0x28 ]
movzx eax [ esi + 0x2 ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or eax edx
mov edx [ ebp - 0x24 ]
add eax 0x10000
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x2
jmp r-xdata
movzx eax [ esi ]
mov edx [ ebp - 0x28 ]
movzx eax [ esi + 0x2 ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or eax edx
mov edx [ ebp - 0x24 ]
add eax 0x10000
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x2
jmp r-xdata
movzx eax [ esi ]
mov edx [ ebp - 0x28 ]
movzx eax [ esi + 0x2 ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or eax edx
mov edx [ ebp - 0x24 ]
add eax 0x10000
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x2
jmp r-xdata
movzx eax [ esi ]
mov edx [ ebp - 0x28 ]
movzx eax [ esi + 0x2 ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or eax edx
mov edx [ ebp - 0x24 ]
add eax 0x10000
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x2
jmp r-xdata
movzx eax [ esi ]
mov edx [ ebp - 0x28 ]
movzx eax [ esi + 0x2 ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or eax edx
mov edx [ ebp - 0x24 ]
add eax 0x10000
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x2
jmp r-xdata
movzx eax [ esi ]
mov edx [ ebp - 0x28 ]
movzx eax [ esi + 0x2 ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or eax edx
mov edx [ ebp - 0x24 ]
add eax 0x10000
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x2
jmp r-xdata
movzx ecx [ esi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
sub esi 0x2
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp esi eax
jb r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp esi [ ebp - 0x2c ]
jne r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov eax 0xfffffff4
jmp r-xdata
jmp r-xdata
mov eax 0xfffffff4
jmp r-xdata
mov eax 0x1
cmp eax 0x5
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
mov eax 0x1
cmp edx 0x9
je r-xdata
mov eax 0x1
cmp edx 0x9
je r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
mov ecx [ ebp - 0x30 ]
inc eax
lea esi [ esi + ecx * 2 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov edx [ ebp - 0x28 ]
mov edx [ edx ]
cmp [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x30 ]
inc eax
lea esi [ esi + edx * 2 ]
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x60
je r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
add esi 0x2
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax 0x9
je r-xdata
dec edx
or edx 0xffffff80
inc edx
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
add esi 0x2
mov edx [ ebp - 0x40 ]
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] edx
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi 0x2
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x40 ]
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi 0x2
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x40 ]
sete cl
cmp ecx [ ebp - 0x3c ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi 0x2
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec edx
or edx 0xffffff80
inc edx
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
mov [ ebp - 0xc ] edx
add esi 0x2
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] ecx
add esi 0x2
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] ecx
add esi 0x2
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] ecx
add esi 0x2
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov ebx [ ebp + 0x10 ]
lea edx [ edx + 0x4 ]
cmp ecx [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi 0x2
mov ecx 0x1
cmp ecx 0x40
je r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi 0x2
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov ebx [ ebp - 0x20 ]
mov edi edx
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx + 0x1c ]
add eax eax
sub edx eax
cmp esi edx
ja r-xdata
push 0x0
lea eax [ ebx + 0x1c ]
push eax
push edx
mov edx [ ebx + 0x18 ]
mov ecx esi
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
movzx eax [ esi ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add esi 0x2
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax 0xc
jne r-xdata
mov eax [ ebx + 0x1c ]
add eax eax
sub edx eax
cmp esi edx
ja r-xdata
push [ ebp - 0x20 ]
lea eax [ ebx + 0x1c ]
push eax
push edx
mov edx [ ebx + 0x18 ]
mov ecx esi
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebx + 0xb8 ] eax
mov eax 0xfffffc1b
jmp r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
add esi 0x2
push ebx
push [ ebp + 0xc ]
mov edx edi
push [ ebp + 0x8 ]
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] edx
je r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
cmp eax [ ebx + 0x7c ]
jae r-xdata
jmp r-xdata
cmp esi [ ebp - 0x18 ]
jne r-xdata
sub esi 0x2
mov [ ebp - 0x8 ] esi
mov eax 0xfffffff4
jmp r-xdata
mov eax [ ebp - 0xc ]
inc esi
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov eax ecx
cmp esi [ ebp - 0x14 ]
jl r-xdata
movzx ecx [ esi ]
mov [ ebp - 0xc ] 0x1
test ebx ebx
je r-xdata
jmp r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
cmp edx 0xd
je r-xdata
cmp edx 0xc
je r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
mov ebx [ ebp - 0x3c ]
cmp [ ebp - 0xc ] ebx
mov ebx [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0x2c ]
sub esi 0x2
cmp [ ebp - 0x34 ] 0x11
mov [ ebp - 0x8 ] esi
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov ax [ esi ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov eax 0xfffffff4
jmp r-xdata
mov ecx [ ebx + 0x7c ]
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
cmp [ esi ] 0xa
je r-xdata
cmp ecx 0x3000
je r-xdata
je r-xdata
cmp ecx 0xa0
jg r-xdata
cmp ecx 0x3000
jne r-xdata
je r-xdata
add esi 0x2
inc eax
mov [ ebp - 0x8 ] esi
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp ecx 0xa0
jg r-xdata
add esi 0x2
inc eax
mov [ ebp - 0x8 ] esi
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp ecx 0x2029
jle r-xdata
cmp ecx 0xa
jl r-xdata
add esi 0x2
inc ecx
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
add eax 0xfffffff6
cmp eax 0x3
jbe r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
inc eax
add esi 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
inc eax
add esi 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
inc eax
add esi 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov edx [ ebp - 0x24 ]
cmp esi [ ebx + 0x88 ]
jbe r-xdata
mov eax [ ebx + 0x1c ]
add eax eax
sub edx eax
cmp esi edx
ja r-xdata
push ecx
lea eax [ ebx + 0x1c ]
push eax
push edx
mov edx [ ebx + 0x18 ]
mov ecx esi
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
add eax eax
sub edx eax
cmp esi edx
ja r-xdata
push ecx
lea eax [ ebx + 0x1c ]
push eax
push edx
mov edx [ ebx + 0x18 ]
mov ecx esi
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
inc ecx
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov ax [ esi ]
mov [ ebp - 0xc ] 0xfc00
and ax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0xdc00
cmp ax [ ebp - 0xc ]
mov eax [ ebx + 0x7c ]
jne r-xdata
mov eax 0xfffffff4
jmp r-xdata
mov ax [ esi - 0x2 ]
sub esi 0x2
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
mov [ ebp - 0x8 ] esi
cmp ax cx
jne r-xdata
cmp eax 0xa
je r-xdata
mov eax [ ebx + 0x7c ]
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp esi eax
jae r-xdata
cmp eax 0xd
jne r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
cmp eax 0x180e
ja r-xdata
add eax 0xffffdfd8
cmp eax 0x1
ja r-xdata
je r-xdata
cmp eax 0x85
ja r-xdata
mov eax [ ebp - 0xc ]
inc ecx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x4
mov edx [ ebp - 0x24 ]
jne r-xdata
cmp eax 0x100
jae r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x4
mov edx [ ebp - 0x24 ]
je r-xdata
cmp eax 0x100
jae r-xdata
mov eax [ ebp - 0xc ]
inc ecx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x1
mov edx [ ebp - 0x24 ]
jne r-xdata
cmp eax 0x100
jae r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x1
mov edx [ ebp - 0x24 ]
je r-xdata
cmp eax 0x100
jae r-xdata
mov eax [ ebp - 0xc ]
inc ecx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x10
mov edx [ ebp - 0x24 ]
jne r-xdata
cmp eax 0x100
jae r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x10
mov edx [ ebp - 0x24 ]
je r-xdata
cmp eax 0x100
jae r-xdata
movzx eax [ esi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x2
jne r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
jmp r-xdata
cmp esi [ ebx + 0x88 ]
jbe r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ edi * 4 + r--data ] eax
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ esi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] 0x2
jmp r-xdata
sub esi 0x2
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x30 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp eax 0x8
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x20 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp edx 0xa
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x20 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp edx 0xa
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x20 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp edx 0x5f
je r-xdata
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebp - 0x10 ]
jae r-xdata
jmp r-xdata
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x30 ] 0x1
cmp esi [ ebp - 0x28 ]
jae r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0xa0
jb r-xdata
jmp r-xdata
mov eax 0x1
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0x18 ]
inc [ ebp - 0x14 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
inc [ ebp - 0x14 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
inc [ ebp - 0x14 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
mov eax 0x1
cmp edx 0x9
je r-xdata
mov eax 0x1
cmp edx 0x9
je r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ebx [ edx ]
mov [ ebp - 0xc ] ebx
cmp ecx ebx
mov ebx [ ebp + 0x10 ]
jae r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp ecx 0x60
je r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp esi eax
jb r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x34 ]
mov ax [ esi ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
jmp r-xdata
add eax 0xfffffffa
cmp eax 0xf
ja r-xdata
cmp [ ebx + 0x8c ] 0x0
jne r-xdata
mov ax [ esi ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp - 0x38 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] esi
xor eax eax
jmp r-xdata
cmp edx 0xd
je r-xdata
cmp esi ecx
cmp esi ecx
jbe r-xdata
mov eax 0xfffffff4
jmp r-xdata
inc ecx
add esi 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
cmp ecx [ ebp - 0x1c ]
jl r-xdata
lea eax [ esi + 0x2 ]
cmp eax [ ebx + 0x7c ]
jb r-xdata
cmp [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi ecx
jae r-xdata
jmp r-xdata
cmp ecx 0xb
je r-xdata
add esi 0x2
mov [ ebp - 0x8 ] esi
jmp r-xdata
add esi 0x2
inc eax
mov [ ebp - 0x8 ] esi
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp ecx 0x2000
jl r-xdata
cmp ecx 0x1680
jne r-xdata
je r-xdata
cmp ecx 0x2000
jl r-xdata
jmp r-xdata
cmp ecx 0x1680
je r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0xd
jg r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jle r-xdata
mov edx [ ebp - 0x10 ]
mov ax [ esi ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x10 ]
mov ax [ esi ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
cmp esi eax
jae r-xdata
jmp r-xdata
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp [ ebp - 0x34 ] 0x11
mov ecx [ ebp - 0x2c ]
jne r-xdata
sub esi 0x2
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0xc ]
lea esi [ esi + eax * 2 ]
mov eax [ ebx + 0x7c ]
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
cmp [ esi ] 0xa
jne r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
cmp eax 0xa0
ja r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp eax 0xa
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
inc ecx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
inc ecx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
inc ecx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x8 ] esi
cmp esi [ ebp - 0x2c ]
jne r-xdata
sub esi 0x2
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov edi ecx
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x30 ]
cmp esi eax
jb r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
jmp r-xdata
cmp edx 0xc
je r-xdata
jmp r-xdata
cmp edx 0xb
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0xe000
mov [ ebp - 0xc ] 0x0
jb r-xdata
cmp [ ebp - 0x18 ] 0xd7ff
jbe r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp eax 0x8
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc [ ebp - 0x14 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp edx 0xa
je r-xdata
mov eax [ ebp + 0x18 ]
inc [ ebp - 0x14 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp edx 0xa
je r-xdata
mov eax [ ebp + 0x18 ]
inc [ ebp - 0x14 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx edi
push ebx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp edx 0x5f
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0xa0
jb r-xdata
jmp r-xdata
cmp esi [ ebx + 0x88 ]
jbe r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ edi * 4 + r--data ] eax
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ esi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
je r-xdata
cmp esi [ ebx + 0x7c ]
jb r-xdata
cmp [ ebx + 0x1c ] 0x1
je r-xdata
jmp [ eax * 4 + jump_table_48c473 ]
cmp esi [ ebx + 0x7c ]
jb r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
inc ecx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
mov edx edi
mov ecx esi
call sub_409460
add esp 0x14
test eax eax
jne r-xdata
cmp [ ebx + 0x1c ] 0x1
je r-xdata
jmp r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jne r-xdata
cmp [ esi ] 0xa
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov ax [ esi + 0x2 ]
cmp ax [ ebx + 0x36 ]
je r-xdata
cmp ecx 0xc
je r-xdata
inc eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
jmp r-xdata
cmp ecx 0x200a
jle r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x200a
jle r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
jmp r-xdata
mov eax 0xfffffff4
jmp r-xdata
add esi 0x2
add edx 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] edx
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp edx [ ebx + 0x7c ]
jb r-xdata
cmp [ ebx + 0x1c ] 0x1
je r-xdata
add esi 0x2
add edx 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] edx
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp edx [ ebx + 0x7c ]
jb r-xdata
cmp [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi ecx
cmp esi ecx
jbe r-xdata
mov [ ebp - 0xc ] 0x1
cmp esi eax
jae r-xdata
jmp r-xdata
cmp eax 0xb
je r-xdata
inc ecx
cmp ecx [ ebp - 0x1c ]
jl r-xdata
add esi 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp eax 0x2000
jb r-xdata
mov eax [ ebp - 0x30 ]
inc ecx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
cmp eax 0x1680
jne r-xdata
je r-xdata
mov eax [ ebp - 0x30 ]
inc ecx
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x8 ] esi
cmp ecx [ ebp - 0x1c ]
jl r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x14
sete al
cmp [ ebp - 0xc ] eax
je r-xdata
cmp eax 0xd
jbe r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test ebx ebx
jne r-xdata
movzx ecx [ esi ]
mov [ ebp - 0xc ] 0x1
test ebx ebx
je r-xdata
jmp r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
cmp edx 0xd
je r-xdata
cmp edx 0xc
je r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
mov ebx [ ebp - 0x3c ]
cmp [ ebp - 0xc ] ebx
mov ebx [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
jmp r-xdata
cmp edx 0xc
je r-xdata
jmp r-xdata
cmp edx 0xb
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xe000
jae r-xdata
cmp ecx 0xd7ff
jbe r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov edi ecx
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x30 ]
cmp esi eax
jb r-xdata
jmp r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov ax [ esi + 0x2 ]
cmp ax [ ebx + 0x36 ]
je r-xdata
cmp edx 0xd
ja r-xdata
cmp edx 0x180e
ja r-xdata
cmp edx 0x180e
ja r-xdata
cmp edx 0x85
ja r-xdata
cmp edx 0x85
ja r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0x100
jae r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov ax [ esi + 0x2 ]
cmp ax [ ebx + 0x36 ]
je r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
cmp [ esi - 0x2 ] 0xd
jne r-xdata
cmp [ ebx + 0x1c ] 0x2
jne r-xdata
cmp ecx 0x85
je r-xdata
cmp ecx 0x202f
jne r-xdata
cmp ecx 0x20
jne r-xdata
cmp ecx 0x202f
je r-xdata
cmp ecx 0x20
je r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov ax [ esi ]
mov [ ebp - 0xc ] 0xfc00
and ax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0xdc00
cmp ax [ ebp - 0xc ]
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov ax [ edx ]
cmp ax [ ebx + 0x36 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov ax [ esi ]
mov [ ebp - 0xc ] 0xfc00
and ax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0xdc00
cmp ax [ ebp - 0xc ]
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov ax [ edx ]
cmp ax [ ebx + 0x36 ]
jne r-xdata
jmp r-xdata
jne r-xdata
cmp [ esi ] 0xa
jne r-xdata
cmp eax 0xc
je r-xdata
mov [ ebp - 0x8 ] esi
xor eax eax
cmp [ ebp - 0x34 ] 0x12
sete al
cmp [ ebp - 0xc ] eax
je r-xdata
cmp eax 0x200a
jbe r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp - 0x38 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] esi
xor eax eax
jmp r-xdata
cmp edx 0xd
je r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
cmp edx 0xd
je r-xdata
cmp edx 0xc
je r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
xor ecx ecx
jmp r-xdata
movzx ecx [ esi ]
mov [ ebp - 0xc ] 0x1
test ebx ebx
je r-xdata
jmp r-xdata
cmp [ ebx + 0x1c ] 0x2
jne r-xdata
cmp edx 0x85
je r-xdata
je r-xdata
cmp edx 0x205f
ja r-xdata
je r-xdata
cmp edx 0x205f
ja r-xdata
je r-xdata
cmp edx 0x2028
jb r-xdata
je r-xdata
lea eax [ edx - 0x2028 ]
cmp eax 0x1
ja r-xdata
je r-xdata
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x4
jne r-xdata
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x4
je r-xdata
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x1
je r-xdata
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x10
jne r-xdata
mov eax [ ebx + 0x44 ]
test [ edx + eax ] 0x10
je r-xdata
cmp [ ebx + 0x1c ] 0x2
jne r-xdata
jmp r-xdata
add esi 0xfffffffe
mov [ ebp - 0x8 ] esi
mov ax [ esi ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
cmp ecx 0x2028
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebx + 0x7c ]
cmp esi edx
jae r-xdata
jmp r-xdata
add esi 0x2
add edx 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] edx
cmp [ ebx + 0x1c ] 0x2
jne r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebx + 0x7c ]
cmp esi edx
jae r-xdata
add esi 0x2
add edx 0x2
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] edx
cmp [ ebx + 0x1c ] 0x2
jne r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
jmp r-xdata
cmp [ esi - 0x2 ] 0xd
jne r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x202f
jne r-xdata
cmp eax 0x20
jne r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xd
je r-xdata
cmp ecx [ ebp - 0x3c ]
je r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp - 0x38 ]
mov ecx [ ebp - 0x14 ]
movzx eax [ ebx + 0x34 ]
cmp edx eax
jne r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
lea eax [ edx - 0x2028 ]
cmp eax 0x1
ja r-xdata
cmp esi [ ebx + 0x7c ]
jae r-xdata
cmp edx 0xa
je r-xdata
cmp edx 0x3000
je r-xdata
je r-xdata
cmp edx 0xa0
ja r-xdata
cmp edx 0x3000
jne r-xdata
je r-xdata
cmp edx 0xa0
ja r-xdata
cmp edx 0x2029
jbe r-xdata
cmp edx 0xa
jb r-xdata
jmp r-xdata
lea eax [ edx - 0xa ]
cmp eax 0x3
ja r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
movzx eax [ ebx + 0x34 ]
cmp edx eax
jne r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
cmp ecx 0x2029
jne r-xdata
mov ax [ esi ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
mov ax [ esi ]
cmp ax [ ebx + 0x34 ]
jne r-xdata
add esi 0xfffffffe
mov [ ebp - 0x8 ] esi
cmp eax 0x2028
je r-xdata
jmp r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
jmp r-xdata
cmp [ esi ] 0xa
jne r-xdata
lea eax [ edx - 0xb ]
cmp eax 0x1
ja r-xdata
jmp r-xdata
cmp edx 0x2000
jb r-xdata
cmp edx 0x1680
je r-xdata
je r-xdata
jmp r-xdata
cmp edx 0x2000
jb r-xdata
cmp edx 0x1680
jne r-xdata
je r-xdata
jmp r-xdata
cmp edx 0xd
jbe r-xdata
jmp r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
mov [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x8c ] 0x1
jg r-xdata
cmp eax 0x2029
jne r-xdata
cmp eax [ ebp - 0x3c ]
je r-xdata
jmp r-xdata
add esi 0x2
jmp r-xdata
jmp r-xdata
cmp edx 0x200a
jbe r-xdata
jmp r-xdata
cmp edx 0x9
je r-xdata
cmp edx 0x200a
jbe r-xdata
jmp r-xdata
cmp edx 0x9
je r-xdata
jmp r-xdata
jmp r-xdata
cmp edx 0x202f
je r-xdata
cmp edx 0x20
je r-xdata
cmp edx 0x202f
jne r-xdata
cmp edx 0x20
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_40a0c0
push ebp
mov ebp esp
sub esp 0x4c
mov [ ebp - 0x1c ] ecx
xor ecx ecx
mov eax 0x8
mov edx 0x2
mul edx
seto cl
push ebx
push esi
push edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] 0x8
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
xor ecx ecx
push 0x4
mov [ ebp - 0x3c ] eax
mov [ eax ] cx
call sub_42010a
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
test esi esi
je r-xdata
xor esi esi
mov [ ebp - 0x14 ] esi
jmp r-xdata
mov [ esi ] 0x1
mov ebx [ ebp + 0xc ]
xor edi edi
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x30 ] esi
mov eax [ ecx ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] edi
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx ebx
call sub_40a6f8
xor ecx ecx
mov eax 0x8
mov edx 0x2
mul edx
seto cl
mov [ ebx + 0x8 ] 0x8
neg ecx
or ecx eax
push ecx
call sub_41fa89
add esp 0x4
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebx ]
xor ecx ecx
mov [ ebx + 0x4 ] edi
mov [ eax ] cx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
jle r-xdata
xor eax eax
mov [ ebp + 0xc ] eax
mov [ ebp - 0x28 ] eax
xor ecx ecx
mov eax 0x8
mov edx 0x2
mul edx
seto cl
mov [ ebp - 0x24 ] 0x8
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
xor ecx ecx
push 0x4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x2c ] eax
mov [ eax ] cx
call sub_42010a
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
fld [ r--data ]
mov esi [ ebp + 0x8 ]
fld [ r--data ]
fld [ r--data ]
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ eax ] 0x1
lea edx [ ecx + eax * 2 ]
jmp r-xdata
lea edx [ ecx + edi * 2 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ecx + 0x4 ]
cmp edi ecx
ja r-xdata
mov edi ecx
jmp r-xdata
mov edx ecx
sub edx edi
mov [ ebp - 0x1c ] edx
jne r-xdata
cmp [ edx ] 0x5c
je r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi eax
je r-xdata
cmp edi eax
jae r-xdata
cmp edi ecx
jae r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ esi + 0x4 ]
cmp edi eax
jl r-xdata
fstp st2
push edi
fstp st0
mov ecx esi
fstp st0
call sub_41db6f
cmp [ eax ] 0x5c
je r-xdata
lea edx [ ecx + eax * 2 ]
jmp r-xdata
lea edx [ ecx + edi * 2 ]
cmp edx 0xffffffff
je r-xdata
push ebx
lea eax [ ebp - 0x4c ]
push eax
mov ecx ebx
call sub_43c0a2
push eax
mov ecx ebx
call sub_40c935
lea ecx [ ebp - 0x4c ]
call sub_405cd3
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
mov ecx [ esi ]
cmp edi eax
jae r-xdata
mov esi [ ebp - 0x30 ]
fstp st2
fstp st0
mov [ ebp - 0x14 ] esi
fstp st0
push edi
inc edi
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_41db6f
movzx eax [ eax ]
push eax
mov ecx ebx
call sub_40bd2f
jmp r-xdata
push edi
mov ecx esi
call sub_41db6f
cmp [ eax ] 0x24
je r-xdata
cmp [ edx ] 0x24
je r-xdata
push 0x1
fstp st2
lea eax [ ebp - 0x4 ]
fstp st0
push eax
fstp st0
push esi
call sub_442e45
test eax eax
jns r-xdata
mov edx edi
inc edi
mov [ ebp - 0x4 ] edi
cmp edx eax
jae r-xdata
mov [ ebp - 0x1c ] edx
lea eax [ edi + edx ]
cmp eax ecx
jbe r-xdata
dec [ eax ]
jne r-xdata
mov ecx ebx
call sub_408176
mov ecx ebx
test al al
je r-xdata
fld [ r--data ]
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
push edi
mov ecx esi
call sub_41db6f
movzx eax [ eax ]
push eax
call sub_422952
add esp 0x4
test eax eax
je r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx [ ebp - 0x1c ]
push eax
call sub_442d53
lea eax [ ebp - 0x3c ]
push eax
mov ecx ebx
call sub_407b4b
inc [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov edi [ ebp - 0x4 ]
lea eax [ ecx + eax * 2 ]
jmp r-xdata
lea eax [ ecx + edx * 2 ]
mov esi [ ebp - 0x1c ]
push esi
call sub_407eda
mov eax [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
dec [ eax ]
call sub_40a6f8
mov esi [ ebp - 0x1c ]
lea eax [ esi + 0x1 ]
push eax
call sub_40c91c
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_408176
lea ecx [ ebp - 0x2c ]
test al al
je r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
jne r-xdata
push edi
call j_sub_4228ca#2
mov eax [ ebp - 0x4 ]
add esp 0x4
push eax
call j_sub_4228ca#2
add esp 0x4
mov eax [ ebx + 0x4 ]
add eax [ ebp + 0xc ]
push eax
call sub_40bd71
mov eax [ ebx + 0xc ]
dec [ eax ]
call sub_40a6f8
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
inc ecx
add eax ecx
push eax
call sub_40c91c
xor ecx ecx
mov [ ebx + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ ebx + 0x4 ]
add esp 0x4
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ ebx ]
mov esi eax
push esi
call sub_41faa0
mov [ ebx ] esi
mov esi [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
dec edi
push esi
mov [ ebp - 0x4 ] edi
call sub_442e45
movzx eax [ eax ]
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
fstp st2
dec eax
mov [ ecx ] eax
fstp st0
mov ecx ebx
fstp st0
call sub_40a6f8
mov eax [ ebx + 0x4 ]
add eax 0x2
push eax
call sub_40c91c
xor ecx ecx
mov [ ebx + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
mov eax [ ebx + 0x4 ]
add esp 0x4
lea eax [ eax * 2 + 0x2 ]
push eax
push [ ebx ]
push esi
call sub_41faa0
mov [ ebx ] esi
mov esi [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax 0x2
cmp [ ebx + 0x8 ] eax
jb r-xdata
lea ecx [ ebp - 0x2c ]
cmp ebx ecx
je r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] esi
mov eax [ eax ]
add esi esi
lea eax [ eax + edi * 2 ]
mov edi [ ebp - 0x8 ]
push esi
push eax
push edi
call sub_41faa0
add esp 0xc
xor eax eax
mov [ esi + edi ] ax
mov eax [ ebp - 0x20 ]
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec [ esi ]
jne r-xdata
mov ebx 0x1
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x4 ]
add eax eax
push eax
mov eax [ ebx ]
push edi
lea eax [ eax + ecx * 2 ]
push eax
call sub_41faa0
mov eax [ ebp + 0xc ]
add [ ebx + 0x4 ] eax
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax [ ebp - 0x4 ]
jmp r-xdata
fld [ r--data ]
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
cmp eax 0x41c2
jae r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edx [ ebp - 0x8 ]
mov [ eax + ecx * 2 ] dx
inc [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
xor edx edx
mov [ eax + ecx * 2 ] dx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x3c ]
call j_sub_4228ca#2
add esp 0x4
push esi
call j_sub_4228ca#2
add esp 0x4
cmp eax 0x2000000
jae r-xdata
fstp st2
add eax eax
fstp st0
fstp st0
jmp r-xdata
fstp st2
cmp eax 0x8000000
jae r-xdata
fstp st1
mov [ ebp + 0xc ] eax
fstp st0
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
push eax
mov [ ebx + 0x8 ] eax
call sub_40c91c
xor ecx ecx
mov [ ebx + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
mov edx [ ebx ]
add esp 0x4
mov ecx eax
mov [ ebp + 0xc ] ecx
test edx edx
je r-xdata
fstp st0
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
fstp st1
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
fstp [ ebp - 0x18 ]
fnstcw [ ebp + 0xe ]
fmul [ ebp - 0x18 ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp - 0x14 ] eax
fldcw [ ebp - 0x14 ]
fistp [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
fldcw [ ebp + 0xe ]
jmp r-xdata
fadd [ r--data ]
mov [ ebx ] ecx
mov eax [ ebx + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push edx
push ecx
call sub_41faa0
add esp 0xc
push [ ebx ]
call j_sub_4228ca
mov ecx [ ebp + 0xc ]
add esp 0x4
fstp [ ebp - 0x18 ]
fnstcw [ ebp + 0xe ]
fmul [ ebp - 0x18 ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp - 0x14 ] eax
fldcw [ ebp - 0x14 ]
fistp [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
fldcw [ ebp + 0xe ]
fadd [ r--data ]
fstp [ ebp - 0x18 ]
fnstcw [ ebp + 0xe ]
fmul [ ebp - 0x18 ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp - 0x14 ] eax
fldcw [ ebp - 0x14 ]
fistp [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
fldcw [ ebp + 0xe ]
jmp r-xdata
fadd [ r--data ]
mov edi [ ebp - 0x4 ]
sub_40a2fb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebx + 0x4 ]
jae r-xdata
pop edi
cmp esi 0xffffffff
jne r-xdata
lea eax [ edi + esi ]
cmp eax [ ebx + 0x4 ]
jbe r-xdata
mov esi [ ebx + 0x4 ]
sub esi edi
call sub_40b8a7
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
sub eax edi
sub eax esi
lea eax [ eax * 2 + 0x2 ]
push eax
lea eax [ edi + esi ]
lea eax [ ecx + eax * 2 ]
push eax
lea eax [ ecx + edi * 2 ]
push eax
call sub_41faa0
add esp 0xc
sub [ ebx + 0x4 ] esi
jmp r-xdata
sub_40a359
push ebp
mov ebp esp
mov eax 0x2030
call sub_430650
push ebx
push esi
mov esi ecx
push edi
lea eax [ esi + 0x14 ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_407dd0
mov eax [ ebp + 0x8 ]
and [ esi ] 0x0
mov [ esi + 0x24 ] 0x0
cmp [ eax ] 0x21
je r-xdata
add eax 0x2
mov [ esi + 0x24 ] 0x1
jmp r-xdata
lea ecx [ esi + 0x4 ]
push eax
mov [ ebp + 0x8 ] ecx
call sub_407e53
xor esi esi
xor eax eax
xor edi edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor bl bl
mov [ ebp - 0x10 ] eax
xor bh bh
inc edi
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
je r-xdata
push edi
mov ecx esi
call sub_40a4f6
movzx eax [ eax ]
push 0x20
pop ecx
cmp ax cx
je r-xdata
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
cmp esi 0x1000
jge r-xdata
test bh bh
jne r-xdata
test bl bl
jne r-xdata
push 0x20
pop ecx
cmp ax cx
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp - 0x10 ]
lea ecx [ esi - 0x1 ]
jmp r-xdata
xor eax eax
mov [ ebp + esi * 2 - 0x202c ] ax
lea eax [ ebp - 0x202c ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40caee
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_405b47
lea ecx [ ebp - 0x20 ]
call sub_405cd3
cmp bl 0x1
je r-xdata
push 0x9
pop ecx
cmp ax cx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
jmp r-xdata
cmp ecx edx
jge r-xdata
mov [ ebp + esi * 2 - 0x202c ] ax
inc esi
jmp r-xdata
xor eax eax
mov [ ebp + esi * 2 - 0x202c ] ax
lea eax [ ebp - 0x202c ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40caee
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_405b47
lea ecx [ ebp - 0x20 ]
call sub_405cd3
xor esi esi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor bh bh
push 0x22
pop ecx
cmp ax cx
je r-xdata
mov ax [ ebp + ecx * 2 - 0x202c ]
mov [ ebp + ecx * 2 - 0x202a ] ax
dec ecx
push 0x22
pop eax
inc esi
mov [ ebp + edx * 2 - 0x202c ] ax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a4f6
movzx eax [ eax ]
inc edi
test ax ax
je r-xdata
inc edi
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a4f6
push 0x22
pop ecx
cmp [ eax ] cx
je r-xdata
push edi
mov ecx esi
call sub_40a4f6
movzx eax [ eax ]
push 0x20
pop ecx
cmp ax cx
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov bh 0x1
mov [ ebp + esi * 2 - 0x202c ] cx
inc esi
jmp r-xdata
mov bl 0x1
xor bl bl
test bl bl
je r-xdata
inc edi
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
sub_40a4f6
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b8a7
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ esi ]
cmp edx ecx
jae r-xdata
lea eax [ eax + ecx * 2 ]
jmp r-xdata
lea eax [ eax + edx * 2 ]
pop esi
pop ebp
retn 0x4
sub_40a51a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
xor eax eax
push r--data
mov [ esp + 0x14 ] eax
call sub_40ca8e
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x2
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x4
mov esi [ eax ]
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov esi eax
mov [ esp + 0x10 ] esi
cmp esi 0xffffffff
je r-xdata
push 0x0
push esi
lea eax [ esp + 0x1c ]
push eax
mov ecx ebx
call sub_41f0f3
test al al
je r-xdata
push 0x38
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax 0x7fffffff
mov [ esp + 0x10 ] eax
jmp r-xdata
test esi esi
jle r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov ecx [ ebx + 0x198 ]
mov eax [ esp + 0x14 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
xor edi edi
jmp r-xdata
mov ecx eax
call sub_405080
mov edi eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x400
lea ecx [ esp + 0x1c ]
call sub_407b6e
mov esi [ esp + 0x10 ]
xor al al
mov [ esp + 0xf ] al
mov ecx edi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push 0x2000
push [ esi + 0x8 ]
mov ecx edi
call sub_404bf9
test al al
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_40a666
test al al
jne r-xdata
call sub_404dd9
and [ esp + 0x10 ] 0x0
test esi esi
jle r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x18 ]
push eax
call sub_407bef
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0xffffffff
add ecx ebx
call sub_44d7e4
mov al 0x1
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_40a666
test al al
je r-xdata
push ecx
mov ecx edi
call sub_404592
lea ecx [ esp + 0x18 ]
call sub_405cd3
mov ecx edi
call sub_4050ec
and [ edi + 0x2c ] 0x0
and [ edi + 0x30 ] 0x0
push ecx
mov ecx edi
call sub_404592
test al al
jne r-xdata
cmp esi 0x7fffffff
je r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax esi
jl r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
je r-xdata
mov al [ esp + 0xf ]
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0xffffffff
add ecx ebx
call sub_44d7e4
mov [ esp + 0xf ] 0x1
jmp r-xdata
sub_40a666
push ebp
mov ebp esp
push ecx
test [ ecx + 0x2c ] 0x3
push [ ebp + 0x8 ]
jne r-xdata
call sub_446538
jmp r-xdata
test [ ecx + 0x2c ] 0x4
jne r-xdata
pop ecx
pop ebp
retn 0x4
call sub_446636
jmp r-xdata
call sub_40a691
sub_40a691
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x14 ]
call sub_40a6d4
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_40c320
test al al
je r-xdata
xor bl bl
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40c610
mov bl 0x1
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop esi
mov al bl
pop ebx
leave
retn 0x4
sub_40a6d4
push esi
push 0x10
mov esi ecx
pop eax
and [ esi + 0x4 ] 0x0
push eax
mov [ esi + 0x8 ] eax
call sub_42010a
pop ecx
mov [ esi ] eax
mov ecx esi
mov [ eax ] 0x0
call sub_40a6f8
mov eax esi
pop esi
retn
sub_40a6f8
push esi
push 0x4
mov esi ecx
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
pop esi
retn
sub_40a716
push ebp
mov ebp esp
sub esp 0x2c
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
xor al al
jmp r-xdata
mov esi [ rw-data ]
xor ecx ecx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov edx [ rw-data ]
xor ebx ebx
mov edi eax
pop ecx
mov [ rw-data ] edi
mov ecx ebx
test edx edx
jle r-xdata
xor eax eax
inc eax
mov [ ebp - 0x8 ] eax
mov edi eax
lea esi [ edx + 0x1 ]
xor ecx ecx
push 0x10
pop edx
mov eax esi
mul edx
seto cl
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] esi
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov [ edi + ecx * 4 ] eax
mov edx [ rw-data ]
mov esi [ esi + 0xc ]
inc ecx
cmp ecx edx
jge r-xdata
mov esi ebx
jmp r-xdata
push sub_41ac85
push [ ebp - 0xc ]
mov [ eax ] esi
lea esi [ eax + 0x4 ]
push 0x10
pop edx
mov ecx esi
call sub_41ac65
mov edi [ rw-data ]
jmp r-xdata
mov [ rw-data ] esi
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0x4 ] ebx
mov eax ebx
jmp r-xdata
cmp edi [ rw-data ]
jg r-xdata
test eax eax
je r-xdata
test edi edi
jle r-xdata
mov bl 0x1
cmp [ eax ] 0x3b
lea ecx [ ebp - 0x28 ]
je r-xdata
mov eax [ eax + edi * 4 - 0x4 ]
call sub_443460
mov eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + eax ]
mov esi edx
mov eax [ eax ]
cmp edx [ eax + 0x8 ]
jae r-xdata
push ecx
push eax
push edi
call sub_40ace0
test eax eax
js r-xdata
mov ecx [ ebp - 0xc ]
add ecx [ rw-data ]
lea eax [ ebp - 0x28 ]
push eax
call sub_40a870
inc edi
add [ ebp - 0xc ] 0x10
jmp r-xdata
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x18 ]
push [ eax + esi * 4 ]
call sub_44a3ee
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_40b6d0
cmp [ ebp - 0x10 ] 0x7f
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_405800
mov al bl
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ ecx + eax ]
mov eax [ eax ]
mov eax [ eax + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_44a46f
mov eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
inc esi
mov eax [ ecx + eax ]
mov eax [ eax ]
cmp esi [ eax + 0x8 ]
jb r-xdata
lea ecx [ ebp - 0x18 ]
call sub_44a46f
jmp r-xdata
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_40a870
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp ebx esi
je r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
xor edi edi
cmp [ ebx + 0x8 ] edi
ja r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov [ ebx + 0x8 ] 0x0
mov eax [ esi + 0x8 ]
cmp [ ebx + 0xc ] eax
jae r-xdata
mov eax [ ebx + 0x4 ]
inc edi
mov [ eax + edi * 4 - 0x4 ] 0x0
cmp edi [ ebx + 0x8 ]
jb r-xdata
push ecx
call sub_442f46
mov eax [ esi + 0x8 ]
xor edi edi
mov [ ebx + 0x8 ] eax
test eax eax
je r-xdata
cmp eax 0x8
jae r-xdata
jmp r-xdata
pop edi
push 0xc
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor ecx ecx
mov [ ebx + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov edi eax
mov eax [ ebx + 0x4 ]
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x8
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edi * 4 ]
mov [ ebp - 0x4 ] edx
movzx ecx [ edx + 0x8 ]
mov [ esi + 0x8 ] cx
movzx eax [ esi + 0x8 ]
movzx ecx [ edx + 0xa ]
mov [ esi + 0xa ] cx
cmp ax 0x3f
jg r-xdata
push eax
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov [ ebx + 0x4 ] edi
mov eax [ ebx + 0x4 ]
inc edi
mov [ eax + edi * 4 - 0x4 ] esi
cmp edi [ ebx + 0x8 ]
jb r-xdata
cmp ax 0x10
je r-xdata
cmp ax 0x30
jge r-xdata
mov eax [ edx ]
mov [ esi ] eax
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
push 0x10
call sub_42010a
mov edx eax
add esp 0x4
test edx edx
je r-xdata
fld [ edx ]
fstp [ esi ]
jmp r-xdata
mov eax [ edx ]
mov [ esi ] eax
xor edx edx
mov [ esi ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov [ esi ] edx
jmp r-xdata
sub_40a9a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0xc ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call sub_40b8a7
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CharUpperBuffW@IAT ]
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x14 ]
dec [ eax ]
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi [ esi + 0xc ]
xor ebx ebx
dec esi
js r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x8 ]
call j_sub_4228ca#2
push [ ebp + 0x14 ]
call j_sub_4228ca#2
add esp 0x8
lea eax [ esi + ebx ]
cdq
sub eax edx
sar eax 0x1
lea ecx [ ebp + 0x8 ]
push [ edi + eax * 4 ]
mov [ ebp - 0x4 ] eax
call sub_40b933
test eax eax
jns r-xdata
mov esi [ edi + 0x4 ]
cmp esi [ ebp + 0xc ]
jne r-xdata
jle r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edi [ edi + 0x24 ]
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edi ]
test esi esi
je r-xdata
cmp ebx esi
jg r-xdata
mov ebx [ ebp - 0x4 ]
inc ebx
jmp r-xdata
xor edi edi
jmp r-xdata
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ edi + eax * 4 ]
jmp r-xdata
cmp ebx esi
jle r-xdata
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
sub_40aa70
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
call sub_40a6f8
xor ecx ecx
mov eax 0x8
mov edx 0x2
mul edx
seto cl
mov [ edi + 0x8 ] 0x8
neg ecx
or ecx eax
push ecx
call sub_41fa89
add esp 0x4
mov [ edi ] eax
jmp r-xdata
mov eax [ edi ]
fld [ r--data ]
fld [ r--data ]
xor ecx ecx
fld [ r--data ]
mov [ edi + 0x4 ] 0x0
mov [ eax ] cx
mov eax [ ebp + 0xc ]
cmp bx 0x41
jae r-xdata
cmp bx 0x61
jb r-xdata
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
jmp r-xdata
cmp bx 0x30
jae r-xdata
cmp bx 0x7a
ja r-xdata
fstp st2
dec eax
mov [ ecx ] eax
fstp st0
mov ecx edi
fstp st0
call sub_40a6f8
mov eax [ edi + 0x4 ]
add eax 0x2
push eax
call sub_40c91c
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_41faa0
jmp r-xdata
mov eax [ edi + 0x4 ]
add eax 0x2
cmp [ edi + 0x8 ] eax
jb r-xdata
cmp bx 0x39
ja r-xdata
cmp bx 0x5f
je r-xdata
add esp 0x10
cmp eax 0x41c2
jae r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
xor edx edx
mov [ eax + ecx * 2 ] bx
inc [ edi + 0x4 ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov [ eax + ecx * 2 ] dx
mov eax [ ebp + 0xc ]
inc [ eax ]
jmp r-xdata
jmp r-xdata
fstp st2
mov ecx edi
fstp st0
fstp st0
call sub_40b8a7
push [ edi + 0x4 ]
push [ edi ]
call [ CharUpperBuffW@IAT ]
xor esi esi
jmp r-xdata
cmp eax 0x2000000
jae r-xdata
fstp st2
add eax eax
fstp st0
fstp st0
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
movzx ebx [ ecx + eax * 2 ]
cmp bx 0x5a
jbe r-xdata
push [ edi ]
push [ esi * 4 + rw-data ]
call sub_422203
add esp 0x8
test eax eax
je r-xdata
fstp st2
cmp eax 0x8000000
jae r-xdata
fstp st1
mov [ ebp + 0x14 ] eax
fstp st0
fild [ ebp + 0x14 ]
test eax eax
jns r-xdata
fld [ r--data ]
mov [ edi ] esi
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
mov ecx [ edi + 0x4 ]
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push eax
push esi
call sub_41faa0
push [ edi ]
call j_sub_4228ca
test esi esi
js r-xdata
inc esi
cmp esi 0x2d
jl r-xdata
mov [ ebp + 0x14 ] eax
fstp st0
fild [ ebp + 0x14 ]
test eax eax
jns r-xdata
mov [ ebp + 0x14 ] eax
fstp st1
fild [ ebp + 0x14 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fnstcw [ ebp + 0x16 ]
movzx eax [ ebp + 0x16 ]
or eax 0xc00
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
fldcw [ ebp + 0x16 ]
jmp r-xdata
fadd [ r--data ]
mov ecx [ rw-data ]
push [ edi ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ebx eax
test ebx ebx
js r-xdata
cmp bx 0x20
jne r-xdata
fstp [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fnstcw [ ebp + 0x16 ]
movzx eax [ ebp + 0x16 ]
or eax 0xc00
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
fldcw [ ebp + 0x16 ]
jmp r-xdata
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fnstcw [ ebp + 0x16 ]
movzx eax [ ebp + 0x16 ]
or eax 0xc00
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
fldcw [ ebp + 0x16 ]
jmp r-xdata
fadd [ r--data ]
push eax
mov [ edi + 0x8 ] eax
call sub_40c91c
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
mov esi eax
mov eax [ edi ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push 0x34
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
push edi
call sub_41df08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi [ ebp + 0x10 ]
push 0x1
mov ecx esi
call sub_40b7ff
pop edi
mov [ esi ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp bx 0x2c
je r-xdata
mov edi [ ebp + 0x10 ]
movzx eax [ edi + 0x8 ]
cmp ax 0x30
jge r-xdata
cmp bx 0x29
je r-xdata
cmp ax 0x3f
jg r-xdata
xor eax eax
mov [ edi + 0x8 ] ax
mov [ edi ] esi
cmp bx 0x9
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp bx 0x3d
je r-xdata
mov [ edi ] 0x0
xor eax eax
mov [ edi ] esi
mov [ edi + 0x8 ] ax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push ecx
call sub_401926
cmp bx 0x28
je r-xdata
cmp bx 0x5d
je r-xdata
test bx bx
je r-xdata
jmp r-xdata
mov esi [ ebp + 0x10 ]
push 0xffffffff
mov ecx esi
call sub_40b7ff
mov [ esi ] 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40ace0
push ebp
mov ebp esp
sub esp 0x38
or eax 0xffffffff
mov [ ebp - 0x1c ] ax
xor eax eax
push ebx
mov [ ebp - 0x1a ] ax
mov [ ebp - 0x30 ] eax
xor ecx ecx
push esi
xor esi esi
mov eax 0x65
mov edx 0x2
mul edx
seto cl
push edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x2c ] 0x65
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ebx eax
add esp 0x4
xor eax eax
push 0x4
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebx ] ax
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x28 ] esi
jmp r-xdata
mov [ eax ] 0x1
mov [ ebp - 0x28 ] eax
mov edx [ ebp + 0x10 ]
xor edi edi
cmp [ edx + 0x8 ] esi
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov [ edx + 0x8 ] esi
cmp [ ecx ] si
je r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + edi * 4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
mov eax 0x7f
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edx
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1a ] si
call sub_40b6d0
mov eax [ ebp - 0x8 ]
xor esi esi
fldz
fld [ r--data ]
fld [ r--data ]
fld [ r--data ]
mov eax [ edx + 0x4 ]
inc edi
mov [ eax + edi * 4 - 0x4 ] esi
cmp edi [ edx + 0x8 ]
jb r-xdata
movzx ecx [ eax + 0x8 ]
cmp cx 0x3f
jg r-xdata
mov eax [ ebp - 0x1c ]
add eax 0xffffffd0
cmp ax 0xf
jbe r-xdata
push eax
call j_sub_4228ca#2
add esp 0x4
push ebx
call j_sub_4228ca#2
add esp 0x4
inc esi
jmp r-xdata
cmp eax 0x9
je r-xdata
push eax
call j_sub_4228ca#2
mov edx [ ebp + 0x10 ]
add esp 0x4
cmp cx 0x30
jge r-xdata
mov ecx [ ebp - 0x24 ]
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx eax [ ecx + esi * 2 ]
cmp eax 0x20
je r-xdata
movzx eax [ ecx + esi * 2 ]
mov [ ebp - 0xc ] esi
test ax ax
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
test ecx ecx
je r-xdata
push ecx
call sub_401926
jmp r-xdata
mov ax [ ebp - 0x1c ]
fstp st3
fstp st1
fstp st0
fstp st0
cmp ax 0x30
jge r-xdata
mov edi eax
mov [ ebp - 0x1a ] si
cmp edi 0x30
jb r-xdata
mov eax [ ecx + 0xc ]
dec [ eax ]
mov eax [ ecx + 0xc ]
cmp [ eax ] esi
je r-xdata
cmp ax 0x3f
jg r-xdata
mov edx [ ebp + 0x10 ]
cmp edi 0x2e
je r-xdata
cmp edi 0x39
jbe r-xdata
push [ ecx ]
call j_sub_4228ca#2
mov eax [ ebp - 0xc ]
add esp 0x4
push [ eax + 0xc ]
call j_sub_4228ca#2
mov ecx [ ebp - 0xc ]
add esp 0x4
jmp r-xdata
push ecx
call j_sub_4228ca#2
mov eax [ ebp - 0x10 ]
add esp 0x4
jmp r-xdata
mov ebx [ ebp - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ edx + 0x8 ]
fstp st3
fstp st1
mov esi 0x40
fstp st0
mov [ ebp - 0x10 ] ecx
fstp st0
test ecx ecx
je r-xdata
cmp edi 0x41
jae r-xdata
mov ecx ebx
call sub_405cd3
push ebx
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ebx [ ebp + 0xc ]
push esi
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_40b99b
cmp al 0x1
jne r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movzx esi [ eax + 0x8 ]
cmp edi 0x5a
ja r-xdata
cmp edi 0x61
jae r-xdata
mov esi [ ebp - 0xc ]
cmp edi 0x2e
jne r-xdata
cmp si 0x4a
je r-xdata
lea eax [ ebp - 0x34 ]
fstp st3
push eax
fstp st1
lea eax [ ebp - 0x24 ]
fstp st0
push eax
fstp st0
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
call sub_40aa70
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
cmp edi 0x7a
jbe r-xdata
cmp edi 0x5f
je r-xdata
fldz
mov ebx [ ebp - 0x34 ]
fld [ r--data ]
mov ecx [ ebp + 0xc ]
fld [ r--data ]
mov edx [ ebp + 0x10 ]
fld [ r--data ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
inc esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0xc ] esi
call sub_40c4cd
cmp [ ebp - 0x1c ] 0x5
jne r-xdata
mov ecx [ ebp + 0x10 ]
push [ ebp - 0xc ]
push 0x138c
push [ ebp + 0x8 ]
call sub_443110
mov eax [ ebp - 0x34 ]
or esi 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
mov ebx [ ebp - 0x34 ]
mov esi [ ebp - 0xc ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
jmp r-xdata
mov eax edi
cmp eax 0x24
je r-xdata
cmp ax 0x41
jae r-xdata
cmp ax 0x61
jb r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x10 ]
neg ecx
adc eax 0x0
neg eax
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 - 0x4 ]
mov edx 0x49
mov [ eax + 0x8 ] dx
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fld [ r--data ]
mov edx [ ebp + 0x10 ]
fld [ r--data ]
fld [ r--data ]
mov ebx [ ebp - 0x28 ]
dec [ ebx ]
jne r-xdata
push edx
call sub_40b875
test eax eax
js r-xdata
cmp eax 0x3d
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_40bd2f
inc esi
jmp r-xdata
jmp r-xdata
cmp ax 0x30
jae r-xdata
cmp ax 0x7a
ja r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
mov ebx [ ebp - 0x34 ]
mov esi [ ebp - 0xc ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
fstp st3
push esi
fstp st1
fstp st0
fstp st0
cmp edi 0x24
jne r-xdata
fstp st3
inc esi
fstp st1
mov [ ebp - 0xc ] esi
cmp [ ecx + esi * 2 ] 0x3d
fstp st0
fstp st0
lea ecx [ ebp - 0x24 ]
je r-xdata
sub eax 0x1a
cmp eax 0x44
ja r-xdata
movzx eax [ ebx + esi * 2 ]
cmp ax 0x5a
jbe r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x5f
je r-xdata
mov edi 0x32
jmp r-xdata
mov edi 0x33
push 0x50
call sub_40b7ff
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x41
call sub_40b7ff
jmp r-xdata
fstp st3
push esi
fstp st1
push 0x1388
push [ ebp + 0x8 ]
fstp st0
fstp st0
call sub_443110
push 0x7f
lea ecx [ ebp - 0x24 ]
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
mov eax [ ebp - 0x8 ]
or esi 0xffffffff
jmp r-xdata
movzx eax [ eax + lookup_table_40b684 ]
jmp [ eax * 4 + jump_table_40b638 ]
jmp r-xdata
cmp ax 0x7f
ja r-xdata
mov eax [ ebp - 0x1c ]
add eax 0xffffffd0
cmp ax 0xf
jbe r-xdata
mov ecx [ ebp - 0x24 ]
test ecx ecx
je r-xdata
lea eax [ edi - 0x30 ]
mov [ ebp - 0x1c ] di
mov [ ebp - 0x18 ] eax
cmp ax 0xf
ja r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
fstp st3
push 0x40
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
fstp st3
push 0x47
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
fstp st3
push 0x48
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
fstp st3
push 0x4e
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
fstp st3
push 0x4f
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
lea eax [ ebp - 0x34 ]
fstp st3
push eax
fstp st1
lea eax [ ebp - 0xc ]
fstp st0
push eax
fstp st0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bcb6
lea ecx [ ebp - 0x24 ]
test eax eax
js r-xdata
fstp st3
push 0x49
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov eax [ ebp + 0xc ]
inc esi
mov [ ebp - 0xc ] esi
cmp [ eax + esi * 2 ] 0x3d
jne r-xdata
fstp st3
push 0x4d
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov eax [ ebp + 0xc ]
inc esi
mov [ ebp - 0xc ] esi
cmp [ eax + esi * 2 ] 0x3d
jne r-xdata
fstp st3
push 0x4a
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov eax [ ebp + 0xc ]
inc esi
mov [ ebp - 0xc ] esi
cmp [ eax + esi * 2 ] 0x3d
jne r-xdata
mov eax [ ebp + 0xc ]
fstp st3
inc esi
fstp st1
fstp st0
mov [ ebp - 0xc ] esi
movzx eax [ eax + esi * 2 ]
fstp st0
lea ecx [ ebp - 0x24 ]
sub eax 0x3d
je r-xdata
fstp st3
push 0x4c
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov eax [ ebp + 0xc ]
inc esi
mov [ ebp - 0xc ] esi
cmp [ eax + esi * 2 ] 0x3d
jne r-xdata
mov eax [ ebp + 0xc ]
fstp st3
fstp st1
inc esi
fstp st0
mov [ ebp - 0xc ] esi
cmp [ eax + esi * 2 ] 0x3d
fstp st0
lea ecx [ ebp - 0x24 ]
je r-xdata
fstp st3
push 0x4b
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov eax [ ebp + 0xc ]
inc esi
mov [ ebp - 0xc ] esi
cmp [ eax + esi * 2 ] 0x3d
jne r-xdata
fstp st3
push 0x57
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
fstp st3
push 0x58
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
fstp st3
push 0x51
fstp st1
lea ecx [ ebp - 0x24 ]
fstp st0
fstp st0
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
test esi esi
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
mov [ ebp - 0xc ] esi
je r-xdata
fstp st3
push ecx
fstp st1
fstp st0
fstp st0
call sub_401926
fldz
fld [ r--data ]
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
cmp di 0x10
jne r-xdata
fstp st3
mov [ ebp - 0x24 ] 0x0
push 0x7f
call sub_40b7ff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
mov eax [ ebp - 0x34 ]
or esi 0xffffffff
jmp r-xdata
push 0x36
call sub_40b7ff
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_41df08
jmp r-xdata
inc esi
push 0x52
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0xc ] esi
call sub_40b7ff
jmp r-xdata
inc esi
push 0x56
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0xc ] esi
call sub_40b7ff
jmp r-xdata
inc esi
push 0x53
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0xc ] esi
call sub_40b7ff
jmp r-xdata
push 0x46
call sub_40b7ff
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
dec eax
je r-xdata
inc esi
push 0x55
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0xc ] esi
call sub_40b7ff
jmp r-xdata
push 0x45
call sub_40b7ff
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x42
call sub_40b7ff
jmp r-xdata
jmp r-xdata
cmp [ ecx + 0x2 ] si
jne r-xdata
lea eax [ esi - 0x1 ]
push eax
push 0x138b
push [ ebp + 0x8 ]
call sub_443110
mov eax [ ebp - 0x34 ]
or esi 0xffffffff
jmp r-xdata
push 0x35
lea ecx [ ebp - 0x24 ]
call sub_40b7ff
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_41df08
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_40b6d0
mov ebx [ ebp - 0x34 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp di 0x20
jne r-xdata
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
fstp st1
dec eax
fstp st0
push 0x4
fstp st0
mov [ ecx ] eax
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
xor edi edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x30 ] edi
movzx ebx [ eax + esi * 2 ]
jmp r-xdata
push 0x44
call sub_40b7ff
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x43
call sub_40b7ff
jmp r-xdata
inc esi
push 0x54
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0xc ] esi
call sub_40b7ff
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jl r-xdata
fxch st3
fstp [ ebp - 0x24 ]
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov [ eax ] 0x1
mov [ ebp - 0x28 ] eax
cmp bx 0x5a
jbe r-xdata
mov esi 0x1
mov [ ebp - 0xc ] esi
jmp r-xdata
mov ecx [ ebp - 0x28 ]
inc esi
mov eax [ ecx ]
mov [ ebp - 0xc ] esi
cmp eax 0x1
jg r-xdata
xor ecx ecx
mov eax 0x8
mov edx 0x2
mul edx
seto cl
mov [ ebp - 0x2c ] 0x8
neg ecx
or ecx eax
push ecx
call sub_41fa89
fld [ r--data ]
fld [ r--data ]
mov ebx eax
fld [ r--data ]
add esp 0x4
fxch st2
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] ebx
fxch st1
jmp r-xdata
cmp bx 0x41
jae r-xdata
cmp bx 0x61
jb r-xdata
cmp [ ecx + esi * 2 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
jmp r-xdata
cmp bx 0x30
jae r-xdata
cmp bx 0x7a
ja r-xdata
fstp st1
dec eax
mov [ ecx ] eax
fstp st0
lea ecx [ ebp - 0x34 ]
fstp st0
call sub_40a6f8
mov edi [ ebp - 0x30 ]
lea eax [ edi + 0x2 ]
push eax
call sub_40c91c
xor ecx ecx
mov [ ebp - 0x2c ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx eax
add esp 0x4
lea eax [ edi * 2 + 0x2 ]
push eax
push [ ebp - 0x34 ]
mov [ ebp - 0x8 ] ecx
push ecx
call sub_41faa0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x2c ]
add esp 0xc
mov [ ebp - 0x34 ] eax
jmp r-xdata
lea eax [ edi + 0x2 ]
cmp edx eax
jb r-xdata
cmp bx 0x39
ja r-xdata
cmp bx 0x5f
je r-xdata
fld [ r--data ]
mov [ eax + edi * 2 ] bx
fld [ r--data ]
inc edi
fld [ r--data ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ ebp + 0xc ]
inc esi
mov [ ebp - 0x30 ] edi
movzx ebx [ eax + esi * 2 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp eax 0x41c2
jae r-xdata
mov eax [ ebp - 0x8 ]
fstp st1
fstp st0
fstp st0
jmp r-xdata
fstp st1
fstp st0
fstp st0
test edi edi
je r-xdata
fxch st2
fxch st1
cmp eax 0x2000000
jae r-xdata
fstp st1
add eax eax
fstp st0
fstp st0
lea eax [ esi - 0x1 ]
push eax
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40b8a7
mov edi [ ebp - 0x30 ]
mov ebx [ ebp - 0x34 ]
push edi
push ebx
mov [ ebp - 0x8 ] ebx
call [ CharUpperBuffW@IAT ]
cmp [ ebp - 0x18 ] 0xf
ja r-xdata
fstp st1
cmp eax 0x8000000
jae r-xdata
fstp st0
mov [ ebp - 0x10 ] eax
fstp st1
fild [ ebp - 0x10 ]
test eax eax
jns r-xdata
mov eax edx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x34 ] eax
jmp r-xdata
lea ecx [ edi * 2 + 0x2 ]
push ecx
push eax
push edx
call sub_41faa0
mov ecx [ ebp - 0x8 ]
add esp 0xc
push ecx
call j_sub_4228ca
mov edx [ ebp - 0x10 ]
add esp 0x4
push 0x138b
push [ ebp + 0x8 ]
call sub_443110
mov eax [ ebp - 0x8 ]
or esi 0xffffffff
jmp r-xdata
push 0x10
call sub_42010a
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x24 ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x10 ] eax
fstp st0
fild [ ebp - 0x10 ]
test eax eax
jns r-xdata
mov [ ebp - 0x10 ] eax
fstp st1
fild [ ebp - 0x10 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x14 ]
fmul [ ebp - 0x14 ]
mov ecx [ ebp - 0x34 ]
mov esi [ ebp - 0xc ]
fnstcw [ ebp - 0x6 ]
movzx eax [ ebp - 0x6 ]
mov edi [ ebp - 0x30 ]
or eax 0xc00
mov [ ebp - 0x10 ] eax
fldcw [ ebp - 0x10 ]
fistp [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
fldcw [ ebp - 0x6 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
fadd [ r--data ]
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x28 ]
mov [ ecx ] ebx
mov [ ecx + 0x4 ] edi
mov [ ecx + 0xc ] eax
inc [ eax ]
mov [ ebp - 0x24 ] ecx
push ecx
call sub_401926
jmp r-xdata
fstp [ ebp - 0x14 ]
fmul [ ebp - 0x14 ]
mov ecx [ ebp - 0x34 ]
mov esi [ ebp - 0xc ]
fnstcw [ ebp - 0x6 ]
movzx eax [ ebp - 0x6 ]
mov edi [ ebp - 0x30 ]
or eax 0xc00
mov [ ebp - 0x10 ] eax
fldcw [ ebp - 0x10 ]
fistp [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
fldcw [ ebp - 0x6 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
fadd [ r--data ]
fstp [ ebp - 0x14 ]
fmul [ ebp - 0x14 ]
mov ecx [ ebp - 0x34 ]
mov esi [ ebp - 0xc ]
fnstcw [ ebp - 0x6 ]
movzx eax [ ebp - 0x6 ]
mov edi [ ebp - 0x30 ]
or eax 0xc00
mov [ ebp - 0x10 ] eax
fldcw [ ebp - 0x10 ]
fistp [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
fldcw [ ebp - 0x6 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
fadd [ r--data ]
push eax
call sub_40c91c
xor ecx ecx
mov [ ebp - 0x2c ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
mov edx eax
mov eax [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x10 ] edx
test eax eax
je r-xdata
sub_40b697
or [ edx ] dl
or [ edx ] edx
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc cl [ edx ]
adc cl [ ebx ]
adc cl [ ecx + 0x1212120e ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc cl [ edi ]
adc dl [ eax ]
adc esp ecx
int3
sub_40b6d0
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
cmp eax 0x8
jb r-xdata
push 0xc
call sub_42010a
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov eax 0x8
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ esi + 0x4 ]
add esp 0x4
mov edi eax
test ecx ecx
je r-xdata
xor edi edi
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
movzx ecx [ ebx + 0x8 ]
mov [ edi + 0x8 ] cx
movzx eax [ edi + 0x8 ]
movzx ecx [ ebx + 0xa ]
mov [ edi + 0xa ] cx
cmp ax 0x3f
jg r-xdata
mov [ esi + 0x4 ] edi
jmp r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
cmp ax 0x10
je r-xdata
cmp ax 0x30
jge r-xdata
shl eax 0x2
push eax
push ecx
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
push 0x10
call sub_42010a
mov edx eax
add esp 0x4
test edx edx
je r-xdata
pop ebx
fld [ ebx ]
pop ebx
fstp [ edi ]
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ebx ]
mov [ edi ] eax
xor edx edx
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov [ edi ] edx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
pop ebx
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_40b7ff
push ebp
mov ebp esp
push ebx
push esi
push 0x3f
mov esi ecx
pop ecx
movzx eax [ esi + 0x8 ]
push 0x30
pop edx
xor ebx ebx
cmp ax dx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] ax
cmp ax cx
jle r-xdata
cmp ax cx
jg r-xdata
cmp ax dx
jl r-xdata
cmp ax 0x10
je r-xdata
push edi
mov edi [ esi ]
test edi edi
je r-xdata
jmp r-xdata
mov [ esi + 0x4 ] ebx
jmp r-xdata
cmp ax 0x20
je r-xdata
mov [ esi ] ebx
pop edi
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] ebx
je r-xdata
mov [ esi ] ebx
fldz
fstp [ esi ]
jmp r-xdata
push [ edi ]
call j_sub_4228ca#2
push [ edi + 0xc ]
call j_sub_4228ca#2
pop ecx
pop ecx
jmp r-xdata
push edi
call j_sub_4228ca#2
pop ecx
push 0x3f
pop ecx
push 0x30
pop edx
pop esi
pop ebx
pop ebp
retn 0x4
sub_40b875
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov edx [ eax + 0x8 ]
push esi
or esi 0xffffffff
push edi
test edx edx
je r-xdata
xor esi esi
mov ebx [ eax + 0x4 ]
mov ecx [ ebx + edx * 4 - 0x4 ]
call sub_40b911
test al al
je r-xdata
cmp [ ecx + 0x8 ] 0x5
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
cmp edx 0x2
jbe r-xdata
mov eax [ ebx + edx * 4 - 0x8 ]
movzx edi [ eax + 0x8 ]
mov eax [ ebx + edx * 4 - 0xc ]
movzx eax [ eax + 0x8 ]
cmp di 0x49
je r-xdata
cmp edx 0x3
jbe r-xdata
cmp di 0x4a
je r-xdata
push 0x30
pop ecx
test ax ax
je r-xdata
cmp di 0x4c
je r-xdata
mov eax [ ebx + edx * 4 - 0x10 ]
movzx eax [ eax + 0x8 ]
cmp ax cx
jne r-xdata
push 0x30
pop ecx
test di di
je r-xdata
cmp ax cx
jne r-xdata
test ax ax
je r-xdata
cmp di cx
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_40b8a7
push esi
push edi
mov edi ecx
xor esi esi
mov ecx [ edi + 0xc ]
inc esi
mov eax [ ecx ]
cmp eax esi
jg r-xdata
dec eax
push 0x4
mov [ ecx ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
xor eax eax
jmp r-xdata
mov [ eax ] esi
push ebx
mov ebx [ edi + 0x4 ]
mov [ edi + 0xc ] eax
inc ebx
je r-xdata
push 0x8
pop eax
jmp r-xdata
lea eax [ ebx + 0x7 ]
and eax 0xfffffff8
xor ecx ecx
push 0x2
pop edx
mov [ edi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
lea ecx [ ebx + ebx ]
push ecx
push [ edi ]
mov esi eax
push esi
call sub_41faa0
add esp 0x10
mov [ edi ] esi
pop ebx
jmp r-xdata
sub_40b911
movzx eax [ ecx + 0x8 ]
cmp ax 0x40
jl r-xdata
test ax ax
je r-xdata
cmp ax 0x5f
jg r-xdata
xor eax eax
inc eax
retn
cmp ax 0x30
je r-xdata
xor eax eax
retn
sub_40b933
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
test edx edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ecx ]
cmp edx eax
jb r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
push eax
jmp r-xdata
push edx
mov edx [ esi ]
call sub_40b96c
pop ecx
sub_40b96c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
pop esi
pop ebp
retn
movzx eax [ ecx ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
sub_40b99b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ecx edi
call sub_40c4cd
mov esi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
push 0x30
pop eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
cmp [ edx + ecx * 2 ] ax
je r-xdata
movzx eax [ edx + ecx * 2 + 0x2 ]
cmp eax 0x78
je r-xdata
push 0x17
mov [ ebp + 0x17 ] 0x0
pop ebx
mov ebx [ ebp + 0x14 ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
xor edi edi
cmp eax 0x58
jne r-xdata
test bl 0x2
je r-xdata
cmp eax 0x2b
je r-xdata
cmp eax 0x61
jae r-xdata
cmp ax cx
ja r-xdata
mov al 0x1
mov [ ebp + 0x17 ] al
jmp r-xdata
push 0x25
test bl 0x8
je r-xdata
cmp eax 0x2d
je r-xdata
cmp eax 0x66
jbe r-xdata
push 0x41
pop ecx
cmp ax cx
jae r-xdata
push eax
lea eax [ edx + 0x1 ]
mov ecx ebx
mov [ esi ] eax
call sub_40bd2f
inc edi
jmp r-xdata
test bl 0x20
je r-xdata
mov al [ ebp + 0x17 ]
push 0x31
pop ebx
jmp r-xdata
cmp eax 0x2f
jle r-xdata
jmp r-xdata
cmp eax 0x46
jbe r-xdata
mov ecx [ ebx ]
push 0x10
lea edx [ ebp - 0x8 ]
call sub_41bcea
pop ecx
test al al
je r-xdata
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
push 0x39
movzx eax [ eax + edx * 2 ]
pop ecx
cmp ax [ ebp - 0x4 ]
jb r-xdata
test bl 0x10
jne r-xdata
mov eax [ esi ]
movzx ecx [ edx + eax * 2 ]
inc eax
push ecx
mov ecx edi
mov [ esi ] eax
call sub_40bd2f
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
and ebx 0xffffffdf
jmp r-xdata
and eax 0xffffffdf
cmp eax 0x41
jge r-xdata
cmp eax 0x39
jg r-xdata
jmp r-xdata
xor al al
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
cmp edi 0x8
jg r-xdata
test al al
jne r-xdata
mov eax [ esi ]
movzx eax [ edx + eax * 2 ]
mov [ ebp - 0x4 ] eax
movzx eax ax
cmp eax 0x2e
je r-xdata
cmp eax 0x5a
jg r-xdata
cmp [ ebp - 0x4 ] 0x5f
jne r-xdata
cmp eax 0x45
je r-xdata
and ebx 0xffffffef
or ebx 0x20
pop edi
pop esi
pop ebx
leave
retn 0x14
push 0x10
jmp r-xdata
push 0x5
mov edx r--data
mov ecx edi
call sub_41f885
test al al
jne r-xdata
push [ edi ]
call sub_42224a
mov edi eax
xor eax eax
cmp [ ebp + 0x18 ] 0x4a
pop ecx
mov ebx edx
mov ecx 0x7fffffff
je r-xdata
jmp r-xdata
mov al [ ebp + 0x17 ]
test ebx 0xfffffffd
je r-xdata
mov eax ebx
and al 0x14
cmp al 0x4
jne r-xdata
cmp eax 0x65
je r-xdata
call sub_40b7ff
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov al 0x1
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov esi [ ebp + 0x10 ]
push 0x20
mov ecx esi
call sub_40b7ff
push [ edi ]
call sub_422d13
fstp [ esi ]
pop ecx
jmp r-xdata
mov ecx 0x80000000
xor eax eax
jmp r-xdata
cmp ebx eax
jg r-xdata
or ebx 0x10
mov [ esi ] ecx
jmp r-xdata
push 0x39
jmp r-xdata
mov esi [ ebp + 0x10 ]
push 0x10
mov ecx esi
call sub_40b7ff
jmp r-xdata
jl r-xdata
pop ebx
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov esi [ ebp + 0x10 ]
push 0x30
movzx eax [ esi + 0x8 ]
pop ecx
cmp ax 0x3f
jle r-xdata
cmp edi ecx
ja r-xdata
cmp ax cx
jl r-xdata
and [ esi ] 0x0
push 0x5
pop eax
mov [ esi + 0x8 ] ax
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ecx
call sub_401926
sub_40bbd9
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ edx + 0x4 ]
jae r-xdata
cmp ebx 0xffffffff
jne r-xdata
lea eax [ ecx + ebx ]
cmp eax [ edx + 0x4 ]
jbe r-xdata
mov ebx [ edx + 0x4 ]
sub ebx ecx
mov ecx [ edi + 0xc ]
push esi
mov eax [ ecx ]
xor esi esi
inc esi
cmp eax esi
jg r-xdata
jmp r-xdata
dec eax
push 0x4
mov [ ecx ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
add eax ebx
push eax
mov ecx edi
call sub_40bd71
xor eax eax
jmp r-xdata
mov [ eax ] esi
mov [ edi + 0xc ] eax
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
mov [ edi + 0x8 ] eax
je r-xdata
push 0x8
pop eax
jmp r-xdata
add eax 0x7
and eax 0xfffffff8
xor ecx ecx
push 0x2
pop edx
mov [ edi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_41faa0
add esp 0x10
mov [ edi ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebx + ebx ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea eax [ eax + ecx * 2 ]
mov ecx [ edi + 0x4 ]
push eax
mov eax [ edi ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_41faa0
add [ edi + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
add esp 0xc
xor edx edx
mov [ eax + ecx * 2 ] dx
pop esi
sub_40bcb6
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x14 ]
push ebx
push esi
push edi
call sub_40c4cd
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov ebx [ esi ]
xor ecx ecx
movzx edx [ edi + ebx * 2 ]
lea eax [ ebx + 0x1 ]
mov [ ebp + 0x10 ] edx
mov [ esi ] eax
cmp [ edi + eax * 2 ] cx
je r-xdata
push ebx
push 0x138a
push [ ebp + 0x8 ]
call sub_443110
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi ]
movzx eax [ edi + ecx * 2 ]
cmp ax dx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + ecx * 2 + 0x2 ] dx
je r-xdata
mov ecx [ ebp + 0x14 ]
push eax
call sub_40bd2f
inc [ esi ]
mov ecx [ ebp + 0x14 ]
push eax
call sub_40bd2f
add [ esi ] 0x2
jmp r-xdata
inc [ esi ]
xor eax eax
mov edx [ ebp + 0x10 ]
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
cmp [ edi + eax * 2 ] cx
je r-xdata
sub_40bd2f
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
push esi
mov ecx edi
call sub_40a6f8
mov eax [ edi + 0x4 ]
push 0x2
pop esi
add eax esi
push eax
call sub_40c91c
xor ecx ecx
mov [ edi + 0x8 ] eax
mul esi
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_41faa0
add esp 0x10
mov [ edi ] esi
pop esi
jmp r-xdata
mov eax [ edi + 0x4 ]
inc eax
push eax
mov ecx edi
call sub_40bd71
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
mov ax [ ebp + 0x8 ]
mov [ ecx + edx * 2 ] ax
inc [ edi + 0x4 ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax edi
pop edi
pop ebp
retn 0x4
sub_40bd71
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
inc eax
cmp [ esi + 0x8 ] eax
jb r-xdata
cmp eax 0x41c2
jae r-xdata
pop esi
leave
retn 0x4
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp eax 0x8000000
jae r-xdata
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
push 0x8
pop eax
jmp r-xdata
add eax 0x7
and eax 0xfffffff8
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
push edi
xor ecx ecx
push 0x2
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
cmp [ esi ] 0x0
pop ecx
mov edi eax
je r-xdata
mov [ esi ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ esi ]
push edi
call sub_41faa0
push [ esi ]
call j_sub_4228ca
add esp 0x10
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
call sub_471e16
jmp r-xdata
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
sub_40bdf0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x2d0c
call sub_430650
mov eax [ rw-data ]
push ebx
push esi
inc eax
push edi
mov edi ecx
mov [ esp + 0x18 ] edi
mov [ rw-data ] eax
cmp eax 0x30
jge r-xdata
push [ ebp + 0x14 ]
push r--data
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
call sub_4432b0
xor al al
jmp r-xdata
mov bh 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x10 ] 0x0
mov [ esp + 0xf ] bh
mov [ esp + 0xe ] bh
mov [ esp + 0x14 ] 0x0
call sub_405080
mov esi [ ebp + 0x8 ]
push esi
lea ecx [ esp + 0x80 ]
call sub_40caee
push 0x2000
lea eax [ esp + 0x80 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_404bf9
test al al
je r-xdata
dec [ rw-data ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov bl 0x1
jmp r-xdata
xor bl bl
lea ecx [ esp + 0x7c ]
call sub_405cd3
test bl bl
jne r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push r--data
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
call sub_4432b0
xor bh bh
jmp r-xdata
lea eax [ esp + 0x6f8 ]
push eax
push 0x104
call [ GetCurrentDirectoryW@IAT ]
lea eax [ esp + 0xa4 ]
push eax
lea eax [ esp + 0x2e4 ]
push eax
push 0x104
push esi
call [ GetFullPathNameW@IAT ]
mov edi [ esp + 0x50 ]
mov esi [ esp + 0x54 ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x90 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x34 ] 0x18
call sub_403d65
push 0x0
push esi
push edi
lea ecx [ esp + 0x4c ]
call sub_404ee9
cmp [ esp + 0x9c ] 0x21335541
je r-xdata
lea ecx [ esp + 0x40 ]
call sub_4050c2
mov al bh
cmp [ esp + 0xa0 ] 0x36304145
jne r-xdata
lea eax [ esp + 0x2b10 ]
push eax
lea eax [ esp + 0x290c ]
push eax
lea eax [ esp + 0x4f8 ]
push eax
lea eax [ esp + 0xb4 ]
push eax
lea eax [ esp + 0x2f0 ]
push eax
call sub_42297d
add esp 0x14
lea eax [ esp + 0xa8 ]
push eax
lea eax [ esp + 0xd4 ]
push eax
call sub_421943
lea eax [ esp + 0x4f8 ]
push eax
lea eax [ esp + 0xdc ]
push eax
call sub_421914
add esp 0x10
lea eax [ esp + 0xd0 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov al [ esp + 0xe ]
lea ecx [ esp + 0x40 ]
call sub_4050ec
push 0x2
push [ ebp + 0x8 ]
lea ecx [ esp + 0x94 ]
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x78 ] 0x0
mov [ esp + 0xa0 ] 0x0
mov [ esp + 0xa4 ] 0x0
mov [ esp + 0xa8 ] 0x0
call sub_403f9b
test eax eax
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_4050ec
lea eax [ esp + 0x6f8 ]
push eax
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x74 ] 0x0
call [ SetCurrentDirectoryW@IAT ]
xor eax eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x908 ] ax
call sub_40c4cd
mov eax [ esp + 0x6c ]
test al 0x3
jne r-xdata
push [ ebp + 0x14 ]
mov ecx [ esp + 0x1c ]
push r--data
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
call sub_4432b0
xor bh bh
jmp r-xdata
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x14 ]
push eax
push r--data
lea ecx [ esp + 0x98 ]
call sub_44cc82
lea ecx [ esp + 0x8c ]
test eax eax
je r-xdata
lea eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_446538
jmp r-xdata
test al 0x4
jne r-xdata
call sub_403e39
mov ebx [ esp + 0x10 ]
push 0x10
mov eax [ ebx ]
mov [ esp + 0x38 ] eax
or eax 0xffffffff
mov esi 0x4
mov [ esp + 0x28 ] ax
mov [ esp + 0x80 ] r--data
mov [ esp + 0x84 ] 0x0
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x8c ] 0x0
call sub_42010a
mov edi eax
add esp 0x4
test edi edi
je r-xdata
call sub_403e39
test al al
je r-xdata
lea eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_446636
jmp r-xdata
push 0x10
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x28 ] 0x10
call sub_42010a
add esp 0x4
mov [ esp + 0x1c ] eax
push 0x4
mov [ eax ] 0x0
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
xor edi edi
mov [ edi ] r--data
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
jmp r-xdata
mov esi [ esp + 0x5c ]
cmp esi 0xffe
ja r-xdata
mov [ esp + 0x28 ] 0x0
jmp r-xdata
mov [ eax ] 0x1
mov [ esp + 0x28 ] eax
push 0x5
lea ecx [ esp + 0x20 ]
call sub_40b7ff
mov eax [ esp + 0x38 ]
mov ecx [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov ecx [ ecx ]
lea eax [ esp + 0x1c ]
push eax
call sub_44a485
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x2c ]
push eax
lea ecx [ ecx + 0x48 ]
call sub_4628d9
push ebx
call sub_4228ca
add esp 0x4
mov bh 0x1
lea eax [ esi + ebx ]
inc esi
movzx eax [ eax ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x40 ] eax
call sub_40b7ff
lea ecx [ esp + 0x1c ]
call sub_44a5be
test al al
je r-xdata
or eax 0xffffffff
push 0x5
lea ecx [ esp + 0x20 ]
mov [ esp + 0x30 ] edi
mov [ esp + 0x2a ] ax
call sub_40b7ff
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
mov ecx edi
call sub_40b6d0
cmp [ esp + 0x34 ] 0x1
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x30 ] 0x1
jl r-xdata
lea ecx [ esp + 0x58 ]
add esi 0xfffff002
call sub_40b8a7
mov edi [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
sub edi esi
lea eax [ edi * 2 - 0x1ffa ]
push eax
lea eax [ ebx + 0x1ffc ]
lea eax [ eax + esi * 2 ]
push eax
lea eax [ ebx + 0x1ffc ]
push eax
call sub_41faa0
add esp 0xc
mov [ esp + 0x5c ] edi
jmp r-xdata
mov ebx [ esp + 0x58 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x44 ]
call sub_40c320
test al al
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_40c610
lea ecx [ esp + 0x1c ]
call sub_405cd3
mov al 0x1
mov esi [ esp + 0x28 ]
dec [ esi ]
jne r-xdata
lea ecx [ esp + 0x1c ]
call sub_44a5a8
test al al
je r-xdata
lea eax [ esi + ebx ]
add esi 0x4
mov eax [ eax ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea eax [ esp + 0x908 ]
push ebx
push eax
call sub_421943
inc [ esp + 0x18 ]
add esp 0x8
xor esi esi
xor edi edi
mov edi edi
cmp [ esp + esi * 2 + 0x908 ] di
je r-xdata
push ebx
call sub_4222f0
add esp 0x4
test eax eax
je r-xdata
xor al al
jmp r-xdata
push [ esp + 0x1c ]
call j_sub_4228ca#2
add esp 0x4
push esi
call j_sub_4228ca#2
add esp 0x4
lea ecx [ esp + 0x1c ]
call sub_44a592
test al al
je r-xdata
mov eax [ esi + ebx ]
lea ecx [ esi + ebx ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x4 ]
add esi 0x8
mov [ esp + 0x20 ] eax
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
mov ecx edi
call sub_40b6d0
cmp [ esp + 0x3c ] 0x7f
jne r-xdata
xor eax eax
mov [ esp + edi * 2 + 0x908 ] ax
lea eax [ esp + 0x908 ]
push eax
call sub_40c530
test al al
lea eax [ esp + 0x908 ]
push eax
je r-xdata
nop
inc esi
jmp r-xdata
lea ecx [ esp + 0x1c ]
call sub_41df5b
test al al
je r-xdata
fld [ esi + ebx ]
lea eax [ esi + ebx ]
fstp [ esp + 0x1c ]
add esi 0x8
jmp r-xdata
mov ecx [ edi + 0x8 ]
cmp ecx 0x2
jbe r-xdata
mov ecx [ esp + 0x1c ]
push r--data
push [ esp + 0x18 ]
push [ ebp + 0x10 ]
call sub_4432b0
xor bh bh
jmp r-xdata
call sub_4218fb
add esp 0x4
test eax eax
je r-xdata
mov ax [ esp + esi * 2 + 0x908 ]
mov [ esp + edi * 2 + 0x908 ] ax
lea esi [ esi + 0x1 ]
inc edi
cmp [ esp + esi * 2 + 0x908 ] 0x0
jne r-xdata
movzx ebx [ esp + esi * 2 + 0x908 ]
push ebx
call sub_4222cd
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
push ebx
call sub_4430ac
mov ebx eax
mov eax [ esp + 0x3c ]
push ebx
cmp eax 0x31
jne r-xdata
mov ecx edi
call sub_44348f
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 - 0x8 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea eax [ esp + 0x908 ]
push eax
xor bl bl
call sub_4218fb
mov esi eax
add esp 0x4
cmp esi 0x2
jle r-xdata
lea esi [ eax - 0x1 ]
test esi esi
js r-xdata
cmp eax 0x30
jne r-xdata
lea ecx [ esp + 0xc4 ]
call sub_40caee
mov eax [ esp + 0x18 ]
push [ esp + 0xc0 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
lea ecx [ esp + 0xc0 ]
mov esi eax
call sub_405cd3
push 0x1
lea ecx [ esp + 0x20 ]
call sub_40b7ff
mov [ esp + 0x1c ] esi
jmp r-xdata
inc [ esp + 0x38 ]
mov eax 0x3b
mov [ esp + 0x14 ] ax
push 0xffffffff
lea eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x20 ]
mov ecx eax
push [ eax + 0x10 ]
call sub_442f5b
jmp r-xdata
cmp [ esp + 0x14 ] 0x1
je r-xdata
mov cx [ esp + esi * 2 + 0x904 ]
and cx 0x7f
movzx ecx cx
push ecx
call sub_4222f0
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
mov [ esp + esi * 2 + 0x90a ] ax
lea esp [ esp ]
cmp eax 0x37
jne r-xdata
lea ecx [ esp + 0xb4 ]
call sub_40caee
lea eax [ esp + 0xb0 ]
push eax
call sub_4434b4
lea ecx [ esp + 0xb0 ]
mov esi eax
call sub_405cd3
push 0x0
lea ecx [ esp + 0x20 ]
call sub_40b7ff
mov [ esp + 0x1c ] esi
jmp r-xdata
push ebx
call j_sub_4228ca#2
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
add esp 0x4
mov eax [ esp + 0x30 ]
inc eax
mov [ esp + 0x30 ] eax
cmp eax [ esp + 0x34 ]
jle r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x908 ]
push eax
call sub_41f7b2
jmp r-xdata
mov edi [ esp + 0x18 ]
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x2e8 ]
push eax
lea eax [ esp + 0x914 ]
push eax
mov ecx edi
call sub_40c714
cmp eax 0x3
jne r-xdata
cmp [ esp + esi * 2 + 0x906 ] 0x5f
jne r-xdata
push edi
call sub_4222f0
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_44a525
mov esi [ esp + 0x1c ]
mov ecx esi
call sub_442fcd
test eax eax
je r-xdata
mov bh [ esp + 0xf ]
sub eax 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
xor eax eax
mov [ esp + esi * 2 + 0x906 ] ax
mov bl 0x1
jmp r-xdata
dec esi
jns r-xdata
mov eax [ esp + 0x30 ]
push r--data
push r--data
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_4432b0
push ebx
call j_sub_4228ca#2
add esp 0x4
push [ esp + 0x10 ]
call sub_4228ca
add esp 0x4
xor bh bh
jmp r-xdata
push ebx
call j_sub_4228ca#2
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
add esp 0x4
jmp r-xdata
mov [ esp + 0x14 ] 0x1
jmp r-xdata
mov [ esp + 0x14 ] 0x0
xor bh bh
mov [ esp + 0xf ] bh
jmp r-xdata
sub eax 0x2
je r-xdata
push 0x10
call sub_42010a
add esp 0x4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
movzx edi [ esp + esi * 2 + 0x908 ]
push edi
call sub_4222cd
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
lea ecx [ esp + 0x7c ]
call sub_405800
lea ecx [ esp + 0x1c ]
call sub_44a46f
jmp r-xdata
cmp bh 0x1
je r-xdata
cmp al 0x1
jne r-xdata
mov al [ esp + 0xe ]
mov bh [ esp + 0xf ]
sub eax 0x2
jne r-xdata
mov eax [ edi + 0xc ]
mov [ eax + 0xc ] 0x0
lea eax [ esp + 0x908 ]
push eax
call sub_4218fb
xor ecx ecx
inc eax
add esp 0x4
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
add esp 0x4
lea eax [ esp + 0x908 ]
push eax
push esi
call sub_421943
mov ecx [ edi + 0xc ]
mov eax [ esp + 0x18 ]
mov [ ecx ] esi
mov ecx [ edi + 0xc ]
add esp 0x8
mov [ ecx + 0x4 ] eax
mov eax [ edi + 0xc ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
inc [ edi + 0x10 ]
push eax
call j_sub_4228ca#2
add esp 0x4
dec [ edi + 0x10 ]
jmp r-xdata
push 0x10
call sub_42010a
mov ecx [ edi + 0xc ]
add esp 0x4
mov [ ecx + 0xc ] eax
mov [ edi + 0xc ] eax
xor al al
mov [ esp + 0xe ] al
jmp r-xdata
cmp bl 0x1
je r-xdata
sub_40c320
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ ebx + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx ebx
call sub_40a6f8
push 0x10
mov [ ebx + 0x8 ] 0x10
call sub_42010a
add esp 0x4
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebx ]
mov [ ebx + 0x4 ] 0x0
mov [ eax ] 0x0
xor al al
mov [ ebp - 0x1 ] al
lea ecx [ ecx ]
mov ecx edi
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
call sub_404dc1
jmp r-xdata
xor esi esi
lea esp [ esp ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x10000
push [ edi + 0x4 ]
push [ edi ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
inc esi
mov al [ ecx + eax ]
mov [ ebp + esi + 0xa ] al
lea eax [ ecx + 0x1 ]
mov [ edi + 0xc ] eax
cmp esi 0x1
jb r-xdata
add [ edi + 0x10 ] esi
adc [ edi + 0x14 ] 0x0
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
je r-xdata
mov al [ ebp - 0x1 ]
test al al
jne r-xdata
mov al [ ebp + 0xb ]
mov [ ebp - 0x1 ] 0x1
cmp al 0xd
je r-xdata
jmp r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp al 0xa
je r-xdata
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] 0x0
jmp r-xdata
mov ecx edi
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
call sub_404dc1
jmp r-xdata
xor esi esi
jmp r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
je r-xdata
dec eax
mov [ ecx ] eax
mov ecx ebx
call sub_40a6f8
mov eax [ ebx + 0x4 ]
add eax 0x2
push eax
call sub_403d82
push eax
mov [ ebx + 0x8 ] eax
call sub_42010a
mov ecx [ ebx + 0x4 ]
inc ecx
push ecx
push [ ebx ]
mov esi eax
push esi
call sub_41faa0
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax 0x2
cmp [ ebx + 0x8 ] eax
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x10000
push [ edi + 0x4 ]
push [ edi ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
inc esi
mov al [ ecx + eax ]
mov [ ebp + esi + 0xa ] al
lea eax [ ecx + 0x1 ]
mov [ edi + 0xc ] eax
cmp esi 0x1
jb r-xdata
add esp 0x10
cmp eax 0x41c2
jae r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
mov al [ ebp + 0xb ]
mov [ edx + ecx ] al
inc [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov [ ecx + eax ] 0x0
jmp r-xdata
add [ edi + 0x10 ] esi
adc [ edi + 0x14 ] 0x0
test esi esi
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xb ] 0xa
jne r-xdata
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] 0x0
jmp r-xdata
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
test eax eax
jns r-xdata
mov eax 0x10
jmp r-xdata
add eax 0xf
and eax 0xfffffff0
push 0x1
push 0xffffffff
push 0xffffffff
mov ecx edi
call sub_404ee9
jmp r-xdata
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
test eax eax
jns r-xdata
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
test eax eax
jns r-xdata
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
fnstcw [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
or eax 0xc00
mov [ ebp - 0xc ] eax
fldcw [ ebp - 0xc ]
fistp [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
fldcw [ ebp - 0x4 ]
jmp r-xdata
fadd [ r--data ]
push eax
mov [ ebx + 0x8 ] eax
call sub_42010a
mov esi eax
mov eax [ ebx ]
add esp 0x4
test eax eax
je r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
inc ecx
push ecx
push eax
push esi
call sub_41faa0
push [ ebx ]
call j_sub_4228ca#2
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
fnstcw [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
or eax 0xc00
mov [ ebp - 0xc ] eax
fldcw [ ebp - 0xc ]
fistp [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
fldcw [ ebp - 0x4 ]
jmp r-xdata
fadd [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
fnstcw [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
or eax 0xc00
mov [ ebp - 0xc ] eax
fldcw [ ebp - 0xc ]
fistp [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
fldcw [ ebp - 0x4 ]
jmp r-xdata
fadd [ r--data ]
mov [ ebx + 0x8 ] eax
test eax eax
je r-xdata
sub_40c4cd
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
push 0x4
mov [ ecx ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
xor ecx ecx
mov [ eax ] cx
pop esi
retn
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
push 0x8
mov [ esi + 0xc ] eax
pop eax
xor ecx ecx
push 0x2
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_40c530
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x23
je r-xdata
push 0x8
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edi 0x3
add esi 0x2
jmp r-xdata
test edi edi
jne r-xdata
mov edi edi
cmp edi 0x3
je r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
cmp eax 0x22
je r-xdata
add esi 0x2
cmp [ esi ] 0x0
jne r-xdata
cmp edi 0x2
je r-xdata
cmp eax 0x27
je r-xdata
movzx eax [ esi ]
cmp eax 0x3b
jle r-xdata
xor edi edi
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
cmp eax 0x3b
jne r-xdata
mov edi 0x2
jmp r-xdata
xor edi edi
jmp r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi 0x1
jmp r-xdata
cmp edi 0x3
jne r-xdata
xor eax eax
mov [ esi ] ax
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
xor eax eax
mov [ esi ] ax
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_40c610
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x0
mov esi [ edi + 0x4 ]
push 0x0
inc esi
push esi
push [ edi ]
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40c4cd
jmp r-xdata
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push ebx
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
mov ebx eax
push [ ebp + 0x8 ]
push ebx
push esi
push [ edi ]
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
lea edi [ eax - 0x1 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
call sub_40a2fb
push ebx
call j_sub_4228ca#2
add esp 0x4
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
cmp edi 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx esi
call sub_40a6f8
lea eax [ edi + 0x1 ]
push eax
call sub_40c91c
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
mov [ esi ] eax
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ esi + 0x8 ] eax
jb r-xdata
mov [ esi + 0x4 ] edi
add edi edi
push edi
push ebx
push [ esi ]
call sub_41faa0
mov eax [ esi ]
add esp 0xc
xor ecx ecx
push ebx
mov [ edi + eax ] cx
call j_sub_4228ca#2
add esp 0x4
pop ebx
push eax
call sub_40c91c
mov [ esi + 0x8 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
xor ecx ecx
mov [ esi ] eax
mov [ eax + edi * 2 ] cx
jmp r-xdata
push eax
call j_sub_4228ca#2
add esp 0x4
sub_40c714
push ebp
mov ebp esp
mov eax 0x2004
call sub_430650
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi ] 0x23
mov edi ecx
je r-xdata
push 0xf
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
push 0x3
pop eax
xor eax eax
inc eax
jmp r-xdata
push 0xb
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov [ edi ] 0x1
jmp r-xdata
push 0xd
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
mov [ edi + 0x1 ] 0x1
jmp r-xdata
push 0x16
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
lea ecx [ esi + 0x2c ]
call sub_403bcf
mov ebx eax
push ebx
call sub_41dd27
push ebx
call sub_41dcee
push ebx
call sub_4218fb
pop ecx
movzx ecx [ ebx + eax * 2 - 0x2 ]
push 0x22
pop edx
cmp cx dx
je r-xdata
push 0xd
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
cmp [ ebx ] cx
jne r-xdata
push 0x27
pop edx
cmp cx dx
je r-xdata
xor esi esi
cmp [ edi + 0x20 ] esi
jbe r-xdata
push 0x8
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
push ebx
call j_sub_4228ca#2
pop ecx
push esi
push r--data
jmp r-xdata
xor ecx ecx
mov [ ebx + eax * 2 - 0x2 ] cx
mov ecx [ edi + 0x4 ]
lea eax [ ebx + 0x2 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
jmp r-xdata
movzx eax [ ebx ]
push 0x22
pop ecx
cmp ax cx
je r-xdata
mov eax [ edi + 0x1c ]
push [ ebp + 0xc ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x2000 ]
push eax
lea eax [ esi + 0x10 ]
push eax
mov ecx edi
call sub_41db8c
cmp al 0x1
mov eax [ ebp + 0x10 ]
mov ecx edi
jne r-xdata
push 0xf
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx edi
jmp r-xdata
push ebx
call j_sub_4228ca#2
pop ecx
jmp r-xdata
cmp ax dx
je r-xdata
mov eax [ edi + 0x2c ]
mov ecx [ eax + esi * 4 ]
xor eax eax
cmp [ ecx ] 0x1
setle al
dec eax
and eax 0x3
inc eax
jmp r-xdata
inc esi
cmp esi [ edi + 0x20 ]
jb r-xdata
push esi
push r--data
push [ eax ]
lea eax [ ebp - 0x2000 ]
push esi
push [ ebp + 0xc ]
push eax
call sub_403b45
push eax
lea eax [ ebp - 0x2000 ]
push eax
mov ecx edi
call sub_40bdf0
xor ecx ecx
test al al
setne cl
mov eax ecx
jmp r-xdata
xor ebx ebx
inc ebx
push 0x3
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
push [ eax ]
push [ ebp + 0xc ]
call sub_4432b0
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
push ebx
mov eax [ ecx ]
call [ eax + 0x8 ]
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x10 ]
push esi
inc [ eax ]
call sub_41dcee
push esi
call sub_41dd27
push 0xf
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
inc ebx
jmp r-xdata
push 0x3
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
push esi
push r--data
push ecx
mov ecx [ ebp + 0x14 ]
push esi
call sub_41e928
test al al
je r-xdata
push 0xd
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
je r-xdata
dec ebx
test ebx ebx
jle r-xdata
push 0x3
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_40c94f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov ebx ecx
mov eax [ eax + 0x4 ]
xor ecx ecx
push 0x7f
inc ecx
pop edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
cmp [ eax + 0x8 ] di
jne r-xdata
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x10 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] ecx
push esi
mov ecx ebx
call sub_40fa40
test eax eax
js r-xdata
mov esi ecx
lea ecx [ ebp - 0x18 ]
call sub_412570
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] di
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea edi [ ebx + 0x160 ]
lea ecx [ ebp - 0x18 ]
call sub_40cdb4
mov esi eax
test esi esi
jns r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx ebx
call sub_44d520
push 0xffffffff
push 0x96
mov cl [ edi + 0x9 ]
mov eax [ edi + 0x4 ]
test cl cl
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_412570
jmp r-xdata
xor esi esi
mov edx [ eax + 0x30 ]
jmp r-xdata
mov edx eax
and [ ebp + 0x8 ] 0x0
test esi esi
jle r-xdata
cmp [ edx ] 0x1
je r-xdata
test cl cl
jne r-xdata
test cl cl
jne r-xdata
mov edx [ eax + 0x30 ]
jmp r-xdata
mov edx eax
mov edx [ eax + 0x30 ]
jmp r-xdata
mov edx eax
mov edi [ ebp + 0xc ]
mov edi [ edi ]
cmp edi [ edx + 0x4 ]
jle r-xdata
push 0xffffffff
push 0x8f
jmp r-xdata
test cl cl
jne r-xdata
cmp [ edx ] 0x2
je r-xdata
test cl cl
jne r-xdata
mov ecx ebx
call sub_44d520
jmp r-xdata
mov edx [ eax + 0x30 ]
jmp r-xdata
mov edx eax
mov edx [ eax + 0x30 ]
jmp r-xdata
mov edx eax
mov ebx [ ebp + 0xc ]
mov edi [ ebx ]
mov ebx [ ebp - 0x8 ]
cmp edi [ edx + 0x8 ]
lea edi [ ebx + 0x160 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
inc edx
mov [ ebp + 0x8 ] edx
test cl cl
jne r-xdata
cmp [ edx ] 0x3
jne r-xdata
mov ecx edi
call sub_40d9f2
mov edx [ ebp + 0x8 ]
cmp edx esi
jl r-xdata
mov eax [ eax + 0x30 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
cmp edx esi
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
jmp r-xdata
sub_40ca32
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx ecx
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x28 ]
[ edi ] [ esi ]
mov eax edx
mov edx [ ebp + 0xc ]
lea ecx [ eax - 0x1 ]
movsw [ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test ecx ecx
js r-xdata
xor ecx ecx
pop edi
or esi edx
pop esi
mov [ ebx + eax * 2 ] cx
pop ebx
jne r-xdata
mov eax esi
and eax 0xf
shrd esi edx 0x4
mov ax [ ebp + eax * 2 - 0x28 ]
mov [ ebx + ecx * 2 ] ax
shr edx 0x4
dec ecx
jns r-xdata
xor al al
leave
retn
mov al 0x1
leave
retn
mov eax [ ebp - 0x4 ]
sub_40ca8e
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x4
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov ecx [ esi + 0x8 ]
je r-xdata
call sub_412570
push 0x10
mov [ esi + 0xc ] 0x4
call sub_42010a
cmp [ ebp + 0x8 ] 0x0
pop ecx
je r-xdata
call sub_40c4cd
jmp r-xdata
push [ ebp + 0x8 ]
call sub_407e53
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor eax eax
jmp r-xdata
mov ecx eax
call sub_40d3d2
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_40caee
mov [ esi + 0x8 ] eax
sub_40caee
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4218fb
lea edi [ eax + 0x1 ]
pop ecx
mov [ esi + 0x4 ] eax
test edi edi
je r-xdata
push 0x8
pop eax
jmp r-xdata
lea eax [ edi + 0x7 ]
and eax 0xfffffff8
xor ecx ecx
push 0x2
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
lea ecx [ edi + edi ]
push ecx
push [ ebp + 0x8 ]
mov [ esi ] eax
push eax
call sub_41faa0
push 0x4
call sub_42010a
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40cb5c
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
sub esp 0x10
fldz
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
fstp st1
xor eax eax
fstp st0
xor edx edx
leave
retn
fld [ r--data ]
fucomp st2
fnstsw ax
test ah 0x44
jpo r-xdata
push ebx
fxch st1
fst [ ebp - 0x10 ]
push esi
push edi
fld st0
call sub_471e16
mov ebx [ ebp - 0x10 ]
mov esi eax
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x14 ] edx
fild [ ebp + 0x10 ]
fst [ ebp + 0x10 ]
fxch st1
fcomp st2
fnstsw ax
fstp st1
test ah 0x5
mov eax [ ebp - 0xc ]
jpo r-xdata
fsub [ r--data ]
fstp [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
sub edi [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
sbb ecx [ ebp + 0x14 ]
sub edi 0xa
sbb ecx 0x0
sub ebx [ ebp + 0x10 ]
sbb eax [ ebp + 0x14 ]
cmp eax ecx
jl r-xdata
fadd [ r--data ]
fstp [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
sub edi [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
sbb ecx [ ebp + 0x14 ]
sub edi 0xa
sbb ecx 0x0
sub ebx [ ebp + 0x10 ]
sbb eax [ ebp + 0x14 ]
cmp eax ecx
jl r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
jg r-xdata
jg r-xdata
add esi 0xffffffff
adc edx 0xffffffff
jmp r-xdata
cmp ebx edi
jb r-xdata
add esi 0x1
adc edx 0x0
jmp r-xdata
cmp ebx edi
jae r-xdata
sub_40cbf7
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ecx [ edi + 0xc ]
mov edx [ esi + 0xc ]
mov eax ecx
shl eax 0x4
add eax edx
mov [ ebp - 0x4 ] esi
mov eax [ eax * 4 + rw-data ]
dec eax
cmp eax 0xe
ja r-xdata
xor al al
jmp r-xdata
jmp [ eax * 4 + jump_table_40ccb3 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx edi
call sub_40cdb4
mov ecx esi
mov ebx eax
call sub_40cdb4
mov ecx edi
call sub_41e3ee
mov ecx esi
mov dl al
call sub_41e3ee
xor ecx ecx
cmp dl al
sete cl
mov al cl
jmp r-xdata
mov ecx edi
call sub_412620
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_412620
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
push 0x0
push esi
call sub_41dfb6
mov ecx edi
call sub_40d00b
mov ecx [ ebp - 0x4 ]
mov esi eax
mov edi edx
call sub_40d00b
cmp esi eax
jne r-xdata
mov ecx edi
call sub_44be63
mov ecx esi
mov ebx eax
call sub_44be63
jmp r-xdata
mov ecx edi
call sub_44be39
mov ecx esi
mov edx eax
call sub_44be39
jmp r-xdata
mov ecx edi
call sub_44afbf
mov ecx esi
mov edx eax
call sub_44afbf
xor ebx ebx
cmp ecx 0x8
jne r-xdata
cmp ecx 0xb
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
mov ecx esi
call sub_44afce
mov esi eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call sub_44afce
mov edx esi
mov ecx eax
call sub_405b2a
lea ecx [ ebp - 0x30 ]
mov bl al
call sub_405cd3
lea ecx [ ebp - 0x40 ]
call sub_405cd3
jmp r-xdata
xor ebx ebx
cmp ecx 0xf
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp edi edx
jne r-xdata
sub ebx eax
neg ebx
sbb ebx ebx
inc ebx
sub edx eax
neg edx
sbb edx edx
inc edx
mov al dl
jmp r-xdata
mov eax ebx
mov eax [ edi ]
jmp r-xdata
xor ebx ebx
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x18 ] ebx
call sub_4113a0
push esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ebx
call sub_4113a0
lea ecx [ ebp - 0x20 ]
call sub_44ae06
lea ecx [ ebp - 0x10 ]
call sub_44ae06
lea ecx [ ebp - 0x20 ]
call sub_44be8a
lea ecx [ ebp - 0x10 ]
mov edx eax
call sub_44be8a
cmp edx eax
jne r-xdata
cmp edx ecx
jne r-xdata
mov al bl
mov eax ebx
mov eax [ edi ]
jmp r-xdata
jmp r-xdata
cmp edx 0x8
jne r-xdata
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_412570
lea ecx [ ebp - 0x20 ]
call sub_412570
jmp r-xdata
push edx
push ecx
call sub_44be47
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_44be47
push eax
call sub_420183
add esp 0xc
neg eax
sbb al al
inc al
mov bl al
mov ecx edi
call sub_44be8a
mov ecx esi
mov edx eax
call sub_44be8a
cmp edx eax
jne r-xdata
xor eax eax
cmp ecx [ ebx + 0xc ]
sete al
jmp r-xdata
mov ebx [ esi ]
mov ecx [ eax + 0xc ]
cmp edx 0xf
jne r-xdata
mov eax ebx
mov eax [ esi ]
jmp r-xdata
mov ecx edi
call sub_44be8a
push eax
push ecx
mov ecx esi
call sub_44be47
pop ecx
push eax
mov ecx edi
call sub_44be47
push eax
call sub_420183
add esp 0xc
jmp r-xdata
cmp edx 0x8
jne r-xdata
test eax eax
je r-xdata
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov edx ebx
mov edx [ esi ]
jmp r-xdata
mov ecx ebx
mov ecx [ edi ]
jmp r-xdata
cmp ecx 0x8
jne r-xdata
xor ebx ebx
inc ebx
jmp r-xdata
call sub_44a7b1
test al al
je r-xdata
sub_40ccef
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
or edi 0xffffffff
mov ecx [ eax + 0x4 ]
mov ebx edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call sub_40cdb4
test eax eax
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
jmp r-xdata
cmp [ esi + 0x8 ] 0x7
ja r-xdata
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x6
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x5
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x4
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov ebx eax
push [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ edx + 0x4 ]
push [ ebp - 0xc ]
mov esi [ edx ]
push [ ebp - 0x10 ]
push ebx
push edi
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_40ce0e
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov edi eax
sub_40cdb4
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx + 0xc ]
cmp eax 0x7
jg r-xdata
sub eax 0x9
je r-xdata
je r-xdata
xor eax eax
cmp [ ecx ] al
setne al
leave
retn
dec eax
je r-xdata
mov eax [ ecx ]
leave
retn
dec eax
jne r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
leave
retn
dec eax
jne r-xdata
dec eax
je r-xdata
xor eax eax
leave
retn
mov ecx [ ecx ]
cmp [ ecx ] 0x8
jg r-xdata
dec eax
jne r-xdata
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_44863c
jmp r-xdata
dec eax
jne r-xdata
fld [ ecx ]
call sub_471de0
leave
retn
pop ecx
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
push edx
call sub_422241
pop ecx
leave
retn
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x8 ]
call sub_41bcea
sub_40ce0e
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push edi
mov eax [ eax + ecx * 4 ]
mov edi [ eax ]
cmp [ edi + 0x90 ] 0x1b
jne r-xdata
leave
retn 0x20
xor eax eax
jmp r-xdata
push ebx
mov ebx [ ebp + 0xc ]
lea eax [ ebx - 0x1 ]
cmp eax 0x17
ja r-xdata
pop edi
xor eax eax
jmp r-xdata
movzx eax [ eax + lookup_table_40ce9e ]
jmp [ eax * 4 + jump_table_40ce82 ]
pop ebx
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
push 0x1
mov eax [ eax + ecx * 4 ]
push 0x0
mov eax [ eax ]
push [ eax ]
call [ InvalidateRect@IAT ]
jmp r-xdata
mov eax [ edi + 0x80 ]
mov eax [ eax + 0xc ]
dec eax
js r-xdata
push 0x2
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push edi
call sub_40ceb6
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
jmp r-xdata
push 0x3
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push edi
call sub_40ceb6
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push edi
call sub_40ceb6
push 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
jmp r-xdata
xor eax eax
inc eax
push esi
push 0x3
push [ ebp + 0x1c ]
mov esi ebx
push [ ebp + 0x18 ]
and esi 0xfffffffe
push esi
push edi
call sub_40ceb6
push 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push edi
call sub_40ceb6
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push edi
call sub_40ceb6
pop esi
jmp r-xdata
push ebx
push edi
call sub_40ceb6
sub_40ceb6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x80 ]
push edi
xor edi edi
mov esi [ eax ]
jmp r-xdata
mov eax [ esi + 0xc ]
add eax [ ebp + 0x18 ]
cmp eax 0x100
jge r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] edi
jne r-xdata
push 0x910
call sub_42010a
mov [ eax + 0xc ] edi
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ esi + 0x4 ] eax
pop ecx
mov esi eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ esi + 0xc ]
mov [ edi + esi + 0x810 ] al
cmp eax 0x8
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ esi + edi * 8 + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + edi * 8 + 0x14 ] eax
lea eax [ edi + 0x1 ]
pop edi
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x14
cmp [ ebp + 0x14 ] 0xffffffff
je r-xdata
lea ecx [ ebp + 0x10 ]
call sub_41a63d
lea ecx [ ebp + 0x14 ]
call sub_41a63d
jmp r-xdata
sub_40cf2c
push ebp
mov ebp esp
mov edx ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
js r-xdata
mov eax [ edx + 0x98 ]
cmp eax 0xffffffff
je r-xdata
cmp ecx 0x3
jl r-xdata
xor al al
jmp r-xdata
mov edi [ edx + 0x94 ]
cmp edi 0xffffffff
je r-xdata
cmp ecx [ edx + 0x84 ]
jg r-xdata
pop edi
pop esi
pop ebp
retn 0xc
mov esi [ ebp + 0x10 ]
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x74 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov ecx eax
mov eax [ edx + 0x60 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
mov [ esi ] ecx
mov ecx [ esi ]
cmp ecx 0x3
jl r-xdata
cmp ecx [ edx + 0x84 ]
jg r-xdata
mov eax [ edx + 0x74 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x1
sub_40cf97
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x1
je r-xdata
pop esi
leave
retn
cmp [ esi + 0xc ] 0x2
je r-xdata
push ebx
push edi
call sub_40d00b
xor ebx ebx
cmp [ esi + 0xc ] 0x4
mov edi eax
mov [ ebp - 0x4 ] edx
jne r-xdata
cmp edx 0xffffffff
jl r-xdata
mov ecx esi
call sub_40d093
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
jg r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] 0x12
ja r-xdata
mov ecx esi
call sub_412570
mov [ esi ] edi
test bl bl
jne r-xdata
cmp edx ebx
jl r-xdata
cmp edi 0x80000000
jb r-xdata
cmp [ eax + 0x4 ] 0xa
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0x2
jmp r-xdata
mov [ esi + 0xc ] 0x1
jg r-xdata
ja r-xdata
pop edi
pop ebx
cmp edi 0x7fffffff
sub_40d00b
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
dec eax
je r-xdata
mov eax [ esi ]
dec eax
je r-xdata
pop esi
leave
retn
mov eax [ esi ]
mov edx [ esi + 0x4 ]
jmp r-xdata
dec eax
je r-xdata
fld [ esi ]
sub esp 0x10
fstp [ esp + 0x8 ]
call sub_40cb5c
add esp 0x10
jmp r-xdata
dec eax
jne r-xdata
sub eax 0x3
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call sub_40d075
test al al
jne r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x8 ]
call sub_41bcea
mov eax [ esi + 0x8 ]
pop ecx
cmp [ eax + 0x4 ] 0xa
mov eax [ ebp - 0x8 ]
jbe r-xdata
push edx
call sub_42224a
pop ecx
dec eax
dec eax
jne r-xdata
cmp [ esi ] al
jne r-xdata
cdq
jmp r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
cmp [ ecx ] 0x4
jg r-xdata
inc eax
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ecx ] 0x8
jg r-xdata
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_44863c
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_44863c
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
sub_40d093
cmp [ ecx + 0xc ] 0x4
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0x30
je r-xdata
movzx eax [ eax + 0x2 ]
cmp eax 0x78
jne r-xdata
cmp eax 0x58
jne r-xdata
mov al 0x1
retn
jmp r-xdata
sub_40d0ba
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi + 0x8 ] 0x1
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
dec eax
je r-xdata
test esi esi
jne r-xdata
xor esi esi
inc esi
jmp r-xdata
dec eax
jne r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x1
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
push [ eax ]
call sub_40d89e
mov ecx [ ebp + 0xc ]
call sub_40cf97
push 0x2
pop esi
jmp r-xdata
pop edi
xor eax eax
pop esi
leave
retn 0x8
mov eax [ edi + 0x4 ]
push esi
mov ecx [ eax ]
call sub_40d00b
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_456927
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
lea ecx [ ebp - 0x10 ]
call sub_412570
jmp r-xdata
sub_40d0f6
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x1
mov edi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
push [ eax ]
call sub_40d89e
mov ecx [ ebp + 0xc ]
call sub_40d145
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
dec eax
je r-xdata
push [ ebp + 0xc ]
mov ecx edi
push esi
call sub_40d0ba
jmp r-xdata
dec eax
je r-xdata
pop edi
xor eax eax
pop esi
leave
retn 0x8
dec eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_412620
fstp [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
sub_40d145
push esi
mov esi ecx
call sub_40d16a
test al al
je r-xdata
mov ecx esi
call sub_41bde1
mov ecx esi
pop esi
test al al
jne sub_41df8a
pop esi
retn
jmp sub_40cf97
sub_40d16a
push esi
mov esi ecx
call sub_40d18c
test al al
je r-xdata
push 0x3
mov ecx esi
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
inc eax
pop esi
retn
xor eax eax
pop esi
retn
sub_40d18c
push ebx
push esi
xor ebx ebx
inc ebx
push ebx
mov esi ecx
call sub_40d2c0
test al al
je r-xdata
push 0x2
mov ecx esi
call sub_40d2c0
test al al
jne r-xdata
pop esi
mov al bl
pop ebx
retn
xor ebx ebx
jmp r-xdata
sub_40d1b3
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
mov ebx [ esi + 0x4 ]
push 0xb
mov ecx [ ebx ]
call sub_40d2c0
test al al
jne r-xdata
push [ ebx ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_4113a0
lea ecx [ ebp - 0x20 ]
call sub_4084a6
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x20 ]
mov edx [ eax ]
call sub_44be8a
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push edi
push 0x8
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
pop edi
mov [ ebp - 0x1 ] 0x1
jbe r-xdata
push edx
lea eax [ edx + 0x4 ]
push eax
jmp r-xdata
mov eax [ esi + 0x4 ]
push 0x7
mov ecx [ eax ]
call sub_40d2c0
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ eax + 0xc ] 0xa
je r-xdata
pop esi
xor eax eax
pop ebx
leave
retn 0x8
call sub_40ca8e
lea ecx [ ebp - 0x20 ]
call sub_412570
jmp r-xdata
mov esi [ esi + 0x4 ]
mov ecx [ esi ]
call sub_44be63
cdq
mov esi edx
cmp [ ebp - 0x1 ] bl
je r-xdata
xor eax eax
inc eax
cmp [ esi + 0x8 ] eax
jbe r-xdata
push 0x29
mov ecx eax
call sub_41d5f6
test al al
jne r-xdata
mov ecx eax
mov [ ebp - 0x1 ] bl
call sub_40cdb4
mov edi eax
cmp edi 0x10
jg r-xdata
push esi
push eax
mov edx edi
lea ecx [ ebp - 0x68 ]
call sub_40ca32
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x68 ]
push eax
call sub_40ca8e
pop edi
push 0x8
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x20 ]
push eax
push esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
call sub_40d0f6
push 0x3
lea ecx [ ebp - 0x20 ]
call sub_40d2c0
test al al
jne r-xdata
mov esi [ esi + 0x4 ]
mov esi [ esi + 0x4 ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] ebx
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
push 0x10
pop edi
jmp r-xdata
pop edi
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_412620
fstp [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x1 ] bl
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40d00b
mov [ ebp - 0x8 ] eax
mov esi edx
cmp [ ebp - 0x1 ] bl
jne r-xdata
push 0x10
mov [ ebp - 0x1 ] bl
pop edi
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x2
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_412570
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp esi ebx
jl r-xdata
cmp esi 0xffffffff
jg r-xdata
jg r-xdata
jl r-xdata
or ebx esi
jne r-xdata
cmp eax 0x7fffffff
jbe r-xdata
push 0x10
cmp eax 0x80000000
jae r-xdata
jmp r-xdata
sub_40d2d2
push ebp
mov ebp esp
xor ecx ecx
cmp [ rw-data ] cl
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
test ecx ecx
setne al
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
sub eax ecx
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
dec eax
jne r-xdata
mov ecx rw-data
jmp r-xdata
jmp r-xdata
dec eax
jne r-xdata
cmp [ rw-data ] ecx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40d349
mov ecx eax
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_448a7c
mov ecx eax
call sub_40d349
mov ecx eax
test ecx ecx
jne r-xdata
sub eax 0xe
jne r-xdata
cmp [ rw-data ] cl
jne r-xdata
jmp r-xdata
mov ecx rw-data
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
sub_40d349
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
push [ ebp + 0x8 ]
call sub_40d500
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
pop esi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x14 ]
and edx 0xff00
mov [ ecx ] edx
pop ebp
retn 0x8
sub_40d380
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub eax 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec eax
jne r-xdata
mov ecx rw-data
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
dec eax
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
sub eax 0xe
jne r-xdata
mov al 0x1
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
or eax 0x400
push eax
mov ecx rw-data
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d772
sub_40d3d2
push esi
push 0x8
mov esi ecx
pop eax
and [ esi + 0x4 ] 0x0
xor ecx ecx
push 0x2
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_42010a
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
pop esi
retn
sub_40d420
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] 0x0
mov [ eax + 0x18 ] 0x0
pop ebp
retn 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_40d500
mov ebx [ ebp + 0xc ]
mov esi [ edi + 0x4 ]
mov eax [ ebx + 0x4 ]
test esi esi
je r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebx + 0x18 ]
mov [ edi + 0x1c ] ebx
mov [ edi + 0x18 ] ecx
mov eax edi
pop edi
pop esi
mov [ ebx + 0x18 ] 0x0
pop ebx
pop ebp
retn 0x8
test esi esi
jne r-xdata
mov edx [ ebx ]
cmp esi eax
jb r-xdata
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov [ edi + 0x18 ] ebx
mov eax edi
pop edi
pop esi
mov [ ebx + 0x1c ] 0x0
pop ebx
pop ebp
retn 0x8
jmp r-xdata
mov ecx [ edi ]
push eax
call sub_40b96c
add esp 0x4
jmp r-xdata
mov eax [ edi ]
test esi esi
je r-xdata
test eax eax
js r-xdata
xor eax eax
jmp r-xdata
mov edi edi
jle r-xdata
movzx eax [ eax ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
sub_40d500
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x0
je r-xdata
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ rw-data ]
mov [ ebp + 0xf ] 0x0
test al 0x1
je r-xdata
or eax 0x1
mov ecx rw-data
mov [ rw-data ] eax
call sub_40d3d2
push sub_471fb5
call sub_421b2a
add esp 0x4
jmp r-xdata
push ebx
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x8 ] rw-data
push edi
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
mov edx [ ebx + 0x18 ]
test edx edx
je r-xdata
test edi edi
jne r-xdata
cmp edi ecx
jb r-xdata
mov bl [ ebp + 0xf ]
mov eax [ edx + 0x4 ]
cmp edi eax
ja r-xdata
mov edx [ ebx + 0x1c ]
test edx edx
jne r-xdata
jmp r-xdata
mov eax [ eax ]
mov edx [ ebx ]
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ eax ]
test edi edi
je r-xdata
mov edi eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edx ]
mov ebx [ ebx ]
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx edi
ja r-xdata
xor eax eax
jmp r-xdata
nop
xor eax eax
jmp r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
cmp edi eax
jae r-xdata
mov ax [ ebx ]
cmp ax [ ecx ]
jb r-xdata
mov ecx edi
jmp r-xdata
mov ebx [ eax ]
mov eax [ edx ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
test eax eax
js r-xdata
add eax 0x2
add edx 0x2
mov [ ebp - 0x4 ] eax
dec ecx
jne r-xdata
movzx eax [ eax ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
mov edi [ ebp - 0x10 ]
movzx eax [ edx ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
add edx 0x2
add ecx 0x2
dec edi
jne r-xdata
mov eax [ esi ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x18 ] eax
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ eax + 0x18 ]
mov [ esi ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ edx + 0x1c ]
mov [ ecx + 0x18 ] eax
mov eax [ esi ]
mov [ edx + 0x1c ] eax
mov [ esi ] edx
cmp [ edx + 0x18 ] 0x0
jne r-xdata
je r-xdata
cmp ecx edi
jb r-xdata
lea esp [ esp ]
jle r-xdata
mov ax [ eax ]
cmp ax [ edx ]
mov eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ esi ]
mov edi [ eax + 0x4 ]
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x10 ] edi
test edi edi
je r-xdata
jmp r-xdata
add ebx 0x2
add ecx 0x2
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ esi ]
mov eax [ edx + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov [ edx + 0x18 ] eax
mov [ esi ] edx
cmp [ edx + 0x1c ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ eax + 0x1c ]
mov [ esi ] eax
jmp r-xdata
mov ax [ eax ]
cmp ax [ ebx ]
jae r-xdata
add eax 0x2
add ebx 0x2
dec [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
jmp r-xdata
mov ax [ eax ]
cmp ax [ ebx ]
mov eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x1c ] eax
mov ecx [ esi ]
pop edi
mov ecx [ ecx + 0x1c ]
mov [ edx + 0x18 ] ecx
mov edx [ esi ]
mov ecx [ rw-data ]
mov [ edx + 0x18 ] ecx
mov edx [ esi ]
mov ecx [ rw-data ]
mov al bl
pop ebx
mov [ edx + 0x1c ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40d772
push ebp
mov ebp esp
push ebx
mov ebx ecx
push ebx
push [ ebp + 0x8 ]
call sub_40d500
test al al
jne r-xdata
mov ecx [ ebx ]
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ ecx + 0x14 ]
call sub_40d89e
jmp r-xdata
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x20
and edi 0xff00
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
pop ebx
pop ebp
retn 0xc
xor esi esi
jmp r-xdata
mov ecx esi
call sub_40d3d2
cmp esi [ ebp + 0x8 ]
je r-xdata
push 0x10
mov [ esi + 0x10 ] edi
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_40d805
xor edi edi
jmp r-xdata
push [ ebp + 0xc ]
and [ edi + 0x8 ] 0x0
mov ecx edi
call sub_4113a0
and [ esi + 0x1c ] 0x0
and [ esi + 0x18 ] 0x0
mov [ esi + 0x14 ] edi
push [ ebx ]
push esi
call sub_40d420
pop edi
mov [ ebx ] eax
pop esi
sub_40d805
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
inc [ eax ]
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x4 ]
mov [ esi + 0x4 ] edi
lea eax [ edi + 0x1 ]
cmp [ esi + 0x8 ] eax
jb r-xdata
pop esi
pop ebp
retn 0x4
push eax
call sub_40c91c
cmp [ esi ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ ebx ]
push [ esi ]
call sub_41faa0
add esp 0xc
pop edi
pop ebx
mov eax [ esi + 0x8 ]
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
xor ecx ecx
mov [ esi ] eax
mov [ eax + edi * 2 ] cx
jmp r-xdata
push [ esi ]
call j_sub_4228ca#2
pop ecx
sub_40d89e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x4
je r-xdata
cmp [ edi + 0xc ] 0x4
jne r-xdata
push ebx
mov ebx [ esi + 0x8 ]
test ebx ebx
jne r-xdata
push [ edi + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_40c935
jmp r-xdata
mov ecx ebx
call sub_405cd3
push ebx
call j_sub_4228ca#2
and [ esi + 0x8 ] 0x0
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
pop ebx
cmp eax 0xb
jg r-xdata
cmp eax 0xc
je r-xdata
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
jle r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
push [ esi ]
call j_sub_4228ca#2
pop ecx
sub eax 0x5
je r-xdata
and [ esi ] 0x0
push edi
mov ecx esi
mov [ esi + 0xc ] 0x1
call sub_4113a0
push ecx
call sub_43a56f
jmp r-xdata
cmp eax 0xe
jle r-xdata
mov ecx esi
call sub_41e3cc
jmp r-xdata
sub eax 0x3
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xf
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
dec eax
dec eax
je r-xdata
push ecx
call sub_401926
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push [ esi ]
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push ecx
call sub_43a599
jmp r-xdata
pop ecx
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
sub_40d937
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0xec ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x81
mov ebx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
inc [ ebx ]
mov ecx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_40fa40
test eax eax
js r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx edi
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_412570
jmp r-xdata
mov eax [ edi ]
mov esi [ eax + 0x4 ]
add esi edi
cmp [ esi + 0xd ] 0x0
jne r-xdata
call sub_44d520
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40d89e
cmp [ esi + 0xd ] 0x0
mov eax [ esi + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
mov [ eax + 0x10 ] 0x1
call sub_412570
mov edx [ ebp + 0x8 ]
sub_40d9f2
push esi
mov esi ecx
push edi
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x30 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_44d28e
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov edi [ esi + 0x4 ]
push ebx
mov ebx [ edi + 0x30 ]
test edi edi
je r-xdata
dec [ esi ]
pop edi
pop esi
retn
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
pop ebx
lea ecx [ edi + 0x20 ]
call sub_412570
lea ecx [ edi + 0x10 ]
call sub_412570
push edi
call j_sub_4228ca#2
pop ecx
sub_40da40
push ebp
mov ebp esp
sub esp 0x2c
cmp [ ecx + 0x169 ] 0x0
push ebx
lea edx [ ecx + 0x160 ]
push esi
push edi
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] edx
jne r-xdata
mov eax [ edx + 0x4 ]
mov ebx [ eax + 0x30 ]
jmp r-xdata
mov ebx [ edx + 0x4 ]
cmp [ ebx + 0x2c ] 0x8
mov edi [ ebx + 0xc ]
mov [ ebp - 0x8 ] edi
je r-xdata
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebx + 0x20 ]
push eax
push edi
call sub_45bf80
test eax eax
js r-xdata
mov eax [ ebx + 0x1c ]
cmp eax 0x5
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40d9f2
jmp r-xdata
cmp [ ebx + 0x2c ] 0x8
jne r-xdata
lea ecx [ ebx + 0x10 ]
push 0x1
call sub_40218e
lea ecx [ ebx + 0x20 ]
lea esi [ eax - 0x1 ]
call sub_40cdb4
cmp eax esi
jge r-xdata
cmp eax 0xf
je r-xdata
mov ecx [ ebp - 0x20 ]
test ecx ecx
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call sub_40d89e
mov ecx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
jmp r-xdata
lea ecx [ ebx + 0x20 ]
call sub_40cdb4
lea ecx [ ebx + 0x20 ]
lea esi [ eax + 0x1 ]
call sub_412570
mov [ ebx + 0x20 ] esi
lea esi [ ebx + 0x10 ]
mov ecx esi
mov [ ebx + 0x2c ] 0x1
call sub_40346e
lea ecx [ ebx + 0x20 ]
call sub_40cdb4
push eax
mov ecx esi
call sub_403489
push 0x0
push 0x1
push esi
call sub_4114a0
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
lea ecx [ ebx + 0x20 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
call sub_40cdb4
lea ecx [ esi - 0x1 ]
cmp eax ecx
jge r-xdata
mov eax [ edi + 0xc ]
lea esi [ ebx + 0x20 ]
cmp eax 0x1
jne r-xdata
push ecx
call sub_401926
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x5
jge r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
jmp r-xdata
push 0x0
push 0x0
push esi
call sub_4114a0
add esp 0xc
mov ecx edi
push eax
call sub_40d89e
mov ecx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
jmp r-xdata
mov ecx edi
call sub_412570
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x0
lea ecx [ ebx + 0x20 ]
call sub_40cdb4
lea ecx [ ebx + 0x20 ]
lea esi [ eax + 0x1 ]
call sub_412570
mov [ ebx + 0x2c ] 0x1
mov [ ebx + 0x20 ] esi
cmp [ ebx + 0x1c ] 0xf
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1
jne r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor esi esi
mov esi [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ edi + 0x8 ]
test ecx ecx
jne r-xdata
jmp [ eax * 4 + jump_table_40dc9c ]
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax [ esi ]
lea edx [ eax + ecx ]
mov [ ebp - 0xc ] edx
cdq
mov [ ebp - 0x8 ] eax
mov eax ecx
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
cdq
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
adc ecx edx
cdq
cmp eax [ ebp - 0x8 ]
jne r-xdata
jmp [ eax * 4 + jump_table_479752 ]
push esi
mov ecx edi
call sub_40d89e
jmp r-xdata
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov edx r--data
call sub_41f885
test al al
je r-xdata
lea ecx [ ebx + 0x20 ]
call sub_40cdb4
push eax
mov ecx esi
call sub_444e71
mov esi eax
push 0x29
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
push ecx
call sub_401926
mov edx [ ebp - 0x4 ]
mov [ edi + 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x20 ]
test ecx ecx
jne r-xdata
mov ecx esi
call sub_412620
fadd [ edi ]
fstp [ edi ]
jmp r-xdata
mov ecx edi
call sub_41df8a
mov ecx esi
call sub_412620
fadd [ edi ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1
je r-xdata
cmp [ esi + 0xc ] 0xb
jne r-xdata
cmp [ esi + 0xc ] 0x1
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
mov ecx esi
jne r-xdata
mov eax [ edi ]
cdq
add eax [ esi ]
adc edx [ esi + 0x4 ]
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ edi + 0xc ] 0x2
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ edi + 0xc ] 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ecx
jmp r-xdata
cmp edx ecx
jne r-xdata
mov ecx [ ebp - 0x28 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_41e3cc
jmp r-xdata
mov eax [ ebp - 0x28 ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ ebp - 0x28 ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x28 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
jmp r-xdata
cmp [ ebx + 0x1c ] 0xf
jne r-xdata
push ecx
call sub_401926
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x5
jge r-xdata
mov edx [ ebp - 0x4 ]
mov ecx esi
call sub_40d00b
add [ edi ] eax
adc [ edi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov ecx esi
call sub_44be8a
mov ecx [ ebp - 0x8 ]
mov edi eax
mov ecx [ ecx ]
add edi [ ecx ]
push edi
call sub_42010a
mov esi eax
mov eax [ ebp - 0x8 ]
add esp 0x4
mov ecx [ eax ]
push [ ecx ]
push [ ecx + 0x4 ]
push esi
call sub_41faa0
add esp 0xc
lea ecx [ ebx + 0x20 ]
call sub_44be8a
push eax
push ecx
call sub_44be47
add esp 0x4
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
add eax esi
push eax
call sub_41faa0
mov eax [ ebp - 0x8 ]
add esp 0xc
mov eax [ eax ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
mov ecx [ ebp - 0x8 ]
add esp 0x4
mov eax [ ecx ]
mov [ eax + 0x4 ] esi
mov eax [ ecx ]
lea esi [ ebx + 0x20 ]
mov [ eax ] edi
mov edi ecx
jmp r-xdata
call sub_40d00b
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ edi ] ecx
jmp r-xdata
call sub_40cdb4
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ edi ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ edi ] eax
push ecx
call [ VariantClear@IAT ]
push [ ebp - 0x28 ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
xor eax eax
push eax
mov ecx edi
call sub_44a76d
jmp r-xdata
mov eax [ ebx + 0x10 ]
push eax
mov ecx edi
call sub_44a76d
jmp r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
fldz
mov [ ebp - 0x1c ] 0x3
fst [ ebp - 0x28 ]
mov ecx [ esi + 0xc ]
mov eax ecx
shl eax 0x6
mov eax [ eax + rw-data ]
cmp eax 0x3
jne r-xdata
jmp [ eax * 4 + r-xdata ]
dec eax
fstp st0
cmp eax 0x8
ja r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ ebx + 0x1c ]
mov eax ecx
shl eax 0x4
add eax [ edi + 0xc ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x1
jne r-xdata
jmp [ eax * 4 + jump_table_479692 ]
sub ecx 0x2
cmp ecx 0x8
ja r-xdata
fild [ esi ]
sub eax 0x2
cmp eax 0x7
ja r-xdata
cmp ecx 0x1
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_4084a6
mov esi [ ebp - 0x20 ]
lea ecx [ ebx + 0x20 ]
call sub_4084a6
mov ecx [ ebx + 0x28 ]
push 0x0
push esi
call sub_41dfb6
test eax eax
js r-xdata
mov ecx esi
call sub_40cdb4
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_40cdb4
cmp esi eax
jl r-xdata
mov ecx esi
call sub_40d00b
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov esi edx
call sub_40d00b
cmp esi edx
jl r-xdata
mov ecx esi
call sub_44be63
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_44be63
cmp esi eax
jb r-xdata
fld st0
jmp r-xdata
jmp [ ecx * 4 + jump_table_4796b6 ]
lea edx [ ebx + 0x10 ]
mov ecx edi
call sub_41ee93
test al al
je r-xdata
jmp [ eax * 4 + jump_table_40dc7c ]
sub ecx 0x2
cmp ecx 0x9
ja r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
jg r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
fcompp
fnstsw ax
test ah 0x5
jpo r-xdata
fld [ esi ]
jmp r-xdata
mov eax [ esi + 0x8 ]
fstp st0
mov ecx esi
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
fild [ esi ]
jmp r-xdata
mov eax [ esi ]
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ecx [ ebx + 0x10 ]
call sub_412620
fstp [ ebp - 0x18 ]
mov ecx edi
call sub_412620
fcomp [ ebp - 0x18 ]
fnstsw ax
test ah 0x41
je r-xdata
mov ecx edi
call sub_4084a6
mov esi [ edi + 0x8 ]
lea ecx [ ebx + 0x10 ]
call sub_4084a6
mov ecx [ ebx + 0x18 ]
push 0x0
push esi
call sub_41dfb6
test eax eax
js r-xdata
mov ecx edi
call sub_40d00b
lea ecx [ ebx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov esi edx
call sub_40d00b
cmp edx esi
jl r-xdata
lea ecx [ ebx + 0x10 ]
call sub_44be63
mov ecx edi
mov esi eax
call sub_44be63
cmp esi eax
jae r-xdata
xor esi esi
jmp r-xdata
jmp [ ecx * 4 + jump_table_479702 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ edi ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x14 ] eax
jb r-xdata
push edx
call sub_422d13
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41bcea
fild [ ebp - 0x18 ]
jmp r-xdata
fld1
jmp r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
jg r-xdata
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
jne r-xdata
mov eax [ ebx + 0x18 ]
lea ecx [ ebx + 0x10 ]
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
jmp r-xdata
fld [ ebx + 0x10 ]
call sub_471de0
mov edx [ ebp - 0x4 ]
mov esi eax
jmp r-xdata
xor eax eax
cmp [ ebx + 0x10 ] al
setne al
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x10 ]
mov eax [ ecx ]
cmp eax 0x8
jg r-xdata
xor eax eax
jmp r-xdata
jmp [ eax * 4 + jump_table_47972a ]
cmp [ edx + 0x9 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
fld [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
fld [ ebp - 0x18 ]
jmp r-xdata
dec eax
cmp eax 0x9
ja r-xdata
mov eax [ ebp - 0x1c ]
fstp [ ebp - 0x18 ]
add esp 0x4
cmp eax 0x3
je r-xdata
mov ecx [ edx + 0x4 ]
mov esi [ ecx + 0x30 ]
test ecx ecx
je r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
cmp eax [ ebp - 0x14 ]
jb r-xdata
push edx
call sub_422241
mov edx [ ebp - 0x4 ]
add esp 0x4
mov esi eax
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x18 ]
call sub_41bcea
mov esi [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
add esp 0x4
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov esi eax
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
mov edx eax
call sub_44863c
mov esi [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
add esp 0x4
jmp r-xdata
cmp esi eax
jl r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
fld [ edi ]
call sub_471de0
mov edx [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
cmp [ edi ] al
setne al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ edi ]
mov eax [ ecx ]
cmp eax 0x8
jg r-xdata
fldz
mov edx [ ebp - 0x4 ]
fld [ ebp - 0x18 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
mov [ edx + 0x4 ] esi
mov [ edx + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_44d28e
mov edx [ ebp - 0x4 ]
dec [ edx ]
mov [ edx + 0x9 ] 0x1
jmp r-xdata
mov esi [ edx + 0x4 ]
mov edi [ esi + 0x30 ]
test esi esi
je r-xdata
jmp r-xdata
push edx
call sub_422241
mov edx [ ebp - 0x4 ]
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x18 ]
call sub_41bcea
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
add esp 0x4
jmp r-xdata
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
mov edx eax
call sub_44863c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
add esp 0x4
jmp r-xdata
dec [ edx ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x9 ] 0x0
jmp r-xdata
lea ecx [ esi + 0x20 ]
call sub_412570
lea ecx [ esi + 0x10 ]
call sub_412570
push esi
call j_sub_4228ca#2
mov edx [ ebp - 0x4 ]
add esp 0x4
sub_40dcd0
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax ecx
push 0xffffffff
lea ecx [ ebp - 0x20 ]
push ecx
lea ecx [ ebp - 0xc ]
push ecx
push esi
mov ecx eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x1
call sub_40fa40
test eax eax
js r-xdata
lea ecx [ ebp - 0x20 ]
call sub_414430
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
mov edx [ ebp - 0x20 ]
cmp ecx 0x9
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ecx - 0x1 ]
cmp eax 0xa
ja r-xdata
test dl dl
jne r-xdata
xor bl bl
jmp [ eax * 4 + r-xdata ]
mov bl 0x1
jmp r-xdata
push ecx
mov ecx edi
call sub_401926
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
cmp ecx 0x9
jne r-xdata
test edx edx
je r-xdata
mov [ ebp - 0x1 ] bl
test edi edi
jne r-xdata
add ecx 0xfffffffb
cmp ecx 0xa
ja r-xdata
mov edx [ esi + 0x4 ]
mov edi [ ebp - 0xc ]
mov eax [ edx + edi * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0x8 ]
push eax
push 0xa1
call sub_44d520
jmp r-xdata
cmp [ eax ] 0x5
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
mov eax [ edx + edi * 4 + 0x4 ]
inc edi
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
mov eax [ edi ]
xor bh bh
lea ecx [ eax - 0x1 ]
mov [ ebp + 0xb ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0xc ] edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4c ] ecx
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
xor ecx ecx
xor esi esi
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
mov [ edi ] eax
cmp [ ebx + 0x169 ] 0x0
jne r-xdata
test esi esi
jle r-xdata
lea eax [ esi + esi ]
cmp eax 0x8
jae r-xdata
push 0xc
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov ecx [ ebx + 0x164 ]
lea eax [ ebp - 0x50 ]
push eax
call sub_45d1da
mov [ ebx + 0x169 ] 0x0
jmp r-xdata
push 0x38
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
shl esi 0x4
add esi [ rw-data ]
je r-xdata
xor ecx ecx
mov [ ebp - 0x14 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
mov eax [ ebp - 0x1c ]
add esp 0x4
test eax eax
je r-xdata
mov eax 0x8
xor esi esi
jmp r-xdata
movzx ecx [ ebx + 0x8 ]
mov [ esi + 0x8 ] cx
movzx eax [ esi + 0x8 ]
movzx ecx [ ebx + 0xa ]
mov [ esi + 0xa ] cx
cmp ax 0x3f
jle r-xdata
inc [ ebx + 0x160 ]
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x44 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x48 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
lea ecx [ esi + 0x10 ]
lea eax [ ebp - 0x40 ]
mov [ esi ] 0x0
push eax
mov [ ecx + 0x8 ] 0x0
call sub_4113a0
lea ecx [ esi + 0x20 ]
lea eax [ ebp - 0x30 ]
push eax
mov [ ecx + 0x8 ] 0x0
call sub_4113a0
test bh bh
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov ebx [ ebp + 0x8 ]
mov [ eax + ecx * 4 ] esi
mov ecx [ ebp - 0x18 ]
mov edx [ ebx + 0x4 ]
inc ecx
mov [ ebp - 0x18 ] ecx
mov eax [ edx + edi * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
mov eax [ ebx + 0x164 ]
mov [ esi + 0x30 ] eax
mov [ ebx + 0x164 ] esi
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
shl ecx 0x2
push ecx
push eax
push esi
call sub_41faa0
add esp 0xc
push [ ebp - 0x1c ]
call j_sub_4228ca#2
add esp 0x4
mov edi eax
mov eax [ ebp - 0x14 ]
cmp ecx eax
je r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x10
call sub_42010a
mov edx eax
add esp 0x4
test edx edx
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
mov esi [ edi ]
lea edx [ esi + 0x1 ]
mov [ edi ] edx
cmp esi [ rw-data ]
jg r-xdata
mov eax [ eax ]
cmp eax 0x8
jne r-xdata
add eax eax
cmp eax 0x8
jae r-xdata
push 0xc
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov ebx [ edx + edi * 4 ]
lea edi [ edi + 0x1 ]
cmp ecx esi
je r-xdata
xor edx edx
mov [ esi ] edx
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov [ esi ] edx
jmp r-xdata
fld [ ebx ]
fstp [ esi ]
jmp r-xdata
mov eax [ ebx ]
mov [ esi ] eax
sub eax 0x4
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
xor ecx ecx
mov [ ebp - 0x14 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
mov eax [ ebp - 0x1c ]
add esp 0x4
test eax eax
je r-xdata
mov eax 0x8
xor esi esi
jmp r-xdata
movzx ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] cx
movzx eax [ esi + 0x8 ]
movzx ecx [ edi + 0xa ]
mov [ esi + 0xa ] cx
cmp ax 0x3f
jle r-xdata
mov esi [ esi + 0x8 ]
mov edx 0x1
cmp esi edx
jbe r-xdata
sub eax 0x2
jne r-xdata
dec eax
jmp r-xdata
lea eax [ edx - 0x1 ]
mov bh 0x1
mov [ ebp - 0x48 ] eax
test bl bl
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
push [ ebp + 0xc ]
mov [ eax + ecx * 4 ] esi
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x18 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_414320
xor esi esi
mov [ ebp - 0x20 ] r--data
cmp [ ebp - 0x18 ] esi
jbe r-xdata
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
add ecx 0x4
nop
dec eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xb ] bl
jne r-xdata
shl ecx 0x2
push ecx
push eax
push esi
call sub_41faa0
add esp 0xc
push [ ebp - 0x1c ]
call j_sub_4228ca#2
add esp 0x4
push [ ebp - 0x1c ]
mov [ ebp - 0x18 ] 0x0
call j_sub_4228ca#2
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x1c ]
mov edi [ eax + esi * 4 ]
test edi edi
je r-xdata
push 0x10
call sub_42010a
mov edx eax
add esp 0x4
test edx edx
je r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
cmp [ eax ] 0x5
jne r-xdata
inc edx
add ecx 0x4
cmp edx esi
jb r-xdata
jmp r-xdata
cmp [ ebp + 0xb ] 0x1
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax + esi * 4 ] 0x0
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
movzx eax [ edi + 0x8 ]
cmp ax 0x3f
jle r-xdata
xor edx edx
mov [ esi ] edx
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov [ esi ] edx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
push 0xffffffff
push 0x76
call sub_44d520
jmp r-xdata
mov [ ebp + 0xb ] 0x1
test bl bl
jne r-xdata
cmp ax 0x30
jl r-xdata
push edi
call j_sub_4228ca#2
mov eax [ ebp - 0x1c ]
add esp 0x4
inc [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xb ] 0x1
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_412570
lea ecx [ ebp - 0x40 ]
call sub_412570
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
test bl bl
jne r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edx - 0x1 ]
mov [ ecx + 0xf4 ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x10 ] 0x1
call sub_405322
test eax eax
js r-xdata
push [ ebx ]
call j_sub_4228ca#2
add esp 0x4
push [ ebx + 0xc ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ebx
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov edx [ ebp - 0x8 ]
dec eax
mov [ edx + 0xf4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edx
movsx eax [ eax + 0xa ]
push eax
push 0xa1
call sub_44d520
jmp r-xdata
cmp [ eax ] 0x5
jne r-xdata
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov eax [ edi ]
mov edx [ ebp - 0x8 ]
dec eax
mov [ edx + 0xf4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edx
movsx eax [ eax + 0xa ]
push eax
push 0x72
call sub_44d520
jmp r-xdata
mov bl [ ebp - 0x1 ]
test bl bl
je r-xdata
mov edx [ edi ]
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_40e1f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xec
push ebx
mov ebx ecx
push esi
mov eax [ ebx + 0xec ]
push edi
mov [ esp + 0x4c ] ebx
cmp eax 0xf3c
jge r-xdata
push 0xffffffff
push 0x9a
mov [ rw-data ] 0x0
call sub_44d520
or eax 0xffffffff
jmp r-xdata
inc eax
mov [ ebx + 0xec ] eax
cmp eax 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_41ecee
jmp r-xdata
cmp [ ebx + 0x100 ] 0x0
mov [ ebx + 0x148 ] 0x0
jne r-xdata
mov eax [ ebx + 0xec ]
mov [ ebx + 0x148 ] 0x0
cmp eax 0x1
je r-xdata
mov esi [ PeekMessageW@IAT ]
mov ecx ebx
call sub_40322e
cmp [ ebx + 0x100 ] 0x1
je r-xdata
dec eax
mov [ ebx + 0xec ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov ecx ebx
call sub_41ec33
push 0x0
call [ LockWindowUpdate@IAT ]
push [ rw-data ]
call [ DestroyWindow@IAT ]
mov esi [ GetMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0xe8 ]
push eax
call esi
test eax eax
jle r-xdata
cmp [ ebx + 0x149 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebx + 0xfc ] 0x0
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x60 ]
push eax
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0xdc ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ esp + 0xdc ]
push eax
call [ DispatchMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0xe8 ]
push eax
call esi
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov esi [ eax ]
call sub_44d869
mov edx [ ebx + 0x1cc ]
xor edi edi
test edx edx
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
jmp r-xdata
cmp [ esp + 0x54 ] 0x12
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
jmp r-xdata
cmp edi edx
je r-xdata
mov ecx [ ebx + 0x1c8 ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebx + 0x480 ] 0x0
je r-xdata
mov [ ebx + 0x100 ] 0x1
mov [ ebx + 0xfc ] 0x1
jmp r-xdata
lea eax [ esp + 0x50 ]
push eax
mov ecx rw-data
call sub_41f381
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebx + 0xfc ] 0x1
jmp r-xdata
cmp [ ebx + 0xfc ] 0x1
je r-xdata
mov esi [ PeekMessageW@IAT ]
mov edx 0x2
jmp r-xdata
mov eax [ ebx + 0x1c8 ]
mov ecx ebx
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
add eax 0x8
push eax
call sub_41cf79
mov ecx [ ebx + 0x1c8 ]
mov esi eax
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
add ecx 0x18
push ecx
lea ecx [ ebx + 0x150 ]
call sub_40c935
mov eax [ esi + 0x10 ]
push 0x0
push 0x1
inc eax
push eax
mov ecx ebx
call sub_401000
jmp r-xdata
inc edi
add ecx 0x4
cmp edi edx
jb r-xdata
cmp [ eax ] esi
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x60 ]
push eax
call esi
test eax eax
je r-xdata
lea eax [ esp + 0x50 ]
push eax
mov ecx rw-data
call sub_41ed1a
test eax eax
jne r-xdata
push ecx
lea eax [ esp + 0x50 ]
push eax
mov eax [ ebx ]
mov [ esp + 0x54 ] 0x0
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_402f0e
jmp r-xdata
mov edx 0x2
mov esi [ PeekMessageW@IAT ]
mov eax [ ecx ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ ebx + 0x100 ] 0x0
je r-xdata
mov ecx ebx
call sub_40e7b0
cmp al 0x1
je r-xdata
cmp [ ebx + 0x484 ] 0x1
je r-xdata
mov esi [ ebx + 0x478 ]
lea eax [ ebx + 0x478 ]
mov [ rw-data ] 0x1
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x10 ] eax
lea ecx [ ecx ]
jmp r-xdata
lea eax [ esp + 0x50 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ esp + 0x50 ]
push eax
call [ DispatchMessageW@IAT ]
cmp [ ebx + 0x148 ] 0x0
mov edx 0x2
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov edi [ esi ]
cmp [ edi + 0x11 ] 0x0
jne r-xdata
mov ebx [ esp + 0x10 ]
lea esp [ esp ]
cmp [ ebx + 0x485 ] 0x1
je r-xdata
mov eax [ ebx + 0xfc ]
cmp eax 0x7
je r-xdata
xor ecx ecx
mov eax 0x8
mul edx
seto cl
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x5c ] 0x8
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
xor ecx ecx
push 0x4
mov [ esp + 0x58 ] eax
mov [ eax ] cx
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
jmp r-xdata
mov edi [ edi + 0x14 ]
call [ timeGetTime@IAT ]
mov ecx eax
sub eax edi
xor edx edx
cmp edi 0x7fffffff
ja r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x11 ] 0x0
jne r-xdata
mov ebx [ esp + 0x4c ]
mov [ rw-data ] al
cmp [ esp + 0x1c ] eax
jg r-xdata
lea ecx [ esp + 0x54 ]
call sub_40d3d2
push 0xa
push [ ebx + 0x470 ]
call [ WaitForSingleObject@IAT ]
mov [ esp + 0x74 ] eax
cmp eax 0x102
je r-xdata
cmp eax 0x8
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test esi esi
jne r-xdata
cmp ecx 0x7fffffff
jbe r-xdata
cmp ecx 0x7fffffff
ja r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx ebx
call sub_44d8e9
jmp r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edx [ eax + 0x2 ]
lea ecx [ esp + 0x54 ]
call sub_405cd3
jmp r-xdata
cmp [ esp + 0x58 ] 0x0
je r-xdata
lea eax [ esp + 0x74 ]
push eax
push [ ebx + 0x470 ]
call [ GetExitCodeProcess@IAT ]
push [ ebx + 0x470 ]
call [ CloseHandle@IAT ]
mov eax [ esp + 0x74 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ ebx + 0x468 ] 0x0
je r-xdata
cmp eax 0x9
je r-xdata
mov [ esp + 0x60 ] eax
lea esp [ esp ]
mov eax [ rw-data ]
lea ecx [ esp + 0x50 ]
mov esi [ eax ]
push esi
call sub_468b20
mov ecx rw-data
call sub_446417
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edi [ esi ]
test edx edx
jl r-xdata
jmp r-xdata
cdq
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
lea eax [ esp + 0x50 ]
push eax
mov ecx rw-data
call sub_4456dc
test al al
je r-xdata
lea eax [ esp + 0x54 ]
push eax
mov ecx ebx
call sub_41cf79
mov esi eax
test esi esi
je r-xdata
push ecx
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_402f0e
mov eax [ ebx + 0xfc ]
xor esi esi
mov [ esp + 0xf ] 0x0
mov [ esp + 0x10 ] esi
cmp eax 0x8
jne r-xdata
mov ecx [ ebx + 0x46c ]
call sub_41e3a5
test edx edx
jl r-xdata
cmp eax 0x2
je r-xdata
cmp [ esp + 0x58 ] 0x0
mov [ rw-data ] 0x0
je r-xdata
push ecx
mov ecx esi
call sub_468ba4
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ esp + 0x60 ]
dec [ esi ]
jne r-xdata
jg r-xdata
lea ecx [ esp + 0x88 ]
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x94 ] 0x1
call sub_412570
mov eax [ esp + 0x50 ]
push r--data
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x98 ] 0x1
mov [ esp + 0x8c ] eax
call sub_40caee
push 0x2
push 0x1
lea eax [ esp + 0x90 ]
push eax
lea eax [ esp + 0xb8 ]
push eax
call sub_40d380
lea ecx [ esp + 0xac ]
call sub_405cd3
mov [ ebx + 0x485 ] 0x1
mov eax [ esi + 0x10 ]
push 0x0
push 0x1
inc eax
push eax
mov ecx ebx
call sub_401000
lea ecx [ esp + 0x88 ]
mov [ ebx + 0x485 ] 0x0
call sub_412570
lea ecx [ esp + 0x50 ]
call sub_44542e
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov ecx [ ebx + 0x458 ]
lea eax [ esp + 0xf ]
push eax
lea edx [ esp + 0x14 ]
call sub_446f5b
add esp 0x4
cmp [ esp + 0xf ] 0x1
jne r-xdata
jg r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ ebx + 0x310 ] 0x0
je r-xdata
cmp eax 0x3
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ esp + 0x54 ]
push eax
mov ecx ebx
call sub_41cf79
mov esi eax
test esi esi
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x64
jge r-xdata
push [ esp + 0x54 ]
call j_sub_4228ca#2
add esp 0x4
push esi
call j_sub_4228ca#2
add esp 0x4
inc [ esp + 0x1c ]
call [ timeGetTime@IAT ]
mov [ edi + 0x14 ] eax
push [ esi ]
mov ecx ebx
call sub_41cf79
mov ecx [ esi ]
push 0x0
mov [ ecx + 0x10 ] 0x1
mov eax [ eax + 0x10 ]
push 0x1
inc eax
push eax
mov ecx ebx
call sub_401000
mov eax [ esi ]
mov [ eax + 0x10 ] 0x0
mov esi [ esi + 0x4 ]
jmp r-xdata
cmp eax [ edi + 0x18 ]
jae r-xdata
mov ecx [ ebx + 0x474 ]
mov eax 0xcccccccc
mov [ esp + 0x44 ] eax
test ecx ecx
je r-xdata
mov esi [ esp + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x474 ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x468 ]
jb r-xdata
mov eax [ ebx + 0xfc ]
add eax 0xfffffffd
cmp eax 0x3
ja r-xdata
mov ecx [ ebx + 0x318 ]
call sub_41e3a5
test edx edx
jl r-xdata
cmp eax 0x4
je r-xdata
lea ecx [ esp + 0x30 ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] 0x1
call sub_412570
mov eax [ esp + 0x50 ]
push r--data
lea ecx [ esp + 0xd0 ]
mov [ esp + 0x40 ] 0x1
mov [ esp + 0x34 ] eax
call sub_40caee
push 0x2
push 0x1
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0xd8 ]
push eax
call sub_40d380
lea ecx [ esp + 0xcc ]
call sub_405cd3
lea ecx [ esp + 0x30 ]
call sub_412570
mov eax [ esp + 0x64 ]
push r--data
lea ecx [ esp + 0xc0 ]
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x34 ] eax
call sub_40caee
push 0x2
push 0x1
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0xc8 ]
push eax
call sub_40d380
lea ecx [ esp + 0xbc ]
call sub_405cd3
lea ecx [ esp + 0x30 ]
call sub_412570
mov eax [ esp + 0x68 ]
push r--data
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x34 ] eax
call sub_40caee
push 0x2
push 0x1
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0xa8 ]
push eax
call sub_40d380
lea ecx [ esp + 0x9c ]
call sub_405cd3
mov [ ebx + 0x484 ] 0x1
mov eax [ esi + 0x10 ]
push 0x0
push 0x1
inc eax
push eax
mov ecx ebx
call sub_401000
lea ecx [ esp + 0x30 ]
mov [ ebx + 0x484 ] 0x0
call sub_412570
lea ecx [ esp + 0x50 ]
call sub_44542e
jmp r-xdata
inc [ rw-data ]
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebx + 0xfc ] 0x8
jne r-xdata
lea eax [ esp + 0x44 ]
push eax
push ecx
call [ GetExitCodeProcess@IAT ]
cmp [ esp + 0x44 ] 0x103
jne r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
jmp [ eax * 4 + jump_table_47630b ]
jg r-xdata
cmp eax 0x5
je r-xdata
push 0x0
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
test esi esi
jns r-xdata
push [ ebx + 0x474 ]
call [ CloseHandle@IAT ]
mov eax [ esp + 0x44 ]
mov [ ebx + 0x474 ] 0x0
push 0x0
push [ ebx + 0x474 ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ ebx + 0x474 ] 0x0
mov ecx ebx
call sub_468a48
jmp r-xdata
mov ecx ebx
call sub_468a48
jmp r-xdata
push 0x1
mov ecx ebx
call sub_401dce
push 0x1
mov ecx ebx
call sub_401dce
cmp [ ebx + 0xfc ] 0x2
je r-xdata
cmp eax [ ebx + 0x310 ]
jb r-xdata
cmp eax 0x6
je r-xdata
push ecx
fstp [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_45f5bc
jmp r-xdata
fadd [ r--data ]
mov esi eax
test esi esi
jns r-xdata
mov esi eax
test esi esi
js r-xdata
mov eax esi
neg eax
push 0x0
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
push ecx
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx ]
mov [ esp + 0x18 ] 0x0
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_402f0e
test esi esi
jg r-xdata
je r-xdata
mov [ ebx + 0x148 ] 0x1
mov [ ebx + 0xfc ] 0x0
jmp r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xf4 ] eax
mov esi eax
inc eax
mov [ ebp + 0x8 ] eax
cmp esi [ rw-data ]
jg r-xdata
push [ ebx + 0x314 ]
mov [ ebx + 0x148 ] 0x1
mov [ ebx + 0xfc ] 0x0
call [ Sleep@IAT ]
jmp r-xdata
test esi esi
jle r-xdata
jmp r-xdata
mov [ ebx + 0xfc ] 0x1
jmp r-xdata
test esi esi
jle r-xdata
mov ecx [ ebx + 0x314 ]
mov [ ebx + 0x148 ] 0x1
mov [ ebx + 0xfc ] 0x0
call sub_448355
jmp r-xdata
mov eax [ ebx + 0xfc ]
cmp eax 0x5
je r-xdata
shl esi 0x4
add esi [ rw-data ]
je r-xdata
mov eax [ ebx + 0x1f8 ]
lea ecx [ esp + 0x78 ]
mov esi [ eax ]
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x84 ] 0x1
call sub_412570
push 0x0
lea eax [ esp + 0x7c ]
push eax
mov eax [ ebx ]
mov [ esp + 0x8c ] 0x7
mov ecx [ eax + 0x4 ]
add ecx ebx
mov [ esp + 0x80 ] esi
call sub_45d12a
lea ecx [ esp + 0x78 ]
call sub_412570
cmp eax 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
xor edx edx
mov ecx 0x1
mov [ esp + 0x20 ] edx
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] ecx
mov edi [ eax ]
mov [ esp + 0x1c ] edx
movsx eax [ edi + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0x33
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
push esi
mov ecx ebx
call sub_40e7e0
dec eax
cmp eax 0x7e
ja r-xdata
push esi
mov ecx ebx
call sub_40ea00
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x24 ]
push eax
push esi
mov ecx ebx
call sub_40fa40
jmp r-xdata
movzx eax [ eax + lookup_table_40e724 ]
jmp [ eax * 4 + jump_table_40e710 ]
mov esi [ esp + 0x28 ]
test esi esi
jne r-xdata
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
push [ esi + 0xc ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push esi
call j_sub_4228ca#2
add esp 0x4
mov [ esp + 0x28 ] 0x0
jmp r-xdata
add ecx 0xfffffffb
cmp ecx 0xa
ja r-xdata
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x20 ] 0x0
test eax eax
js r-xdata
cmp ecx 0x5
jge r-xdata
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x20 ]
push eax
push esi
push 0x0
mov ecx ebx
call sub_4144e0
lea eax [ esp + 0x4b ]
push eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x24 ]
push eax
push esi
push 0x0
mov ecx ebx
call sub_413680
jmp r-xdata
lea ecx [ ebx + 0x16c ]
call sub_45ea97
mov ecx eax
call sub_45cff8
test al al
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x1c ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea ecx [ ebx + 0x16c ]
call sub_45ea97
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x20 ]
push eax
push esi
mov ecx ebx
call sub_45e2fb
jmp r-xdata
movsx eax [ edi + 0xa ]
push eax
push 0xa7
mov ecx ebx
call sub_44d520
lea ecx [ esp + 0x20 ]
call sub_414430
jmp r-xdata
jmp r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx ebx
call sub_44d520
lea ecx [ esp + 0x20 ]
call sub_414430
jmp r-xdata
sub_40e729
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add [ edx ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_40e7b0
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x188 ] 0x0
jne r-xdata
cmp [ esi + 0x4ac ] 0x1
je r-xdata
xor al al
xor eax eax
mov [ esi + 0x4ac ] 0x1
mov [ esi + 0x4ac ] 0x1
push [ esi + 0x18c ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
call sub_44d15f
lea ecx [ esi + 0x188 ]
call sub_440fe1
mov ebx [ ebp - 0x5c ]
lea ecx [ ebp - 0x50 ]
push [ ebx ]
mov [ ebp - 0x48 ] 0x0
call sub_4113a0
mov edi [ ebx + 0x4 ]
mov ecx edi
call sub_4084a6
push [ edi + 0x8 ]
mov ecx esi
call sub_41cf79
mov edx eax
mov [ ebp - 0xc ] edx
mov ecx [ edx + 0x10 ]
push ecx
call sub_405554
mov [ esi + 0xf4 ] ecx
cmp [ edx + 0x14 ] 0x0
mov [ ebp - 0x4 ] eax
mov edi 0x3
jle r-xdata
push [ edx + 0x10 ]
call sub_40109f
mov eax [ ebp - 0xc ]
mov edi 0x3
cmp [ eax + 0x14 ] 0x1
mov [ ebp - 0x14 ] 0x1
jl r-xdata
add ebx 0x8
mov [ ebp - 0x14 ] ebx
push r--data
lea ecx [ ebp - 0x30 ]
call sub_40caee
xor eax eax
cmp [ ebp - 0x44 ] 0x6
push 0x1
setne al
push 0x0
dec eax
and eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_40d380
lea ecx [ ebp - 0x30 ]
call sub_405cd3
mov eax [ ebp - 0xc ]
push 0x0
mov eax [ eax + 0x10 ]
push 0x0
inc eax
push eax
mov ecx esi
call sub_401000
mov ecx rw-data
call sub_401188
mov bl 0x1
mov eax [ ebp - 0x4 ]
xor ebx ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] ebx
lea ecx [ eax + edi * 4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] bx
jne r-xdata
mov eax [ edx + edi * 4 + 0x4 ]
inc edi
cmp [ eax + 0x8 ] 0x41
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp [ ebx + 0x8 ] 0x33
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx 0x1
mov eax [ ebx + 0x4 ]
xor ecx ecx
lea eax [ eax + edi * 4 ]
mov [ ebp - 0x20 ] eax
lea ebx [ eax + 0x4 ]
mov eax [ ecx ]
mov eax [ eax ]
cmp eax 0x24
je r-xdata
push [ ebx ]
lea ecx [ ebp - 0x40 ]
call sub_41baef
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
inc eax
add ebx 0x4
inc edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
cmp eax [ edx + 0x14 ]
jge r-xdata
inc edi
xor ecx ecx
lea edx [ edx + edi * 4 ]
mov eax [ ecx ]
mov eax [ eax ]
cmp eax 0x24
je r-xdata
mov eax [ ecx ]
mov eax [ eax ]
cmp eax [ ebx ]
je r-xdata
cmp ax 0x48
jne r-xdata
inc ecx
inc edx
add ebx 0x4
jmp r-xdata
inc edi
add ecx 0x4
cmp eax 0x1e
jne r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp ax 0x48
jne r-xdata
inc ecx
inc edi
add edx 0x4
jmp r-xdata
mov eax [ ecx + 0x4 ]
add ecx 0x4
inc edi
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp eax 0x1e
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx esi
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 4 + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
call sub_44d520
xor bl bl
jmp r-xdata
cmp ax 0x40
jne r-xdata
dec ecx
jns r-xdata
mov eax [ ebx ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
jne r-xdata
mov [ ebp - 0x18 ] ebx
mov eax [ ecx ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ebx 0x100
mov edx [ eax + 0x4 ]
mov eax [ edx + edi * 4 ]
lea ecx [ edx + edi * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp ax 0x40
jne r-xdata
dec ecx
jns r-xdata
mov eax [ edx ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
jne r-xdata
mov ebx [ ebp - 0x14 ]
lea ecx [ ebp - 0x50 ]
call sub_412570
lea ecx [ ebp - 0x60 ]
call sub_4404c9
lea ecx [ ebp - 0x40 ]
call sub_4404c9
mov [ esi + 0x4ac ] 0x0
mov al bl
jmp r-xdata
inc edx
add ebx 0x4
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x14 ] eax
jle r-xdata
inc edi
add edx 0x4
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
push 0x1
or ebx 0x200
push ebx
push [ eax ]
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
push [ eax ]
call sub_40d380
lea eax [ edi + 0x2 ]
mov [ ebp - 0x18 ] eax
lea eax [ edx + edi ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x4 ]
mov ecx esi
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x1
call sub_40fa40
test eax eax
js r-xdata
lea ecx [ ebp - 0x30 ]
call sub_412570
xor bl bl
jmp r-xdata
push 0x1
or ebx 0x200
push ebx
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
push [ eax ]
call sub_40d380
lea ecx [ ebp - 0x30 ]
call sub_412570
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
add [ ebp - 0x8 ] 0x4
inc eax
add edi eax
mov eax [ ebp - 0xc ]
inc edx
mov [ ebp - 0x14 ] edx
cmp edx [ eax + 0x14 ]
jle r-xdata
sub_40e7e0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ edx + 0x4 ]
xor esi esi
mov eax [ edi ]
mov ebx ecx
mov eax [ eax ]
mov [ ebp - 0x4 ] esi
cmp eax 0x4
jne r-xdata
sub eax 0x4
cmp eax 0x28
ja r-xdata
push [ ebp + 0xc ]
push edx
call sub_40dcd0
push 0xffffffff
push 0x81
call sub_44d520
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push ecx
call sub_40da40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_412b40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push edx
call sub_4126c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_40d937
mov [ ebx + 0x148 ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebx + 0x160 ]
call sub_40d9f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push edx
call sub_40c94f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0x169 ] 0x0
lea ecx [ ebx + 0x160 ]
jne r-xdata
push [ ebp + 0xc ]
push edx
call sub_4052c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
call sub_405265
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_412b40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push ecx
call sub_4053c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + esi * 4 + 0x4 ]
push [ eax ]
call sub_41cf79
mov ecx [ eax + 0x1c ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_41f41d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push edx
call sub_4044ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push edx
call sub_45d67e
jmp r-xdata
push [ ebp + 0xc ]
push ecx
call sub_45d76f
jmp r-xdata
lea ecx [ ebx + 0x160 ]
call sub_4053b6
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
jmp r-xdata
push [ ebp + 0xc ]
push edx
call sub_45dfce
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_45d342
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_45d443
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_405577
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_412b40
jmp r-xdata
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_412b40
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_45d8ff
jmp r-xdata
cmp [ edx + 0x8 ] 0x1
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_45e26d
jmp r-xdata
lea ecx [ ebx + 0x16c ]
call sub_45d058
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov edx [ eax + 0x30 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
push 0xffffffff
push 0x69
call sub_44d520
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x8 ] si
jne r-xdata
mov edx [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
inc edx
mov [ eax ] edx
call sub_40d9f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ eax ] 0x20
jne r-xdata
mov esi 0x1
jmp r-xdata
sub_40ea00
push ebp
mov ebp esp
sub esp 0x1b8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x0
xor esi esi
mov edx edi
inc esi
add edx 0x4
jmp r-xdata
cmp ax 0x4f
je r-xdata
mov ecx [ edx ]
movzx eax [ ecx + 0x8 ]
cmp ax 0x4e
je r-xdata
dec esi
add edx 0x4
jmp r-xdata
cmp ax 0x47
je r-xdata
cmp ax 0x48
je r-xdata
movzx ecx [ ecx + 0x8 ]
cmp cx 0x41
je r-xdata
test esi esi
jne r-xdata
cmp cx 0x52
je r-xdata
cmp ax 0x7f
je r-xdata
mov eax [ edi ]
mov edx 0x1
mov ecx [ eax ]
mov [ ebp - 0x8 ] edx
mov eax [ ecx ]
mov edi [ ecx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0xb0 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0xa0 ] eax
inc [ eax ]
mov [ ebp - 0xa4 ] eax
xor eax eax
mov [ ebp - 0xac ] edi
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x48 ] eax
cmp [ rw-data ] al
jne r-xdata
cmp cx 0x53
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x8 ]
mov esi ebx
mov ebx [ ebp - 0xc ]
push eax
push esi
mov ecx ebx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x1
call sub_40fa40
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
add edx 0x4
jmp r-xdata
mov [ ebp - 0x50 ] esi
test esi esi
je r-xdata
cmp [ rw-data ] eax
je r-xdata
cmp cx 0x54
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_412570
jmp r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx ebx
call sub_44d520
mov eax [ ebx + 0x4 ]
mov eax [ eax + edx * 4 ]
movzx ecx [ eax + 0x8 ]
movsx edi [ eax + 0x8 ]
mov [ ebp - 0x80 ] edi
cmp cx 0x41
jne r-xdata
test eax 0x100
jne r-xdata
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
cmp [ rw-data ] al
jne r-xdata
cmp cx 0x55
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp cx 0x52
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
mov ebx [ ebp - 0xc ]
inc edx
mov ecx ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x58 ] 0x1
call sub_40fa40
test eax eax
js r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ eax ]
movsx eax [ eax + 0xa ]
push eax
push 0xa3
call sub_44d520
jmp r-xdata
mov eax [ esi + 0xc ]
mov edi [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebp - 0x48 ]
xor esi esi
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xd ] 0x0
test al 0x1
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
jmp r-xdata
mov edx [ rw-data ]
cmp cx 0x56
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x5c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov esi [ ebp - 0xa0 ]
dec [ esi ]
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
cmp eax 0xc
je r-xdata
mov edx [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
or eax 0x1
mov ecx rw-data
mov [ rw-data ] eax
call sub_40d3d2
push sub_471fb5
call sub_421b2a
mov ebx [ rw-data ]
add esp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x68 ] rw-data
mov [ ebp - 0x78 ] rw-data
lea esp [ esp ]
mov [ ebp - 0x50 ] edx
cmp [ edx ] esi
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xd ] 0x0
test al 0x1
je r-xdata
cmp cx 0x53
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x58 ]
cmp eax 0x5
jge r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ ebp - 0x44 ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x1
mov eax [ ecx + edx * 4 - 0x4 ]
xor ebx ebx
movsx eax [ eax + 0xa ]
mov [ ebp - 0x78 ] eax
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x14 ] ebx
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push [ ebp - 0x40 ]
call j_sub_4228ca#2
add esp 0x4
push esi
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
cmp [ esi + 0xc ] 0x5
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
movzx edi [ eax + 0x8 ]
cmp di 0x35
je r-xdata
cmp eax 0xf
je r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
or eax 0x1
mov ecx rw-data
mov [ rw-data ] eax
call sub_40d3d2
push sub_471fb5
call sub_421b2a
mov edx [ ebp - 0x50 ]
add esp 0x4
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ ebp - 0x14 ] rw-data
mov [ ebp - 0x78 ] rw-data
cmp cx 0x54
je r-xdata
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
push [ esi + 0xc ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push esi
call j_sub_4228ca#2
add esp 0x4
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov [ ebp - 0x58 ] 0x1
mov [ ebp - 0x64 ] 0x0
mov esi [ ebp - 0x70 ]
cmp [ esi + 0xc ] 0x5
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
mov ecx [ ebp - 0xc ]
movsx eax [ eax + 0xa ]
inc edx
mov [ ebp - 0x1c ] eax
push 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push esi
mov [ ebp - 0x48 ] edx
call sub_40fa40
test eax eax
js r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx ebx
call sub_44d520
jmp r-xdata
test esi esi
je r-xdata
push 0xf
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
mov eax edx
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x44 ] eax
mov eax [ ecx + edx * 4 - 0x4 ]
xor ebx ebx
movsx eax [ eax + 0xa ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x70 ] esi
cmp [ eax + 0x8 ] 0x4e
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx esi
call sub_45cff8
test al al
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x8
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x8 ] 0x47
je r-xdata
cmp edi ecx
jb r-xdata
jmp r-xdata
lea eax [ ebx + 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
test eax eax
je r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
cmp cx 0x55
je r-xdata
jmp [ eax * 4 + jump_table_40f5d4 ]
mov ecx esi
call sub_40342c
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ eax + 0x210 ] 0x0
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x2c ]
call sub_414430
jmp r-xdata
mov esi [ ebp - 0x20 ]
cmp esi 0x1
jne r-xdata
cmp [ ebx + 0x103 ] 0x0
jne r-xdata
cmp edi 0x41
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0xc ]
movsx eax [ eax + 0xa ]
push eax
push 0x7c
call sub_44d520
jmp r-xdata
mov ecx [ ebp - 0xc ]
push 0x0
push 0x0
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
mov [ ebp - 0x70 ] esi
call sub_45f4df
test eax eax
js r-xdata
cmp [ esi + 0xc ] 0x5
jne r-xdata
lea esp [ esp ]
mov ebx [ ebp - 0xc ]
push 0x1
push r--data
push 0x0
push 0xa9
mov ecx ebx
call sub_45c235
test eax eax
jns r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
cmp di 0x35
je r-xdata
cmp eax 0xc
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x1
push [ ecx ]
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x8 ] 0x0
call sub_44a3ee
mov ebx [ ebp - 0xc ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
mov ecx ebx
call sub_45ede9
test eax eax
js r-xdata
lea ecx [ ecx ]
mov edx [ ebx ]
mov esi [ ebp - 0x40 ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ebp - 0x40 ]
mov esi edi
test edi edi
je r-xdata
mov esi [ ebx + 0x18 ]
lea eax [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
test esi esi
je r-xdata
cmp [ ebp - 0xd ] 0x0
mov eax [ ebx + 0x18 ]
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x1c ] eax
mov eax [ rw-data ]
mov ecx [ ebp - 0x68 ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
cmp ecx edi
ja r-xdata
cmp edi ecx
jb r-xdata
jmp r-xdata
mov ecx [ ebx + 0x1c ]
test ecx ecx
je r-xdata
cmp cx 0x56
je r-xdata
lea ecx [ ebp - 0x64 ]
call sub_41e3cc
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_44a955
jmp r-xdata
mov eax [ ebp - 0x64 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x64 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x64 ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ ebp - 0x64 ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x64 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x64 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x64 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
push esi
call sub_4114a0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov edi [ ebp - 0x70 ]
lea ecx [ ecx ]
lea eax [ esi - 0x2 ]
cmp eax 0x9
ja r-xdata
mov ebx [ ebp - 0x2c ]
mov eax ebx
test eax eax
js r-xdata
mov eax [ ecx ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x79
call sub_44d520
jmp r-xdata
cmp edi 0x41
jne r-xdata
add edi 0xffffffae
cmp edi 0x4
ja r-xdata
lea eax [ ebp - 0x64 ]
cmp esi eax
je r-xdata
mov esi [ ebp - 0x50 ]
mov [ ebp - 0x15 ] 0x0
jmp r-xdata
mov ecx esi
call sub_40342c
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ eax + 0x210 ] 0x0
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x3c ]
call sub_414430
jmp r-xdata
mov edi [ ebp - 0x30 ]
cmp edi 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0xa9
call sub_44d520
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call sub_45e2fb
cmp eax 0x1
jne r-xdata
cmp di 0x47
jne r-xdata
cmp eax 0xf
je r-xdata
lea ecx [ ebp - 0x9c ]
call sub_44a46f
lea ecx [ ebp - 0x2c ]
call sub_412570
mov edx [ ebp - 0x8 ]
jmp r-xdata
push 0xd
lea ecx [ ebp - 0x2c ]
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ecx ]
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax edi
mov [ ebp - 0x80 ] eax
cmp edi ecx
ja r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov ecx edi
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp - 0x14 ]
mov esi ecx
mov ecx [ ebp - 0x40 ]
test eax eax
je r-xdata
mov esi [ ebx ]
mov ebx [ ebp - 0x40 ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ebp - 0x40 ]
mov esi edi
test edi edi
je r-xdata
mov ecx [ ebx + 0x18 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0xd ] 0x0
mov eax [ edx ]
mov ecx [ ebp - 0x78 ]
mov eax [ eax + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ edx ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ edx ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov edx [ ecx + 0x4 ]
cmp edx edi
ja r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0xc ]
push eax
push 0x80
call sub_44d520
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ ebp - 0x64 ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
push [ ebp - 0x78 ]
push 0x7a
mov ecx [ ebp - 0x24 ]
test ecx ecx
jne r-xdata
inc ecx
cmp ecx ebx
jl r-xdata
mov edx [ edi ]
mov esi [ edx + 0x210 ]
cmp esi 0x40
jge r-xdata
mov ebx [ ebp - 0x2c ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x48 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
call sub_40d380
jmp r-xdata
jmp [ edi * 4 + jump_table_40f5c0 ]
cmp [ esi + 0xc ] 0x4
je r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
push 0x0
push 0x1
push esi
call sub_4114a0
mov esi eax
add esp 0xc
mov [ ebp - 0x50 ] esi
test esi esi
je r-xdata
cmp [ esi + 0xc ] 0x5
jne r-xdata
lea eax [ edi - 0x2 ]
cmp eax 0x9
ja r-xdata
mov ebx [ ebp - 0x3c ]
mov eax ebx
mov esi [ ebp - 0x50 ]
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x8c ]
call sub_45d154
push 0xd
lea ecx [ ebp - 0x2c ]
call sub_40d2c0
test al al
je r-xdata
push 0xe
lea ecx [ ebp - 0x2c ]
call sub_40d2c0
test al al
je r-xdata
test eax eax
js r-xdata
add esi 0x2
add edx 0x2
dec ecx
jne r-xdata
movzx eax ax
cmp ax [ edx ]
jmp r-xdata
movzx eax [ edx ]
cmp ax [ ecx ]
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
mov eax ecx
mov [ ebp - 0x80 ] ecx
jmp r-xdata
mov ecx [ esi ]
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
mov esi [ esi + 0x14 ]
and eax 0xff00
cmp eax edi
jb r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov ebx [ ebp - 0x68 ]
xor eax eax
jmp r-xdata
mov edi edi
xor eax eax
jmp r-xdata
lea ecx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov eax edi
mov [ ebp - 0x1c ] eax
cmp edi ebx
jbe r-xdata
mov esi [ edx ]
test esi esi
je r-xdata
mov edx edi
jmp r-xdata
mov esi [ ebp - 0x40 ]
mov ebx [ ecx ]
mov [ ebp - 0x1c ] edx
test edx edx
je r-xdata
push ecx
call sub_401926
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax 0x5
jge r-xdata
cmp [ edi + 0xc ] 0x5
jne r-xdata
mov edi [ ebp - 0x80 ]
mov esi [ ebp - 0x70 ]
mov eax [ ebp + ecx * 4 - 0x1b4 ]
mov [ edx + esi * 4 + 0x10c ] eax
mov eax [ edi ]
inc [ eax + 0x210 ]
mov edx [ ebx ]
cmp edx 0x8
jg r-xdata
push 0x7b
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
inc edx
mov [ ebp - 0x44 ] edx
cmp esi 0x1
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_414265
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_44aa57
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_44a875
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_44af66
jmp r-xdata
cmp [ ebp - 0x58 ] 0x4
jne r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
jmp r-xdata
push [ ebp - 0x1c ]
push 0x7a
mov ecx [ ebp - 0x34 ]
test ecx ecx
jne r-xdata
inc ecx
cmp ecx ebx
jl r-xdata
mov edx [ esi ]
mov edi [ edx + 0x210 ]
cmp edi 0x40
jge r-xdata
mov ebx [ ebp - 0x3c ]
jmp r-xdata
jmp [ eax * 4 + jump_table_40f62c ]
push [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
push 0xe
lea ecx [ ebp - 0x2c ]
call sub_40d2c0
test al al
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x30 ] ax
xor eax eax
push 0x1
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x2e ] ax
call sub_40b7ff
lea ecx [ ebp - 0x2c ]
call sub_44afbf
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x88 ]
dec eax
mov [ ebp - 0x8 ] eax
mov ecx [ ecx + eax * 4 ]
call sub_44a485
lea ecx [ ebp - 0x38 ]
call sub_44a46f
jmp r-xdata
jg r-xdata
mov ax [ esi ]
cmp ax [ edx ]
je r-xdata
xor eax eax
jmp r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx [ ecx ]
mov eax [ ebx + 0x18 ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x18 ] eax
mov [ rw-data ] ebx
cmp [ ebx + 0x1c ] 0x0
je r-xdata
jmp r-xdata
jae r-xdata
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
test eax eax
js r-xdata
add ebx 0x2
add esi 0x2
dec ecx
jne r-xdata
mov ebx [ ebp - 0x68 ]
movzx eax ax
cmp ax [ esi ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
mov edx [ ebp - 0x50 ]
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
movzx eax ax
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
mov esi [ ecx ]
mov ebx [ ebp - 0x40 ]
mov [ ebp - 0x80 ] eax
test eax eax
je r-xdata
mov eax ebx
mov [ ebp - 0x1c ] ebx
mov eax [ esi + 0x10 ]
mov esi [ esi + 0x14 ]
and eax 0xff00
mov [ ebp - 0x48 ] eax
test esi esi
jne r-xdata
cmp edx edi
jb r-xdata
mov ax [ ebx ]
cmp ax [ esi ]
jne r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov ebx [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_44863c
mov ebx [ ebp - 0x9c ]
mov edx [ ebp - 0x8 ]
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44d520
add esi 0xfffffffe
cmp esi 0x9
ja r-xdata
mov eax [ ebp - 0x14 ]
mov esi [ ebp + 0x8 ]
mov [ ebp + eax * 4 - 0x1b4 ] ebx
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ ecx + edx * 4 ]
inc ebx
cmp [ eax + 0x8 ] 0x4e
mov [ ebp - 0x14 ] ebx
je r-xdata
mov ecx [ esi + 0x8 ]
mov esi [ ebp - 0x5c ]
cmp ecx esi
je r-xdata
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
push ecx
call sub_401926
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp eax 0x5
jge r-xdata
mov eax [ ebp + ecx * 4 - 0x1b4 ]
mov [ edx + edi * 4 + 0x10c ] eax
mov eax [ esi ]
inc [ eax + 0x210 ]
fld [ ebp - 0x3c ]
call sub_471de0
mov ebx [ ebp - 0x3c ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x3c ]
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov edx [ ebx ]
cmp edx 0x8
jg r-xdata
push 0x7b
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
inc edx
mov [ ebp - 0x8 ] edx
cmp edi 0x1
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
mov ecx ebx
call sub_40fa40
lea ecx [ ebp - 0x8c ]
call sub_405800
lea ecx [ ebp - 0x9c ]
call sub_44a46f
lea ecx [ ebp - 0x2c ]
call sub_412570
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov ecx [ ebp - 0x88 ]
dec esi
push 0x34
mov ecx [ ecx + esi * 4 ]
mov [ ebp - 0x8 ] esi
call sub_40b7ff
mov eax [ ebp - 0x88 ]
lea ecx [ ebp - 0x2c ]
mov esi [ eax + esi * 4 ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_44afce
push eax
mov ecx esi
call sub_41df08
lea ecx [ ebp - 0xb0 ]
call sub_405cd3
mov [ ebp - 0xd ] 0x1
mov ecx [ ebp - 0x14 ]
mov ebx esi
mov eax [ ebx + 0x1c ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x1c ] eax
mov [ rw-data ] ebx
cmp [ ebx + 0x18 ] 0x0
je r-xdata
jmp r-xdata
jae r-xdata
add edx 0x2
add ecx 0x2
dec [ ebp - 0x1c ]
jne r-xdata
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x1c ] ebx
mov eax [ rw-data ]
mov [ ebp - 0x78 ] eax
mov ebx [ eax + 0x1c ]
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ ebp - 0x14 ]
jle r-xdata
mov ax [ ebx ]
cmp ax [ esi ]
je r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
je r-xdata
cmp eax [ ecx + 0x4 ]
jb r-xdata
lea esp [ esp ]
mov eax [ ecx + 0x18 ]
mov esi [ ebp - 0x68 ]
mov edx [ ebp - 0x50 ]
mov [ esi + 0x1c ] eax
mov eax [ edx ]
mov [ ecx + 0x18 ] eax
mov [ edx ] ecx
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x50 ]
jae r-xdata
add ebx 0x2
add esi 0x2
dec [ ebp - 0x1c ]
jne r-xdata
jmp [ eax * 4 + r-xdata ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
mov [ ebp + eax * 4 - 0x1b4 ] ebx
mov ecx [ edi + 0x4 ]
mov ebx eax
mov eax [ ecx + edx * 4 ]
inc ebx
cmp [ eax + 0x8 ] 0x4e
mov [ ebp - 0x14 ] ebx
je r-xdata
xor ebx ebx
jmp r-xdata
jmp [ esi * 4 + jump_table_40f6a4 ]
push esi
call sub_40d805
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
call sub_4113a0
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x15 ] 0x1
test eax eax
js r-xdata
push edx
call sub_422241
mov edi [ ebp - 0x30 ]
mov ebx [ ebp - 0x3c ]
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x84 ]
call sub_41bcea
mov eax [ ebp - 0x84 ]
mov edi [ ebp - 0x30 ]
mov ebx [ ebp - 0x3c ]
add esp 0x4
jmp r-xdata
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x7c ]
push eax
call sub_44863c
mov eax [ ebp - 0x7c ]
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44d520
add edi 0xfffffffe
cmp edi 0x9
ja r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ecx + 0x18 ] ebx
mov eax [ rw-data ]
mov [ ebp - 0x68 ] eax
mov ebx [ eax + 0x18 ]
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov ecx [ ebx + 0x4 ]
test edi edi
je r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ecx + 0x1c ]
mov esi [ ebp - 0x68 ]
mov [ esi + 0x18 ] eax
mov eax [ edx ]
mov [ ecx + 0x1c ] eax
mov [ edx ] ecx
cmp [ ecx + 0x18 ] 0x0
je r-xdata
jmp r-xdata
jae r-xdata
add ebx 0x2
add esi 0x2
dec [ ebp - 0x80 ]
jne r-xdata
jmp r-xdata
mov ebx [ edx ]
mov [ ebp - 0x68 ] ebx
mov ecx [ ebx + 0x4 ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x3c ]
test ecx ecx
je r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
mov ecx [ ebp - 0xc ]
movsx eax [ eax + 0xa ]
inc edx
mov [ ebp - 0x48 ] eax
push 0xffffffff
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
mov [ ebp - 0x8 ] edx
call sub_40fa40
test eax eax
js r-xdata
fld [ ebp - 0x2c ]
call sub_471de0
mov edx [ ebp - 0x44 ]
mov ebx eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x2c ]
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
xor eax eax
test bl bl
setne al
mov ebx eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40f600 ]
jmp [ eax * 4 + jump_table_47a1f9 ]
jmp [ edi * 4 + jump_table_40f654 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x18 ] eax
mov esi [ edx ]
mov [ ebp - 0x14 ] esi
mov eax [ esi + 0x18 ]
mov [ edx ] eax
jmp r-xdata
mov ax [ ebx ]
cmp ax [ esi ]
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ edx ]
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x1c ] eax
mov esi [ edx ]
mov [ ebp - 0x78 ] esi
mov eax [ esi + 0x1c ]
mov [ edx ] eax
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push edx
call sub_422241
mov edx [ ebp - 0x44 ]
add esp 0x4
mov ebx eax
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x54 ]
call sub_41bcea
mov ebx [ ebp - 0x54 ]
mov edx [ ebp - 0x44 ]
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_41e3cc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3c ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x3c ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_41e3cc
jmp r-xdata
mov eax [ ebp - 0x3c ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ ebp - 0x3c ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x3c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x3c ]
test ecx ecx
je r-xdata
fld [ ebp - 0x3c ]
call sub_471de0
mov edx [ ebp - 0x8 ]
mov ebx eax
jmp r-xdata
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x3c ]
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
xor eax eax
test bl bl
setne al
mov ebx eax
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ ebp - 0x3c ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
push edx
call sub_422241
mov edx [ ebp - 0x8 ]
add esp 0x4
mov ebx eax
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x6c ]
call sub_41bcea
mov ebx [ ebp - 0x6c ]
mov edx [ ebp - 0x8 ]
add esp 0x4
jmp r-xdata
sub_40f6d0
push ebp
mov ebp esp
sub esp 0x154
mov eax [ ebp + 0xc ]
push ebx
mov edx [ eax ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push esi
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x14 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x34 ] eax
movzx eax [ eax + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x1c ] edx
cmp ax 0x4e
je r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
jne r-xdata
cmp ax 0x35
je r-xdata
push 0xf
mov ecx edi
call sub_40d2c0
test al al
jne r-xdata
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ ecx + edx * 4 - 0x4 ]
mov [ ebp + 0x10 ] 0x0
movsx eax [ eax + 0xa ]
mov [ ebp + 0x14 ] eax
mov edi edi
mov ecx edi
call sub_45cff8
mov ecx ebx
test al al
je r-xdata
cmp ax 0x47
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x1c ]
cmp eax 0x5
jne r-xdata
mov eax [ ebp - 0x34 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x7c
call sub_44d520
lea ecx [ ebp - 0x18 ]
call sub_414430
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax 0x1
jne r-xdata
push 0x1
push r--data
push 0x0
push 0xa9
call sub_45c235
test eax eax
jns r-xdata
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_45f34f
jmp r-xdata
push 0xd
mov ecx edi
call sub_40d2c0
test al al
jne r-xdata
cmp esi edi
je r-xdata
cmp [ edi + 0xc ] 0xf
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ eax - 0x2 ]
cmp ecx 0x9
ja r-xdata
mov ebx [ ebp - 0x18 ]
mov eax ebx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_45ebe4
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0xa9
call sub_44d520
or eax 0xffffffff
jmp r-xdata
cmp [ ebx + 0x101 ] 0x0
jne r-xdata
mov ecx edi
call sub_44be14
test al al
je r-xdata
push 0xe
mov ecx edi
call sub_40d2c0
test al al
jne r-xdata
cmp [ esi + 0xc ] 0x4
je r-xdata
push 0x1
push 0x1
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
mov ecx ebx
push [ ebp + 0x8 ]
call sub_45f4df
test eax eax
js r-xdata
cmp esi edi
je r-xdata
mov ebx [ ebp - 0x18 ]
jmp r-xdata
jmp [ ecx * 4 + r-xdata ]
push [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
push 0x4
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
cmp [ ebx + 0x102 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_45d154
or eax 0xffffffff
mov [ ebp - 0x28 ] ax
xor eax eax
mov [ ebp - 0x26 ] ax
mov eax [ ebp + 0xc ]
push 0xd
dec [ eax ]
mov ecx edi
call sub_40d2c0
lea ecx [ ebp - 0x30 ]
test al al
je r-xdata
push esi
push edi
push [ ebp + 0xc ]
mov ecx ebx
push [ ebp + 0x8 ]
call sub_45f34f
jmp r-xdata
mov ecx edi
call sub_44be14
test al al
jne r-xdata
cmp [ edi + 0xc ] 0x4
jne r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
cmp [ esi + 0xc ] 0x4
je r-xdata
push 0x7b
mov eax [ ebp + 0x8 ]
mov ecx edx
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov eax [ ebp - 0xc ]
cmp eax 0x1
jne r-xdata
xor eax eax
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] 0x0
call sub_4113a0
cmp [ ebx + 0x101 ] 0x0
je r-xdata
push 0x34
call sub_40b7ff
lea eax [ ebp - 0x50 ]
push eax
mov ecx edi
call sub_44afce
push eax
lea ecx [ ebp - 0x30 ]
call sub_41df08
lea ecx [ ebp - 0x50 ]
call sub_405cd3
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ ecx + eax * 4 ]
call sub_44a485
lea eax [ ebp + 0xb ]
push eax
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov ecx ebx
call sub_413680
test eax eax
js r-xdata
push 0x1
call sub_40b7ff
mov ecx edi
call sub_44afbf
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ ecx + eax * 4 ]
call sub_44a485
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov ecx ebx
call sub_4144e0
test eax eax
js r-xdata
mov eax [ ebp - 0x34 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0xba
call sub_44d520
or eax 0xffffffff
jmp r-xdata
push [ edi + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_40c935
jmp r-xdata
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
cmp [ edi + 0xc ] 0x4
jne r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
lea ecx [ eax - 0x2 ]
cmp ecx 0x9
ja r-xdata
mov eax [ ebp + 0x10 ]
inc eax
mov [ ebp + eax * 4 - 0x154 ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
cmp [ ebx + 0x102 ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_45ee52
lea ecx [ ebp - 0x18 ]
call sub_4084a6
mov eax [ ebp - 0x10 ]
push [ eax ]
call sub_4218fb
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ ebp - 0x30 ]
call sub_44a46f
lea ecx [ ebp - 0x18 ]
call sub_405800
or eax 0xffffffff
jmp r-xdata
cmp [ ebx + 0xfc ] 0x1
je r-xdata
cmp [ ebx + 0xfc ] 0x1
jne r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push edi
mov ecx esi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
call sub_4113a0
push [ edi + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_40c935
jmp r-xdata
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jl r-xdata
xor ebx ebx
jmp r-xdata
jmp [ ecx * 4 + r-xdata ]
mov eax [ ebp + 0xc ]
push 0xffffffff
inc [ eax ]
mov eax [ eax ]
mov eax [ ecx + eax * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40fa40
test eax eax
js r-xdata
cmp [ edi + 0xc ] 0x5
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_40d89e
lea ecx [ ebp - 0x18 ]
call sub_412570
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_45ef9d
lea ecx [ ebp - 0x18 ]
call sub_4084a6
mov eax [ ebp - 0x10 ]
push [ eax ]
call sub_4218fb
add esp 0x4
test eax eax
jne r-xdata
push edi
lea ecx [ ebp - 0x18 ]
call sub_40d89e
lea ecx [ ebp - 0x30 ]
call sub_44a46f
lea ecx [ ebp - 0x18 ]
call sub_405800
jmp r-xdata
jmp [ eax * 4 + jump_table_47c85e ]
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov edx [ ebx ]
cmp edx 0x8
jg r-xdata
mov ecx edi
call sub_40342c
jmp r-xdata
mov eax [ edi ]
xor ecx ecx
mov [ eax + 0x210 ] 0x0
mov eax [ ebp + 0x10 ]
test eax eax
jle r-xdata
push edi
lea ecx [ ebp - 0x18 ]
call sub_40d89e
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx esi
call sub_41e3cc
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
call sub_44863c
mov eax [ ebp - 0x38 ]
add esp 0x4
jmp r-xdata
push 0x0
push 0x1
push edi
call sub_4114a0
mov edi eax
add esp 0xc
mov [ ebp + 0x10 ] edi
test edi edi
je r-xdata
lea esp [ esp ]
push ecx
call sub_44aa9c
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
jmp [ eax * 4 + jump_table_47c832 ]
test eax eax
js r-xdata
push [ ebp + 0x14 ]
push 0x7a
jmp r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
jne r-xdata
inc ecx
cmp ecx eax
jl r-xdata
mov edx [ edi ]
mov ebx [ edx + 0x210 ]
cmp ebx 0x40
jge r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44d520
push ecx
call sub_401926
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax 0x5
jge r-xdata
cmp [ edi + 0xc ] 0x5
jne r-xdata
mov eax [ ebp + ecx * 4 - 0x150 ]
mov [ edx + ebx * 4 + 0x10c ] eax
mov eax [ edi ]
inc [ eax + 0x210 ]
mov eax [ ebp + 0x10 ]
push ecx
call sub_401926
jmp r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov ebx [ ebp - 0x4 ]
jmp [ eax * 4 + r-xdata ]
sub_40fa40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
mov eax [ rw-data ]
push ebx
push esi
push edi
mov [ esp + 0x14 ] ecx
test al 0x1
je r-xdata
or eax 0x1
push sub_471fbf
mov [ rw-data ] eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
call sub_421b2a
add esp 0x4
jmp r-xdata
mov edi [ ebp + 0x10 ]
xor eax eax
push 0x8
mov [ esp + 0x60 ] 0x1
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x1
call sub_42010a
mov ebx eax
add esp 0x4
mov [ esp + 0x34 ] eax
test ebx ebx
je r-xdata
xor ebx ebx
mov [ esp + 0x34 ] ebx
jmp r-xdata
mov [ ebx ] 0x14
mov esi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ ebx + 0x4 ] 0x0
mov eax [ edx + 0x4 ]
mov [ esp + 0x58 ] ebx
mov eax [ eax + ecx * 4 ]
mov [ esp + 0x54 ] 0x1
movsx eax [ eax + 0xa ]
mov [ esp + 0x18 ] 0x17
mov [ esp + 0x64 ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov esi 0x14
mov esi [ edx + 0x4 ]
mov edx [ esi + ecx * 4 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x7f
je r-xdata
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov eax ebx
cwde
cmp eax 0x33
je r-xdata
mov eax [ eax ]
imul eax eax 0x15
movzx eax [ eax + esi + rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x6
ja r-xdata
cmp [ esp + 0x24 ] 0x1
jne r-xdata
mov esi [ esp + 0x24 ]
mov [ esp + 0x18 ] 0x16
test esi esi
jne r-xdata
cmp eax 0x4f
je r-xdata
cmp esi 0x7
je r-xdata
jmp [ eax * 4 + jump_table_411304 ]
push [ esp + 0x64 ]
push 0x6e
jmp r-xdata
xor edi edi
cmp [ esp + 0x2d ] 0x0
jne r-xdata
cmp edi rw-data
je r-xdata
cmp eax 0x5
je r-xdata
mov esi [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
test esi esi
je r-xdata
cmp esi 0x8
je r-xdata
test cl cl
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x58 ]
push eax
call sub_411620
test eax eax
js r-xdata
test cl cl
je r-xdata
push [ esp + 0x64 ]
mov ecx [ esp + 0x18 ]
push 0x6b
call sub_44d520
or edi 0xffffffff
jmp r-xdata
push [ esp + 0x64 ]
mov ecx [ esp + 0x18 ]
push 0x6c
call sub_44d520
or edi 0xffffffff
jmp r-xdata
push [ esp + 0x64 ]
mov ecx [ esp + 0x18 ]
push 0x6d
call sub_44d520
or edi 0xffffffff
jmp r-xdata
mov ecx [ esp + 0x1c ]
call sub_44d520
jmp r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax rw-data
je r-xdata
push 0x18
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ edi + 0xc ] 0x4
je r-xdata
mov esi [ esp + 0x24 ]
mov [ esp + 0x18 ] 0x16
test esi esi
jne r-xdata
cmp eax 0x58
ja r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp esi 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
mov [ ebx ] esi
mov [ esp + 0x5d ] 0x0
jmp r-xdata
push 0x8
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
push [ esp + 0x64 ]
jmp r-xdata
mov ebx [ esp + 0x58 ]
mov [ esp + 0x34 ] ebx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
mov edi [ esp + 0x28 ]
mov [ esp + 0x10 ] edi
jmp r-xdata
mov eax [ ecx + 0xc ]
dec [ eax ]
mov eax [ ecx + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x5
jge r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi [ ebx + 0x4 ]
push ebx
call j_sub_4228ca#2
add esp 0x4
mov ebx esi
test esi esi
jne r-xdata
mov [ esp + 0x2d ] 0x0
jmp r-xdata
cmp [ eax + 0xc ] 0x4
je r-xdata
xor esi esi
jmp r-xdata
push rw-data
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_4113a0
cmp [ esp + 0x2d ] 0x0
jne r-xdata
mov [ esp + 0x6c ] edi
cmp [ rw-data ] 0x4
jne r-xdata
mov esi [ edi + 0x8 ]
test esi esi
jne r-xdata
cmp [ esp + 0x2d ] 0x0
jne r-xdata
cmp edi rw-data
je r-xdata
movzx eax [ eax + lookup_table_4112a8 ]
jmp [ eax * 4 + jump_table_41123c ]
mov edx [ ebp + 0x8 ]
cmp [ esp + 0x2d ] 0x0
je r-xdata
mov eax edi
inc [ esp + 0x54 ]
xor eax eax
jmp r-xdata
mov [ eax ] esi
mov ecx [ esp + 0x18 ]
push 0x6e
call sub_44d520
mov ebx [ esp + 0x58 ]
mov [ esp + 0x34 ] ebx
jmp r-xdata
mov cl [ esp + 0x5d ]
test cl cl
jne r-xdata
cmp [ eax ] 0x12
je r-xdata
test cl cl
je r-xdata
test cl cl
jne r-xdata
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
push [ ecx ]
call j_sub_4228ca#2
mov eax [ esp + 0x4c ]
add esp 0x4
push [ eax + 0xc ]
call j_sub_4228ca#2
mov ecx [ esp + 0x4c ]
add esp 0x4
jmp r-xdata
push ecx
call j_sub_4228ca#2
add esp 0x4
mov [ ebx + 0x8 ] 0x0
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push ebx
mov [ ebx + 0xc ] 0x1
mov [ ebx ] 0x0
call j_sub_4228ca#2
add esp 0x4
mov ebx esi
test esi esi
jne r-xdata
cmp [ rw-data ] 0x4
jne r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax esi
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x28 ] eax
jmp r-xdata
inc esi
mov [ esp + 0x24 ] esi
cmp esi 0x1
jne r-xdata
mov eax [ eax + 0x10 ]
mov [ esp + 0x6c ] eax
jmp r-xdata
mov [ esp + 0x6c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x79
call sub_44d520
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
jge r-xdata
mov eax [ esp + 0x10 ]
cmp eax rw-data
je r-xdata
push 0x18
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov edx [ esp + 0x10 ]
cmp [ edi + 0xc ] 0x4
je r-xdata
mov eax [ edx ]
cmp eax 0x4
jl r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0xd
mov [ ecx ] eax
jmp r-xdata
test ecx ecx
je r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x13
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x1
mov [ ecx ] eax
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x18 ] 0x16
je r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0x16
jne r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
xor esi esi
mov [ ecx ] eax
jmp r-xdata
mov esi [ esp + 0x24 ]
mov [ esp + 0x18 ] 0x16
test esi esi
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0x16
jne r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0xe
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x9
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x5
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x2
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x4
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x3
mov [ ecx ] eax
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x16
call sub_41e016
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov edx [ esi ]
lea ecx [ esp + 0x20 ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax + edx * 4 ]
call sub_41e078
mov ecx [ esp + 0x14 ]
push eax
push [ edx ]
call sub_41e08f
test eax eax
jns r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x16
call sub_41e016
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ esp + 0x20 ]
fld [ eax ]
fstp [ esp + 0x48 ]
call sub_41e078
mov esi eax
mov ecx esi
call sub_412570
fld [ esp + 0x48 ]
mov eax [ esp + 0x28 ]
fstp [ esi ]
mov edi [ esp + 0x20 ]
mov [ esi + 0xc ] 0x3
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
inc [ esi ]
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x16
call sub_41e016
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x16
call sub_41e016
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ esp + 0x20 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
call sub_41e078
mov esi eax
mov ecx esi
call sub_412570
mov [ esi + 0x4 ] ebx
mov ebx [ esp + 0x34 ]
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov esi [ ebp + 0xc ]
inc [ esi ]
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x18 ] 0x16
je r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x6
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0xf
mov [ ecx ] eax
jmp r-xdata
lea ecx [ esp + 0x54 ]
call sub_402835
mov eax [ eax ]
cmp eax 0x14
je r-xdata
cmp [ esp + 0x24 ] 0x0
mov eax [ ebp + 0xc ]
je r-xdata
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x94 ] 0x1
mov [ esp + 0x1f ] 0x1
test ecx ecx
je r-xdata
push eax
lea ecx [ esp + 0xf4 ]
mov [ esp + 0xfc ] 0x0
call sub_4113a0
lea ecx [ esp + 0xf0 ]
call sub_405372
mov ecx [ esp + 0x18 ]
test al al
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
cmp ecx 0x8
je r-xdata
cmp ecx 0x7
jne r-xdata
mov [ eax + 0x4 ] ebx
mov ebx eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x58 ] ebx
cmp [ esp + 0x5c ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
push ebx
call j_sub_4228ca#2
mov ebx esi
mov esi [ esp + 0x1c ]
add esp 0x4
mov [ esp + 0x34 ] ebx
mov [ esp + 0x58 ] ebx
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov eax ebx
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_41136c ]
mov ecx [ ebx + 0x8 ]
mov esi [ ebx + 0x10 ]
mov [ esp + 0x48 ] ecx
test ecx ecx
jne r-xdata
mov ebx [ esp + 0x34 ]
jmp r-xdata
jmp r-xdata
push ecx
call sub_401926
mov eax [ esp + 0x10 ]
mov [ eax + 0x8 ] 0x0
jmp r-xdata
mov eax [ eax + 0xc ]
cmp eax 0x5
jge r-xdata
cmp [ rw-data ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ esp + 0x30 ] eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
mov ecx [ edi + 0x8 ]
call sub_40c935
jmp r-xdata
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
push [ esi + 0xc ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push esi
call j_sub_4228ca#2
add esp 0x4
mov [ edi + 0x8 ] 0x0
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push rw-data
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x0
call sub_4113a0
mov esi [ esp + 0x24 ]
mov [ esp + 0x2d ] 0x0
jmp r-xdata
cmp [ eax + 0xc ] 0x4
je r-xdata
xor esi esi
jmp r-xdata
push rw-data
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_4113a0
cmp [ esp + 0x2d ] 0x0
jne r-xdata
mov esi edi
cmp [ rw-data ] 0x4
jne r-xdata
mov esi [ edi + 0x8 ]
test esi esi
jne r-xdata
dec eax
cmp eax 0x29
ja r-xdata
cmp eax 0x27
jge r-xdata
mov [ esp + 0x18 ] esi
lea esp [ esp ]
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x12
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + ecx * 4 - 0x4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x48
je r-xdata
push rw-data
mov ecx edi
call sub_40d89e
jmp r-xdata
cmp [ esp + 0x2d ] 0x0
jne r-xdata
cmp eax 0x13
je r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0x18 ] 0xb
mov esi [ esp + 0x18 ]
mov [ ecx ] eax
jmp r-xdata
cmp [ esp + 0x2d ] 0x0
je r-xdata
cmp edi rw-data
je r-xdata
cmp eax 0x13
je r-xdata
mov [ esp + 0x18 ] 0xc
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ edx + ecx * 4 ]
mov ecx [ eax ]
mov eax [ ecx ]
mov [ esp + 0xb0 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0xb4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0xb8 ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x14 ]
inc [ eax ]
mov [ esp + 0xbc ] eax
lea eax [ esp + 0xb0 ]
push eax
call sub_41cf79
test eax eax
je r-xdata
lea eax [ esp + 0x87 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41e078
push eax
push esi
push edi
mov edi [ esp + 0x24 ]
push 0x0
mov ecx edi
call sub_413680
test eax eax
js r-xdata
mov eax [ ebp + 0xc ]
lea eax [ esp + 0xd0 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xd4 ] 0x0
mov [ esp + 0xdc ] 0x0
mov [ esp + 0xe0 ] 0x1
call sub_41e078
mov esi [ ebp + 0xc ]
mov ecx [ esp + 0x18 ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40f6d0
test eax eax
js r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp eax 0x12
je r-xdata
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6e
call sub_44d520
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ esp + 0x18 ] 0x16
mov [ eax ] edx
mov ecx 0x1
mov ebx eax
lea ecx [ esp + 0x88 ]
call sub_45cff8
test al al
jne r-xdata
mov eax [ esi + ecx * 4 - 0x4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x48
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ba31
test eax eax
js r-xdata
test al al
jne r-xdata
lea ecx [ esp + 0xf0 ]
call sub_412570
mov esi [ ebp + 0xc ]
mov esi [ ebx + 0x4 ]
push ebx
call j_sub_4228ca#2
mov ebx esi
mov esi [ esp + 0x1c ]
add esp 0x4
mov [ esp + 0x34 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5d ] 0x0
jmp r-xdata
mov [ esp + 0x5d ] 0x1
cmp [ eax ] 0x14
je r-xdata
push [ esp + 0x64 ]
push 0x6d
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x58 ]
push eax
call sub_411620
test eax eax
js r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov ecx ebx
call sub_41e3cc
jmp r-xdata
mov eax [ ebx ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ ebx ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
push [ rw-data ]
mov ecx [ eax + 0x8 ]
call sub_40c935
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov ecx [ esp + 0x10 ]
push rw-data
mov [ ecx + 0xc ] 0x1
mov [ ecx ] 0x0
call sub_4113a0
mov ecx [ rw-data ]
mov [ esp + 0x1f ] 0x0
test cl 0x1
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov eax [ esp + 0x30 ]
jmp r-xdata
mov esi [ rw-data ]
jmp [ eax * 4 + jump_table_47b962 ]
cmp [ rw-data ] 0x4
jne r-xdata
mov ecx eax
call sub_412570
mov ecx [ esp + 0x10 ]
push rw-data
call sub_4113a0
mov eax [ esp + 0x10 ]
mov edx esi
mov [ esi + 0x10 ] eax
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x28 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
inc esi
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ esp + 0x24 ] esi
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp esi 0x1
jne r-xdata
mov esi [ edx + 0x10 ]
jmp r-xdata
mov esi edx
jmp r-xdata
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
jge r-xdata
movzx eax [ eax + lookup_table_411340 ]
jmp [ eax * 4 + jump_table_411320 ]
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp ax 0x4f
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esi ]
inc [ esp + 0x24 ]
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
mov ecx [ esp + 0x10 ]
push rw-data
call sub_40d89e
mov [ esp + 0x2d ] 0x0
jmp r-xdata
push 0x18
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0x18 ] 0x11
mov esi [ esp + 0x18 ]
mov [ ecx ] eax
jmp r-xdata
push 0x18
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax rw-data
je r-xdata
mov edx [ esp + 0x10 ]
cmp [ edi + 0xc ] 0x4
je r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x86
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x85
call sub_44d520
lea ecx [ esp + 0xb0 ]
call sub_405cd3
jmp r-xdata
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41e078
mov ecx eax
call sub_44ba5d
inc [ esi ]
lea ecx [ esp + 0xb0 ]
call sub_405cd3
jmp r-xdata
cmp [ edi + 0xfc ] 0x1
jne r-xdata
lea ecx [ esp + 0xd0 ]
call sub_412570
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
lea eax [ esp + 0xd0 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41e078
mov ecx eax
call sub_40d89e
lea ecx [ esp + 0xd0 ]
call sub_412570
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
lea ecx [ esp + 0x20 ]
call sub_41e078
mov ecx eax
call sub_44a7a2
lea ecx [ esp + 0x20 ]
test al al
je r-xdata
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x58 ]
push eax
call sub_411620
test eax eax
jns r-xdata
cmp ax 0x48
jne r-xdata
inc ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0xe0 ]
push eax
lea eax [ esp + 0x8c ]
push eax
push esi
push edi
mov [ esp + 0xf0 ] 0x0
mov [ esp + 0xf8 ] 0x0
mov [ esp + 0xfc ] 0x1
call sub_45f34f
test eax eax
js r-xdata
cmp [ esp + 0x1f ] al
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_41e078
push eax
lea ecx [ esp + 0x8c ]
call sub_40d89e
mov [ esp + 0x1f ] 0x0
cmp ax 0x4f
jne r-xdata
push [ esp + 0x64 ]
mov ecx [ esp + 0x18 ]
push 0x6e
call sub_44d520
lea ecx [ esp + 0xf0 ]
or edi 0xffffffff
call sub_412570
mov eax [ esp + 0x10 ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x8
je r-xdata
jmp r-xdata
mov ecx [ esi ]
cmp ecx eax
je r-xdata
dec [ esp + 0x54 ]
jmp r-xdata
mov ebx [ esp + 0x58 ]
mov cl [ esp + 0x5d ]
mov [ esp + 0x34 ] ebx
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ ebx ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
jmp [ eax * 4 + jump_table_47b98e ]
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_40d3d2
push sub_471fb5
call sub_421b2a
mov esi [ rw-data ]
mov eax [ esp + 0x34 ]
add esp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ esp + 0x3c ] rw-data
mov [ esp + 0x68 ] rw-data
cmp [ esi ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x1f ] 0x0
test cl 0x1
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_41e3cc
jmp r-xdata
mov eax [ edi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ edi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push [ rw-data ]
mov ecx [ eax + 0x8 ]
call sub_40c935
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x48 ] eax
test ecx ecx
jne r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov eax [ esp + 0x48 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
mov esi [ ebp + 0xc ]
inc [ esi ]
jmp r-xdata
push [ rw-data ]
mov ecx [ edi + 0x8 ]
call sub_40c935
jmp r-xdata
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
push [ esi + 0xc ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push esi
call j_sub_4228ca#2
add esp 0x4
mov [ edi + 0x8 ] 0x0
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push rw-data
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x0
call sub_4113a0
mov esi [ esp + 0x24 ]
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x7
mov [ ecx ] eax
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x16
call sub_41e016
lea ecx [ esp + 0x20 ]
call sub_41e078
mov esi eax
mov ecx esi
call sub_412570
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x20 ]
mov [ esi + 0xc ] 0x9
mov [ esi ] 0x0
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
inc [ esi ]
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x16
call sub_41e016
mov [ esp + 0xa8 ] 0x1
push [ esp + 0xa8 ]
lea ecx [ esp + 0x24 ]
call sub_41e078
mov ecx eax
call sub_41e387
mov esi [ ebp + 0xc ]
mov eax [ esp + 0x28 ]
inc [ esi ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0x8
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov esi 0xa
mov [ ecx ] eax
jmp r-xdata
sub esp 0x10
mov ecx esp
push r--data
mov [ esp + 0x2c ] 0x16
call sub_40caee
push 0xffffffff
push 0x29
jmp r-xdata
sub esp 0x10
mov ecx esp
push r--data
mov [ esp + 0x2c ] 0x16
call sub_40caee
push 0x0
push 0x2a
lea eax [ esp + 0xc0 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xc4 ] 0x0
mov [ esp + 0xcc ] 0x0
mov [ esp + 0xd0 ] 0x1
call sub_41e078
mov esi [ ebp + 0xc ]
mov ecx [ esp + 0x18 ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40f6d0
test eax eax
js r-xdata
mov eax [ edx + ecx * 4 ]
lea ecx [ esp + 0x20 ]
push [ eax ]
call sub_41e078
mov ecx eax
call sub_44b020
inc [ esi ]
jmp r-xdata
cmp [ esp + 0x24 ] 0x1
je r-xdata
xor esi esi
jmp r-xdata
push rw-data
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_4113a0
xor esi esi
jmp r-xdata
push rw-data
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_4113a0
mov [ esp + 0x2d ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x4
je r-xdata
cmp [ esp + 0x2d ] 0x0
jne r-xdata
mov esi edi
cmp [ rw-data ] 0x4
jne r-xdata
mov ecx edi
call sub_412570
push rw-data
mov ecx edi
call sub_4113a0
mov [ esp + 0x18 ] 0x10
jmp r-xdata
call sub_41bd8f
mov esi [ ebp + 0xc ]
mov ebx [ esp + 0x58 ]
inc [ esi ]
mov [ esp + 0x18 ] 0x12
mov [ esp + 0x34 ] ebx
jmp r-xdata
call sub_41bd8f
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
inc [ ebx ]
mov edx [ ebx ]
mov esi [ eax + 0x4 ]
mov ecx 0x1
jmp r-xdata
cmp ax 0x7f
je r-xdata
dec ecx
jmp r-xdata
inc edx
mov [ ebx ] edx
test ecx ecx
jne r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6e
call sub_44d520
lea ecx [ esp + 0xe0 ]
call sub_412570
lea ecx [ esp + 0x88 ]
call sub_412570
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
cmp [ esp + 0x1f ] 0x0
mov [ esp + 0x18 ] 0x16
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa9
call sub_44d520
lea ecx [ esp + 0x88 ]
call sub_412570
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
mov esi [ esp + 0x14 ]
lea ecx [ esi + 0x16c ]
call sub_45ea97
push eax
lea ecx [ esp + 0x8c ]
call sub_40d89e
lea ecx [ esp + 0x88 ]
call sub_45cff8
test al al
jne r-xdata
mov [ esp + 0xac ] 0x1
push [ esp + 0xac ]
lea ecx [ esp + 0x24 ]
call sub_41e078
mov ecx eax
call sub_41e387
jmp r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x10 ]
call sub_41e3cc
jmp r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
mov eax [ esp + 0x14 ]
add esp 0x4
push [ eax ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_40d3d2
push sub_471fb5
call sub_421b2a
mov eax [ esp + 0x34 ]
add esp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ esp + 0x40 ] rw-data
mov [ esp + 0x68 ] rw-data
push eax
call [ VariantClear@IAT ]
push [ edi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
jmp [ eax * 4 + jump_table_47b936 ]
jmp [ eax * 4 + jump_table_47b90a ]
lea ecx [ esp + 0x118 ]
call sub_4499d0
push rw-data
lea ecx [ esp + 0x24 ]
call sub_41e016
lea eax [ esp + 0x100 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41e078
mov ecx eax
call sub_44a689
mov esi [ ebp + 0xc ]
lea ecx [ esp + 0x108 ]
inc [ esi ]
call sub_405cd3
jmp r-xdata
lea ecx [ esp + 0xc0 ]
call sub_412570
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
lea eax [ esp + 0xc0 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41e078
mov ecx eax
call sub_40d89e
lea ecx [ esp + 0xc0 ]
call sub_412570
jmp r-xdata
mov [ esp + 0x30 ] edi
jmp r-xdata
cmp [ esp + 0x2d ] 0x0
mov eax [ esp + 0x10 ]
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
mov [ esi + 0x10 ] eax
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x28 ] edx
jmp r-xdata
mov edx esi
mov [ esi + 0x10 ] eax
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x28 ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
mov ecx eax
call sub_412570
mov ecx [ esp + 0x10 ]
push rw-data
call sub_4113a0
mov esi [ edx + 0x10 ]
jmp r-xdata
mov esi edx
jmp r-xdata
push eax
call sub_40c935
jmp r-xdata
test ecx ecx
jne r-xdata
push [ rw-data ]
mov ecx [ edi + 0x8 ]
call sub_40c935
jmp r-xdata
mov esi [ esp + 0x18 ]
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
cmp ax 0x58
jne r-xdata
inc ecx
jmp r-xdata
mov edx ebx
mov ebx [ esp + 0x34 ]
mov edx [ edx ]
mov eax [ esi + edx * 4 - 0x4 ]
mov esi [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x48
mov eax [ ebp + 0x14 ]
jne r-xdata
cmp ax 0x40
jne r-xdata
mov eax [ esi + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
jne r-xdata
lea eax [ esp + 0xe0 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41e016
lea ecx [ esp + 0xe0 ]
call sub_412570
lea ecx [ esp + 0x88 ]
call sub_412570
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_41bd8f
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx esi
movsx eax [ eax + 0xa ]
push eax
push 0xa7
call sub_44d520
lea ecx [ esp + 0x88 ]
call sub_412570
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
cmp [ esp + 0x5d ] 0x0
jne r-xdata
cmp [ esp + 0x2d ] 0x0
je r-xdata
mov esi edi
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x10 ]
push [ eax ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
mov ecx [ esi + 0x18 ]
lea eax [ esi + 0x18 ]
mov [ esp + 0x44 ] eax
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41e3cc
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_41e3cc
jmp r-xdata
mov eax [ edi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ edi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov [ esp + 0x70 ] r--data
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x0
mov eax [ edx + ecx * 4 ]
mov ecx [ eax ]
movsx eax [ eax + 0xa ]
mov [ esp + 0x40 ] eax
mov eax [ rw-data ]
mov [ esp + 0x60 ] ecx
test al 0x1
je r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov [ esp + 0x30 ] eax
mov eax [ ebp + 0xc ]
inc esi
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ esp + 0x24 ] esi
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp esi 0x1
jne r-xdata
jmp r-xdata
cmp [ esi + 0xc ] 0x4
mov eax [ eax ]
mov ecx [ esi + 0x8 ]
mov [ esp + 0x48 ] eax
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esp + 0x14 ]
inc [ esi ]
cmp [ eax + 0x101 ] 0x0
jne r-xdata
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
cmp ax 0x7f
je r-xdata
dec ecx
jmp r-xdata
inc edx
mov [ ebx ] edx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
cmp ecx 0x1
je r-xdata
mov esi [ ebx + 0x4 ]
push ebx
call j_sub_4228ca#2
mov ebx esi
add esp 0x4
mov [ esp + 0x34 ] ebx
mov [ esp + 0x58 ] ebx
jmp r-xdata
cmp [ esp + 0x5c ] 0x0
je r-xdata
mov esi [ esp + 0x10 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
cmp [ esp + 0x1f ] 0x0
mov eax [ esi + 0x18 ]
mov ecx [ esp + 0x68 ]
mov [ ecx + 0x1c ] eax
mov eax [ rw-data ]
mov ecx [ esp + 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov eax [ ecx + 0x4 ]
cmp edx eax
ja r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x38 ] eax
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov ebx [ esp + 0x30 ]
mov [ esp + 0x38 ] eax
mov eax [ ebx ]
mov ebx [ esp + 0x34 ]
mov [ esp + 0x40 ] eax
test ecx ecx
je r-xdata
mov ecx [ esi ]
mov eax edx
mov edx [ esp + 0x30 ]
mov [ esp + 0x48 ] eax
mov edx [ edx ]
test eax eax
je r-xdata
mov ecx [ edx + 0x18 ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
cmp eax ecx
jb r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ edi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
or eax 0x1
push r--data
lea ecx [ esp + 0x11c ]
mov [ rw-data ] eax
call sub_40caee
mov ecx [ rw-data ]
push [ eax ]
mov edx [ ecx ]
call [ edx + 0x4 ]
lea ecx [ esp + 0x118 ]
mov [ rw-data ] eax
call sub_405cd3
mov ecx [ esp + 0x60 ]
jmp r-xdata
cmp ecx [ rw-data ]
je r-xdata
push [ rw-data ]
mov ecx [ eax + 0x8 ]
call sub_40c935
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_41e078
push eax
call sub_45ee52
mov eax [ esp + 0x14 ]
jmp r-xdata
cmp [ eax + 0x102 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
je r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push 0x10
mov [ esi ] 0x0
mov [ esi + 0xc ] 0x4
call sub_42010a
mov edx eax
add esp 0x4
test edx edx
je r-xdata
mov esi ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x18 ] 0x12
mov [ esp + 0x34 ] ebx
jmp r-xdata
cmp ax 0x40
jne r-xdata
mov eax [ esi + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x57
jne r-xdata
lea eax [ edx - 0x1 ]
mov [ esi ] eax
jmp r-xdata
mov esi [ ebx + 0x4 ]
push ebx
call j_sub_4228ca#2
mov ebx esi
add esp 0x4
mov [ esp + 0x34 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5d ] 0x0
jmp r-xdata
mov [ esp + 0x5d ] 0x1
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x9
mov [ esi ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx eax
jmp r-xdata
mov eax [ ecx ]
mov ebx [ esp + 0x30 ]
mov [ esp + 0x38 ] eax
mov eax [ ebx ]
mov ebx [ esp + 0x34 ]
mov [ esp + 0x48 ] edx
mov [ esp + 0x40 ] eax
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ esp + 0x40 ] ecx
cmp ecx edx
jbe r-xdata
xor eax eax
jmp r-xdata
lea esp [ esp ]
xor eax eax
lea esp [ esp ]
cmp [ esp + 0x1f ] 0x0
mov eax [ esi ]
mov ecx [ esp + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov ecx [ esp + 0x40 ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
mov ecx [ edx + 0x1c ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ esp + 0x30 ]
mov edx [ edx ]
mov eax [ eax ]
mov [ esp + 0x3c ] eax
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov edx [ esp + 0x30 ]
mov [ esp + 0x3c ] eax
mov edx [ edx ]
test eax eax
je r-xdata
push [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
push esi
push [ ebp + 0x8 ]
call sub_45e713
lea ecx [ esp + 0x70 ]
mov esi eax
call sub_4404c9
test esi esi
jns r-xdata
mov eax [ ebp + 0x8 ]
inc [ esi ]
mov ecx [ esi ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
jmp r-xdata
jmp [ eax * 4 + jump_table_47b886 ]
xor edx edx
jmp r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
test ecx ecx
je r-xdata
dec [ esp + 0x54 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp edx [ ecx + 0x4 ]
jae r-xdata
jmp r-xdata
mov edx [ eax ]
mov eax [ esp + 0x40 ]
mov [ esp + 0x48 ] ecx
mov ecx [ esp + 0x30 ]
mov ecx [ ecx ]
test eax eax
je r-xdata
mov ecx edx
mov [ esp + 0x40 ] edx
test eax eax
js r-xdata
add [ esp + 0x38 ] 0x2
add eax 0x2
mov [ esp + 0x40 ] eax
dec ecx
jne r-xdata
movzx eax [ eax ]
mov ecx [ esp + 0x38 ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
jg r-xdata
movzx eax [ edx ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add edx 0x2
add ecx 0x2
dec [ esp + 0x48 ]
jne r-xdata
mov eax [ esp + 0x30 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax edx
mov [ esp + 0x60 ] edx
jmp r-xdata
mov ebx [ esp + 0x30 ]
mov edx [ ecx ]
mov ebx [ ebx ]
mov [ esp + 0x44 ] ebx
mov ebx [ esp + 0x34 ]
mov [ esp + 0x3c ] eax
test eax eax
je r-xdata
mov edx [ ecx + 0x4 ]
cmp edx eax
ja r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
lea esp [ esp ]
mov eax [ esp + 0x14 ]
cmp [ eax + 0xfc ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov [ esp + 0x48 ] eax
xor esi esi
mov [ esp + 0x80 ] eax
lea ecx [ esp + 0x20 ]
call sub_41e078
mov ecx [ esp + 0x14 ]
push eax
call sub_45ef9d
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41e3cc
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi + 0x8 ] edx
push [ esp + 0x6c ]
mov esi [ ebp + 0xc ]
mov ecx [ esp + 0x18 ]
inc [ esi ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40f6d0
test eax eax
js r-xdata
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov [ ecx + 0x18 ] esi
mov eax [ rw-data ]
mov [ esp + 0x3c ] eax
mov esi [ eax + 0x18 ]
mov eax [ esp + 0x30 ]
mov [ rw-data ] esi
jmp r-xdata
jmp r-xdata
mov ebx [ esp + 0x38 ]
mov ax [ eax ]
cmp ax [ ebx ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x40 ]
je r-xdata
cmp eax [ esp + 0x44 ]
jb r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov ebx [ esp + 0x38 ]
mov ax [ eax ]
cmp ax [ ebx ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x40 ]
je r-xdata
mov [ esp + 0x1f ] 0x1
mov edx [ esp + 0x44 ]
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
cmp eax [ ecx + 0x4 ]
jae r-xdata
mov eax [ esp + 0x44 ]
lea esp [ esp ]
mov edx eax
jmp r-xdata
mov ebx [ esp + 0x30 ]
mov [ esp + 0x48 ] edx
mov ebx [ ebx ]
mov [ esp + 0x3c ] ebx
mov ebx [ ecx ]
mov [ esp + 0x44 ] ebx
mov ebx [ esp + 0x34 ]
test edx edx
je r-xdata
test eax eax
js r-xdata
mov ax [ eax ]
cmp ax [ edx ]
mov eax [ esp + 0x3c ]
je r-xdata
movzx eax [ edx ]
cmp ax [ ecx ]
add edx 0x2
add ecx 0x2
dec [ esp + 0x3c ]
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
inc esi
mov [ ecx ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ esi + 0x4 ]
mov [ esp + 0x44 ] edx
test edx edx
je r-xdata
mov esi ecx
mov ecx [ esp + 0x44 ]
mov eax [ esi + 0x1c ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov [ rw-data ] esi
cmp [ esi + 0x18 ] 0x0
je r-xdata
add [ esp + 0x38 ] 0x2
add eax 0x2
dec [ esp + 0x48 ]
mov [ esp + 0x40 ] eax
jne r-xdata
mov edx [ esp + 0x38 ]
mov ax [ eax ]
cmp ax [ edx ]
jae r-xdata
mov ecx [ esp + 0x38 ]
mov esi [ ecx ]
mov eax [ esi + 0x18 ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov [ rw-data ] esi
cmp [ esi + 0x1c ] 0x0
je r-xdata
jmp r-xdata
jae r-xdata
add edx 0x2
add ecx 0x2
dec [ esp + 0x48 ]
jne r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x40 ]
mov [ ecx + 0x18 ] eax
mov eax [ esi ]
mov [ esp + 0x40 ] eax
mov eax [ eax + 0x18 ]
mov [ esi ] eax
mov eax [ esp + 0x30 ]
jmp r-xdata
jmp r-xdata
add eax 0x2
add edx 0x2
dec [ esp + 0x3c ]
mov [ esp + 0x44 ] eax
jne r-xdata
mov ax [ eax ]
cmp ax [ edx ]
jae r-xdata
cmp edx eax
jb r-xdata
mov eax [ esp + 0x44 ]
mov eax [ esp + 0x60 ]
mov edx [ esp + 0x38 ]
jle r-xdata
add eax 0x2
add edx 0x2
mov [ esp + 0x3c ] eax
dec ecx
jne r-xdata
movzx eax [ eax ]
cmp ax [ edx ]
jmp r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ edx + ecx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x47
je r-xdata
test esi esi
jne r-xdata
sub eax 0x37
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ ecx + 0x1c ] esi
mov eax [ rw-data ]
mov [ esp + 0x68 ] eax
mov esi [ eax + 0x1c ]
mov eax [ esp + 0x30 ]
mov [ rw-data ] esi
jmp r-xdata
mov eax [ esp + 0x40 ]
mov edx [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0x38 ] edx
mov [ esp + 0x60 ] eax
test eax eax
je r-xdata
mov eax [ ecx + 0x1c ]
mov edx [ esp + 0x38 ]
mov [ edx + 0x18 ] eax
mov eax [ esi ]
mov [ ecx + 0x1c ] eax
mov [ esi ] ecx
cmp [ ecx + 0x18 ] 0x0
je r-xdata
mov ax [ eax ]
cmp ax [ edx ]
mov eax [ esp + 0x44 ]
je r-xdata
mov eax [ esp + 0x60 ]
mov eax [ ecx + 0x18 ]
mov edx [ esp + 0x38 ]
mov [ edx + 0x1c ] eax
mov eax [ esi ]
mov [ ecx + 0x18 ] eax
mov [ esi ] ecx
cmp [ ecx + 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov edx [ esp + 0x3c ]
mov ax [ eax ]
cmp ax [ edx ]
jae r-xdata
add [ esp + 0x3c ] 0x2
add eax 0x2
dec [ esp + 0x48 ]
mov [ esp + 0x44 ] eax
jne r-xdata
mov [ esp + 0x1f ] 0x1
mov eax [ esp + 0x60 ]
mov edx [ esp + 0x38 ]
xor eax eax
jmp r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
dec esi
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esp + 0x6c ] esi
mov ecx [ edx ]
mov [ esp + 0x38 ] ecx
lea eax [ ecx + 0x1 ]
mov [ edx ] eax
cmp [ esp + 0x48 ] ecx
jae r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x68 ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov [ esp + 0x68 ] eax
mov eax [ eax + 0x1c ]
mov [ esi ] eax
mov eax [ esp + 0x30 ]
jmp r-xdata
mov ebx [ esp + 0x3c ]
mov ax [ eax ]
cmp ax [ ebx ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x44 ]
jne r-xdata
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x14 ]
push [ esp + 0x60 ]
add ecx 0x49c
call sub_414700
cmp esi [ eax + 0x18 ]
jl r-xdata
jmp r-xdata
push [ esp + 0x40 ]
push 0x70
jmp r-xdata
mov ecx [ esp + 0x14 ]
push [ esp + 0x60 ]
lea ecx [ ecx + 0x49c ]
call sub_414700
cmp esi [ eax + 0x1c ]
jg r-xdata
mov eax [ esp + 0x7c ]
mov [ esp + 0x98 ] 0x0
mov [ esp + 0xa0 ] 0x0
mov [ esp + 0xa4 ] 0x1
cmp [ esp + 0x78 ] eax
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_44d520
mov esi [ esp + 0x30 ]
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
push 0x10
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
add eax eax
cmp eax 0x8
jae r-xdata
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
xor esi esi
jmp r-xdata
lea eax [ esp + 0x98 ]
push eax
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_4113a0
xor ecx ecx
mov [ esp + 0x7c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
mov eax [ esp + 0x78 ]
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x8
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov edx [ esp + 0x14 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx + 0x8 ]
add ecx edx
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov ecx [ esp + 0x78 ]
mov eax [ esp + 0x74 ]
push [ esp + 0x38 ]
mov [ eax + ecx * 4 ] esi
mov ecx [ esp + 0x7c ]
mov eax [ esp + 0x78 ]
inc ecx
mov [ esp + 0x7c ] ecx
push [ eax + ecx * 4 - 0x4 ]
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x88 ]
push eax
push [ ebp + 0x8 ]
call sub_40fa40
test eax eax
js r-xdata
lea ecx [ esp + 0x98 ]
call sub_414430
lea ecx [ esp + 0x70 ]
call sub_4404c9
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
mov esi [ esp + 0x6c ]
mov ecx [ esp + 0x80 ]
mov edx [ esp + 0x38 ]
inc esi
mov [ esp + 0x6c ] esi
cmp ecx edx
jne r-xdata
mov ecx [ esp + 0x78 ]
test ecx ecx
je r-xdata
mov [ esp + 0x74 ] esi
jmp [ eax * 4 + jump_table_47b8b2 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x14 ] 0x0
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
mov [ esp + 0xa4 ] 0x1
mov [ esp + 0x98 ] 0x0
shl ecx 0x2
push ecx
push eax
push esi
call sub_41faa0
add esp 0xc
push [ esp + 0x74 ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41e3cc
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov eax [ edx ]
mov esi [ eax + 0x4 ]
add esi edx
mov [ esp + 0x48 ] esi
cmp [ esi + 0xd ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_44d520
lea ecx [ esp + 0x98 ]
call sub_412570
lea ecx [ esp + 0x70 ]
call sub_4404c9
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp eax edx
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
mov eax [ esi + 0x8 ]
mov esi [ eax + 0x38 ]
jmp r-xdata
mov esi [ esi + 0x8 ]
lea ecx [ esp + 0x98 ]
mov [ esp + 0x80 ] eax
call sub_412570
mov ecx [ esp + 0x38 ]
cmp [ esp + 0x80 ] ecx
jb r-xdata
mov ecx [ esi + 0x28 ]
test ecx ecx
jne r-xdata
push ecx
call sub_401926
mov edx [ esp + 0x14 ]
mov [ esi + 0x28 ] 0x0
jmp r-xdata
mov eax [ esi + 0x2c ]
cmp eax 0x5
jge r-xdata
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov eax [ esp + 0x48 ]
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x20 ] 0x0
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
jmp [ eax * 4 + jump_table_47b8de ]
mov eax [ eax + 0x38 ]
jmp r-xdata
push [ esp + 0x60 ]
lea ecx [ edx + 0x49c ]
mov [ eax + 0x30 ] 0x0
call sub_414700
mov edx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0xc ]
push [ esp + 0x30 ]
lea eax [ esp + 0x74 ]
push eax
mov eax [ esp + 0x1c ]
mov eax [ eax ]
mov ecx [ ecx + eax ]
add ecx edx
add ecx [ esp + 0x1c ]
call esi
test eax eax
js r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_41e3cc
mov edx [ esp + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi + 0x20 ]
call j_sub_4228ca#2
mov edx [ esp + 0x18 ]
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
lea ecx [ esp + 0x70 ]
call sub_4404c9
mov eax [ esp + 0x10 ]
or edi 0xffffffff
jmp r-xdata
xor esi esi
mov [ esp + 0x70 ] r--data
cmp [ esp + 0x78 ] esi
jbe r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi + 0x20 ]
call j_sub_4228ca#2
mov edx [ esp + 0x18 ]
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
mov edx [ esp + 0x14 ]
jmp r-xdata
push ecx
call sub_43a56f
mov edx [ esp + 0x14 ]
jmp r-xdata
push ecx
call sub_43a599
mov edx [ esp + 0x14 ]
jmp r-xdata
push ecx
call sub_401926
mov edx [ esp + 0x14 ]
jmp r-xdata
push [ esp + 0x74 ]
mov [ esp + 0x7c ] 0x0
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ eax + esi * 4 ]
mov [ esp + 0x48 ] ecx
test ecx ecx
je r-xdata
mov [ eax + esi * 4 ] 0x0
inc esi
cmp esi [ esp + 0x78 ]
jb r-xdata
call sub_414430
push [ esp + 0x48 ]
call j_sub_4228ca#2
mov eax [ esp + 0x78 ]
add esp 0x4
sub_4113a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ esi + 0xc ]
push edi
mov [ ebx + 0xc ] eax
cmp eax 0x1
jne r-xdata
dec eax
cmp eax 0xe
ja r-xdata
mov eax [ esi ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
jmp [ eax * 4 + r-xdata ]
fld [ esi ]
pop edi
pop esi
fstp [ ebx ]
pop ebx
pop ebp
retn 0x4
push 0x10
call sub_42010a
mov edx eax
add esp 0x4
test edx edx
je r-xdata
mov al [ esi ]
pop edi
pop esi
mov [ ebx ] al
pop ebx
pop ebp
retn 0x4
push 0x214
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi ]
mov [ ebx ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x18
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_42010a
mov [ ebx ] eax
mov ecx [ esi ]
add esp 0x4
mov ecx [ ecx ]
mov [ eax ] ecx
mov eax [ ebx ]
mov eax [ eax ]
test eax eax
je r-xdata
push 0x14
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_42010a
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
xor edx edx
pop esi
mov [ ebx + 0x8 ] edx
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
pop edi
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
pop esi
mov [ ebx + 0x8 ] edx
pop ebx
pop ebp
retn 0x4
xor eax eax
jmp r-xdata
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
push 0x10
call sub_42010a
add esp 0x4
mov [ ebx ] eax
push eax
call [ VariantInit@IAT ]
push [ esi ]
push [ ebx ]
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
jmp r-xdata
push [ esi ]
mov ecx eax
call sub_4499a0
jmp r-xdata
push 0x1
call sub_42010a
mov ecx [ ebx ]
add esp 0x4
mov [ ecx + 0x4 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_42010a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov eax [ esi ]
push [ ecx ]
push [ eax + 0x4 ]
push [ ecx + 0x4 ]
call sub_41faa0
add esp 0x10
jmp r-xdata
push [ esi ]
mov ecx eax
call sub_448a89
jmp r-xdata
push [ esi ]
mov ecx eax
call sub_444d76
jmp r-xdata
xor edi edi
mov ecx edi
call sub_40d3d2
jmp r-xdata
mov [ ebx ] eax
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc [ eax ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
call [ VariantClear@IAT ]
push [ ebx ]
call j_sub_4228ca#2
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
mov [ ebx ] eax
mov [ ebx ] edi
push [ esi ]
mov ecx edi
call sub_40c935
mov eax [ esi ]
mov ecx [ ebx ]
mov eax [ eax + 0x10 ]
mov [ ecx + 0x10 ] eax
jmp r-xdata
sub_4114a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0xc ] 0x5
jne r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
push esi
push edi
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov eax [ ecx ]
cmp eax 0x1
jle r-xdata
mov ecx ebx
call sub_40346e
test esi esi
jle r-xdata
cmp [ ebx + 0xc ] 0x5
jne r-xdata
jmp r-xdata
lea edi [ ebp + 0x10 ]
lea esp [ esp ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov [ ebp - 0x4 ] eax
mov esi [ eax + 0x20c ]
cmp esi [ eax + 0x210 ]
jne r-xdata
dec eax
mov [ ecx ] eax
mov eax [ ebx ]
xor ecx ecx
mov esi [ eax ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mul edx
seto cl
mov [ ebp - 0x4 ] esi
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ ebx ]
push 0x4
mov [ ecx ] eax
call sub_42010a
mov ecx eax
add esp 0x8
test ecx ecx
je r-xdata
jmp r-xdata
xor ecx ecx
test esi esi
jle r-xdata
xor ecx ecx
mov [ ecx ] 0x1
jmp r-xdata
push [ edi + 0x4 ]
lea edi [ edi + 0x4 ]
mov ecx ebx
call sub_403489
dec esi
je r-xdata
mov ebx [ eax + 0x8 ]
xor edi edi
test esi esi
jle r-xdata
add eax 0x10c
cmp [ esi + edi * 4 ] 0x0
je r-xdata
mov eax [ ebx ]
xor edi edi
mov [ eax + 0x4 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x8 ] edi
jle r-xdata
mov eax [ eax ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
lea ecx [ eax + 0x10c ]
jmp r-xdata
cmp edx [ eax - 0x100 ]
jge r-xdata
mov eax [ eax ]
mov [ eax + edi * 4 ] 0x0
push 0x10
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push 0x10
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov eax [ ecx ]
mov eax [ eax + edi * 4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx - 0x100 ] 0x1388
jne r-xdata
inc ecx
add eax 0x4
cmp ecx esi
jl r-xdata
jmp r-xdata
mov eax [ ebx ]
xor esi esi
mov eax [ eax ]
mov [ eax + edi * 4 ] esi
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + edi * 4 ]
push ecx
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_4113a0
mov eax [ ebx ]
mov eax [ eax ]
mov [ eax + edi * 4 ] esi
mov esi [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push r--data
mov ecx eax
call sub_41d6b4
mov eax ebx
cdq
idiv [ ecx - 0x100 ]
mov ebx eax
jmp r-xdata
mov eax 0x68db8bad
imul ebx
sar edx 0xb
mov ebx edx
shr ebx 0x1f
add ebx edx
mov edx [ eax ]
test edx edx
js r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebx ]
inc edi
cmp edi [ eax + 0x8 ]
jl r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov ecx [ ecx ]
mov [ ecx + edi * 4 ] eax
mov ecx [ edx ]
mov eax [ ecx ]
mov eax [ eax + edi * 4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
imul eax ebx
add edi eax
add ecx 0x4
dec esi
jne r-xdata
test edi edi
js r-xdata
mov eax [ ebp - 0x4 ]
sub_411620
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov cl [ edi + 0x9 ]
mov edx [ edi + 0x4 ]
test cl cl
jne r-xdata
mov eax [ edx + 0x4 ]
jmp r-xdata
mov eax edx
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
test cl cl
jne r-xdata
mov esi [ edx + 0x4 ]
push edx
call j_sub_4228ca#2
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov esi [ eax + 0x4 ]
call j_sub_4228ca#2
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
mov [ edi + 0x9 ] 0x1
dec [ edi ]
cmp eax 0x11
je r-xdata
mov edx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x1
jl r-xdata
cmp eax 0xa
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0x10
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx edx
call sub_41e078
mov ecx eax
call sub_44a7a2
mov [ ebp + 0xc ] al
push [ ebp + 0xc ]
mov ecx edx
call sub_41e078
mov ecx eax
call sub_41e387
jmp r-xdata
cmp eax 0x10
jne r-xdata
mov ebx [ ebp + 0xc ]
mov ecx [ ebx + 0x4 ]
cmp ecx 0x2
jl r-xdata
xor eax eax
jmp r-xdata
cmp eax 0xf
ja r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx edx
mov [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x1
call sub_41e078
mov ecx eax
call sub_44a875
lea ecx [ ebp - 0x20 ]
call sub_412570
jmp r-xdata
jmp [ eax * 4 + jump_table_412188 ]
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
mov ecx ebx
call sub_41e078
mov edx eax
call sub_41df71
mov ecx eax
call sub_40cbf7
mov ecx ebx
test al al
je r-xdata
mov ecx ebx
call sub_41e078
mov edx eax
call sub_41df71
mov ecx eax
call sub_40524a
mov ecx ebx
test al al
jne r-xdata
mov ecx ebx
call sub_41e078
mov edx eax
call sub_41df71
mov ecx eax
call sub_41ee93
mov ecx ebx
call sub_41e078
mov edx eax
call sub_41df71
mov ecx eax
call sub_40522f
jmp r-xdata
mov ecx ebx
call sub_41e078
push eax
call sub_41df71
mov ecx eax
call sub_44b944
mov ecx ebx
mov [ ebp + 0xc ] 0x1
test al al
jne r-xdata
mov ecx ebx
mov [ ebp - 0x8 ] 0x0
call sub_41e078
push eax
lea ecx [ ebp - 0x10 ]
call sub_4113a0
mov ecx ebx
call sub_41bd8f
mov ecx ebx
mov [ ebp - 0x18 ] 0x0
call sub_41e078
push eax
lea ecx [ ebp - 0x20 ]
call sub_4113a0
sub esp 0x10
mov ecx esp
lea eax [ ebp - 0x10 ]
push eax
mov [ ecx + 0x8 ] 0x0
call sub_4113a0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_44ba9b
push eax
mov ecx ebx
call sub_41e078
mov ecx eax
call sub_40d89e
lea ecx [ ebp - 0x30 ]
call sub_412570
lea ecx [ ebp - 0x20 ]
call sub_412570
lea ecx [ ebp - 0x10 ]
call sub_412570
jmp r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edx [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov esi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov [ ebp + 0xc ] 0x1
jmp r-xdata
call sub_41df71
mov esi eax
mov ecx esi
call sub_412570
mov ecx ebx
mov [ esi + 0xc ] 0x9
mov [ esi ] 0x0
call sub_41bd8f
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp + 0xc ] 0x0
mov ecx ebx
test al al
je r-xdata
push [ ebp + 0xc ]
call sub_41df71
mov ecx eax
call sub_41e387
mov ecx ebx
call sub_41bd8f
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
cmp ecx 0x2
je r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
mov [ ebp + 0x8 ] edi
cmp ecx 0x2
jne r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
mov [ ebp + 0x8 ] edi
cmp ecx 0x2
jne r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
cmp ecx 0x2
je r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
mov edx [ ebx + 0x8 ]
mov ecx ebx
call sub_41df71
mov edx eax
mov ecx esi
call sub_4141fc
mov ecx ebx
test al al
jne r-xdata
mov eax [ ebx + 0x8 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov esi [ ebx + 0x8 ]
mov esi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebx ]
mov esi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
call sub_41df71
mov esi eax
mov ecx esi
call sub_412570
mov ecx ebx
mov [ esi + 0xc ] 0x9
mov [ esi ] 0x1
call sub_41bd8f
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
cmp eax 0x3
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
dec eax
cmp eax 0x8
ja r-xdata
fld1
fldz
cmp ecx eax
jne r-xdata
mov eax [ eax + 0x10 ]
mov ecx [ eax + 0x10 ]
jmp r-xdata
mov ecx [ eax + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x8
ja r-xdata
fld1
fldz
cmp edx eax
jne r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x3
jne r-xdata
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov ecx edi
call sub_412620
fsubr [ esi ]
fstp [ esi ]
mov ecx [ esi + 0xc ]
mov eax ecx
cmp eax 0x3
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
dec eax
cmp eax 0xa
ja r-xdata
mov ecx edi
call sub_4084a6
mov esi [ esi + 0x8 ]
mov eax [ edi + 0x8 ]
mov ecx esi
cmp esi eax
je r-xdata
mov eax [ eax + 0x10 ]
mov ecx [ eax + 0x10 ]
jmp r-xdata
mov ecx [ eax + 0x10 ]
jmp r-xdata
mov ecx ebx
call sub_41df71
mov esi eax
mov ecx esi
call sub_412570
mov [ esi ] 0x1
jmp r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
dec eax
cmp eax 0xa
ja r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x3
jne r-xdata
mov ecx [ edi + 0xc ]
mov eax ecx
shl eax 0x4
add eax [ esi + 0xc ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x3
jne r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
jmp [ eax * 4 + jump_table_41225c ]
dec ecx
cmp ecx 0x9
ja r-xdata
fld [ edi ]
fst [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
mov eax edx
shl eax 0x4
add eax [ edi + 0xc ]
mov [ ebp + 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
cmp eax 0x3
jne r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
jmp [ eax * 4 + jump_table_4122bc ]
dec edx
cmp edx 0x9
ja r-xdata
fld [ ecx ]
fst [ ebp - 0x8 ]
mov eax [ esi + 0xc ]
mov [ ebp + 0xc ] esi
cmp eax 0x3
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov ecx [ edi + 0xc ]
cmp ecx eax
je r-xdata
dec eax
cmp eax 0x9
ja r-xdata
fld [ edi ]
mov eax [ esi + 0xc ]
mov [ ebp + 0xc ] esi
cmp eax 0x3
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov ecx [ edi + 0xc ]
cmp ecx eax
je r-xdata
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
cmp [ ebx + 0x4 ] 0x1
je r-xdata
cmp eax 0x1
jne r-xdata
mov ecx edi
call sub_412620
fdivr [ esi ]
fstp [ esi ]
mov eax [ esi + 0xc ]
cmp eax 0x4
jne r-xdata
cmp [ ebx + 0x4 ] 0x1
je r-xdata
movzx eax [ eax + lookup_table_412314 ]
jmp [ eax * 4 + jump_table_412308 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_43c0a2
push eax
mov ecx esi
call sub_40c935
lea ecx [ ebp - 0x20 ]
call sub_405cd3
jmp r-xdata
push 0xffffffff
push 0x0
push eax
call sub_40bbd9
call sub_40cbf7
test al al
jne r-xdata
mov ecx ebx
mov [ esi + 0xc ] 0x9
call sub_41bd8f
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
movzx eax [ eax + lookup_table_412200 ]
jmp [ eax * 4 + jump_table_4121f0 ]
dec eax
cmp eax 0x9
ja r-xdata
fld [ edi ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
mov ecx esi
call sub_40cdb4
mov ecx edi
mov esi eax
call sub_40cdb4
cmp eax esi
jge r-xdata
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
push 0x0
push esi
call sub_41dfb6
test eax eax
jns r-xdata
mov ecx esi
call sub_40d00b
mov ecx edi
mov [ ebp + 0xc ] eax
mov esi edx
call sub_40d00b
cmp edx esi
jl r-xdata
mov ecx esi
call sub_44be63
mov ecx edi
mov esi eax
call sub_44be63
cmp eax esi
jmp r-xdata
fld st0
fst [ ebp - 0x8 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4121c8 ]
dec eax
cmp eax 0x9
ja r-xdata
fstp st2
fstp st0
fld [ esi ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebx ]
call sub_40cdb4
mov ecx edi
mov esi eax
call sub_40cdb4
cmp esi eax
jge r-xdata
mov ecx edi
call sub_4084a6
mov esi [ edi + 0x8 ]
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
push 0x0
push esi
call sub_41dfb6
test eax eax
jns r-xdata
call sub_40d00b
mov ecx edi
mov [ ebp + 0xc ] eax
mov esi edx
call sub_40d00b
cmp esi edx
jl r-xdata
call sub_44be63
mov ecx edi
mov esi eax
call sub_44be63
cmp esi eax
jmp r-xdata
fld st0
fst [ ebp - 0x8 ]
jmp r-xdata
jmp [ edx * 4 + jump_table_47d236 ]
dec eax
cmp eax 0x9
ja r-xdata
fstp st2
fstp st0
fld [ edi ]
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
movzx eax [ eax + lookup_table_4122b0 ]
jmp [ eax * 4 + jump_table_41229c ]
mov eax [ edi ]
mov ecx [ esi ]
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
cdq
mov [ ebp + 0xc ] eax
mov edi edx
mov eax ecx
mov ecx [ ebp + 0x8 ]
cdq
add [ ebp + 0xc ] eax
mov eax ecx
adc edi edx
cdq
cmp eax [ ebp + 0xc ]
jne r-xdata
cmp ecx 0x2
je r-xdata
fldz
jmp r-xdata
jmp [ eax * 4 + jump_table_4122e0 ]
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
cmp [ ebx + 0x4 ] 0x1
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
movzx eax [ eax + lookup_table_412290 ]
jmp [ eax * 4 + jump_table_412280 ]
mov edi [ esi ]
mov eax [ ebp + 0x8 ]
mov ecx edi
mov eax [ eax ]
sub ecx eax
cdq
mov [ ebp + 0x8 ] ecx
mov ecx eax
mov esi edx
mov eax edi
cdq
sub eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov edi edx
mov eax ecx
cdq
sbb edi esi
mov esi edx
mov edx [ ebp - 0x4 ]
cmp eax edx
jne r-xdata
cmp ecx 0x2
je r-xdata
dec [ ebx + 0x4 ]
cmp [ ebx + 0xd ] 0x0
je r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
cmp ecx 0x3
je r-xdata
cmp [ ebx + 0x4 ] 0x1
je r-xdata
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov ecx esi
call sub_41f833
jmp r-xdata
cmp [ edi + 0xc ] 0xb
jne r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
jne r-xdata
mov ecx esi
call sub_41df8a
mov ecx edi
call sub_412620
fmul [ esi ]
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
je r-xdata
fldz
jmp r-xdata
jmp [ eax * 4 + jump_table_41220c ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
jg r-xdata
jb r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x3
jne r-xdata
fild [ edi ]
fst [ ebp - 0x8 ]
jmp r-xdata
fild [ edi ]
fst [ ebp - 0x8 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
fstp st1
mov ecx edi
fstp st0
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
mov eax [ edi ]
fild [ eax + 0x4 ]
fst [ ebp - 0x8 ]
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
fstp st2
jmp r-xdata
jmp [ eax * 4 + jump_table_47d1e2 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jl r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
jmp r-xdata
jg r-xdata
jb r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x3
jne r-xdata
mov eax [ ecx + 0x8 ]
fstp st1
fstp st0
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
fild [ ecx ]
fst [ ebp - 0x8 ]
jmp r-xdata
fild [ ecx ]
fst [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ecx ]
fild [ eax + 0x4 ]
fst [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
fstp st2
jmp r-xdata
jmp [ eax * 4 + jump_table_412234 ]
mov ecx esi
call sub_41df8a
mov ecx edi
call sub_412620
fadd [ esi ]
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0xc ] 0xb
jne r-xdata
cmp [ edi + 0xc ] 0x1
mov eax [ esi ]
mov [ ebp + 0xc ] eax
mov ecx edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
cmp edx edi
jne r-xdata
mov eax [ esi ]
cdq
add eax [ edi ]
adc edx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0xc ] 0x2
jmp r-xdata
cmp eax 0x3
je r-xdata
fadd [ esi ]
mov eax [ edi + 0x8 ]
mov ecx edi
mov edx [ eax ]
call sub_40d075
test al al
jne r-xdata
fild [ edi ]
jmp r-xdata
fild [ edi ]
jmp r-xdata
mov eax [ edi ]
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov ecx esi
call sub_41df8a
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0xc ] 0x1
mov eax [ esi ]
mov [ ebp + 0xc ] eax
mov ecx edi
jne r-xdata
mov esi [ ebp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] edx
mov [ esi + 0x4 ] edi
jmp r-xdata
cmp esi edi
jne r-xdata
mov eax [ esi ]
cdq
sub eax [ edi ]
sbb edx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0xc ] 0x2
jmp r-xdata
cmp eax 0x3
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
mov edi [ esi + 0x10 ]
test esi esi
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
movzx eax [ eax + lookup_table_47d1d6 ]
jmp [ eax * 4 + jump_table_47d1ce ]
mov ecx esi
call sub_412620
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
push edi
mov ecx esi
call sub_414265
jmp r-xdata
mov ecx esi
call sub_412570
mov [ esi ] 0x0
cmp eax 0x2
je r-xdata
mov eax [ edi ]
mov edi eax
imul [ esi ]
imul edi [ esi ]
mov [ ebp + 0xc ] eax
mov eax edi
mov ecx edx
cdq
cmp eax [ ebp + 0xc ]
jne r-xdata
fstp [ esi ]
mov ecx edi
call sub_40d00b
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
call sub_434ba0
mov [ esi ] eax
mov [ esi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
fmul [ esi ]
fild [ edi ]
jmp r-xdata
fild [ edi ]
jmp r-xdata
mov eax [ edi ]
fild [ eax + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
mov edx [ eax ]
call sub_40d075
test al al
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov [ esi ] 0x0
mov [ esi ] 0x0
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
mov ecx esi
call sub_412570
mov [ esi ] 0x1
jmp r-xdata
cmp eax [ ebp + 0xc ]
jmp r-xdata
push edx
call sub_422d13
fst [ ebp - 0x8 ]
fld1
add esp 0x4
fldz
fxch st1
fxch st2
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x8 ]
call sub_41bcea
fild [ ebp - 0x8 ]
add esp 0x4
fst [ ebp - 0x8 ]
fld1
fldz
fxch st1
fxch st2
jmp r-xdata
fld st1
fst [ ebp - 0x8 ]
jmp r-xdata
fcompp
fnstsw ax
test ah 0x41
je r-xdata
mov eax [ esi + 0x8 ]
fstp st2
fstp st1
mov ecx esi
mov edx [ eax ]
fstp st0
call sub_40d075
test al al
je r-xdata
fstp st2
fstp st0
fild [ esi ]
jmp r-xdata
fstp st2
fstp st0
fild [ esi ]
jmp r-xdata
mov eax [ esi ]
fstp st2
fstp st0
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
cmp [ ebp + 0xc ] eax
jmp r-xdata
push edx
call sub_422d13
fst [ ebp - 0x8 ]
fld1
add esp 0x4
fldz
fxch st1
fxch st2
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41bcea
fild [ ebp - 0x18 ]
add esp 0x4
fst [ ebp - 0x8 ]
fld1
fldz
fxch st1
fxch st2
jmp r-xdata
fld st1
fst [ ebp - 0x8 ]
jmp r-xdata
fcompp
fnstsw ax
test ah 0x41
je r-xdata
fstp st2
fstp st0
fild [ edi ]
jmp r-xdata
mov eax [ edi + 0x8 ]
fstp st2
fstp st1
mov ecx edi
mov edx [ eax ]
fstp st0
call sub_40d075
test al al
je r-xdata
fstp st2
fstp st0
fild [ edi ]
jmp r-xdata
mov eax [ edi ]
fstp st2
fstp st0
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
fstp [ esi ]
mov ecx edi
call sub_40d00b
add [ esi ] eax
adc [ esi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov ecx edi
call sub_44be8a
mov ecx [ esi ]
mov edi eax
add edi [ ecx ]
push edi
call sub_42010a
mov ecx [ ebp + 0xc ]
add esp 0x4
mov ecx [ ecx ]
mov esi eax
push [ ecx ]
push [ ecx + 0x4 ]
push esi
call sub_41faa0
mov ecx [ ebp + 0x8 ]
add esp 0xc
call sub_44be8a
push eax
push ecx
call sub_44be47
add esp 0x4
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
add eax esi
push eax
call sub_41faa0
mov eax [ ebp + 0xc ]
add esp 0xc
mov eax [ eax ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
mov eax [ ebp + 0xc ]
add esp 0x4
mov eax [ eax ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
mov [ eax ] edi
jmp r-xdata
call sub_40d00b
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ esi ] ecx
jmp r-xdata
call sub_40cdb4
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ esi ] ecx
jmp r-xdata
mov [ esi ] ecx
jmp r-xdata
mov ecx edi
call sub_412620
fadd [ esi ]
jmp r-xdata
mov ecx esi
call sub_412620
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x8 ]
call sub_41bcea
fild [ ebp - 0x8 ]
add esp 0x4
jmp r-xdata
push edx
call sub_422d13
add esp 0x4
jmp r-xdata
fld1
jmp r-xdata
mov esi [ ebx + 0x8 ]
mov edi [ esi + 0x10 ]
test esi esi
je r-xdata
mov ecx edi
call sub_40d00b
sub [ esi ] eax
sbb [ esi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
call sub_40d00b
mov ecx [ ebp + 0xc ]
sub ecx eax
mov [ esi ] ecx
jmp r-xdata
call sub_40cdb4
mov ecx [ ebp + 0xc ]
sub ecx eax
mov [ esi ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov [ esi ] ecx
jmp r-xdata
mov ecx esi
call sub_412620
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
dec [ ebx + 0x4 ]
mov [ ebx + 0xd ] 0x1
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xd ] 0x0
jmp r-xdata
mov ecx esi
call sub_412570
push esi
call j_sub_4228ca#2
add esp 0x4
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41bdcc
push [ edi + 0x4 ]
mov eax [ esi ]
push [ edi ]
cdq
push edx
push eax
call sub_434ba0
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0xc ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
cmp edx ecx
jne r-xdata
push edx
call sub_422d13
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x8 ]
call sub_41bcea
fild [ ebp - 0x8 ]
add esp 0x4
jmp r-xdata
fld1
jmp r-xdata
jmp [ eax * 4 + jump_table_47d20a ]
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov [ esi + 0xc ] 0x9
cmp [ ebx + 0x4 ] 0x1
je r-xdata
push edx
call sub_422d13
fld [ ebp - 0x8 ]
add esp 0x4
fxch st1
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41bcea
fild [ ebp - 0x18 ]
fld [ ebp - 0x8 ]
add esp 0x4
fxch st1
jmp r-xdata
fstp st1
fxch st1
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
push edx
call sub_422d13
fld [ ebp - 0x8 ]
add esp 0x4
fxch st1
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41bcea
fild [ ebp - 0x18 ]
fld [ ebp - 0x8 ]
add esp 0x4
fxch st1
jmp r-xdata
fstp st1
fxch st1
jmp r-xdata
mov [ ebx + 0x8 ] edi
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41bdcc
mov [ esi ] edi
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx esi
call sub_41e3cc
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_412570
mov [ esi ] 0x1
jmp r-xdata
jmp [ eax * 4 + jump_table_47d25e ]
push ecx
call sub_401926
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_41bdcc
mov [ ebx + 0x8 ] esi
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push esi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
call j_sub_4228ca#2
add esp 0x4
mov [ ebx + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
jmp [ eax * 4 + jump_table_47d1a2 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41e3cc
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
sub_412320
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0x5
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
push ebx
push edi
test ecx ecx
je r-xdata
cmp [ esi + 0xc ] 0x5
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x210 ] 0x0
jle r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edi [ ecx + 0x20c ]
cmp edi [ ecx + 0x210 ]
jne r-xdata
lea edx [ ebp + 0x10 ]
lea esp [ esp ]
xor edx edx
test edi edi
jle r-xdata
dec ecx
jne r-xdata
mov edi [ esi ]
mov ebx [ edi + 0x210 ]
cmp ebx 0x40
jge r-xdata
xor ebx ebx
test edi edi
jle r-xdata
lea eax [ ecx + 0x10c ]
cmp [ esi + 0xc ] 0x5
lea edx [ edx + 0x4 ]
jne r-xdata
mov eax [ edx ]
mov [ edi + ebx * 4 + 0x10c ] eax
mov eax [ esi ]
inc [ eax + 0x210 ]
mov eax [ ecx ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
jne r-xdata
mov esi [ ecx + 0x8 ]
lea edx [ ecx + 0x10c ]
mov [ ebp - 0x4 ] edx
cmp ebx [ eax - 0x100 ]
jge r-xdata
push [ ebp + 0xc ]
call sub_40d89e
mov ecx [ esi ]
pop edi
mov eax [ ecx ]
mov eax [ eax + ebx * 4 ]
pop ebx
pop esi
mov esp ebp
pop ebp
retn
push 0x10
call sub_42010a
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov eax esi
mov esi [ ebp - 0x4 ]
cdq
idiv [ esi - 0x100 ]
mov esi eax
jmp r-xdata
mov eax 0x20b3dd41
imul esi
sar edx 0x7
mov esi edx
shr esi 0x1f
add esi edx
inc edx
add eax 0x4
cmp edx edi
jl r-xdata
xor edi edi
jmp r-xdata
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x8 ] 0x0
call sub_4113a0
mov edx [ ebp - 0x4 ]
add edx 0x4
mov eax [ edx - 0x4 ]
imul eax esi
add ebx eax
mov [ ebp - 0x4 ] edx
dec edi
jne r-xdata
cmp [ edx - 0x100 ] 0x3ea
jne r-xdata
mov esi [ ebp + 0x8 ]
test ebx ebx
js r-xdata
mov ebx [ eax ]
test ebx ebx
js r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov [ eax + ebx * 4 ] edi
mov ecx [ esi ]
pop edi
mov eax [ ecx ]
mov eax [ eax + ebx * 4 ]
pop ebx
pop esi
mov esp ebp
pop ebp
retn
sub_412490
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov ebx [ ebx + 0x8 ]
push edi
mov edi ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] ebx
test ebx ebx
je r-xdata
call sub_412570
jmp r-xdata
push ebx
push 0x1
push edi
call sub_403320
add esp 0xc
xor esi esi
test ebx ebx
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x10
mov eax [ eax + 0x4 ]
mov ebx [ eax + esi * 4 ]
call sub_42010a
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
mov ecx [ ebx ]
mov [ edi ] ecx
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x8 ] ecx
mov eax [ ebx + 0xc ]
mov [ edi + 0xc ] eax
inc [ eax ]
mov ebx [ ebp - 0x8 ]
push esi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x4
call sub_412320
add esp 0x10
test edi edi
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x1c ] 0x0
cmp esi [ ebp - 0xc ]
jb r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
push [ edi ]
call j_sub_4228ca#2
push [ edi + 0xc ]
call j_sub_4228ca#2
add esp 0x8
jmp r-xdata
push edi
call j_sub_4228ca#2
add esp 0x4
mov [ ebp - 0x14 ] 0x0
sub_412570
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
push [ edi ]
call j_sub_4228ca#2
push [ edi + 0xc ]
call j_sub_4228ca#2
add esp 0x8
jmp r-xdata
push edi
call j_sub_4228ca#2
mov eax [ esi + 0xc ]
add esp 0x4
mov [ esi + 0x8 ] 0x0
cmp eax 0x5
jl r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
pop edi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
pop esi
retn
jmp [ eax * 4 + jump_table_4125f4 ]
mov ecx esi
call sub_41e3cc
pop edi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
push [ esi ]
call j_sub_4228ca#2
add esp 0x8
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
sub_412620
push ebp
mov ebp esp
mov edx [ ecx + 0xc ]
mov eax edx
sub esp 0x10
cmp eax 0x3
jne r-xdata
cmp eax 0x1
jne r-xdata
fld [ ecx ]
mov esp ebp
pop ebp
retn
sub eax 0x2
cmp eax 0x8
ja r-xdata
fild [ ecx ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
fldz
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_412690 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ecx ]
cmp edx 0x4
jne r-xdata
fild [ ecx ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
fild [ ecx ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
fild [ eax + 0x4 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_422d13
add esp 0x4
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x30
je r-xdata
fld1
mov esp ebp
pop ebp
retn
movzx edx [ eax + 0x2 ]
cmp edx 0x78
je r-xdata
cmp [ ecx + 0x4 ] 0x12
ja r-xdata
cmp edx 0x58
jne r-xdata
push 0x8
lea ecx [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
call sub_41bcea
fild [ ebp - 0x8 ]
add esp 0x4
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
jmp r-xdata
sub_4126c0
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
mov eax [ esi ]
dec eax
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x74 ] eax
mov eax [ edi + 0x4 ]
mov edx ecx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x1
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp [ ecx + 0x8 ] 0x33
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x5c ] 0x1
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x4c ] 0x1
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x78 ] 0x3
jne r-xdata
movsx eax [ ecx + 0xa ]
push eax
push 0x94
mov ecx edx
call sub_44d520
jmp r-xdata
mov ecx [ ecx ]
mov [ ebp + 0xc ] 0x2
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x48 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x10 ] eax
inc [ eax ]
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp + 0x8 ] eax
cmp [ rw-data ] al
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_412570
lea ecx [ ebp - 0x28 ]
call sub_412570
lea ecx [ ebp - 0x58 ]
call sub_412570
lea ecx [ ebp - 0x68 ]
call sub_412570
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
cmp [ rw-data ] eax
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_412570
push 0x1
push 0x0
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x28 ] 0x0
call sub_40d380
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_40d2d2
mov ebx [ ebp - 0x8 ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
test ebx 0x100
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx rw-data
call sub_40d349
mov ebx [ ebp - 0xc ]
jmp r-xdata
cmp [ rw-data ] al
mov eax [ rw-data ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx edx
mov eax [ eax + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa3
call sub_44d520
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x8 ]
jmp r-xdata
push eax
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x48 ]
push eax
call sub_40d500
test al al
je r-xdata
push 0x5
mov ecx ebx
call sub_40d2c0
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp - 0x10 ]
dec [ esi ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
push 0xf
mov ecx ebx
call sub_40d2c0
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_45f211
test eax eax
js r-xdata
cmp [ eax ] 0x11
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
inc ecx
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
push edi
call sub_40fa40
test eax eax
js r-xdata
push [ ebp - 0x14 ]
call j_sub_4228ca#2
add esp 0x4
push esi
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ebx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
and ebx 0xff00
mov [ ebp - 0xc ] ebx
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov ecx [ ebp - 0x4 ]
push 0x0
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_45f4df
test eax eax
js r-xdata
jmp r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0x4 ]
push eax
push 0x94
call sub_44d520
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
inc ecx
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
push edi
call sub_40fa40
test eax eax
js r-xdata
lea eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ebp - 0x1c ]
cmp ebx 0x8
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x4
je r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x6c ] ebx
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x5
lea ecx [ ebp - 0x28 ]
call sub_40d2c0
lea ecx [ ebp - 0x28 ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_40d89e
jmp r-xdata
cmp [ eax ] 0xf
jne r-xdata
cmp [ ebp - 0x1c ] 0x4
jne r-xdata
mov ecx ebx
call sub_412570
lea eax [ ebp - 0x28 ]
push eax
mov ecx ebx
call sub_4113a0
push 0xf
call sub_40d2c0
test al al
je r-xdata
call sub_40346e
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_403489
push 0x0
call sub_40218e
test eax eax
jle r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
inc ecx
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
push edi
call sub_40fa40
test eax eax
js r-xdata
push [ ebp - 0x20 ]
mov ecx [ ebx + 0x8 ]
call sub_40c935
jmp r-xdata
mov ebx [ ebp - 0x4 ]
push 0x1
push r--data
push 0x0
push 0xa9
mov ecx ebx
call sub_45c235
test eax eax
jns r-xdata
mov edx [ ebp - 0x28 ]
xor eax eax
cmp ebx 0xf
setne al
dec eax
and eax edx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40ca8e
lea ecx [ ebp - 0x68 ]
call sub_412570
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x5c ] 0x1
mov [ ebp - 0x68 ] 0x1
call sub_412570
mov [ ebp - 0x4c ] 0x1
mov [ ebp - 0x58 ] 0xffffffff
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40218e
test eax eax
jle r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0x4 ]
push eax
push 0x72
call sub_44d520
jmp r-xdata
xor edi edi
xor dl dl
lea ecx [ ebp - 0x68 ]
call sub_412570
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_4113a0
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_412570
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0xa9
call sub_44d520
jmp r-xdata
xor ecx ecx
cmp ebx 0xf
setne cl
push 0x0
dec ecx
and ecx edx
call sub_444e71
mov ebx eax
push 0x29
mov ecx ebx
call sub_41d5f6
test al al
je r-xdata
push 0x0
lea eax [ ebp - 0x28 ]
push 0x1
push eax
call sub_4114a0
add esp 0xc
test eax eax
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_40cdb4
mov ebx [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
test eax eax
jle r-xdata
cmp [ eax ] 0x10
jne r-xdata
lea ecx [ ebp - 0x58 ]
call sub_412570
mov [ ebp - 0x4c ] 0x1
mov [ ebp - 0x58 ] 0x1
mov ecx [ ebp + 0x8 ]
push ebx
call sub_40d89e
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_40d89e
jmp r-xdata
mov ecx ebx
call sub_4084a6
mov ecx [ ebx + 0x8 ]
mov edx r--data
call sub_41f885
test al al
je r-xdata
push 0x0
lea eax [ ebp - 0x28 ]
push 0x0
push eax
call sub_4114a0
mov ecx [ ebp + 0x8 ]
add esp 0xc
push eax
call sub_40d89e
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_40d89e
jmp r-xdata
mov eax [ ebp - 0x70 ]
inc eax
mov [ esi ] eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x8
je r-xdata
shl eax 0x4
add eax [ rw-data ]
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp + 0xc ]
push 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_40fa40
test eax eax
js r-xdata
push 0x2
mov ecx ebx
call sub_40d2c0
test al al
jne r-xdata
mov eax [ ebp - 0x5c ]
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ebp - 0x1c ] 0xf
setne al
dec eax
and eax [ ebp - 0x28 ]
push eax
call sub_44a76d
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_40d89e
jmp r-xdata
mov eax [ ebp - 0x5c ]
cmp eax 0x5
je r-xdata
mov eax [ ebp - 0x5c ]
cmp eax 0x5
je r-xdata
test dl dl
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_40d89e
jmp r-xdata
push 0x3
mov ecx ebx
call sub_40d2c0
test al al
jne r-xdata
cmp [ ebp - 0x4c ] 0x1
jne r-xdata
cmp eax 0x3
je r-xdata
lea ecx [ ebp - 0x58 ]
call sub_412570
mov [ ebp - 0x4c ] 0x1
mov [ ebp - 0x58 ] 0x0
cmp eax 0xf
je r-xdata
cmp eax 0xf
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x1
jne r-xdata
jmp r-xdata
push 0x2
lea ecx [ ebp - 0x58 ]
call sub_40d2c0
test al al
jne r-xdata
cmp eax 0x2
je r-xdata
mov [ esi ] eax
lea ecx [ ebp - 0x38 ]
call sub_412570
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x38 ] 0x0
call sub_412570
mov edi [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push ebx
mov ecx edi
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x28 ] 0x0
call sub_45bf80
lea ecx [ ebp - 0x38 ]
call sub_44be14
mov ecx ebx
test al al
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_412570
fldz
lea edx [ ebp - 0x28 ]
fstp [ ebp - 0x28 ]
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x1c ] 0x3
call sub_4141fc
test al al
jne r-xdata
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
cmp eax [ rw-data ]
jg r-xdata
mov eax [ eax ]
sub eax 0xd
je r-xdata
mov ecx ebx
call sub_41bde1
mov ecx ebx
test al al
je r-xdata
push 0x3
lea ecx [ ebp - 0x58 ]
call sub_40d2c0
test al al
jne r-xdata
lea ecx [ ebp - 0x68 ]
call sub_41bde1
lea ecx [ ebp - 0x68 ]
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_40d89e
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_40d89e
lea eax [ ebp - 0x78 ]
lea ecx [ edi + 0x160 ]
push eax
call sub_404b02
mov eax [ ebp - 0x74 ]
inc eax
jmp r-xdata
push r--data
call sub_40ca8e
lea ecx [ ebp - 0x38 ]
call sub_412570
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x38 ] 0x0
call sub_412570
mov eax [ ebp - 0x70 ]
inc eax
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x28 ] 0x0
mov [ esi ] eax
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov ecx ebx
call sub_41ee93
test al al
je r-xdata
mov edx ebx
lea ecx [ ebp - 0x68 ]
call sub_4141fc
test al al
jne r-xdata
inc edi
jmp r-xdata
dec eax
jne r-xdata
call sub_40cf97
jmp r-xdata
call sub_41df8a
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_41bde1
lea ecx [ ebp - 0x58 ]
test al al
je r-xdata
call sub_41df8a
jmp r-xdata
call sub_40cf97
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x74 ]
cmp [ eax + 0x169 ] 0x0
jne r-xdata
test edi edi
jne r-xdata
call sub_40cf97
jmp r-xdata
call sub_41df8a
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x78 ]
lea ecx [ ecx + 0x160 ]
push eax
call sub_404b02
mov eax [ ebp - 0x74 ]
inc eax
jmp r-xdata
lea ecx [ ebp - 0x78 ]
push ecx
mov ecx [ eax + 0x164 ]
call sub_45d1da
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x169 ] 0x0
jmp r-xdata
push 0x38
call sub_42010a
mov edi eax
add esp 0x4
test edi edi
je r-xdata
dec edi
jmp r-xdata
lea ebx [ ecx - 0x1 ]
mov dl 0x1
mov [ ebp - 0x70 ] ebx
jmp r-xdata
inc [ ecx + 0x160 ]
lea eax [ ebx + 0x1 ]
xor edi edi
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov [ edi ] ecx
mov ecx [ ebp - 0x70 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebp - 0x6c ]
mov [ edi + 0xc ] ecx
lea ecx [ edi + 0x10 ]
lea eax [ ebp - 0x68 ]
mov [ edi + 0x4 ] ebx
push eax
mov [ ecx + 0x8 ] 0x0
call sub_4113a0
lea ecx [ edi + 0x20 ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ecx + 0x8 ] 0x0
call sub_4113a0
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x164 ]
mov [ edi + 0x30 ] eax
mov [ ecx + 0x164 ] edi
sub_412b40
push ebp
mov ebp esp
sub esp 0x168
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x21 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x58 ] 0x1
test al 0x4
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
mov ebx [ ebp + 0x8 ]
and eax 0x3
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0xc ]
inc [ eax ]
mov ecx [ eax ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp edx 0x1e
jne r-xdata
xor ecx ecx
mov eax 0x8
mov edx 0x2
mul edx
seto cl
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x8
neg ecx
or ecx eax
push ecx
call sub_42010a
mov esi eax
add esp 0x4
xor eax eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ esi ] ax
call sub_42010a
mov edx eax
add esp 0x4
mov [ ebp - 0x50 ] edx
test edx edx
je r-xdata
cmp edx 0x1f
je r-xdata
push [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
push esi
push ebx
mov ecx edi
call sub_405577
jmp r-xdata
xor edx edx
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov [ edx ] 0x1
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
cmp edx 0x2c
jne r-xdata
lea ecx [ ebp - 0x64 ]
call sub_412570
lea ecx [ ebp - 0x44 ]
call sub_412570
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
mov ecx [ edi ]
mov [ ebp - 0x14 ] edx
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
call sub_44d520
jmp r-xdata
jmp r-xdata
movsx eax [ ecx + 0xa ]
push eax
push 0x6e
mov ecx edi
call sub_44d520
jmp r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp eax 0x1c
je r-xdata
push [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
push esi
push ebx
mov ecx edi
call sub_45d443
jmp r-xdata
mov ebx [ ebp - 0x50 ]
dec [ ebx ]
jne r-xdata
mov esi [ eax ]
lea eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
cmp eax 0x1d
je r-xdata
push esi
call j_sub_4228ca#2
add esp 0x4
push ebx
call j_sub_4228ca#2
add esp 0x4
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
cmp eax 0x1
jg r-xdata
mov esi [ ebp + 0xc ]
push edx
push esi
push ebx
mov ecx edi
call sub_45d8ff
jmp r-xdata
mov [ ebp + 0x8 ] ecx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
jne r-xdata
dec eax
mov [ edx ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x1c ] edx
inc [ eax ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edi [ esi + 0x4 ]
mov [ ebp - 0x1c ] edi
lea eax [ edi + 0x1 ]
cmp [ ebp - 0x18 ] eax
jb r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
test eax 0x100
jne r-xdata
sub eax 0x0
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] ecx
cmp [ rw-data ] cl
jne r-xdata
push eax
call sub_40c91c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x20 ]
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x2 ]
push eax
push [ esi ]
push [ ebp - 0x20 ]
call sub_41faa0
add esp 0xc
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
movsx eax [ eax + 0xa ]
push eax
push 0x79
call sub_44d520
jmp r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_40ca8e
push [ ebp + 0x10 ]
lea eax [ ebp - 0x44 ]
push 0x0
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_40d380
push [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_40d2d2
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
movsx eax [ eax + 0xa ]
push eax
push 0xae
call sub_44d520
jmp r-xdata
test eax 0x400
jne r-xdata
cmp [ rw-data ] ecx
je r-xdata
sub eax 0x2
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx rw-data
call sub_40d349
mov ecx eax
jmp r-xdata
cmp [ rw-data ] cl
jne r-xdata
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
xor ecx ecx
mov [ ebp - 0x20 ] eax
mov [ eax + edi * 2 ] cx
jmp r-xdata
push eax
call j_sub_4228ca#2
add esp 0x4
mov esi [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov [ ebp - 0x21 ] 0x1
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx rw-data
call sub_40d349
mov ecx eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx rw-data
call sub_448a7c
mov ecx eax
call sub_40d349
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
sub eax 0xe
jne r-xdata
mov [ ebp - 0x8 ] ecx
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
jmp r-xdata
mov esi [ rw-data ]
push 0x1
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_40d2d2
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov dl [ ebp - 0x9 ]
mov esi [ ebp - 0x8 ]
test dl dl
jne r-xdata
mov ecx [ ebp + 0x10 ]
test cl 0x1
je r-xdata
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
movsx eax [ eax + 0xa ]
push eax
push 0x9c
call sub_44d520
jmp r-xdata
test cl 0x2
jne r-xdata
cmp ecx 0x1
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx rw-data
call sub_40d349
mov ecx eax
jmp r-xdata
mov [ ebp - 0x8 ] esi
cmp [ esi ] ecx
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0xb ] cl
test al 0x1
je r-xdata
test [ ebp - 0x28 ] 0x200
je r-xdata
push 0x5
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
mov edi [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
inc [ edi ]
mov ecx [ edi ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov eax ecx
sub eax 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
or [ rw-data ] 0x1
mov ecx rw-data
call sub_40d3d2
push sub_471fb5
call sub_421b2a
mov edx [ ebp - 0x1c ]
add esp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x4c ] rw-data
mov [ ebp - 0x30 ] rw-data
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
movsx eax [ eax + 0xa ]
push eax
push 0x71
call sub_44d520
jmp r-xdata
mov dl [ ebp - 0x9 ]
jmp r-xdata
test dl dl
jne r-xdata
mov edi [ ebp - 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x2
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx rw-data
call sub_40d349
mov esi [ ebp - 0x20 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
movsx eax [ eax + 0xa ]
push eax
push 0xaf
call sub_44d520
jmp r-xdata
push esi
lea ecx [ ebp - 0x64 ]
call sub_40d89e
jmp r-xdata
mov [ ebp - 0x21 ] dl
mov edi [ ebp + 0xc ]
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
mov eax [ edx + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x7f
je r-xdata
cmp [ ebp - 0x9 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
mov [ ebp + 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx rw-data
call sub_448a7c
mov ecx eax
call sub_40d349
test eax eax
je r-xdata
sub eax 0xe
jne r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x8 ]
jmp r-xdata
mov edi [ rw-data ]
cmp edx eax
jb r-xdata
jmp r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x2c ] 0x0
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4e
movsx edi [ eax + 0xa ]
jne r-xdata
push 0xf
mov ecx esi
call sub_40d2c0
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
nop
cmp ax 0x40
jne r-xdata
push ecx
mov ecx [ ebp - 0x10 ]
push 0xac
call sub_44d520
jmp r-xdata
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx rw-data
call sub_40d349
mov esi [ ebp - 0x20 ]
jmp r-xdata
test [ ebp - 0x28 ] 0x200
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0xb ] 0x0
test al 0x1
je r-xdata
mov edx [ edi ]
mov ecx [ ebp - 0x20 ]
push eax
call sub_40b96c
add esp 0x4
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
mov ecx [ edi ]
mov esi edx
mov edx [ ebp - 0x20 ]
jbe r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
cmp [ ebp + 0xb ] 0x0
mov eax [ esi ]
mov ecx [ ebp - 0x30 ]
mov eax [ eax + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov ecx [ ebp - 0x4c ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x34 ] eax
cmp eax edx
ja r-xdata
cmp [ ebp - 0x2c ] 0x1
jl r-xdata
sub esp 0x10
mov ecx esp
push ebx
call sub_45d154
push 0x0
push [ esi ]
push [ ebp - 0x2c ]
call sub_45ec7e
lea ecx [ ebp - 0x44 ]
mov esi eax
call sub_412570
mov [ ebp - 0x44 ] esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push 0xffffffff
lea eax [ ebp - 0x44 ]
push eax
push esi
push ebx
call sub_40fa40
test eax eax
js r-xdata
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
call sub_44d520
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ edi ] eax
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ ebp + 0xc ]
mov esi [ eax ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x3c ]
cmp eax 0x4
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
movsx eax [ eax + 0xa ]
push eax
push 0xaf
call sub_44d520
jmp r-xdata
or [ rw-data ] 0x1
mov ecx rw-data
call sub_40d3d2
push sub_471fb5
call sub_421b2a
add esp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x34 ] rw-data
mov [ ebp - 0x4c ] rw-data
lea ebx [ ebx ]
test eax eax
js r-xdata
xor eax eax
jmp r-xdata
nop
mov eax edx
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x1c ] edx
ja r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax edx
mov [ ebp - 0x34 ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ edi ]
mov esi eax
test eax eax
je r-xdata
push edi
push 0x7e
jmp r-xdata
mov ecx esi
call sub_40346e
mov ecx [ ebp - 0x8 ]
xor esi esi
cmp [ ebp - 0x2c ] esi
jle r-xdata
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
push edi
push 0x7b
jmp r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
mov edx [ ebp - 0x50 ]
jmp r-xdata
push 0x5
mov ecx edi
call sub_40d2c0
test al al
je r-xdata
cmp [ edi + 0xc ] 0x5
je r-xdata
push r--data
call sub_407e53
mov esi [ ebp - 0x3c ]
jmp r-xdata
test ecx ecx
jne r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x1c ]
jle r-xdata
mov esi [ ebp - 0x8 ]
movzx eax [ edx ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
mov eax edx
mov [ ebp - 0x34 ] edx
jmp r-xdata
mov edx [ ecx ]
mov esi [ ebp - 0x20 ]
mov edi eax
test eax eax
je r-xdata
mov eax [ ecx + 0x10 ]
mov ecx [ ecx + 0x14 ]
and eax 0xff00
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x1c ]
cmp eax edx
jb r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
call sub_44d520
jmp r-xdata
push 0x0
push ecx
call sub_403320
add esp 0x8
test al al
je r-xdata
jmp r-xdata
cmp [ ebp - 0x2c ] 0x40
jg r-xdata
lea eax [ esi - 0x1 ]
mov esi [ ebp + 0xc ]
sub esp 0x10
mov ecx esp
push ebx
mov [ esi ] eax
call sub_45d154
lea eax [ ebp - 0x2c ]
push eax
push [ esi ]
push 0x0
call sub_45ec7e
mov esi 0x1
mov [ ebp - 0x164 ] eax
cmp [ ebp - 0x2c ] esi
jle r-xdata
mov edx [ ebp + 0xc ]
push ecx
push 0x7e
jmp r-xdata
xor edx edx
mov [ ebp - 0x30 ] edx
cmp esi [ ebx + 0x8 ]
jae r-xdata
lea eax [ ebp - 0x44 ]
cmp edi eax
je r-xdata
push ecx
call sub_401926
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x3c ] 0x0
jmp r-xdata
cmp eax 0x5
jge r-xdata
cmp edx eax
jb r-xdata
mov esi [ ecx + 0x18 ]
test esi esi
je r-xdata
mov esi [ ecx + 0x1c ]
test esi esi
je r-xdata
mov [ ebp + 0xb ] 0x1
mov edx [ ebp - 0x1c ]
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
cmp eax [ ecx + 0x4 ]
jb r-xdata
lea esp [ esp ]
mov eax [ edi + 0x18 ]
mov edx [ ebp - 0x48 ]
mov esi [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
mov eax [ esi ]
mov [ edi + 0x18 ] eax
mov [ esi ] edi
cmp [ edi + 0x1c ] 0x0
je r-xdata
mov esi [ ebp - 0x8 ]
jae r-xdata
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
mov ecx [ ebp - 0x10 ]
push edi
push 0x82
call sub_44d520
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
push [ ebp + esi * 4 - 0x164 ]
call sub_403489
test al al
je r-xdata
lea eax [ ecx + 0x1 ]
lea ecx [ ebp - 0x44 ]
mov [ esi ] eax
call sub_40cdb4
test eax eax
js r-xdata
mov ecx edi
call sub_40346e
xor esi esi
cmp [ ebp - 0x2c ] esi
jle r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edx ]
xor ecx ecx
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x48 ] edx
cmp edx [ ebx + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x10 ]
push 0xffffffff
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0xc ]
mov ecx esi
push ebx
call sub_40fa40
test eax eax
js r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movzx eax [ ecx + 0x8 ]
cmp ax 0x33
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ edi + 0xc ] 0x4
je r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
push 0x10
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x38 ] 0x4
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov edx [ ecx ]
mov esi [ ebp - 0x20 ]
push eax
mov ecx esi
call sub_40b96c
add esp 0x4
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
mov ecx [ ecx ]
mov esi edx
mov edx [ ebp - 0x20 ]
jbe r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
mov edx esi
lea ecx [ ebp - 0x20 ]
call sub_43fd7d
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov ecx esi
call sub_43fd7d
test al al
je r-xdata
mov eax [ ecx + 0x1c ]
mov edx [ ebp - 0x48 ]
mov esi [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ esi ]
mov [ ecx + 0x1c ] eax
mov [ esi ] ecx
cmp [ ecx + 0x18 ] 0x0
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x2
add edx 0x2
dec edi
jne r-xdata
jae r-xdata
mov edx [ ebp - 0x1c ]
jmp r-xdata
mov edi [ esi ]
mov [ ebp - 0x48 ] edi
mov eax [ edi + 0x4 ]
test edx edx
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
jmp r-xdata
push edi
jmp r-xdata
inc esi
cmp esi [ ebp - 0x2c ]
jl r-xdata
lea ecx [ ebp - 0x44 ]
call sub_40cdb4
mov edx [ ebp - 0x2c ]
mov ecx [ esi ]
mov [ ebp + edx * 4 - 0x164 ] eax
mov eax [ ebx + 0x4 ]
inc edx
mov eax [ eax + ecx * 4 ]
mov [ ebp - 0x2c ] edx
cmp [ eax + 0x8 ] 0x4e
je r-xdata
push 0x0
push edi
call sub_403320
add esp 0x8
test al al
je r-xdata
push [ ebp + esi * 4 - 0x164 ]
mov ecx edi
call sub_403489
test al al
je r-xdata
sub esp 0x10
mov ecx esp
push ebx
call sub_45d154
push 0x0
push [ edi ]
push esi
call sub_45ec7e
mov [ ebp + esi * 4 - 0x164 ] eax
inc esi
cmp esi [ ebp - 0x2c ]
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
lea eax [ eax + edx * 4 ]
mov [ ebp - 0x34 ] eax
push 0x1
lea eax [ ebp - 0x164 ]
push eax
push edi
push edx
push ebx
mov ecx esi
call sub_40203a
test al al
jne r-xdata
mov ecx eax
xor eax eax
lea edi [ ebp - 0x164 ]
[ edi ]
mov edi [ ebp - 0x8 ]
push [ ebp + 0x8 ]
mov ecx esi
push 0x6e
call sub_44d520
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov [ rw-data ] 0x0
cmp edi eax
je r-xdata
mov ecx [ ecx ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp - 0x1c ]
je r-xdata
cmp ax 0x4e
je r-xdata
cmp [ ebp - 0x38 ] 0x4
jne r-xdata
mov ecx [ edi + 0x8 ]
test ecx ecx
jne r-xdata
jmp [ eax * 4 + jump_table_47851f ]
xor esi esi
jmp r-xdata
push r--data
call sub_4218fb
lea edi [ eax + 0x1 ]
add esp 0x4
mov [ esi + 0x4 ] eax
test edi edi
je r-xdata
test eax eax
js r-xdata
xor eax eax
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
cmp [ ebp + 0xb ] 0x0
mov eax [ edi ]
mov ecx [ ebp - 0x4c ]
mov eax [ eax + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ edi ]
mov ecx [ ebp - 0x34 ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x18 ] eax
mov eax [ edi ]
mov [ ebp - 0x34 ] eax
mov eax [ eax + 0x18 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x18 ] eax
mov eax [ edi ]
mov [ esi + 0x1c ] eax
mov [ edi ] esi
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x4c ]
mov [ ecx + 0x1c ] eax
mov eax [ edi ]
mov [ ebp - 0x4c ] eax
mov eax [ eax + 0x1c ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x1c ] eax
mov eax [ edi ]
mov [ esi + 0x18 ] eax
mov [ edi ] esi
cmp [ esi + 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov ax [ esi ]
cmp ax [ edx ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ esi ]
mov [ ecx + 0x1c ] eax
mov ecx [ esi ]
mov [ ebp - 0x30 ] ecx
mov eax [ ecx + 0x1c ]
mov [ esi ] eax
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_40218e
mov edi [ ebp - 0x8 ]
test eax eax
jle r-xdata
push 0x7d
inc [ esi ]
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4f
movsx edi [ eax + 0xa ]
je r-xdata
mov esi [ ebp - 0x8 ]
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
push 0x82
call sub_44d520
jmp r-xdata
mov edx [ ebp + 0xc ]
inc [ edx ]
jmp r-xdata
push [ ebp + 0x8 ]
inc esi
cmp esi [ ebp - 0x2c ]
jl r-xdata
cmp si 0x4e
je r-xdata
mov ecx [ edi ]
lea edx [ ebp - 0x20 ]
call sub_405b2a
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x38 ] 0x4
je r-xdata
mov ecx [ ecx ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x48 ] ecx
test edx edx
je r-xdata
mov edx [ ebp - 0x30 ]
jmp r-xdata
inc edx
mov [ ebp - 0x30 ] edx
jmp r-xdata
cmp ax 0x4f
je r-xdata
mov ecx [ edi + 0x8 ]
push esi
call sub_40c935
jmp r-xdata
push ecx
call sub_401926
mov [ edi + 0x8 ] 0x0
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
jge r-xdata
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_41e3cc
jmp r-xdata
mov eax [ ebp - 0x44 ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ ebp - 0x44 ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x3c ] esi
mov eax 0x8
jmp r-xdata
lea eax [ edi + 0x7 ]
and eax 0xfffffff8
mov ecx [ ebp - 0x30 ]
jmp r-xdata
jg r-xdata
movzx eax [ edx ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x1c ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x30 ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4c ]
mov eax [ esi ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov [ ebp - 0x4c ] ecx
mov eax [ ecx + 0x18 ]
mov [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov esi [ ebp + 0xc ]
mov edx [ ebx + 0x4 ]
mov ecx [ esi ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov ecx edi
call sub_44ab1c
jmp r-xdata
mov esi [ ebp - 0x10 ]
cmp [ esi + 0x103 ] 0x0
jne r-xdata
inc ecx
cmp si 0x47
je r-xdata
movsx eax [ edi + 0xa ]
mov ecx [ ebp - 0x10 ]
push eax
push 0xb1
call sub_44d520
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x34 ]
cmp [ edi + 0xc ] 0x4
jne r-xdata
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov edx [ ebp - 0x30 ]
mov [ rw-data ] 0x1
jmp r-xdata
jmp r-xdata
inc esi
cmp esi [ ebx + 0x8 ]
jb r-xdata
dec edx
mov [ ebp - 0x30 ] edx
jmp r-xdata
cmp ax 0x47
je r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x0
call sub_4113a0
push eax
call [ VariantClear@IAT ]
push [ ebp - 0x44 ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41fa89
add esp 0x4
lea ecx [ edi + edi ]
push ecx
push r--data
push eax
mov [ esi ] eax
call sub_41faa0
add esp 0xc
push 0x4
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov ecx [ ebp - 0x30 ]
jmp r-xdata
mov [ ebp + 0xb ] 0x1
mov esi [ ebp - 0x20 ]
mov eax [ ecx + 0x10 ]
and eax 0xff00
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0x14 ]
mov edi [ eax ]
movzx esi [ edi + 0x8 ]
cmp si 0x33
jne r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ ebp - 0x8 ]
cmp si 0x4f
je r-xdata
push [ ebp - 0x3c ]
mov ecx [ edi + 0x8 ]
call sub_40c935
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
jge r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov cx [ ecx ]
cmp cx [ edi ]
jne r-xdata
jmp r-xdata
cmp ax 0x48
je r-xdata
jmp [ eax * 4 + jump_table_47854b ]
mov edi [ ebp - 0x8 ]
mov [ esi + 0xc ] eax
dec ecx
jmp r-xdata
cmp si 0x48
je r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x0
call sub_4113a0
push esi
call j_sub_4228ca#2
add esp 0x4
mov [ edi + 0x8 ] 0x0
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
push [ esi + 0xc ]
call j_sub_4228ca#2
add esp 0x4
mov ecx [ ebp - 0x48 ]
add ecx 0x2
add edi 0x2
mov [ ebp - 0x48 ] ecx
dec edx
jne r-xdata
mov edi [ ebp - 0x8 ]
cmp ax 0x40
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_41e3cc
jmp r-xdata
mov eax [ edi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ edi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
cmp si 0x40
jne r-xdata
jmp [ eax * 4 + jump_table_478577 ]
jmp r-xdata
test edx edx
jne r-xdata
cmp ax 0x7f
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ edi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
cmp si 0x7f
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_41e3cc
jmp r-xdata
mov eax [ edi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
push [ edi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
inc edx
add eax 0x4
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x34 ] eax
cmp edx [ ebx + 0x8 ]
jb r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ edi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
sub_413680
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xb4
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edx [ esi ]
mov edi ecx
sub esp 0x10
mov eax [ edi + 0xf4 ]
mov [ esp + 0x50 ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x5c ] edi
mov eax [ eax + edx * 4 ]
mov [ esp + 0x34 ] 0x3
movsx ecx [ eax + 0xa ]
mov edx [ eax ]
mov [ esp + 0x44 ] ecx
mov eax [ edx ]
mov ecx esp
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea ecx [ edi + 0x138 ]
call sub_40a9a0
mov [ esp + 0x2c ] eax
test eax eax
je r-xdata
push [ esp + 0x34 ]
mov ecx edi
push 0x85
call sub_44d520
or eax 0xffffffff
jmp r-xdata
mov eax [ edi + 0x14c ]
inc [ esi ]
mov ecx [ esi ]
mov [ esp + 0x84 ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x6c ] 0x1
mov eax [ eax + ecx * 4 ]
mov [ esp + 0x50 ] r--data
cmp [ eax + 0x8 ] 0x47
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x74 ] r--data
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x38 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push [ esp + 0x34 ]
mov ecx edi
push 0x6f
call sub_44d520
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push esi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] ecx
push ebx
mov ecx edi
call sub_41bc04
test eax eax
js r-xdata
or ebx 0xffffffff
jmp r-xdata
mov ebx [ esp + 0x2c ]
mov eax [ ebx + 0x10 ]
mov [ edi + 0xf4 ] eax
mov eax [ ebx + 0x10 ]
cmp eax [ rw-data ]
jg r-xdata
lea ecx [ esp + 0x60 ]
call sub_412570
xor edi edi
cmp [ esp + 0x7c ] edi
ja r-xdata
xor eax eax
jmp r-xdata
test eax eax
jle r-xdata
mov eax [ esp + 0x78 ]
push [ eax + edi * 4 ]
lea esi [ eax + edi * 4 ]
call j_sub_4228ca#2
inc edi
add esp 0x4
mov [ esi ] 0x0
cmp edi [ esp + 0x7c ]
jb r-xdata
push [ esp + 0x78 ]
call j_sub_4228ca#2
mov eax [ esp + 0x58 ]
xor esi esi
add esp 0x4
cmp [ esp + 0x58 ] esi
ja r-xdata
mov [ esp + 0x18 ] eax
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
shl eax 0x4
add eax [ rw-data ]
jmp r-xdata
mov edi [ eax + esi * 4 ]
test edi edi
je r-xdata
push eax
call j_sub_4228ca#2
add esp 0x4
mov eax ebx
mov ecx 0x3
cmp [ ecx ] 0x2b
je r-xdata
mov [ eax + esi * 4 ] 0x0
inc esi
cmp esi [ esp + 0x58 ]
jb r-xdata
mov ecx edi
call sub_414430
push edi
call j_sub_4228ca#2
mov eax [ esp + 0x58 ]
add esp 0x4
cmp ecx edx
jae r-xdata
mov eax [ esp + 0x20 ]
mov ecx 0x4
mov [ esp + 0x24 ] ecx
jmp r-xdata
push eax
call j_sub_4228ca#2
add esp 0x4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ esp + 0x20 ]
cmp eax 0x1
je r-xdata
inc [ esp + 0x20 ]
lea edx [ eax + esi * 4 ]
xor bl bl
mov eax [ edx ]
mov [ esp + 0x13 ] bl
cmp [ eax + 0x8 ] 0x0
mov [ esp + 0x3c ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov eax [ esp + 0x40 ]
mov [ edi + 0xf4 ] eax
jne r-xdata
cmp eax [ ebx + 0x14 ]
jg r-xdata
cmp [ ebx + 0x14 ] 0x0
mov edx [ esp + 0x1c ]
mov esi ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x30 ] 0x0
jg r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ebx [ esp + 0x2c ]
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov eax [ ebp + 0x10 ]
add [ eax ] 0xfffffffe
jmp r-xdata
push [ esp + 0x34 ]
mov ecx edi
push 0x70
call sub_44d520
jmp r-xdata
cmp ecx edx
jne r-xdata
jmp r-xdata
cmp eax [ ebx + 0x18 ]
jl r-xdata
mov eax [ edx ]
mov eax [ eax ]
cmp eax 0x24
jne r-xdata
mov eax [ edx ]
mov edi [ edx + 0x4 ]
mov eax [ eax ]
cmp eax [ edi ]
mov edi [ esp + 0x4c ]
je r-xdata
lea eax [ esp + 0x13 ]
push eax
lea ecx [ esp + 0x78 ]
call sub_41bc5c
test bl bl
jne r-xdata
xor bl bl
mov [ esp + 0x13 ] bl
mov eax [ ebx + 0x10 ]
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x48 ] eax
test eax eax
js r-xdata
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_45d21a
test eax eax
jne r-xdata
cmp eax 0x1e
jne r-xdata
mov bl 0x1
mov [ esp + 0x13 ] bl
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx edi
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
call sub_44d520
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ esp + 0x14 ]
mov ecx [ ebx + 0x4 ]
push 0x0
mov eax [ ecx + eax * 4 ]
lea ecx [ esp + 0x3c ]
push ecx
lea ecx [ esp + 0x30 ]
push ecx
push [ eax ]
call sub_40d2d2
test al al
je r-xdata
mov eax [ esp + 0x40 ]
lea ecx [ esp + 0x60 ]
mov [ edi + 0xf4 ] eax
call sub_412570
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0x70 ] 0x1
mov [ esp + 0x64 ] 0x0
call sub_41baef
push [ esp + 0x1c ]
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x58 ]
mov ebx [ ebp + 0xc ]
push [ ecx + eax * 4 - 0x4 ]
lea eax [ esp + 0x1c ]
push eax
push ebx
mov ecx edi
call sub_40fa40
test eax eax
js r-xdata
mov [ esp + 0x48 ] 0x0
jmp r-xdata
lea eax [ esp + 0x44 ]
push eax
mov ecx rw-data
call sub_4010e8
push [ esp + 0x44 ]
lea ecx [ esp + 0x48 ]
call sub_4011ca
cmp [ ebx + 0x14 ] 0x1
jge r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
mov ebx [ esp + 0x2c ]
jmp r-xdata
lea ecx [ esp + 0x74 ]
call sub_402982
mov ecx [ esp + 0x20 ]
test ecx ecx
jle r-xdata
mov [ esp + 0x3c ] 0x100
mov eax [ edx + 0x4 ]
add edx 0x4
inc esi
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x40 ]
mov [ edi + 0xf4 ] eax
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x14 ]
mov eax [ ecx + eax * 4 ]
mov ecx edi
push [ eax ]
call sub_41cf79
mov ecx [ ebx + 0x4 ]
test eax eax
mov eax [ esp + 0x14 ]
mov eax [ ecx + eax * 4 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
jne r-xdata
test [ esp + 0x38 ] 0x100
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x18 ]
mov eax [ eax + 0x10 ]
mov [ edi + 0xf4 ] eax
mov ecx [ ecx + 0x4 ]
inc esi
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] 0x41
je r-xdata
mov ecx [ esp + 0x54 ]
mov eax [ esp + 0x78 ]
mov ebx [ esp + 0x18 ]
sub eax ecx
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] eax
lea ecx [ ecx ]
mov eax [ esp + 0x20 ]
mov [ edi + 0x14c ] eax
mov eax [ edi ]
mov [ esp + 0x88 ] 0x0
mov ebx [ eax + 0x4 ]
add ebx edi
mov [ esp + 0x90 ] 0x0
cmp [ ebx + 0xd ] 0x0
mov [ esp + 0x94 ] 0x1
mov [ esp + 0x98 ] 0x0
mov [ esp + 0x9c ] 0x0
mov [ esp + 0xa0 ] 0x0
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0xb0 ] 0x0
mov [ esp + 0xb4 ] 0x1
mov [ esp + 0xb8 ] 0x0
jne r-xdata
mov [ esp + 0x13 ] 0x0
mov esi ecx
jmp r-xdata
push 0xbc
call sub_44d520
jmp r-xdata
push 0x79
call sub_44d520
jmp r-xdata
mov ecx [ esp + 0x28 ]
inc [ esp + 0x14 ]
push 0x5
inc esi
call sub_40d2c0
test al al
je r-xdata
test [ esp + 0x3c ] 0x100
jne r-xdata
inc esi
xor edx edx
lea ecx [ ecx + esi * 4 ]
nop
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
cmp ecx edx
je r-xdata
mov eax [ edx ]
mov eax [ eax ]
cmp eax 0x24
je r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x28 ] 0x1
mov edi [ esp + 0x28 ]
lea ecx [ ecx + eax * 4 ]
xor ebx ebx
lea edx [ ecx + 0x4 ]
mov ecx [ ebx + 0x8 ]
lea eax [ esp + 0x88 ]
push eax
call sub_44d231
mov [ ebx + 0xd ] 0x0
jmp r-xdata
push 0x40
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea eax [ esp + 0x13 ]
push eax
lea ecx [ esp + 0x78 ]
call sub_41bc5c
dec esi
jne r-xdata
mov ecx [ esp + 0x28 ]
push 0xf
call sub_40d2c0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ esp + 0x14 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
mov eax [ esp + 0x40 ]
mov [ edi + 0xf4 ] eax
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x14 ]
mov eax [ ecx + eax * 4 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
push 0xb0
call sub_44d520
jmp r-xdata
inc edx
inc esi
add ecx 0x4
jmp r-xdata
cmp ax 0x48
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
inc ebx
add edx 0x4
cmp eax 0x1e
jne r-xdata
inc ebx
inc edi
add edx 0x4
jmp r-xdata
cmp ax 0x48
je r-xdata
inc [ ebx + 0x4 ]
mov eax [ esp + 0x2c ]
mov ecx [ edi + 0x160 ]
mov eax [ eax + 0x10 ]
mov ebx [ edi + 0xf4 ]
lea esi [ edi + 0x160 ]
inc eax
mov [ esp + 0x30 ] ecx
push eax
mov ecx edi
call sub_40e1f0
mov eax [ esp + 0x30 ]
cmp eax [ esi ]
jb r-xdata
xor esi esi
jmp r-xdata
lea eax [ esp + 0x88 ]
push eax
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_4113a0
lea ecx [ esi + 0x20 ]
lea eax [ esp + 0xa8 ]
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] 0x0
push eax
mov [ ecx + 0x8 ] 0x0
call sub_4113a0
mov [ esi + 0x30 ] 0x0
lea ecx [ esp + 0x60 ]
call sub_412570
mov eax [ esp + 0x28 ]
mov [ esp + 0x60 ] eax
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0x70 ] 0x6
call sub_41baef
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ esp + 0x14 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
push 0x0
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x1c ]
push eax
push ebx
mov ecx edi
call sub_45f211
test eax eax
js r-xdata
mov eax [ ecx ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
je r-xdata
dec edx
js r-xdata
cmp ax 0x40
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_44d520
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp eax edx
je r-xdata
mov [ esp + 0x24 ] ebx
jmp r-xdata
mov eax [ edx ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov esi 0x100
mov eax [ edx ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
je r-xdata
dec ebx
js r-xdata
cmp ax 0x40
jne r-xdata
mov edi [ esp + 0x30 ]
jmp r-xdata
mov eax [ edi ]
mov [ edi + 0xf4 ] ebx
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edi + 0x8 ]
add ecx edi
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x38 ] eax
mov [ ebx + 0x8 ] esi
push 0x0
push 0x0
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x20 ]
push eax
push ebx
mov ecx edi
call sub_45f4df
test eax eax
js r-xdata
jmp r-xdata
inc esi
add ecx 0x4
jmp r-xdata
test edx edx
je r-xdata
inc esi
add ecx 0x4
jmp r-xdata
mov ecx eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ecx
mov eax [ eax + 0x4 ]
mov [ esp + 0x3c ] eax
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x4c ]
cmp [ esp + 0x34 ] eax
jg r-xdata
inc edi
add edx 0x4
jmp r-xdata
test ebx ebx
jne r-xdata
mov ecx esi
call sub_40d9f2
cmp edi [ esi ]
jb r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
mov eax [ ebp + 0x18 ]
je r-xdata
inc esi
add ecx 0x4
jmp r-xdata
mov ebx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
inc ebx
mov [ esp + 0x30 ] ebx
cmp ebx [ eax + 0x14 ]
jge r-xdata
inc esi
mov ecx [ esp + 0x24 ]
mov ebx [ esp + 0x18 ]
lea eax [ ecx + 0x2 ]
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x40 ]
mov [ edi + 0xf8 ] eax
mov eax [ esp + 0x28 ]
add eax ecx
push eax
lea eax [ esp + 0x64 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push ebx
mov ecx edi
call sub_40fa40
mov [ edi + 0xf8 ] 0x0
test eax eax
js r-xdata
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov eax [ eax + edx ]
cmp [ eax ] 0x0
jne r-xdata
mov edi [ esp + 0x4c ]
jmp r-xdata
mov esi [ ebp + 0x14 ]
mov ecx esi
mov [ eax ] 0x0
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
jmp r-xdata
cmp [ ecx + 0xd ] 0x0
mov [ eax ] 0x1
jne r-xdata
mov eax [ esp + 0x3c ]
jmp r-xdata
mov ecx [ esp + 0x24 ]
push 0x1
or esi 0x200
push esi
lea eax [ esp + 0x68 ]
push eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
push [ eax ]
call sub_40d380
jmp r-xdata
mov eax [ edx ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
mov eax [ ecx ]
mov edx [ edx ]
mov ebx [ eax ]
or esi 0x200
cmp [ rw-data ] 0x0
mov [ esp + 0x30 ] edx
je r-xdata
mov eax [ edi ]
mov esi [ eax + 0x4 ]
mov eax [ esi + edi + 0x8 ]
add esi edi
cmp [ esi + 0xd ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
mov ebx [ eax + 0x38 ]
jmp r-xdata
mov ebx [ ecx + 0x8 ]
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x34 ]
add [ esp + 0x38 ] 0x4
inc ecx
add [ esp + 0x24 ] ecx
mov ecx [ esp + 0x2c ]
inc eax
mov [ esp + 0x34 ] eax
cmp eax [ ecx + 0x14 ]
jle r-xdata
xor edx edx
mov edx [ eax ]
jmp r-xdata
push esi
push edx
push ebx
mov ecx rw-data
call sub_40d772
mov ebx [ esp + 0x18 ]
jmp r-xdata
cmp [ rw-data ] 0x0
mov eax [ rw-data ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
je r-xdata
cmp [ esi + 0xc ] 0x4
je r-xdata
mov ecx [ ebx + 0x4 ]
mov ebx [ esp + 0x24 ]
xor esi esi
mov eax [ ecx + ebx * 4 ]
lea edx [ ecx + ebx * 4 ]
cmp [ eax + 0x8 ] si
je r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x24 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
push 0x79
call sub_44d520
jmp r-xdata
mov ebx [ esp + 0x18 ]
jmp r-xdata
mov eax [ ecx ]
push 0x1
or esi 0x200
push esi
push edx
push [ eax ]
call sub_4489e0
test al al
je r-xdata
mov eax [ eax + 0x8 ]
jmp r-xdata
push eax
push ebx
mov [ esp + 0x24 ] eax
call sub_40d500
test al al
jne r-xdata
lea ecx [ esi + 0x4 ]
call sub_407be1
mov eax [ eax + 0x14 ]
mov [ esp + 0x9c ] eax
jmp r-xdata
cmp [ esi + 0xd ] 0x0
mov eax [ esi + 0x8 ]
jne r-xdata
cmp [ ebx + 0xc ] 0x4
jne r-xdata
mov ecx esi
call sub_412570
push ebx
mov ecx esi
call sub_4113a0
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_42010a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
push [ ebx + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_40c935
jmp r-xdata
push [ esp + 0x30 ]
mov ecx [ ecx + 0x14 ]
call sub_40d89e
mov ebx [ esp + 0x18 ]
jmp r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
mov eax 0x8
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x8
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_42010a
add esp 0x4
test eax eax
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_407be1
add eax 0x20
push eax
lea ecx [ esp + 0xac ]
call sub_40d89e
jmp r-xdata
mov eax [ edi ]
mov esi [ eax + 0x4 ]
add esi edi
cmp [ esi + 0xd ] 0x0
jne r-xdata
cmp esi ebx
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov ecx [ esi + 0x8 ]
mov ebx [ ecx + 0x38 ]
test ecx ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ esi + 0x10 ] eax
call sub_42010a
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_402db5
mov [ esi + 0xd ] 0x1
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov eax [ ebx + 0x38 ]
mov [ esp + 0x44 ] eax
test ebx ebx
je r-xdata
xor edi edi
jmp r-xdata
push [ esp + 0x30 ]
mov ecx edi
mov [ edi + 0x8 ] 0x0
call sub_4113a0
dec eax
mov [ ecx ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
inc [ eax ]
jmp r-xdata
mov edi [ ebx + 0x4 ]
mov [ esi + 0x4 ] edi
lea eax [ edi + 0x1 ]
cmp [ esi + 0x8 ] eax
jb r-xdata
dec [ esi + 0x4 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edi + 0x8 ]
add ecx edi
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0xd ] 0x0
lea ecx [ ebx + 0x20 ]
call sub_412570
mov ecx ebx
call sub_412570
push ebx
call j_sub_4228ca#2
mov eax [ esp + 0x48 ]
add esp 0x4
mov ebx [ esp + 0x1c ]
mov [ esi + 0x14 ] edi
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x18 ] 0x0
push [ ebx ]
push esi
call sub_40d420
mov edi [ esp + 0x4c ]
mov [ ebx ] eax
mov ebx [ esp + 0x18 ]
push eax
call sub_40c91c
mov [ esi + 0x8 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ ebx ]
push [ esi ]
call sub_41faa0
add esp 0xc
mov eax [ eax + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x9c ]
mov [ eax + 0x14 ] edx
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
jne r-xdata
mov eax [ esi + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
add esp 0x4
xor ecx ecx
mov [ esi ] eax
mov [ eax + edi * 2 ] cx
jmp r-xdata
push eax
call j_sub_4228ca#2
add esp 0x4
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov eax [ edi ]
mov esi [ eax + 0x4 ]
add esi edi
cmp [ esi + 0xd ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0xa8 ]
push eax
add ecx 0x20
call sub_40d89e
cmp [ esi + 0xd ] 0x0
mov eax [ esi + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov ecx rw-data
mov [ eax + 0x30 ] 0x0
call sub_401188
mov eax [ esp + 0x84 ]
lea ecx [ esp + 0xa8 ]
mov [ edi + 0x14c ] eax
xor ebx ebx
call sub_412570
lea ecx [ esp + 0x88 ]
call sub_412570
sub_414040
push ebp
mov ebp esp
sub esp 0x20
mov edx [ ebp + 0x14 ]
push ebx
inc [ edx ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ edx ]
mov esi [ esi + 0x4 ]
mov ebx ecx
mov eax [ esi + edi * 4 ]
lea ecx [ esi + edi * 4 ]
cmp [ eax + 0x8 ] 0x47
mov [ ebp - 0x8 ] ebx
jne r-xdata
mov eax [ ecx - 0x4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_44d520
or eax 0xffffffff
jmp r-xdata
inc edi
mov [ edx ] edi
xor ebx ebx
mov [ ebp + 0x14 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea eax [ ecx + 0x1 ]
mov [ edx ] eax
jmp r-xdata
sub eax 0x47
je r-xdata
mov ecx [ edx ]
mov eax [ esi + ecx * 4 ]
movsx eax [ eax + 0x8 ]
cmp eax 0x47
jl r-xdata
lea eax [ ecx + 0x1 ]
inc ebx
mov [ edx ] eax
jmp r-xdata
dec eax
je r-xdata
test ebx ebx
jne r-xdata
sub eax 0x37
je r-xdata
lea eax [ ecx + 0x1 ]
dec ebx
mov [ edx ] eax
jmp r-xdata
mov ebx [ ebp + 0x18 ]
mov esi ecx
cmp edi esi
mov edi [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
mov [ edx ] eax
mov [ ebx ] 0x0
jae r-xdata
mov eax [ esi + ecx * 4 - 0x4 ]
mov ecx [ ebp - 0x8 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_44d520
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0xc ]
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x1
cmp [ edi + 0x8 ] eax
je r-xdata
push ebx
push edi
call sub_45d21a
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
xor eax eax
add eax eax
cmp eax 0x8
jae r-xdata
push 0x10
call sub_42010a
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
xor ecx ecx
mov [ edi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ebx eax
mov eax [ edi + 0x4 ]
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x8
xor ebx ebx
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov [ ebx + 0x8 ] 0x0
call sub_4113a0
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
mov [ edi + 0x4 ] ebx
jmp r-xdata
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
push esi
mov [ eax + ecx * 4 ] ebx
inc [ edi + 0x8 ]
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
push [ eax + ecx * 4 - 0x4 ]
mov ecx [ ebp - 0x8 ]
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_40fa40
test eax eax
js r-xdata
lea ecx [ ebp - 0x1c ]
call sub_412570
or eax 0xffffffff
jmp r-xdata
mov ebx [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
inc [ ebx ]
cmp ecx esi
je r-xdata
shl ecx 0x2
push ecx
push eax
push ebx
call sub_41faa0
add esp 0xc
push [ edi + 0x4 ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_412570
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_44d520
lea eax [ ecx + 0x1 ]
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x14 ] eax
call sub_412570
cmp [ ebp + 0x14 ] esi
jb r-xdata
jmp r-xdata
sub_4141fc
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
push esi
mov eax [ ebx + 0xc ]
push edi
shl eax 0x4
mov edi edx
add eax [ edi + 0xc ]
mov eax [ eax * 4 + rw-data ]
dec eax
je r-xdata
call sub_40cdb4
mov ecx edi
mov esi eax
call sub_40cdb4
xor ecx ecx
cmp esi eax
setl al
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40d00b
mov ecx edi
mov ebx eax
mov esi edx
call sub_40d00b
cmp esi edx
jg r-xdata
dec eax
jne r-xdata
xor eax eax
jl r-xdata
dec eax
je r-xdata
call sub_412620
fstp [ ebp - 0x8 ]
mov ecx edi
call sub_412620
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x41
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ebx eax
jb r-xdata
mov ecx edi
call sub_4084a6
mov esi [ edi + 0x8 ]
mov ecx ebx
call sub_4084a6
mov ecx [ ebx + 0x8 ]
push 0x0
push esi
call sub_41dfb6
xor ecx ecx
test eax eax
sets al
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
call sub_44be63
mov ecx edi
mov esi eax
call sub_44be63
cmp esi eax
sbb eax eax
neg eax
jmp r-xdata
dec eax
dec eax
je r-xdata
xor al al
jmp r-xdata
sub_414265
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
push esi
mov eax [ ebx + 0xc ]
push edi
cmp eax 0x4
jg r-xdata
cmp eax 0x7
je r-xdata
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebx ]
cmp [ ecx + 0xc ] 0x1
jne r-xdata
cmp eax 0x8
jle r-xdata
dec eax
je r-xdata
push 0x3
pop esi
cmp eax esi
je r-xdata
call sub_40d00b
call sub_40cdb4
jmp r-xdata
mov ecx [ ebx + 0x8 ]
test ecx ecx
jne r-xdata
cmp eax 0xa
jle r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0x1
jne r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_412620
fstp [ ebp - 0x8 ]
mov ecx ebx
call sub_412570
fld [ ebp - 0x8 ]
fstp [ ebx ]
mov [ ebx + 0xc ] esi
add esi eax
mov [ ebx ] esi
jmp r-xdata
push ecx
call sub_401926
and [ ebx + 0x8 ] 0x0
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x4
cmp eax 0xb
jne r-xdata
push 0x2
pop ecx
cmp [ esi + 0xc ] ecx
je r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
cdq
mov edi eax
mov esi edx
mov eax ecx
mov ecx [ ebp + 0x8 ]
cdq
add edi eax
adc esi edx
mov eax ecx
cdq
cmp eax edi
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0x1
je r-xdata
dec eax
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] eax
jne r-xdata
mov eax [ ebx ]
cdq
add eax [ esi ]
adc edx [ esi + 0x4 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov [ ebx + 0xc ] ecx
jmp r-xdata
mov ecx ebx
mov [ ebx + 0xc ] 0x2
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
jmp r-xdata
cmp edx esi
jne r-xdata
mov ecx esi
call sub_40d00b
add [ ebx ] eax
adc [ ebx + 0x4 ] edx
jmp r-xdata
cmp [ esi + 0xc ] 0x2
jne r-xdata
jmp r-xdata
call sub_41df8a
mov ecx esi
jmp r-xdata
mov ecx esi
call sub_44be8a
mov ecx [ ebx ]
mov edi eax
add edi [ ecx ]
push edi
call sub_42010a
mov ecx [ ebx ]
mov esi eax
push [ ecx ]
push [ ecx + 0x4 ]
push esi
call sub_41faa0
mov ecx [ ebp + 0x8 ]
add esp 0x10
call sub_44be8a
push eax
call sub_44be47
push eax
mov eax [ ebx ]
mov eax [ eax ]
add eax esi
push eax
call sub_41faa0
mov eax [ ebx ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
mov eax [ ebx ]
add esp 0x10
mov [ eax + 0x4 ] esi
mov eax [ ebx ]
mov [ eax ] edi
jmp r-xdata
call sub_412620
fadd [ ebx ]
fstp [ ebx ]
mov [ ebx ] ecx
jmp r-xdata
sub_414320
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi + 0x4 ]
xor ecx ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] 0x1
mov eax [ eax ]
mov [ esp + 0x14 ] eax
movsx eax [ eax + 0x8 ]
or ebx 0xffffffff
mov [ esp + 0x10 ] ecx
sub eax ecx
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push edi
call sub_40e7e0
dec eax
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_412570
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push edi
push ecx
mov ecx esi
call sub_4144e0
sub eax 0x32
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ esp + 0x10 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
test ebx ebx
js r-xdata
dec eax
je r-xdata
push edi
mov ecx esi
call sub_40ea00
movsx eax [ eax + 0xa ]
push eax
push 0x72
lea eax [ esp + 0xf ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push edi
push ecx
mov ecx esi
call sub_413680
jmp r-xdata
dec eax
je r-xdata
mov ebx eax
jmp r-xdata
lea ebx [ esi + 0x16c ]
mov ecx ebx
call sub_45ea97
mov ecx eax
call sub_45cff8
test al al
jne r-xdata
sub eax 0x4a
je r-xdata
mov ecx ebx
call sub_45ea97
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push edi
mov ecx esi
call sub_45e2fb
jmp r-xdata
mov eax [ esp + 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa7
jmp r-xdata
push ebx
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push edi
mov ecx esi
call sub_40fa40
jmp r-xdata
mov ecx esi
call sub_44d520
jmp r-xdata
sub_4143a0
push ebx
mov ebx ecx
cmp [ ebx + 0xc ] 0x5
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax ] 0x0
mov eax [ ebx ]
mov [ eax + 0x4 ] 0x0
mov eax [ ebx ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebx ]
mov [ eax + 0x20c ] 0x0
dec [ eax ]
jne r-xdata
mov eax [ ebx ]
push esi
xor esi esi
cmp [ eax + 0x8 ] esi
jle r-xdata
mov eax [ ebx ]
push [ eax ]
call j_sub_4228ca#2
mov eax [ ebx ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
add esp 0x8
pop esi
push edi
mov ecx edi
call sub_414430
push edi
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
inc esi
cmp esi [ eax + 0x8 ]
jl r-xdata
mov eax [ eax ]
mov edi [ eax + esi * 4 ]
test edi edi
jne r-xdata
pop edi
sub_414430
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
pop edi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
pop esi
retn
push edi
call j_sub_4228ca#2
add esp 0x4
mov [ esi + 0x8 ] 0x0
push [ edi ]
call j_sub_4228ca#2
push [ edi + 0xc ]
call j_sub_4228ca#2
add esp 0x8
jmp [ eax * 4 + jump_table_4144a8 ]
mov ecx esi
call sub_41e3cc
pop edi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_4228ca#2
push [ esi ]
call j_sub_4228ca#2
add esp 0x8
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
add esp 0x4
jmp r-xdata
push ecx
call sub_44aa9c
jmp r-xdata
push ecx
call sub_43a56f
jmp r-xdata
push ecx
call sub_43a599
jmp r-xdata
push ecx
call sub_401926
jmp r-xdata
sub_4144e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
mov ecx [ ebp + 0x10 ]
mov eax [ edi + 0x4 ]
mov edx [ ecx ]
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] 0x0
mov eax [ eax + edx * 4 ]
mov esi [ eax ]
movsx eax [ eax + 0xa ]
mov [ esp + 0x14 ] eax
mov eax [ rw-data ]
mov [ esp + 0x10 ] esi
test al 0x1
je r-xdata
or eax 0x1
push r--data
lea ecx [ esp + 0x2c ]
mov [ rw-data ] eax
call sub_40caee
mov ecx [ rw-data ]
push [ eax ]
mov edx [ ecx ]
call [ edx + 0x4 ]
lea ecx [ esp + 0x28 ]
mov [ rw-data ] eax
call sub_405cd3
mov ecx [ ebp + 0x10 ]
jmp r-xdata
cmp esi [ rw-data ]
je r-xdata
push [ ebp + 0x14 ]
push ecx
push edi
mov ecx ebx
call sub_45e713
mov ebx eax
jmp r-xdata
lea eax [ esp + 0xc ]
push eax
push ecx
push edi
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
mov ecx ebx
call sub_414040
test eax eax
js r-xdata
xor esi esi
mov [ esp + 0x18 ] r--data
cmp [ esp + 0x20 ] esi
jbe r-xdata
or ebx 0xffffffff
jmp r-xdata
lea ecx [ ebx + 0x49c ]
push esi
call sub_414700
mov edi [ esp + 0xc ]
cmp edi [ eax + 0x18 ]
jl r-xdata
push [ esp + 0x1c ]
mov [ esp + 0x24 ] 0x0
call j_sub_4228ca#2
add esp 0x4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esp + 0x1c ]
mov edi [ eax + esi * 4 ]
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
lea ecx [ ebx + 0x49c ]
call sub_414700
cmp edi [ eax + 0x1c ]
jg r-xdata
mov [ eax + esi * 4 ] 0x0
inc esi
cmp esi [ esp + 0x20 ]
jb r-xdata
mov ecx edi
call sub_414430
push edi
call j_sub_4228ca#2
mov eax [ esp + 0x20 ]
add esp 0x4
mov eax [ ebp + 0x10 ]
add [ eax ] 0xfffffffe
jmp r-xdata
push [ esp + 0x14 ]
mov ecx ebx
push 0x70
call sub_44d520
jmp r-xdata
mov esi [ ebp + 0x14 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x1
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + ebx + 0x8 ]
add ecx ebx
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x14 ] 0x0
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov eax [ ebx ]
mov edi [ eax + 0x4 ]
add edi ebx
cmp [ edi + 0xd ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + 0x38 ]
jmp r-xdata
mov esi [ edi + 0x8 ]
lea ecx [ esi + 0x20 ]
call sub_412570
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x20 ] 0x0
cmp [ edi + 0xd ] 0x0
mov eax [ edi + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
push [ esp + 0x10 ]
lea ecx [ ebx + 0x49c ]
mov [ eax + 0x30 ] 0x0
call sub_414700
mov edx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0xc ]
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
mov eax [ ebx ]
mov ecx [ eax + ecx ]
add ecx edx
add ecx ebx
call esi
test eax eax
js r-xdata
xor ebx ebx
sub_414700
push ebp
mov ebp esp
mov eax [ rw-data ]
test al 0x1
je r-xdata
or eax 0x1
mov [ rw-data ] eax
mov [ rw-data ] sub_41eb3a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_455b5e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41c9d6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_456c64
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_455bde
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_455c38
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_455b9e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_456df1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_41f8c2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41d00f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_456f7d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_456fc3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_456fee
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_455c6f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4643ba
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4643f3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_464476
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_455c90
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xff
mov [ rw-data ] r--data
mov [ rw-data ] sub_455ce2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41f5da
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xff
mov [ rw-data ] r--data
mov [ rw-data ] sub_455d13
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_455ea2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_455f08
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xff
mov [ rw-data ] r--data
mov [ rw-data ] sub_45703c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45707a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_43f3ee
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0xff
mov [ rw-data ] r--data
mov [ rw-data ] sub_44daad
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_455f5a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_455fbf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_456071
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_457099
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_457294
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_463e8c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_41f189
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_457384
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_46609e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_466189
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_466628
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_466664
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4666a0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4666dc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_466778
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4667cd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_466902
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_466989
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4669c5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_466d40
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_466e27
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_466eba
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_466f2a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_466f67
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_41bb84
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4560f3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_44dc73
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_44dce9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44dd25
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_44df2f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_44dfa5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_460bfa
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x43
mov [ rw-data ] r--data
mov [ rw-data ] sub_460c0e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x42
mov [ rw-data ] r--data
mov [ rw-data ] sub_460c22
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_460ca1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_460d01
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_461084
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4610e5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_46117f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46122d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_461341
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46146c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4614d6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_44dffe
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44e228
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44e2d5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44e382
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44e44c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_44e704
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_44e913
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44e973
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44e9f4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_44ea85
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44eb4b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44ec11
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_43f3ee
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] sub_4573bf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45741e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_457482
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4574d8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45757d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4561c7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44ed1a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41eea2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44ed57
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_44ee88
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_44efcd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x9
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f2bf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f314
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f350
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f4ca
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f5ba
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f608
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f736
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f841
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f8ef
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44fa15
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44f967
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_44fd47
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_44fdd2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_45013f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4501e4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4504f1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_41f461
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_450652
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_41ef0d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_40a51a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_45066a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4507e6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_450878
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4508c1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_4508d9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_450b20
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_450dca
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_450e41
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_451080
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_451094
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_456207
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_454b0c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_45762e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41a665
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] sub_45281a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] sub_45282e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_452842
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_452856
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_45286a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45287e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_452892
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4528a6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_41bf48
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_4528ba
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_4528ce
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] sub_4528e2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_4528f6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_45290a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_45291e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_452932
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_452946
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_45295a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_45296e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_452982
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_452996
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_4529aa
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_4529be
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_4529d2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_4529e6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_4529fa
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_452a0e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_452a22
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_452a36
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_40488e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_452a4a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_452a97
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_452acc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_452b52
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_452ccf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_452e0a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_452f47
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_452fb7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_453013
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_45306f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4530af
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_453133
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_453188
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4531dd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_40ccef
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] sub_4532cd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_453379
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4533cd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4534d8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_453562
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4535ac
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4535ec
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_453641
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_45372c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_453768
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45389c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_453a00
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_453ab6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_453bc5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_41a54d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_453d69
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_453df2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_453e56
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_453f6b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_453fc5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_41ce7b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_41f66e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_454037
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_45409b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4540e6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_40d1b3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_41cc12
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_454d74
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_454d88
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45626c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_454de4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_454e63
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_454f9e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_455235
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4552fd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4510a8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_451195
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_451244
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_451543
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_451726
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_451893
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_451939
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_4576bb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xa
mov [ rw-data ] r--data
mov [ rw-data ] sub_40d0ba
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_457a93
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4562d8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45630a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_457abb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_457aed
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4615ee
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45633c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_457b62
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4563bd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45640b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_457bc4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_456492
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45aef6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4564c2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4564f4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_456526
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_456558
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_401b72
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_456598
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_457c26
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_457ddb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_457f01
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_457f3d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_458065
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_458171
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4581b7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4581f3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_458272
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_40d0f6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_45af26
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_45b250
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_45b482
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_45b74b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_45bae6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4583fc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_458550
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41d00f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_458694
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_458878
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_4589ad
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_458a77
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] sub_461620
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4617aa
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_461836
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_461ad0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_461cc7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_461daf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_461e35
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_458d07
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_458d1c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_458d31
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4566a8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4566d7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_462a0a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_462d1a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_462ec7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4630ad
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46352a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_41e850
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_461f19
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_461f2f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] sub_461f45
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] sub_461fa1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_458df8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46728b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_458e5b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_458eba
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_461ffd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_462015
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_462073
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_41bbc4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41f55e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_458ef9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_458f4b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_458fae
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_458fc3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_458fd8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xa
mov [ rw-data ] r--data
mov [ rw-data ] sub_456882
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_456865
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4672fc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_463fa4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_463fc5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46410e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_46416a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4568c2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464642
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4646a3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_41d7c7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x21
mov [ rw-data ] r--data
mov [ rw-data ] sub_46471f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_4648bb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_464a51
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464ab1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4649f1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464b11
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464b71
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464ba1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464bd1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464c31
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464c91
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464cf1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464d51
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_464dc5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_464dfa
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_407cca
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_408800
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_407fba
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_464e5b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x5
mov [ rw-data ] r--data
mov [ rw-data ] sub_4650cd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46520a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4081c6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_465282
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41d6e5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4652e3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_4654ac
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_407c4b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4655ab
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_465622
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4568e7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45900c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4590d3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_459122
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4591dc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4592c0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_45936f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_459500
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_459577
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4595af
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_41eb7a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_41f149
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46744c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] sub_465836
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_46584a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_46585e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4658d9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_465913
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_465960
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4659aa
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_465a0a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_465b15
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_465b5a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_465ba4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_465bd4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_465c42
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_465d45
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_465db3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_465dd8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4595fd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_401d74
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4596e2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_45986a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_459923
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_459a66
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_459d3e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_459577
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4595af
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_459e86
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4677fc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4678c6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46792c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46798d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4679d6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] r--data
mov [ rw-data ] sub_467aa2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_467b93
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_467c13
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_467cf3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_467d58
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_467e86
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_467f0e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_467fb9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46804e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4680c9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_46812c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] sub_4682db
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x9
mov [ rw-data ] r--data
mov [ rw-data ] sub_468495
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4684c9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4684fd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] sub_468706
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4687a5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_401a33
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_468834
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4688e8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_468940
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_468998
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] r--data
mov [ rw-data ] sub_4689f0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
jmp r-xdata
test al 0x2
je r-xdata
or eax 0x2
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ ecx ] 0x191
lea eax [ eax + eax * 8 ]
mov [ rw-data ] 0x191
lea eax [ eax * 4 + rw-data ]
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
lea eax [ eax + eax * 8 ]
lea eax [ eax * 4 + rw-data ]
pop ebp
retn 0x4
sub_41a54d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x1
push edi
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
jmp r-xdata
mov ecx [ esi + 0x4 ]
push 0xffffffff
mov ecx [ ecx ]
push 0xffffffff
push eax
push 0xffffffff
push 0x0
call sub_40cdb4
push eax
push 0x0
call sub_41a599
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_41a599
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
leave
retn 0x1c
mov eax [ rw-data ]
push [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
add ecx 0x28
call sub_407e53
mov ecx [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
push ebx
mov eax [ eax + ecx * 4 ]
push esi
mov esi [ eax ]
xor ebx ebx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x10 ]
inc ebx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x8 ] ebx
test edi edi
jne r-xdata
push 0x10
push 0x10
push 0x10
push 0x1
push edi
push 0x0
call [ LoadImageW@IAT ]
mov [ ebp + 0x18 ] eax
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
call sub_447b84
push 0x1
mov ebx eax
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push ebx
push edi
call [ ExtractIconExW@IAT ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0xffffffff
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_41a63d
cmp [ esi + 0x4c ] 0x0
jge r-xdata
mov ecx [ ebp + 0x18 ]
mov ebx [ SendMessageW@IAT ]
mov edi [ DestroyIcon@IAT ]
test ecx ecx
je r-xdata
push 0x1
push eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
call sub_447b84
push eax
push edi
call [ ExtractIconExW@IAT ]
mov eax [ ebp - 0x4 ]
push 0x50
xor eax eax
push eax
push eax
push 0x1
push edi
push eax
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax [ ebp + 0x20 ]
cmp eax 0xffffffff
jne r-xdata
push [ esi + 0x4c ]
call sub_46cf4e
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x1
push eax
mov [ esi + 0x4c ] eax
call sub_41b650
test eax eax
je r-xdata
push ecx
push 0x0
push 0x80
push [ ebp + 0x8 ]
call ebx
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov [ esi + 0x54 ] eax
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test ecx ecx
jne r-xdata
push eax
push 0x1
push 0x80
push [ ebp + 0x8 ]
call ebx
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x20 ] eax
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ esi + 0x20 ]
call edi
push 0x1
push 0x0
push [ ebp + 0x8 ]
call [ InvalidateRect@IAT ]
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov ebx [ ebp - 0x8 ]
jmp r-xdata
neg eax
sbb eax eax
and eax [ ebp - 0x8 ]
mov ebx eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x24 ] eax
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ esi + 0x24 ]
call edi
sub_41a63d
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
jle r-xdata
pop esi
retn
mov edx ecx
movzx eax cl
sar edx 0x10
and edx 0xff
shl eax 0x10
or edx eax
and ecx 0xff00
or edx ecx
mov [ esi ] edx
sub_41a665
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
mov esi [ edi + 0x8 ]
or ebx 0xffffffff
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
cmp esi 0x7
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_44be63
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp esi 0x6
jbe r-xdata
cmp esi 0x5
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
cmp esi 0x4
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov ebx eax
cmp esi 0x3
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40cdb4
mov [ ebp - 0x10 ] eax
cmp esi 0x2
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40cdb4
mov [ ebp - 0x14 ] eax
cmp esi 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_4084a6
push [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push [ ebp - 0x4 ]
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ecx ]
call sub_41a756
mov edi eax
test edi edi
je r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
push 0x0
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x7
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_41a756
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x1d0
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor edi edi
jmp r-xdata
mov ecx eax
call sub_41a9d6
mov edi eax
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] ecx
cmp [ rw-data ] ecx
jne r-xdata
xor esi esi
test ecx ecx
jle r-xdata
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
mov ecx rw-data
call sub_40197e
mov edi [ ebp - 0x4 ]
mov ecx esi
mov eax [ rw-data ]
mov ebx [ ebp + 0x1c ]
mov eax [ eax + esi * 4 ]
mov [ eax ] edi
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
mov [ eax + 0x4 ] esi
cmp ebx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
or ebx 0x4000000
mov eax 0x80000
test ebx 0x10000
jne r-xdata
mov ebx 0x80ca0000
inc esi
cmp esi ecx
jl r-xdata
or ebx eax
jmp r-xdata
test ebx 0x40000
jne r-xdata
jmp r-xdata
or ebx eax
jmp r-xdata
mov eax [ ebp + 0x20 ]
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x20 ]
mov [ ebp + 0x1c ] eax
test al 0x40
jne r-xdata
mov edx [ ebp + 0x24 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
push 0x40
pop ecx
xor eax ecx
mov [ edi + 0xc ] ecx
push edx
mov ecx rw-data
mov [ ebp + 0x1c ] eax
call sub_41af7d
test eax eax
js r-xdata
cmp esi ecx
jmp r-xdata
mov [ ebp + 0x14 ] ecx
jmp r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x24 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x24 ]
call [ GetClientRect@IAT ]
push 0x7
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x20 ]
push 0x8
sub ecx eax
add [ ebp + 0xc ] ecx
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x10 ]
sub ecx eax
add edx ecx
mov ecx 0xc00000
mov eax ebx
and eax ecx
mov [ ebp + 0x20 ] edx
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov [ eax + 0xc ] 0x80000000
jne r-xdata
mov [ ebp + 0x18 ] ecx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push 0x4
call [ GetSystemMetrics@IAT ]
add [ ebp + 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
and [ eax ] 0x0
jmp r-xdata
mov ecx rw-data
call sub_4041e7
jmp r-xdata
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
push 0x7
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp + 0x14 ]
add ecx [ ebp - 0x10 ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx 0x190
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x18 ]
push [ ebp + 0x14 ]
push 0x0
push 0x0
push eax
call [ SetRect@IAT ]
push [ ebp + 0x1c ]
lea eax [ ebp - 0x18 ]
push 0x0
push ebx
push eax
call [ AdjustWindowRectEx@IAT ]
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
push 0x0
push [ rw-data ]
push 0x0
push [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push r--data
push [ ebp + 0x1c ]
call [ CreateWindowExW@IAT ]
mov [ edi ] eax
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
push 0x8
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp + 0x18 ]
add ecx [ ebp - 0xc ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0x20 ] eax
test ebx __dos_header
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x20
cmp esi [ ebp - 0x8 ]
push esi
push 0xffffffeb
push eax
call [ SetWindowLongW@IAT ]
mov eax [ ebp + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x3c ] eax
mov eax [ ebp + 0x20 ]
mov [ edi + 0x40 ] eax
lea eax [ ebp - 0x18 ]
push eax
push [ edi ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push 0x0
mov [ edi + 0x44 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
push 0x11
mov [ edi + 0x48 ] eax
call [ GetStockObject@IAT ]
push eax
push 0x30
push [ edi ]
call [ SendMessageW@IAT ]
push 0xffffffff
push edi
mov ecx rw-data
call sub_41b736
cmp [ rw-data ] 0x0
jne r-xdata
push 0x4
call [ GetSystemMetrics@IAT ]
push 0xfffffffe
cdq
pop ecx
idiv ecx
add [ ebp + 0x20 ] eax
inc [ rw-data ]
push 0x0
mov ecx rw-data
mov [ rw-data ] esi
call sub_41aaff
test ebx 0x10000000
jne r-xdata
push sub_41acee
push 0x28
push 0x0
push 0x0
call [ SetTimer@IAT ]
mov [ rw-data ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ edi ]
push [ edi ]
call sub_46d80a
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0x0
push 0x4
call sub_41f6b5
jmp r-xdata
sub_41a9d6
push ebx
push esi
mov esi ecx
xor eax eax
push edi
push 0x2
pop edi
or ebx 0xffffffff
lea ecx [ esi + 0x28 ]
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
call sub_40d3d2
xor eax eax
lea ecx [ esi + 0x6c ]
mov [ esi + 0x38 ] ax
mov [ esi + 0x3a ] 0x1
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
call sub_40d3d2
and [ esi + 0x84 ] 0x0
push sub_40d3d2
push 0xe
push 0x10
lea ecx [ esi + 0x8c ]
pop edx
mov [ esi + 0x7c ] 0x55
mov [ esi + 0x80 ] 0x190
mov [ esi + 0x88 ] edi
call sub_41ac65
xor eax eax
mov [ esi + 0x16c ] eax
mov [ esi + 0x170 ] eax
mov [ esi + 0x174 ] eax
mov [ esi + 0x178 ] eax
mov [ esi + 0x17c ] eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x184 ] al
mov [ esi + 0x188 ] eax
mov [ esi + 0x194 ] eax
mov [ esi + 0x198 ] ax
mov [ esi + 0x19a ] al
mov [ esi + 0x19c ] eax
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] eax
mov [ esi + 0x1ac ] eax
mov [ esi + 0x1b0 ] eax
mov [ esi + 0x1c4 ] eax
mov [ esi + 0x1c8 ] eax
mov [ esi + 0x1cc ] eax
pop edi
mov [ esi + 0x18c ] ebx
mov [ esi + 0x190 ] ebx
mov [ esi + 0x1bc ] ebx
mov [ esi + 0x1c0 ] ebx
mov [ esi + 0x1a8 ] 0x1
mov eax esi
pop esi
pop ebx
retn
sub_41aaff
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
push [ ebp + 0x8 ]
call sub_41af7d
mov [ esi + 0x6c ] eax
jmp r-xdata
mov ecx [ esi + 0x6c ]
mov eax [ esi + 0x60 ]
pop esi
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ eax + 0x68 ] 0x0
pop ebp
retn 0x4
sub_41ab25
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
push ebx
xor ebx ebx
push r--data
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] 0x1010101
mov [ rw-data ] bx
mov [ rw-data ] 0x1
mov [ rw-data ] 0x9
mov [ rw-data ] ebx
call sub_40caee
push r--data
mov ecx rw-data
call sub_40caee
mov ecx rw-data
call sub_40d3d2
mov ecx rw-data
call sub_40d3d2
mov ecx rw-data
call sub_40d3d2
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
inc [ eax ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push sub_40d3d2
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0xf
push 0x10
mov [ rw-data ] eax
inc [ eax ]
pop edx
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_41ac65
or [ rw-data ] 0xffffffff
mov [ rw-data ] bx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax rw-data
pop ebx
retn
sub_41ac65
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ebx edx
mov edi ecx
jmp r-xdata
dec esi
jns r-xdata
mov ecx edi
call [ ebp + 0xc ]
add edi ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41ac99
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
push [ ecx + 0x1c ]
push eax
call sub_41acd1
push 0x0
push [ ebp + 0xc ]
push 0x7
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x8
sub_41acd1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
je r-xdata
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
mov eax [ eax + ecx * 4 ]
push esi
mov esi [ eax ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov eax [ esi + 0x1cc ]
mov [ ebp + 0x8 ] ecx
test eax eax
je r-xdata
pop edi
mov eax [ edx + edi * 4 ]
cmp [ eax ] 0x0
jne r-xdata
push ecx
mov ecx eax
call sub_43f2f2
mov edx [ rw-data ]
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ecx ]
push 0x1
push ebx
push 0x28
push [ esi ]
mov [ esi + 0x1c ] edi
mov edi [ PostMessageW@IAT ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x90 ] 0x2
jne r-xdata
or [ esi + 0x1c ] 0xffffffff
jmp r-xdata
pop ebx
push [ esi + 0x1c0 ]
push [ esi + 0x1bc ]
push 0xb1
push ebx
call edi
pop esi
jmp r-xdata
sub_41acee
push esi
call [ GetForegroundWindow@IAT ]
mov esi rw-data
push eax
mov ecx esi
call sub_41af7d
cmp eax 0xffffffff
je r-xdata
pop esi
retn 0x10
mov edx [ rw-data ]
push 0x2
mov eax [ edx + eax * 4 ]
mov ecx esi
push [ eax ]
call sub_41b736
sub_41ad1f
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
push edi
mov esi [ eax ]
push 0xf
call [ GetSysColor@IAT ]
cmp [ esi + 0x4c ] 0xffffffff
mov edi eax
je r-xdata
push edi
push [ ebp + 0xc ]
call [ SetBkColor@IAT ]
push 0x0
push edi
call sub_41b650
pop edi
pop esi
pop ebp
retn 0x8
mov edi [ esi + 0x4c ]
sub_41ad65
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov ecx rw-data
call sub_41af7d
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
mov eax [ ebp + 0xc ]
je r-xdata
cmp eax 0x1
je r-xdata
mov ebx [ ebp + 0x14 ]
xor edx edx
cmp [ rw-data ] edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
jmp r-xdata
cmp [ rw-data ] dl
je r-xdata
mov esi [ ebp + 0x10 ]
push eax
push edi
call [ DefDlgProcW@IAT ]
mov esi [ rw-data ]
mov [ ebp + 0x14 ] esi
cmp [ rw-data ] eax
je r-xdata
je r-xdata
mov ecx 0x202
cmp eax ecx
ja r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
cmp [ eax ] ecx
je r-xdata
push edx
cmp eax 0x2b
ja r-xdata
mov ecx eax
sub ecx 0x204
je r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx 0x115
cmp eax ecx
jbe r-xdata
and [ ebp + 0x14 ] 0x0
push ebx
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
mov eax [ esi ]
mov esi [ ebp + 0x10 ]
push esi
push ecx
push edi
lea ecx [ ebp + 0x14 ]
push ecx
add eax 0x4
push eax
call sub_4542c4
or [ rw-data ] 0xffffffff
mov [ rw-data ] 0x0
dec eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x14 ]
call sub_468b5a
mov esi [ ebp + 0x14 ]
xor edx edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx eax
sub ecx 0x4e
je r-xdata
je r-xdata
push 0x1
jmp r-xdata
dec ecx
je r-xdata
push edx
jmp r-xdata
mov ecx 0x137
cmp eax ecx
jbe r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
push edi
mov ecx rw-data
call sub_41af7d
cmp eax 0xffffffff
jne r-xdata
push ecx
mov eax esp
lea ecx [ ebp + 0x14 ]
mov [ eax ] edx
call sub_402e2a
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push ebx
push esi
push edi
call sub_46f5d0
jmp r-xdata
sub ecx 0x5
je r-xdata
push ebx
push edi
call sub_46f0a1
jmp r-xdata
cmp eax 0x6
jbe r-xdata
mov eax ebx
shr eax 0x10
push esi
cwde
push eax
movsx eax bx
push eax
push ecx
push edi
call sub_46ea4e
jmp r-xdata
push 0x1
sub ecx 0xc
je r-xdata
mov eax ebx
shr eax 0x10
cwde
push esi
push eax
movsx eax bx
push eax
push edi
call sub_46eaa6
jmp r-xdata
je r-xdata
mov ecx eax
sub ecx 0x138
jne r-xdata
xor edx edx
jmp r-xdata
jmp r-xdata
push ebx
push esi
push edi
push [ ebp + 0x8 ]
push ecx
call sub_46f425
jmp r-xdata
sub ecx 0x28
je r-xdata
je r-xdata
cmp eax 0xf
je r-xdata
push ebx
push esi
push edi
push [ ebp + 0x8 ]
push ecx
call sub_46f37c
jmp r-xdata
dec ecx
je r-xdata
push ecx
push ecx
push esi
push edi
call sub_46f084
jmp r-xdata
mov edx eax
sub edx 0x133
je r-xdata
sub ecx 0xc8
je r-xdata
push 0x6
mov eax ebx
shr eax 0x10
push eax
movzx eax bx
push eax
push esi
push edi
call sub_46efa8
jmp r-xdata
sub ecx 0x9
je r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push ebx
push eax
push edi
call sub_41b7f2
jmp r-xdata
mov ecx eax
dec ecx
je r-xdata
push edi
call sub_41b18c
cmp eax 0x7
je r-xdata
push ebx
push esi
push edi
push [ ebp + 0x8 ]
push ecx
call sub_46f3ab
jmp r-xdata
sub ecx 0x20
je r-xdata
push 0x1
jmp r-xdata
dec edx
je r-xdata
mov eax ebx
shr eax 0x10
cwde
push esi
push eax
movsx eax bx
push eax
push edi
call sub_46f45a
jmp r-xdata
dec ecx
jne r-xdata
mov eax ebx
shr eax 0x10
cwde
push eax
movsx eax bx
push eax
push edi
call sub_46f594
jmp r-xdata
sub ecx 0x8d
je r-xdata
dec ecx
jne r-xdata
push esi
push edi
call sub_41ac99
jmp r-xdata
cmp eax 0x20
je r-xdata
push ebx
push esi
push edi
push [ ebp + 0x8 ]
push ecx
call sub_46f3da
jmp r-xdata
dec ecx
je r-xdata
push ebx
push esi
push edi
call sub_41afb4
jmp r-xdata
push 0x2
jmp r-xdata
dec edx
je r-xdata
push ebx
push esi
push edx
mov eax esi
shr eax 0x10
push eax
movzx eax si
push ebx
push eax
push edi
call sub_46ecbc
jmp r-xdata
dec ecx
je r-xdata
dec ecx
je r-xdata
push edi
call sub_41b845
jmp r-xdata
mov eax ebx
shr eax 0x10
push eax
movzx eax bx
push eax
push esi
push edi
call sub_46ff04
jmp r-xdata
jmp r-xdata
push esi
push edi
call sub_46f122
jmp r-xdata
sub ecx 0xe7
je r-xdata
dec edx
jne r-xdata
mov eax ebx
shr eax 0x10
cwde
push eax
movsx eax bx
push eax
push esi
push edi
call sub_4702aa
jmp r-xdata
dec ecx
dec ecx
jne r-xdata
push ecx
push ecx
push edi
call sub_46f4b2
jmp r-xdata
dec ecx
dec ecx
jne r-xdata
call [ IsThemeActive@IAT ]
push ebx
push esi
push 0x31a
push edi
mov [ rw-data ] eax
call [ DefDlgProcW@IAT ]
jmp r-xdata
push edi
mov ecx rw-data
call sub_41af7d
push esi
push eax
call sub_41ad1f
jmp r-xdata
push 0x1
jmp r-xdata
jmp r-xdata
mov eax esi
shr eax 0x10
cwde
push eax
movzx eax si
push eax
push ebx
push edi
call sub_46fe80
jmp r-xdata
mov eax ebx
shr eax 0x10
cwde
push eax
movsx eax bx
push eax
push esi
push edi
call sub_46ff91
jmp r-xdata
sub_41af7d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
cmp eax [ edi + 0x64 ]
jae r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ edi + 0x60 ]
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp [ ecx ] esi
jne r-xdata
sub_41afb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov esi [ ebp + 0x10 ]
push esi
mov ecx rw-data
mov [ ebp - 0x4 ] eax
mov ebx esi
call sub_41b155
mov edx eax
cmp edx 0xffffffff
je r-xdata
push esi
call [ GetParent@IAT ]
mov ebx eax
push ebx
mov ecx rw-data
call sub_41b155
mov edx eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
dec ecx
je r-xdata
cmp edx 0xffffffff
je r-xdata
dec ecx
je r-xdata
push esi
push [ ebp + 0xc ]
push 0x133
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x90 ]
cmp al 0x2
je r-xdata
cmp edx 0xffffffff
je r-xdata
sub ecx 0x4
jne r-xdata
pop esi
pop ebx
leave
retn 0x10
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_41b039
cmp al 0x3
je r-xdata
push esi
push [ ebp + 0xc ]
push 0x134
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x1
je r-xdata
cmp edx 0xffffffff
je r-xdata
test al al
je r-xdata
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
jmp r-xdata
push esi
push [ ebp + 0xc ]
push 0x138
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x12
je r-xdata
cmp [ eax + 0x48 ] 0xffffffff
jne r-xdata
sub_41b039
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
push ebx
mov eax [ eax + ecx * 4 ]
push esi
mov ebx [ eax ]
push edi
push [ ebp + 0x10 ]
mov ecx rw-data
mov [ ebp - 0x4 ] ebx
call sub_41b155
push 0xf
mov esi eax
mov [ ebp + 0xb ] 0x0
call [ GetSysColor@IAT ]
cmp [ ebx + 0x4c ] 0xffffffff
mov edi eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov edi [ ebx + 0x4c ]
push edi
push [ ebp + 0xc ]
call [ SetBkColor@IAT ]
push 0x0
push edi
call sub_41b650
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ebx [ eax ]
mov ecx [ ebx + 0x48 ]
test ecx ecx
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp [ ebx + 0x90 ] 0x1b
je r-xdata
movzx eax [ ebx + 0x90 ]
cmp eax 0x1b
ja r-xdata
mov edi ecx
jmp r-xdata
cmp ecx 0xfffffffe
sete [ ebp + 0xb ]
jmp r-xdata
movzx eax [ eax + lookup_table_41b139 ]
jmp [ eax * 4 + jump_table_41b11d ]
cmp [ ebx + 0x93 ] 0xff
jne r-xdata
mov [ ebp + 0xb ] 0x1
push 0x5
jmp r-xdata
cmp [ ebx + 0x93 ] 0xff
je r-xdata
push 0xfffffff0
push [ ebx ]
call [ GetWindowLongW@IAT ]
test eax 0x8000800
je r-xdata
cmp [ ebx + 0x48 ] 0xffffffff
jne r-xdata
cmp [ ebx + 0x4c ] 0xffffffff
jne r-xdata
call [ GetSysColor@IAT ]
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x188 ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x1328
push [ esi + 0x188 ]
call [ SendMessageW@IAT ]
push [ esi + 0x188 ]
call [ GetWindowDC@IAT ]
push [ ebp - 0x10 ]
mov esi eax
push [ ebp - 0x14 ]
push esi
call [ GetPixel@IAT ]
mov edi eax
mov eax [ ebp - 0x4 ]
push esi
push [ eax + 0x188 ]
call [ ReleaseDC@IAT ]
cmp edi 0xffffffff
jne r-xdata
jmp r-xdata
mov al [ ebx + 0x90 ]
cmp al 0x17
je r-xdata
push [ ebx + 0x4c ]
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
push eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0xf
mov [ ebp + 0xb ] 0x1
jmp r-xdata
cmp al 0x7
je r-xdata
push [ ebp + 0xc ]
call [ SetTextColor@IAT ]
cmp [ ebp + 0xb ] 0x0
je r-xdata
push 0x1
push [ ebp + 0xc ]
call [ SetBkMode@IAT ]
push 0x5
call [ GetStockObject@IAT ]
cmp al 0x1
je r-xdata
cmp al 0x2
je r-xdata
cmp al 0x3
je r-xdata
test al al
je r-xdata
push [ ebx ]
call [ GetWindowDC@IAT ]
push 0x0
mov esi eax
push 0x0
push esi
call [ GetPixel@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
push [ ebx ]
call [ ReleaseDC@IAT ]
cmp edi 0xffffffff
jne r-xdata
movsx eax [ ebx + 0x8c ]
push 0x0
dec eax
push eax
push esi
call [ GetPixel@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
movsx eax [ ebx + 0x8e ]
dec eax
push eax
push 0x0
push esi
call [ GetPixel@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
movsx eax [ ebx + 0x8e ]
dec eax
push eax
movsx eax [ ebx + 0x8c ]
dec eax
push eax
push esi
call [ GetPixel@IAT ]
mov edi eax
sub_41b155
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
cmp eax [ edi + 0x78 ]
jae r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ edi + 0x74 ]
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp [ ecx ] esi
jne r-xdata
sub_41b18c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov ebx [ eax ]
lea eax [ esp + 0x28 ]
mov esi [ ebx + 0x1c8 ]
push eax
push [ ebx ]
mov [ esp + 0x14 ] ebx
call [ BeginPaint@IAT ]
mov edi eax
lea eax [ esp + 0x28 ]
push eax
push [ ebx ]
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test [ eax + 0x92 ] 0x10
je r-xdata
movzx eax [ eax + 0x93 ]
cmp eax [ ebx + 0x190 ]
jne r-xdata
cmp [ eax + 0x93 ] 0xff
jne r-xdata
mov esi [ esi ]
jmp r-xdata
jmp r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
lea eax [ esp + 0x18 ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
push eax
mov eax [ esi + 0x8 ]
push [ eax ]
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push eax
push [ ebx ]
call [ ScreenToClient@IAT ]
push 0x0
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push edi
call [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x48 ]
mov eax [ eax + 0x4c ]
test ebx ebx
jns r-xdata
test esi esi
je r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x1
push 0x0
push ebx
push eax
push edi
call sub_41b58b
mov ecx [ esi + 0x8 ]
movsx eax [ ecx + 0x8e ]
push eax
movsx eax [ ecx + 0x8c ]
push eax
push 0x0
push 0x0
push edi
call [ Rectangle@IAT ]
push ebx
push edi
call sub_41b517
jmp r-xdata
mov eax ebx
jmp r-xdata
test ebx ebx
jns r-xdata
push esi
push edi
call sub_41b40f
push esi
push edi
mov bl al
call sub_41b2c2
test bl bl
jne r-xdata
push esi
push edi
call sub_46e896
jmp r-xdata
mov ebx [ esp + 0xc ]
sub_41b2c2
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
push edi
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x10 ] ebx
call [ BeginPath@IAT ]
mov esi [ ebp + 0xc ]
mov [ rw-data ] bl
jmp r-xdata
test esi esi
jne r-xdata
push [ ebp - 0x10 ]
xor ebx ebx
push ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push edi
call sub_41b58b
cmp [ esi + 0xc ] ebx
jle r-xdata
push [ ebp - 0x4 ]
push edi
call sub_41b517
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx esi
lea eax [ esi + 0x810 ]
lea edx [ esi + 0x10 ]
neg ecx
mov [ ebp - 0xc ] eax
mov [ ebp + 0xc ] edx
mov [ ebp + 0x8 ] ecx
mov esi [ esi + 0x4 ]
sub eax ebx
push eax
lea eax [ esi + 0x810 ]
add eax ebx
push eax
lea eax [ ebx + 0x2 ]
lea eax [ esi + eax * 8 ]
push eax
push edi
call [ PolyDraw@IAT ]
add ecx 0xfffff7f0
add ecx eax
cmp ebx ecx
je r-xdata
add edx 0x8
inc eax
mov [ ebp - 0xc ] eax
add eax 0xfffff7f0
add eax ecx
cmp eax [ esi + 0xc ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] edx
jl r-xdata
mov ecx [ ebp + 0x8 ]
lea ebx [ ecx - 0x80f ]
mov cl [ eax ]
add ebx eax
cmp cl 0x14
je r-xdata
sub ecx ebx
push ecx
lea eax [ ebx + 0x810 ]
add eax esi
push eax
lea eax [ ebx + 0x2 ]
lea eax [ esi + eax * 8 ]
push eax
push edi
call [ PolyDraw@IAT ]
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
cmp [ eax ] 0x8
jae r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp cl 0x8
jne r-xdata
cmp cl 0x18
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx 0xffffffff
je r-xdata
mov ecx [ edx ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
push edi
call sub_41b517
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov [ ebp - 0x4 ] eax
push [ ebp - 0x10 ]
push 0x0
push eax
push ecx
push edi
call sub_41b58b
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
sub_41b40f
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ecx ecx
push 0xfffffffe
xor eax eax
pop edi
inc eax
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] eax
jmp r-xdata
test ebx ebx
jne r-xdata
and [ ebp - 0xc ] 0x0
push eax
push 0x0
push edi
push ecx
push esi
call sub_41b58b
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push edi
push esi
call sub_41b517
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ebx [ ebx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
lea ecx [ ebx + 0x14 ]
lea eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] eax
sub eax 0x12
je r-xdata
je r-xdata
push [ ebp - 0x10 ]
push ecx
push edi
push esi
call [ SetPixel@IAT ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov edx [ ebp - 0x14 ]
lea eax [ edx + 0x1 ]
add eax ecx
push eax
lea eax [ edx + 0x1 ]
add eax edi
sub ecx edx
sub edi edx
sub eax 0x8
je r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
je r-xdata
sub eax 0x4
jne r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
mov edi [ ebp - 0x8 ]
je r-xdata
dec eax
dec eax
je r-xdata
mov edi [ eax ]
movzx eax [ ebx + edx + 0x810 ]
mov ecx [ ecx ]
mov [ ebp - 0x18 ] ecx
cmp eax 0x10
jg r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0xffffffff
je r-xdata
push edi
push esi
call sub_41b517
push [ ebp - 0x8 ]
add [ ebp + 0xc ] 0x8
add [ ebp + 0x8 ] 0x8
inc edx
push esi
mov [ ebp - 0xc ] edx
call sub_41b517
push [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push esi
call sub_41b58b
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov ecx [ ebp - 0x18 ]
add eax ecx
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax edi
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
push eax
push ecx
push edi
push esi
call [ Rectangle@IAT ]
jmp r-xdata
push [ ebp - 0x8 ]
add [ ebp + 0xc ] 0x8
add [ ebp + 0x8 ] 0x8
inc edx
push esi
mov [ ebp - 0xc ] edx
call sub_41b517
push [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push esi
call sub_41b58b
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov ecx [ ebp - 0x18 ]
add eax ecx
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax edi
push eax
push ecx
push edi
push esi
call [ Ellipse@IAT ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xffffffff
je r-xdata
push [ ebp - 0x14 ]
push 0x0
push edi
push eax
push esi
call sub_41b58b
jmp r-xdata
mov edi [ ecx ]
mov [ ebp - 0x8 ] edi
push 0x0
push ecx
push edi
push esi
call [ MoveToEx@IAT ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
fild [ edx + 0x8 ]
inc [ ebp - 0xc ]
mov eax [ ecx + 0x8 ]
inc [ ebp - 0xc ]
add ecx 0x10
fstp [ ebp - 0x20 ]
push ecx
fild [ ecx ]
push ecx
add edx 0x10
mov [ ebp + 0xc ] ecx
fstp [ ebp - 0x1c ]
mov [ ebp + 0x8 ] edx
fld [ ebp - 0x1c ]
fstp [ esp + 0x4 ]
fld [ ebp - 0x20 ]
fstp [ esp ]
push eax
push [ ebp - 0x18 ]
push edi
push esi
call [ AngleArc@IAT ]
push [ ebp - 0x18 ]
push edi
push esi
call [ LineTo@IAT ]
push esi
call [ CloseFigure@IAT ]
jmp r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
add eax 0x8
add ecx 0x8
mov [ ebp + 0xc ] eax
mov [ ebp + 0x8 ] ecx
cmp edx [ ebx + 0xc ]
jl r-xdata
sub_41b517
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ EndPath@IAT ]
cmp [ ebp + 0xc ] 0xfffffffe
mov [ rw-data ] 0x0
je r-xdata
pop ebp
retn 0x8
push eax
push [ ebp + 0x8 ]
call [ SelectObject@IAT ]
push [ rw-data ]
and [ rw-data ] 0x0
call [ DeleteObject@IAT ]
and [ rw-data ] 0x0
or [ rw-data ] 0xffffffff
push [ ebp + 0x8 ]
call [ StrokePath@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call [ StrokeAndFillPath@IAT ]
sub_41b58b
push ebp
mov ebp esp
sub esp 0xc
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] 0xfffffffe
pop edi
je r-xdata
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
cmp [ rw-data ] edi
je r-xdata
leave
retn 0x14
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
call sub_41b650
push eax
push [ ebp + 0x8 ]
call [ SelectObject@IAT ]
cmp [ rw-data ] esi
je r-xdata
push eax
call [ DeleteObject@IAT ]
and [ rw-data ] 0x0
jmp r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ ebp - 0x8 ] edi
cmp ebx 0x1
jne r-xdata
pop esi
pop ebx
jmp r-xdata
or esi 0x10000
jmp r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
push ebx
push esi
call [ ExtCreatePen@IAT ]
push eax
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call [ SelectObject@IAT ]
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
push [ ebp + 0x8 ]
call [ BeginPath@IAT ]
mov [ rw-data ] 0x1
sub_41b650
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
sub esp 0xc
mov edi edi
push ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x1
call [ CreateSolidBrush@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
call sub_41b6ab
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ eax ]
cmp [ edx ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
add [ edx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax + 0x4 ]
jmp r-xdata
test eax eax
je r-xdata
sub_41b6ab
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
je r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_41b703
mov edi eax
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_41b703
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_41b703
push ebp
mov ebp esp
push ebx
mov ebx ecx
push 0xc
and [ ebx + 0x4 ] 0x0
and [ ebx + 0x8 ] 0x0
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ ebx ] eax
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_41b736
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
mov esi [ edi ]
push eax
mov ebx ecx
call [ GetCursorPos@IAT ]
mov eax [ ebp - 0x8 ]
mov [ edi + 0x16c ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x170 ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call [ ScreenToClient@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
cmp ecx [ edi + 0x174 ]
jne r-xdata
cmp [ ebp + 0xc ] 0x1
mov [ edi + 0x174 ] ecx
mov [ edi + 0x178 ] eax
jl r-xdata
cmp eax [ edi + 0x178 ]
jne r-xdata
push [ ebx + 0x18 ]
mov esi [ GetAsyncKeyState@IAT ]
call esi
push [ ebx + 0x1c ]
movzx eax ax
shr eax 0xf
mov [ ebp + 0x8 ] eax
call esi
movzx esi ax
mov eax [ ebp + 0x8 ]
shr esi 0xf
cmp eax [ edi + 0x17c ]
jne r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push eax
push ecx
push edi
push 0xfffffff5
mov ecx ebx
call sub_468c6b
jmp r-xdata
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
cmp esi [ edi + 0x180 ]
jne r-xdata
mov [ edi + 0x17c ] eax
push [ ebp - 0x4 ]
mov ecx ebx
push [ ebp - 0x8 ]
push edi
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x1
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xfffffff8
call sub_468c6b
cmp [ edi + 0x184 ] 0x0
je r-xdata
push 0xfffffff9
jmp r-xdata
push [ ebp - 0x4 ]
mov ecx ebx
push [ ebp - 0x8 ]
push edi
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ edi + 0x180 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x184 ] 0x0
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongW@IAT ]
push [ ebp - 0x4 ]
mov ecx ebx
push [ ebp - 0x8 ]
push edi
test eax 0x1000000
je r-xdata
call sub_468c6b
push 0xfffffff6
push 0xfffffff7
jmp r-xdata
push 0xfffffff4
push 0xfffffffa
jmp r-xdata
call sub_468c6b
jmp r-xdata
sub_41b7f2
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov edx [ ebp + 0xc ]
mov ecx eax
test edx edx
je r-xdata
or [ rw-data ] 0xffffffff
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov [ rw-data ] ecx
jmp r-xdata
movzx ecx [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx eax dx
shl ecx 0x10
or ecx eax
push ecx
push 0x6
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x10
sub_41b845
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
push eax
call sub_41b86e
push 0x0
push 0x0
push 0x2
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x4
sub_41b86e
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ eax + ebx * 4 ]
push edi
mov edi [ eax ]
push 0x0
push edi
call sub_4049ca
cmp [ edi + 0x18 ] 0x0
jne r-xdata
push [ edi + 0x18 ]
call [ DestroyAcceleratorTable@IAT ]
and [ edi + 0x18 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
push 0x3
pop edx
mov [ ebp + 0x8 ] edx
cmp ecx edx
jl r-xdata
cmp [ edi + 0x20 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov esi [ eax ]
test esi esi
je r-xdata
push [ edi + 0x20 ]
call [ DestroyIcon@IAT ]
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
inc edx
mov [ ebp + 0x8 ] edx
cmp edx ecx
jle r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edi + 0x4 ]
jne r-xdata
push [ edi + 0x24 ]
call [ DestroyIcon@IAT ]
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
movzx eax [ esi + 0x90 ]
sub eax 0xa
je r-xdata
mov eax [ edx + ebx * 4 ]
xor edi edi
mov [ eax ] edi
mov esi [ rw-data ]
dec esi
mov [ rw-data ] esi
cmp ebx [ rw-data ]
jne r-xdata
push ecx
call sub_41b9f3
mov edx [ rw-data ]
cmp [ esi + 0x40 ] 0x0
je r-xdata
sub eax 0x6
je r-xdata
mov ecx [ rw-data ]
cmp esi 0x1
je r-xdata
or [ rw-data ] 0xffffffff
cmp [ esi + 0x64 ] 0x0
jne r-xdata
push [ esi + 0x40 ]
call [ ImageList_Destroy@IAT ]
and [ esi + 0x40 ] 0x0
jmp r-xdata
sub eax 0x3
je r-xdata
mov edx edi
test ecx ecx
jle r-xdata
test esi esi
jne r-xdata
push [ esi + 0x64 ]
call [ DeleteObject@IAT ]
and [ esi + 0x64 ] 0x0
jmp r-xdata
cmp [ esi + 0x68 ] 0x0
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
sub eax 0x8
jne r-xdata
mov [ rw-data ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
cmp [ eax ] edi
jne r-xdata
test ecx ecx
je r-xdata
push [ rw-data ]
push edi
call [ KillTimer@IAT ]
mov [ rw-data ] edi
push [ esi + 0x68 ]
call [ DestroyIcon@IAT ]
and [ esi + 0x68 ] 0x0
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x38 ]
call [ ImageList_Destroy@IAT ]
and [ esi + 0x38 ] 0x0
dec eax
dec eax
jne r-xdata
push esi
push edi
call sub_4049ca
inc edx
cmp edx ecx
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 - 0x4 ]
cmp [ eax ] edi
jne r-xdata
push [ esi + 0x44 ]
call [ DeleteObject@IAT ]
and [ esi + 0x44 ] 0x0
jmp r-xdata
cmp [ esi + 0x50 ] 0x0
jne r-xdata
push [ esi + 0x3c ]
call [ ImageList_Destroy@IAT ]
and [ esi + 0x3c ] 0x0
jmp r-xdata
push edi
push esi
mov ecx rw-data
call sub_46cefc
jmp r-xdata
mov ecx rw-data
call sub_4041e7
jmp r-xdata
push [ esi + 0x50 ]
call [ DestroyWindow@IAT ]
and [ esi + 0x50 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_404a54
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
push [ esi ]
call [ DestroyWindow@IAT ]
and [ esi ] 0x0
sub_41ba08
push esi
push sub_405cd3
push 0xe
mov esi ecx
push 0x10
lea ecx [ esi + 0x8c ]
pop edx
call sub_4057d8
lea ecx [ esi + 0x6c ]
call sub_405cd3
lea ecx [ esi + 0x28 ]
pop esi
jmp sub_405cd3
sub_41ba31
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ eax + 0x4 ]
push esi
push edi
xor ecx ecx
inc ecx
jmp r-xdata
cmp eax 0x48
je r-xdata
test ecx ecx
jne r-xdata
dec ecx
js r-xdata
cmp eax 0x7f
je r-xdata
lea eax [ edi + 0x1 ]
mov [ edx ] eax
jmp r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
neg ecx
sbb ecx ecx
mov eax ecx
jmp r-xdata
mov edi [ edx ]
mov esi [ ebx + edi * 4 ]
movsx eax [ esi + 0x8 ]
cmp eax 0x47
je r-xdata
cmp [ esi ] 0x3
je r-xdata
cmp eax 0x40
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ esi ] 0x26
jg r-xdata
cmp [ esi ] 0x2a
jg r-xdata
jmp r-xdata
sub_41ba98
push ebp
mov ebp esp
push ecx
push ebx
add ecx 0xffffffe8
push esi
mov esi [ ecx ]
push edi
xor edi edi
dec esi
mov [ ebp - 0x4 ] ecx
js r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi + edi ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
push ebx
call sub_414700
push [ eax ]
push [ ebp + 0x8 ]
call sub_422203
pop ecx
pop ecx
test eax eax
js r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
lea esi [ ebx - 0x1 ]
jmp r-xdata
jle r-xdata
mov ecx [ ebp - 0x4 ]
cmp edi esi
jle r-xdata
cmp edi esi
jg r-xdata
lea edi [ ebx + 0x1 ]
mov eax ebx
sub_41baef
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jae r-xdata
push 0x10
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
jne r-xdata
xor edi edi
jmp r-xdata
push [ ebp + 0x8 ]
and [ edi + 0x8 ] 0x0
mov ecx edi
call sub_4113a0
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
jmp r-xdata
sub_41bb84
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_425390
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_41bbc4
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_4254c0
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_41bc04
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
inc [ esi ]
mov edx [ esi ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ eax + 0x4 ]
xor edi edi
inc edi
jmp r-xdata
dec eax
je r-xdata
inc edx
mov [ esi ] edx
jmp r-xdata
test edi edi
jne r-xdata
sub eax 0x37
je r-xdata
mov eax [ ecx + edx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x47
je r-xdata
dec edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
lea eax [ edx + 0x1 ]
mov [ esi ] eax
xor eax eax
mov eax [ ecx + edx * 4 - 0x4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_44d520
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_41bc5c
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jae r-xdata
push 0x1
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
mov eax ecx
jmp r-xdata
push edi
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
jne r-xdata
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ edx ] cl
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
jmp r-xdata
sub_41bcea
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov eax ecx
push edi
push eax
mov esi edx
mov [ ebp - 0xc ] eax
call sub_4218fb
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
pop ecx
xor ecx ecx
and [ ebp - 0x8 ] ecx
xor ebx ebx
inc ebx
lea edi [ eax - 0x1 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] ecx
jle r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0x30
pop edx
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
xor al al
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0xc ]
movzx eax [ eax + edi * 2 ]
cmp eax 0x39
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x41
jb r-xdata
cmp ax dx
jb r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x46
ja r-xdata
sub eax edx
cmp eax 0x66
ja r-xdata
sub eax 0x37
jmp r-xdata
test edi edi
js r-xdata
sub eax 0x57
jmp r-xdata
push ecx
cdq
push ebx
push edx
push eax
call sub_434ba0
add [ esi ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
adc [ esi + 0x4 ] edx
shld ecx ebx 0x4
dec edi
shl ebx 0x4
inc eax
push 0x30
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
pop edx
cmp eax [ ebp + 0x8 ]
jl r-xdata
sub_41bd8f
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
je r-xdata
dec [ esi + 0x4 ]
pop esi
retn
cmp [ esi + 0xd ] 0x0
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41bdcc
mov ecx [ esi + 0x8 ]
mov edi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
mov [ esi + 0xd ] 0x1
mov [ esi + 0x8 ] edi
mov [ esi + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41bdcc
pop edi
sub_41bde1
cmp [ ecx + 0xc ] 0x4
push esi
jne r-xdata
xor al al
pop esi
retn
mov eax [ ecx + 0x8 ]
push r--data
mov esi [ eax ]
push esi
call sub_422633
pop ecx
pop ecx
test eax eax
jne r-xdata
mov al 0x1
pop esi
retn
push r--data
push esi
call sub_422633
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_41be17
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
xor eax eax
inc eax
push edi
or edi 0xffffffff
mov ecx rw-data
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_40d3d2
push 0x3
pop esi
push 0x7c
pop eax
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] ax
call sub_41c929
test al al
jne r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
call sub_41c8b7
dec esi
jne r-xdata
pop edi
pop esi
mov eax rw-data
pop ebx
leave
retn
sub_41bf5c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ ebp + 0x8 ]
push ebx
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ecx + 0x8 ]
xor ebx ebx
and [ esp + 0x10 ] ebx
and [ esp + 0x34 ] ebx
xor edx edx
push edi
mov [ esp + 0x10 ] esi
or esi 0xffffffff
inc edx
xor edi edi
mov [ esp + 0x20 ] esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x3c ] edx
cmp eax 0x15
je r-xdata
cmp [ esp + 0x10 ] ebx
je r-xdata
cmp eax 0x1d
ja r-xdata
movzx eax [ eax + r-xdata ]
jmp [ eax * 4 + jump_table_41c0ec ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
mov edx [ esp + 0x2c ]
and [ esi ] ebx
mov [ esi + 0xc ] 0x1
mov eax [ edx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx edx
call sub_44d7e4
or esi 0xffffffff
jmp r-xdata
mov eax [ esp + 0x10 ]
lea edx [ ebx + 0x6 ]
cmp eax edx
ja r-xdata
or edi 0x5
or edi 0x4
mov ebx esi
push 0x7
pop edi
jmp r-xdata
push 0x7
pop edi
xor ebx ebx
jmp r-xdata
push 0x7
pop edi
jmp r-xdata
push 0x7
pop edi
or edi 0x5
or edi 0x4
xor ebx ebx
jmp r-xdata
mov eax [ ecx + 0x4 ]
push 0x5
pop edi
push [ eax + 0x4 ]
lea ecx [ esp + 0x34 ]
mov ebx edx
call sub_40d89e
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
push 0x7
mov ecx [ eax ]
pop edi
call sub_40cdb4
push eax
lea eax [ esp + 0x48 ]
push r--data
push eax
call sub_42234b
add esp 0xc
lea ecx [ esp + 0x44 ]
call sub_403bcf
mov ecx [ ebp + 0xc ]
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov edi edx
mov eax [ eax ]
lea ecx [ esp + 0x30 ]
call sub_412570
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ecx + 0x4 ]
mov ecx [ eax + edx * 4 ]
call sub_40cdb4
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x5 ]
cmp eax edx
ja r-xdata
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
mov ecx [ ebp + 0xc ]
or esi 0xffffffff
jmp r-xdata
mov [ esp + 0x14 ] eax
jmp r-xdata
xor ebx ebx
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + edx * 4 ]
call sub_40cdb4
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x4 ]
cmp eax edx
jbe r-xdata
lea edx [ ebx + 0x3 ]
cmp eax edx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edx * 4 ]
call sub_40cdb4
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
lea ecx [ ebx + 0x2 ]
cmp eax ecx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edx * 4 ]
call sub_40cdb4
mov esi eax
mov eax [ esp + 0x10 ]
lea ecx [ ebx + 0x1 ]
cmp eax ecx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx * 4 ]
call sub_40cdb4
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x10 ]
sub esp 0x10
mov ecx esp
lea eax [ esp + 0x40 ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_4113a0
mov ebx [ esp + 0x24 ]
push edi
push [ esp + 0x2c ]
push [ esp + 0x34 ]
push [ esp + 0x3c ]
push esi
push [ esp + 0x48 ]
push [ esp + 0x50 ]
push ebx
push [ ebp + 0x8 ]
call sub_41c13e
mov edi [ ebp + 0x10 ]
mov ecx edi
mov esi eax
call sub_412570
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
call sub_40cdb4
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx * 4 + 0x4 ]
call sub_40cdb4
mov [ esp + 0x28 ] eax
mov edx [ esp + 0x2c ]
push 0x0
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1d
je r-xdata
xor esi esi
push ebx
call j_sub_4228ca#2
pop ecx
sub_41c13e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x28
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp eax 0xc
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
cmp eax 0xd
jle r-xdata
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
cmp eax 0xf
jle r-xdata
and [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ebx [ eax ]
push ebx
mov [ ebp - 0x1c ] ebx
call sub_41c38a
mov edi eax
mov [ ebp - 0x20 ] edi
cmp edi 0xffffffff
je r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x11
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + edi * 4 ]
mov esi [ eax ]
mov [ ebp - 0x24 ] esi
cmp edx 0xe
je r-xdata
cmp eax 0x14
je r-xdata
lea ecx [ ebp + 0x2c ]
call sub_412570
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x34
mov [ esi + 0x92 ] 0x0
jmp r-xdata
cmp edx 0xf
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x28 ]
and edx 0x2
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x28 ] edx
jne r-xdata
cmp edx 0xc
je r-xdata
xor edx edx
mov [ esi + 0x86 ] dx
jmp r-xdata
push ebx
push [ ebp + 0x1c ]
push edi
push ecx
push eax
call sub_41c446
mov edi [ ebx + 0x60 ]
mov eax [ ebx + 0x58 ]
mov ecx [ ebx + 0x5c ]
mov [ ebp - 0x8 ] edi
mov edi [ ebx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edi
mov [ esi + 0x92 ] 0x50
mov ax [ rw-data ]
mov [ esi + 0x86 ] ax
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x20 ]
cmp edx 0x1d
ja r-xdata
push edi
mov ecx rw-data
call sub_404a54
or [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0xc ] 0x1
jmp [ edx * 4 + jump_table_41c312 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
push ebx
call sub_41c525
mov al [ ebp - 0xc ]
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_4691dc
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_4697b2
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_469424
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_469674
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_4694d3
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_46936b
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_469ee3
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_469fc4
jmp r-xdata
sub esp 0x10
mov ecx esp
lea eax [ ebp + 0x2c ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_4113a0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_469567
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push ecx
push edi
push esi
push ebx
call sub_46a0d6
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push ecx
push edi
push esi
push ebx
call sub_46a217
jmp r-xdata
lea ecx [ ebp + 0x2c ]
call sub_40cdb4
push eax
push ecx
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_468eef
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_46a698
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push ecx
push edi
push esi
push ebx
call sub_46a2b9
jmp r-xdata
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_46a395
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push edi
push esi
push ebx
call sub_469c50
jmp r-xdata
push [ ebp + 0x10 ]
push ecx
push esi
push ebx
call sub_469293
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push edi
push esi
push ebx
call sub_469d97
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push ecx
push edi
push esi
push ebx
call sub_46a44d
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push esi
push ecx
call sub_46a578
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_46970b
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_4690be
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_469158
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_46a189
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_469882
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push esi
push ecx
call sub_469a23
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push ecx
push esi
push ebx
call sub_468fb5
jmp r-xdata
push edi
mov ecx rw-data
call sub_404a54
cmp [ ebp + 0x8 ] 0xb
jne r-xdata
mov ecx [ ebp + 0x28 ]
mov [ esi + 0x90 ] dl
mov [ esi + 0x91 ] cl
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edi
test cl 0x1
je r-xdata
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
cmp [ eax ] cx
je r-xdata
xor eax eax
cmp [ ebx + 0x70 ] eax
jne r-xdata
test cl 0x4
je r-xdata
mov edi eax
jmp r-xdata
push eax
push [ ebx + 0x88 ]
lea eax [ ebx + 0x6c ]
push [ ebx + 0x84 ]
push [ ebx + 0x80 ]
push [ ebx + 0x7c ]
push eax
push esi
push ebx
call sub_468cdb
mov ecx [ ebp + 0x28 ]
jmp r-xdata
cmp [ ebx + 0x7c ] 0x55
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
cmp [ ebx + 0x80 ] 0x190
jne r-xdata
push [ esi ]
call [ GetDC@IAT ]
mov ebx eax
xor eax eax
push eax
push eax
push 0x31
push [ esi ]
mov [ ebp + 0x20 ] eax
call [ SendMessageW@IAT ]
mov edi [ SelectObject@IAT ]
push eax
push ebx
call edi
mov edx [ ebp + 0xc ]
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_447a28
pop ecx
push esi
push ebx
call edi
mov esi [ ebp - 0x24 ]
push ebx
push [ esi ]
call [ ReleaseDC@IAT ]
mov eax [ ebp + 0x8 ]
sub eax 0x17
je r-xdata
cmp [ ebp + 0x1c ] 0xffffffff
jne r-xdata
cmp [ ebx + 0x198 ] 0x0
jne r-xdata
push 0x0
push esi
push ebx
call sub_41c697
cmp [ ebx + 0x84 ] eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
dec eax
je r-xdata
cmp [ ebx + 0x190 ] 0xffffffff
je r-xdata
cmp [ ebx + 0x50 ] 0xffffffff
jne r-xdata
cmp [ ebx + 0x88 ] 0x2
je r-xdata
mov ebx [ ebp - 0x1c ]
or edi 0xffffffff
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp r-xdata
dec eax
je r-xdata
mov al [ ebx + 0x18c ]
mov al [ ebx + 0x190 ]
jmp r-xdata
push [ ebx + 0x50 ]
push edi
call sub_46b354
jmp r-xdata
cmp [ ebx + 0x54 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp [ ebx + 0x64 ] edi
je r-xdata
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
add edx 0xc
jmp r-xdata
dec eax
jne r-xdata
mov [ esi + 0x93 ] al
jmp r-xdata
push [ ebx + 0x54 ]
push edi
call sub_46b14a
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
push [ ebp - 0xc ]
push [ ebx + 0x64 ]
push [ ebx + 0x60 ]
push [ ebx + 0x5c ]
push [ ebx + 0x58 ]
push [ esi ]
call [ MoveWindow@IAT ]
mov edi [ ebp - 0x20 ]
jmp r-xdata
cmp [ ebx + 0x60 ] edi
je r-xdata
lea eax [ ecx + 0x8 ]
mov [ ebx + 0x64 ] eax
cmp [ rw-data ] 0x2
je r-xdata
mov ecx [ ebp + 0x20 ]
mov edx ecx
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
add edx 0x8
jmp r-xdata
push edi
push 0xffffffeb
push [ esi ]
call [ SetWindowLongW@IAT ]
lea eax [ edx + 0x8 ]
mov [ ebx + 0x60 ] eax
cmp [ rw-data ] 0x2
je r-xdata
sub_41c38a
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
push esi
push edi
cmp [ rw-data ] ecx
jne r-xdata
push 0x3
pop esi
xor edi edi
cmp ecx esi
jle r-xdata
cmp [ rw-data ] 0xffff
je r-xdata
push 0xa0
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov edx [ rw-data ]
or eax 0xffffffff
jmp r-xdata
push 0xa0
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov ecx [ rw-data ]
inc [ rw-data ]
mov ecx [ ecx + esi * 4 ]
mov eax esi
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov ecx eax
call sub_41c488
mov edi eax
jmp r-xdata
inc esi
cmp esi ecx
jl r-xdata
pop edi
pop esi
leave
retn 0x4
xor edi edi
jmp r-xdata
mov ecx eax
call sub_41c488
mov edi eax
mov eax [ edx + esi * 4 ]
cmp [ eax ] edi
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] edi
call sub_41c8b7
mov esi [ rw-data ]
inc esi
mov [ rw-data ] esi
sub_41c446
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x18 ]
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov [ ecx + 0x58 ] eax
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
add [ ecx + 0x58 ] eax
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov eax [ ecx + 0x60 ]
add eax [ ebp + 0x8 ]
add [ ecx + 0x58 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jle r-xdata
mov [ ecx + 0x5c ] eax
add [ ecx + 0x5c ] eax
jmp r-xdata
mov eax [ ecx + 0x64 ]
add eax [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
mov [ ecx + 0x60 ] eax
pop ebp
retn 0x14
mov [ ecx + 0x64 ] eax
sub_41c488
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
or edi 0xffffffff
lea ecx [ esi + 0x14 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
call sub_40d3d2
lea ecx [ esi + 0x24 ]
call sub_40d3d2
lea ecx [ esi + 0x54 ]
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] ebx
call sub_40d3d2
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] 0x1
mov [ esi + 0x84 ] di
mov [ esi + 0x88 ] di
mov [ esi + 0x8a ] di
mov [ esi + 0x8c ] di
mov [ esi + 0x8e ] di
mov [ esi + 0x9c ] edi
pop edi
mov [ esi + 0x80 ] ebx
mov [ esi + 0x98 ] bl
mov [ esi + 0x93 ] 0xff
mov eax esi
pop esi
pop ebx
retn
sub_41c525
push ebp
mov ebp esp
mov ecx [ ebp + 0x24 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x28 ]
inc eax
neg eax
push ebx
mov ebx [ ebp + 0x1c ]
sbb eax eax
and eax [ ebp + 0x28 ]
push esi
push edi
mov edx 0x96
cmp ebx 0xffffffff
je r-xdata
mov ecx 0x100
mov ebx edx
jmp r-xdata
mov edi [ ebp + 0x20 ]
cmp edi 0xffffffff
je r-xdata
mov edi edx
jmp r-xdata
push 0x1
push ecx
push [ ebp + 0x10 ]
push edi
push ebx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ecx
push r--data
push r--data
push eax
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x14 ]
or [ esi + 0x4c ] 0xffffffff
mov [ esi + 0x88 ] ax
mov eax [ ebp + 0x18 ]
push 0x910
mov [ esi + 0x8a ] ax
mov [ esi + 0x8c ] bx
mov [ esi + 0x8e ] di
call sub_42010a
mov edx [ ebp + 0x8 ]
xor edi edi
mov [ eax + 0xc ] edi
mov [ eax + 0x4 ] edi
mov [ esi + 0x80 ] eax
pop ecx
mov [ eax + 0x8 ] esi
mov [ eax ] edi
mov ecx [ edx + 0x1c8 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
mov [ edx + 0x1c8 ] eax
jmp r-xdata
cmp [ ecx ] edi
jne r-xdata
mov ecx 0x300
or [ esi + 0x86 ] cx
mov al 0x1
mov ecx [ ecx ]
jmp r-xdata
mov [ ecx ] eax
sub_41c619
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0xc ]
or ecx 0x50000000
test eax 0x80000
jne r-xdata
and eax 0xfff7ffff
jmp r-xdata
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push [ rw-data ]
push [ ebp + 0x2c ]
push [ edi ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x30
cmp [ ebp + 0x34 ] bl
je r-xdata
cmp [ edi + 0x18c ] ebx
jge r-xdata
push ebx
push 0x11
call [ GetStockObject@IAT ]
push eax
push 0x30
push esi
call [ SendMessageW@IAT ]
cmp [ edi + 0x198 ] bl
je r-xdata
push ebx
push esi
call [ ShowWindow@IAT ]
jmp r-xdata
sub_41c697
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x3a ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
mov ax [ esi + 0x58 ]
cmp [ edi + 0x90 ] 0x7
mov [ edi + 0x88 ] ax
mov ax [ esi + 0x5c ]
mov [ edi + 0x8a ] ax
je r-xdata
mov ebx [ ebp + 0xc ]
movzx eax [ ebx + 0x86 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x34 ]
push eax
push [ esi ]
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x28 ]
mov edx [ esi + 0x44 ]
mov edi [ esi + 0x48 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] edi
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ax [ esi + 0x60 ]
mov [ edi + 0x8c ] ax
mov ax [ esi + 0x64 ]
mov [ edi + 0x8e ] ax
mov [ ebp + 0x10 ] 0x1
test edx edx
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
call [ GetClientRect@IAT ]
or ebx 0xffffffff
cmp [ esi + 0x58 ] ebx
je r-xdata
jmp r-xdata
mov ax [ ebp - 0x24 ]
mov [ edi + 0x88 ] ax
jmp r-xdata
cmp [ esi + 0x5c ] ebx
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
mov [ ebp + 0xc ] 0x1
test edi edi
je r-xdata
cmp [ esi + 0x19c ] 0x0
jne r-xdata
mov ax [ ebp - 0x20 ]
mov [ edi + 0x8a ] ax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
call [ GetWindowRect@IAT ]
cmp [ esi + 0x60 ] ebx
je r-xdata
mov [ ebp + 0xc ] edi
jmp r-xdata
push 0xf
call [ GetSystemMetrics@IAT ]
sub edi eax
mov [ ebp + 0x8 ] edi
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
push [ ebx ]
call [ GetWindowRect@IAT ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
sub eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x30 ]
sub edx eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x1c ] ecx
call [ ScreenToClient@IAT ]
mov edi [ ebp - 0x1c ]
mov eax edi
imul eax [ ebp - 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x88 ] ax
mov eax esi
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0xc ]
mov [ ebx + 0x8a ] ax
mov eax [ ebp - 0xc ]
imul eax [ ebp - 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov [ ebx + 0x8c ] ax
mov eax [ ebp - 0x10 ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0xc ]
mov [ ebx + 0x8e ] ax
test cx cx
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
mov [ edi + 0x8c ] ax
jmp r-xdata
cmp [ esi + 0x64 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
test ecx 0x100
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ edi + 0x8e ] ax
jmp r-xdata
cmp [ edi + 0x90 ] 0x0
jne r-xdata
test ecx 0x200
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebx + 0x8c ] ax
test cl 0x6
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x8e ] ax
test cl 0x60
jne r-xdata
test cl 0x8
jne r-xdata
mov [ ebx + 0x88 ] di
jmp r-xdata
test cl 0x4
jne r-xdata
test cl cl
js r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp + 0x10 ]
mov ecx edi
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov [ ebx + 0x88 ] cx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
cmp edi eax
jg r-xdata
test ax ax
je r-xdata
mov eax ecx
and eax 0x20
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp + 0xc ]
mov ecx esi
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov [ ebx + 0x8a ] cx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
cmp esi eax
jg r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
add eax [ ebp - 0xc ]
imul eax [ ebp - 0x8 ]
cdq
idiv [ ebp + 0x10 ]
sub eax [ ebp - 0xc ]
add eax [ ebp - 0x8 ]
mov [ ebx + 0x88 ] ax
jmp r-xdata
sub edi [ ebp + 0x10 ]
sub di [ ebx + 0x8c ]
add di [ ebp - 0x8 ]
add di [ ebp - 0xc ]
mov [ ebx + 0x88 ] di
jmp r-xdata
sub di [ ebx + 0x88 ]
sub di [ ebp + 0x10 ]
add di [ ebp - 0x8 ]
add di [ ebp - 0xc ]
mov [ ebx + 0x8c ] di
jmp r-xdata
mov [ ebx + 0x8a ] si
jmp r-xdata
test cl 0x40
jne r-xdata
mov eax esi
sub eax [ ebp + 0xc ]
add eax [ ebp - 0x10 ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
sub eax [ ebp - 0x10 ]
add eax edx
mov [ ebx + 0x8a ] ax
jmp r-xdata
test ax ax
je r-xdata
mov eax ecx
and eax 0x2
jne r-xdata
sub si [ ebx + 0x8e ]
sub si [ ebp + 0xc ]
add si dx
add si [ ebp - 0x10 ]
mov [ ebx + 0x8a ] si
jmp r-xdata
sub si [ ebx + 0x8a ]
sub si [ ebp + 0xc ]
add si dx
add si [ ebp - 0x10 ]
mov [ ebx + 0x8e ] si
jmp r-xdata
sub_41c8b7
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push 0x4
mov eax [ esi + 0xc ]
pop ebx
cmp [ esi + 0x8 ] eax
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jae r-xdata
push ebx
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mul ebx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
jne r-xdata
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x4
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
jmp r-xdata
sub_41c929
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x4
push r--data
mov edx r--data
mov ecx 0x80000001
call sub_41c955
add esp 0xc
cmp [ ebp - 0x8 ] 0x31
sete al
leave
retn
sub_41c955
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
xor al al
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
mov [ esi ] ax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
xor ebx ebx
push ebx
push edx
push ecx
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
lea edi [ eax + eax ]
lea eax [ ebp - 0x4 ]
push eax
push esi
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
push [ ebp - 0x8 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov al bl
pop edi
mov eax [ ebp - 0x4 ]
shr eax 0x1
mov [ ebp - 0x4 ] eax
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
mov [ edi + esi - 0x2 ] ax
jmp r-xdata
xor ecx ecx
mov [ esi + eax * 2 ] cx
mov bl 0x1
sub_41c9d6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
and [ esp + 0x4 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov [ esp + 0xc ] ecx
mov edi [ eax ]
push 0xe
mov ecx edi
call sub_40d2c0
mov ecx edi
test al al
jne r-xdata
lea eax [ esp + 0x34 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
mov ecx eax
jmp r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x30 ] eax
inc [ eax ]
lea ecx [ esp + 0x24 ]
mov eax [ ecx ]
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x20 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
test bl 0x1
jne r-xdata
lea ecx [ esp + 0x24 ]
and ebx 0xfffffffd
call sub_405cd3
lea ecx [ esp + 0x34 ]
call sub_405cd3
jmp r-xdata
lea ecx [ esp + 0x14 ]
call sub_40b8a7
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call [ CharUpperBuffW@IAT ]
mov ebx [ esp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
mov ecx ebx
call sub_41cf79
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
cmp [ esi + 0x8 ] 0x2
jne r-xdata
lea ecx [ esp + 0x14 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi 0xfa
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
test eax eax
jle r-xdata
mov eax [ ebx + 0x478 ]
and [ esp + 0xc ] 0x0
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x10 ]
call sub_41cbfe
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
mov esi [ esp + 0xc ]
lea edx [ esp + 0x14 ]
mov ecx [ esi ]
call sub_405b2a
test al al
jne r-xdata
lea ecx [ esp + 0x34 ]
call sub_40d3d2
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x48 ] 0x0
call sub_40c935
mov [ esp + 0x4c ] edi
call [ timeGetTime@IAT ]
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x34 ]
push eax
lea ecx [ ebx + 0x478 ]
call sub_41cb59
lea ecx [ esp + 0x34 ]
call sub_405cd3
mov eax [ esi ]
mov [ eax + 0x11 ] 0x0
mov eax [ esi ]
mov [ eax + 0x18 ] edi
mov esi [ esi ]
cmp [ esi + 0x10 ] 0x0
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x10 ]
call sub_468b5a
jmp r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_407ba9
jmp r-xdata
call [ timeGetTime@IAT ]
mov [ esi + 0x14 ] eax
push ecx
mov eax esp
lea ecx [ esp + 0x10 ]
and [ eax ] 0x0
call sub_402e2a
test al al
jne r-xdata
sub_41cb59
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_41cb91
mov edi eax
mov [ esi ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_41cb91
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_41cb91
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0x1c
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_41cbc2
mov edi eax
sub_41cbc2
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
inc [ eax ]
mov al [ edx + 0x10 ]
mov [ ecx + 0x10 ] al
mov al [ edx + 0x11 ]
mov [ ecx + 0x11 ] al
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov eax [ edx + 0x18 ]
mov [ ecx + 0x18 ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cc12
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
and [ esp + 0x10 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x8 ]
xor ecx ecx
mov [ esp + 0x10 ] ecx
cmp esi 0x1
lea ecx [ esp + 0x30 ]
sete bh
call sub_40d3d2
cmp esi 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x20 ]
push [ eax ]
call sub_40caee
lea eax [ esp + 0xf ]
push eax
lea eax [ esp + 0x12 ]
push eax
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x19 ]
push eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call sub_41da5a
mov bl al
neg bl
lea ecx [ esp + 0x20 ]
sbb bl bl
call sub_405cd3
inc bl
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x2a
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_41d5f6
mov bh al
mov [ esp + 0xc ] bh
test bh bh
jne r-xdata
cmp [ esp + 0x14 ] 0xffffffff
jne r-xdata
mov edx [ esp + 0x14 ]
mov cl [ esp + 0xc ]
mov [ esp + 0x18 ] edx
cmp edx 0x13
je r-xdata
push 0xe
mov ecx esi
call sub_40d2c0
mov ecx esi
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
jmp r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
test cl cl
je r-xdata
cmp [ esp + 0xd ] 0x0
jne r-xdata
lea eax [ esp + 0x40 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
jmp r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x2c ] eax
inc [ eax ]
lea eax [ esp + 0x20 ]
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0x3
pop edx
mov [ esp + 0x18 ] edx
jmp r-xdata
push 0x4
pop eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x34 ]
call sub_40c935
test bl 0x2
je r-xdata
test bl 0x1
jne r-xdata
lea ecx [ esp + 0x20 ]
and ebx 0xfffffffd
call sub_405cd3
lea ecx [ esp + 0x30 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test cl cl
jne r-xdata
or eax 0x2
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp [ esp + 0xe ] 0x0
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_405cd3
jmp r-xdata
lea eax [ esp + 0x30 ]
push eax
mov ecx edi
call sub_41cf79
test eax eax
je r-xdata
or eax 0x1
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
mov bh [ esp + 0xc ]
or eax 0x8
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ edi + 0x1cc ]
shl edx 0x10
or edx eax
xor esi esi
mov [ esp + 0x1c ] edx
test ecx ecx
jne r-xdata
mov eax [ edi + 0x1c8 ]
mov [ esp + 0x14 ] eax
test bh bh
jne r-xdata
mov eax [ esp + 0x14 ]
inc esi
add eax 0x4
mov [ esp + 0x14 ] eax
cmp esi ecx
jb r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
xor ebx ebx
test ecx ecx
jne r-xdata
mov eax [ eax ]
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
test bh bh
je r-xdata
mov edx [ edi + 0x1c8 ]
push 0x28
cmp ebx ecx
jne r-xdata
lea eax [ esp + 0x30 ]
push eax
mov eax [ edi + 0x1c8 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
add ecx 0x8
call sub_40c935
jmp r-xdata
mov eax [ edi + 0x1c8 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
push [ eax ]
push [ rw-data ]
call [ UnregisterHotKey@IAT ]
mov eax [ edi + 0x1c8 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
inc ebx
add edx 0x4
cmp ebx ecx
jb r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x1c8 ]
mov eax [ eax + esi * 4 ]
and [ eax ] 0x0
jmp r-xdata
push ecx
call sub_41f902
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
xor ecx ecx
mov ecx eax
call sub_41cff8
mov ecx eax
jmp r-xdata
and [ esp + 0x14 ] 0x0
jmp r-xdata
mov ecx eax
call sub_41cff8
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x1c8 ]
mov ecx [ esp + 0x1c ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
mov [ eax ] ebx
mov eax [ edi + 0x1c8 ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
mov [ eax + 0x4 ] ecx
lea eax [ esp + 0x30 ]
push eax
mov eax [ edi + 0x1c8 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
add ecx 0x8
call sub_40c935
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ edi + 0x1c8 ]
push [ esi + 0x8 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
add ecx 0x18
call sub_40c935
mov eax [ edi + 0x1c8 ]
push [ esp + 0x18 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ esp + 0x14 ]
mov eax [ eax ]
push ecx
push [ eax ]
push [ rw-data ]
call [ RegisterHotKey@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x1c8 ]
mov eax [ eax + ebx * 4 ]
mov [ eax ] ecx
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ edi + 0x1c4 ]
call sub_40197e
mov eax [ edi + 0x1c8 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x1c8 ]
mov eax [ eax + ebx * 4 ]
xor ebx ebx
push ebx
mov [ eax ] ebx
call [ GetLastError@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] ebx
push ecx
call sub_41f902
sub_41ce7b
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov edi ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0xe
mov ecx eax
mov [ ebp - 0x4 ] eax
call sub_40d2c0
mov ecx [ ebp - 0x4 ]
test al al
jne r-xdata
xor eax eax
inc eax
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x34 ]
push eax
call sub_44afce
mov ecx eax
jmp r-xdata
push 0x2
pop eax
mov [ ebp + 0x8 ] eax
call sub_4084a6
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
inc [ eax ]
lea ecx [ ebp - 0x24 ]
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
mov eax [ ebp + 0x8 ]
test al 0x2
je r-xdata
test al 0x1
jne r-xdata
and eax 0xfffffffd
lea ecx [ ebp - 0x24 ]
mov [ ebp + 0x8 ] eax
call sub_405cd3
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x34 ]
call sub_405cd3
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_41cf79
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
push ebx
mov [ esi + 0xc ] eax
mov [ esi ] ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
or ebx 0xffffffff
jmp r-xdata
cmp [ esi + 0x8 ] 0x2
mov eax ebx
ja r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_44be63
jmp r-xdata
mov ecx [ esi + 0x4 ]
push eax
mov ecx [ ecx ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40cdb4
push eax
call sub_41cfad
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] edi
sub_41cf79
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov eax [ edx ]
sub esp 0x10
mov esi esp
add ecx 0x138
mov [ esi ] eax
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ esi + 0xc ] eax
inc [ eax ]
call sub_40a9a0
pop esi
pop ebp
retn 0x4
sub_41cfad
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ edx + 0xd ]
cmp eax 0xd
ja r-xdata
pop ebp
retn 0xc
mov eax [ rw-data ]
push [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
shl edx 0x4
mov eax [ eax ]
lea ecx [ edx + 0x15c ]
add ecx eax
call sub_40c935
xor eax eax
inc eax
sub_41d00f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1bc
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ esp + 0x3c ] edi
mov eax [ ecx + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push r--data
mov esi [ eax ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x14 ] esi
call sub_41d6b4
mov ebx [ ebp + 0xc ]
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
lea eax [ edi + 0x10c ]
mov [ esp + 0x44 ] eax
lea eax [ edi + 0x101 ]
mov [ esp + 0x50 ] eax
lea eax [ edi + 0x102 ]
mov [ esp + 0x5c ] eax
lea eax [ edi + 0x110 ]
mov [ esp + 0xb0 ] eax
lea eax [ edi + 0x114 ]
mov [ esp + 0xbc ] eax
lea eax [ edi + 0x118 ]
mov ecx r--data
mov [ esp + 0xc8 ] eax
lea eax [ edi + 0x104 ]
mov [ esp + 0x54 ] ecx
mov [ esp + 0x60 ] ecx
mov [ esp + 0x9c ] ecx
mov ecx r--data
mov [ esp + 0xd4 ] eax
lea eax [ edi + 0x103 ]
mov edx r--data
mov [ esp + 0xb4 ] ecx
mov [ esp + 0xc0 ] ecx
mov [ esp + 0xe0 ] eax
mov ecx r--data
lea eax [ edi + 0x108 ]
mov [ ebx + 0xc ] 0x1
mov [ esp + 0x40 ] r--data
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] r--data
mov [ esp + 0x58 ] r--data
mov [ esp + 0x64 ] r--data
mov [ esp + 0x68 ] rw-data
mov [ esp + 0x6c ] r--data
mov [ esp + 0x70 ] r--data
mov [ esp + 0x74 ] rw-data
mov [ esp + 0x78 ] edx
mov [ esp + 0x7c ] r--data
mov [ esp + 0x80 ] rw-data
mov [ esp + 0x84 ] r--data
mov [ esp + 0x88 ] r--data
mov [ esp + 0x8c ] rw-data
mov [ esp + 0x90 ] r--data
mov [ esp + 0x94 ] r--data
mov [ esp + 0x98 ] rw-data
mov [ esp + 0xa0 ] r--data
mov [ esp + 0xa4 ] rw-data
mov [ esp + 0xa8 ] r--data
mov [ esp + 0xac ] r--data
mov [ esp + 0xb8 ] r--data
mov [ esp + 0xc4 ] r--data
mov [ esp + 0xcc ] r--data
mov [ esp + 0xd0 ] r--data
mov [ esp + 0xd8 ] edx
mov [ esp + 0xdc ] r--data
mov [ esp + 0xe4 ] ecx
mov [ esp + 0xe8 ] r--data
mov [ esp + 0xec ] eax
mov [ esp + 0xf0 ] edx
lea eax [ edi + 0x91 ]
mov [ esp + 0xf8 ] eax
lea eax [ edi + 0x90 ]
mov [ esp + 0x104 ] eax
lea eax [ edi + 0x88 ]
mov [ esp + 0x110 ] eax
lea eax [ edi + 0x8c ]
mov [ esp + 0x11c ] eax
lea eax [ edi + 0x11c ]
mov [ esp + 0x128 ] eax
lea eax [ edi + 0x498 ]
mov [ esp + 0x134 ] eax
lea eax [ edi + 0x2fc ]
mov [ esp + 0x17c ] eax
lea eax [ edi + 0x2fd ]
mov [ esp + 0x188 ] eax
lea eax [ edi + 0x2f8 ]
mov [ esp + 0x194 ] eax
mov [ esp + 0xfc ] ecx
lea eax [ edi + 0x314 ]
mov [ esp + 0x1ac ] eax
mov eax [ ebp + 0x8 ]
mov ecx r--data
mov eax [ eax + 0x4 ]
mov edx r--data
mov [ esp + 0x114 ] ecx
mov [ esp + 0x120 ] ecx
mov ecx r--data
mov [ esp + 0x108 ] edx
mov [ esp + 0x144 ] edx
xor edx edx
mov [ esp + 0x12c ] ecx
mov [ esp + 0x150 ] ecx
mov [ esp + 0x174 ] ecx
mov [ esp + 0x180 ] ecx
mov [ esp + 0x18c ] ecx
mov ecx [ eax ]
push 0x4
mov [ esp + 0xf8 ] r--data
mov [ esp + 0x104 ] r--data
mov [ esp + 0x110 ] r--data
mov [ esp + 0x11c ] r--data
mov [ esp + 0x128 ] r--data
mov [ esp + 0x134 ] r--data
mov [ esp + 0x13c ] r--data
mov [ esp + 0x140 ] r--data
mov [ esp + 0x144 ] rw-data
mov [ esp + 0x14c ] r--data
mov [ esp + 0x150 ] rw-data
mov [ esp + 0x158 ] r--data
mov [ esp + 0x15c ] edx
mov [ esp + 0x160 ] r--data
mov [ esp + 0x164 ] r--data
mov [ esp + 0x168 ] edx
mov [ esp + 0x16c ] r--data
mov [ esp + 0x170 ] r--data
mov [ esp + 0x174 ] rw-data
mov [ esp + 0x17c ] r--data
mov [ esp + 0x188 ] r--data
mov [ esp + 0x194 ] r--data
mov [ esp + 0x19c ] r--data
mov [ esp + 0x1a0 ] r--data
mov [ esp + 0x1a4 ] edx
mov [ esp + 0x1a8 ] r--data
mov [ esp + 0x1ac ] r--data
mov [ esp + 0x1b4 ] r--data
mov [ esp + 0x28 ] eax
call sub_40d2c0
test al al
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
jmp r-xdata
push 0x2a
pop eax
cmp [ esi ] ax
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_412570
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x1c ] 0x1
je r-xdata
xor ecx ecx
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov esi [ esp + 0x24 ]
push 0x29
mov ecx [ esi + 0x4 ]
call sub_41d5f6
test al al
jne r-xdata
push 0x1e
xor ebx ebx
pop edi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] edi
xor esi esi
mov [ esp + 0x18 ] esi
jmp r-xdata
mov ecx [ esi + 0x4 ]
call sub_40cdb4
mov [ esp + 0x18 ] eax
jg r-xdata
lea edi [ esi - 0x1 ]
lea ebx [ esi + 0x1 ]
jmp r-xdata
cmp ebx edi
mov [ esp + 0x20 ] ebx
mov ebx [ ebp + 0xc ]
mov [ esp + 0x24 ] edi
mov edi [ esp + 0x3c ]
jg r-xdata
lea esi [ edi + ebx ]
sar esi 0x1
mov eax esi
imul eax eax 0xc
push [ esp + eax + 0x40 ]
push [ esp + 0x14 ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jns r-xdata
jmp r-xdata
cmp ebx edi
jle r-xdata
and [ esp + 0x14 ] 0x0
imul esi esi 0xc
mov eax [ esp + esi + 0x48 ]
mov [ esp + 0x38 ] eax
movzx ecx [ eax ]
cmp ecx 0x64
jne r-xdata
cmp ecx 0x44
jne r-xdata
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x18 ]
mov ecx eax
mov [ esp + 0x18 ] 0x1
call sub_41d612
pop ecx
lea ecx [ esp + 0x28 ]
call sub_412570
mov eax [ esp + 0x20 ]
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x14 ]
mov ecx [ esp + esi + 0x48 ]
inc [ esp + 0x14 ]
movzx eax [ ecx + eax * 2 ]
cmp eax 0x69
jg r-xdata
push eax
call sub_4218fb
pop ecx
push eax
lea ecx [ esp + 0x1bc ]
call sub_407b6e
mov eax [ esp + esi + 0x48 ]
mov [ esp + 0x14 ] 0x2
movzx eax [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x6d
je r-xdata
je r-xdata
test ax ax
jne r-xdata
mov eax [ esp + esi + 0x44 ]
mov ecx ebx
mov esi [ eax ]
mov [ esp + 0x10 ] eax
call sub_412570
mov ecx [ esp + 0x38 ]
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0x18 ]
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
call sub_41d612
cmp [ esp + 0x20 ] 0x1
pop ecx
jbe r-xdata
cmp eax 0x72
je r-xdata
mov eax [ esp + esi + 0x44 ]
mov ecx ebx
mov esi [ eax ]
mov [ esp + 0x10 ] eax
call sub_412570
cmp [ esp + 0x1c ] 0x1
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
jbe r-xdata
sub eax 0x23
je r-xdata
cmp ax 0x27
je r-xdata
inc [ esp + 0x14 ]
lea eax [ esp + 0x1b8 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407bef
lea ecx [ esp + 0x1b8 ]
call sub_405cd3
jmp r-xdata
mov eax [ esp + 0x14 ]
mov esi [ esp + 0x38 ]
lea esi [ esi + eax * 2 ]
mov [ esp + 0x10 ] esi
movzx eax [ esi ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_41d5f6
test al al
jne r-xdata
mov eax [ esp + esi + 0x44 ]
mov ecx ebx
mov esi [ eax ]
mov [ esp + 0x10 ] eax
call sub_412570
mov ecx [ esp + 0x38 ]
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0x18 ]
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
call sub_41d612
inc [ esp + 0x18 ]
pop ecx
mov ecx [ esp + 0x38 ]
lea eax [ esp + 0x24 ]
push eax
lea edx [ esp + 0x18 ]
call sub_41d612
cmp [ esp + 0x20 ] 0x1
pop ecx
jbe r-xdata
cmp eax 0x76
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_41d5f6
test al al
je r-xdata
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0x18 ]
call sub_41d612
mov eax [ esp + 0x24 ]
pop ecx
dec eax
je r-xdata
sub eax 0x30
je r-xdata
push eax
lea ecx [ esp + 0x1bc ]
call sub_40bd2f
mov eax [ esp + 0x14 ]
mov ecx [ esp + esi + 0x48 ]
inc eax
mov [ esp + 0x14 ] eax
movzx eax [ ecx + eax * 2 ]
cmp eax 0x2a
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_40cdb4
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x20 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_41d5f6
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
call sub_40cdb4
jmp r-xdata
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ rw-data ] bl
mov ecx esi
sete bl
call sub_412570
cmp [ esp + 0x1c ] 0x1
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jbe r-xdata
dec eax
je r-xdata
mov eax [ esp + esi + 0x44 ]
mov ecx ebx
push [ eax ]
call sub_40ca8e
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
sub eax 0xf
jne r-xdata
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40d16a
test al al
je r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x28 ]
call sub_40cdb4
mov edx [ esp + 0x10 ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x20 ]
jl r-xdata
mov ecx [ esp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_41d5f6
test al al
je r-xdata
mov esi [ rw-data ]
mov ecx ebx
call sub_412570
cmp [ esp + 0x1c ] 0x1
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
jbe r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x14 ] eax
call sub_41d5f6
test al al
je r-xdata
dec eax
jne r-xdata
mov eax [ esp + esi + 0x44 ]
mov ecx ebx
movzx esi [ eax ]
mov [ esp + 0x10 ] eax
call sub_412570
cmp [ esp + 0x1c ] 0x1
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
jbe r-xdata
mov [ edx ] eax
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40d16a
test al al
je r-xdata
cmp ecx [ esp + 0x24 ]
jg r-xdata
mov esi [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
call sub_40cdb4
mov esi eax
mov [ esp + 0x18 ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
mov esi [ edi + 0x2f4 ]
mov ecx ebx
call sub_412570
cmp [ esp + 0x1c ] 0x1
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
jbe r-xdata
mov ecx [ esp + 0x10 ]
call sub_4084a6
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x8 ]
lea ecx [ esp + 0x28 ]
call sub_4084a6
mov eax [ esp + 0x30 ]
jmp r-xdata
mov esi [ esp + esi + 0x44 ]
push esi
mov ecx ebx
call sub_40ca8e
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_41d5f6
test al al
jne r-xdata
mov edx [ esp + 0x10 ]
jmp r-xdata
call sub_402b94
jmp r-xdata
call sub_403598
jmp r-xdata
mov ecx rw-data
test esi esi
jne r-xdata
push 0x29
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_41d5f6
test al al
je r-xdata
push [ eax ]
mov ecx [ esp + esi + 0x48 ]
call sub_407e53
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x14 ] eax
call sub_41d5f6
test al al
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_40cdb4
test eax eax
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
mov [ edx ] ecx
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
call sub_40cdb4
mov ecx eax
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov esi [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
call sub_40cdb4
mov esi eax
mov [ esp + 0x18 ] esi
jmp r-xdata
mov ecx [ esp + 0x10 ]
call sub_4084a6
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov eax [ eax ]
mov ax [ eax ]
lea ecx [ esp + 0x28 ]
call sub_40cdb4
jmp r-xdata
mov ecx [ esp + 0x10 ]
setne al
mov [ ecx ] al
test cl 0x2
je r-xdata
mov [ rw-data ] al
inc eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] 0x101
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] eax
test cl 0x1
je r-xdata
mov [ edi + 0x2f4 ] esi
jmp r-xdata
push esi
call sub_422626
dec eax
pop ecx
cmp eax 0x3
ja r-xdata
mov [ esi ] ax
jmp r-xdata
test cl 0x4
je r-xdata
or eax 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] eax
test cl 0x8
je r-xdata
or eax 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] eax
or eax 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] eax
jmp r-xdata
sub_41d5f6
push ebp
mov ebp esp
push esi
push 0xa
mov esi ecx
call sub_40d2c0
test al al
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_41d612
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi ecx
xor eax eax
mov esi edx
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x1 ] al
test edi edi
je r-xdata
xor al al
jmp r-xdata
mov eax [ esi ]
movzx eax [ edi + eax * 2 ]
push eax
call sub_4222f0
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
inc [ esi ]
jmp r-xdata
mov ecx [ esi ]
push ebx
movzx eax [ edi + ecx * 2 ]
mov ebx [ ebp + 0x8 ]
xor edx edx
mov [ ebx ] edx
sub eax 0x2b
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ esi ]
cmp [ edi + eax * 2 ] dx
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov ecx [ ebx ]
imul ecx [ ebp - 0x8 ]
mov al [ ebp - 0x1 ]
mov [ ebx ] ecx
pop ebx
mov eax [ esi ]
movzx eax [ edi + eax * 2 ]
push eax
call sub_422952
pop ecx
test eax eax
je r-xdata
mov eax [ ebx ]
mov edx [ esi ]
imul eax eax 0xa
movzx ecx [ edi + edx * 2 ]
add eax 0xffffffd0
add eax ecx
lea ecx [ edx + 0x1 ]
mov [ ebx ] eax
xor eax eax
mov [ ebp - 0x1 ] 0x1
mov [ esi ] ecx
cmp [ edi + ecx * 2 ] ax
jne r-xdata
sub_41d6b4
push ebp
mov ebp esp
push esi
push 0x10
mov esi ecx
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_40caee
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41d6e5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov ecx [ esi + 0x4 ]
mov ebx eax
mov esi [ ecx ]
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ edx ]
mov esi [ edx + 0x4 ]
mov [ esp + 0x18 ] eax
mov eax [ edx + 0xc ]
mov [ esp + 0x10 ] ecx
inc [ eax ]
push esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x20 ] eax
call sub_407b6e
cmp ebx 0x8
je r-xdata
xor edi edi
test esi esi
je r-xdata
test bl 0x1
jne r-xdata
lea eax [ esp + 0x20 ]
jmp r-xdata
push edi
lea ecx [ esp + 0x14 ]
call sub_40a4f6
mov cx [ eax ]
call sub_41dd62
test eax eax
jne r-xdata
test esi esi
je r-xdata
test bl 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ esp + 0x20 ]
call sub_405cd3
lea ecx [ esp + 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
cmp edi esi
jb r-xdata
push edi
lea ecx [ esp + 0x14 ]
call sub_40a4f6
movzx eax [ eax ]
push eax
lea ecx [ esp + 0x24 ]
call sub_40bd2f
xor edi edi
test esi esi
je r-xdata
test bl 0x4
jne r-xdata
test esi esi
je r-xdata
sub esi edi
push esi
push edi
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407f40
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_40c935
mov esi [ esp + 0x14 ]
jmp r-xdata
push edi
lea ecx [ esp + 0x14 ]
call sub_40a4f6
mov cx [ eax ]
call sub_41dd62
test eax eax
je r-xdata
test esi esi
je r-xdata
lea eax [ esp + 0x10 ]
dec esi
cmp esi 0xffffffff
je r-xdata
inc edi
cmp edi esi
jb r-xdata
push 0xffffffff
push 0x0
lea ecx [ esp + 0x28 ]
call sub_40a2fb
xor bl bl
xor edi edi
test esi esi
je r-xdata
lea eax [ esi + 0x1 ]
push eax
push 0x0
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407f40
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_40c935
mov esi [ esp + 0x14 ]
push esi
lea ecx [ esp + 0x14 ]
call sub_40a4f6
mov cx [ eax ]
call sub_41dd62
test eax eax
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_40c935
jmp r-xdata
push edi
lea ecx [ esp + 0x14 ]
call sub_40a4f6
mov cx [ eax ]
call sub_41dd62
test eax eax
je r-xdata
xor bl bl
test bl bl
jne r-xdata
inc edi
cmp edi esi
jb r-xdata
inc bl
jmp r-xdata
push edi
lea ecx [ esp + 0x14 ]
call sub_40a4f6
movzx eax [ eax ]
push eax
lea ecx [ esp + 0x24 ]
call sub_40bd2f
sub_41d7c7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x8 ]
push 0x400
lea ecx [ esp + 0x24 ]
call sub_407b6e
mov esi 0x20000
push esi
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x18 ]
call sub_404bce
push esi
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x5c ]
call sub_404bce
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ebx [ esi + 0x8 ]
lea ecx [ esp + 0x48 ]
call sub_40d3d2
lea ecx [ esp + 0x60 ]
call sub_407d70
push r--data
lea ecx [ esp + 0x34 ]
call sub_40caee
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x64 ]
call sub_405be9
lea ecx [ esp + 0x30 ]
call sub_405cd3
push ebx
lea ecx [ esp + 0x64 ]
call sub_407e36
xor esi esi
mov ecx esi
lea eax [ edi - 0x1 ]
mov [ esp + 0x30 ] r--data
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] esi
mov [ esp + 0x3c ] esi
mov [ esp + 0x10 ] ecx
mov [ esp + 0x40 ] eax
cmp esi [ ebx + 0x4 ]
jge r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_407bef
lea ecx [ esp + 0x30 ]
call sub_4404e2
lea ecx [ esp + 0x60 ]
call sub_405cbb
lea ecx [ esp + 0x48 ]
call sub_405cd3
lea ecx [ esp + 0x58 ]
call sub_404fd2
lea ecx [ esp + 0x14 ]
call sub_404fd2
lea ecx [ esp + 0x20 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ecx
lea eax [ esp + 0x34 ]
push eax
push esi
lea ecx [ esp + 0x6c ]
call sub_41ddb6
test eax eax
jle r-xdata
cmp esi [ ebx + 0x4 ]
jl r-xdata
mov eax [ esp + 0x34 ]
lea ecx [ esp + 0x20 ]
mov eax [ eax ]
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax edi
sub eax esi
push eax
push esi
push ebx
call sub_40bbd9
mov esi [ esp + 0x1c ]
add esi edi
push edi
mov ecx ebx
mov [ esp + 0x48 ] esi
call sub_41db6f
push 0x25
pop ecx
cmp [ eax ] cx
jne r-xdata
push 0xffffffff
push esi
push ebx
lea ecx [ esp + 0x2c ]
call sub_40bbd9
jmp r-xdata
push edi
mov ecx ebx
call sub_41db6f
push 0x5c
pop ecx
cmp [ eax ] cx
je r-xdata
lea eax [ edi + 0x1 ]
push eax
mov ecx ebx
call sub_41db6f
push 0x25
pop ecx
cmp [ eax ] cx
je r-xdata
lea eax [ edi + 0x1 ]
push eax
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
push 0x5c
pop edi
sub eax edi
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x40 ]
je r-xdata
push ecx
jmp r-xdata
push edi
jmp r-xdata
sub eax 0x12
je r-xdata
cmp esi [ ebx + 0x4 ]
jl r-xdata
push [ esp + 0x1c ]
inc eax
push edi
push ebx
lea ecx [ esp + 0x54 ]
mov [ esp + 0x1c ] eax
call sub_407f40
mov eax [ esp + 0x4c ]
dec eax
push eax
lea ecx [ esp + 0x4c ]
call sub_40a4f6
movzx eax [ eax ]
cmp eax 0x69
jg r-xdata
lea ecx [ esp + 0x24 ]
call sub_40bd2f
jmp r-xdata
push 0xa
jmp r-xdata
sub eax 0x4
je r-xdata
sub eax 0x6f
je r-xdata
je r-xdata
push 0xd
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx * 4 ]
call sub_40cdb4
push eax
push [ esp + 0x4c ]
push [ esp + 0x1c ]
call sub_42234b
sub eax 0x4
je r-xdata
cmp eax 0x45
je r-xdata
jmp r-xdata
push [ esp + 0x14 ]
lea ecx [ esp + 0x24 ]
call sub_4039e8
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + ecx * 4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ esp + 0x58 ]
push 0xffff
push [ eax ]
push esi
call sub_422c1d
add esp 0xc
xor eax eax
push esi
push [ esp + 0x4c ]
mov [ esi + 0x1fffe ] ax
push [ esp + 0x1c ]
call sub_42234b
mov esi [ esp + 0x50 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx * 4 ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x50 ]
push [ esp + 0x20 ]
call sub_42234b
add esp 0x10
cmp eax 0x47
je r-xdata
push 0x9
add esp 0xc
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x58
je r-xdata
cmp eax 0x64
je r-xdata
add eax 0xffffff9b
cmp eax 0x2
ja r-xdata
sub_41da0a
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push ebx
push esi
call sub_40c4cd
mov esi [ ebp + 0x14 ]
xor bl bl
cmp [ ebp + 0x8 ] 0x0
mov al 0x1
je r-xdata
test bl bl
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov al bl
cmp ax [ ebp + 0x8 ]
je r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push eax
call sub_40bd2f
inc [ esi ]
jmp r-xdata
push [ esi ]
mov ecx [ ebp + 0xc ]
call sub_41db6f
movzx eax [ eax ]
test ax ax
je r-xdata
sub_41da5a
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push ebx
xor edx edx
xor ebx ebx
push esi
inc ebx
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] edx
cmp [ eax + 0x4 ] edx
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
mov [ ecx ] dl
mov ecx [ ebp + 0x14 ]
mov [ edi ] edx
mov [ ecx ] dl
mov [ eax ] dl
mov [ ebp - 0xc ] 0x2b
mov [ ebp - 0x8 ] 0x23
mov edi edx
pop edi
pop esi
pop ebx
leave
retn 0x18
cmp ax [ ebp - 0xc ]
jne r-xdata
cmp ax cx
je r-xdata
cmp ax cx
jne r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
cmp ax dx
je r-xdata
cmp ax dx
jne r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
mov [ eax ] bl
cmp ax [ ebp - 0x8 ]
je r-xdata
push 0x23
pop ecx
cmp ax cx
jne r-xdata
mov eax [ ebp + 0x18 ]
jmp r-xdata
push edi
mov ecx esi
call sub_41db6f
movzx eax [ eax ]
push 0x2b
pop ecx
push 0x5e
cmp ax cx
pop ecx
push 0x21
pop edx
je r-xdata
push edi
inc edi
mov ecx esi
mov [ ebp + 0x1c ] edi
call sub_41db6f
movzx eax [ eax ]
mov esi [ ebp - 0x10 ]
mov edi [ ebp + 0xc ]
cmp eax 0x7b
jne r-xdata
inc edi
jmp r-xdata
mov eax [ ebp + 0x1c ]
push eax
call [ VkKeyScanW@IAT ]
cwde
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
push 0x40
lea ecx [ ebp - 0x20 ]
call sub_407b6e
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
push 0x7d
call sub_41da0a
test al al
je r-xdata
test eax 0x200
je r-xdata
xor bl bl
jmp r-xdata
push [ ebp - 0x20 ]
push [ esi * 4 + rw-data ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
test eax 0x400
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] bl
lea ecx [ ebp - 0x20 ]
call sub_405cd3
cmp esi 0x62
je r-xdata
inc esi
cmp esi 0x62
jl r-xdata
test eax 0x100
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] bl
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_40a4f6
movzx eax [ eax ]
push eax
call [ VkKeyScanW@IAT ]
cwde
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ esi + rw-data ] 0x0
jne r-xdata
and [ edi ] 0xff
mov al bl
mov eax [ ebp + 0x10 ]
mov [ eax ] bl
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_405cd3
test eax 0x200
je r-xdata
movzx eax [ esi + rw-data ]
mov [ edi ] eax
test eax 0x400
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] bl
test eax 0x100
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] bl
mov eax [ ebp + 0x10 ]
mov [ eax ] bl
jmp r-xdata
sub_41db6f
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi edx
jae r-xdata
lea eax [ eax + edx * 2 ]
jmp r-xdata
lea eax [ eax + esi * 2 ]
pop esi
pop ebp
retn 0x4
sub_41db8c
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x20
mov [ ebp - 0x4 ] ecx
pop ecx
push 0x9
xor ebx ebx
pop esi
mov edx ebx
mov [ ebp - 0x18 ] esi
inc edx
jmp r-xdata
cmp ax si
je r-xdata
movzx eax [ edi + edx * 2 ]
cmp ax cx
je r-xdata
movzx eax [ edi + edx * 2 ]
push 0x22
pop ecx
mov [ ebp - 0x8 ] ecx
cmp ax cx
jne r-xdata
push 0x27
pop ecx
mov [ ebp - 0x8 ] ecx
cmp ax cx
je r-xdata
mov [ ebp + 0xb ] 0x1
cmp eax 0x3c
jne r-xdata
cmp [ edi + edx * 2 ] cx
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
xor al al
jmp r-xdata
push 0x3e
pop ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp + 0xb ] bl
jmp r-xdata
push 0x20
pop ecx
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x8 ]
xor ebx ebx
mov [ esi + ecx * 2 ] bx
inc ecx
inc edx
movzx ebx [ edi + edx * 2 ]
movzx eax bx
cmp eax [ ebp - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
inc edx
movzx esi cx
movzx eax [ edi + edx * 2 ]
mov [ ebp - 0x10 ] eax
movzx eax ax
mov [ ebp - 0x14 ] esi
cmp eax esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0xc ] ebx
je r-xdata
inc edx
movzx eax [ edi + edx * 2 ]
cmp ax cx
je r-xdata
cmp ax [ ebp - 0x18 ]
je r-xdata
test bx bx
je r-xdata
movzx eax [ edi + edx * 2 ]
test ax ax
jne r-xdata
cmp eax 0x3b
jne r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov [ esi + eax * 2 ] cx
mov ecx esi
call sub_403bcf
push eax
lea ecx [ ebp - 0x1c ]
call sub_404bce
mov edi [ ebp - 0x1c ]
push edi
call sub_41dd27
push edi
call sub_41dcee
cmp [ ebp + 0xb ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3c ] ebx
jbe r-xdata
mov ecx esi
call sub_41dd84
test al al
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_404fd2
mov al 0x1
mov eax [ eax + 0x38 ]
push [ eax + ebx * 4 ]
push esi
call sub_421943
push edi
push esi
call sub_421914
add esp 0x10
mov ecx esi
call sub_41dd84
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x3c ]
jmp r-xdata
jmp r-xdata
dec edi
jns r-xdata
push edi
push esi
call sub_421943
mov eax [ ebp - 0x4 ]
inc ebx
pop ecx
pop ecx
cmp ebx [ eax + 0x3c ]
jb r-xdata
mov eax [ eax + 0x38 ]
push [ eax + edi * 4 ]
push esi
call sub_421943
push [ ebp - 0x1c ]
push esi
call sub_421914
add esp 0x10
mov ecx esi
call sub_41dd84
test al al
jne r-xdata
jmp r-xdata
jmp r-xdata
push [ ebp - 0x1c ]
push esi
call sub_421943
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
sub_41dcee
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4218fb
pop ecx
test eax eax
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
lea esi [ eax - 0x1 ]
test esi esi
js r-xdata
xor eax eax
mov [ edi + esi * 2 + 0x2 ] ax
pop esi
mov cx [ edi + esi * 2 ]
call sub_41dd62
test eax eax
jne r-xdata
dec esi
jns r-xdata
jmp r-xdata
sub_41dd27
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx esi
movzx eax [ edi + esi * 2 ]
test ax ax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
mov [ edi + ebx * 2 ] ax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edi + ebx * 2 ] ax
inc ebx
inc esi
jmp r-xdata
mov cx [ edi + esi * 2 ]
call sub_41dd62
test eax eax
je r-xdata
sub_41dd62
push esi
mov esi ecx
push esi
call sub_4222cd
pop ecx
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_4222f0
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop esi
retn
sub_41dd92
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
push esi
mov esi ecx
push esi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push esi
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ FindClose@IAT ]
mov eax [ esp + 0x8 ]
jmp r-xdata
or eax eax
jmp r-xdata
sub_41ddb6
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x24 ] edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
call sub_402982
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_41de96
test eax eax
jle r-xdata
cmp [ esi + 0x34 ] edi
jle r-xdata
mov eax [ esi + 0x34 ]
mov ebx edi
mov eax [ esi + 0x2c ]
mov ecx [ eax + ebx ]
mov eax [ eax + ebx + 0x4 ]
sub eax ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_41de23
inc edi
lea ebx [ ebx + 0x8 ]
cmp edi [ esi + 0x34 ]
jl r-xdata
sub_41de23
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
cmp eax 0x8
jae r-xdata
push 0x8
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
jne r-xdata
push 0x8
pop eax
xor edi edi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov ecx [ edx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
jmp r-xdata
sub_41de96
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
cmp [ edi ] 0xffffffff
je r-xdata
mov edx [ esi + 0x28 ]
cmp [ edi ] edx
jg r-xdata
push [ esi + 0x30 ]
mov eax [ esi + 0x40 ]
push [ esi + 0x2c ]
or eax [ esi + 0x38 ]
push eax
push [ edi ]
push edx
push [ esi ]
call sub_408ca0
add esp 0x18
mov [ esi + 0x34 ] eax
test eax eax
jle r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x4 ]
and [ esi + 0x38 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov [ edi ] ecx
mov eax [ esi + 0x34 ]
mov edx [ eax ]
cmp edx [ eax + 0x4 ]
je r-xdata
and [ esi + 0x38 ] 0x0
inc [ edi ]
jmp r-xdata
mov eax [ esi + 0x28 ]
cmp edx eax
jne r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov [ esi + 0x38 ] 0x10000010
jmp r-xdata
lea ecx [ eax + 0x1 ]
jmp r-xdata
sub_41df08
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41df5b
test al al
je r-xdata
push 0x10
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
push ecx
call sub_401926
jmp r-xdata
mov [ esi ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41df8a
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x3
je r-xdata
pop esi
leave
retn
call sub_412620
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
sub_41dfd2
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x2
push edi
je r-xdata
push esi
mov esi [ ebp + 0xc ]
xor edi edi
mov ecx edi
cmp esi [ ebp + 0x14 ]
ja r-xdata
cmp [ ebp + 0x18 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1
jne r-xdata
test esi esi
je r-xdata
mov esi [ ebp + 0x14 ]
push 0x409
jmp r-xdata
push 0x400
sub edi ecx
pop esi
jns r-xdata
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
sub eax ebx
mov [ ebp + 0x14 ] eax
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add eax 0xfffffffe
xor eax eax
test edi edi
setg al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
add ebx 0x2
test esi esi
jne r-xdata
push edx
call sub_423b6c
movzx edi ax
movzx eax [ ebx ]
push eax
call sub_423b6c
pop ecx
pop ecx
movzx ecx ax
cmp edi ecx
jne r-xdata
pop edi
pop ebp
retn 0x14
movzx edx [ eax + ebx ]
dec esi
cmp dx [ ebx ]
je r-xdata
pop ebx
mov eax [ ebp + 0x14 ]
sub_41e016
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0xd ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi ]
call sub_40d89e
push [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_40d89e
mov [ esi + 0xd ] 0x0
jmp r-xdata
push edi
push 0x18
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
inc [ esi + 0x4 ]
pop esi
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
push [ ebp + 0x8 ]
and [ edi + 0x8 ] 0x0
mov ecx edi
call sub_4113a0
mov eax [ esi + 0x8 ]
mov [ edi + 0x10 ] eax
mov [ esi + 0x8 ] edi
pop edi
jmp r-xdata
sub_41e08f
push ebp
mov ebp esp
sub esp 0x364
push ebx
push esi
push edi
mov [ ebp - 0x18 ] ecx
xor eax eax
push 0x104
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x360 ] ax
call sub_407b6e
mov eax [ ebp + 0x8 ]
xor edi edi
mov esi [ eax ]
mov ebx edi
mov esi [ ebp - 0x18 ]
cmp ebx 0x61
je r-xdata
inc ebx
cmp ebx 0x61
jl r-xdata
push r--data
lea ecx [ ebp - 0x3c ]
call sub_40caee
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] edi
call sub_407b4b
push edi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_40d2d2
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ebx 0x60
ja r-xdata
push esi
push [ ebx * 4 + rw-data ]
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40d89e
or edi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x8
jmp [ ebx * 4 + jump_table_41e203 ]
call sub_405cd3
jmp r-xdata
lea ecx [ ebp - 0x3c ]
jmp r-xdata
lea eax [ esi + 0xd8 ]
push r--data
lea eax [ esi + 0xc8 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push 0x26
jmp r-xdata
push 0x2b
jmp r-xdata
push 0x5
jmp r-xdata
push 0x23
jmp r-xdata
push 0x19
jmp r-xdata
push 0x2e
jmp r-xdata
push 0x1f
jmp r-xdata
push 0x17
jmp r-xdata
push 0x16
jmp r-xdata
push 0x18
jmp r-xdata
push 0x1c
jmp r-xdata
push 0x1a
jmp r-xdata
push 0x10
jmp r-xdata
push 0x6
jmp r-xdata
push 0x2
jmp r-xdata
push 0xb
jmp r-xdata
lea eax [ esi + 0xb8 ]
jmp r-xdata
push r--data
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
push 0x3
jmp r-xdata
push 0x4
jmp r-xdata
lea eax [ esi + 0x150 ]
jmp r-xdata
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov edi [ eax + 0x14 ]
jmp r-xdata
mov edi [ esi + 0x14c ]
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
add eax 0x20
push eax
call sub_40d89e
jmp r-xdata
lea eax [ ebp - 0x124 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x116 ]
push eax
push r--data
jmp r-xdata
lea ecx [ ebp - 0x12c ]
call sub_45eb88
mov ecx eax
call sub_45eb17
push eax
push r--data
lea eax [ ebp - 0x360 ]
push eax
push 0x104
push r--data
mov edx r--data
mov ecx 0x80000002
call sub_41c955
push r--data
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x104 ]
call sub_45eb88
mov ecx eax
call sub_45eabc
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0x7c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp - 0xa4 ]
call sub_45eb88
mov ecx eax
call sub_45eabc
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0xfc ]
push r--data
lea eax [ ebp - 0x8c ]
push eax
lea ecx [ ebp - 0xbc ]
call sub_45eb88
mov ecx eax
call sub_45eabc
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0x8c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x9c ]
push eax
lea ecx [ ebp - 0x13c ]
call sub_45eb88
mov ecx eax
call sub_45eabc
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0x9c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0xb4 ]
push eax
lea ecx [ ebp - 0xec ]
call sub_45eb88
mov ecx eax
call sub_45eabc
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0xb4 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0xcc ]
push eax
lea ecx [ ebp - 0xd4 ]
call sub_45eb88
mov ecx eax
call sub_45eabc
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0xcc ]
jmp r-xdata
push r--data
lea eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0x134 ]
call sub_45eb88
mov ecx eax
call sub_45eabc
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0xe4 ]
jmp r-xdata
push 0x7
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
mov [ ebp - 0x14 ] 0x104
call [ GetComputerNameW@IAT ]
jmp r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x104
cmp [ eax + 0x30 ] 0x0
lea eax [ ebp - 0x360 ]
push eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x6
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x3
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x9
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x5
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0xa
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x2
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x7
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x8
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x4
jmp r-xdata
xor ebx ebx
inc ebx
cmp [ rw-data ] bl
jmp r-xdata
xor ebx ebx
inc ebx
cmp [ rw-data ] bl
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x40
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x41
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x42
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x43
jmp r-xdata
mov eax [ esi + 0xf8 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x360 ]
push eax
push 0x104
call [ GetCurrentDirectoryW@IAT ]
jmp r-xdata
mov eax [ rw-data ]
movzx eax [ eax + 0x32 ]
test eax eax
je r-xdata
xor ecx ecx
mov eax 0x80000001
cpuid
lea esi [ ebp - 0x114 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0x108 ] 0x20000000
mov eax r--data
jne r-xdata
mov eax [ rw-data ]
xor ebx ebx
inc ebx
cmp [ eax + 0x2c ] bl
jne r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x360 ]
push eax
push 0x104
push r--data
mov edx r--data
mov ecx 0x80000001
call sub_41c955
movzx eax [ ebp - 0x360 ]
add esp 0xc
lea ecx [ ebp - 0x360 ]
push edi
push eax
push 0x4
pop edx
mov [ ebp - 0x14 ] eax
call sub_40ca32
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x150 ]
push eax
call [ GetKeyboardLayoutNameW@IAT ]
lea eax [ ebp - 0x150 ]
jmp r-xdata
lea eax [ ebp - 0x360 ]
push r--data
push eax
call sub_421943
lea eax [ ebp - 0x360 ]
push eax
mov esi edi
mov ebx edi
call sub_4218fb
add esp 0xc
test eax eax
jle r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push edi
call [ GetModuleFileNameW@IAT ]
jmp r-xdata
push 0x2
lea eax [ ebp - 0x6c ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x64 ]
jmp r-xdata
lea eax [ ebp - 0x6c ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
call [ GetDesktopWindow@IAT ]
push eax
mov [ ebp + 0x8 ] eax
call [ GetDC@IAT ]
push 0xc
jmp r-xdata
call [ GetDesktopWindow@IAT ]
push eax
mov [ ebp + 0x8 ] eax
call [ GetDC@IAT ]
push 0x74
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push r--data
lea eax [ ebp - 0x360 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
lea ecx [ ebp - 0x360 ]
call sub_4021bc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
mov [ ebp - 0x14 ] 0x104
call [ GetUserNameW@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor ebx ebx
inc ebx
jmp r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x360 ]
push eax
push r--data
jmp r-xdata
call [ GetCurrentProcessId@IAT ]
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x10 ]
pop ecx
call sub_4479f8
lea eax [ ebp - 0x10 ]
jmp r-xdata
lea edx [ ebp - 0x5c ]
call sub_4478ee
lea eax [ ebp - 0x5c ]
jmp r-xdata
pop ecx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
xor edi edi
jmp r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea eax [ ebp - 0x360 ]
push eax
call sub_42234b
jmp r-xdata
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x360 ]
jmp r-xdata
jmp r-xdata
call [ GetSystemDirectoryW@IAT ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] edi
call sub_45eaa4
call eax
cmp [ ebp - 0x2c ] edi
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
je r-xdata
call sub_412570
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] edi
jmp r-xdata
push eax
call sub_4433b0
mov edi eax
jmp r-xdata
mov eax [ esi + 0xf4 ]
push r--data
jmp r-xdata
cmp eax 0x6
je r-xdata
push eax
jmp r-xdata
mov eax r--data
jmp r-xdata
cmp [ eax + 0x2e ] bl
jne r-xdata
push r--data
jmp r-xdata
xor eax eax
mov [ ebp + esi * 2 - 0x360 ] ax
jmp r-xdata
push 0x20
pop edi
push 0x2e
pop ecx
mov ebx eax
push ebx
call [ GetDeviceCaps@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
push ebx
push [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call [ ReleaseDC@IAT ]
xor edi edi
jmp r-xdata
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x20 ]
mov ecx esi
fstp [ ebp - 0x20 ]
call sub_412570
fld [ ebp - 0x20 ]
mov [ esi + 0xc ] 0x3
fstp [ esi ]
jmp r-xdata
fadd [ r--data ]
push [ ebp - 0x2c ]
call [ FreeLibrary@IAT ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp eax 0x9
je r-xdata
cmp [ eax + 0x2a ] bl
jne r-xdata
push r--data
jmp r-xdata
lea eax [ ebp - 0x360 ]
push eax
inc ebx
call sub_4218fb
pop ecx
push 0x2e
pop ecx
cmp ebx eax
jl r-xdata
cmp eax 0x2c
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x28 ] bl
jne r-xdata
push r--data
jmp r-xdata
movzx eax [ ebp + ebx * 2 - 0x360 ]
cmp ax di
je r-xdata
xor edi edi
mov [ ebp + esi * 2 - 0x360 ] ax
mov [ ebp + esi * 2 - 0x360 ] cx
jmp r-xdata
call sub_40ca8e
jmp r-xdata
cmp [ eax + 0x26 ] bl
jne r-xdata
push r--data
jmp r-xdata
inc esi
cmp [ eax + 0x24 ] bl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x22 ] bl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x20 ] bl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x1e ] bl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x1c ] bl
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x34 ] 0x0
mov eax r--data
jne r-xdata
jmp r-xdata
mov eax r--data
sub_41e3a5
push esi
push edi
mov esi ecx
call [ timeGetTime@IAT ]
mov ecx eax
mov edi 0x7fffffff
sub eax esi
xor edx edx
cmp esi edi
jbe r-xdata
cmp ecx edi
ja r-xdata
cmp ecx edi
jbe r-xdata
pop edi
pop esi
retn
cdq
jmp r-xdata
sub_41e3ee
mov eax [ ecx + 0xc ]
dec eax
je r-xdata
cmp [ ecx ] 0x0
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov eax [ ecx ]
or eax [ ecx + 0x4 ]
jmp r-xdata
dec eax
je r-xdata
xor al al
retn
mov al 0x1
retn
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
dec eax
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
cmp [ ecx ] eax
setne al
retn
dec eax
dec eax
jne r-xdata
dec eax
dec eax
jne r-xdata
mov al [ ecx ]
retn
mov eax [ ecx ]
cmp [ eax ] 0x0
sub_41e44f
push esi
push 0x38
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
call sub_41e74b
push ecx
mov ecx esi
call sub_41e47b
mov [ rw-data ] eax
mov eax rw-data
pop esi
retn
sub_41e47b
push ebp
mov ebp esp
sub esp 0x15c
push ebx
mov ebx ecx
push esi
lea esi [ ebx + 0xc ]
mov ecx esi
call sub_40d3d2
lea eax [ ebp - 0x15c ]
push eax
mov [ ebx + 0x34 ] 0x0
mov [ ebp - 0x15c ] 0x11c
call [ GetVersionExW@IAT ]
mov eax [ ebp - 0x158 ]
mov [ ebx ] eax
mov eax [ ebp - 0x154 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp - 0x150 ]
mov [ ebx + 0x8 ] eax
lea eax [ ebp - 0x148 ]
push eax
mov ecx esi
call sub_407e53
push ecx
mov ecx esi
call sub_41e5f8
push r--data
mov ecx esi
call sub_41e617
mov eax [ ebx ]
xor edx edx
push 0x1
mov [ ebx + 0x2f ] dx
mov [ ebx + 0x1c ] edx
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x28 ] edx
mov [ ebx + 0x2c ] dx
mov [ ebx + 0x2e ] dl
pop ecx
sub eax 0x5
je r-xdata
cmp [ ebx + 0x4 ] ecx
jne r-xdata
dec eax
jne r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
mov [ ebx + 0x1d ] cl
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
call sub_41e6d1
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x1d ] cl
mov [ ebx + 0x1f ] cl
test eax eax
je r-xdata
movzx eax [ ebp - 0x44 ]
shr eax 0x6
and eax ecx
mov [ ebx + 0x34 ] al
jmp r-xdata
mov [ ebx + 0x1d ] cl
mov [ ebx + 0x1f ] cl
cmp [ ebp - 0x42 ] cl
je r-xdata
mov esi [ FreeLibrary@IAT ]
push edi
push 0x8
xor edx edx
pop ecx
xor eax eax
lea edi [ ebp - 0x3c ]
mov [ ebp - 0x40 ] edx
[ edi ]
pop edi
cmp [ ebx + 0x30 ] al
je r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_41e70e
call eax
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov [ ebx + 0x21 ] cl
cmp [ ebp - 0x42 ] cl
jne r-xdata
cmp eax ecx
je r-xdata
mov [ ebx + 0x1c ] cl
mov [ ebx + 0x1e ] cl
jmp r-xdata
lea eax [ ebp - 0x40 ]
push eax
call [ GetSystemInfo@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x14 ] edx
call sub_41e694
test al al
lea eax [ ebp - 0x40 ]
push eax
je r-xdata
mov [ ebx + 0x30 ] 0x1
mov [ ebx + 0x23 ] cl
mov [ ebx + 0x22 ] cl
jmp r-xdata
mov [ ebx + 0x20 ] cl
jmp r-xdata
mov [ ebx + 0x21 ] cl
mov [ ebx + 0x23 ] cl
mov [ ebx + 0x25 ] cl
cmp [ ebp - 0x42 ] cl
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
mov ax [ ebp - 0x40 ]
mov [ ebx + 0x32 ] ax
je r-xdata
call [ GetSystemInfo@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_41e437
call eax
mov [ ebx + 0x27 ] cl
mov [ ebx + 0x26 ] cl
jmp r-xdata
mov [ ebx + 0x24 ] cl
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov [ ebx + 0x27 ] cl
mov [ ebx + 0x25 ] cl
mov [ ebx + 0x21 ] cl
mov [ ebx + 0x29 ] cl
cmp [ ebp - 0x42 ] cl
jne r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn 0x4
push [ ebp - 0x10 ]
call esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x1c ]
call esi
mov [ ebx + 0x2b ] cl
mov [ ebx + 0x29 ] cl
mov [ ebx + 0x27 ] cl
mov [ ebx + 0x25 ] cl
mov [ ebx + 0x21 ] cl
mov [ ebx + 0x2d ] cl
cmp [ ebp - 0x42 ] cl
jne r-xdata
mov [ ebx + 0x2b ] cl
mov [ ebx + 0x2a ] cl
jmp r-xdata
mov [ ebx + 0x28 ] cl
mov [ ebx + 0x2f ] cl
mov [ ebx + 0x2e ] cl
jmp r-xdata
mov [ ebx + 0x2c ] cl
jmp r-xdata
sub_41e5f8
push esi
push ecx
mov esi ecx
call sub_41e673
mov ecx esi
cmp eax 0xffffffff
jne r-xdata
push eax
jmp r-xdata
push eax
push 0x0
call sub_40a2fb
pop esi
retn 0x4
sub_41e617
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41e63e
push 0xffffffff
mov ecx esi
cmp eax 0xffffffff
jne r-xdata
inc eax
push eax
jmp r-xdata
push 0x0
call sub_40a2fb
pop esi
pop ebp
retn 0x4
sub_41e63e
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov eax ecx
push edi
mov edi [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] edi
lea edx [ edi - 0x1 ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
or eax 0xffffffff
xor ebx ebx
xor ecx ecx
test ax ax
je r-xdata
mov eax edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + edx * 2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
movzx eax ax
pop edi
pop esi
pop ebx
leave
retn 0x4
inc ebx
movzx eax [ edi + ebx * 2 ]
test ax ax
jne r-xdata
inc ecx
cmp [ ebp - 0xc ] ax
jne r-xdata
mov edi [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
dec edx
inc esi
cmp esi edi
jb r-xdata
jmp r-xdata
sub_41e673
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ecx + 0x4 ]
xor eax eax
test edi edi
jne r-xdata
mov ecx [ ecx ]
jmp r-xdata
or eax 0xffffffff
movzx esi [ ecx ]
push 0x20
xor ebx ebx
mov [ ebp - 0x4 ] esi
xor edx edx
pop esi
movzx esi [ ebx * 2 + r--data ]
inc ebx
test si si
jne r-xdata
inc edx
cmp [ ebp - 0x4 ] si
jne r-xdata
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
inc eax
add ecx 0x2
cmp eax edi
jb r-xdata
jmp r-xdata
sub_41e6a6
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_41e6e3
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_41e726
push esi
push 0xc
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
call sub_41e74b
mov [ rw-data ] esi
mov eax rw-data
pop esi
retn
sub_41e76d
push ebp
mov ebp esp
sub esp 0x1c
cmp [ rw-data ] 0x0
push esi
mov esi ecx
je r-xdata
push ebx
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
cmp [ esi + 0x149 ] 0x0
jne r-xdata
push 0x1
push ebx
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ esi + 0xfc ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x12
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
pop esi
leave
retn
mov [ esi + 0x100 ] 0x1
mov [ esi + 0xfc ] 0x1
lea eax [ ebp - 0x1c ]
push eax
mov ecx rw-data
call sub_41f381
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
pop ebx
mov bl [ rw-data ]
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ esi + 0xfc ] 0x1
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx rw-data
call sub_41ed1a
test eax eax
jne r-xdata
movzx eax bl
neg eax
sbb eax eax
and eax 0xb
xor eax eax
inc eax
jmp r-xdata
cmp [ esi + 0xfc ] 0x1
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
sub_41e850
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
fld [ r--data ]
push ecx
push ecx
mov ecx eax
fstp [ esp ]
call sub_41e8f6
mov eax [ esi + 0x4 ]
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
mov ecx [ eax ]
call sub_412620
fcomp [ r--data ]
fnstsw ax
test ah 0x1
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
jne r-xdata
call sub_412620
fmul [ ebp - 0x8 ]
push ecx
push ecx
fsub [ r--data ]
fstp [ esp ]
call sub_425810
fdiv [ ebp - 0x8 ]
mov edi [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx edi
fstp [ ebp - 0x8 ]
call sub_412570
fld [ ebp - 0x8 ]
jmp r-xdata
call sub_412620
fmul [ ebp - 0x8 ]
push ecx
push ecx
fadd [ r--data ]
fstp [ esp ]
call sub_4256e0
fdiv [ ebp - 0x8 ]
mov edi [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx edi
fstp [ ebp - 0x8 ]
call sub_412570
fld [ ebp - 0x8 ]
fstp [ edi ]
mov [ edi + 0xc ] 0x3
cmp [ esi + 0x8 ] 0x1
je r-xdata
push 0x0
mov ecx edi
call sub_40d00b
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_456927
push eax
mov ecx edi
call sub_40d89e
lea ecx [ ebp - 0x10 ]
call sub_412570
jmp r-xdata
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_41e8f6
push ebp
mov ebp esp
mov eax ecx
test ecx ecx
js r-xdata
neg eax
jmp r-xdata
fld1
fld st0
fld [ ebp + 0x8 ]
shr eax 0x1
je r-xdata
fmul st1
fstp st0
test ecx ecx
js r-xdata
fld st0
fmulp st1
jmp r-xdata
fdivp st1
pop ebp
retn
fstp st1
pop ebp
retn
test al 0x1
je r-xdata
sub_41e928
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
xor eax eax
lea edi [ esi + 0x18 ]
mov ecx edi
mov [ ebx ] ax
call sub_40c4cd
push edi
mov ecx esi
call sub_40a666
test al al
je r-xdata
xor al al
jmp r-xdata
push 0xffffffff
push 0xffe
mov ecx edi
call sub_40a2fb
push [ edi ]
push ebx
call sub_421943
pop ecx
pop ecx
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_41e975
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x63c
mov [ rw-data ] eax
push ebx
xor ebx ebx
push esi
push edi
push 0x400
mov [ rw-data ] bx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x66
call sub_42010a
pop ecx
mov [ rw-data ] eax
mov edi 0x104
push edi
lea eax [ esp + 0x24 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
push ebx
push ebx
lea eax [ esp + 0x238 ]
push eax
lea eax [ esp + 0x44c ]
push eax
lea eax [ esp + 0x30 ]
push eax
call sub_42297d
push edi
lea eax [ esp + 0x248 ]
push r--data
push eax
call sub_422bbc
push ebx
push ebx
lea eax [ esp + 0x258 ]
push eax
lea eax [ esp + 0x46c ]
push eax
lea eax [ esp + 0x50 ]
push eax
call sub_422bff
push 0x20a
call sub_42010a
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
inc ecx
mov [ rw-data ] ecx
lea ecx [ esp + 0x58 ]
push ecx
push eax
call sub_421943
add esp 0x40
lea ecx [ esp + 0x10 ]
call sub_40d3d2
lea eax [ esp + 0x10 ]
push eax
push ecx
call sub_41eb05
pop ecx
pop ecx
test al al
jne r-xdata
xor eax eax
mov esi ebx
mov [ esp + 0x20 ] ax
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_405cd3
pop edi
pop esi
mov eax rw-data
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
lea ecx [ esp + 0x14 ]
call sub_40a4f6
mov ax [ eax ]
mov [ esp + 0xc ] ax
xor eax eax
push esi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x12 ] ax
call sub_40a4f6
cmp [ eax ] bx
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_4218fb
pop ecx
test eax eax
je r-xdata
push esi
lea ecx [ esp + 0x14 ]
call sub_40a4f6
cmp [ eax ] 0x3b
je r-xdata
push 0x20a
call sub_42010a
mov ecx [ rw-data ]
mov edx [ rw-data ]
push edi
mov [ edx + ecx * 4 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
inc ecx
mov [ rw-data ] ecx
lea ecx [ esp + 0x28 ]
push ecx
push eax
call sub_422c1d
add esp 0x10
xor eax eax
push esi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x24 ] ax
call sub_40a4f6
cmp [ eax ] bx
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_4218fb
cmp [ esp + eax * 2 + 0x22 ] 0x5c
pop ecx
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x24 ]
push eax
call sub_421914
pop ecx
pop ecx
jmp r-xdata
inc esi
jmp r-xdata
lea eax [ esp + 0x20 ]
push r--data
push eax
call sub_421914
pop ecx
pop ecx
sub_41eb05
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
sub esp 0x10
push ebx
call sub_40c4cd
lea eax [ ebp - 0x8 ]
push eax
push 0x1
xor ebx ebx
push ebx
push r--data
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push ebx
push r--data
push [ ebp - 0x8 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
xor al al
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov al bl
jmp r-xdata
mov eax [ ebp - 0x4 ]
push esi
xor ecx ecx
push 0x2
inc eax
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_404bce
mov esi [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push esi
push ebx
push ebx
push r--data
push [ ebp - 0x8 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
pop ebx
leave
retn
lea ecx [ ebp - 0x10 ]
call sub_404fd2
pop esi
mov eax [ ebp - 0x4 ]
shr eax 0x1
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ esi + eax * 2 ] cx
mov ecx [ ebp + 0xc ]
push esi
call sub_407e53
mov bl 0x1
sub_41eb3a
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_423d90
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_41eb7a
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
push edi
push eax
mov edi ecx
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
fldz
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
jmp r-xdata
mov eax [ ebp + 0x8 ]
fild [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_412620
fsubr [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_41ebde
fdivr [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_41ec02
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
call [ QueryPerformanceFrequency@IAT ]
test eax eax
je r-xdata
fldz
jmp r-xdata
fild [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ r--data ]
fstp [ esi ]
mov eax esi
pop esi
leave
retn
sub_41ec33
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
and [ ebp - 0x10 ] 0x0
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
inc ebx
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] ebx
call sub_40caee
push 0x2
push ebx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_40d380
lea ecx [ ebp - 0x28 ]
call sub_405cd3
mov esi [ rw-data ]
lea ecx [ ebp - 0x18 ]
call sub_412570
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] esi
call sub_40caee
push 0x2
push ebx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_40d380
lea ecx [ ebp - 0x28 ]
call sub_405cd3
mov esi [ edi + 0x130 ]
and [ edi + 0xfc ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] esi
push [ esi ]
mov ecx edi
call sub_41cf79
test eax eax
je r-xdata
lea ecx [ ebp - 0x18 ]
mov [ edi + 0xfc ] ebx
call sub_412570
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_44d26d
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
push ebx
inc eax
push eax
mov ecx edi
call sub_44d80a
push ecx
mov eax esp
lea ecx [ ebp - 0x4 ]
and [ eax ] 0x0
call sub_402e2a
test al al
jne r-xdata
sub_41ecee
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x120 ]
mov [ ebp - 0x4 ] esi
push [ esi ]
mov ecx edi
call sub_41cf79
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_468b5a
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
push 0x1
inc eax
push eax
mov ecx edi
call sub_44d80a
push ecx
mov eax esp
lea ecx [ ebp - 0x4 ]
and [ eax ] 0x0
call sub_402e2a
test al al
jne r-xdata
sub_41ed1a
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] ecx
cmp [ edi ] esi
jne r-xdata
mov eax [ ecx + 0x64 ]
push ebx
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
xor eax eax
mov eax [ ecx + 0x60 ]
mov eax [ eax + esi * 4 ]
mov ebx [ eax ]
test ebx ebx
je r-xdata
xor eax eax
inc esi
cmp esi [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebx + 0x1cc ]
test ecx ecx
jne r-xdata
pop edi
pop esi
leave
retn 0x4
jmp r-xdata
mov ecx [ ecx + 0x10 ]
test ecx ecx
je r-xdata
push edi
push [ ebx ]
call [ IsDialogMessageW@IAT ]
test eax eax
jne r-xdata
mov eax [ ecx ]
push edi
push ecx
call [ eax + 0x14 ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffe0
push [ edi ]
call [ GetClassLongW@IAT ]
movzx eax ax
cmp ax [ rw-data ]
je r-xdata
pop ebx
jmp r-xdata
cmp ax [ rw-data ]
jne r-xdata
jmp r-xdata
sub_41ed7b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x10 ]
mov edx eax
cmp eax [ esi + 0x24 ]
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp edx [ esi + 0x24 ]
jb r-xdata
mov eax [ esi + 0x14 ]
lea edi [ ecx + 0x2 ]
mov [ ebp - 0x8 ] edi
add ecx 0x4
jmp r-xdata
movzx edx [ ecx + 0x2 ]
mov eax [ esi + 0x14 ]
lea eax [ eax + edx * 2 ]
cmp eax edi
jb r-xdata
lea eax [ ebx + edi ]
mov [ edx ] ax
mov eax [ esi + 0x14 ]
add edx 0x2
cmp edx [ esi + 0x24 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
call sub_41eda4
mov ecx eax
test ecx ecx
jne r-xdata
lea eax [ ebx + edx ]
mov [ ecx + 0x2 ] ax
movzx edi [ edx ]
lea eax [ eax + edi * 2 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x4 ]
sub_41eda4
push ebp
mov ebp esp
push ecx
push ecx
movzx eax [ ecx ]
push ebx
push esi
push edi
mov edi edx
test ax ax
je r-xdata
xor eax eax
push 0x10
pop esi
mov ebx 0x8f
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0xf
mov eax ecx
jmp r-xdata
cmp ax 0x6c
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
jmp r-xdata
movzx edx ax
cmp edx ebx
jg r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
mov eax edx
sub eax 0x91
je r-xdata
je r-xdata
cmp ax 0x6f
je r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp edx 0x55
jl r-xdata
movzx eax [ edx + r--data ]
lea ecx [ ecx + eax * 2 ]
test edi edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp edx 0x5a
jle r-xdata
lea eax [ edx - 0x1d ]
cmp eax 0x37
jbe r-xdata
jmp r-xdata
movzx eax [ ecx + 0x2 ]
cmp ax si
je r-xdata
cmp edx 0x5d
jle r-xdata
mov ax [ ecx - 0x2 ]
mov edx 0xfc00
and ax dx
mov edx 0xd800
cmp ax dx
jne r-xdata
add ecx 0x4
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
movzx eax [ ecx + 0x4 ]
cmp ax [ ebp - 0x8 ]
je r-xdata
cmp edx 0x60
jle r-xdata
add ecx 0x2
jmp r-xdata
add ecx 0x4
cmp ax [ ebp - 0x4 ]
jne r-xdata
cmp edx 0x61
je r-xdata
push 0x10
pop esi
jmp r-xdata
sub_41ee64
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
jmp r-xdata
movzx edi [ ecx ]
movzx eax [ edx ]
dec esi
inc edx
lea ecx [ ecx + 0x2 ]
cmp ax di
je r-xdata
pop edi
pop esi
pop ebp
retn
test esi esi
je r-xdata
sbb eax eax
neg eax
lea eax [ eax * 2 - 0x1 ]
sub_41eea2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push 0xffffffff
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41f0f3
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax [ esi + 0x198 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push [ eax + 0x8 ]
call [ FindClose@IAT ]
mov eax [ esi + 0x198 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
push [ eax + 0xc ]
call j_sub_4228ca#2
pop ecx
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + edi * 4 ]
push [ eax ]
call j_sub_4228ca#2
mov eax [ esi + 0x198 ]
pop ecx
mov eax [ eax + edi * 4 ]
pop edi
and [ eax ] 0x0
push ecx
call sub_404592
sub_41ef0d
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov esi [ ebp + 0x8 ]
push 0x4
mov eax [ esi + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_40d2c0
test al al
jne r-xdata
push 0x38
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor esi esi
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
call sub_41f0f3
test al al
je r-xdata
xor edi edi
jmp r-xdata
mov ecx eax
call sub_405080
mov edi eax
push esi
mov ecx [ ebx + 0x198 ]
mov eax [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4 ]
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push 0x2000
push [ esi + 0x8 ]
mov ecx edi
call sub_404bf9
test al al
je r-xdata
test edi edi
je r-xdata
xor esi esi
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
test eax eax
js r-xdata
mov ecx edi
call sub_41f03e
push 0x0
jmp r-xdata
push ecx
mov ecx edi
call sub_404592
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
jmp r-xdata
push eax
call sub_42010a
pop ecx
mov ecx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40d3d2
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx edi
call sub_41f04e
test al al
je r-xdata
mov eax [ ebx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
test [ edi + 0x28 ] 0x10
mov [ ebp - 0x4 ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
call sub_44ad14
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push eax
call sub_41faa0
mov eax [ ebx ]
add esp 0xc
mov ecx [ eax + 0x4 ]
push esi
push [ ebp - 0x4 ]
add ecx ebx
call sub_407ba9
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov ecx edi
call sub_403d65
test al al
jne r-xdata
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x4 ]
push 0xffffffff
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
call sub_407bef
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x4 ]
push [ ebp - 0x4 ]
add ecx ebx
call sub_407ba9
mov eax [ ebp + 0x8 ]
push 0x4
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x4 ]
push 0xffffffff
add ecx ebx
call sub_44d7e4
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
mov ecx edi
call sub_4050ec
push ecx
mov ecx edi
mov [ edi + 0x2c ] esi
mov [ edi + 0x30 ] esi
call sub_404592
push [ ebp - 0x8 ]
call j_sub_4228ca#2
pop ecx
jmp r-xdata
sub_41f06f
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_40a6d4
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_404c4f
test al al
je r-xdata
xor bl bl
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40c610
mov bl 0x1
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop esi
mov al bl
pop ebx
leave
retn 0x8
sub_41f0b5
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x2
mov eax [ esi + 0x10 ]
mov ebx [ esi + 0x14 ]
push 0x0
push 0x0
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
call sub_404ee9
mov edi [ esi + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov esi [ esi + 0x14 ]
push 0x0
push ebx
push [ ebp - 0x4 ]
call sub_404ee9
mov eax edi
pop edi
mov edx esi
pop esi
pop ebx
leave
retn
sub_41f0f3
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0xc ]
call sub_40cdb4
lea esi [ eax - 0x1 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
test esi esi
js r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40d16a
test al al
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
cmp esi [ edi + 0x19c ]
jge r-xdata
mov eax [ edi + 0x198 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
cmp [ ecx ] eax
jne r-xdata
sub_41f149
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x8 ]
push esi
push edi
push eax
mov edi ecx
call [ QueryPerformanceCounter@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
test eax eax
je r-xdata
call sub_412570
fldz
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
jmp r-xdata
fild [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
call sub_412570
fld [ ebp - 0x10 ]
mov [ esi + 0xc ] 0x3
fstp [ esi ]
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_41f189
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
push ecx
call sub_425a99
lea ecx [ eax + 0x20 ]
mov edx esi
call sub_41f1c4
mov esi [ ebp + 0xc ]
pop ecx
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_41f1c4
push ebp
mov ebp esp
sub esp 0x18
mov al [ rw-data ]
push ebx
push esi
push edi
mov esi ecx
push 0x8000
push esi
mov edi edx
mov [ ebp - 0x1 ] al
call sub_4235c3
pop ecx
push eax
call sub_4233f5
pop ecx
pop ecx
push 0xb
mov ecx edi
mov ebx eax
call sub_40d2c0
test al al
jne r-xdata
push esi
mov ecx edi
call sub_44be8a
push eax
push 0x1
call sub_44be47
push eax
call sub_42373e
add esp 0x10
mov edi eax
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40a6d4
mov ecx edi
call sub_4084a6
lea eax [ ebp - 0x18 ]
push eax
push [ edi + 0x8 ]
call sub_41f26b
push [ ebp - 0x18 ]
push r--data
push esi
call sub_4237bc
add esp 0xc
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
push esi
call sub_423981
pop ecx
cmp ebx 0xffffffff
je r-xdata
mov ecx edi
call sub_4084a6
mov eax [ edi + 0x8 ]
push [ eax ]
call [ OutputDebugStringW@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
mov edi [ ebp - 0x8 ]
push 0x4000
jmp r-xdata
push ebx
push esi
call sub_4235c3
pop ecx
push eax
call sub_4233f5
pop ecx
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
sub_41f26b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x4 ]
xor eax eax
push eax
push eax
push eax
push eax
inc edi
push edi
push [ ebx ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_41f324
jmp r-xdata
push esi
push eax
call sub_42010a
pop ecx
mov esi eax
xor eax eax
push eax
push eax
push [ ebp + 0x8 ]
push esi
push edi
push [ ebx ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
dec eax
push eax
push ecx
mov ecx [ ebp + 0xc ]
push esi
call sub_41f2d0
push esi
call j_sub_4228ca#2
pop ecx
pop esi
pop edi
pop ebx
pop ebp
retn 0x8
sub_41f2d0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
push ecx
push ecx
call sub_44646d
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_408176
mov ecx esi
test al al
jne r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
call sub_40a6f8
lea eax [ edi + 0x1 ]
push eax
call sub_403d82
push eax
mov [ esi + 0x8 ] eax
call sub_42010a
pop ecx
mov [ esi ] eax
jmp r-xdata
push edi
call sub_41f33f
push edi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] edi
push [ esi ]
call sub_41faa0
mov eax [ esi ]
add esp 0xc
mov [ edi + eax ] 0x0
sub_41f324
push esi
mov esi ecx
call sub_408176
test al al
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx esi
dec [ eax ]
call sub_40a6f8
push 0x10
pop eax
push eax
mov [ esi + 0x8 ] eax
call sub_42010a
pop ecx
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
mov [ eax ] 0x0
pop esi
retn
sub_41f33f
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_407f2f
test al al
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
lea eax [ edi + 0x1 ]
push eax
call sub_403d82
cmp [ esi ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
push [ esi + 0x8 ]
call sub_42010a
mov [ esi ] eax
pop ecx
mov [ eax + edi ] 0x0
push [ esi ]
call j_sub_4228ca#2
pop ecx
sub_41f381
push ebp
mov ebp esp
mov edx [ ecx + 0x28 ]
cmp edx 0xffffffff
jne r-xdata
cmp edx [ ecx + 0x64 ]
jge r-xdata
xor eax eax
or [ ecx + 0x28 ] 0xffffffff
jmp r-xdata
mov eax [ ecx + 0x60 ]
mov edx [ eax + edx * 4 ]
mov eax [ edx ]
test eax eax
je r-xdata
cmp [ eax + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push [ eax + 0x18 ]
push [ eax ]
call [ TranslateAcceleratorW@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_41f396
mov ecx rw-data
call sub_40d3d2
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] 0x4
mov [ rw-data ] 0x1
mov eax rw-data
retn
sub_41f41d
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
inc [ edi ]
mov edx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x7f
mov eax [ eax + edx * 4 ]
xor ebx ebx
pop edx
inc ebx
cmp [ eax + 0x8 ] dx
jne r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
push edi
push ecx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_40fa40
mov [ rw-data ] ebx
mov [ esi + 0x148 ] bl
mov [ esi + 0xfc ] ebx
test eax eax
js r-xdata
mov [ rw-data ] ebx
mov [ esi + 0x148 ] bl
mov [ esi + 0xfc ] ebx
lea ecx [ ebp - 0x10 ]
call sub_412570
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea ecx [ ebp - 0x10 ]
call sub_40cdb4
cmp [ esi + 0x11c ] 0x0
mov [ rw-data ] eax
je r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
jmp r-xdata
add eax 0x80001000
cmp eax 0xfff
ja r-xdata
mov ecx esi
call sub_44d520
push 0xffffffff
push 0xb9
sub_41f461
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x224
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x2
push edi
mov [ esp + 0xc ] ecx
jb r-xdata
mov edi [ ebp + 0xc ]
test bl 0x8
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov ebx eax
test bl 0x3
je r-xdata
push 0x38
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push 0x0
push 0x0
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x1c ]
push eax
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_42297d
add esp 0x14
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_40caee
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_4039e8
cmp [ esp + 0x1c ] 0x0
je r-xdata
xor ecx ecx
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov ecx eax
call sub_405080
mov [ esp + 0x10 ] eax
mov ecx edi
call sub_40cdb4
lea ecx [ esp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_446f4b
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push ebx
mov ebx [ esp + 0x14 ]
push [ esi + 0x8 ]
mov ecx ebx
call sub_404bf9
test al al
je r-xdata
call [ GetLastError@IAT ]
mov edx [ esp + 0xc ]
push 0x0
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_407ba9
test ebx ebx
je r-xdata
mov ebx [ esp + 0xc ]
xor esi esi
mov ecx [ ebx + 0x19c ]
test ecx ecx
jne r-xdata
xor ebx 0x8
call sub_405cd3
mov esi [ ebp + 0x8 ]
jmp r-xdata
call sub_405cd3
jmp r-xdata
mov ecx [ esp + 0x18 ]
call sub_446d6d
test al al
jne r-xdata
mov ecx edi
call sub_412570
or [ edi ] 0xffffffff
jmp r-xdata
push ecx
mov ecx ebx
call sub_404592
mov edx [ ebx + 0x198 ]
jmp r-xdata
push 0x14
cmp esi ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx edi
call sub_412570
or [ edi ] 0xffffffff
mov [ edi + 0xc ] 0x1
mov [ edi + 0xc ] 0x1
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
call sub_42010a
pop ecx
mov ecx [ ebx + 0x198 ]
mov ecx [ ecx + esi * 4 ]
mov [ ecx ] eax
jmp r-xdata
call sub_42010a
pop ecx
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
lea ecx [ ebx + 0x194 ]
call sub_40197e
inc esi
add edx 0x4
cmp esi ecx
jb r-xdata
mov eax [ ebx + 0x198 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
and [ eax ] 0x0
mov eax [ ebx + 0x198 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
mov [ eax + 0x4 ] ecx
mov ecx edi
call sub_412570
lea eax [ esi + 0x1 ]
mov [ edi ] eax
jmp r-xdata
sub_41f55e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
test eax eax
jle r-xdata
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
call [ timeGetTime@IAT ]
mov [ esi + 0x318 ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
push 0x0
mov ecx esi
mov [ esi + 0x310 ] eax
mov [ esi + 0xfc ] 0x2
call sub_40e1f0
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_41f5da
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
xor esi esi
inc esi
mov edi eax
cmp [ ebp + 0x8 ] esi
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40cdb4
or edi eax
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
sub_41f66e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x5
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
pop edi
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
mov ebx eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov edi eax
jmp r-xdata
push ebx
push edi
call sub_41f6b5
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_41f6b5
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push edi
mov edi rw-data
jne r-xdata
push [ ebp + 0xc ]
mov ecx edi
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
push ebx
mov eax [ eax + ecx * 4 ]
push esi
mov esi [ eax ]
xor ecx ecx
mov ebx [ esi ]
cmp [ esi + 0x3a ] cl
je r-xdata
pop edi
pop ebp
retn 0x8
mov edi [ ebp + 0x8 ]
cmp edi 0x8
jg r-xdata
mov [ esi + 0x3a ] cl
cmp [ esi + 0x18c ] ecx
jge r-xdata
mov eax edi
sub eax 0x9
je r-xdata
je r-xdata
cmp [ esi + 0x198 ] cl
je r-xdata
cmp [ esi + 0x1a4 ] ecx
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
sub eax 0x37
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test edi edi
je r-xdata
push [ esi + 0x194 ]
mov ecx edi
push esi
call sub_46e1a7
xor ecx ecx
mov [ esi + 0x198 ] cl
jmp r-xdata
push [ esi ]
call [ DrawMenuBar@IAT ]
xor ecx ecx
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
push ebx
call [ ShowWindow@IAT ]
push ebx
call sub_41f78e
jmp r-xdata
push 0x1
dec eax
je r-xdata
push edi
push ebx
call [ ShowWindow@IAT ]
cmp edi 0x8
je r-xdata
push ecx
push ebx
call [ ShowWindow@IAT ]
mov [ esi + 0x38 ] 0x0
jmp r-xdata
cmp edi 0x1
je r-xdata
pop esi
pop ebx
xor eax eax
inc eax
push ecx
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x38 ] 0x1
cmp edi 0x4
je r-xdata
cmp edi 0x2
je r-xdata
push ebx
call [ EnableWindow@IAT ]
jmp r-xdata
push ebx
mov [ esi + 0x39 ] 0x1
call [ LockWindowUpdate@IAT ]
jmp r-xdata
dec eax
jne r-xdata
push ebx
call sub_41f78e
mov [ esi + 0x38 ] 0x1
jmp r-xdata
cmp edi 0x3
je r-xdata
push ecx
mov [ esi + 0x39 ] cl
call [ LockWindowUpdate@IAT ]
push 0x1
push 0x0
push [ esi ]
call [ InvalidateRect@IAT ]
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov [ esi + 0x38 ] 0x1
jmp r-xdata
jle r-xdata
push 0x6
push ebx
call [ ShowWindow@IAT ]
jmp r-xdata
cmp edi 0x5
jg r-xdata
cmp edi 0x6
je r-xdata
jmp r-xdata
sub_41f78e
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetForegroundWindow@IAT ]
mov ebx [ ebp + 0x8 ]
mov esi eax
cmp ebx esi
jne r-xdata
push edi
xor edi edi
test esi esi
jne r-xdata
xor eax eax
inc eax
push ebx
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push edi
push r--data
call [ FindWindowW@IAT ]
mov esi eax
push ebx
mov [ ebp - 0xc ] edi
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
push 0x9
push ebx
call [ ShowWindow@IAT ]
push 0x2
pop ebx
push edi
push esi
mov esi [ GetWindowThreadProcessId@IAT ]
call esi
mov edi eax
mov [ ebp - 0x8 ] edi
call [ GetCurrentThreadId@IAT ]
push 0x0
push ebx
mov [ ebp + 0x8 ] eax
call esi
mov esi [ AttachThreadInput@IAT ]
push 0x1
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call esi
push 0x1
push edi
push [ ebp + 0x8 ]
call esi
push 0x1
push [ ebp - 0x4 ]
push edi
call esi
push ebx
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn 0x4
push 0x3
mov edi [ MapVirtualKeyW@IAT ]
push eax
push eax
push eax
push 0x12
call edi
mov esi [ keybd_event@IAT ]
push eax
push 0x12
call esi
push 0x0
push 0x2
push 0x0
push 0x12
call edi
push eax
push 0x12
call esi
xor eax eax
push eax
push eax
push eax
push 0x12
call edi
push eax
push 0x12
call esi
push 0x0
push 0x2
push 0x0
push 0x12
call edi
push eax
push 0x12
call esi
push ebx
call [ SetForegroundWindow@IAT ]
mov esi [ AttachThreadInput@IAT ]
mov edi [ ebp - 0x8 ]
test eax eax
je r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call esi
push 0x0
push edi
push [ ebp + 0x8 ]
call esi
push 0x0
push [ ebp - 0x4 ]
push edi
call esi
jmp r-xdata
mov ebx [ ebp - 0xc ]
push 0x4
jmp r-xdata
mov eax ebx
pop edi
jmp r-xdata
pop ebx
jmp r-xdata
sub_41f7b2
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x10 ] 0x0
je r-xdata
pop edi
pop ebp
retn 0x4
mov eax [ edi + 0xc ]
push esi
push [ eax ]
call sub_4218fb
push [ ebp + 0x8 ]
lea esi [ eax + 0x1 ]
call sub_4218fb
xor ecx ecx
push 0x2
lea eax [ esi + eax ]
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ edi + 0xc ]
mov esi eax
push [ ecx ]
push esi
call sub_421943
push [ ebp + 0x8 ]
push esi
call sub_421914
mov eax [ edi + 0xc ]
push [ eax ]
call j_sub_4228ca#2
mov eax [ edi + 0xc ]
add esp 0x20
mov [ eax ] esi
pop esi
sub_41f833
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x4
je r-xdata
pop esi
retn
push edi
push 0x10
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov ecx [ edx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov eax [ edx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ edi + 0xc ] eax
inc [ eax ]
mov ecx esi
call sub_412570
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] 0x4
pop edi
sub_41f885
push ebx
push esi
push edi
mov esi edx
mov edi ecx
push esi
mov ebx [ edi + 0x4 ]
call sub_4218fb
pop ecx
cmp ebx eax
je r-xdata
mov ecx [ edi ]
push ebx
mov edx esi
call sub_40b96c
pop ecx
test eax eax
jne r-xdata
xor al al
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41f8a4
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ ecx + 0x10 ]
push ecx
call sub_4405c6
mov ecx esi
test esi esi
jne r-xdata
pop esi
retn
sub_41f8b2
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ eax + 0x4 ]
push eax
call j_sub_4228ca#2
pop ecx
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_41f8c2
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_424ea0
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_41f92c
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] ebx
pushad
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ edx + 0x4 ]
cmp eax 0x1
je r-xdata
mov eax ecx
dec eax
imul eax eax 0x18
add eax 0x30
add edx eax
add ecx esp
mov [ ebp - 0x4 ] ecx
mov eax [ edx + 0x24 ]
cmp eax 0x1
je r-xdata
mov ecx [ edx + 0x8 ]
lea eax [ edx ]
push eax
mov eax [ edx + 0x10 ]
cmp eax 0x4
je r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ edx + 0x20 ]
cmp eax 0xa
je r-xdata
sub edx 0x18
jmp r-xdata
mov eax [ edx ]
push eax
jmp r-xdata
mov eax [ edx + 0x4 ]
push eax
mov eax [ edx ]
push eax
jmp r-xdata
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov eax 0x0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
fstp [ edx + 0x18 ]
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ edx + 0xc ]
cmp eax 0x1
je r-xdata
dec ecx
je r-xdata
popad
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x4 ] esp
je r-xdata
mov eax [ edx + 0x28 ]
cmp eax 0x4
je r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
fstp [ edx + 0x18 ]
jmp r-xdata
add esp [ edx + 0x8 ]
mov edx [ edx ]
call edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
jmp r-xdata
sub_41fa12
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ebx
mov edx 0xbc614e
mov [ ebp - 0x4 ] edx
mov edx 0xbc614e
mov [ ebp - 0x8 ] edx
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax 0xbc614e
call eax
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x20 ]
cmp eax 0xa
je r-xdata
add edx 0x30
lea ebx [ ebp + 0x8 ]
fld [ esp ]
cmp eax 0x9
jne r-xdata
mov eax [ ebx ]
mov [ edx ] eax
mov eax [ ebx ]
mov [ edx ] eax
add ebx 0x4
mov eax [ ebx ]
mov [ edx + 0x4 ] eax
jmp r-xdata
pop eax
pop edx
mov ebx [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
add ebx 0x4
add edx 0x18
jmp r-xdata
dec ecx
je r-xdata
mov eax [ edx + 0x10 ]
cmp eax 0x4
je r-xdata
sub_41faa0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_41ff74 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41fe78 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41ff74 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41fcec ]
jmp [ ecx * 4 + jump_table_41fd6c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41fdd8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41ff74 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41fdd8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41ff74 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41ff74 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41ff74 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41fdd8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41fdd8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41fdd8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_41fdd8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_42010a
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4245ec
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_42205a
pop ecx
test eax eax
je r-xdata
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_42738d
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_427495
int3
sub_420159
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4273cb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_420183
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
dec eax
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_42187b ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_421914
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx eax
cmp [ eax ] cx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
sub edx esi
add edx 0x2
cmp [ edx ] cx
jne r-xdata
movzx ecx [ esi ]
mov [ edx + esi ] cx
lea esi [ esi + 0x2 ]
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_421943
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push esi
mov esi eax
sub esi edx
movzx ecx [ edx ]
mov [ esi + edx ] cx
lea edx [ edx + 0x2 ]
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_421970
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_421a05
push esi
push 0x4
push 0x20
call sub_427616
pop ecx
pop ecx
mov esi eax
push esi
call [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_421a34
push 0xc
push r--data
call sub_427750
call sub_421ed0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_421a74
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421a6e
mov eax esi
call sub_427795
retn
sub_421a74
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_4275e5
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
lea ecx [ ebx + 0x4 ]
push ecx
mov [ ebx ] eax
call [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_4276a9
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_4276a9
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ rw-data ]
mov [ rw-data ] eax
sub_421b3f
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_42869d
mov edx eax
mov [ esi + 0x8 ] edx
mov ecx [ edx + 0x6c ]
mov [ esi ] ecx
mov ecx [ edx + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edx + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_427d60
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4280e2
mov [ esi + 0x4 ] eax
sub_421bc7
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421c5a
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_421c5a
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_421b3f
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0x10 ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_423aba
movzx edi ax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
lea ebx [ ebx + 0x2 ]
call sub_423aba
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_421d33
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
leave
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_421db5
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_4291b1
push r--data
push r--data
call sub_421eae
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_4290c0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_428964
call sub_421b2a
pop ecx
mov esi r--data
mov edi r--data
jmp r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
add esi 0x4
call eax
xor eax eax
push rw-data
call sub_4290c0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_421e5a
push esi
push 0x0
call [ rw-data ]
mov esi eax
push esi
call sub_422080
push esi
call sub_427a68
push esi
call sub_429215
push esi
call sub_429222
push esi
call sub_42923c
push esi
call sub_429204
add esp 0x18
pop esi
jmp sub_428bda
sub_421e92
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_421eae
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_421ee2
push 0x1c
push r--data
call sub_427750
push 0x8
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421ffc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_427795
retn
mov [ rw-data ] 0x1
push 0x8
call sub_428ae8
pop ecx
push [ ebp + 0x8 ]
call sub_421d65
push r--data
push r--data
call sub_421e92
pop ecx
pop ecx
push [ rw-data ]
mov esi [ rw-data ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_421e92
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ rw-data ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ rw-data ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ rw-data ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_422025
push ebp
mov ebp esp
push esi
push 0x4
call sub_428984
pop ecx
push [ rw-data ]
call [ rw-data ]
push [ ebp + 0x8 ]
mov esi eax
call [ rw-data ]
push 0x4
mov [ rw-data ] eax
call sub_428ae8
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_42205a
push ebp
mov ebp esp
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_42208d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
pop ebp
retn
sub_4220be
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x10 ] 0x0
push esi
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
je r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp + 0xc ] esi
push ebx
push 0x2d
pop eax
mov [ esi ] ax
add esi 0x2
neg ecx
adc edx 0x0
neg edx
add eax 0x30
add eax 0x57
jmp r-xdata
push 0x0
push edi
push edx
push ecx
call sub_429520
mov [ ebp + 0x10 ] ecx
mov ecx eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
cmp eax 0x9
jbe r-xdata
jb r-xdata
mov [ esi ] ax
add esi 0x2
test edx edx
ja r-xdata
mov edi [ ebp + 0xc ]
xor eax eax
mov [ esi ] ax
sub esi 0x2
pop ebx
test ecx ecx
jne r-xdata
movzx ecx [ esi ]
mov ax [ edi ]
mov [ esi ] ax
mov [ edi ] cx
sub esi 0x2
add edi 0x2
cmp edi esi
jb r-xdata
pop edi
pop esi
leave
retn 0xc
sub_422147
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
xor eax eax
cmp edx 0xa
jne r-xdata
mov ecx [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4220be
mov eax [ ebp + 0x10 ]
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_422177
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
mov esi [ ebp + 0xc ]
push esi
push eax
call sub_4221a2
mov eax esi
pop esi
pop ebp
retn
sub_4221a2
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
je r-xdata
push 0x2
mov edi esi
pop ebx
push 0x2d
pop eax
mov [ esi ] ax
add esi 0x2
neg ecx
mov [ esi ] ax
add esi ebx
test ecx ecx
jne r-xdata
lea eax [ edx + 0x30 ]
mov eax ecx
xor edx edx
div [ ebp + 0x10 ]
mov ecx eax
lea eax [ edx + 0x57 ]
cmp edx 0x9
ja r-xdata
xor eax eax
mov [ esi ] ax
sub esi ebx
movzx ecx [ esi ]
mov ax [ edi ]
mov [ esi ] ax
mov [ edi ] cx
sub esi ebx
add edi ebx
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_422203
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ edx ]
movzx ecx [ esi ]
sub ecx edi
jne r-xdata
pop edi
pop esi
test ecx ecx
jns r-xdata
sub esi edx
jle r-xdata
or ecx 0xffffffff
jmp r-xdata
add edx 0x2
movzx edi [ edx ]
movzx ecx [ esi + edx ]
sub ecx edi
je r-xdata
mov eax ecx
pop ebp
retn
xor ecx ecx
inc ecx
test di di
je r-xdata
sub_422272
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
mov eax [ ebp - 0x10 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_422315
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
dec eax
je r-xdata
sub_42234b
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_429c40
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_429af3
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_429af3
pop ecx
pop ecx
mov [ ecx ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_4223f0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_42247b
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42252f
add esp 0x10
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
dec edi
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_42252f
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_421b3f
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebx ]
push eax
call sub_423aba
movzx esi ax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ edi ]
push eax
call sub_423aba
add esp 0x10
dec [ ebp + 0x10 ]
movzx eax ax
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
push 0x41
pop edx
push 0x5a
pop esi
sub ebx edi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
dec ecx
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_422633
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi [ ebx + 0xc ]
xor eax eax
movzx ecx [ edi ]
mov [ ebp - 0x8 ] ecx
cmp ax cx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
jne r-xdata
mov eax edi
and eax 0xfff
push 0x2
pop esi
cmp eax 0xff0
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov edx [ ebx + 0x8 ]
movzx eax [ edx ]
test ax ax
je r-xdata
movzx eax cx
mov ecx [ ebx + 0x8 ]
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
push 0x2
pshufd xmm4 xmm0 0x0
pxor xmm3 xmm3
pop esi
push 0x8
pxor xmm0 xmm0
movzx ecx cx
pop edx
movdqu xmm0 [ edi ]
jmp r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
mov ecx eax
mov eax edx
sub eax edi
push 0x2
mov [ ebp - 0x4 ] eax
pop esi
test cx cx
je r-xdata
movzx eax [ ecx ]
xor edx edx
cmp dx ax
je r-xdata
movdqu xmm1 [ ecx ]
movdqa xmm0 xmm3
pcmpeqw xmm0 xmm1
pcmpeqw xmm1 xmm4
por xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
dec edx
jne r-xdata
add edi esi
movzx ecx [ edi ]
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x8 ]
movzx ecx [ edi ]
test cx cx
je r-xdata
movzx edx [ edi ]
cmp dx ax
jne r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
shr eax 0x1
lea ecx [ ecx + eax * 2 ]
add ecx 0x10
jmp r-xdata
movzx eax cx
psrldq xmm0 0x2
pinsrw xmm0 eax 0x7
xor eax eax
cmp ax cx
je r-xdata
mov ecx [ ebp - 0x8 ]
movzx eax [ edx ]
xor edi edi
cmp di ax
je r-xdata
movdqu xmm1 [ edx ]
pcmpistri xmm0 xmm1 0xd
jbe r-xdata
mov eax edx
jmp r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add eax esi
movzx ecx [ edx ]
mov [ ebp - 0x4 ] eax
test cx cx
jne r-xdata
movzx ecx [ eax + edi ]
movzx eax [ edi ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
jne r-xdata
add ecx esi
jmp r-xdata
mov edx ecx
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
cmp ax cx
je r-xdata
jae r-xdata
add edx 0x10
cmp [ edi ] cx
je r-xdata
add edi esi
cmp [ eax + edi ] cx
jne r-xdata
movzx eax [ edi ]
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] ax
je r-xdata
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebx + 0xc ]
mov edi edx
add edx esi
jmp r-xdata
pcmpistri xmm0 xmm1 0xd
lea edx [ edx + ecx * 2 ]
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
jmp r-xdata
mov eax ecx
jmp r-xdata
cmp [ edx ] ax
jne r-xdata
movdqu xmm0 [ edi ]
movdqu xmm2 [ edx ]
movdqa xmm1 xmm3
pcmpeqw xmm1 xmm0
pcmpeqw xmm2 xmm0
movdqa xmm0 xmm3
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
movzx eax [ ecx ]
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] ax
je r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add edi esi
jmp r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
and eax 0xfffffffe
add edx eax
add edi eax
add edx 0x10
add edi 0x10
jmp r-xdata
cmp [ edi ] ax
jne r-xdata
movdqu xmm1 [ edi ]
movdqu xmm2 [ ecx ]
pcmpistri xmm2 xmm1 0xd
jno r-xdata
mov eax edi
and eax 0xfff
cmp eax 0xff0
ja r-xdata
add edx esi
jmp r-xdata
add edi esi
add ecx esi
jmp r-xdata
js r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax edi
and eax 0xfff
mov [ ebp - 0x4 ] ecx
cmp eax 0xff0
ja r-xdata
mov ecx [ ebp - 0x4 ]
add edi 0x10
add ecx 0x10
jmp r-xdata
sub_4228ca
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_42889e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4288b1
pop ecx
mov [ esi ] eax
pop esi
sub_422902
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42a94c
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422952
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422902
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
sub_42297d
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
neg eax
sbb eax eax
mov ecx 0x100
and eax ecx
push eax
push [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
neg eax
sbb eax eax
and eax ecx
push eax
mov eax [ ebp + 0x10 ]
push [ ebp + 0x14 ]
neg eax
sbb eax eax
and eax ecx
push eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
neg eax
sbb eax eax
and eax 0x3
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4229c7
add esp 0x24
pop ebp
retn
sub_4229c7
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
test edi edi
je r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
test edx edx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
xor esi esi
mov [ ecx ] si
cmp [ ebp + 0x18 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
test eax eax
je r-xdata
cmp [ ebp + 0x20 ] 0x0
jbe r-xdata
xor esi esi
mov [ ecx ] si
mov edx [ ebp + 0x1c ]
test edx edx
jne r-xdata
jmp r-xdata
call sub_42889e
test edi edi
jne r-xdata
cmp [ ebp + 0x28 ] 0x0
jbe r-xdata
xor ecx ecx
mov [ edx ] cx
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
xor ebx ebx
inc ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
jmp r-xdata
push 0x22
pop ecx
mov [ eax ] ecx
mov eax ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x28 ] ebx
je r-xdata
cmp [ ebp + 0x28 ] ebx
jne r-xdata
xor eax eax
inc eax
mov esi edi
jmp r-xdata
cmp [ esi ] 0x3a
jne r-xdata
add esi 0x2
dec eax
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
cmp [ esi ] bx
je r-xdata
movzx eax [ edi ]
mov ecx ebx
mov esi edi
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
lea edi [ esi + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x3
jb r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp ax 0x2f
je r-xdata
mov eax [ ebp + 0x24 ]
jmp r-xdata
push 0x2
push edi
push 0xffffffff
push ecx
call sub_42a9fb
mov edx [ ebp + 0x1c ]
add esp 0x10
test ebx ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
lea ecx [ esi + 0x2 ]
cmp ax 0x5c
je r-xdata
mov edx [ ebp + 0x1c ]
test edx edx
je r-xdata
cmp ebx edi
jb r-xdata
mov [ ebp + 0x8 ] ecx
test ecx ecx
je r-xdata
cmp ax 0x2e
jne r-xdata
mov eax [ ebp + 0x24 ]
test eax eax
je r-xdata
sub esi edi
sar esi 0x1
cmp [ ebp + 0x20 ] esi
jbe r-xdata
mov edx [ ebp + 0x1c ]
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
mov ebx esi
jmp r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
mov eax [ ebp + 0x24 ]
push esi
push edi
push 0xffffffff
push edx
call sub_42a9fb
add esp 0x10
mov eax [ ebp + 0x24 ]
test eax eax
je r-xdata
mov eax ebx
sub eax edi
sar eax 0x1
cmp [ ebp + 0x20 ] eax
jbe r-xdata
mov edi ecx
jmp r-xdata
mov eax ecx
sub eax edi
sar eax 0x1
cmp [ ebp + 0x18 ] eax
jbe r-xdata
sub esi ebx
sar esi 0x1
cmp [ ebp + 0x28 ] esi
jbe r-xdata
push eax
push edi
push 0xffffffff
push edx
call sub_42a9fb
mov edx [ ebp + 0x1c ]
add esp 0x10
push eax
push edi
push 0xffffffff
push [ ebp + 0x14 ]
call sub_42a9fb
mov ecx [ ebp + 0x8 ]
add esp 0x10
xor ebx ebx
push esi
push ebx
push 0xffffffff
push eax
call sub_42a9fb
add esp 0x10
jmp r-xdata
sub_422bbc
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
mov edx [ ebp + 0x10 ]
sub ecx 0x2
test edx edx
je r-xdata
xor eax eax
mov [ ecx ] ax
mov edi [ ebp + 0xc ]
pop edi
mov eax esi
pop esi
pop ebp
retn
test edx edx
jne r-xdata
movzx eax [ edi ]
mov [ ecx ] ax
dec edx
add ecx 0x2
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
sub_422c1d
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edi
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
sub edx edi
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
movzx eax [ edx + edi ]
mov [ edi ] ax
add edi 0x2
test ax ax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_422c67
push 0xc
push r--data
call sub_427750
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
call sub_425a99
add eax 0x20
push eax
push 0x1
call sub_425ade
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_425a99
add eax 0x20
push eax
call sub_42947a
pop ecx
mov esi eax
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_425a99
add eax 0x20
push eax
call sub_429c40
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_425a99
add eax 0x20
push eax
push esi
call sub_429449
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422d00
mov eax edi
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
call sub_427795
retn
sub_422d24
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_421b3f
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x8
push eax
call sub_429aa1
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
fldz
jmp r-xdata
add esi 0x2
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_42abdc
fld [ eax + 0x10 ]
add esp 0xc
cmp [ ebp - 0x20 ] 0x0
pop esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42b4bf
leave
retn
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
sub_422db5
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_429c40
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_429af3
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_429af3
pop ecx
pop ecx
mov [ ecx ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_422e57
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push edi
xor edi edi
test ebx ebx
jne r-xdata
push esi
push 0x3bc
push 0x1
call sub_427616
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
xor eax eax
jmp r-xdata
push esi
call sub_4228ca
pop ecx
test edi edi
je r-xdata
call sub_42869d
push [ eax + 0x6c ]
push esi
call sub_428724
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] ebx
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push edi
call sub_42887d
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_422fb7
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov edi eax
sub_422f31
push ebp
mov ebp esp
push esi
call sub_4286b5
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
cmp [ esi + 0x3b4 ] 0x0
je r-xdata
push esi
call sub_428667
pop ecx
call sub_423034
sub_422f5f
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push [ rw-data ]
call [ rw-data ]
call eax
neg eax
sbb eax eax
inc eax
retn
push r--data
push 0x800
push 0x0
push r--data
call [ LoadLibraryExW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push eax
call [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
retn
sub_422fb7
push ebp
mov ebp esp
push esi
call sub_42852a
push eax
call sub_428b3a
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ ecx + 0x54 ]
mov [ esi + 0x54 ] eax
mov eax [ ecx + 0x58 ]
mov [ esi + 0x58 ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_428530
mov esi [ ebp + 0x8 ]
push esi
call sub_42852a
push eax
call sub_428b59
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_422ef0
call sub_422f5f
mov [ esi + 0x3b4 ] eax
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_428b9c
mov [ esi + 0x3b4 ] eax
test eax eax
je r-xdata
sub_423034
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
call [ rw-data ]
jmp eax
push r--data
push 0x800
push 0x0
push r--data
call [ LoadLibraryExW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
retn
push eax
call [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_423084
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
mov ecx [ ebx + 0x8 ]
mov dx [ ebx + 0xc ]
sub esp 0x20
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
movzx eax dx
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm2 xmm0 0x0
cmp ax dx
je r-xdata
xor eax eax
cmp [ ecx ] dx
setne al
dec eax
and eax ecx
jmp r-xdata
movzx eax [ ecx ]
cmp ax dx
je r-xdata
movdqu xmm0 [ ecx ]
pxor xmm1 xmm1
pcmpeqw xmm1 xmm0
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
add ecx 0x2
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov eax ecx
test ax ax
je r-xdata
bsf eax eax
mov [ ebp - 0x4 ] eax
add ecx eax
jmp r-xdata
add ecx 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
add ecx 0x2
jmp r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
sub_423132
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
movzx ecx [ eax ]
push esi
push edi
test cx cx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
movzx ecx [ eax ]
test cx cx
jne r-xdata
mov edx ebx
mov esi edi
test bx bx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp dx cx
je r-xdata
sub_423174
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] 0x2
jge r-xdata
mov edx [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx ecx
lea eax [ edx + 0x1 ]
test al 0xe
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
mov ax [ ebp + 0xc ]
movzx eax [ edx ]
cmp ax cx
jne r-xdata
xor eax eax
cmp ax cx
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
test ax ax
je r-xdata
mov esi edx
movzx eax cx
movd xmm0 eax
mov eax 0xffff0001
movd xmm1 eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ecx
jmp r-xdata
sub ecx 0x2
cmp ecx edx
je r-xdata
mov eax esi
add edx 0x2
je r-xdata
lea esi [ edx + ecx * 2 ]
movdqu xmm0 [ edx ]
pcmpistri xmm1 xmm0 0x15
jne r-xdata
pop esi
pop ebp
retn
add edx 0x10
jmp r-xdata
add edx 0x10
lea eax [ edx + ecx * 2 ]
jmp r-xdata
movdqu xmm1 [ edx ]
pcmpistri xmm0 xmm1 0x41
jae r-xdata
sub_423220
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_423230
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_423318
push ebp
mov ebp esp
push ecx
call sub_42869d
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test ecx ecx
jne r-xdata
movzx edx [ ecx ]
push ebx
push esi
xor eax eax
push edi
mov edi [ ebp + 0xc ]
test dx dx
je r-xdata
mov ecx [ eax + 0x1c ]
mov esi ecx
cmp [ ecx ] ax
je r-xdata
movzx ebx [ edi ]
mov eax [ ebp - 0x4 ]
pop edi
mov [ eax + 0x1c ] ecx
mov eax esi
sub eax ecx
neg eax
sbb eax eax
and eax esi
pop esi
pop ebx
leave
retn
movzx ebx [ edi ]
xor edx edx
xor edx edx
cmp [ eax ] dx
je r-xdata
mov esi ebx
cmp [ eax ] dx
jne r-xdata
movzx edi [ ecx ]
mov [ ebp + 0x8 ] edi
mov edi [ ebp + 0xc ]
mov edx ebx
xor eax eax
add ecx 0x2
movzx edx [ ecx ]
test dx dx
jne r-xdata
add eax 0x2
movzx esi [ eax ]
test si si
jne r-xdata
xor eax eax
mov [ ecx ] ax
add ecx 0x2
add ecx 0x2
cmp [ ecx ] dx
jne r-xdata
xor edx edx
add eax 0x2
movzx edx [ eax ]
test dx dx
jne r-xdata
mov eax edi
test bx bx
je r-xdata
cmp si dx
je r-xdata
mov eax edi
test bx bx
je r-xdata
jmp r-xdata
cmp dx [ ebp + 0x8 ]
je r-xdata
sub_4233cb
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
push 0x16
pop eax
pop ebp
retn
sub_4233f5
push 0x10
push r--data
call sub_427750
mov edi [ ebp + 0xc ]
cmp edi 0x4000
je r-xdata
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
cmp edi 0x8000
je r-xdata
test esi esi
js r-xdata
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
cmp edi 0x10000
je r-xdata
call sub_42889e
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
cmp edi 0x40000
je r-xdata
mov eax esi
sar eax 0x5
mov [ ebp + 0xc ] eax
mov ebx esi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
cmp edi 0x20000
je r-xdata
push esi
call sub_42b6a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x16
jmp r-xdata
call sub_42889e
mov [ eax ] 0x9
or edi 0xffffffff
push edi
push esi
call sub_4234f6
pop ecx
pop ecx
mov edi eax
jmp r-xdata
call sub_427aa0
call sub_427795
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4234d5
mov eax edi
jmp r-xdata
sub_4234f6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_4235c3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
pop ebp
retn
sub_4235e7
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_429af3
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_423914
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_41faa0
mov eax [ ebp - 0x8 ]
sub [ esi + 0x4 ] eax
add [ esi ] eax
add esp 0xc
sub ebx eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_4235c3
pop ecx
push eax
call sub_42bd14
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_42373e
push 0xc
push r--data
call sub_427750
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_425a9f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4235e7
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4237b4
mov eax edi
jmp r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
call sub_427795
retn
sub_4237bc
push 0xc
push r--data
call sub_427750
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] edi
push edi
call sub_425a9f
pop ecx
and [ ebp - 0x4 ] ebx
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_427795
retn
test ebx ebx
jne r-xdata
push edi
call sub_4235c3
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4238c6
mov eax ebx
push edi
call sub_42947a
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
push edi
call sub_42c620
mov ebx eax
mov [ ebp - 0x1c ] ebx
push edi
push esi
call sub_429449
add esp 0x1c
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or ebx 0xffffffff
mov [ ebp - 0x1c ] ebx
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_4238ce
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_423914
pop ecx
test eax eax
je r-xdata
push esi
call sub_4239d6
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4235c3
push eax
call sub_42d292
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_423914
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_4235c3
pop ecx
push eax
call sub_42bd14
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_423981
push 0xc
push r--data
call sub_427750
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_425a9f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4238ce
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4239ce
mov eax edi
push esi
call sub_4239d6
pop ecx
jmp r-xdata
call sub_427795
retn
sub_4239d6
push 0x14
push r--data
call sub_427750
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_428984
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423ab1
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_427795
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_425ade
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_423a7e
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_4238ce
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_4238ce
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_423aba
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_421b3f
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_42d378
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_429aa1
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
movzx eax ax
jmp r-xdata
add cx 0x20
movzx eax [ ebp - 0x4 ]
movzx eax [ ebp + 0x8 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ esi + 0x94 ]
movzx eax [ eax + ecx ]
movzx eax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
pop esi
je r-xdata
movzx eax ax
jmp r-xdata
movzx eax ax
jmp r-xdata
sub_423b7d
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_421b3f
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_42889e
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_422272
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_42a94c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_42d590
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_423cbe
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_423b7d
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_423cea
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_42d6d1
pop ecx
pop ecx
dec eax
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
dec eax
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_423d90
push ebp
mov ebp esp
push ecx
push ecx
fldz
push esi
push edi
fstp [ ebp - 0x8 ]
mov edi 0xffff
push edi
push 0x133f
call sub_42dea9
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov esi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x7fffffff
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
push esi
mov [ ebp - 0x8 ] eax
call sub_42dea9
fld [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_42d6d1
pop ecx
pop ecx
dec eax
je r-xdata
push edi
push esi
call sub_42dea9
fld [ ebp + 0x8 ]
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
push edi
push esi
call sub_42dea9
fld [ ebp + 0x8 ]
fchs
jmp r-xdata
fld [ ebp + 0x8 ]
push esi
dec eax
je r-xdata
push ecx
push ecx
fstp [ esp ]
push 0x15
call sub_42da03
add esp 0x10
jmp r-xdata
fld [ r--data ]
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x15
push 0x8
call sub_42d75f
add esp 0x1c
jmp r-xdata
pop edi
pop esi
leave
retn
sub_423e50
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0xc ]
call sub_42ef25
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_42df69
sub_423e90
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0x14
fxch st1
fstp [ esp ]
fst [ esp + 0x8 ]
mov eax [ esp + 0xc ]
call sub_423eed
add esp 0x14
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_42df50
sub_423eed
mov ecx eax
push eax
fwait
fnstcw [ esp ]
cmp [ esp ] 0x27f
je r-xdata
and ecx 0x7ff00000
lea edx [ esp + 0x8 ]
cmp ecx 0x7ff00000
je r-xdata
call sub_42eef5
xor ecx ecx
and eax 0xfffff
or eax [ esp + 0x10 ]
jne r-xdata
call sub_42ef25
je r-xdata
lea edx [ esp + 0x8 ]
call sub_42ef25
test [ esp + 0x16 ] 0x8
jne r-xdata
lea edx [ esp + 0x8 ]
call sub_42ef25
xor ecx ecx
jmp r-xdata
test eax 0x7ff00000
je r-xdata
faddp st1
mov eax 0x1
jmp r-xdata
inc ecx
jmp r-xdata
test ecx ecx
jne r-xdata
or edx [ esp + 0x8 ]
jne r-xdata
mov eax [ esp + 0xc ]
mov edx eax
and eax 0x7ff00000
and edx 0xfffff
cmp eax 0x7ff00000
jne r-xdata
mov eax [ esp + 0xc ]
and eax 0xfffff
or eax [ esp + 0x8 ]
jne r-xdata
mov cl [ esp + 0xf ]
and cl 0x80
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
faddp st1
mov eax 0x7
jmp r-xdata
sub esp 0x74
mov ecx esp
push ecx
sub esp 0x10
fstp [ esp ]
fstp [ esp + 0x8 ]
fwait
fnsave [ ecx + 0x8 ]
call sub_42f0d2
add esp 0x10
pop ecx
frstor [ ecx + 0x8 ]
fld [ ecx ]
add esp 0x74
test eax eax
je r-xdata
test [ esp + 0xe ] 0x8
jne r-xdata
fstp st0
mov eax [ esp + 0x14 ]
and eax 0x7fffffff
or eax [ esp + 0x10 ]
je r-xdata
fld st1
call sub_4240b2
fchs
test cl cl
jne r-xdata
fyl2x
call sub_42eee0
cmp cl 0x1
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1d
call sub_42ee80
pop edx
retn
mov eax 0x1
jmp r-xdata
fstp st0
fld1
jmp r-xdata
call sub_4240b2
mov ch [ esp + 0xf ]
shr ch 0x7
test [ esp + 0x17 ] 0x80
je r-xdata
fstp st0
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
fchs
pop edx
retn
fldcw [ esp ]
fldz
test ch cl
je r-xdata
fld [ r--data ]
test ch cl
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1d
jmp r-xdata
fchs
jmp r-xdata
mov eax 0x2
jmp r-xdata
fchs
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x4
jae r-xdata
cmp eax 0x7ff00000
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
call sub_42ee80
pop edx
retn
call sub_42ee97
pop edx
retn
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_4240b2
fld st0
frndint
fcomp st1
mov cl 0x0
fwait
fnstsw ax
sahf
jne r-xdata
fstp st0
retn
fmul [ rw-data ]
inc cl
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
jne r-xdata
retn
inc cl
sub_4240da
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push 0x0
add ecx 0x2ac18000
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_42f210
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_42413e
push 0xc
push r--data
call sub_427750
xor ecx ecx
mov [ ebp - 0x1c ] ecx
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
xor eax eax
cmp [ ebx ] cx
setne al
test eax eax
je r-xdata
call sub_427795
retn
call sub_42f278
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ edi ] ax
jne r-xdata
call sub_42889e
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_42f390
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424200
mov eax edi
call sub_42889e
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_42f630
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_424208
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_423914
push esi
mov edi eax
call sub_42f8e6
push esi
call sub_4235c3
push eax
call sub_42f782
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_4228ca
and [ esi + 0x1c ] 0x0
pop ecx
sub_424274
push 0xc
push r--data
call sub_427750
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
push esi
call sub_425a9f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_424208
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4242e3
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_427795
retn
sub_4242eb
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_42889e
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
jbe r-xdata
test esi esi
je r-xdata
push [ ebp + 0xc ]
push 0x0
push ecx
call sub_421970
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
ja r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0xc ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_42f916
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
cmp ebx 0x7fffffff
ja r-xdata
xor edx edx
cmp ebx 0x7fffffff
jbe r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] al
inc edx
dec ebx
dec ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax ebx
mov eax ebx
div ecx
mov eax ebx
mov eax 0x7fffffff
div ecx
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax ebx
mov [ ebp - 0x10 ] ebx
call sub_42889e
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_421970
add esp 0xc
push eax
push [ ebp - 0x4 ]
push esi
call sub_4235c3
pop ecx
push eax
call sub_42fbbf
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push eax
push [ esi ]
push ecx
push [ ebp - 0x4 ]
call sub_42fa37
mov eax [ ebp - 0x10 ]
sub [ esi + 0x4 ] eax
add esp 0x10
sub ebx eax
add [ esi ] eax
jmp r-xdata
call sub_427aa0
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
add [ ebp - 0x4 ] eax
sub [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub ebx eax
test ebx ebx
jne r-xdata
sub_4244c9
push 0xc
push r--data
call sub_427750
xor edi edi
mov [ ebp - 0x1c ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
push esi
call sub_425a9f
pop ecx
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4242eb
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424552
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_427795
retn
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_421970
add esp 0xc
sub_424560
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_4245ec
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_42205a
pop ecx
call sub_42889e
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_428e52
push 0x1e
call sub_428eb2
push 0xff
call sub_421d65
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_42889e
mov [ eax ] ebx
push esi
call sub_42205a
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_42889e
mov [ eax ] ebx
sub_42468e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
and eax 0xffffffef
push edi
mov [ esi + 0xc ] eax
cmp ebx 0x1
jne r-xdata
call sub_42889e
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_42479c
mov edi [ ebp + 0xc ]
add edi eax
pop ecx
xor ebx ebx
jmp r-xdata
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
call sub_423914
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push ebx
push edi
push esi
call sub_4235c3
pop ecx
push eax
call sub_43038f
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop edi
pop ebx
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_42471d
push 0xc
push r--data
call sub_427750
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
push esi
call sub_425a9f
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0xc ]
push esi
call sub_42468e
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424794
mov eax edi
cmp edi 0x1
je r-xdata
call sub_427795
retn
cmp edi 0x2
jne r-xdata
sub_42479c
push ebp
mov ebp esp
mov eax 0x1020
call sub_430650
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x1020 ] ebx
test ebx ebx
jne r-xdata
push esi
push ebx
call sub_4235c3
mov esi eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ ebx + 0x4 ] eax
jge r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
push esi
call sub_43038f
mov ecx eax
add esp 0xc
mov [ ebp - 0x1008 ] ecx
test ecx ecx
jns r-xdata
mov [ ebx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov edx esi
sar edx 0x5
mov [ ebp - 0x1010 ] edx
mov edx [ edx * 4 + rw-data ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x101c ] eax
mov dl [ eax + edx + 0x24 ]
add dl dl
sar dl 0x1
test [ ebx + 0xc ] 0x108
mov [ ebp - 0x1009 ] dl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi [ ebx ]
push edi
mov edi esi
sub edi [ ebx + 0x8 ]
test [ ebx + 0xc ] 0x3
mov [ ebp - 0x1014 ] edi
je r-xdata
sub ecx [ ebx + 0x4 ]
mov eax ecx
jmp r-xdata
pop esi
test [ ebx + 0xc ] 0x80
jne r-xdata
cmp dl 0x1
jne r-xdata
test ecx ecx
jne r-xdata
call sub_42889e
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
cmp [ eax + ecx + 0x30 ] 0x0
mov ecx [ ebp - 0x1008 ]
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x1014 ] ecx
cmp ecx esi
mov ecx [ ebp - 0x1008 ]
jae r-xdata
shr edi 0x1
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop edi
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
mov ebx [ ebp - 0x1018 ]
mov ecx [ edx * 4 + rw-data ]
push 0x0
push [ eax + ecx + 0x2c ]
push [ eax + ecx + 0x28 ]
push ebx
call sub_4304e3
mov ecx [ ebp - 0x101c ]
mov esi eax
mov eax [ ebp - 0x1010 ]
add esp 0x10
mov eax [ eax * 4 + rw-data ]
cmp esi [ ecx + eax + 0x28 ]
jne r-xdata
mov eax ecx
jmp r-xdata
lea eax [ edi + ecx ]
shr edi 0x1
sub esi [ ebx + 0x8 ]
add esi [ ebx + 0x4 ]
mov ebx [ ebp - 0x1010 ]
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1020 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
xor edi edi
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
inc edi
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
sub ecx esi
push 0x2
push 0x0
push [ ebp - 0x1018 ]
call sub_43038f
mov ecx [ ebp - 0x1008 ]
add esp 0xc
cmp eax ecx
jne r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x101c ]
push 0x0
lea edx [ ebp - 0x1014 ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
push ecx
push [ ebp - 0x1018 ]
call sub_43038f
add esp 0xc
test eax eax
jns r-xdata
mov eax [ ebx + 0x8 ]
lea edx [ eax + esi ]
jmp r-xdata
push 0x0
push [ ebp - 0x1008 ]
push ebx
call sub_43038f
add esp 0xc
test eax eax
js r-xdata
mov eax 0x200
cmp esi eax
ja r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x1014 ]
cmp edi eax
ja r-xdata
mov esi [ ebx + 0x18 ]
test [ ebx + 0xc ] 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ ebx + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
test edi edi
je r-xdata
mov dl [ ebp - 0x1009 ]
cmp dl 0x1
jne r-xdata
inc esi
test [ ebx + 0xc ] 0x400
mov esi eax
je r-xdata
inc eax
inc esi
je r-xdata
lea eax [ ebp - 0x1004 ]
sub esi eax
lea eax [ ecx + esi ]
jmp r-xdata
mov edx ecx
add edx eax
shr esi 0x1
mov eax [ ebp - 0x1010 ]
mov ecx [ ebp - 0x101c ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x4
mov ecx [ ebp - 0x1008 ]
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec edi
cmp ecx edx
jae r-xdata
inc ecx
test edi edi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_424af5
push 0xc
push r--data
call sub_427750
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_425a9f
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_42479c
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424b55
mov eax edi
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
call sub_427795
retn
sub_424b5d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
test ebx ebx
jne r-xdata
push edi
push 0x3bc
push 0x1
call sub_427616
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
push edi
call sub_4228ca
pop ecx
test esi esi
je r-xdata
call sub_42869d
push [ eax + 0x6c ]
push edi
call sub_428724
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
push edi
push 0x4
push edi
push sub_424c68
push [ ebp + 0xc ]
mov [ edi + 0x54 ] ebx
push esi
mov [ edi + 0x58 ] eax
call [ CreateThread@IAT ]
mov esi eax
mov [ edi + 0x4 ] esi
test esi esi
jne r-xdata
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
push esi
call sub_42887d
pop ecx
push esi
call [ ResumeThread@IAT ]
cmp eax 0xffffffff
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov eax esi
jmp r-xdata
pop edi
sub_424c3d
push esi
call sub_4286b5
mov esi eax
test esi esi
je r-xdata
push 0x0
call [ ExitThread@IAT ]
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
push esi
call sub_428667
pop ecx
push [ esi + 0x4 ]
call [ CloseHandle@IAT ]
sub_424c68
push ebp
mov ebp esp
call sub_42852a
push eax
call sub_428b3a
mov edx eax
pop ecx
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ ecx + 0x54 ]
mov [ edx + 0x54 ] eax
mov eax [ ecx + 0x58 ]
mov [ edx + 0x58 ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
call sub_428530
push [ ebp + 0x8 ]
call sub_42852a
push eax
call sub_428b59
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_424bfc
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
sub_424cc0
cmp [ rw-data ] 0x0
je r-xdata
mov edx r--data
jmp sub_430b4a
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_430698
sub_424cfc
cmp [ rw-data ] 0x0
je r-xdata
mov edx r--data
jmp sub_43097e
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_430680
sub_424d50
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_42ef25
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_430bd8
sub_424d90
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_42ef68
call sub_424de8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_430bc0
sub_424de8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_42ef0c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1a
call sub_42ee97
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldln2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ rw-data ]
mov edx 0x1a
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42ee97
pop edx
retn
sub_424ea0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_42ef25
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_430e48
sub_424ee0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_42ef68
call sub_424f38
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_430e30
sub_424f38
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42ef0c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fld1
fpatan
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
test eax 0x80000000
je r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0xf
lea ecx [ rw-data ]
jmp r-xdata
mov edx 0xf
lea ecx [ rw-data ]
call sub_42ee97
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fchs
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42ee97
pop edx
retn
sub_424fc0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_42ef25
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431138
sub_425000
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_42ef68
call sub_425058
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431120
sub_425058
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42ef0c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
cmp eax 0x3ff00000
jae r-xdata
call sub_42eef5
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
ja r-xdata
fld1
fadd st1
fld1
fsub st2
fmulp st1
fsqrt
fxch st1
fpatan
cmp [ esp ] 0x27f
je r-xdata
mov edx 0xd
lea ecx [ rw-data ]
call sub_42ee97
pop edx
retn
mov eax [ esp + 0xc ]
mov ecx eax
and eax 0xfffff
or eax [ esp + 0x8 ]
jne r-xdata
mov edx 0xd
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
and ecx 0x80000000
fstp st0
je r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
fldz
jmp r-xdata
fldpi
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42ee97
pop edx
retn
sub_425110
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_42ef25
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431698
sub_425150
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_42ef68
call sub_4251a8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431680
sub_4251a8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42ef0c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
cmp eax 0x3ff00000
jae r-xdata
call sub_42eef5
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
ja r-xdata
fld1
fadd st1
fld1
fsub st2
fmulp st1
fsqrt
fpatan
cmp [ esp ] 0x27f
je r-xdata
mov edx 0xe
lea ecx [ rw-data ]
call sub_42ee97
pop edx
retn
mov eax [ esp + 0xc ]
mov ecx eax
and eax 0xfffff
or eax [ esp + 0x8 ]
jne r-xdata
mov edx 0xe
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
and ecx 0x80000000
fstp st0
fld [ r--data ]
je r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
fchs
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42ee97
pop edx
retn
sub_425260
cmp [ rw-data ] 0x0
je sub_4252ef
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_4252ef
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431c18
sub_4252a0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_42ef68
call sub_4252f8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431c00
sub_4252f8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42ef0c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fptan
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
fld [ r--data ]
fxch st1
fstp st0
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x20
lea ecx [ rw-data ]
call sub_42ee97
pop edx
retn
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fptan
fstp st0
jmp r-xdata
mov edx 0x20
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42ee97
pop edx
retn
sub_425390
cmp [ rw-data ] 0x0
je sub_42541f
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_42541f
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431e78
sub_4253d0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_42ef68
call sub_425428
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431e60
sub_425428
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42ef0c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fcos
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x12
lea ecx [ rw-data ]
call sub_42ee97
pop edx
retn
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fcos
jmp r-xdata
mov edx 0x12
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42ee97
pop edx
retn
sub_4254c0
cmp [ rw-data ] 0x0
je sub_42554f
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_42554f
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_432028
sub_425500
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_42ef68
call sub_425558
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_432010
sub_425558
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42ef0c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fsin
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x1e
lea ecx [ rw-data ]
call sub_42ee97
pop edx
retn
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fsin
jmp r-xdata
mov edx 0x1e
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42ee97
pop edx
retn
sub_42563d
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42ef0c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_42eef5
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ rw-data ]
call sub_42ee97
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42ee97
pop edx
retn
sub_4256e0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push [ rw-data ]
call sub_42dea9
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov ebx eax
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_4368be
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_42d6d1
pop ecx
pop ecx
test eax eax
jle r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_42dea9
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
push ebx
fld [ r--data ]
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xb
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
jmp r-xdata
push ebx
fxch st1
sub esp 0x10
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xb
push 0x10
pop esi
pop ebx
leave
retn
call sub_42d75f
add esp 0x1c
push esi
push ebx
call sub_42dea9
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
jne r-xdata
fld [ ebp + 0x8 ]
push ebx
push ecx
push ecx
fstp [ esp ]
push 0xb
call sub_42da03
add esp 0x10
jmp r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x1
cmp eax 0xbff
jl r-xdata
cmp eax 0x3ff
jl r-xdata
cmppd xmm3 [ r--data ] 0x1
orpd xmm3 [ r--data ]
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0xc32
jg r-xdata
fldz
retn
psllq xmm1 xmm2
cmp eax 0x432
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
subsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ed
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4321d8
add esp 0x10
sub_425810
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push [ rw-data ]
call sub_42dea9
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov ebx eax
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_4368be
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_42d6d1
pop ecx
pop ecx
test eax eax
jle r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_42dea9
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
push ebx
fld [ r--data ]
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
jmp r-xdata
push ebx
fxch st1
sub esp 0x10
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
leave
retn
call sub_42d75f
add esp 0x1c
push esi
push ebx
call sub_42dea9
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
fld [ ebp + 0x8 ]
push ebx
push ecx
push ecx
fstp [ esp ]
push 0xc
call sub_42da03
add esp 0x10
jmp r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4321d8
add esp 0x10
sub_42592d
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
test esi esi
jne r-xdata
pop edi
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_429c40
add esp 0x10
mov edi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_429af3
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_429af3
pop ecx
pop ecx
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_4259ff
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_427616
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_427616
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_425a9f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_428984
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_425ade
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_428984
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_425b0e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_428ae8
pop ecx
pop ebp
retn
sub_425b48
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_428ae8
pop ecx
pop ebp
retn
sub_425b75
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_425b9e
pop ebp
retn
sub_425b9e
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push ebx
push edi
ja r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
xor eax eax
test edx edx
mov [ ecx ] ax
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
call sub_42889e
push 0x16
pop esi
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
push 0x22
add eax 0xfffffffe
pop esi
cmp eax esi
ja r-xdata
call sub_42889e
push 0x22
jmp r-xdata
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
xor eax eax
test edx edx
mov edx [ ebp + 0x8 ]
mov [ ebp + 0x18 ] eax
mov edi ecx
je r-xdata
pop esi
jmp r-xdata
pop edi
pop ebx
mov ecx [ ebp + 0x18 ]
mov ebx edi
push 0x2d
pop eax
mov [ ecx ] ax
xor eax eax
inc eax
lea edi [ ecx + 0x2 ]
mov [ ebp + 0x18 ] eax
neg edx
add eax 0x30
add eax 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ edi ] ax
add edi 0x2
inc ecx
test edx edx
je r-xdata
xor eax eax
mov [ edi ] ax
sub edi 0x2
xor eax eax
mov [ ecx ] ax
call sub_42889e
mov eax edx
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp + 0x8 ] edx
mov edx eax
mov eax [ ebp + 0x8 ]
cmp eax 0x9
jbe r-xdata
movzx ecx [ edi ]
mov ax [ ebx ]
mov [ edi ] ax
mov [ ebx ] cx
sub edi 0x2
add ebx 0x2
cmp ebx edi
jb r-xdata
xor eax eax
sub_425c91
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
test edi edi
jne r-xdata
push 0x24
push 0xff
push edi
call sub_421970
mov esi [ ebp + 0xc ]
add esp 0xc
test esi esi
je r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
cmp [ esi + 0x4 ] ebx
jg r-xdata
push 0x7
pop eax
cmp [ esi + 0x4 ] eax
jl r-xdata
jl r-xdata
call sub_4329c2
lea eax [ ebp - 0x8 ]
push eax
call sub_43271b
pop ecx
test eax eax
jne r-xdata
jg r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp [ esi ] ebx
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_427ab0
int3
lea eax [ ebp - 0xc ]
push eax
call sub_432745
pop ecx
test eax eax
jne r-xdata
cmp [ esi ] 0x93406fff
ja r-xdata
mov eax esi
lea eax [ ebp - 0x4 ]
push eax
call sub_43276f
pop ecx
test eax eax
jne r-xdata
mov ebx [ esi + 0x4 ]
mov ecx [ esi ]
test ebx ebx
jl r-xdata
push esi
push edi
call sub_432799
pop ecx
pop ecx
test eax eax
jne r-xdata
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x8 ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub ecx eax
lea eax [ ebp - 0x14 ]
push eax
sbb ebx edx
push edi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ebx
call sub_432799
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x3f480
jbe r-xdata
mov eax [ edi ]
cdq
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi edx
cdq
sub ebx eax
sbb esi edx
push edi
call sub_432a12
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] eax
je r-xdata
push 0x0
push 0x3c
push esi
push ebx
call sub_433160
mov esi eax
mov eax [ edi + 0x4 ]
mov ebx edx
cdq
push 0x0
add esi eax
push 0x3c
adc ebx edx
push ebx
push esi
call sub_433210
mov [ edi + 0x4 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add ebx 0xffffffc4
mov [ edi ] eax
adc esi 0xffffffff
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov [ edi + 0x20 ] 0x1
cdq
mov ecx eax
mov eax [ edi ]
mov esi edx
cdq
mov ebx eax
sub ebx ecx
sbb edx esi
mov [ ebp + 0x8 ] edx
mov esi edx
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_432a12
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push esi
call sub_433160
mov esi eax
mov eax [ edi + 0x8 ]
mov ebx edx
cdq
push 0x0
add esi eax
push 0x18
adc ebx edx
push ebx
push esi
call sub_433210
mov [ edi + 0x8 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add esi 0xffffffc4
mov [ edi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push esi
push ebx
call sub_433210
mov [ edi ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push edi
call sub_432799
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x0
push 0x18
push ebx
push esi
call sub_433160
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add esi 0xffffffe8
mov [ edi + 0x8 ] eax
adc ebx 0xffffffff
mov [ edi + 0x20 ] 0x1
jmp r-xdata
mov eax [ edi + 0x18 ]
add eax 0x7
add eax ecx
cdq
push 0x7
pop esi
idiv esi
add [ edi + 0xc ] ecx
mov eax [ edi + 0xc ]
mov [ edi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ edi + 0x1c ] ecx
add eax 0x1f
mov [ edi + 0xc ] eax
lea eax [ ecx + 0x16d ]
add [ edi + 0x1c ] eax
dec [ edi + 0x14 ]
mov [ edi + 0x10 ] 0xb
jmp r-xdata
mov eax [ edi + 0x18 ]
add eax ecx
push 0x7
cdq
pop esi
idiv esi
add [ edi + 0xc ] ecx
mov [ edi + 0x18 ] edx
test ecx ecx
je r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_425f09
push ebp
mov ebp esp
movzx eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0x59
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
test eax eax
js r-xdata
sub eax 0x5a
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
cmp eax 0x1fa3
jg r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
cmp eax 0x17
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x18 ]
test eax eax
js r-xdata
dec eax
je r-xdata
cmp eax 0xb
jle r-xdata
call sub_4329c2
push [ ebp + 0x8 ]
xor esi esi
push 0xffffffff
mov [ ebp + 0xc ] esi
call sub_432715
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
xor edx edx
cmp [ ecx + 0x20 ] esi
setne dl
push [ eax + edx * 4 ]
lea eax [ ebp + 0xc ]
push [ edi ]
push [ ebx ]
push eax
call sub_4334d2
add esp 0x18
test eax eax
jne r-xdata
sub eax 0x7
je r-xdata
push 0x64
cdq
pop ecx
idiv ecx
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
test eax eax
js r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
sub eax 0x4
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp eax 0xb
jg r-xdata
cmp eax 0x6
jg r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
dec eax
je r-xdata
inc eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_427ab0
int3
mov ecx [ ebp + 0xc ]
lea eax [ ecx * 2 - 0x2 ]
add [ ebx ] eax
xor eax eax
inc eax
sub eax ecx
add [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
push eax
jmp r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jl r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
sub eax 0x9
je r-xdata
mov ecx [ ebp + 0x1c ]
push [ ecx + 0x150 ]
mov eax [ ebp + 0x1c ]
push [ eax + 0x14c ]
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
call sub_426416
add esp 0x14
jmp r-xdata
jg r-xdata
cmp [ eax ] 0x3b
jg r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x18 ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
push 0xc
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub eax 0x18
je r-xdata
call sub_4264db
add esp 0xc
push [ ebp + 0x8 ]
call sub_426509
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x20 ]
cdq
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push 0x64
pop ecx
idiv ecx
jmp r-xdata
xor eax eax
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xb4 ]
jmp r-xdata
cmp ecx 0xb
jg r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x1c ]
je r-xdata
dec eax
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x18 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
mov edx ecx
mov ecx [ ebp + 0x14 ]
push 0x25
mov eax [ ecx ]
pop edx
mov [ eax ] dx
mov eax [ ebp + 0x18 ]
add [ ecx ] 0x2
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push edx
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xec ]
jmp r-xdata
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
push edi
push ebx
push [ ebp + 0x10 ]
xor esi esi
push esi
push [ ebp + 0x8 ]
call sub_426509
add esp 0x18
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov edi [ ebp + 0x14 ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call sub_426509
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xc ] 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
cmp [ edi ] esi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ eax + 0xc ] 0x1f
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x1c ]
test eax eax
js r-xdata
cmp eax 0x16d
jg r-xdata
test eax eax
je r-xdata
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push 0x20
pop ecx
push [ ebp + 0x1c ]
mov [ eax ] cx
add [ ebx ] 0x2
dec [ edi ]
push edi
push ebx
jmp r-xdata
mov eax [ edi ]
push 0x20
pop ecx
push [ ebp + 0x1c ]
mov [ eax ] cx
add [ edi ] 0x2
dec [ esi ]
push esi
push edi
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax + 0xc ]
cmp eax 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ edx + 0x1c ]
test eax eax
js r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xd0 ]
jmp r-xdata
cmp ecx 0xb
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
push [ ebp + 0x10 ]
push 0x2
push [ ebp + 0x20 ]
inc eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0x11c ]
jmp r-xdata
cmp eax 0x17
sub_426416
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x18 ] esi
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax [ ecx ]
jae r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_426485
add esp 0xc
jmp r-xdata
mov [ ecx ] esi
dec eax
push ebx
lea ebx [ eax + 0x1 ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
lea eax [ esi + esi ]
add [ edi ] eax
sub [ ecx ] esi
pop edi
pop ebx
jmp r-xdata
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
cdq
mov [ ebp + 0x18 ] 0xa
idiv [ ebp + 0x18 ]
mov [ ebp + 0x18 ] eax
mov eax [ edi ]
add edx 0x30
mov [ ecx + eax ] dx
mov eax [ ebp + 0x18 ]
inc esi
lea ecx [ ecx - 0x2 ]
dec ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub_426485
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ecx ]
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] 0x1
jbe r-xdata
mov edx [ ecx ]
mov [ ecx ] esi
sub esi 0x2
push ebx
mov ebx [ ebp + 0x8 ]
movzx ecx [ esi ]
mov ax [ edx ]
mov [ esi ] ax
mov [ edx ] cx
sub esi 0x2
add edx 0x2
cmp edx esi
jb r-xdata
pop edi
pop esi
pop ebp
retn
pop ebx
cmp [ edi ] 0x1
ja r-xdata
mov eax ebx
cdq
push 0xa
pop ebx
idiv ebx
mov ebx eax
lea eax [ edx + 0x30 ]
mov [ esi ] ax
add esi 0x2
dec [ edi ]
test ebx ebx
jle r-xdata
sub_4264db
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
pop edi
pop esi
mov eax [ esi ]
add edx 0x2
mov [ eax ] di
add [ esi ] 0x2
dec [ ecx ]
jne r-xdata
movzx edi [ edx ]
test di di
je r-xdata
sub_426509
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov [ ebp - 0x28 ] eax
mov eax ebx
xor esi esi
push edi
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] ecx
sub eax esi
je r-xdata
mov edi [ ecx + 0x154 ]
dec eax
je r-xdata
movzx esi [ edi ]
test si si
je r-xdata
sub ebx 0x2
neg ebx
sbb ebx ebx
mov eax 0x76c
add ax [ edx + 0x14 ]
push esi
mov [ ebp - 0x14 ] ax
mov ax [ edx + 0x10 ]
inc ax
mov [ ebp - 0x12 ] ax
mov ax [ edx + 0xc ]
mov [ ebp - 0xe ] ax
mov ax [ edx + 0x8 ]
mov [ ebp - 0xc ] ax
mov ax [ edx + 0x4 ]
mov [ ebp - 0xa ] ax
mov ax [ edx ]
mov [ ebp - 0x8 ] ax
xor eax eax
push esi
push edi
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x14 ]
push eax
not ebx
push esi
push [ ecx + 0x160 ]
and ebx 0x1
je r-xdata
mov edi [ ecx + 0x158 ]
jmp r-xdata
mov edi [ ecx + 0x15c ]
jmp r-xdata
xor eax eax
inc eax
mov ebx [ ebp - 0x28 ]
call sub_433672
call sub_4336bb
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
je r-xdata
and [ ebp - 0x1c ] 0x0
xor ecx ecx
mov ebx edi
movzx edx si
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
add esp 0x18
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
add ebx 0x2
inc ecx
movzx eax [ ebx ]
cmp eax edx
je r-xdata
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x28 ]
cmp edx 0x64
jg r-xdata
push eax
call sub_4245ec
mov esi eax
pop ecx
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call sub_4337b0
mov esi esp
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
sub edx 0x68
je r-xdata
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
dec ecx
je r-xdata
sub edx 0x5
je r-xdata
dec ecx
je r-xdata
push 0x27
pop eax
cmp edx eax
je r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push esi
push edi
push eax
mov eax [ ebp - 0x24 ]
push 0x0
push [ eax + 0x160 ]
test ebx ebx
je r-xdata
add esi 0x8
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
mov [ ebp - 0x1c ] 0x1
dec ecx
je r-xdata
dec ecx
je r-xdata
sub edx 0x6
je r-xdata
mov [ ebp - 0x1c ] 0x1
dec ecx
je r-xdata
lea edi [ edi + ecx * 2 ]
test cl 0x1
je r-xdata
cmp edx 0x41
je r-xdata
call sub_433672
call sub_4336bb
jmp r-xdata
xor eax eax
jmp r-xdata
movzx esi [ edi ]
test si si
jne r-xdata
push 0x49
mov edx [ ebp - 0x20 ]
add edi 0x2
mov eax [ edx ]
mov [ eax ] si
add [ edx ] 0x2
dec [ ebx ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec ecx
je r-xdata
dec ecx
je r-xdata
dec edx
je r-xdata
mov edi [ ebp - 0x18 ]
push 0x64
jmp r-xdata
dec ecx
je r-xdata
movzx ecx [ edi ]
test cx cx
je r-xdata
push r--data
push edi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edx 0x48
je r-xdata
push esi
call sub_426a45
pop ecx
mov ebx [ ebp - 0x28 ]
mov esi [ ebp - 0x20 ]
mov edx eax
add esp 0x18
dec edx
mov edi esi
test edx edx
jle r-xdata
lea esp [ ebp - 0x3c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42b4bf
leave
retn
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
push 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec ecx
je r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp - 0x24 ]
jg r-xdata
sub edx 0x5
jne r-xdata
push 0x61
jmp r-xdata
dec ecx
jne r-xdata
mov edx [ ebp - 0x20 ]
push r--data
push edi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0xa
jmp r-xdata
dec ecx
je r-xdata
cmp edx 0x4d
je r-xdata
mov esi [ ebp - 0x1c ]
mov ecx [ esi ]
mov ax [ edi ]
mov [ ecx ] ax
add [ esi ] 0x2
add edi 0x2
dec [ ebx ]
dec edx
test edx edx
jg r-xdata
push 0x53
jmp r-xdata
jmp r-xdata
mov edx [ eax + 0x150 ]
mov edx [ eax + 0x14c ]
jmp r-xdata
dec ecx
dec ecx
je r-xdata
push 0x41
jmp r-xdata
add edi 0x2
cmp cx ax
je r-xdata
mov edi [ ebp - 0x18 ]
add edi 0x6
jmp r-xdata
push 0x70
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec ecx
je r-xdata
dec ecx
je r-xdata
cmp edx 0x61
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
movzx ecx [ edx ]
test cx cx
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp ecx 0x1
jne r-xdata
push 0x79
jmp r-xdata
dec ecx
dec ecx
jne r-xdata
mov eax [ edx ]
push 0x27
mov [ eax ] cx
add [ edx ] 0x2
dec [ ebx ]
movzx ecx [ edi ]
pop eax
test cx cx
jne r-xdata
pop eax
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push ebx
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push eax
push [ ebp - 0x30 ]
call sub_425f09
add esp 0x1c
test eax eax
je r-xdata
push 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec ecx
je r-xdata
mov edi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x20 ]
mov esi [ ebp - 0x20 ]
mov ax [ edx ]
mov ecx [ esi ]
mov [ ecx ] ax
add [ esi ] 0x2
dec [ ebx ]
jmp r-xdata
push 0x59
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
push 0x6d
jmp r-xdata
dec ecx
je r-xdata
mov eax [ esi ]
add edx 0x2
mov [ eax ] cx
add [ esi ] 0x2
dec [ ebx ]
movzx ecx [ edx ]
test cx cx
jne r-xdata
push 0x62
jmp r-xdata
dec ecx
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
push 0x42
jmp r-xdata
sub_426904
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x1c ]
xor esi esi
mov [ ebp - 0xc ] eax
call sub_421b3f
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov [ eax ] cx
test edi edi
je r-xdata
mov edx [ ebp + 0x18 ]
test edx edx
jne r-xdata
mov eax ebx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ eax + 0x9c ]
mov [ ebp + 0x18 ] edx
mov eax esi
mov ecx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
ja r-xdata
test eax eax
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp bx 0x25
mov ebx [ ebp + 0xc ]
je r-xdata
call sub_42889e
mov [ eax ] 0x22
jmp r-xdata
xor eax eax
mov esi ebx
mov [ ecx ] ax
sub esi [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ecx ] ax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add ecx 0x2
add edi 0x2
dec eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add edi 0x2
mov eax esi
cmp [ edi ] 0x23
jne r-xdata
mov edx [ ebp + 0x18 ]
test eax eax
jne r-xdata
push eax
push edx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
movzx eax [ edi ]
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_425f09
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
inc eax
add edi 0x2
movzx ebx [ edi ]
mov [ ebp - 0x8 ] ebx
movzx ebx bx
test ebx ebx
mov ebx [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add edi 0x2
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov [ ecx ] dx
test eax eax
jne r-xdata
sub_426a45
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4228ca
pop ecx
sub_426a80
push 0x14
push r--data
call sub_427750
call sub_428b7b
movzx esi ax
push 0x2
call sub_433b46
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_42a937
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_4287d7
test eax eax
jne r-xdata
push 0x1c
call sub_426bd0
cmp [ eax + r--data ] ebx
setne bl
call sub_428944
and [ ebp - 0x4 ] 0x0
call sub_42ba66
test eax eax
jns r-xdata
push 0x10
call sub_426bd0
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_433c2d
mov [ rw-data ] eax
call sub_43382b
test eax eax
jns r-xdata
push 0x1b
call sub_426bd0
call sub_433a64
test eax eax
jns r-xdata
push 0x8
call sub_421d7b
push 0x1
call sub_421db5
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_421d7b
call sub_433c88
push esi
push eax
push 0x0
push __dos_header
call sub_403682
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_421d7b
call sub_421da6
jmp sub_426bc1
push esi
call sub_422011
sub_426c10
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_4270e4 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_426fe8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4270e4 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_426e5c ]
jmp [ ecx * 4 + jump_table_426edc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_426f48 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4270e4 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_426f48 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4270e4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4270e4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4270e4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_426f48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_426f48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_426f48 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_426f48 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_427254
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn
xor ecx ecx
mov eax ebx
mov [ rw-data ] ebx
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x10 ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
test [ ebp - 0x8 ] 0x100000
mov [ rw-data ] esi
je r-xdata
test [ ebp - 0x8 ] 0x10000000
je r-xdata
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
push 0x7
xor ecx ecx
pop eax
cpuid
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0xc ] 0x200
mov esi [ rw-data ]
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
xor eax eax
xor ecx ecx
cpuid
lea edi [ ebp - 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
cmp [ ebp - 0xc ] 0x756e6547
jne r-xdata
or esi 0x2
mov [ rw-data ] esi
pop edi
pop esi
cmp [ ebp - 0x4 ] 0x49656e69
jne r-xdata
cmp [ ebp - 0x8 ] 0x6c65746e
jne r-xdata
xor eax eax
inc eax
xor ecx ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x10 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
or esi 0x1
mov [ rw-data ] esi
cmp eax 0x20660
je r-xdata
cmp eax 0x20670
je r-xdata
cmp eax 0x30650
je r-xdata
cmp eax 0x30660
je r-xdata
cmp eax 0x30670
jne r-xdata
sub_4273a8
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_4273d6
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4273d6
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_42746c
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_42742e
jmp r-xdata
sub_427409
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_42746c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_42742e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_4223f0
lea edi [ eax + 0x1 ]
push edi
call sub_4245ec
pop ecx
pop ecx
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_4332c2
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_427495
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test [ eax ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov eax [ ecx ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] 0x1994000
sub_4274fe
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4274f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_4275e5
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
pop ebp
retn
sub_427616
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433e5a
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_427660
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_4245ec
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_4276a9
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433d46
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_4276f5
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433df1
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_427750
push sub_4277b0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4277b0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
xor edi [ rw-data ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
lea esi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42b4bf
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42b4bf
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_42f76b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
mov ebx [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
add ecx esi
xor ecx [ edx + esi ]
call sub_42b4bf
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42b4bf
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_42f722
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_42f752
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_42f76b
mov eax [ ebp + 0xc ]
push rw-data
call sub_4290c0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42b4bf
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_42f739
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42b4bf
sub_427945
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_421970
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_428e3c
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_433ed4
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_42b4bf
leave
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_433ed4
pop ecx
sub_427a75
push ebp
mov ebp esp
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427ab0
int3
pop ebp
jmp eax
sub_427ab0
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_427945
push esi
call sub_428e27
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_427adb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
cmp [ edi + 0x78 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
push [ edi + 0x78 ]
call esi
cmp [ edi + 0x7c ] 0x0
je r-xdata
push eax
call esi
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
push [ edi + 0x7c ]
call esi
push 0x6
pop eax
lea ebx [ edi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call esi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call esi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0x9c ]
add eax 0xb0
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push [ ebx - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
sub_427b6b
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0x84 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
lea edi [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_4228ca
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_4228ca
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_4228ca
push [ esi + 0x88 ]
call sub_4228ca
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_43403f
push [ esi + 0x9c ]
call sub_4228ca
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4228ca
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4228ca
push [ ebx ]
call sub_4228ca
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_4228ca
push [ esi + 0x84 ]
call sub_4228ca
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4228ca
push [ esi + 0x84 ]
call sub_433edc
pop ecx
pop ecx
push eax
call sub_4228ca
pop ecx
push eax
call sub_4228ca
push [ esi + 0x84 ]
call sub_433fd8
pop ecx
pop ecx
sub_427cc5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
cmp [ esi + 0x78 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
push [ esi + 0x78 ]
call edi
cmp [ esi + 0x7c ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push [ esi + 0x7c ]
call edi
push 0x6
pop eax
lea ebx [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call edi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov ecx [ esi + 0x9c ]
add ecx 0xb0
push ecx
call edi
pop edi
pop ebx
push [ ebx - 0x4 ]
call edi
mov eax [ ebp + 0x8 ]
sub_427d60
push 0xc
push r--data
call sub_427750
call sub_42869d
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_427ddc
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427dd3
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_42869d
mov esi [ eax + 0x6c ]
mov eax esi
call sub_427795
retn
push 0x20
call sub_421d7b
sub_427ddc
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_427adb
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_427cc5
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_427b6b
pop ecx
sub_427e45
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_427e7f
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_421b3f
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_427eeb
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_421970
xor eax eax
movzx ecx ax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x21c ] edi
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
add esp 0xc
sub edi ebx
mov ecx 0x101
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_427f54
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
pop eax
sub eax edx
mov ecx ebx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
lea ecx [ ebp - 0x512 ]
jmp r-xdata
mov [ edx ] bl
or [ esi + ecx + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov eax [ ebp - 0x520 ]
inc ecx
lea edx [ esi + 0x119 ]
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_4344ab
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_42d590
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_42d590
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_4280e2
push 0xc
push r--data
call sub_427750
call sub_42869d
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42817e
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_427795
retn
push 0x20
call sub_421d7b
cmp esi rw-data
je r-xdata
push esi
call sub_4228ca
pop ecx
sub_428187
push 0x10
push r--data
call sub_427750
or edi 0xffffffff
call sub_42869d
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_4280e2
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_427e7f
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_427660
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_427795
retn
mov ecx 0x88
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_428335
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push [ eax + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov eax [ ebp - 0x1c ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_42889e
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_4228ca
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_4228ca
pop ecx
mov eax [ ebp - 0x1c ]
push 0xd
call sub_428984
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4282ff
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_4228ca
pop ecx
sub_428335
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_427e7f
mov ebx eax
pop ecx
mov [ ebp - 0x20 ] ebx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x1c ] ecx
mov eax edi
push esi
call sub_427eeb
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_421970
mov edx [ ebp - 0x1c ]
add esp 0xc
imul edx edx 0x30
lea eax [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov ebx [ ebp - 0x20 ]
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_427e45
add esp 0x4
mov [ esi + 0x21c ] eax
push 0x6
lea ecx [ esi + 0xc ]
lea edx [ edx + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx ebx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
mov [ ecx ] ax
lea edx [ edx + 0x2 ]
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_427f54
cmp ebx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp ebx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + ebx + 0x19 ] al
movzx eax [ ecx + 0x1 ]
inc ebx
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_421970
mov [ esi + 0x4 ] ebx
xor ebx ebx
inc ebx
add esp 0xc
mov [ esi + 0x21c ] edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_427eeb
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_427e45
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx ecx [ eax ]
movzx edx dl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_428530
push 0x8
push r--data
call sub_427750
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_427795
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_4228ca
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_4228ca
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_4228ca
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_4228ca
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_4228ca
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_4228ca
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_4228ca
pop ecx
push 0xd
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push [ esi + 0x5c ]
call sub_4228ca
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_428652
push 0xc
call sub_428984
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42865e
push esi
call sub_4228ca
pop ecx
push edi
call sub_427cc5
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_4228ca
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_427b6b
pop ecx
sub_428667
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x0
push eax
call sub_428b59
pop ecx
pop ecx
push esi
call sub_428530
pop esi
push eax
call sub_428b3a
mov esi eax
mov eax [ rw-data ]
pop ecx
sub_4286b5
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_428b3a
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_427616
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_428b59
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_4228ca
pop ecx
xor esi esi
push 0x0
push esi
call sub_428724
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_428724
push 0x8
push r--data
call sub_427750
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4287c5
push 0xc
call sub_428984
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_427adb
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4287ce
call sub_427795
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_4287d7
call sub_421e5a
call sub_428ab3
test eax eax
jne r-xdata
push sub_428530
call sub_428afd
pop ecx
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call sub_42884d
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_427616
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_42884d
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_428b59
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_428724
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_42887d
push ebp
mov ebp esp
push esi
call sub_42886a
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4288b1
pop ecx
mov esi eax
call sub_42889e
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4288b1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4288f2
push 0x8
push r--data
call sub_427750
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_427795
retn
push 0xc
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_427ddc
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42893b
sub_428944
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_428964
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_428984
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_428a0c
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_421d7b
sub_4289b8
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_4228ca
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_428a0c
push 0x8
push r--data
call sub_427750
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_428e52
push 0x1e
call sub_428eb2
push 0xff
call sub_421d65
xor eax eax
inc eax
push 0x18
call sub_427660
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_42889e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_4228ca
pop ecx
push 0xfa0
push esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_427795
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_428aaa
sub_428ab3
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
mov [ esi ] edi
push 0xfa0
push [ esi ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_428b59
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_428b7b
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
leave
retn
movzx eax [ ebp - 0x14 ]
leave
retn
sub_428b9c
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
setg al
pop esi
leave
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_428bda
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_428e52
push 0x3
call sub_433b53
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_428eb2
push 0xff
call sub_428eb2
pop ecx
pop ecx
push 0x3
call sub_433b53
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_428e8b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_428eb2
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_428e8b
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_42b4bf
leave
retn
push ebx
push 0x3
call sub_433b53
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_433b53
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_433317
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_4223f0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_427ab0
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_4218fb
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_433317
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_434645
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_4218fb
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub esi eax
push esi
push ecx
call sub_42a9fb
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_434645
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_4346d0
add esp 0xc
jmp r-xdata
sub_429070
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x3c ]
add ecx eax
push esi
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
xor edx edx
add eax ecx
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4290c0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4277b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_429180
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_429070
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429180
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_429258
push 0x24
push r--data
call sub_427750
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_4286b5
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_42940d
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_421e46
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ rw-data ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_427795
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_428984
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x30 ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ rw-data ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x34 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x2c ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4293d3
cmp esi 0x8
jne r-xdata
mov ecx edx
imul ecx ecx 0xc
mov eax [ edi + 0x5c ]
and [ ecx + eax + 0x8 ] 0x0
inc edx
mov [ ebp - 0x2c ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_42940d
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul edx edx 0xc
add edx [ ebp + 0xc ]
cmp ecx edx
jae r-xdata
mov eax edx
imul eax eax 0xc
add eax [ ebp + 0xc ]
add ecx 0xc
cmp ecx eax
jb r-xdata
xor eax eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
mov eax ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_429449
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_423914
and [ esi + 0xc ] 0xffffeeff
xor eax eax
pop ecx
mov [ esi + 0x18 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_42947a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4235c3
push eax
call sub_4349a2
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
push edi
call sub_425a99
add eax 0x20
cmp esi eax
jne r-xdata
call sub_425a99
add eax 0x40
cmp esi eax
jne r-xdata
xor edi edi
jmp r-xdata
xor eax eax
xor edi edi
inc edi
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ edi * 4 + rw-data ] 0x0
push ebx
mov ebx 0x1000
jne r-xdata
mov ecx [ edi * 4 + rw-data ]
mov [ esi + 0x8 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_427660
pop ecx
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
inc eax
pop ebx
jmp r-xdata
sub_429520
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4295b5
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
xor eax eax
leave
retn
push ebx
push esi
push edi
movzx edi [ ecx ]
xor ebx ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
cmp eax 0x2
jl r-xdata
push 0x8
push edi
call sub_429aa1
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jg r-xdata
movzx edi [ esi ]
add esi 0x2
mov eax [ ebp + 0x14 ]
cmp di 0x2d
jne r-xdata
cmp di 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
movzx edi [ esi ]
add esi 0x2
cmp eax 0x10
jne r-xdata
push edi
call sub_4349f6
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
push edi
call sub_4349f6
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp edx ecx
jae r-xdata
push 0x41
pop eax
cmp ax di
ja r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x10 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp ebx edi
jb r-xdata
push 0x19
lea eax [ edi - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp di 0x5a
jbe r-xdata
movzx edi [ esi + 0x2 ]
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
test al 0x4
jne r-xdata
test edi edi
je r-xdata
imul ebx ecx
add ebx edx
jne r-xdata
lea eax [ edi - 0x61 ]
movzx edx di
cmp ax cx
ja r-xdata
mov eax [ ebp - 0x4 ]
push 0x19
pop ecx
call sub_42889e
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
je r-xdata
test al 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push edi
call sub_4349f6
mov edx eax
pop ecx
cmp edx 0xffffffff
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x4
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
cmp edx [ ebp - 0xc ]
jbe r-xdata
add edx 0xffffffc9
sub edx 0x20
push 0x0
test al 0x2
pop ebx
setne bl
add ebx 0x7fffffff
or ebx 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
mov ecx eax
and ecx 0x2
je r-xdata
sub esi 0x2
test al 0x8
jne r-xdata
jmp r-xdata
test al 0x2
je r-xdata
mov [ edi ] esi
test ecx ecx
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
movzx edi [ esi ]
add esi 0x2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
neg ebx
cmp ebx 0x7fffffff
jbe r-xdata
sub_4297a9
push ebp
mov ebp esp
sub esp 0x34
lea ecx [ ebp - 0x34 ]
push [ ebp + 0x8 ]
call sub_421b3f
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push ebx
push esi
xor edx edx
push edi
test ecx ecx
je r-xdata
mov [ eax ] ecx
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor ecx ecx
mov eax ecx
mov edi ecx
movzx ebx [ ecx ]
mov edi edx
push 0x8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0xc ] ebx
lea esi [ ecx + 0x2 ]
call sub_429aa1
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x2
jl r-xdata
mov edx edi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x2c ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x18 ]
cmp bx 0x2d
jne r-xdata
movzx edi [ esi ]
push 0x8
push edi
mov [ ebp - 0xc ] edi
add esi 0x2
call sub_429aa1
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jle r-xdata
cmp bx 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
movzx ebx [ esi ]
add esi 0x2
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
cmp eax 0x24
jg r-xdata
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
push ebx
call sub_4349f6
pop ecx
test eax eax
je r-xdata
cdq
mov ecx edx
push ecx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
call sub_429520
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edx
push ebx
call sub_4349f6
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0xa
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
cmp ecx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax bx
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x14 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov ecx [ ebp + 0x10 ]
or ebx 0x8
mov [ ebp - 0x8 ] ebx
cmp edi [ ebp - 0x14 ]
jb r-xdata
push 0x19
lea eax [ ebx - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp bx 0x5a
jbe r-xdata
movzx ebx [ esi + 0x2 ]
mov [ ebp - 0xc ] ebx
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
push 0x8
jmp r-xdata
test bl 0x4
jne r-xdata
test ecx ecx
je r-xdata
push edi
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_434ba0
add eax [ ebp - 0xc ]
push 0x0
mov [ ebp - 0x4 ] eax
mov edi edx
pop eax
adc edi eax
mov edx [ ebp - 0x10 ]
ja r-xdata
lea eax [ ebx - 0x61 ]
cmp ax cx
movzx eax bx
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
push 0x19
pop ecx
pop eax
mov [ ebp + 0x14 ] eax
jmp r-xdata
call sub_42889e
mov [ eax ] 0x22
test bl 0x1
je r-xdata
test bl 0x1
jne r-xdata
xor edx edx
mov eax edx
mov edi edx
jmp r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_4349f6
pop ecx
mov ecx eax
mov [ ebp - 0xc ] eax
cmp ecx 0xffffffff
jne r-xdata
cmp eax edx
jne r-xdata
cmp eax edx
jb r-xdata
lea ecx [ eax - 0x37 ]
mov [ ebp - 0xc ] ecx
sub eax 0x20
test bl 0x2
je r-xdata
or eax 0xffffffff
or edi 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx ebx
and ecx 0x2
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
or ebx 0x4
mov [ ebp - 0x8 ] ebx
test ecx ecx
je r-xdata
cmp edi [ ebp - 0x14 ]
jne r-xdata
or eax 0xffffffff
mov edi 0x7fffffff
jmp r-xdata
xor edx edx
mov eax edx
mov edi 0x80000000
jmp r-xdata
xor edx edx
test bl 0x2
je r-xdata
mov [ ecx ] esi
xor edx edx
cmp edi 0x80000000
ja r-xdata
sub esi 0x2
test bl 0x8
jne r-xdata
jmp r-xdata
xor edx edx
cmp edx [ ebp - 0x18 ]
jb r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
neg eax
adc edi edx
neg edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp edi 0x7fffffff
jb r-xdata
jb r-xdata
movzx ebx [ esi ]
add esi 0x2
jmp r-xdata
ja r-xdata
ja r-xdata
xor edx edx
cmp eax edx
ja r-xdata
cmp ecx [ ebp - 0x1c ]
jbe r-xdata
cmp eax 0xffffffff
jbe r-xdata
jmp r-xdata
test ecx ecx
jne r-xdata
sub_429a77
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_4297a9
add esp 0x14
pop ebp
retn
sub_429aa1
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_429af3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_4235c3
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_42889e
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_425a99
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_42bd14
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
dec eax
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_4349a2
pop ecx
test eax eax
jne r-xdata
call sub_425a99
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp + 0x8 ]
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_42bd14
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_434bd4
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_4304e3
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_429c40
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x450 ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x430 ] eax
call sub_421b3f
call sub_42889e
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
cmp [ ebp - 0x444 ] bl
je r-xdata
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x448 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_42a83c ]
mov edi [ ebp - 0x434 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
sar eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x7
ja r-xdata
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_42a85c
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x440 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_4228ca
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_42a8be
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_42a892
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x450 ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ rw-data ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_434c1a
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x45c ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x450 ]
movzx eax al
push ecx
push eax
call sub_422272
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_434db4
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_42a8be
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_42a892
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_427660
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ rw-data ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_4223f0
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ rw-data ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_42a892
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x45c ]
call sub_42a85c
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_429520
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x45c ]
push ecx
push eax
call sub_434db4
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_42a85c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_434c2f
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
sub_42a892
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_42a85c
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_42a8be
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_42a85c
mov eax [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x2
add esp 0xc
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_42a85c
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_42a94c
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_421b3f
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_422272
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4344ab
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42a9fb
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_42889e
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_42889e
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
sub_42aab9
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
call sub_42889e
push 0x16
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov edx eax
mov eax [ ebp + 0x10 ]
mov ecx ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x14 ]
xor eax eax
test esi esi
je r-xdata
movzx eax [ eax ]
test ax ax
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
cmp [ esi ] ax
je r-xdata
push 0x2
pop edx
cmp edi edx
jbe r-xdata
mov esi [ ebp + 0x1c ]
test esi esi
je r-xdata
jmp r-xdata
inc edx
cmp edx edi
jae r-xdata
xor eax eax
mov [ ebx ] ax
call sub_42889e
push 0x22
jmp r-xdata
mov [ ebx ] ax
lea ecx [ ebx + 0x2 ]
push 0x3a
pop eax
mov [ ecx ] ax
add ecx edx
lea eax [ edx + 0x1 ]
cmp eax edi
jbe r-xdata
movzx eax [ esi ]
test ax ax
je r-xdata
cmp [ esi ] ax
jne r-xdata
mov ax [ esi ]
mov [ ecx ] ax
add esi 0x2
xor eax eax
add ecx 0x2
cmp [ esi ] ax
jne r-xdata
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
xor eax eax
mov [ ecx ] ax
jmp r-xdata
mov [ ebp + 0x8 ] 0x2e
cmp ax [ ebp + 0x8 ]
je r-xdata
inc edx
cmp edx edi
jae r-xdata
movzx eax [ esi - 0x2 ]
cmp eax 0x2f
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ esi ] ax
jne r-xdata
inc edx
cmp edx edi
jae r-xdata
mov ax [ esi ]
mov [ ecx ] ax
add ecx 0x2
add esi 0x2
xor eax eax
xor eax eax
push 0x5c
pop esi
cmp ax si
je r-xdata
inc edx
cmp edx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
inc edx
cmp edx edi
jae r-xdata
mov ax [ esi ]
add esi 0x2
mov [ ecx ] ax
add ecx 0x2
mov [ ecx ] si
add ecx 0x2
sub_42abdc
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x10 ]
push eax
xor esi esi
push esi
push esi
push esi
push esi
push ecx
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x1c ] ecx
mov edi esi
call sub_42ac83
mov ebx eax
add esp 0x20
test bl 0x4
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_434ebf
pop ecx
pop ecx
test bl 0x2
jne r-xdata
mov edi 0x200
mov eax esi
jmp r-xdata
mov edi 0x80
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x1c ]
mov [ edx ] edi
sar ecx 0x1
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
pop edi
mov [ edx + 0x10 ] esi
pop esi
mov [ edx + 0x14 ] eax
xor ecx ebp
mov eax edx
pop ebx
call sub_42b4bf
leave
retn
or edi 0x100
cmp eax 0x2
jne r-xdata
test bl 0x1
jne r-xdata
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_42ac83
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x5c ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x78 ] eax
mov eax ebx
lea esi [ ebp - 0x20 ]
push edi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x74 ] ebx
mov edi ebx
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x64 ] 0x9
mov [ ebp - 0x68 ] 0xa
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
xor eax eax
jmp r-xdata
add edx 0x2
jmp r-xdata
cmp cx [ ebp - 0x64 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
movzx ecx [ edx ]
cmp ecx 0x20
je r-xdata
cmp cx [ ebp - 0x68 ]
je r-xdata
cmp ecx 0xd
jne r-xdata
mov [ ebp - 0x68 ] 0x8
mov [ ebp - 0x6c ] 0x30
mov [ ebp - 0x64 ] 0x39
push 0xa
pop ecx
cmp eax ecx
jne r-xdata
jmp [ eax * 4 + jump_table_42b48f ]
movzx ecx [ edx ]
add edx 0x2
mov [ ebp - 0x7c ] ecx
cmp eax 0xb
ja r-xdata
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp ax [ ebp - 0x68 ]
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x70 ] eax
lea eax [ ecx - 0x31 ]
cmp ax [ ebp - 0x68 ]
jbe r-xdata
lea eax [ ecx - 0x31 ]
push 0x8
pop ecx
cmp ax cx
jbe r-xdata
xor eax eax
inc eax
push 0x30
mov [ ebp - 0x70 ] eax
pop eax
cmp cx ax
jb r-xdata
xor eax eax
inc eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x50 ]
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x30 ]
push 0x9
pop ecx
cmp ax cx
ja r-xdata
lea eax [ edx - 0x4 ]
mov [ ebp - 0x4c ] eax
lea eax [ ecx - 0x31 ]
cmp ax [ ebp - 0x68 ]
ja r-xdata
xor eax eax
inc eax
push 0x30
mov [ ebp - 0x74 ] eax
pop eax
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp ax [ ebp - 0x68 ]
jbe r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x74 ] eax
mov edi ebx
jmp r-xdata
mov eax [ ebp - 0x5c ]
mov [ eax ] edx
mov eax [ ebp - 0x70 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x24 ]
movzx ecx cx
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
movsx eax [ eax ]
cmp ecx eax
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
movzx ecx cx
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
movsx eax [ eax ]
cmp ecx eax
jne r-xdata
mov eax [ ebp + 0x24 ]
mov esi [ ebp - 0x7c ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
movsx ecx [ eax ]
movzx eax si
cmp eax ecx
jne r-xdata
mov eax [ ebp + 0x24 ]
movzx ecx cx
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
movsx eax [ eax ]
cmp ecx eax
je r-xdata
mov eax [ ebp - 0x50 ]
mov edi [ ebp - 0x54 ]
cmp cx [ ebp - 0x6c ]
cmp cx [ ebp - 0x6c ]
jne r-xdata
mov edx [ ebp - 0x4c ]
jmp r-xdata
push 0x4
jmp r-xdata
movzx eax cx
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp cx ax
je r-xdata
push 0x30
pop eax
cmp cx ax
jmp r-xdata
push 0xa
pop eax
sub edx 0x2
lea eax [ edx - 0x2 ]
mov [ ebp - 0x4c ] eax
movzx eax cx
sub eax 0x2b
je r-xdata
push 0x30
pop eax
cmp cx ax
jae r-xdata
mov eax ebx
mov esi ebx
push 0x4
mov eax [ ebp - 0x50 ]
cmp eax 0x18
jbe r-xdata
sub ecx 0x2b
je r-xdata
push 0x5
cmp ecx 0x2b
je r-xdata
push 0x4
jmp r-xdata
push 0x30
pop eax
cmp si ax
jne r-xdata
push 0x5
pop eax
cmp ecx 0x2b
je r-xdata
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x58 ] esi
mov edi ebx
cmp eax 0x19
jae r-xdata
movzx eax cx
cmp eax 0x2b
je r-xdata
mov edi [ ebp - 0x54 ]
jb r-xdata
mov esi [ ebp - 0x54 ]
pop eax
sub edx 0x2
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
movzx ecx [ edx ]
add edx 0x2
lea eax [ ecx - 0x31 ]
push 0x8
pop ecx
cmp ax cx
ja r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp cx [ ebp - 0x64 ]
ja r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x80 ] ebx
jmp r-xdata
dec ecx
dec ecx
je r-xdata
sub edx 0x2
push 0xb
jmp r-xdata
cmp ecx 0x2d
je r-xdata
pop eax
jmp r-xdata
mov edx [ ebp - 0x4c ]
mov esi [ ebp - 0x58 ]
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx 0x2d
je r-xdata
inc edi
sub cl 0x30
inc eax
mov [ esi ] cl
inc esi
jmp r-xdata
cmp eax 0x2d
je r-xdata
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x58 ] esi
mov edi ebx
cmp eax 0x19
jae r-xdata
movzx ecx [ edx ]
dec esi
add edx 0x2
cmp cx [ ebp - 0x6c ]
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi [ ebp - 0x58 ]
push 0x7
or ecx 0xffffffff
pop eax
mov [ ebp - 0x78 ] ecx
jmp r-xdata
sub eax 0x3
sub edx 0x2
jmp r-xdata
push 0x8
jmp r-xdata
or [ ebp - 0x78 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp cx ax
jae r-xdata
imul edi edi 0xa
movzx eax cx
add edi 0xffffffd0
add edi eax
cmp edi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec esi
cmp [ esi ] bl
jne r-xdata
mov ecx [ ebp - 0x54 ]
dec esi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x54 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov ecx 0x8000
pop eax
mov [ ebp - 0x80 ] ecx
jmp r-xdata
sub ecx 0x3
jne r-xdata
push 0x30
pop eax
cmp ecx eax
je r-xdata
mov esi [ ebp - 0x58 ]
jmp r-xdata
jmp r-xdata
cmp cx [ ebp - 0x64 ]
ja r-xdata
movzx ecx [ edx ]
add edx 0x2
cmp cx [ ebp - 0x6c ]
jae r-xdata
cmp eax 0x43
jle r-xdata
movzx ecx [ edx ]
add edx 0x2
cmp cx [ ebp - 0x6c ]
jae r-xdata
sub cl 0x30
inc eax
mov [ esi ] cl
inc esi
dec edi
cmp cx [ ebp - 0x64 ]
ja r-xdata
push 0x30
mov edi 0x1451
pop eax
jmp r-xdata
movzx ecx [ edx ]
add edx 0x2
mov edi [ ebp - 0x84 ]
or eax [ ebp - 0x80 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
mov eax ebx
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_43599f
mov ecx [ ebp - 0x78 ]
add esp 0xc
test ecx ecx
jns r-xdata
dec eax
inc ecx
dec esi
cmp [ esi ] bl
je r-xdata
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx 0x43
jle r-xdata
cmp eax 0x45
jle r-xdata
cmp cx [ ebp - 0x64 ]
ja r-xdata
movzx ecx [ edx ]
add edx 0x2
mov eax [ ebp - 0x74 ]
add edi [ ebp - 0x54 ]
test eax eax
jne r-xdata
neg edi
mov [ ebp - 0x54 ] ecx
cmp ecx 0x45
jle r-xdata
push 0x6
jmp r-xdata
add eax 0xffffff9c
jmp r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
jne r-xdata
add edi [ ebp + 0x18 ]
lea eax [ ecx - 0x64 ]
xor ecx ecx
inc ecx
cmp eax ecx
ja r-xdata
cmp edi 0x1450
jg r-xdata
sub edi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp edi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
xor ebx ebx
inc ebx
jmp r-xdata
mov eax rw-data
sub eax 0x60
test edi edi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax rw-data
neg edi
sub eax 0x60
test edi edi
je r-xdata
xor ecx ecx
mov [ ebp - 0x3c ] cx
mov [ ebp - 0x7c ] 0x7fff
test edi edi
jne r-xdata
imul ecx ecx 0xc
add ecx eax
mov eax 0x8000
mov [ ebp - 0x68 ] ecx
cmp [ ecx ] ax
jb r-xdata
mov ecx edi
add eax 0x54
sar edi 0x3
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x78 ] edi
and ecx 0x7
je r-xdata
movzx eax [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov esi eax
xor esi edx
and esi 0x8000
mov [ ebp - 0x70 ] esi
mov esi 0x7fff
and eax esi
and edx esi
mov [ ebp - 0x5c ] eax
add eax edx
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x74 ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
mov edi [ ebp - 0x78 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x68 ] ecx
xor eax eax
cmp [ ebp - 0x70 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x5c ]
cmp ax [ ebp - 0x7c ]
jae r-xdata
mov [ ebp - 0x5c ] 0xbffd
cmp si [ ebp - 0x5c ]
ja r-xdata
mov [ ebp - 0x5c ] 0x3fbf
cmp si [ ebp - 0x5c ]
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test ax ax
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x74 ] esi
jne r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
push 0x5
mov eax ebx
pop edi
mov [ ebp - 0x50 ] eax
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x6c ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x74 ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x6c ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
mov ecx edi
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x5c ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x74 ]
mov edx [ ebp - 0x24 ]
mov edi [ ebp - 0x2c ]
add esi 0xc002
mov [ ebp - 0x58 ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi [ ebp - 0x60 ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x4c ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x54 ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x60 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov ecx eax
mov edx edi
shr edx 0x1f
add eax eax
or eax edx
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x28 ] eax
shr ecx 0x1f
add edx edx
mov eax 0xffff
or edx ecx
add edi edi
add esi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
mov eax [ ebp - 0x64 ]
sub eax 0x2
add esi 0x2
dec ecx
mov [ ebp - 0x64 ] eax
test ecx ecx
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x50 ] ecx
shr [ ebp - 0x50 ] 0x1
or [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x60 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ eax ]
mov [ ebp - 0x60 ] eax
movzx eax [ esi ]
mov edi [ ebp - 0x60 ]
imul edi eax
mov [ ebp - 0x60 ] edi
add edi [ edx - 0x4 ]
mov [ ebp - 0x5c ] ebx
cmp edi [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x68 ]
mov edi [ ebp - 0x6c ]
mov eax [ ebp - 0x50 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x58 ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x58 ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
xor ecx ecx
mov ax di
inc ecx
or ax cx
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov edi [ ebp - 0x78 ]
mov eax 0x7fff
cmp si ax
jae r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_42b545
push ebp
mov ebp esp
push esi
call sub_4286b5
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
add edi 0xc
and [ edi + eax - 0x4 ] 0x0
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_42b6a0
push 0x8
push r--data
call sub_427750
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_427795
retn
push 0xa
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b723
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
sub_42b72c
push 0x18
push r--data
call sub_427750
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_428a0c
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b8c8
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_427795
retn
push 0x40
push 0x20
call sub_427616
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_42b6a0
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_428984
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42b800
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_42b8d1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_42886a
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
sar edi 0x5
mov esi eax
mov ecx [ edi * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_42b957
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
call sub_427aa0
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_42b9be
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_42886a
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
sar ebx 0x5
mov edi ecx
mov eax [ ebx * 4 + rw-data ]
and edi 0x1f
shl edi 0x6
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_42ba40
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
add ecx 0xc
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42ba66
push 0x64
push r--data
call sub_427750
push 0xb
call sub_428984
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_427616
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_42f630
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_427795
retn
mov [ ebp - 0x2c ] ebx
cmp ebx 0x3
jge r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42bd0b
xor eax eax
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp [ esi ] 0xfffffffe
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_427616
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
jmp r-xdata
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + ebx * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi 0xfffffffe
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_42bd14
push 0x10
push r--data
call sub_427750
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
call sub_427aa0
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_42b6a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_42886a
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42bdf6
add esp 0xc
mov edi eax
jmp r-xdata
call sub_427795
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42bdcd
mov eax edi
jmp r-xdata
sub_42bdf6
push ebp
mov ebp esp
mov eax 0x1af0
call sub_430650
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
push edi
mov edi edx
mov [ ebp - 0x1ac0 ] eax
mov [ ebp - 0x1abc ] ecx
mov [ ebp - 0x1ac4 ] edi
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
shl esi 0x6
mov [ ebp - 0x1ad0 ] ecx
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x1aec ] esi
mov bl [ esi + ecx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_42886a
and [ eax ] edi
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_42b4bf
leave
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac0 ]
call sub_42886a
and [ eax ] edi
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
jmp r-xdata
test [ esi + ecx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_4349a2
pop ecx
test eax eax
je r-xdata
push 0x2
push edx
push edx
push eax
call sub_4305df
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
pop esi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1abc ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
xor esi esi
mov [ ebp - 0x1ac8 ] esi
test bl bl
jne r-xdata
call sub_42869d
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae4 ]
push eax
mov eax [ ebp - 0x1ad0 ]
sete cl
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov edi [ ebp - 0x1ad8 ]
xor esi esi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov eax edx
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] esi
jbe r-xdata
cmp [ ebp - 0x1ac0 ] edi
je r-xdata
sub edi [ ebp - 0x1ad4 ]
mov eax edi
test esi esi
je r-xdata
mov edx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1adc ] ecx
test ebx ebx
je r-xdata
mov [ ebp - 0x1ac0 ] ecx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad0 ]
mov ecx [ ebp - 0x1aec ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
sub eax edx
mov edx [ ebp - 0x1ac4 ]
lea ebx [ ebp - 0x1ab8 ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1abc ]
and [ ebp - 0x1adc ] edi
mov ecx edx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test bl bl
je r-xdata
push 0x5
pop ebx
cmp esi ebx
jne r-xdata
mov [ ebp - 0x1ae8 ] 0xa
mov [ ebp - 0x1ae8 ] 0xa
call sub_42889e
mov [ eax ] 0x1c
call sub_42886a
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1add ] cl
cmp cl 0xa
mov ecx [ ebp - 0x1ac0 ]
mov [ ebp - 0x1ac4 ] edx
jne r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ae8 ] 0xa
push esi
call sub_42887d
pop ecx
jmp r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_42886a
mov [ eax ] ebx
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] eax
test eax eax
je r-xdata
movzx edi [ esi ]
add esi 0x2
add ecx 0x2
mov [ ebp - 0x1adc ] esi
cmp di [ ebp - 0x1ae8 ]
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0x1ad4 ] edi
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
test eax eax
je r-xdata
movzx esi [ ecx ]
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1ac0 ] ecx
cmp si [ ebp - 0x1ae8 ]
jne r-xdata
xor eax eax
jmp r-xdata
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov dl [ ebp - 0x1add ]
mov [ ebx ] dl
mov edx [ ebp - 0x1ac4 ]
inc ebx
inc ecx
mov [ ebp - 0x1ac0 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1ad4 ]
mov [ ebx ] 0xd
inc ebx
inc ecx
cmp bl 0x1
je r-xdata
mov cl [ ecx ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad0 ]
mov edx [ eax * 4 + rw-data ]
cmp [ esi + edx + 0x38 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] di
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop esi
mov [ eax ] si
mov esi [ ebp - 0x1adc ]
add eax 0x2
add edx 0x2
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
mov [ ebp - 0x1ac4 ] edi
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov [ ebx ] si
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
push 0xd
pop ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x1ac0 ]
add edi 0x2
add ebx 0x2
add edx 0x2
test edi edi
jne r-xdata
mov eax [ ebp - 0x1ac4 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
mov eax [ ebp - 0x1ac4 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx eax [ ecx ]
xor edx edx
cmp ax [ ebp - 0x1ae8 ]
mov [ ebp - 0x1ac4 ] eax
mov eax [ ebp - 0x1ac8 ]
sete dl
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax cl
push eax
call sub_4222a8
pop ecx
test eax eax
je r-xdata
mov al [ esi + edx + 0x34 ]
mov [ ebp - 0xc ] al
push 0x2
lea eax [ ebp - 0xc ]
mov [ ebp - 0xb ] cl
and [ esi + edx + 0x38 ] 0x0
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov esi eax
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] esi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ad8 ]
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac0 ]
mov eax ecx
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1ac4 ]
call sub_436634
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1acc ]
mov eax [ ebp - 0x1abc ]
mov edx [ ebp - 0x1acc ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_434ea7
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1adc ]
mov edx [ ebp - 0x1abc ]
mov edi ecx
sub edi edx
mov [ ebp - 0x1ac4 ] edi
cmp edi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ad8 ]
push edx
push eax
lea eax [ ebp - 0x1410 ]
add eax ecx
mov ecx [ ebp - 0x1aec ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov edi [ ebp - 0x1ad4 ]
mov eax ecx
sub eax edx
mov edx [ ebp - 0x1ae4 ]
lea ebx [ ebp - 0x1ab8 ]
jmp r-xdata
add edi 0x2
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
mov eax [ ebp - 0x1acc ]
mov ebx [ ebp - 0x1ad0 ]
mov al [ edx ]
mov ecx [ ebx * 4 + rw-data ]
inc edi
mov [ esi + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ esi + eax + 0x38 ] 0x1
push 0x2
push edx
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_434ea7
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov esi [ ebp - 0x1adc ]
sub ecx edx
mov edx [ ebp - 0x1ae4 ]
lea eax [ ebp - 0x6b8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x1ac8 ]
mov ecx [ ebp - 0x1acc ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac4 ] eax
call sub_436634
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1adc ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
inc eax
inc [ ebp - 0x1ac8 ]
jmp r-xdata
inc edi
inc [ ebp - 0x1ad4 ]
mov edi [ ebp - 0x1ac8 ]
mov eax [ ebp - 0x1ae4 ]
add edi [ ebp - 0x1ad4 ]
cmp [ ebp - 0x1adc ] eax
jl r-xdata
xor ecx ecx
push ecx
push ecx
inc eax
inc [ ebp - 0x1ac8 ]
push 0x5
mov [ ebp - 0x1acc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1ac4 ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ae4 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1adc ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0xc ] 0xd
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1adc ] 0x1
jl r-xdata
inc [ ebp - 0x1ad4 ]
inc edi
jmp r-xdata
sub_42c620
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x230 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x23c ] eax
call sub_421b3f
call sub_42889e
mov [ ebp - 0x254 ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x26c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
test esi esi
je r-xdata
push eax
call sub_4235c3
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42b4bf
leave
retn
mov ecx [ ebp - 0x270 ]
and [ ecx + 0x70 ] 0xfffffffd
mov cl [ esi ]
xor eax eax
mov edx eax
mov [ ebp - 0x220 ] edx
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x211 ] cl
mov [ ebp - 0x24c ] cl
test cl cl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
mov esi [ ebp - 0x264 ]
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
and edx 0x1f
sar eax 0x5
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
lea eax [ ecx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax cl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_42d188 ]
mov edi [ ebp - 0x244 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
sar eax 0x4
mov [ ebp - 0x244 ] edi
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x244 ] eax
cmp eax 0x7
ja r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
inc eax
mov [ ebp - 0x210 ] eax
test edx edx
js r-xdata
xor eax eax
or [ ebp - 0x228 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax cl
sub eax 0x20
je r-xdata
cmp cl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x228 ] eax
jmp r-xdata
cmp cl 0x2a
jne r-xdata
cmp cl 0x49
je r-xdata
xor eax eax
movsx eax cl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
mov [ ebp - 0x238 ] eax
movsx eax cl
mov ecx [ ebp - 0x238 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x238 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x238 ] eax
test eax eax
jns r-xdata
mov edx [ ebp - 0x228 ]
imul edx edx 0xa
movsx eax cl
add edx 0xffffffd0
add edx eax
mov [ ebp - 0x228 ] edx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x228 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp cl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_42d1a8
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_42d1a8
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
jmp r-xdata
mov edx [ ebp - 0x220 ]
mov cl [ eax ]
mov [ ebp - 0x211 ] cl
mov [ ebp - 0x24c ] cl
test cl cl
jne r-xdata
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp cl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp cl 0x77
jne r-xdata
mov edx [ ebp - 0x228 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x228 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
xor esi esi
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x224 ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x224 ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x248 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x228 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x218 ] ebx
lea esi [ ebp - 0x20c ]
mov [ ebp - 0x240 ] edx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add cl 0x20
mov [ ebp - 0x260 ] 0x1
mov [ ebp - 0x211 ] cl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x23c ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_4228ca
xor eax eax
pop ecx
mov [ ebp - 0x258 ] eax
mov edi [ ebp - 0x238 ]
sub edi [ ebp - 0x224 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x228 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x228 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x254 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_42d21a
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_42d1ee
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax edx
jle r-xdata
cmp cl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x278 ]
push eax
push [ ebp - 0x260 ]
movsx eax cl
push [ ebp - 0x228 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x240 ]
lea eax [ ebp - 0x280 ]
push esi
push eax
push [ rw-data ]
call [ rw-data ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_434c1a
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x224 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x224 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x228 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x228 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x224 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x23c ] ecx
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x224 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x224 ]
push eax
call sub_436797
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x244 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x254 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_42d21a
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_42d1ee
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_427660
pop ecx
mov cl [ ebp - 0x211 ]
mov [ ebp - 0x258 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x278 ]
push eax
push esi
push [ rw-data ]
call [ rw-data ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov [ ebp - 0x23c ] eax
lea eax [ ebp - 0x278 ]
push eax
movzx eax cl
push eax
call sub_422272
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x258 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x228 ] 0xa3
mov esi eax
mov [ ebp - 0x240 ] edi
jmp r-xdata
push esi
call sub_4223f0
pop ecx
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x218 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x278 ]
push eax
push esi
push [ rw-data ]
call [ rw-data ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x224 ]
cdq
push edx
push eax
push edi
push ecx
call sub_429520
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov [ ebp - 0x240 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_42d1ee
add esp 0x10
or edx 0xffffffff
mov [ ebp - 0x220 ] edx
jmp r-xdata
cmp [ ebp - 0x25c ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x228 ]
mov [ esi ] cl
mov ecx [ ebp - 0x240 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x250 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x224 ] eax
test ebx 0x200
je r-xdata
test edx edx
js r-xdata
push [ ebp - 0x254 ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x25c ]
push eax
call sub_42d21a
mov eax [ ebp - 0x240 ]
mov ecx [ ebp - 0x264 ]
add esp 0x14
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x228 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x240 ] eax
movzx eax [ ecx ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x25c ]
add ecx 0x2
push eax
mov [ ebp - 0x264 ] ecx
call sub_436797
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x224 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov edx [ ebp - 0x220 ]
sub_42d1a8
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x40
je r-xdata
dec [ edx + 0x4 ]
js r-xdata
cmp [ edx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebp + 0x8 ]
push edx
push eax
call sub_429af3
pop ecx
pop ecx
mov eax [ edx ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
jne r-xdata
sub_42d1ee
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_42d1a8
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_42d21a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_42d1a8
mov eax [ ebp + 0x14 ]
add esp 0xc
inc [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_42d1a8
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_42d292
push 0x14
push r--data
call sub_427750
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_427aa0
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_42b6a0
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_42b957
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_427795
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d357
mov eax esi
jmp r-xdata
call sub_42886a
mov [ eax ] esi
sub_42d378
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4336f0
add esp 0x18
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_4346b1
pop ecx
pop ecx
sub_42d3a7
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
setne al
push 0x0
push esi
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov ecx eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42b4bf
leave
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
push ebx
call sub_426a45
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4336f0
mov edi eax
add esp 0x18
test edi edi
je r-xdata
push ecx
call sub_4245ec
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_4337b0
mov ebx esp
test ebx ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
push edi
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4336f0
add esp 0x18
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax ecx
ja r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4336f0
add esp 0x18
jmp r-xdata
push esi
call sub_426a45
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
push eax
call sub_4245ec
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4337b0
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_42d590
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42d3a7
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42d5d4
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
push edi
fldz
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
fstp st0
push ecx
push ecx
fstp [ esp ]
call sub_42d6a6
movzx edi si
shr edi 0x4
and edi 0x7ff
add esp 0xc
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_42d6a6
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_42d6a6
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx eax [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
and eax 0x800f
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
leave
retn
sub_42d6d1
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_42d72d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_42d75f
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
push esi
lea eax [ ebx + 0x18 ]
push eax
push [ ebx + 0x8 ]
call sub_42d827
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_42d72d
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42da74
mov esi [ ebx + 0x20 ]
add esp 0x1c
push eax
call sub_42dd59
mov [ esp ] 0xffff
push esi
call sub_42dea9
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_42dd86
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_42b4bf
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_42d827
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
test bl 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push 0x1
call sub_42ded2
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_42ded2
pop ecx
and esi 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_42ded2
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_42ded2
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42d5d4
mov eax [ ebp + 0x8 ]
fst [ ebp - 0xc ]
fldz
add eax 0xfffffa00
add esp 0xc
mov [ ebp + 0x8 ] eax
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_42ded2
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0x6 ]
and eax 0xf
or eax 0x10
mov [ ebp - 0x6 ] ax
mov eax [ ebp + 0x8 ]
mov ecx 0xfffffc03
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0xc ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0xc ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0x8 ] 0x1
dec ecx
jne r-xdata
or eax 0x80000000
mov [ ebp - 0xc ] eax
inc edi
test [ ebp - 0xc ] 0x1
je r-xdata
sub_42da03
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_42889e
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_42dea9
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fst [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_42dd86
add esp 0x24
pop ebp
retn
sub_42da53
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42da74
add esp 0x1c
pop ebp
retn
sub_42da74
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push ebx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
inc ebx
push edi
test cl 0x10
je r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
jmp r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x2
je r-xdata
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_42df28
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
fld [ ebx ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_42de9a
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
mov edx 0xfffff3ff
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_42dd59
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_42889e
mov [ eax ] 0x22
pop ebp
retn
sub_42dd86
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + rw-data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_42dea9
push [ ebp + 0x8 ]
call sub_42dd59
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_42dea9
lea eax [ ebp - 0x20 ]
push eax
call sub_4367b2
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + rw-data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_42dd59
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_42de24
push 0x8
push r--data
call sub_427750
cmp [ rw-data ] 0x1
jl r-xdata
call sub_427795
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_42dea9
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ecx
and cx [ ebp - 0x4 ]
or cx ax
movzx eax cx
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_42ded2
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_42df69
movlpd xmm0 [ esp + 0x4 ]
movlpd xmm7 [ r--data ]
movlpd xmm2 [ r--data ]
andpd xmm7 xmm0
movsd xmm4 xmm0
psrlq xmm0 0x2c
pextrw eax xmm0 0x0
orpd xmm7 xmm2
pextrw ecx xmm4 0x3
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm7 [ eax * 4 + r--data ]
movlpd xmm5 [ eax * 4 + r--data ]
add eax eax
movapd xmm6 [ eax * 4 + r--data ]
mov edx 0x7fef
sub edx ecx
sub ecx 0x10
or ecx edx
cmp ecx 0x80000000
jae r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm3 [ r--data ]
movd eax xmm1
movsd xmm2 xmm1
andpd xmm1 xmm3
psrlq xmm1 0x20
movd ecx xmm1
cmp ecx 0x7ff00000
jae r-xdata
mov ecx 0x0
mov edx 0x3fe7f
movlpd xmm7 [ esp + 0x4 ]
movlpd xmm4 [ esp + 0x4 ]
movd edx xmm7
psrlq xmm7 0x20
movd eax xmm7
mov ecx eax
and eax 0x7fffffff
cmp eax 0x7ff00000
jb r-xdata
or eax ecx
cmp eax 0x0
je r-xdata
movlpd xmm4 [ esp + 0x4 ]
movlpd xmm2 [ esp + 0xc ]
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm2
pcmpeqd xmm1 xmm3
pmovmskb eax xmm1
and eax 0xff
cmp eax 0xff
jne r-xdata
and edx 0x7ff0
sub eax 0x3ff0
add eax edx
mov edx 0x40a0
sub edx eax
sub eax 0x3c70
or edx eax
cmp edx 0x80000000
jae r-xdata
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm2
pcmpeqd xmm1 xmm3
pmovmskb eax xmm1
and eax 0xff
cmp eax 0xff
jne r-xdata
ja r-xdata
movd eax xmm4
psrlq xmm4 0x20
movd edx xmm4
and edx 0x7fffffff
mov ecx eax
or eax edx
movlpd xmm0 [ r--data ]
mov edx 0x1a
cmp eax 0x0
je r-xdata
cmp edx 0x0
jge r-xdata
addsd xmm2 xmm2
movsd xmm0 xmm2
mov edx 0x3ee
jmp r-xdata
movd eax xmm4
cmp eax 0x0
jne r-xdata
pshufd xmm4 xmm1 0x44
mulpd xmm4 xmm6
pextrw eax xmm4 0x3
and eax 0x7ff0
mov edx 0x40a0
sub edx eax
sub eax 0x3c70
or edx eax
cmp edx 0x80000000
jb r-xdata
subsd xmm4 xmm6
subsd xmm2 xmm4
movlpd xmm4 [ r--data ]
andpd xmm3 xmm1
andpd xmm4 xmm6
subsd xmm0 xmm2
xorpd xmm2 xmm2
mov edx 0x4060
pinsrw xmm2 edx 0x3
movsd xmm5 xmm3
mulsd xmm3 xmm4
subsd xmm6 xmm4
subsd xmm1 xmm5
mulsd xmm3 xmm2
mulsd xmm5 xmm6
movapd xmm2 [ r--data ]
mulsd xmm4 xmm1
cvtsd2si eax xmm3
mulsd xmm6 xmm1
movapd xmm1 [ r--data ]
addsd xmm5 xmm4
pshufd xmm4 xmm6 0xee
addsd xmm5 xmm6
mov edx 0x1ff7f
sub edx eax
add eax 0x1e1ff
or edx eax
sub eax 0x1e1ff
cmp edx 0x0
jle r-xdata
pextrw eax xmm2 0x3
movlpd xmm4 [ esp + 0x4 ]
and eax 0x8000
xor ecx 0xbff00000
or edx ecx
cmp edx 0x0
je r-xdata
addsd xmm4 xmm4
movsd xmm0 xmm4
mov edx 0x3ee
jmp r-xdata
cmp edx 0x0
ja r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x18
mov [ esp + 0x4 ] edx
sub edx 0x8
mov [ esp ] edx
call sub_4321d8
fld [ esp + 0x10 ]
add esp 0x1c
retn
movd eax xmm4
mov edx 0x1d
and eax 0x7fffffff
cmp eax 0x7ff00000
ja r-xdata
mov ecx 0x0
neg edx
add edx 0x7fef
psllq xmm3 0x34
orpd xmm2 xmm3
mov ecx 0x3f3
movd xmm3 ecx
psrlq xmm1 0x14
psubd xmm1 xmm3
pxor xmm3 xmm3
pmaxsw xmm1 xmm3
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
mov ecx edx
and edx 0x7fff
cmp edx 0x7ff0
jae r-xdata
psrlq xmm4 0x20
movd edx xmm4
cmp edx 0x3ff00000
je r-xdata
cmp eax 0x80000000
jb r-xdata
cmp eax 0x0
jle r-xdata
add ecx eax
and eax 0x7f
and ecx 0xffffff80
add ecx 0x1ff80
addsd xmm4 xmm0
movsd xmm0 xmm3
addsd xmm3 [ r--data ]
mulpd xmm2 xmm7
subsd xmm3 [ r--data ]
mulpd xmm7 xmm7
subsd xmm0 xmm3
add eax eax
add eax eax
add eax eax
add eax eax
movapd xmm3 [ eax + r--data ]
movapd xmm6 [ r--data ]
mulpd xmm1 xmm7
addpd xmm2 xmm1
pshufd xmm1 xmm2 0xee
mulsd xmm2 xmm7
xorpd xmm7 xmm7
mov edx 0x3f80
addsd xmm2 xmm1
pinsrw xmm7 edx 0x3
addsd xmm2 xmm4
movlpd xmm4 [ r--data ]
movd xmm1 ecx
mulsd xmm2 [ esp + 0xc ]
mulsd xmm0 xmm7
psllq xmm1 0x2d
pshufd xmm1 xmm1 0x44
movapd xmm7 [ r--data ]
addsd xmm5 xmm2
mulpd xmm3 xmm1
addsd xmm0 xmm5
unpcklpd xmm0 xmm0
mulpd xmm6 xmm0
mulsd xmm4 xmm0
mulpd xmm0 xmm0
addpd xmm7 xmm6
mulpd xmm7 xmm0
mulsd xmm0 xmm3
pshufd xmm6 xmm7 0xee
mulsd xmm0 xmm7
pshufd xmm5 xmm3 0xee
mulsd xmm6 xmm3
mulsd xmm4 xmm3
addsd xmm0 xmm5
sub esp 0x10
addsd xmm0 xmm6
addsd xmm0 xmm4
addsd xmm0 xmm3
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm0 [ r--data ]
mov edx 0x1c
cmp eax 0x0
je r-xdata
jmp r-xdata
jb r-xdata
mov edx eax
and edx 0x7fffffff
cmp edx 0x0
jne r-xdata
andpd xmm7 xmm0
movsd xmm4 xmm0
andpd xmm0 [ r--data ]
psrlq xmm0 0x2c
pextrw eax xmm0 0x0
orpd xmm7 xmm2
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm7 [ eax * 4 + r--data ]
movlpd xmm5 [ eax * 4 + r--data ]
add eax eax
movapd xmm6 [ eax * 4 + r--data ]
mov edx 0x43e7f
jmp r-xdata
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm4
pcmpeqd xmm1 xmm3
pmovmskb ecx xmm1
and ecx 0xff
cmp ecx 0xff
jne r-xdata
and eax 0xff
cmp eax 0xff
jne r-xdata
cmp edx 0xbff00000
jne r-xdata
movlpd xmm4 [ esp + 0x4 ]
pextrw edx xmm4 0x3
and edx 0x7ff0
sub edx 0x3ff0
pextrw eax xmm1 0x3
xor eax edx
and eax 0x8000
cmp eax 0x0
jne r-xdata
or ecx 0x1ff80
movd xmm0 ecx
psllq xmm0 0x2d
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp eax 0xfffc0200
jle r-xdata
cmp eax 0x40000
jae r-xdata
pextrw eax xmm4 0x3
and eax 0x7ff0
cmp eax 0x3ff0
jae r-xdata
pextrw eax xmm4 0x3
and eax 0x7ff0
cmp eax 0x3ff0
jb r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp ecx 0x0
ja r-xdata
mov edx [ esp + 0x10 ]
and edx 0x80000000
cmp edx 0x0
je r-xdata
movd xmm1 edx
psubq xmm0 xmm1
psrlq xmm0 0x8
cvtdq2pd xmm0 xmm0
movlpd xmm1 [ r--data ]
movsd xmm3 xmm7
psrlq xmm7 0x26
pextrw eax xmm7 0x0
andpd xmm4 [ r--data ]
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm3 [ eax * 4 + r--data ]
mulsd xmm5 [ eax * 4 + r--data ]
add eax eax
addpd xmm6 [ eax * 4 + r--data ]
orpd xmm4 [ r--data ]
addsd xmm6 xmm0
andpd xmm1 xmm4
movsd xmm2 xmm3
psrlq xmm3 0x1f
pextrw eax xmm3 0x0
movlpd xmm0 [ r--data ]
subsd xmm4 xmm1
movlpd xmm7 [ r--data ]
and eax 0x1ff
add eax 0x1
and eax 0x3fe
mulsd xmm5 [ eax * 4 + r--data ]
mulsd xmm2 [ eax * 4 + r--data ]
addpd xmm6 [ eax * 8 + r--data ]
andpd xmm0 xmm5
subsd xmm5 xmm0
addsd xmm7 xmm2
movsd xmm3 xmm0
mulsd xmm0 xmm1
mulsd xmm1 xmm5
mulsd xmm3 xmm4
subsd xmm2 xmm0
mulsd xmm4 xmm5
movsd xmm0 xmm6
subsd xmm2 xmm1
addsd xmm6 xmm7
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
subsd xmm2 xmm3
subsd xmm0 xmm6
movlpd xmm3 [ r--data ]
pextrw edx xmm6 0x3
subsd xmm2 xmm4
movsd xmm4 xmm6
addsd xmm0 xmm7
subsd xmm7 xmm2
subsd xmm6 xmm2
unpcklpd xmm7 xmm7
and eax 0x7ff0
cmp eax 0x7ff0
jae r-xdata
pextrw ecx xmm4 0x3
and ecx 0x8000
cmp ecx 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd edx xmm2
and edx 0x7fffffff
or eax edx
mov ecx 0x0
cmp eax 0x0
je r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm2 [ esp + 0xc ]
mov ecx 0x3f4
movd xmm3 ecx
andpd xmm1 [ r--data ]
psrlq xmm1 0x34
psubd xmm1 xmm3
movlpd xmm3 [ r--data ]
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
and eax 0xff
mov ecx 0x3ff01
add ecx eax
and ecx 0x40000
cmp edx 0x10
jb r-xdata
fld1
retn
movlpd xmm0 [ r--data ]
movd xmm1 ecx
mulsd xmm0 xmm0
psllq xmm1 0x2d
orpd xmm0 xmm1
mov edx 0x19
jmp r-xdata
jmp r-xdata
push esi
mov edx eax
and eax 0x7f
add ecx 0x80
and edx 0xffffff80
add edx 0x3fe80
push edi
mov edi 0x0
mov edx 0x18
cmp ecx 0x0
je r-xdata
push esi
mov edx eax
and eax 0x7f
add ecx 0x3ff00
sub edx 0x80
and edx 0xffffff80
push edi
mov edi 0x3ff0
jmp r-xdata
fld [ r--data ]
retn
fldz
retn
fldz
retn
shl ecx 0xd
and eax ecx
cmp eax 0x0
jne r-xdata
shl ecx 0xd
and eax ecx
mov edx 0x7ff00000
or edx eax
movd xmm0 edx
psllq xmm0 0x20
movlpd xmm1 [ r--data ]
movlpd xmm2 [ esp + 0x4 ]
divsd xmm1 xmm2
mov edx 0x1b
jmp r-xdata
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
and eax 0xff
cmp eax 0xff
jne r-xdata
movlpd xmm1 [ r--data ]
movlpd xmm0 [ r--data ]
mulsd xmm1 xmm1
mov edx 0x1c
jmp r-xdata
xorpd xmm0 xmm0
mov eax 0x43f0
pinsrw xmm0 eax 0x3
movlpd xmm7 [ r--data ]
movlpd xmm2 [ r--data ]
mulsd xmm0 xmm4
movd edx xmm4
psrlq xmm4 0x20
movd eax xmm4
cmp edx 0x0
je r-xdata
mov edx 0xbfe7f
movlpd xmm3 [ r--data ]
movlpd xmm2 [ r--data ]
jmp r-xdata
pop esi
addsd xmm0 xmm1
mulsd xmm0 xmm7
mulsd xmm6 xmm0
addsd xmm0 xmm6
pextrw eax xmm0 0x3
and eax 0x7ff0
mov edx 0x18
cmp eax 0x7ff0
je r-xdata
pop esi
mulsd xmm0 xmm7
mulsd xmm1 xmm7
addsd xmm0 xmm1
mulsd xmm6 xmm0
addsd xmm0 xmm6
pextrw eax xmm0 0x3
and eax 0x7ff0
mov edx 0x18
cmp eax 0x7ff0
je r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 xmm0
jmp r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
jmp r-xdata
addsd xmm4 xmm0
movsd xmm0 xmm3
addsd xmm3 [ r--data ]
mov esi edx
sub esi 0x1ff80
mulpd xmm2 xmm7
subsd xmm3 [ r--data ]
mulpd xmm7 xmm7
subsd xmm0 xmm3
add eax eax
add eax eax
add eax eax
add eax eax
movapd xmm3 [ eax + r--data ]
movapd xmm6 [ r--data ]
mulpd xmm1 xmm7
addpd xmm2 xmm1
pshufd xmm1 xmm2 0xee
mulsd xmm2 xmm7
addsd xmm2 xmm1
addsd xmm2 xmm4
movlpd xmm4 [ r--data ]
movd xmm1 edx
sub edx 0x1ff80
neg edx
sar edx 0x7
add edx 0x2
mov eax edx
and eax 0x20
add edx eax
xorpd xmm7 xmm7
mov eax 0x3f80
pinsrw xmm7 eax 0x3
mulsd xmm2 [ esp + 0x14 ]
mulsd xmm0 xmm7
psllq xmm1 0x2d
pshufd xmm1 xmm1 0x44
movapd xmm7 [ r--data ]
addsd xmm5 xmm2
mulpd xmm3 xmm1
addsd xmm0 xmm5
unpcklpd xmm0 xmm0
mulpd xmm6 xmm0
mulsd xmm4 xmm0
mulpd xmm0 xmm0
addpd xmm7 xmm6
mulpd xmm7 xmm0
mulsd xmm0 xmm3
pshufd xmm6 xmm7 0xee
mulsd xmm0 xmm7
pshufd xmm5 xmm3 0xee
mulsd xmm6 xmm3
mulsd xmm4 xmm3
movd xmm7 ecx
psllq xmm7 0x2d
movd xmm2 edx
pcmpeqd xmm1 xmm1
psllq xmm1 xmm2
addsd xmm0 xmm5
addsd xmm0 xmm6
andpd xmm1 xmm3
addsd xmm0 xmm4
xorpd xmm6 xmm6
pcmpeqd xmm4 xmm4
psllq xmm4 xmm2
subsd xmm3 xmm1
movsd xmm2 xmm1
addsd xmm1 xmm0
andpd xmm1 xmm4
pinsrw xmm6 edi 0x3
pop edi
subsd xmm2 xmm1
addsd xmm0 xmm2
addsd xmm0 xmm3
cmp esi 0x0
jg r-xdata
fld [ r--data ]
retn
fldz
retn
fldz
retn
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm2 [ esp + 0xc ]
mov ecx 0x3f4
movd xmm3 ecx
andpd xmm1 [ r--data ]
psrlq xmm1 0x34
psubd xmm1 xmm3
pxor xmm3 xmm3
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
and eax 0xff
cmp eax 0xff
je r-xdata
mov edx 0x19
cmp eax 0x0
je r-xdata
mov edx 0x19
cmp eax 0x0
je r-xdata
fldz
retn
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
fld [ r--data ]
retn
sub_42eab0
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_42ec41
or eax eax
je r-xdata
fxch st1
jmp sub_42ee56
xor ch ch
cmp eax 0x2
je r-xdata
call sub_42ebfe
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_42eda8
fchs
sub_42eac1
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_42ebfe
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_42eda8
fchs
sub_42eb6d
call sub_42ec41
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_42ebfe
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_42edb6
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_42ec41
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_42ec75
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_42f0d2
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_42ee69
sub_42ecb0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_42ed17
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fxch st1
mov cl [ ebp - 0x9f ]
fxam
fwait
fnstsw [ ebp - 0xa0 ]
fxch st1
mov ch [ ebp - 0x9f ]
shl ch 0x1
sar ch 0x1
rol ch 0x1
mov al ch
and al 0xf
xlat
mov ah al
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
shl ah 0x1
shl ah 0x1
or al ah
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_42ee17
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_42ee80
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4367b5
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_42ee97
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4367b5
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_42ef25
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_42f06c
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_423cea
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
leave
retn
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4368be
fld [ ebp + 0x8 ]
pop ecx
fucom st1
pop ecx
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_4368be
fld [ ebp - 0x8 ]
pop ecx
fucompp
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
leave
retn
push 0x2
pop eax
leave
retn
sub_42f0d2
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
push esi
mov ecx 0x7ff00000
fabs
xor esi esi
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ rw-data ]
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x8 ] esi
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcompp
fnstsw ax
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
jmp r-xdata
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_42f06c
fldz
pop ecx
fld [ ebp + 0x10 ]
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fld [ rw-data ]
xor esi esi
fstp [ eax ]
inc esi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ rw-data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
mov ecx [ ebp + 0x18 ]
fstp st0
fld1
fstp [ ecx ]
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ rw-data ]
sub_42f210
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_42f278
push 0x10
push r--data
call sub_427750
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_428984
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f387
mov eax esi
call sub_427795
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_427660
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_425ade
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_428a0c
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_425b48
pop ecx
pop ecx
sub_42f390
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ rw-data ]
xor ecx ecx
push 0x20
mov edx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
pop eax
jmp r-xdata
cmp [ esi ] ax
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
push 0x20
pop eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1000
mov ebx ecx
or edi 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
xor ecx ecx
movzx eax [ esi ]
inc ecx
test ax ax
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
add esi 0x2
xor eax eax
cmp [ esi ] ax
jne r-xdata
push 0x20
pop eax
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_437179
add esp 0x14
test eax eax
jne r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
add esi 0x2
push 0x3
push esi
push r--data
call sub_422315
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] ax
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
sub_42f630
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_42f6c0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_4372b5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4372d4
jmp r-xdata
sub_42f6c0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_42b4bf
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_42f630
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_42f722
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_42f752
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42f782
push 0x10
push r--data
call sub_427750
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
call sub_427aa0
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_42b6a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_42f84c
pop ecx
mov edi eax
jmp r-xdata
call sub_427795
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f823
mov eax edi
jmp r-xdata
sub_42f84c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_42b957
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_42887d
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_42b957
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_42b957
push 0x1
mov esi eax
call sub_42b957
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_42b8d1
pop ecx
mov ecx edi
sar ecx 0x5
and edi 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edi 0x6
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_42f8e6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_4228ca
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_42f916
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_434bd4
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_4235c3
pop ecx
push eax
call sub_42fab6
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_4235c3
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_4235c3
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_4235c3
mov esi eax
push edi
sar esi 0x5
call sub_4235c3
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_42fa37
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_421970
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_42889e
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_41faa0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_42889e
push 0x22
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
pop edi
sub_42fab6
push 0x10
push r--data
call sub_427750
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push esi
call sub_42b6a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x16
jmp r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_42886a
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42fbbf
add esp 0xc
mov edi eax
jmp r-xdata
call sub_427aa0
call sub_427795
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42fb95
mov eax edi
jmp r-xdata
sub_42fbbf
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_42886a
mov [ eax ] edi
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42886a
mov [ eax ] edi
call sub_42889e
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ebx eax
mov edx [ ecx * 4 + rw-data ]
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov al [ edx + ebx + 0x4 ]
mov [ ebp - 0x24 ] ebx
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_42886a
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_427aa0
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_42886a
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_42889e
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_427660
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
test [ edx + ebx + 0x4 ] 0x48
mov [ ebp - 0x1c ] eax
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4305df
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_42889e
mov [ eax ] 0xc
call sub_42886a
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4349a2
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
mov eax [ ecx * 4 + rw-data ]
inc edi
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_42886a
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_42887d
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
shr esi 0x1
mov eax [ eax * 4 + rw-data ]
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
inc edx
push 0x2
dec esi
cmp [ ebp + 0x13 ] 0x1
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_4228ca
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov edi esi
mov ecx esi
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
pop edi
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
push 0xa
inc edx
pop ecx
mov [ ebp - 0x1c ] edx
dec esi
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
push 0xa
add ecx 0x2
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
inc edi
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
add edi 0x2
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
sub esi edi
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
inc esi
mov edi eax
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_42889e
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov eax [ eax * 4 + rw-data ]
cmp edi esi
setne cl
add edi edi
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_4305df
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4305df
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
inc esi
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_4305df
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
push 0xa
pop ecx
add esi 0x2
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
inc esi
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x26 ] al
inc esi
sub_430350
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_430370
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_43038f
push 0x10
push r--data
call sub_427750
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
call sub_427aa0
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_42b6a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_42886a
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_430471
add esp 0xc
mov edi eax
jmp r-xdata
call sub_427795
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430448
mov eax edi
jmp r-xdata
sub_430471
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_42b957
pop ecx
cmp eax 0xffffffff
jne r-xdata
push ebx
push edi
push [ ebp + 0x10 ]
xor edi edi
push edi
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
call sub_42889e
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax ebx
push edi
call sub_42887d
pop ecx
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebx
sub_4304e3
push 0x18
push r--data
call sub_427750
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42886a
and [ eax ] 0x0
call sub_42889e
mov [ eax ] 0x9
call sub_427aa0
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_42b6a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_42886a
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4305df
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_427795
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4305b5
mov edx ebx
jmp r-xdata
sub_4305df
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42b957
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_42889e
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_42887d
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_430650
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_43069e
unpcklpd xmm0 xmm0
movapd xmm1 [ r--data ]
movapd xmm6 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
pextrw eax xmm0 0x3
and eax 0x7fff
mov edx 0x408f
sub edx eax
sub eax 0x3c90
or edx eax
cmp edx 0x80000000
jae r-xdata
mov eax [ esp + 0x8 ]
and eax 0x7fffffff
cmp eax 0x40900000
jae r-xdata
mulpd xmm1 xmm0
addpd xmm1 xmm6
movapd xmm7 xmm1
subpd xmm1 xmm6
mulpd xmm2 xmm1
movapd xmm4 [ r--data ]
mulpd xmm3 xmm1
movapd xmm5 [ r--data ]
subpd xmm0 xmm2
movd eax xmm7
mov ecx eax
and ecx 0x3f
shl ecx 0x4
sar eax 0x6
mov edx eax
subpd xmm0 xmm3
movapd xmm2 [ ecx + r--data ]
mulpd xmm4 xmm0
movapd xmm1 xmm0
mulpd xmm0 xmm0
addpd xmm5 xmm4
mulsd xmm0 xmm0
addsd xmm1 xmm2
unpckhpd xmm2 xmm2
movdqa xmm6 [ r--data ]
pand xmm7 xmm6
movdqa xmm6 [ r--data ]
paddq xmm7 xmm6
psllq xmm7 0x2e
mulpd xmm0 xmm5
addsd xmm1 xmm0
orpd xmm2 xmm7
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
add edx 0x37e
cmp edx 0x77c
ja r-xdata
cmp eax 0x7ff00000
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
addsd xmm0 [ r--data ]
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub esp 0x12
fwait
fnstcw [ esp + 0x10 ]
mov dx [ esp + 0x10 ]
or dx 0x300
mov [ esp ] dx
fldcw [ esp ]
mov edx eax
sar eax 0x1
sub edx eax
movdqa xmm6 [ r--data ]
pandn xmm6 xmm2
add eax 0x3ff
movd xmm3 eax
psllq xmm3 0x34
orpd xmm6 xmm3
add edx 0x3ff
movd xmm4 edx
psllq xmm4 0x34
movlpd [ esp ] xmm0
fld [ esp ]
movlpd [ esp + 0x8 ] xmm6
fld [ esp + 0x8 ]
fmul st1
faddp st1
movlpd [ esp ] xmm4
fld [ esp ]
fmulp st1
fstp [ esp ]
movlpd xmm0 [ esp ]
fldcw [ esp + 0x10 ]
add esp 0x12
pextrw ecx xmm0 0x3
and ecx 0x7ff0
cmp ecx 0x7ff0
jae r-xdata
mulsd xmm0 xmm2
sub esp 0x10
addsd xmm0 xmm2
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
mov edx [ esp + 0x4 ]
cmp eax 0x7ff00000
ja r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x80000000
jae r-xdata
mov edx 0xe
jmp r-xdata
cmp ecx 0x0
je r-xdata
mov edx 0x3ea
jmp r-xdata
cmp edx 0x0
jne r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 xmm0
mov edx 0xf
jmp r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 xmm0
mov edx 0xe
jmp r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4321d8
movlpd xmm0 [ esp + 0x10 ]
add esp 0x1c
mov edx 0xf
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x7ff00000
jne r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
fld [ r--data ]
retn
fld [ r--data ]
retn
sub_430940
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
fwait
cmp [ rw-data ] 0x0
je r-xdata
fxch st1
fst [ ebp - 0x86 ]
fxch st1
fst [ ebp - 0x7e ]
jmp r-xdata
call sub_42ed17
or [ ebp - 0x2c8 ] 0x3
call sub_430a03
pop ebx
leave
retn
sub_43097e
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
cmp [ rw-data ] 0x0
je r-xdata
fst [ ebp - 0x86 ]
jmp r-xdata
call sub_42ecb0
or [ ebp - 0x2c8 ] 0x1
and [ ebp - 0x2c8 ] 0xfd
call sub_430a03
pop ebx
leave
retn
sub_4309bb
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430b7d
add esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_430b7d
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
or [ ebp - 0x2c8 ] 0x2
call sub_42ed17
call sub_4309fc
pop ebx
leave
retn
sub_430a03
cmp [ rw-data ] 0x0
jne r-xdata
fldcw [ ebp - 0xa4 ]
fwait
retn
fst [ ebp - 0x2d0 ]
mov al [ ebp - 0x90 ]
or al al
je r-xdata
mov ax [ ebp - 0xa4 ]
and ax 0x20
jne r-xdata
cmp al 0xff
je r-xdata
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
cmp ax 0x7ff0
je r-xdata
cmp al 0xfe
je r-xdata
mov [ ebp - 0x8e ] 0x8
jmp r-xdata
mov [ ebp - 0x8e ] 0x3
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jbe r-xdata
jmp r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
or ax ax
je r-xdata
or al al
je r-xdata
push esi
push edi
mov ebx [ ebp - 0x94 ]
inc ebx
mov [ ebp - 0x8a ] ebx
test [ ebp - 0x2c8 ] 0x1
jne r-xdata
fmul [ r--data ]
mov [ ebp - 0x8e ] 0x4
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jae r-xdata
cmp ax 0x7ff0
je r-xdata
movsx eax al
mov [ ebp - 0x8e ] eax
jmp r-xdata
fstp [ ebp - 0x76 ]
lea eax [ ebp - 0x8e ]
lea ebx [ ebp - 0xa4 ]
push ebx
push eax
mov ebx [ ebp - 0x94 ]
mov al [ ebx + 0xe ]
movsx eax al
push eax
call sub_4367b5
add esp 0xc
pop edi
pop esi
fld [ ebp - 0x76 ]
jmp r-xdata
cld
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x86 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx + 0xc ] 0x1
je r-xdata
fmul [ r--data ]
jmp r-xdata
jmp r-xdata
lea esi [ ebp + 0x10 ]
lea edi [ ebp - 0x7e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_430b4a
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430b7d
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
and [ ebp - 0x2c8 ] 0xfd
call sub_42ecb0
call sub_4309fc
pop ebx
leave
retn
sub_430b7d
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ax [ ebp + 0xe ]
mov bx ax
and ax 0x7ff0
cmp ax 0x7ff0
jne r-xdata
fld [ ebp + 0x8 ]
or bx 0x7fff
mov [ ebp - 0x2 ] bx
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
shld eax ebx 0xb
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xa ] ebx
fld [ ebp - 0xa ]
jmp r-xdata
pop ebx
leave
retn
sub_430bde
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
unpckhpd xmm1 xmm1
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x2
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4321d8
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm3
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x3
mov edx 0x3e8
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e8
jmp r-xdata
sub_430e4e
unpcklpd xmm7 xmm7
movapd xmm2 xmm7
andpd xmm2 [ r--data ]
comisd xmm2 [ r--data ]
jpe r-xdata
mov edx 0x3eb
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4321d8
add esp 0x10
fld [ esp + 0x4 ]
retn
jae r-xdata
movq xmm0 xmm2
movq xmm3 [ r--data ]
andpd xmm0 xmm3
ucomisd xmm0 xmm3
jpe r-xdata
comisd xmm2 [ r--data ]
jae r-xdata
mov eax [ esp + 0x8 ]
shr eax 0x1f
fld [ r--data ]
fadd [ eax * 8 + r--data ]
retn
comisd xmm2 [ r--data ]
jae r-xdata
comisd xmm2 [ r--data ]
jb r-xdata
movq xmm6 xmm7
xorpd xmm6 xmm2
comisd xmm2 [ r--data ]
jae r-xdata
movapd xmm1 xmm2
mulpd xmm1 xmm2
movapd xmm3 xmm1
mulpd xmm3 xmm1
movapd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulsd xmm5 xmm1
movapd xmm3 xmm5
shufpd xmm3 xmm3 0x1
addsd xmm5 xmm3
mulsd xmm5 xmm7
subsd xmm7 xmm5
movq [ esp + 0x4 ] xmm7
fld [ esp + 0x4 ]
retn
comisd xmm2 [ r--data ]
jne r-xdata
movapd xmm1 xmm2
mulpd xmm1 xmm2
movapd xmm3 xmm1
mulpd xmm3 xmm1
movapd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulsd xmm5 xmm1
movapd xmm3 xmm5
shufpd xmm3 xmm3 0x1
addsd xmm5 xmm3
mulsd xmm5 xmm7
subsd xmm7 xmm5
movq [ esp + 0x4 ] xmm7
fld [ esp + 0x4 ]
retn
mov eax 0x300
movq xmm0 xmm2
movq xmm2 [ r--data ]
divsd xmm2 xmm0
unpcklpd xmm2 xmm2
movq xmm0 [ r--data ]
movq xmm5 [ r--data ]
movq xmm3 xmm2
addsd xmm3 xmm0
psrlq xmm3 0x2c
psubd xmm3 xmm5
movd eax xmm3
lea eax [ eax + eax * 2 ]
movq xmm5 [ eax * 8 + r--data ]
movq xmm3 xmm2
subsd xmm2 xmm5
mulsd xmm3 xmm5
addsd xmm3 [ r--data ]
divsd xmm2 xmm3
unpcklpd xmm2 xmm2
jmp r-xdata
comisd xmm2 [ r--data ]
jae r-xdata
fld [ esp + 0x4 ]
retn
movq xmm0 [ eax * 8 + r--data ]
movq xmm4 [ eax * 8 + r--data ]
movapd xmm1 xmm2
mulpd xmm1 xmm2
movapd xmm3 xmm1
mulpd xmm3 xmm1
movapd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulsd xmm5 xmm1
movapd xmm3 xmm5
shufpd xmm3 xmm3 0x1
addsd xmm5 xmm3
mulsd xmm5 xmm2
subsd xmm5 xmm4
subsd xmm5 xmm2
subsd xmm0 xmm5
orpd xmm0 xmm6
movq [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
retn
fld [ r--data ]
fmul [ r--data ]
fadd [ esp + 0x4 ]
retn
fld [ r--data ]
fmul [ r--data ]
sub esp 0x8
fstp [ esp ]
fld [ esp ]
add esp 0x8
fadd [ esp + 0x4 ]
retn
sub_43113e
movlpd xmm4 [ r--data ]
movlpd xmm3 [ r--data ]
xorpd xmm5 xmm5
movlpd xmm2 [ r--data ]
movsd xmm1 xmm0
psrlq xmm0 0x2c
movd edx xmm0
movsd xmm7 xmm1
mov ecx 0x2000
pinsrw xmm5 ecx 0x2
movsd xmm0 xmm1
mov eax 0x7ffff
and eax edx
sub eax 0x3fb00
cmp eax 0x3bb
jae r-xdata
sub eax 0x3bb
cmp eax 0x41
jae r-xdata
mulsd xmm1 xmm1
and edx 0xffff
subsd xmm3 xmm1
sqrtsd xmm3 xmm3
andpd xmm2 xmm7
and edx 0xfffffffc
sub edx 0xfb00
movlpd xmm1 [ edx * 2 + r--data ]
orpd xmm2 xmm5
movapd xmm4 [ edx * 4 + r--data ]
movsd xmm6 xmm7
addsd xmm7 xmm2
subsd xmm0 xmm2
mulsd xmm7 xmm0
mulsd xmm6 xmm1
mulsd xmm3 xmm2
movsd xmm1 xmm6
addsd xmm6 xmm3
divsd xmm7 xmm6
movlpd xmm0 [ r--data ]
movlpd xmm5 [ r--data ]
subsd xmm1 xmm3
psrlq xmm2 0x3f
movsd xmm3 xmm1
psllq xmm2 0x3f
mulsd xmm1 xmm1
pshufd xmm2 xmm2 0x44
movlpd xmm6 [ r--data ]
mulsd xmm3 xmm1
mulsd xmm0 xmm1
sub esp 0x10
xorpd xmm4 xmm2
mulsd xmm5 xmm3
subpd xmm4 [ r--data ]
mulsd xmm3 xmm1
addsd xmm0 xmm6
mulsd xmm0 xmm3
subsd xmm5 xmm4
pshufd xmm4 xmm4 0xee
addsd xmm0 xmm5
subsd xmm0 xmm7
subsd xmm0 xmm4
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
add eax 0x3bbb
cmp eax 0x3800
jae r-xdata
psrlq xmm7 0x26
psllq xmm7 0x26
pmovmskb eax xmm0
andnpd xmm4 xmm0
subsd xmm1 xmm7
movsd xmm6 xmm7
mulsd xmm7 xmm7
addsd xmm0 xmm6
orpd xmm5 xmm4
subsd xmm3 xmm7
mulsd xmm0 xmm1
movsd xmm4 xmm3
subsd xmm3 xmm0
sqrtsd xmm3 xmm3
and eax 0x80
shr eax 0x7
neg eax
movsd xmm7 xmm3
andpd xmm2 xmm3
psllq xmm3 0x2
pextrw edx xmm3 0x3
orpd xmm2 xmm5
movd xmm3 eax
pshufd xmm3 xmm3 0x0
sub edx 0xfec0
add edx edx
mulsd xmm7 [ edx * 4 + r--data ]
mulsd xmm6 xmm2
mulsd xmm1 xmm2
mulsd xmm2 xmm2
subsd xmm6 xmm7
andpd xmm3 [ r--data ]
addsd xmm6 xmm1
subsd xmm4 xmm2
addsd xmm7 xmm7
movlpd xmm5 [ r--data ]
subsd xmm4 xmm0
addsd xmm7 xmm6
movlpd xmm0 [ r--data ]
divsd xmm4 xmm7
movlpd xmm2 [ r--data ]
addpd xmm3 [ edx * 8 + r--data ]
movsd xmm1 xmm6
mulsd xmm6 xmm6
mulsd xmm0 xmm6
mulsd xmm1 xmm6
sub esp 0x10
mulsd xmm5 xmm1
mulsd xmm1 xmm6
addsd xmm0 xmm2
pxor xmm6 xmm6
mulsd xmm0 xmm1
addsd xmm5 xmm3
addsd xmm0 xmm5
and eax 0x8000
pinsrw xmm6 eax 0x3
movsd xmm5 xmm4
pshufd xmm3 xmm3 0xee
addsd xmm4 xmm3
subsd xmm3 xmm4
addsd xmm5 xmm3
addsd xmm0 xmm5
addsd xmm0 xmm4
xorpd xmm0 xmm6
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub eax 0x3bfc
cmp eax 0x4
jae r-xdata
unpcklpd xmm0 xmm0
movapd xmm6 [ r--data ]
unpcklpd xmm1 xmm0
movapd xmm2 [ r--data ]
movapd xmm4 [ r--data ]
mulpd xmm0 xmm0
movapd xmm5 [ r--data ]
sub esp 0x10
mulpd xmm1 xmm0
mulpd xmm6 xmm0
mulpd xmm0 xmm0
movsd xmm3 xmm1
mulsd xmm1 xmm1
addpd xmm6 xmm2
mulpd xmm4 xmm0
mulsd xmm1 xmm3
addpd xmm6 xmm4
pshufd xmm0 xmm5 0xee
mulpd xmm1 xmm6
pshufd xmm6 xmm5 0xee
subsd xmm0 xmm7
pshufd xmm2 xmm1 0xee
subsd xmm5 xmm1
subsd xmm6 xmm0
subsd xmm5 xmm2
subsd xmm7 xmm6
subsd xmm5 xmm7
addsd xmm0 xmm5
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
add eax 0x3fefc
cmp eax 0x3ff00
jb r-xdata
xorpd xmm6 xmm6
andpd xmm7 [ r--data ]
movlpd xmm4 [ r--data ]
movapd xmm1 [ r--data ]
mulsd xmm7 xmm4
movapd xmm2 [ r--data ]
subsd xmm4 xmm7
movapd xmm3 [ r--data ]
pshufd xmm7 xmm4 0x44
sqrtsd xmm4 xmm4
mulpd xmm1 xmm7
pshufd xmm5 xmm7 0x44
pextrw eax xmm0 0x3
mulpd xmm7 xmm7
addpd xmm2 xmm1
movlpd xmm1 [ r--data ]
mulpd xmm3 xmm7
cmpsd xmm0 xmm6 0x1
mulsd xmm7 xmm5
addpd xmm2 xmm3
pshufd xmm0 xmm0 0x44
mulsd xmm2 xmm7
andpd xmm0 [ r--data ]
mulpd xmm2 xmm5
andpd xmm1 xmm4
pshufd xmm3 xmm4 0x44
subsd xmm4 xmm1
addsd xmm3 xmm3
mulsd xmm1 xmm1
subsd xmm3 xmm4
subsd xmm5 xmm1
mulsd xmm4 xmm3
pshufd xmm3 xmm3 0xee
subsd xmm5 xmm4
divsd xmm5 xmm3
sub esp 0x10
addpd xmm3 xmm3
mulpd xmm2 xmm3
pshufd xmm4 xmm2 0xee
addsd xmm2 xmm0
and eax 0x8000
pinsrw xmm6 eax 0x3
pshufd xmm0 xmm0 0xee
addsd xmm2 xmm4
addsd xmm2 xmm5
addsd xmm2 xmm3
addsd xmm0 xmm2
xorpd xmm0 xmm6
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
movlpd xmm0 [ r--data ]
addsd xmm0 xmm2
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movd ecx xmm7
psrlq xmm7 0x20
movd edx xmm7
and edx 0x7fffffff
mov eax 0x3ff00000
sub eax edx
or eax ecx
cmp eax 0x0
je r-xdata
pextrw edx xmm7 0x1
shr edx 0xf
neg edx
movd xmm7 edx
pshufd xmm7 xmm7 0x0
movlpd xmm2 [ r--data ]
movlpd xmm0 [ r--data ]
andpd xmm2 xmm7
andpd xmm0 xmm7
addsd xmm0 xmm2
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ esp + 0x4 ]
movd edx xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0x7fffffff
sub edx 0x1
sbb ecx 0x7ff00000
cmp ecx 0x0
jge r-xdata
xorpd xmm6 xmm6
addsd xmm0 xmm6
mov edx 0x3f0
jmp r-xdata
xorpd xmm1 xmm1
xorpd xmm0 xmm0
mov edx 0x7ff0
pinsrw xmm1 edx 0x3
mulsd xmm0 xmm1
mov edx 0x3a
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4321d8
movlpd xmm0 [ esp + 0x10 ]
add esp 0x1c
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_43169e
movlpd xmm4 [ r--data ]
movlpd xmm3 [ r--data ]
xorpd xmm5 xmm5
movlpd xmm2 [ r--data ]
movsd xmm1 xmm0
psrlq xmm0 0x2c
movd edx xmm0
movsd xmm7 xmm1
mov ecx 0x2000
pinsrw xmm5 ecx 0x2
movsd xmm0 xmm1
mov eax 0x7ffff
and eax edx
sub eax 0x3fb00
cmp eax 0x3bb
jae r-xdata
sub eax 0x3bb
cmp eax 0x43
jae r-xdata
mulsd xmm1 xmm1
and edx 0xffff
subsd xmm3 xmm1
sqrtsd xmm3 xmm3
andpd xmm2 xmm7
and edx 0xfffffffc
sub edx 0xfb00
movlpd xmm1 [ edx * 2 + r--data ]
orpd xmm2 xmm5
movapd xmm4 [ edx * 4 + r--data ]
movsd xmm6 xmm7
addsd xmm7 xmm2
subsd xmm0 xmm2
mulsd xmm0 xmm7
mulsd xmm6 xmm1
mulsd xmm3 xmm2
movsd xmm1 xmm6
addsd xmm6 xmm3
divsd xmm0 xmm6
movlpd xmm7 [ r--data ]
movlpd xmm5 [ r--data ]
subsd xmm1 xmm3
psrlq xmm2 0x3f
movsd xmm3 xmm1
psllq xmm2 0x3f
mulsd xmm1 xmm1
pshufd xmm2 xmm2 0x44
movlpd xmm6 [ r--data ]
mulsd xmm3 xmm1
mulsd xmm7 xmm1
sub esp 0x10
xorpd xmm4 xmm2
mulsd xmm5 xmm3
mulsd xmm3 xmm1
addsd xmm6 xmm7
mulsd xmm6 xmm3
addsd xmm5 xmm4
pshufd xmm4 xmm4 0xee
addsd xmm6 xmm5
addsd xmm0 xmm6
addsd xmm0 xmm4
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
add eax 0x3bbb
cmp eax 0x3800
jae r-xdata
mulsd xmm1 xmm1
subsd xmm3 xmm1
sqrtsd xmm3 xmm3
pmovmskb eax xmm7
psllq xmm0 0x1
andpd xmm7 [ r--data ]
psrlq xmm0 0x1
movsd xmm1 xmm0
movlpd xmm4 [ r--data ]
movsd xmm6 xmm7
subsd xmm1 xmm7
mulsd xmm7 xmm7
addsd xmm0 xmm6
subsd xmm4 xmm7
mulsd xmm0 xmm1
movsd xmm7 xmm3
andpd xmm2 xmm3
psllq xmm3 0x2
pextrw edx xmm3 0x3
orpd xmm2 xmm5
sub edx 0xfec0
add edx edx
mulsd xmm7 [ edx * 4 + r--data ]
mulsd xmm6 xmm2
movapd xmm3 [ r--data ]
mulsd xmm1 xmm2
mulsd xmm2 xmm2
subsd xmm6 xmm7
addsd xmm6 xmm1
subsd xmm4 xmm2
addsd xmm7 xmm7
movlpd xmm5 [ r--data ]
subsd xmm4 xmm0
addsd xmm7 xmm6
movlpd xmm0 [ r--data ]
divsd xmm4 xmm7
movlpd xmm2 [ r--data ]
subpd xmm3 [ edx * 8 + r--data ]
movsd xmm1 xmm6
mulsd xmm6 xmm6
and eax 0x80
shl eax 0x8
mulsd xmm0 xmm6
mulsd xmm1 xmm6
sub esp 0x10
mulsd xmm5 xmm1
mulsd xmm1 xmm6
addsd xmm0 xmm2
pxor xmm6 xmm6
mulsd xmm0 xmm1
addsd xmm5 xmm3
pinsrw xmm6 eax 0x3
addsd xmm0 xmm5
pshufd xmm3 xmm3 0xee
subsd xmm0 xmm4
addsd xmm0 xmm3
orpd xmm0 xmm6
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub eax 0x3bfe
cmp eax 0x2
jae r-xdata
unpcklpd xmm7 xmm7
movapd xmm6 [ r--data ]
unpcklpd xmm1 xmm7
movapd xmm2 [ r--data ]
movapd xmm4 [ r--data ]
mulpd xmm7 xmm7
sub esp 0x10
mulpd xmm1 xmm7
mulpd xmm6 xmm7
mulpd xmm7 xmm7
movsd xmm3 xmm1
mulsd xmm1 xmm1
addpd xmm6 xmm2
mulpd xmm4 xmm7
mulsd xmm1 xmm3
addpd xmm6 xmm4
mulpd xmm1 xmm6
pshufd xmm2 xmm1 0xee
addsd xmm1 xmm2
addsd xmm0 xmm1
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
add eax 0x3fefe
cmp eax 0x3ff00
jb r-xdata
mulsd xmm1 xmm1
subsd xmm3 xmm1
sqrtsd xmm3 xmm3
pextrw eax xmm7 0x3
andpd xmm7 [ r--data ]
pshufd xmm5 xmm3 0x44
andpd xmm3 [ r--data ]
movsd xmm1 xmm7
movlpd xmm4 [ r--data ]
movsd xmm6 xmm7
subsd xmm0 xmm7
mulsd xmm7 xmm7
addsd xmm1 xmm1
mulsd xmm1 xmm0
subsd xmm4 xmm7
movsd xmm6 xmm3
mulsd xmm3 xmm3
mulsd xmm0 xmm0
subsd xmm4 xmm1
subsd xmm6 xmm5
addsd xmm5 xmm5
subsd xmm4 xmm3
movapd xmm2 [ r--data ]
pshufd xmm3 xmm5 0xee
subsd xmm4 xmm0
addsd xmm5 xmm6
pshufd xmm7 xmm3 0xee
addsd xmm3 xmm3
mulsd xmm5 xmm6
addsd xmm4 xmm5
pshufd xmm6 xmm7 0xee
divsd xmm4 xmm3
movapd xmm1 [ r--data ]
movapd xmm5 [ r--data ]
movapd xmm0 [ r--data ]
mulpd xmm7 xmm7
movsd xmm3 xmm6
mulpd xmm2 xmm7
mulpd xmm6 xmm7
and eax 0x8000
mulsd xmm1 xmm7
mulpd xmm7 xmm7
addpd xmm5 xmm2
movapd xmm2 xmm6
mulsd xmm6 xmm6
mulpd xmm7 xmm0
movapd xmm0 [ r--data ]
mulsd xmm2 xmm6
addpd xmm7 xmm5
pshufd xmm5 xmm1 0xee
mulsd xmm6 xmm2
sub esp 0x10
mulpd xmm7 xmm2
addsd xmm1 xmm5
xorpd xmm5 xmm5
pshufd xmm2 xmm7 0xee
mulsd xmm1 xmm6
pshufd xmm6 xmm0 0xee
addsd xmm7 xmm2
movsd xmm2 xmm3
pinsrw xmm5 eax 0x3
subsd xmm3 xmm6
addsd xmm0 xmm1
addsd xmm6 xmm3
addsd xmm7 xmm4
subsd xmm2 xmm6
subsd xmm0 xmm7
subsd xmm0 xmm2
subsd xmm0 xmm3
orpd xmm0 xmm5
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm0 [ esp + 0x4 ]
xorpd xmm6 xmm6
sub esp 0x10
movsd xmm7 xmm0
pextrw edx xmm0 0x3
and edx 0x7ff0
sub edx 0x10
cmp edx 0x7fe0
jb r-xdata
movd ecx xmm0
psrlq xmm0 0x20
movd edx xmm0
and edx 0x7fffffff
mov eax 0x3ff00000
sub eax edx
or eax ecx
cmp eax 0x0
je r-xdata
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
addsd xmm6 xmm0
orpd xmm0 xmm6
mulsd xmm7 xmm0
movlpd xmm1 [ r--data ]
movlpd xmm2 [ r--data ]
movlpd xmm0 [ r--data ]
addsd xmm0 xmm2
andnpd xmm1 xmm7
orpd xmm0 xmm1
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ esp + 0x4 ]
movd edx xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0x7fffffff
sub edx 0x1
sbb ecx 0x7ff00000
cmp ecx 0x0
jge r-xdata
movlpd xmm0 [ esp + 0x4 ]
xorpd xmm6 xmm6
addsd xmm0 xmm6
mov edx 0x3f1
jmp r-xdata
xorpd xmm1 xmm1
xorpd xmm0 xmm0
mov edx 0x7ff0
pinsrw xmm1 edx 0x3
mulsd xmm0 xmm1
mov edx 0x3d
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4321d8
movlpd xmm0 [ esp + 0x10 ]
add esp 0x1c
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_431c1e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3820
cmp ax 0x8a8
ja r-xdata
jg r-xdata
unpcklpd xmm0 xmm0
movapd xmm1 [ r--data ]
mulpd xmm1 xmm0
cvtsd2si edx xmm1
movapd xmm2 [ r--data ]
addpd xmm1 xmm2
movapd xmm3 [ r--data ]
subpd xmm1 xmm2
movlpd xmm5 [ r--data ]
add edx 0x72900
movapd xmm4 [ r--data ]
mulpd xmm3 xmm1
and edx 0x1f
mulsd xmm5 xmm1
mov ecx edx
mulpd xmm4 xmm1
shl ecx 0x1
subpd xmm0 xmm3
mulpd xmm1 [ r--data ]
add edx ecx
shl ecx 0x2
add edx ecx
addsd xmm5 xmm0
movapd xmm2 xmm0
subpd xmm0 xmm4
movlpd xmm6 [ r--data ]
shl edx 0x4
lea eax [ r--data ]
andpd xmm5 [ r--data ]
movapd xmm3 xmm0
add eax edx
subpd xmm2 xmm0
unpckhpd xmm0 xmm0
divsd xmm6 xmm5
subpd xmm2 xmm4
movapd xmm7 [ eax + 0x10 ]
subsd xmm3 xmm5
mulpd xmm7 xmm0
subpd xmm2 xmm1
movapd xmm1 [ eax + 0x30 ]
mulpd xmm1 xmm0
movapd xmm4 [ eax + 0x60 ]
mulpd xmm4 xmm0
addsd xmm2 xmm3
movapd xmm3 xmm0
mulpd xmm0 xmm0
addpd xmm7 [ eax ]
addpd xmm1 [ eax + 0x20 ]
mulpd xmm1 xmm0
addpd xmm4 [ eax + 0x50 ]
addpd xmm7 xmm1
movapd xmm1 [ eax + 0x70 ]
mulpd xmm1 xmm0
mulpd xmm0 xmm0
addpd xmm4 xmm1
movapd xmm1 [ eax + 0x40 ]
mulpd xmm1 xmm0
addpd xmm7 xmm1
movapd xmm1 xmm3
mulpd xmm3 xmm0
mulsd xmm0 xmm0
mulpd xmm1 [ eax + 0x90 ]
mulpd xmm4 xmm3
movsd xmm3 xmm1
addpd xmm7 xmm4
movsd xmm4 xmm1
mulsd xmm0 xmm7
unpckhpd xmm7 xmm7
addsd xmm0 xmm7
unpckhpd xmm1 xmm1
addsd xmm3 xmm1
subsd xmm4 xmm3
addsd xmm1 xmm4
movsd xmm4 xmm2
movlpd xmm7 [ eax + 0x90 ]
unpckhpd xmm2 xmm2
addsd xmm7 [ eax + 0x98 ]
mulsd xmm7 xmm2
addsd xmm7 [ eax + 0x88 ]
addsd xmm7 xmm1
addsd xmm0 xmm7
movlpd xmm7 [ r--data ]
mulsd xmm4 xmm6
movlpd xmm2 [ eax + 0xa8 ]
andpd xmm2 xmm6
mulsd xmm5 xmm2
mulsd xmm6 [ eax + 0xa0 ]
subsd xmm7 xmm5
subsd xmm2 [ eax + 0x80 ]
subsd xmm7 xmm4
mulsd xmm7 xmm6
movsd xmm4 xmm3
subsd xmm3 xmm2
addsd xmm2 xmm3
subsd xmm4 xmm2
addsd xmm0 xmm4
subsd xmm0 xmm7
sub esp 0x10
addsd xmm0 xmm3
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_4252ef
sub esp 0x10
shr ax 0x4
cmp ax 0xc7e
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
addsd xmm3 xmm0
mulsd xmm3 [ r--data ]
movlpd [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
add esp 0x10
retn
movsd xmm3 xmm0
mulsd xmm3 [ r--data ]
sub_431e7e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7610
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_42541f
pextrw eax xmm0 0x3
and ax 0x7fff
pinsrw xmm0 eax 0x3
sub esp 0x10
movlpd xmm1 [ r--data ]
subsd xmm1 xmm0
movlpd [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_43202e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7600
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_42554f
sub esp 0x10
shr ax 0x4
cmp ax 0xcfd
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
subsd xmm3 xmm0
mulsd xmm3 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
mulsd xmm0 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_4321d8
push ebp
mov ebp esp
sub esp 0x28
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] eax
je r-xdata
mov ecx sub_4367b2
push [ rw-data ]
call [ rw-data ]
mov ecx eax
jmp r-xdata
add eax 0xfffffc18
cmp eax 0xd
ja r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx 0xa6
push esi
cmp eax edx
jg r-xdata
pop esi
leave
retn
jmp [ eax * 4 + jump_table_432488 ]
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
cmp eax 0x19
jg r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ eax ]
lea eax [ ebp - 0x28 ]
fstp [ ebp - 0x18 ]
push eax
fld [ esi ]
fstp [ ebp - 0x10 ]
call ecx
pop ecx
test eax eax
jne r-xdata
sub eax 0x1a
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
fld [ eax ]
fstp [ esi ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
fstp [ ebp - 0x10 ]
push eax
mov [ ebp - 0x28 ] 0x1
call ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
fld [ eax ]
fmul [ ebp - 0x8 ]
fst [ esi ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ eax ]
fstp [ ebp - 0x18 ]
jmp r-xdata
fld [ ebp - 0x10 ]
fstp [ esi ]
call sub_42889e
mov [ eax ] 0x21
call sub_42889e
mov [ eax ] 0x22
jmp r-xdata
fld1
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
push 0x2
pop edx
sub eax edx
je r-xdata
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ eax ]
fstp [ ebp - 0x18 ]
fld [ esi ]
mov [ ebp - 0x28 ] 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
mov [ ebp - 0x28 ] 0x4
fld [ eax ]
lea eax [ ebp - 0x28 ]
fstp [ ebp - 0x18 ]
push eax
fld [ esi ]
fstp [ ebp - 0x10 ]
call ecx
pop ecx
jmp r-xdata
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x24 ] r--data
dec eax
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov [ ebp - 0x24 ] r--data
sub eax 0x14
je r-xdata
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec eax
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
sub eax 0x3
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x24 ] r--data
sub eax 0x9
jne r-xdata
mov [ ebp - 0x28 ] 0x3
sub_432666
push 0x10
push r--data
call sub_427750
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_428984
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4326fa
mov eax edi
call sub_427795
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_424274
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4228ca
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_43271b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
push 0x16
pop eax
pop ebp
retn
sub_432745
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
push 0x16
pop eax
pop ebp
retn
sub_43276f
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
push 0x16
pop eax
pop ebp
retn
sub_432799
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push esi
test eax eax
jne r-xdata
push 0x24
push 0xff
push eax
call sub_421970
mov eax [ ebp + 0xc ]
add esp 0xc
test eax eax
je r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
push ebx
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jg r-xdata
pop esi
leave
retn
push 0x7
pop ecx
cmp eax ecx
jl r-xdata
jl r-xdata
push edi
push 0x0
push 0x1e13380
push eax
push ebx
call sub_433160
add eax 0x46
mov [ ebp - 0x8 ] eax
lea esi [ eax - 0x1 ]
add eax 0x12b
cdq
mov ecx 0x190
idiv ecx
mov [ ebp - 0x10 ] ecx
push 0x64
pop edi
mov [ ebp - 0x18 ] esi
push 0xffffffff
mov [ ebp - 0xc ] edi
push 0xfffffe93
mov ecx eax
mov eax esi
cdq
idiv edi
sub ecx eax
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
add eax 0xffffffef
add eax ecx
cdq
mov esi eax
mov eax [ ebp - 0x8 ]
add eax 0xffffffba
mov edi edx
cdq
push edx
push eax
call sub_434ba0
sub eax esi
push 0x0
push 0x15180
sbb edx edi
push edx
push eax
call sub_434ba0
mov esi [ ebp - 0x14 ]
add ebx eax
adc esi edx
xor edi edi
inc edi
test esi esi
jg r-xdata
jg r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
mov eax esi
jmp r-xdata
cmp ebx 0xffff5740
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ecx
and eax 0x80000003
jns r-xdata
jl r-xdata
cmp ebx 0x934126cf
jbe r-xdata
pop ebx
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov ecx [ ebp - 0x18 ]
add ebx 0x1e13380
mov eax ecx
adc esi 0x0
and eax 0x80000003
jns r-xdata
test ebx ebx
jae r-xdata
lea eax [ ecx + 0x76c ]
cdq
idiv [ ebp - 0x10 ]
test edx edx
jne r-xdata
mov eax ecx
cdq
idiv [ ebp - 0xc ]
test edx edx
jne r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov edi [ ebp + 0x8 ]
push 0x0
push 0x15180
push esi
push ebx
mov [ edi + 0x14 ] ecx
call sub_433160
push 0xffffffff
mov [ edi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_434ba0
add ebx eax
adc esi edx
cmp [ ebp - 0x4 ] 0x0
mov ecx rw-data
jne r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ecx + 0x76c ]
cdq
idiv [ ebp - 0x10 ]
test edx edx
jne r-xdata
mov eax ecx
cdq
idiv [ ebp - 0xc ]
test edx edx
jne r-xdata
mov edx [ edi + 0x1c ]
xor eax eax
inc eax
cmp [ ecx + 0x4 ] edx
jge r-xdata
mov ecx rw-data
add ebx 0x15180
adc esi 0x0
jmp r-xdata
dec eax
mov [ edi + 0x10 ] eax
sub edx [ ecx + eax * 4 ]
mov eax [ ebp + 0xc ]
push 0x0
push 0x15180
mov [ edi + 0xc ] edx
push [ eax + 0x4 ]
push [ eax ]
call sub_433160
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
push 0x0
push 0xe10
push esi
push ebx
mov [ edi + 0x18 ] edx
call sub_433160
push 0xffffffff
mov [ edi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_434ba0
add ebx eax
push 0x0
push 0x3c
adc esi edx
push esi
push ebx
call sub_433160
and [ edi + 0x20 ] 0x0
mov [ edi + 0x4 ] eax
imul eax eax 0x3c
sub ebx eax
mov [ edi ] ebx
xor eax eax
pop edi
inc eax
cmp [ ecx + eax * 4 ] edx
jl r-xdata
sub_4329c2
push 0x8
push r--data
call sub_427750
cmp [ rw-data ] 0x0
jne r-xdata
call sub_427795
retn
push 0x6
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_432a09
call sub_432c3c
inc [ rw-data ]
sub_432a12
push 0xc
push r--data
call sub_427750
push 0x6
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_432a58
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_432a4f
mov eax esi
call sub_427795
retn
sub_432a58
push ebp
mov ebp esp
push ecx
push ebx
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_43271b
pop ecx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_427ab0
int3
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x14 ]
xor edi edi
inc edi
cmp ecx [ rw-data ]
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp ecx [ rw-data ]
je r-xdata
push 0x3
pop eax
push 0x2
pop edx
xor ebx ebx
push 0xb
inc ebx
pop edi
cmp ecx 0x6b
jge r-xdata
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] bx
jne r-xdata
mov edi [ rw-data ]
mov ecx [ rw-data ]
mov edx [ esi + 0x1c ]
cmp edi ecx
jge r-xdata
push 0x0
push 0x0
push 0x0
push 0x2
push 0x0
push 0x0
push edx
push eax
push ecx
push 0x1
push 0x1
call sub_432f70
xor eax eax
push eax
push eax
push eax
push 0x2
push eax
push eax
push ebx
push edi
push [ esi + 0x14 ]
push 0x1
push eax
call sub_432f70
add esp 0x58
push 0x4
pop eax
push 0xa
pop edi
xor edx edx
push 0x5
inc edx
pop ebx
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push ebx
push ebx
push eax
push ecx
push ebx
movzx eax [ rw-data ]
push ebx
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push ecx
push edi
jmp r-xdata
cmp edx ecx
jl r-xdata
cmp edx edi
jl r-xdata
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push ebx
push ebx
push eax
push [ esi + 0x14 ]
push ebx
movzx eax [ rw-data ]
push ebx
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
push edi
call sub_432f70
movzx eax [ rw-data ]
add esp 0x2c
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] bx
jne r-xdata
xor eax eax
inc eax
cmp edx edi
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx ecx
jg r-xdata
push ebx
call sub_432f70
add esp 0x2c
jmp r-xdata
cmp edx ecx
jle r-xdata
pop edi
pop esi
cmp edx edi
jle r-xdata
mov ecx [ esi + 0x8 ]
imul ecx ecx 0x3c
add ecx [ esi + 0x4 ]
xor eax eax
imul ecx ecx 0x3c
add ecx [ esi ]
imul ecx ecx 0x3e8
cmp edx edi
jne r-xdata
cmp edx edi
jge r-xdata
cmp edx ecx
jge r-xdata
cmp ecx [ rw-data ]
setl al
jmp r-xdata
cmp ecx [ rw-data ]
setge al
jmp r-xdata
sub_432c3c
push 0x30
push r--data
call sub_427750
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_428984
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_432715
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_43276f
pop ecx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_427ab0
lea eax [ ebp - 0x24 ]
push eax
call sub_43271b
pop ecx
test eax eax
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
xor esi esi
inc esi
cmp eax 0xffffffff
je r-xdata
push eax
call sub_4228ca
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_432745
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x2c ] esi
mov [ rw-data ] esi
mov ecx [ rw-data ]
imul ecx ecx 0x3c
mov [ ebp - 0x1c ] ecx
cmp [ rw-data ] 0x0
je r-xdata
call sub_4344e9
mov [ ebp - 0x38 ] eax
mov [ rw-data ] ebx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
push r--data
call sub_4372eb
pop ecx
mov edi eax
mov [ ebp - 0x40 ] edi
test edi edi
je r-xdata
call sub_427795
retn
push 0x3
push edi
push 0x40
mov esi [ ebp - 0x20 ]
push [ esi ]
call sub_4348fe
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
imul eax eax 0x3c
add ecx eax
mov [ ebp - 0x1c ] ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ edi ] bl
je r-xdata
add edi 0x3
cmp [ edi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call sub_4372d7
pop ecx
mov ecx eax
imul ecx ecx 0xe10
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x34 ] 0x1
inc edi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] esi
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push edi
call sub_4223f0
inc eax
push eax
call sub_427660
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
push eax
push edi
call sub_424560
pop ecx
pop ecx
test eax eax
je r-xdata
inc edi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push edi
push edi
call sub_4223f0
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_4332c2
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ edi ]
cmp al 0x2b
je r-xdata
cmp [ edi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
call sub_43270f
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_432703
mov [ eax ] esi
mov esi [ ebp - 0x28 ]
call sub_432709
mov [ eax ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_432ece
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
push eax
call sub_4228ca
pop ecx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
inc edi
push edi
call sub_4372d7
pop ecx
imul eax eax 0x3c
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
neg ecx
mov [ ebp - 0x1c ] ecx
mov al [ edi ]
cmp al 0x30
jge r-xdata
mov [ ebp - 0x24 ] ebx
mov eax [ esi + 0x4 ]
mov [ eax ] bl
mov [ ebp - 0x24 ] 0x1
push 0x3
push edi
push 0x40
push [ esi + 0x4 ]
call sub_4348fe
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ edi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_43270f
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_432703
mov [ eax ] esi
jmp r-xdata
inc edi
inc edi
push edi
call sub_4372d7
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov al [ edi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc edi
sub_432f70
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov eax ebx
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
push 0x64
mov [ ebp - 0xc ] eax
mov esi 0x190
pop ecx
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebx + 0x76c ]
cdq
mov ecx 0x190
idiv ecx
test edx edx
je r-xdata
mov eax ebx
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ ebx + 0x76c ]
cdq
idiv esi
test edx edx
je r-xdata
mov eax ebx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov edi [ eax * 4 + rw-data ]
mov eax [ ebp + 0x14 ]
mov edi [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
shl eax 0x2
mov edi [ eax + rw-data ]
mov eax [ ebp + 0x14 ]
shl eax 0x2
mov edi [ eax + rw-data ]
jmp r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] edi
call sub_432745
pop ecx
test eax eax
jne r-xdata
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ebx
add edi [ ebp + 0x20 ]
add eax [ ebp + 0x1c ]
add edi eax
cmp ecx 0x5
jne r-xdata
add eax 0xfffffff9
mov [ ebp + 0xc ] eax
lea eax [ ebx + 0x12b ]
cdq
idiv esi
inc edi
push 0x7
mov esi eax
lea eax [ ebx - 0x1 ]
cdq
idiv ecx
mov ecx ebx
imul ecx ecx 0x16d
add ecx 0xffff9c25
sub esi eax
lea eax [ ebx - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
add eax edi
add eax esi
add eax ecx
cdq
pop esi
idiv esi
mov ecx [ ebp + 0x18 ]
mov eax ecx
imul eax eax 0x7
sub eax edx
cmp edx [ ebp + 0x1c ]
jg r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call sub_427ab0
int3
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
imul eax eax 0x3e8
add ecx eax
mov [ rw-data ] ecx
jns r-xdata
mov eax [ ebp + 0x24 ]
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax 0x5265c00
cmp ecx eax
jl r-xdata
add ecx 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ ebx + 0x76c ]
cdq
mov ecx 0x190
idiv ecx
test edx edx
je r-xdata
mov eax ebx
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov [ rw-data ] ebx
jmp r-xdata
sub ecx eax
inc [ rw-data ]
mov [ rw-data ] ecx
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub edi esi
jmp r-xdata
cmp edi eax
jle r-xdata
sub_433160
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_433210
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4332c2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42889e
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_42889e
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
sub_433317
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42889e
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_42889e
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
sub_433373
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_421b3f
mov eax [ ebp - 0x14 ]
test edi edi
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
leave
retn
xor eax eax
mov [ edi ] ax
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop ebx
push esi
push esi
or esi 0xffffffff
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_4223f0
pop ecx
push [ ebp + 0x10 ]
or esi 0xffffffff
push edi
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea esi [ eax - 0x1 ]
call sub_42889e
mov [ eax ] 0x2a
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
movzx eax [ esi + ebx ]
mov [ edi ] ax
cmp [ esi + ebx ] 0x0
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_42889e
mov [ eax ] 0x2a
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
jmp r-xdata
inc esi
add edi 0x2
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp + 0x8 ] eax
test ecx ecx
jne r-xdata
jmp r-xdata
dec ecx
mov [ ebp - 0x4 ] ecx
mov cl [ eax ]
test cl cl
je r-xdata
push [ ebp + 0x10 ]
sub eax ebx
push edi
push eax
mov eax [ ebp - 0x14 ]
push ebx
push 0x1
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
movzx eax cl
push eax
call sub_422272
pop ecx
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
je r-xdata
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
inc eax
inc eax
cmp [ eax ] 0x0
je r-xdata
sub_4334d2
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] ax
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
mov eax ebx
cmp [ ebp + 0x18 ] ebx
ja r-xdata
mov [ eax ] esi
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0x14 ]
push edi
call sub_433373
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_42889e
push 0x16
jmp r-xdata
inc eax
test edi edi
je r-xdata
test edi edi
je r-xdata
pop esi
mov [ eax ] esi
call sub_427aa0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
cmp eax ebx
jbe r-xdata
call sub_42889e
mov esi [ eax ]
jmp r-xdata
xor eax eax
mov [ edi ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ecx ] eax
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x50
mov eax ebx
pop esi
xor eax eax
mov [ edi ] ax
call sub_42889e
push 0x22
sub_4335ae
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_43373c
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4335fc
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433648
pop ecx
push eax
call [ CompareStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_433648
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_4335ae
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_433672
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433648
pop ecx
push eax
call [ GetDateFormatW@IAT ]
pop ebp
retn
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_4336bb
push ebp
mov ebp esp
push [ ebp + 0x1c ]
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call sub_433648
pop ecx
push eax
call [ GetTimeFormatW@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_4336f0
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433648
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_43373c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_4337dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4291d0
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_43382b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
push ebx
xor eax eax
xor edi edi
push edi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_4338d7
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add ecx ecx
add eax eax
cmp ecx eax
jb r-xdata
push ecx
call sub_427660
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_4338d7
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] eax
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4338d7
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
sete al
push 0x22
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
inc [ eax ]
pop esi
pop ebx
leave
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_433a64
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_427616
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_4218fb
lea esi [ esi + eax * 2 ]
pop ecx
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_4228ca
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
push esi
call sub_4218fb
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_427616
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_4228ca
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_433317
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_427ab0
int3
add edi 0x4
sub_433b53
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_433b93
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
xor ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
leave
retn
sub_433c2d
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
leave
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_427660
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_41faa0
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_433c88
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_433cd5
push 0xc
push r--data
call sub_427750
push 0xe
call sub_428984
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_433d3d
call sub_427795
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_4228ca
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_4228ca
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_433d46
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4245ec
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4228ca
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_42205a
pop ecx
call sub_42889e
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_42889e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4288b1
pop ecx
mov [ esi ] eax
push esi
call sub_42205a
pop ecx
test eax eax
je r-xdata
call sub_42889e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4288b1
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_433df1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
test esi esi
je r-xdata
imul esi [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push ebx
call sub_433d46
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
push ebx
call sub_4275e5
pop ecx
mov edi eax
call sub_42889e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
pop edi
pop esi
pop ebp
retn
sub esi edi
push esi
lea eax [ edi + ebx ]
push 0x0
push eax
call sub_421970
add esp 0xc
sub_433e5a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_42889e
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_42205a
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_433edc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
push eax
call sub_4228ca
pop ecx
sub_433fd8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4228ca
pop ecx
push eax
call sub_4228ca
pop ecx
sub_43403f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_4228ca
push [ esi + 0x8 ]
call sub_4228ca
push [ esi + 0xc ]
call sub_4228ca
push [ esi + 0x10 ]
call sub_4228ca
push [ esi + 0x14 ]
call sub_4228ca
push [ esi + 0x18 ]
call sub_4228ca
push [ esi ]
call sub_4228ca
push [ esi + 0x20 ]
call sub_4228ca
push [ esi + 0x24 ]
call sub_4228ca
push [ esi + 0x28 ]
call sub_4228ca
push [ esi + 0x2c ]
call sub_4228ca
push [ esi + 0x30 ]
call sub_4228ca
push [ esi + 0x34 ]
call sub_4228ca
push [ esi + 0x1c ]
call sub_4228ca
push [ esi + 0x38 ]
call sub_4228ca
push [ esi + 0x3c ]
call sub_4228ca
add esp 0x40
push [ esi + 0x40 ]
call sub_4228ca
push [ esi + 0x44 ]
call sub_4228ca
push [ esi + 0x48 ]
call sub_4228ca
push [ esi + 0x4c ]
call sub_4228ca
push [ esi + 0x50 ]
call sub_4228ca
push [ esi + 0x54 ]
call sub_4228ca
push [ esi + 0x58 ]
call sub_4228ca
push [ esi + 0x5c ]
call sub_4228ca
push [ esi + 0x60 ]
call sub_4228ca
push [ esi + 0x64 ]
call sub_4228ca
push [ esi + 0x68 ]
call sub_4228ca
push [ esi + 0x6c ]
call sub_4228ca
push [ esi + 0x70 ]
call sub_4228ca
push [ esi + 0x74 ]
call sub_4228ca
push [ esi + 0x78 ]
call sub_4228ca
push [ esi + 0x7c ]
call sub_4228ca
add esp 0x40
push [ esi + 0x80 ]
call sub_4228ca
push [ esi + 0x84 ]
call sub_4228ca
push [ esi + 0x88 ]
call sub_4228ca
push [ esi + 0x8c ]
call sub_4228ca
push [ esi + 0x90 ]
call sub_4228ca
push [ esi + 0x94 ]
call sub_4228ca
push [ esi + 0x98 ]
call sub_4228ca
push [ esi + 0x9c ]
call sub_4228ca
push [ esi + 0xa0 ]
call sub_4228ca
push [ esi + 0xa4 ]
call sub_4228ca
push [ esi + 0xa8 ]
call sub_4228ca
push [ esi + 0xb8 ]
call sub_4228ca
push [ esi + 0xbc ]
call sub_4228ca
push [ esi + 0xc0 ]
call sub_4228ca
push [ esi + 0xc4 ]
call sub_4228ca
push [ esi + 0xc8 ]
call sub_4228ca
add esp 0x40
push [ esi + 0xcc ]
call sub_4228ca
push [ esi + 0xb4 ]
call sub_4228ca
push [ esi + 0xd4 ]
call sub_4228ca
push [ esi + 0xd8 ]
call sub_4228ca
push [ esi + 0xdc ]
call sub_4228ca
push [ esi + 0xe0 ]
call sub_4228ca
push [ esi + 0xe4 ]
call sub_4228ca
push [ esi + 0xe8 ]
call sub_4228ca
push [ esi + 0xd0 ]
call sub_4228ca
push [ esi + 0xec ]
call sub_4228ca
push [ esi + 0xf0 ]
call sub_4228ca
push [ esi + 0xf4 ]
call sub_4228ca
push [ esi + 0xf8 ]
call sub_4228ca
push [ esi + 0xfc ]
call sub_4228ca
push [ esi + 0x100 ]
call sub_4228ca
push [ esi + 0x104 ]
call sub_4228ca
add esp 0x40
push [ esi + 0x108 ]
call sub_4228ca
push [ esi + 0x10c ]
call sub_4228ca
push [ esi + 0x110 ]
call sub_4228ca
push [ esi + 0x114 ]
call sub_4228ca
push [ esi + 0x118 ]
call sub_4228ca
push [ esi + 0x11c ]
call sub_4228ca
push [ esi + 0x120 ]
call sub_4228ca
push [ esi + 0x124 ]
call sub_4228ca
push [ esi + 0x128 ]
call sub_4228ca
push [ esi + 0x12c ]
call sub_4228ca
push [ esi + 0x130 ]
call sub_4228ca
push [ esi + 0x134 ]
call sub_4228ca
push [ esi + 0x138 ]
call sub_4228ca
push [ esi + 0x13c ]
call sub_4228ca
push [ esi + 0x140 ]
call sub_4228ca
push [ esi + 0x144 ]
call sub_4228ca
add esp 0x40
push [ esi + 0x148 ]
call sub_4228ca
push [ esi + 0x14c ]
call sub_4228ca
push [ esi + 0x150 ]
call sub_4228ca
push [ esi + 0x154 ]
call sub_4228ca
push [ esi + 0x158 ]
call sub_4228ca
push [ esi + 0x15c ]
call sub_4228ca
push [ esi + 0x160 ]
call sub_4228ca
add esp 0x1c
sub_4343bf
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov ecx eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42b4bf
leave
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_421970
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_426a45
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
push eax
call sub_4245ec
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4337b0
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_4344ab
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4343bf
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43450f
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_433ed4
push [ ebp + 0x8 ]
call sub_428e3c
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_428e27
pop ecx
pop ebp
retn
push 0x1
call sub_433ed4
pop ecx
sub_43454c
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_43450f
leave
retn
push 0x2
pop ecx
int 0x29
sub_434645
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_42889e
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_42889e
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
sub_4346b1
push ebp
mov ebp esp
xor edx edx
mov eax edx
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] dx
je r-xdata
sub_4346d0
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ rw-data ]
push esi
push edi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
mov [ ebp - 0x20 ] eax
call ebx
mov esi eax
mov [ ebp - 0x18 ] esi
call sub_428b9c
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push edi
push r--data
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ rw-data ]
cmp eax esi
je r-xdata
push [ rw-data ]
call [ rw-data ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov esi [ ebp - 0x18 ]
push r--data
push esi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov esi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edi
call eax
jmp r-xdata
call eax
mov edi eax
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
or esi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push edi
call eax
mov edi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_4348bb
call sub_42922f
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_429258
pop ecx
push 0x3
call sub_421e46
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_427945
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_4348fe
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_42889e
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ebx ] dl
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
mov al [ esi ]
mov [ ebx + esi ] al
inc esi
test al al
je r-xdata
jmp r-xdata
mov al [ esi + ebx ]
mov [ ebx ] al
inc ebx
test al al
je r-xdata
mov [ ecx ] 0x0
call sub_42889e
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
sub_4349a2
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_42889e
mov [ eax ] 0x9
jmp r-xdata
call sub_42889e
mov [ eax ] 0x9
call sub_427aa0
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_4349f6
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_434ba0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_434bd4
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_427660
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_434c2f
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0xc ] 0x40
jne r-xdata
add [ edi + 0x4 ] 0xfffffffe
js r-xdata
push edi
call sub_4235c3
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push edi
push eax
call sub_43736f
pop ecx
pop ecx
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edi ] 0x2
jmp r-xdata
mov eax ebx
push edi
call sub_4235c3
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
push edi
call sub_4235c3
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_4235c3
mov esi eax
push edi
sar esi 0x5
call sub_4235c3
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_4235c3
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push edi
call sub_4235c3
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_4235c3
mov esi eax
push edi
sar esi 0x5
call sub_4235c3
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
test [ ebx + 0x4 ] 0x80
je r-xdata
push edi
call sub_4235c3
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_436797
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_4235c3
mov esi eax
push edi
sar esi 0x5
call sub_4235c3
mov ebx eax
and ebx 0x1f
pop ecx
shl ebx 0x6
add ebx [ esi * 4 + rw-data ]
pop ecx
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ edi + 0x4 ]
js r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_429af3
pop ecx
pop ecx
mov ecx eax
mov ecx [ edi ]
mov al [ ebp + esi - 0xc ]
mov [ ecx ] al
mov eax [ edi ]
movzx ecx [ eax ]
inc eax
mov [ edi ] eax
jmp r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_434db4
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_422272
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
inc edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_42889e
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_434ebf
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
movzx eax [ ecx + 0xa ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0x6 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
and edx 0x7fff
push esi
sub edx 0x3fff
push edi
mov edi [ ebp + 0xc ]
shl eax 0x10
xor ebx ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
dec eax
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x34 ] eax
mov eax ecx
cdq
push 0x1f
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov ecx esi
shl eax cl
push 0x3
or edi 0xffffffff
mov [ ebp - 0x30 ] esi
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
xor eax eax
inc eax
shl eax cl
push 0xffffffff
mov [ ebp - 0x2c ] ebx
pop edi
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
mov eax edx
cdq
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
push 0x20
mov [ ebp - 0x20 ] ebx
not eax
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
pop eax
mov ebx ecx
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
shl edi cl
push 0x20
pop eax
sub eax ecx
mov [ ebp - 0x38 ] ecx
not edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
and eax [ ebp - 0x28 ]
mov ecx edi
shr edx cl
mov ecx [ ebp - 0x38 ]
shl eax cl
or edx [ ebp - 0x20 ]
inc ebx
mov [ ebp + ebx * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
mov eax [ ebp - 0x3c ]
xor ebx ebx
pop ecx
or edi 0xffffffff
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x24 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
inc esi
mov [ ebp + esi * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
mov ecx [ ebp - 0x28 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
add esi [ rw-data ]
xor ebx ebx
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
xor eax eax
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
shl edi cl
mov eax ebx
push 0x20
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
not edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
push 0xffffffff
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
sub_43542f
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
movzx eax [ ecx + 0xa ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0x6 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
and edx 0x7fff
push esi
sub edx 0x3fff
push edi
mov edi [ ebp + 0xc ]
shl eax 0x10
xor ebx ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
dec eax
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x34 ] eax
mov eax ecx
cdq
push 0x1f
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov ecx esi
shl eax cl
push 0x3
or edi 0xffffffff
mov [ ebp - 0x30 ] esi
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
xor eax eax
inc eax
shl eax cl
push 0xffffffff
mov [ ebp - 0x2c ] ebx
pop edi
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
mov eax edx
cdq
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
push 0x20
mov [ ebp - 0x20 ] ebx
not eax
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
pop eax
mov ebx ecx
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
shl edi cl
push 0x20
pop eax
sub eax ecx
mov [ ebp - 0x38 ] ecx
not edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
and eax [ ebp - 0x28 ]
mov ecx edi
shr edx cl
mov ecx [ ebp - 0x38 ]
shl eax cl
or edx [ ebp - 0x20 ]
inc ebx
mov [ ebp + ebx * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
mov eax [ ebp - 0x3c ]
xor ebx ebx
pop ecx
or edi 0xffffffff
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x24 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
inc esi
mov [ ebp + esi * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
mov ecx [ ebp - 0x28 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
add esi [ rw-data ]
xor ebx ebx
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
xor eax eax
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
shl edi cl
mov eax ebx
push 0x20
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
not edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
push 0xffffffff
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
sub_43599f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
push esi
mov eax 0x404e
push edi
mov [ ebp - 0x4 ] eax
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov ecx edx
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
mov edx [ ebx + 0x8 ]
test edx 0x8000
jne r-xdata
mov edx [ ebx + 0x4 ]
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
mov ecx [ ebx ]
mov esi edx
mov eax ecx
shr eax 0x10
shl edx 0x10
or edx eax
mov eax [ ebp - 0x4 ]
shr esi 0x10
shl ecx 0x10
add eax 0xfff0
mov [ ebx ] ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] esi
mov edx [ ebp - 0x18 ]
xor eax eax
lea ecx [ esi + edx ]
mov [ ebp - 0xc ] ecx
cmp ecx esi
jb r-xdata
mov eax esi
xor ecx ecx
lea esi [ eax + 0x1 ]
cmp esi eax
jb r-xdata
mov [ ebx ] eax
test ecx ecx
je r-xdata
mov eax edi
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
mov eax [ ebp - 0x4 ]
shr ecx 0x1f
add edx edx
or edx ecx
add eax 0xffff
add edi edi
mov [ ebp - 0x4 ] eax
test edx 0x8000
je r-xdata
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edx
xor eax eax
inc eax
cmp ecx edx
jae r-xdata
xor ecx ecx
inc ecx
cmp esi 0x1
jae r-xdata
mov edx [ ebp + 0x10 ]
add edi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
and [ ebp - 0x10 ] 0x0
mov eax edx
shr eax 0x1f
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
mov ecx [ ebp + 0x8 ]
add edx edx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] eax
movsx edi [ ecx ]
mov [ ebp - 0x8 ] esi
lea ecx [ edx + edi ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp + 0x10 ] ecx
cmp ecx edx
jb r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
test eax eax
je r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test ecx ecx
je r-xdata
xor edx edx
inc edx
jmp r-xdata
cmp ecx edi
jae r-xdata
mov [ ebx ] ecx
test edx edx
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
dec eax
inc [ ebp + 0x8 ]
mov [ ebx + 0x4 ] esi
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
lea ecx [ esi + 0x1 ]
xor edx edx
cmp ecx esi
jb r-xdata
mov edx [ ebp + 0x10 ]
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov eax ecx
shr eax 0x1f
mov ecx esi
shr ecx 0x1f
add esi esi
or esi eax
add edi edi
or edi ecx
add edx edx
mov eax edx
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
mov eax [ ebp - 0x1c ]
shr ecx 0x1f
add edx edx
add edi edi
or edi ecx
add eax edx
xor ecx ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
mov [ ebp + 0x10 ] eax
cmp eax edx
jb r-xdata
mov eax 0x404e
xor edx edx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebx + 0x8 ] eax
mov esi ecx
mov [ ebx + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] esi
test edx edx
je r-xdata
sub_435b81
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435ba2
add esp 0x1c
pop ebp
retn
sub_435ba2
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4360ef
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4362a5
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435c28
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436364
jmp r-xdata
sub_435c28
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x30
pop eax
push [ ebp + 0x1c ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] 0x3ff
xor ebx ebx
call sub_421b3f
mov edi [ ebp + 0x14 ]
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov edi ebx
call sub_42889e
push 0x16
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
pop edi
mov [ eax ] edi
call sub_427aa0
jmp r-xdata
lea eax [ edi + 0xb ]
mov [ esi ] bl
cmp ecx eax
ja r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_42889e
push 0x22
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
xor eax eax
cmp eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov ebx [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi + 0x1 ] al
mov ecx [ edx + 0x4 ]
and ebx 0xffffffe0
add ebx 0x27
and ecx 0x7ff00000
xor eax eax
or eax ecx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov [ esi ] 0x2d
inc esi
and ebx 0x80000000
or eax ebx
je r-xdata
or eax 0xffffffff
cmp ecx eax
je r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
push 0x30
pop eax
mov [ esi + 0x2 ] al
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
add esi 0x3
or ecx eax
jne r-xdata
push 0x0
push edi
push eax
lea ebx [ esi + 0x2 ]
push ebx
push edx
call sub_435f82
mov edi eax
add esp 0x14
test edi edi
je r-xdata
lea eax [ ecx - 0x2 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x3fe
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
and [ ebp + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx 0xf0000
mov [ ebp + 0xc ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x18 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0xc ] ecx
test edi edi
jne r-xdata
mov edi [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
test edi edi
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
lea eax [ esi + 0x2 ]
push 0x65
push eax
call sub_4374d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
movsx ecx cx
and edx 0xfffff
call sub_430370
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
xor edi edi
jmp r-xdata
test edi edi
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
movsx ecx cx
and edx 0xfffff
call sub_430370
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
mov eax [ ebp + 0x14 ]
shrd eax ecx 0x4
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
shr ecx 0x4
sub eax 0x4
inc esi
dec edi
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_421970
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
mov cl 0x34
call sub_430370
mov ecx eax
xor eax eax
mov ebx edx
and ecx 0x7ff
and ebx eax
sub ecx [ ebp - 0x8 ]
sbb ebx eax
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx eax
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp esi edi
jne r-xdata
mov edx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp ecx eax
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push eax
push 0xa
push ebx
push ecx
call sub_437930
add al 0x30
mov [ esi ] al
mov [ ebp - 0x18 ] edx
inc esi
mov [ ebp - 0x18 ] ebx
xor eax eax
cmp ebx eax
jl r-xdata
push eax
push edx
push ebx
push ecx
call sub_437930
add al 0x30
mov [ esi ] al
inc esi
xor eax eax
mov [ ebp - 0x18 ] edx
cmp esi edi
jne r-xdata
cmp ecx edx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp ebx eax
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
add cl 0x30
mov [ esi ] cl
mov [ esi + 0x1 ] al
mov edi eax
jg r-xdata
push eax
push 0x64
push ebx
push ecx
call sub_437930
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x18 ] edx
xor eax eax
cmp ebx eax
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_435fa0
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x20 ]
call sub_421b3f
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_42889e
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
pop edi
mov [ eax ] edi
call sub_427aa0
jmp r-xdata
mov edx [ ebp + 0x10 ]
xor edi edi
mov eax edx
test edx edx
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edi
mov eax edi
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_42889e
push 0x22
mov eax [ ebp + 0x18 ]
push esi
cmp [ eax ] 0x2d
mov esi ebx
jne r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test edx edx
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
call sub_4365e5
mov edx [ ebp + 0x10 ]
pop ecx
pop ecx
test edx edx
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x1c ] al
sete al
add eax edx
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
mov eax [ ebp - 0x10 ]
inc esi
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_4332c2
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
push edi
push edi
push edi
push edi
push edi
call sub_427ab0
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] edi
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop esi
je r-xdata
mov edx [ edx + 0x4 ]
dec edx
jns r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop ebx
cmp edx ebx
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_426c10
add esp 0xc
push 0xa
pop ebx
cmp edx ebx
jl r-xdata
mov eax edx
cdq
idiv ebx
add [ esi + 0x2 ] al
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv ebx
add [ esi + 0x3 ] al
sub_4360ef
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_437895
add esp 0x14
test edi edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_42889e
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_42889e
push 0x16
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push ecx
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
xor eax eax
test ebx ebx
setg al
add ecx edi
add eax ecx
push eax
call sub_437607
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
mov ecx esi
sete al
sub ecx eax
xor eax eax
test ebx ebx
setg al
sub ecx eax
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
push ebx
push esi
push edi
call sub_435fa0
add esp 0x1c
mov [ edi ] 0x0
jmp r-xdata
sub_4361bb
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x14 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
push [ ebp + 0x1c ]
dec eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
call sub_421b3f
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42889e
push 0x16
pop ebx
mov [ eax ] ebx
call sub_427aa0
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp [ ebp + 0x18 ] bl
je r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx edi
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jg r-xdata
mov [ esi ] 0x2d
inc esi
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + esi ] 0x30
add esi eax
push 0x1
push esi
call sub_4365e5
pop ecx
mov [ esi ] 0x30
pop ecx
inc esi
jmp r-xdata
pop edi
push 0x1
push esi
call sub_4365e5
mov eax [ ebp - 0x14 ]
pop ecx
mov eax [ eax + 0x84 ]
pop ecx
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov eax [ ebp + 0x14 ]
inc esi
mov eax [ eax + 0x4 ]
test eax eax
jns r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] bl
je r-xdata
neg eax
cmp edi eax
jl r-xdata
mov edi eax
neg edi
jmp r-xdata
push edi
push esi
call sub_4365e5
push edi
push 0x30
push esi
call sub_421970
add esp 0x14
mov edi eax
sub_4362a5
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_437895
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_42889e
mov [ eax ] ebx
call sub_427aa0
mov eax ebx
jmp r-xdata
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_42889e
mov [ eax ] ebx
call sub_427aa0
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
add eax ebx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
push ecx
sete al
add eax edi
push eax
call sub_437607
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
mov ecx esi
sete al
sub ecx eax
pop esi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push ebx
push esi
push edi
call sub_4361bb
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
sub_436364
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_437895
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_42889e
mov [ eax ] ebx
call sub_427aa0
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
xor ecx ecx
cmp [ ebp - 0x30 ] 0x2d
mov [ ebp - 0x20 ] eax
sete cl
or eax 0xffffffff
lea ebx [ ecx + edi ]
cmp esi eax
je r-xdata
call sub_42889e
mov [ eax ] ebx
call sub_427aa0
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_437607
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub eax ecx
pop esi
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ edi ] 0x0
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push edi
call sub_435fa0
add esp 0x1c
cmp eax [ ebp + 0x14 ]
jge r-xdata
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push esi
push edi
call sub_4361bb
add esp 0x18
jmp r-xdata
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
mov [ ebx - 0x2 ] al
sub_436472
push ebp
mov ebp esp
sub esp 0x10
push edi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
mov cl [ edx ]
test cl cl
je r-xdata
mov al [ edx ]
inc edx
test al al
je r-xdata
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
jmp r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edx ]
test al al
jne r-xdata
cmp cl al
je r-xdata
cmp al 0x65
je r-xdata
push esi
mov esi edx
cmp al 0x45
je r-xdata
dec edx
cmp [ edx ] 0x30
je r-xdata
mov eax [ edi + 0x84 ]
mov ecx [ eax ]
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
inc edx
mov al [ esi ]
inc edx
inc esi
mov [ edx ] al
test al al
jne r-xdata
dec edx
pop esi
sub_436508
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_437743
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4376b7
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
add esp 0xc
leave
retn
sub_436559
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push [ ebp + 0xc ]
call sub_421b3f
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_423cbe
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_422952
test eax eax
movsx eax [ esi ]
push eax
call sub_423cbe
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp - 0x10 ]
mov cl [ esi ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] al
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4365cb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
fldz
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_4365e5
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4223f0
inc eax
push eax
lea eax [ esi + edi ]
push esi
push eax
call sub_426c10
add esp 0x10
pop esi
sub_43660d
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_437a0f
add esp 0xc
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_427ab0
int3
pop esi
retn
sub_436634
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_437cd1
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_436675
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
mov [ ebp + 0xc ] esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_42889e
mov [ eax ] 0x2a
call sub_42889e
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_42889e
push 0x22
pop esi
mov [ eax ] esi
call sub_427aa0
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_421970
add esp 0xc
push edi
push esi
push ebx
call sub_421970
add esp 0xc
sub_4367b5
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
movzx ecx [ eax ]
mov eax [ esi ]
push edi
mov [ ebp - 0x84 ] ecx
dec eax
je r-xdata
push 0x8
dec eax
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_42dd59
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_42d827
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_4367b2
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_42b4bf
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42da53
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
push 0xffff
push ecx
call sub_42dea9
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_4368d0
push ebp
mov ebp esp
sub esp 0x1c
push esi
call sub_428b9c
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1c ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
call sub_428b9c
test eax eax
mov eax [ ebp + 0x1c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_436961
push 0x14
push r--data
call sub_427750
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_427795
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_436a28
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4369fc
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_4369fc
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_42ba40
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_436a28
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x38 ] 0xc
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_427ab0
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4233cb
pop ecx
test eax eax
jne r-xdata
mov eax ecx
and eax 0x3
mov edx 0xc0000000
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_42886a
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_42889e
push 0x16
pop ebx
mov [ eax ] ebx
call sub_427aa0
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
and eax 0x700
mov esi 0x400
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
leave
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
or [ ebp - 0xc ] 0x4
mov eax 0x4000000
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_42886a
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_42889e
push 0x16
pop ebx
mov [ eax ] ebx
call sub_427aa0
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_42b72c
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
mov [ eax ] 0x1
push esi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_4368d0
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_42886a
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_42889e
mov [ eax ] 0x18
call sub_42889e
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_42887d
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_42887d
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_42889e
mov ebx [ eax ]
jmp r-xdata
call sub_42889e
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and ecx 0x7fffffff
push esi
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp + 0x10 ]
call sub_4368d0
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_42b9be
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or dl 0x1
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
mov [ ebp - 0x1 ] dl
and [ eax + ecx + 0x24 ] 0x80
mov ecx [ ebp + 0x14 ]
mov al dl
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
mov ecx [ eax * 4 + rw-data ]
shl edx 0x6
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov ecx [ ebp + 0x14 ]
mov eax esi
sar eax 0x5
and esi 0x1f
mov edx [ eax * 4 + rw-data ]
shl esi 0x6
shr ecx 0x10
mov al [ edx + esi + 0x24 ]
shl cl 0x7
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_4305df
mov ecx eax
and ecx edx
add esp 0x10
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] edx
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
mov [ ebp - 0x24 ] ebx
call sub_42fbbf
add esp 0xc
test eax eax
jne r-xdata
call sub_42886a
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and esi 0x7fffffff
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_4368d0
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_4305df
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_42f84c
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edx 0x6
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_42887d
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_42b8d1
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_437cf0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_42fbbf
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_4305df
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_4305df
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_42f84c
pop ecx
call sub_42889e
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_42bd14
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_4305df
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_4305df
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_4305df
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_4371a0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4371c0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_42b4bf
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_437205
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_437205
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4371c0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4372b5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4372d4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4372b5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4372eb
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_4223f0
pop ecx
mov edi eax
jmp r-xdata
call sub_437ea4
test eax eax
jne r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push ecx
call sub_4223f0
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_437f31
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
inc eax
add eax edi
jmp r-xdata
pop edi
sub_43736f
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_4235c3
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_42889e
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_42889e
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_425a99
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push edi
mov [ ebp + 0xc ] 0x2
call sub_42bd14
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x2 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
sub eax 0x2
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_4349a2
pop ecx
test eax eax
jne r-xdata
call sub_425a99
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
movzx eax cx
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_42bd14
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_434bd4
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_4304e3
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_4374d0
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_437607
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ edx + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_42889e
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ esi ] 0x0
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
push ebx
lea ebx [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax ebx
test ecx ecx
jle r-xdata
call sub_42889e
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc edi
jmp r-xdata
push ebx
call sub_4223f0
inc eax
push eax
push ebx
push esi
call sub_426c10
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax ] dl
inc eax
dec ecx
test ecx ecx
jg r-xdata
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4376b7
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_421b3f
lea eax [ ebp - 0x28 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_437ffd
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_434ebf
mov ecx eax
mov eax [ ebp - 0x14 ]
add esp 0x28
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_437743
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_421b3f
lea eax [ ebp - 0x28 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_437ffd
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_43542f
mov ecx eax
mov eax [ ebp - 0x14 ]
add esp 0x28
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4377cf
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov edx [ eax + 0x4 ]
push esi
push edi
movzx edi [ eax + 0x6 ]
mov eax [ eax ]
mov ecx edi
shr ecx 0x4
and ecx 0x7ff
and edi 0x8000
mov esi ecx
and edx 0xfffff
mov ebx 0x80000000
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edx edx
jne r-xdata
cmp esi 0x7ff
je r-xdata
lea eax [ ecx + 0x3c01 ]
xor ebx ebx
test eax eax
jne r-xdata
mov eax 0x7fff
jmp r-xdata
lea eax [ ecx + 0x3c00 ]
jmp r-xdata
or edi eax
mov [ ebx + 0x8 ] di
mov edi eax
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] edx
and [ eax ] edx
mov [ eax + 0x8 ] di
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov esi ecx
shr esi 0x15
shl edx 0xb
or esi edx
or esi ebx
mov ebx [ ebp + 0x8 ]
shl ecx 0xb
mov [ ebp + 0xc ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
test esi esi
js r-xdata
movzx eax ax
mov edx [ ebx ]
mov ecx edx
shr ecx 0x1f
add esi esi
lea eax [ edx + edx ]
add edi 0xffff
or esi ecx
mov [ ebx ] eax
jns r-xdata
mov [ ebp + 0xc ] edi
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebx
leave
retn
sub_437895
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4377cf
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_438779
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_4332c2
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_427ab0
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
sub_437930
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_437a0f
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_4391e6
call sub_4391e6
mov [ esi ] eax
jmp r-xdata
call sub_42889e
push 0x16
pop esi
mov [ eax ] esi
call sub_427aa0
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_4391e6
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_437a6c
push ebp
mov ebp esp
sub esp 0x24
lea ecx [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call sub_421b3f
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
jmp r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
xor ebx ebx
mov edi [ ebp - 0x24 ]
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov bl [ eax ]
lea esi [ eax + 0x1 ]
cmp edi 0x2
jl r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ edi + 0x90 ]
movzx ecx bl
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_42a94c
mov edi [ ebp - 0x24 ]
add esp 0xc
jmp r-xdata
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1 ] bl
cmp bl 0x2d
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
je r-xdata
or eax 0x2
cmp [ edi + 0x74 ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ ebp - 0x1 ] cl
inc esi
jmp r-xdata
mov cl [ ebp - 0x1 ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
test edi edi
js r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp edi 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
cmp edi 0x24
jg r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jne r-xdata
cmp cl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
cmp cl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
push 0xa
and eax 0x103
je r-xdata
movsx eax [ ebp - 0x1 ]
sub eax 0x30
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
push 0x10
pop edi
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x10 ]
mov cl [ ebp - 0x1 ]
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp eax edi
jae r-xdata
mov cl [ esi + 0x1 ]
mov [ ebp - 0x1 ] cl
add esi 0x2
cmp al 0x58
jne r-xdata
push 0x8
jmp r-xdata
mov edi 0x7fffffff
test dl 0x4
jne r-xdata
test eax eax
je r-xdata
add eax 0xffffffc9
sub eax 0x20
mov ecx [ ebp - 0xc ]
or edx 0x8
cmp ebx ecx
jb r-xdata
pop edi
jmp r-xdata
call sub_42889e
mov edx [ ebp - 0x8 ]
mov [ eax ] 0x22
test dl 0x1
je r-xdata
test dl 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
imul ebx edi
add ebx eax
jne r-xdata
push 0x0
test dl 0x2
pop ebx
setne bl
add ebx edi
or ebx 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax edx
and eax 0x2
je r-xdata
movzx ecx cl
movzx eax [ eax + ecx * 2 ]
mov ecx eax
and ecx 0x4
je r-xdata
mov eax [ ebp + 0x10 ]
or edx 0x4
test eax eax
je r-xdata
cmp eax [ ebp - 0x10 ]
jbe r-xdata
test dl 0x2
je r-xdata
mov [ eax ] esi
test eax eax
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
dec esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] edx
test dl 0x8
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
neg ebx
jmp r-xdata
cmp ebx edi
jbe r-xdata
mov cl [ esi ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1 ] cl
inc esi
jmp r-xdata
sub_437c90
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_437a6c
add esp 0x14
pop ebp
retn
sub_437cf0
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_4305df
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
add esp 0x10
mov [ ebp - 0x14 ] ecx
cmp eax 0xffffffff
je r-xdata
call sub_42889e
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_4305df
mov ecx eax
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_4305df
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4305df
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_4234f6
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_42889e
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_42b957
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
and ecx eax
mov [ ebp - 0x8 ] eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_42889e
mov [ eax ] 0xd
call sub_42886a
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_42886a
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_42889e
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_4234f6
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_42bdf6
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_437ea4
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
leave
retn
or eax 0xffffffff
jmp r-xdata
push 0x1
push edi
call sub_427616
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push 0x0
push 0x0
push edi
push eax
push 0xffffffff
push [ esi ]
xor edi edi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_4228ca
pop ecx
lea eax [ ebp - 0x4 ]
push edi
push eax
call sub_43957d
pop ecx
pop ecx
test eax eax
jns r-xdata
add esi 0x4
cmp [ ebp - 0x4 ] edi
je r-xdata
push [ ebp - 0x4 ]
call sub_4228ca
pop ecx
mov [ ebp - 0x4 ] edi
sub_437f49
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push edi
push [ ebp + 0x14 ]
call sub_421b3f
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
jmp r-xdata
push [ edi + 0x4 ]
push eax
push edx
push eax
push ecx
push 0x1001
push [ edi + 0x21c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_439bcc
add esp 0x20
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push eax
push edx
push ecx
call sub_43987e
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
sub_437ffd
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x68 ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x60 ] eax
mov eax ebx
push edi
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov esi ebx
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx ecx
mov [ ebp - 0x50 ] edx
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
xor eax eax
jmp r-xdata
inc ecx
jmp r-xdata
cmp dl 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov dl [ ecx ]
cmp dl 0x20
je r-xdata
cmp dl 0xa
je r-xdata
cmp dl 0xd
jne r-xdata
mov dl [ ecx ]
inc ecx
cmp eax 0xb
ja r-xdata
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_438749 ]
jmp r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
cmp dl 0x30
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
xor eax eax
inc eax
sub dl 0x30
mov [ ebp - 0x58 ] eax
cmp dl 0x9
ja r-xdata
lea eax [ ecx - 0x2 ]
mov [ ebp - 0x50 ] eax
lea eax [ edx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x5c ] eax
jmp r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x5c ] eax
mov esi ebx
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
jne r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
je r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
je r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp dl 0x30
cmp dl 0x30
jne r-xdata
mov ecx [ ebp - 0x50 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax dl
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp dl 0x30
je r-xdata
cmp dl 0x30
jmp r-xdata
push 0xa
pop eax
dec ecx
lea eax [ ecx - 0x1 ]
mov [ ebp - 0x50 ] eax
movsx eax dl
sub eax 0x2b
je r-xdata
cmp dl 0x30
jge r-xdata
mov eax ebx
mov esi ebx
push 0x4
cmp eax 0x18
jbe r-xdata
movsx eax dl
sub eax 0x2b
je r-xdata
push 0x5
cmp dl 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp dl 0x30
je r-xdata
cmp dl 0x2b
je r-xdata
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4c ] eax
mov esi ebx
cmp eax 0x19
jae r-xdata
cmp dl 0x2b
je r-xdata
mov esi [ ebp - 0x54 ]
jl r-xdata
mov eax [ ebp - 0x54 ]
pop eax
dec ecx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov dl [ ecx ]
inc ecx
sub dl 0x31
cmp dl 0x8
ja r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp dl 0x39
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x6c ] ebx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec ecx
push 0xb
jmp r-xdata
cmp dl 0x2d
je r-xdata
pop eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp dl 0x2d
je r-xdata
inc esi
sub dl 0x30
inc eax
mov [ edi ] dl
inc edi
jmp r-xdata
cmp dl 0x2d
je r-xdata
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4c ] eax
mov esi ebx
cmp eax 0x19
jae r-xdata
mov dl [ ecx ]
dec eax
inc ecx
cmp dl 0x30
je r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x4c ]
push 0x7
or edx 0xffffffff
pop eax
mov [ ebp - 0x60 ] edx
jmp r-xdata
sub eax 0x3
dec ecx
jmp r-xdata
push 0x8
jmp r-xdata
or [ ebp - 0x60 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp dl 0x30
jge r-xdata
imul esi esi 0xa
movsx eax dl
add esi 0xffffffd0
add esi eax
cmp esi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec edi
cmp [ edi ] bl
jne r-xdata
mov ecx [ ebp - 0x54 ]
dec edi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x54 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov edx 0x8000
pop eax
mov [ ebp - 0x6c ] edx
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp dl 0x30
je r-xdata
jmp r-xdata
cmp dl 0x39
jg r-xdata
mov dl [ ecx ]
inc ecx
cmp dl 0x30
jge r-xdata
cmp dl 0x43
jle r-xdata
mov dl [ ecx ]
inc ecx
cmp dl 0x30
jge r-xdata
sub dl 0x30
inc eax
mov [ edi ] dl
inc edi
dec esi
cmp dl 0x39
jg r-xdata
mov esi 0x1451
jmp r-xdata
mov dl [ ecx ]
inc ecx
mov edi [ ebp - 0x74 ]
or eax [ ebp - 0x6c ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
mov eax ebx
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_43599f
mov edx [ ebp - 0x60 ]
add esp 0xc
test edx edx
jns r-xdata
dec eax
inc ecx
dec edi
cmp [ edi ] bl
je r-xdata
test eax eax
je r-xdata
cmp dl 0x43
jle r-xdata
dec ecx
jmp r-xdata
cmp dl 0x45
jle r-xdata
cmp dl 0x39
jg r-xdata
mov dl [ ecx ]
inc ecx
mov eax [ ebp - 0x5c ]
add esi [ ebp - 0x54 ]
test eax eax
jne r-xdata
neg esi
mov [ ebp - 0x54 ] ecx
cmp dl 0x45
jle r-xdata
mov edx [ ebp - 0x68 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x64 ]
test ecx ecx
je r-xdata
push 0x6
jmp r-xdata
sub dl 0x64
cmp dl 0x1
jbe r-xdata
mov eax [ ebp - 0x58 ]
test eax eax
jne r-xdata
add esi [ ebp + 0x18 ]
sub dl 0x64
cmp dl 0x1
ja r-xdata
cmp esi 0x1450
jg r-xdata
sub esi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp esi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
xor edi edi
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov eax rw-data
sub eax 0x60
test esi esi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax rw-data
neg esi
sub eax 0x60
test esi esi
jne r-xdata
xor ecx ecx
mov [ ebp - 0x3c ] cx
jmp r-xdata
mov ecx esi
add eax 0x54
sar esi 0x3
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x54 ] esi
and ecx 0x7
je r-xdata
imul ecx ecx 0xc
add ecx eax
mov eax 0x8000
mov [ ebp - 0x50 ] ecx
cmp [ ecx ] ax
jb r-xdata
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov eax edi
xor eax edx
and eax 0x8000
mov [ ebp - 0x60 ] eax
mov eax 0x7fff
and edx eax
and edi eax
mov [ ebp - 0x78 ] ebx
lea eax [ edi + edx ]
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x5c ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
mov [ ebp - 0x50 ] ecx
xor eax eax
cmp [ ebp - 0x60 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
cmp di ax
jae r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test di di
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x5c ] esi
jne r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
push 0x5
mov eax ebx
pop edi
mov [ ebp - 0x70 ] eax
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x68 ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x5c ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
mov ecx edi
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x58 ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x5c ]
mov edx [ ebp - 0x24 ]
mov edi [ ebp - 0x2c ]
add esi 0xc002
mov [ ebp - 0x50 ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi [ ebp - 0x58 ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x7c ]
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x78 ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x68 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov ecx eax
mov edx edi
shr edx 0x1f
add eax eax
or eax edx
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
shr ecx 0x1f
add edx edx
mov eax 0xffff
or edx ecx
add edi edi
add esi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
mov eax [ ebp - 0x64 ]
sub eax 0x2
add esi 0x2
dec ecx
mov [ ebp - 0x64 ] eax
test ecx ecx
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x50 ] ecx
shr [ ebp - 0x50 ] 0x1
or [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x68 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ eax ]
mov [ ebp - 0x58 ] eax
movzx eax [ esi ]
mov edi [ ebp - 0x58 ]
imul edi eax
mov [ ebp - 0x58 ] edi
add edi [ edx - 0x4 ]
mov [ ebp - 0x7c ] ebx
cmp edi [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x70 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x50 ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x50 ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x60 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
mov ax di
xor edi edi
inc edi
or ax di
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov edx 0x7fff
cmp si dx
jae r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_438779
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi 0x8000
and edx esi
movzx esi [ ebp + 0x10 ]
xor ecx ecx
mov eax 0x7fff
inc ecx
and esi eax
push edi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x78 ] edx
mov [ ebp - 0x68 ] eax
test dx dx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp si ax
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test si si
jne r-xdata
movzx edx si
mov eax edx
imul edx edx 0x4d10
shr eax 0x8
mov ecx edi
shr ecx 0x18
add edx 0xecbced0c
lea eax [ eax + ecx * 2 ]
imul eax eax 0x4d
add eax edx
sar eax 0x10
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x48 ] ecx
movsx ecx cx
mov [ ebp - 0x20 ] ax
neg ecx
mov eax rw-data
sub eax 0x60
xor ebx ebx
mov [ ebp - 0x16 ] si
mov [ ebp - 0x1a ] edi
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x5c ] 0x5
mov [ ebp - 0x6c ] 0xbffd
mov [ ebp - 0x58 ] 0x3fbf
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov edx 0x80000000
mov [ ebx ] cx
mov ecx [ ebp + 0x8 ]
cmp eax edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
jns r-xdata
test eax 0x40000000
jne r-xdata
test ecx ecx
je r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x8000
cmp dx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] cl
mov [ ebx + 0x4 ] 0x30
mov eax ecx
jmp r-xdata
test [ ebp + 0x18 ] 0x1
mov ecx [ ebp - 0x70 ]
mov eax [ ebp - 0x48 ]
mov edi [ ebp + 0x14 ]
mov [ ecx ] ax
je r-xdata
inc [ ebp - 0x48 ]
mov ecx eax
mov eax [ ebp - 0x26 ]
mov edi eax
xor edi ecx
and edi 0x8000
mov [ ebp - 0x54 ] edi
mov edi 0x7fff
and eax edi
and ecx edi
mov [ ebp - 0x74 ] eax
add eax ecx
movzx edi ax
mov eax 0x7fff
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
cmp cx ax
jae r-xdata
je r-xdata
neg ecx
mov eax rw-data
sub eax 0x60
mov [ ebp - 0x44 ] ecx
test ecx ecx
cmp [ ebp - 0x78 ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42b4bf
leave
retn
mov [ ebp - 0x48 ] edi
cwde
add edi eax
mov [ ebp - 0x48 ] edi
test edi edi
jg r-xdata
xor eax eax
cmp [ ebp - 0x54 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x74 ]
cmp ax [ ebp - 0x68 ]
jae r-xdata
mov esi [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] esi
cmp eax edx
jne r-xdata
cmp eax 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_4332c2
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x18 ]
shr edi 0x10
sub edi 0x3ffe
xor eax eax
push 0x8
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x16 ] ax
mov ebx [ ebp - 0x18 ]
pop edi
mov [ ebp - 0x48 ] eax
push 0x15
pop eax
cmp edi eax
jle r-xdata
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x78 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ ecx + 0x4 ] 0x30
cmp di [ ebp - 0x6c ]
ja r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
jne r-xdata
imul ecx ecx 0xc
add ecx eax
mov eax 0x8000
mov [ ebp - 0x88 ] ecx
cmp [ ecx ] ax
jb r-xdata
push r--data
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_427ab0
int3
mov [ ebx + 0x3 ] 0x6
mov ecx edx
mov eax esi
shr eax 0x1f
shr ecx 0x1f
add edx edx
add ebx ebx
add esi esi
or ebx ecx
or edx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ebx
dec edi
jne r-xdata
mov edi [ ebp - 0x68 ]
push 0x0
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
pop ebx
test edi edi
jns r-xdata
cmp di [ ebp - 0x58 ]
ja r-xdata
sar [ ebp - 0x44 ] 0x3
add eax 0x54
mov [ ebp - 0x54 ] eax
and ecx 0x7
je r-xdata
jmp r-xdata
movzx edi [ ecx + 0xa ]
mov eax [ ebp - 0x16 ]
mov [ ebp - 0x64 ] edi
xor [ ebp - 0x64 ] eax
and eax 0x7fff
and edi 0x7fff
mov [ ebp - 0x50 ] eax
add eax edi
mov esi 0x8000
and [ ebp - 0x64 ] esi
mov [ ebp - 0x60 ] edi
movzx edi ax
mov eax [ ebp - 0x50 ]
dec esi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
cmp ax si
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x88 ] ecx
push r--data
push r--data
jmp r-xdata
mov esi [ ebp - 0x70 ]
mov eax [ ebp - 0x48 ]
lea edi [ esi + 0x4 ]
inc eax
mov ecx edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x58 ] eax
test eax eax
jle r-xdata
neg edi
and edi 0xff
jle r-xdata
test cx cx
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ ebp - 0x18 ]
shr eax 0x10
mov ecx 0x3fff
cmp ax cx
jb r-xdata
xor eax eax
cmp [ ebp - 0x64 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x60 ] si
mov esi [ ebp - 0x40 ]
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_4332c2
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx - 0x1 ]
sub ecx 0x2
cmp al 0x35
jl r-xdata
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov ecx edx
mov eax edi
shr eax 0x1f
add edx edx
or edx eax
mov eax [ ebp - 0x44 ]
shr ecx 0x1f
lea esi [ eax + eax ]
or esi ecx
add edi edi
mov eax edi
mov ecx edx
shr eax 0x1f
add edx edx
shr ecx 0x1f
or edx eax
mov eax [ ebp - 0x3c ]
add edi edi
add esi esi
or esi ecx
lea ecx [ eax + edi ]
mov [ ebp - 0x48 ] ecx
cmp ecx edi
jb r-xdata
mov ebx [ ebp - 0x44 ]
test ax ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
cmp di [ ebp - 0x6c ]
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jae r-xdata
jmp r-xdata
lea eax [ edx + 0x1 ]
mov ecx ebx
cmp eax edx
jb r-xdata
cmp ecx eax
jae r-xdata
mov ecx edx
mov eax ebx
shl eax 0x1f
shl ecx 0x1f
shr edx 0x1
shr esi 0x1
shr ebx 0x1
or esi ecx
or edx eax
dec edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] esi
test edi edi
jg r-xdata
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
xor ebx ebx
mov edx ebx
push 0x5
mov [ ebp - 0x50 ] edx
lea ecx [ ebp - 0xc ]
pop eax
inc edi
test [ ebp - 0x28 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
cmp di [ ebp - 0x58 ]
ja r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp ecx edi
jae r-xdata
cmp ecx edi
jae r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edi [ eax + edx ]
cmp edi edx
jb r-xdata
add ecx 0x2
inc edx
dec eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x5c ] eax
test eax eax
jg r-xdata
lea edi [ ebp - 0x20 ]
lea eax [ ebp - 0x28 ]
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x58 ] edi
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
test ax ax
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec ecx
mov eax [ ebp - 0x70 ]
sub cl al
sub cl 0x3
mov [ eax + 0x3 ] cl
movsx ecx cl
mov [ ecx + eax + 0x4 ] bl
xor eax eax
inc eax
mov ecx [ ebp - 0x70 ]
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x78 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ edi ] 0x30
jmp r-xdata
cmp [ ecx ] 0x39
jne r-xdata
cmp ecx edi
jae r-xdata
inc esi
test ecx ecx
mov ecx [ ebp - 0x48 ]
mov edx eax
je r-xdata
inc esi
cmp edi eax
jae r-xdata
mov esi eax
test eax eax
jle r-xdata
mov edi [ ebp - 0x4c ]
mov esi [ ebp - 0x8 ]
add edi 0xc002
test di di
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi edx
jae r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] edx
mov [ ecx + 0x5 ] bl
jmp r-xdata
mov [ ecx ] 0x30
dec ecx
inc [ ecx ]
inc ecx
inc [ esi ]
mov esi [ ebp - 0x70 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
add esi [ ebp - 0x34 ]
add edx edx
mov eax ecx
shr eax 0x1f
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x20 ] edx
lea edx [ edi + edi ]
or edx eax
mov ecx edi
shr ecx 0x1f
lea eax [ esi + esi ]
or eax ecx
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x18 ] eax
shr eax 0x18
add al 0x30
mov [ ecx ] al
mov eax [ ebp - 0x58 ]
inc ecx
dec eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x58 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x44 ] ebx
mov [ ecx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x68 ]
push 0x5
mov eax ebx
pop esi
mov [ ebp - 0x80 ] eax
lea edx [ ebp - 0xc ]
mov [ ebp - 0x50 ] esi
inc edi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
mov cx [ ebp - 0x10 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x7c ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x44 ] ebx
mov edx [ ebp - 0x44 ]
push 0x0
pop ebx
test di di
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx eax
mov edx ebx
add eax eax
shr edx 0x1f
or eax edx
mov [ ebp - 0xc ] eax
shr ecx 0x1f
add esi esi
mov eax 0xffff
add ebx ebx
or esi ecx
add edi eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] esi
test di di
jg r-xdata
mov edi [ ebp - 0x58 ]
mov eax [ ebp - 0x6c ]
add edi 0x2
sub eax 0x2
dec esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x6c ] eax
test esi esi
jg r-xdata
inc [ ecx ]
add edx 0x2
inc eax
dec esi
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x50 ] esi
test esi esi
jg r-xdata
lea esi [ ebp - 0x20 ]
lea eax [ esi + eax * 2 ]
lea esi [ ecx + 0x8 ]
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x84 ] esi
cmp [ ecx + 0x4 ] ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ecx ebx
mov eax esi
shl eax 0x1f
shl ecx 0x1f
shr ebx 0x1
shr edx 0x1
or ebx eax
or edx ecx
shr esi 0x1
dec [ ebp - 0x5c ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc edi
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test esi esi
js r-xdata
movzx edx [ eax ]
movzx eax [ edi ]
imul edx eax
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x68 ] ebx
lea edi [ eax + edx ]
cmp edi eax
jb r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] esi
test esi esi
jle r-xdata
mov edi [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
add edi 0xc002
mov [ ebp - 0x40 ] eax
test di di
jle r-xdata
xor esi esi
inc esi
jmp r-xdata
cmp eax edi
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
push 0x0
test edi edi
mov edi [ ebp - 0x4c ]
mov [ ebp - 0x8 ] esi
pop ebx
je r-xdata
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test eax eax
js r-xdata
mov [ edx - 0x4 ] eax
test esi esi
je r-xdata
mov esi [ ebp - 0x7c ]
mov eax [ ebp - 0x54 ]
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x54 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] esi
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov ecx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax cx
jne r-xdata
xor eax eax
mov cx dx
inc eax
or cx ax
mov [ ebp - 0x10 ] cx
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov ax [ ebp - 0x10 ]
mov ebx [ ebp - 0x40 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
xor edx edx
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x74 ]
mov [ ebp - 0x50 ] eax
inc edx
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx eax
add eax eax
mov edx esi
shr edx 0x1f
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
shr ecx 0x1f
add eax eax
or eax ecx
mov ecx 0xffff
add esi esi
add edi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x40 ]
mov esi [ ebp - 0x84 ]
add eax 0x2
sub esi 0x2
dec ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x84 ] esi
test ecx ecx
jg r-xdata
inc [ edx ]
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
mov eax 0x8000
cmp cx ax
ja r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and esi 0x1ffff
cmp esi 0x18000
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax ebx
shl eax 0x1f
mov [ ebp - 0x40 ] ecx
shr [ ebp - 0x40 ] 0x1
or [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
shl ecx 0x1f
shr esi 0x1
shr ebx 0x1
or esi ecx
dec [ ebp - 0x50 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] esi
jne r-xdata
inc edi
movzx edi [ eax ]
movzx eax [ esi ]
imul edi eax
mov eax [ edx - 0x4 ]
mov [ ebp - 0x7c ] ebx
lea esi [ eax + edi ]
cmp esi eax
mov [ ebp - 0x60 ] esi
mov eax esi
jb r-xdata
mov ecx [ ebp - 0x88 ]
mov esi [ ebp - 0x50 ]
mov eax [ ebp - 0x80 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x40 ]
test [ ebp - 0x10 ] dl
je r-xdata
push 0x0
mov [ ebp - 0x40 ] ebx
test edi edi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x64 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1a ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov edx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax dx
jne r-xdata
mov ax si
or ax dx
mov [ ebp - 0x10 ] ax
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x40 ] esi
mov eax 0x7fff
cmp di ax
jae r-xdata
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
mov ecx 0x8000
cmp ax cx
ja r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_43913d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_4391e6
push ebp
mov ebp esp
sub esp 0xc
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov edx esi
mov ebx 0xc00
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov esi edi
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
movzx eax ax
mov edx 0x1000
test edx eax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_4394e6
movzx eax ax
pop ecx
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test edx eax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
xor eax esi
or ecx esi
test eax 0x8031f
je r-xdata
push eax
call sub_43913d
push eax
mov [ ebp + 0xc ] eax
call sub_42de24
pop ecx
pop ecx
stmxcsr [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_4394e6
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_43957d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
push edi
test eax eax
jne r-xdata
push ebx
mov ebx [ eax ]
push esi
test ebx ebx
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
or eax 0xffffffff
jmp r-xdata
call sub_42889e
mov [ eax ] 0x16
push 0x3d
push ebx
call sub_439c5d
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0xc ] esi
test esi esi
je r-xdata
pop edi
leave
retn
cmp ebx esi
je r-xdata
mov edi [ rw-data ]
xor eax eax
cmp [ esi + 0x1 ] al
sete al
mov [ ebp - 0x4 ] eax
cmp edi [ rw-data ]
jne r-xdata
test edi edi
jne r-xdata
push edi
call sub_4397c3
mov edi eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ rw-data ] edi
mov eax esi
sub eax ebx
push eax
push ebx
call sub_439823
mov esi eax
pop ecx
pop ecx
test esi esi
js r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
test eax eax
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push ebx
call sub_4228ca
mov edi [ ebp + 0x8 ]
pop ecx
and [ edi ] 0x0
test esi esi
jns r-xdata
push [ edi + esi * 4 ]
call sub_4228ca
cmp [ ebp - 0x4 ] 0x0
pop ecx
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_427660
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
call sub_437ea4
test eax eax
je r-xdata
pop esi
pop ebx
lea eax [ esi + 0x2 ]
cmp eax esi
jl r-xdata
neg esi
cmp [ edi + esi * 4 ] 0x0
jne r-xdata
mov [ edi + esi * 4 ] ebx
mov edi [ ebp + 0x8 ]
and [ edi ] 0x0
jmp r-xdata
or eax 0xffffffff
and [ eax ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ edi + esi * 4 + 0x4 ]
mov [ edi + esi * 4 ] eax
inc esi
cmp esi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x4
call sub_427660
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push eax
push 0x4
push [ rw-data ]
call sub_4276f5
add esp 0xc
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x4
push esi
push [ rw-data ]
call sub_4276f5
mov edi [ ebp + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
push ebx
call sub_4223f0
pop ecx
add eax 0x2
push eax
call sub_427616
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
and [ eax ] 0x0
mov edi [ ebp + 0x8 ]
and [ eax + esi * 4 + 0x4 ] 0x0
mov [ eax + esi * 4 ] ebx
and [ edi ] 0x0
jmp r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push ebx
call sub_4228ca
and [ edi ] 0x0
pop ecx
push ebx
push ebx
call sub_4223f0
pop ecx
add eax 0x2
push eax
push esi
call sub_4332c2
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_427ab0
int3
mov ecx esi
sub ecx ebx
add ecx [ ebp - 0xc ]
mov [ ecx ] al
mov eax [ ebp - 0x4 ]
inc ecx
neg eax
sbb eax eax
not eax
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4228ca
pop ecx
or [ ebp - 0x8 ] 0xffffffff
call sub_42889e
mov [ eax ] 0x2a
sub_4397c3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov eax esi
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp [ esi ] ecx
je r-xdata
push ebx
push edi
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_427616
mov edi eax
pop ecx
pop ecx
mov ebx edi
test edi edi
jne r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push 0x9
call sub_421d7b
and [ edi ] 0x0
pop edi
mov eax ebx
pop ebx
sub esi edi
push eax
call sub_439c0d
mov [ edi ] eax
add edi 0x4
pop ecx
mov eax [ esi + edi ]
test eax eax
jne r-xdata
sub_439823
push ebp
mov ebp esp
mov ecx [ rw-data ]
push esi
mov esi ecx
push edi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi ecx
sar esi 0x2
neg esi
mov edi [ ebp + 0xc ]
add esi 0x4
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_437f31
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub esi [ rw-data ]
sar esi 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
sub_43987e
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_421b3f
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp - 0x10 ]
mov ebx [ edi + 0xa4 ]
test ebx ebx
jne r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
jmp r-xdata
push [ edi + 0x8 ]
push eax
push edx
push eax
push ecx
push 0x1001
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_439bcc
add esp 0x20
test eax eax
jne r-xdata
lea esi [ ebp - 0x10 ]
push esi
push eax
push edx
push ecx
call sub_439d0d
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
call sub_42889e
mov [ eax ] 0x16
jmp r-xdata
sub_439941
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x1c ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x14 ]
push edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] ecx
test esi esi
jle r-xdata
cmp esi 0xffffffff
jge r-xdata
push esi
push eax
call sub_439bac
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
mov esi eax
mov edi [ ebp + 0x20 ]
test edi edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edi 0xffffffff
jl r-xdata
push edi
push ecx
call sub_439bac
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42b4bf
leave
retn
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x28 ] ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
cmp esi edi
jne r-xdata
test edi edi
jne r-xdata
cmp edi 0x1
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
cmp esi 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
jle r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
test esi esi
jle r-xdata
pop eax
jmp r-xdata
push ecx
push ebx
push esi
push [ ebp - 0x1c ]
mov esi [ ebp + 0x24 ]
push 0x1
push esi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
test edi edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push ebx
call sub_426a45
mov eax [ ebp - 0x28 ]
pop ecx
xor eax eax
push eax
push eax
push edi
push [ ebp - 0x24 ]
push 0x9
push esi
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
push ecx
call sub_4245ec
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_4337b0
mov ebx esp
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
lea eax [ ebp - 0x12 ]
cmp [ ebp - 0x12 ] bl
je r-xdata
jle r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
lea eax [ ebp - 0x12 ]
cmp [ ebp - 0x12 ] bl
je r-xdata
mov esi [ ebp - 0x1c ]
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
add ebx 0x8
mov esi [ ebp - 0x24 ]
mov dl [ esi ]
cmp dl [ eax ]
jb r-xdata
push ecx
push esi
push edi
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
mov dl [ esi ]
cmp dl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] bl
jne r-xdata
cmp dl cl
jbe r-xdata
push esi
call sub_426a45
pop ecx
push [ ebp - 0x1c ]
push esi
push [ ebp - 0x20 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x2c ]
call sub_4335fc
add esp 0x18
mov [ ebp - 0x28 ] eax
push ecx
call sub_4245ec
mov esi eax
pop ecx
test esi esi
je r-xdata
mov eax ecx
call sub_4337b0
mov esi esp
test esi esi
je r-xdata
add eax 0x2
cmp [ eax ] bl
jne r-xdata
cmp dl cl
jbe r-xdata
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
sub_439bac
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx eax
test eax eax
je r-xdata
dec ecx
dec ecx
cmp [ edx ] 0x0
je r-xdata
sub eax ecx
dec eax
pop ebp
retn
inc edx
test ecx ecx
jne r-xdata
sub_439bcc
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_439941
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_439c0d
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4223f0
lea edi [ eax + 0x1 ]
push edi
call sub_4245ec
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
push edi
push ebx
call sub_4332c2
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_427ab0
int3
mov eax ebx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_439c72
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push edi
push [ ebp + 0x10 ]
call sub_421b3f
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov edi [ ebp - 0xc ]
xor esi esi
cmp [ edi + 0x8 ] esi
jne r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
xor esi esi
jmp r-xdata
movzx ecx [ edx ]
test cx cx
jne r-xdata
push [ ebp + 0xc ]
push edx
call sub_439dc0
pop ecx
pop ecx
mov esi eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx eax cl
test [ eax + edi + 0x19 ] 0x4
je r-xdata
movzx eax cx
cmp [ ebp + 0xc ] eax
jne r-xdata
pop edi
mov eax esi
pop esi
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax cx
cmp [ ebp + 0xc ] eax
je r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
mov esi edx
inc edx
movzx ecx cx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea esi [ edx - 0x1 ]
jmp r-xdata
sub_439d0d
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
leave
retn
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_421b3f
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_42889e
mov [ eax ] 0x16
call sub_427aa0
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
sub edi ebx
push ecx
push ebx
push edi
call sub_439ef0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_423b7d
mov esi eax
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_423b7d
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_439dc0
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_439ef0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_439f5e
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call [ VariantInit@IAT ]
push [ ebp + 0x8 ]
push esi
call [ VariantCopy@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub_439f7c
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
push esi
mov [ ebp - 0x8 ] ebx
call [ VariantInit@IAT ]
mov edi [ ebp + 0x8 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax [ edi + 0xc ]
lea ecx [ eax - 0x1 ]
cmp ecx 0xe
ja r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x4
jmp [ ecx * 4 + jump_table_43a1ac ]
push 0xb
pop eax
mov ecx edi
mov [ esi ] ax
call sub_41e3ee
test al al
je r-xdata
push 0x3
pop eax
mov ecx edi
mov [ esi ] ax
call sub_40cdb4
jmp r-xdata
push 0x5
pop eax
mov ecx edi
mov [ esi ] ax
call sub_412620
fstp [ esi + 0x8 ]
jmp r-xdata
push 0x14
pop eax
mov ecx edi
mov [ esi ] ax
call sub_40d00b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
push 0x13
pop eax
mov ecx edi
mov [ esi ] ax
call sub_44be63
jmp r-xdata
push 0x8
pop eax
mov ecx edi
mov [ esi ] ax
call sub_4084a6
mov eax [ edi + 0x8 ]
push [ eax ]
call [ SysAllocString@IAT ]
jmp r-xdata
mov eax 0x200c
push edi
mov [ esi ] ax
call sub_43a28d
jmp r-xdata
cmp eax 0x8
jne r-xdata
cmp eax 0x6
jne r-xdata
push 0x29
mov ecx edi
call sub_41d5f6
test al al
je r-xdata
mov eax 0x2011
push edi
mov [ esi ] ax
call sub_43a3d5
push 0x24
pop eax
push 0x28
mov [ esi ] ax
mov [ esi + 0x8 ] ebx
call sub_42010a
pop ecx
test eax eax
je r-xdata
push 0x24
pop eax
push 0x28
mov [ esi ] ax
mov [ esi + 0x8 ] ebx
call sub_42010a
pop ecx
test eax eax
je r-xdata
push 0x24
pop eax
push 0x28
mov [ esi ] ax
mov [ esi + 0x8 ] ebx
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
push 0x24
pop eax
push 0x28
mov [ esi ] ax
mov [ esi + 0x8 ] ebx
call sub_42010a
pop ecx
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x8 ] eax
jmp r-xdata
test ebx ebx
je r-xdata
mov ebx [ edi ]
push ebx
lea ecx [ ebp - 0x1c ]
call sub_439f7c
push eax
mov ecx esi
call sub_43a23f
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ebx [ edi ]
push 0x2a
mov ecx edi
call sub_41d5f6
test al al
je r-xdata
push 0xa
pop eax
mov [ esi ] ax
mov [ esi + 0x8 ] 0x80020004
jmp r-xdata
mov [ esi + 0xc ] ebx
jmp r-xdata
cmp [ edi + 0xc ] 0xc
jne r-xdata
cmp [ edi + 0xc ] 0xf
jne r-xdata
mov ecx edi
call sub_44afbf
push eax
mov ecx edx
call sub_43a476
mov eax ebx
lea eax [ ebp - 0x2c ]
xor ebx ebx
push eax
mov ecx edi
inc ebx
call sub_44afce
mov ecx [ ebp + 0x8 ]
push eax
call sub_43a438
jmp r-xdata
mov [ esi + 0x8 ] ax
jmp r-xdata
push ebx
push esi
call [ VariantCopy@IAT ]
jmp r-xdata
xor eax eax
inc eax
mov [ esi ] ax
jmp r-xdata
push ebx
mov ecx eax
call sub_43a4ad
jmp r-xdata
mov ebx [ edi ]
push ebx
mov ecx eax
call sub_43a4f8
jmp r-xdata
mov ebx [ edi ]
lea ecx [ ebp - 0x2c ]
call sub_405cd3
mov [ esi + 0xc ] eax
test bl 0x1
je r-xdata
mov ebx eax
sub_43a1e8
push ebp
mov ebp esp
sub esp 0x18
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ ebp - 0x14 ]
call sub_439f7c
push eax
mov ecx esi
call sub_43a23f
lea eax [ ebp - 0x14 ]
push eax
call [ VariantClear@IAT ]
mov eax esi
pop esi
leave
retn 0x4
sub_43a25b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ esp + 0xc ]
call sub_439f7c
push eax
mov ecx esi
call sub_43a23f
lea eax [ esp + 0x8 ]
push eax
call [ VariantClear@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_43a28d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x30
push ebx
push esi
push edi
xor esi esi
push esi
call sub_40218e
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push 0xc
call [ SafeArrayAllocDescriptorEx@IAT ]
test eax eax
js r-xdata
xor eax eax
mov ebx esi
test edi edi
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0x880
mov [ eax + 0x2 ] cx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x10
push [ ebp - 0x8 ]
call [ SafeArrayAllocData@IAT ]
test eax eax
js r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
inc ebx
push ebx
mov [ eax + edx * 8 + 0x14 ] esi
call sub_40218e
mov ecx [ ebp - 0x8 ]
mov [ ecx + edx * 8 + 0x10 ] eax
cmp ebx edi
jl r-xdata
push [ ebp - 0x8 ]
call [ SafeArrayDestroyDescriptor@IAT ]
lea eax [ ebp - 0x2c ]
push eax
call [ VariantInit@IAT ]
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x1
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
push [ ebp - 0x8 ]
call [ SafeArrayDestroyData@IAT ]
push [ ebp - 0x8 ]
call [ SafeArrayDestroyDescriptor@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_412570
lea eax [ ebp - 0x2c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
push [ ebp + 0x8 ]
mov edi [ ebp - 0xc ]
lea ecx [ ebp - 0x1c ]
call sub_40d89e
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_44aab4
mov ebx eax
test ebx ebx
jle r-xdata
push [ ebp - 0x8 ]
call [ SafeArrayUnaccessData@IAT ]
mov esi [ ebp - 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_412570
lea eax [ ebp - 0x2c ]
push eax
call [ VariantClear@IAT ]
mov eax esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
inc esi
add edi 0x10
cmp esi ebx
jl r-xdata
push [ eax + esi * 4 ]
lea ecx [ ebp - 0x2c ]
call sub_43a25b
lea eax [ ebp - 0x2c ]
push eax
push edi
call [ VariantCopy@IAT ]
mov eax [ ebp + 0x8 ]
cmp [ eax + esi * 4 ] 0x0
je r-xdata
sub_43a3d5
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x18
push esi
call sub_44be8a
push eax
push 0x0
push 0x11
call [ SafeArrayCreateVector@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x14 ]
add esi 0x18
call sub_4113a0
mov ecx [ ebp + 0x8 ]
call sub_44be8a
push eax
push ecx
lea ecx [ ebp - 0x14 ]
call sub_44be47
pop ecx
push eax
push esi
call sub_41faa0
add esp 0xc
lea ecx [ ebp - 0x14 ]
call sub_412570
lea eax [ esi - 0x18 ]
jmp r-xdata
pop esi
leave
retn 0x4
sub_43a438
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
and [ edi + 0xc ] 0x0
and [ edi + 0x10 ] 0x0
mov [ edi ] r--data
lea ecx [ edi + 0x18 ]
mov [ edi + 0x4 ] 0x1
call sub_40d3d2
push [ ebp + 0x8 ]
lea ecx [ edi + 0x18 ]
call sub_40c935
mov [ edi + 0x8 ] 0xe
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_43a476
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi ] r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
call sub_40d3d2
mov eax [ ebp + 0x8 ]
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] 0xd
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43a4ad
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov [ esi ] r--data
xor edi edi
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x10 ] edi
call sub_40d3d2
push 0x14
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov [ esi + 0xc ] edi
pop edi
mov [ esi + 0x8 ] 0xc
mov eax esi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_448a89
mov edi eax
sub_43a4f8
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov [ esi ] r--data
xor edi edi
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
call sub_40d3d2
push 0x14
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov [ esi + 0x10 ] edi
pop edi
mov [ esi + 0x8 ] 0xf
mov eax esi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_444d76
mov edi eax
sub_43a543
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
push ecx
call sub_43a56f
lea ecx [ esi + 0x18 ]
pop esi
jmp sub_405cd3
push ecx
call sub_43a599
sub_43a5ae
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0xc
jne r-xdata
push 0x16
pop edx
mov [ ecx ] dx
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
dec eax
shr eax 0x2
inc eax
mov [ ecx + 0x8 ] eax
xor eax eax
jmp r-xdata
pop ebp
retn 0x10
sub_43a5f6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
mov eax 0x80070057
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax 0x8000
mov [ esi ] ax
or ax [ ecx + 0x8 ]
mov [ esi ] ax
mov eax [ ecx + 0x8 ]
sub eax 0xc
je r-xdata
mov eax [ ecx + 0xc ]
dec eax
je r-xdata
pop esi
pop ebp
retn 0x14
mov eax [ ecx + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
jmp r-xdata
push [ ecx + 0x18 ]
call [ SysAllocString@IAT ]
jmp r-xdata
mov eax [ ecx + 0x10 ]
jmp r-xdata
sub_43a67e
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx r--data
call sub_43a6e8
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
xor eax eax
pop esi
mov ecx [ ebp + 0xc ]
mov edx r--data
call sub_43a6e8
test eax eax
jne r-xdata
mov eax 0x80004002
jmp r-xdata
pop ebp
retn 0xc
sub_43a6c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
push ecx
mov ecx esi
call sub_43a584
sub_43a6fa
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] edx
test edx edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
sub_43a728
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ eax ]
push edi
mov esi ecx
call sub_43a772
test al al
je r-xdata
mov eax [ esi ]
pop edi
pop esi
pop ebp
retn 0x4
push edi
lea ecx [ ebp + 0x8 ]
call sub_43a6fa
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov [ esi ] ecx
lea ecx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
call sub_43a71b
sub_43a78a
push ebp
mov ebp esp
push ecx
push ecx
test ecx ecx
jne r-xdata
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
push esi
push edi
push 0x1d
pop esi
lea edi [ ebp - 0x4 ]
push edi
push edx
push ecx
call [ eax + 0x38 ]
test eax eax
jns r-xdata
mov ecx 0x80070057
call sub_43a83b
mov eax [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push eax
call [ ecx + 0xc ]
mov edi [ ebp - 0x8 ]
test eax eax
js r-xdata
mov ecx edi
call j_sub_43a71b
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
pop edi
mov ax si
pop esi
leave
retn
lea ecx [ ebp - 0x4 ]
call sub_43a71b
mov ecx [ ebp - 0x4 ]
push edi
mov edx [ ecx ]
push ecx
call [ edx + 0x4c ]
mov eax [ edi + 0x28 ]
cmp eax 0x6
je r-xdata
movzx ecx [ edi + 0x40 ]
cmp cx si
jne r-xdata
test eax eax
jne r-xdata
sub eax 0x0
je r-xdata
mov edx [ edi + 0x3c ]
mov ecx [ ebp - 0x4 ]
call sub_43a78a
mov edi [ ebp - 0x8 ]
movzx esi ax
jmp r-xdata
push 0x3
sub eax 0x3
je r-xdata
push 0xd
jmp r-xdata
dec eax
je r-xdata
pop esi
push 0x9
jmp r-xdata
mov esi ecx
jmp r-xdata
sub_43a857
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax edx
push edi
mov [ ebp - 0x4 ] eax
mov ebx ecx
test esi esi
je r-xdata
push eax
push ebx
call [ CLSIDFromProgID@IAT ]
mov edi eax
test edi edi
js r-xdata
mov [ esi ] 0x1
push [ ebp - 0x4 ]
push ebx
call [ CLSIDFromString@IAT ]
mov edi eax
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
push [ ebp - 0x4 ]
call [ ProgIDFromCLSID@IAT ]
test eax eax
js r-xdata
push [ ebp + 0x8 ]
push ebx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ CoTaskMemFree@IAT ]
jmp r-xdata
and [ esi ] 0x0
sub_43a8c8
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi edx
lea edx [ ebp - 0x4 ]
push edx
xor esi esi
xor eax eax
push 0x800
mov [ ebx + 0xc ] eax
mov eax [ ecx ]
push esi
push ecx
mov [ ebx ] esi
mov [ ebp - 0x4 ] esi
call [ eax + 0x10 ]
mov esi eax
test esi esi
js r-xdata
lea ecx [ ebp - 0x4 ]
call sub_43a71b
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_43a761
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push eax
call [ ecx + 0xc ]
mov esi eax
test esi esi
js r-xdata
mov esi 0x80004001
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x28 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ ebp - 0x14 ] 0xffffffff
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
test [ edx + 0x36 ] 0x40
je r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
xor edi edi
cmp cx [ eax + 0x2c ]
jae r-xdata
mov eax [ ebp - 0x4 ]
and [ ebp - 0x10 ] 0x0
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
push 0x1
lea edx [ ebp - 0x10 ]
push edx
push edi
push eax
call [ ecx + 0x1c ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x18 ]
mov ecx [ eax ]
push edx
push 0xffffffff
push eax
call [ ecx + 0x20 ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x8 ]
mov edx [ eax ]
push ecx
movzx ecx di
push ecx
push eax
call [ edx + 0x14 ]
mov esi eax
test esi esi
js r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
xor edi edi
cmp cx [ eax + 0x2c ]
jae r-xdata
push [ ebp - 0x10 ]
call [ SysFreeString@IAT ]
mov [ ebp - 0x14 ] edi
mov esi 0x80004005
jmp r-xdata
mov eax [ ebp - 0x4 ]
and [ ebp - 0x10 ] 0x0
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push [ ebp - 0x18 ]
push eax
call [ ecx + 0x38 ]
test eax eax
jns r-xdata
movzx eax [ edx + 0x18 ]
cmp ax 0x20
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
test [ edx + 0x10 ] 0x3
je r-xdata
mov ebx [ SysFreeString@IAT ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_43a728
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0xc ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
mov esi eax
test esi esi
jns r-xdata
mov esi 0x80004005
jmp r-xdata
and [ ebp - 0x10 ] 0x0
xor ecx ecx
mov [ ebx ] 0x1
cmp cx ax
jge r-xdata
mov eax [ ebp - 0x4 ]
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
and [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0xc ]
inc edi
cmp di [ eax + 0x2c ]
jb r-xdata
mov eax [ edx ]
cmp eax [ ebp - 0x14 ]
je r-xdata
push [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
jmp r-xdata
mov edx [ eax ]
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x8 ]
push [ ecx ]
push eax
call [ edx + 0x30 ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x10 ] 0x3
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_43a71b
lea ecx [ ebp - 0x10 ]
call sub_43a71b
jmp r-xdata
movzx ecx [ edx + 0x24 ]
mov eax ecx
sub eax 0x16
je r-xdata
xor edi edi
lea esi [ ebx + 0x10 ]
push [ ebp - 0x10 ]
call ebx
mov eax [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
and [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0xc ]
inc edi
cmp di [ eax + 0x2c ]
jb r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
push 0x3
dec eax
je r-xdata
cmp [ esi ] 0x1b
jne r-xdata
mov eax [ ebx + edi ]
mov ecx 0x4000
or cx [ eax + 0x4 ]
mov [ esi ] cx
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x8 ]
mov edx [ eax ]
push ecx
movzx ecx di
push ecx
push eax
call [ edx + 0x14 ]
mov esi eax
mov eax [ ebp - 0x4 ]
test esi esi
js r-xdata
jmp r-xdata
push [ ebp - 0x10 ]
call ebx
push 0x13
jmp r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x1d
jne r-xdata
mov eax [ ebx + edi ]
mov ecx 0x2000
or cx [ eax + 0x4 ]
mov [ esi ] cx
mov ebx [ ebp + 0x10 ]
jmp r-xdata
pop ecx
xor ecx ecx
jmp r-xdata
dec eax
jne r-xdata
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ax [ eax + edi + 0xc ]
mov [ esi + 0x2 ] ax
movsx eax [ edx + 0x18 ]
inc ecx
add edi 0x10
add esi 0x4
mov [ ebp - 0x10 ] ecx
cmp ecx eax
jl r-xdata
mov edx [ ebx + edi ]
mov ecx [ ebp - 0x4 ]
call sub_43a78a
mov edx [ ebp - 0x8 ]
mov [ esi ] ax
mov eax [ edx + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax [ edx + 0x14 ]
mov [ ebx + 0x8 ] eax
mov ax [ edx + 0x18 ]
mov [ ebx + 0xe ] ax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] cx
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x50 ]
xor esi esi
push 0xa
jmp r-xdata
mov ebx [ edx + 0x8 ]
movzx eax [ ebx + edi + 0x4 ]
mov [ esi ] ax
cmp eax 0x1a
jne r-xdata
mov ebx [ ebp + 0x10 ]
sub_43abf3
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
xor esi esi
mov ebx ecx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
push edi
call sub_4218fb
pop ecx
test eax eax
je r-xdata
mov ecx edi
call sub_403bcf
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x4 ]
push 0x800
push 0x1
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
push r--data
push ebx
call [ eax + 0x14 ]
push [ ebp - 0x4 ]
mov esi eax
call j_sub_4228ca
pop ecx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
sub_43ac4b
push ebp
mov ebp esp
sub esp 0x54
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov esi r--data
lea edi [ ebp - 0x54 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
lea ecx [ ebp - 0x28 ]
mov eax [ ebx ]
push ecx
movsd [ edi ] [ esi ]
push r--data
push ebx
mov [ ebp - 0x34 ] edx
movsd [ edi ] [ esi ]
call [ eax ]
lea ecx [ ebp - 0x4 ]
push ecx
test eax eax
js r-xdata
mov eax [ ebx ]
push 0x800
push 0x0
push ebx
call [ eax + 0x10 ]
mov edi eax
mov esi [ ebp - 0x28 ]
push esi
mov eax [ esi ]
call [ eax + 0xc ]
mov ecx [ esi ]
push esi
mov edi eax
call [ ecx + 0x8 ]
jmp r-xdata
lea edx [ ebp - 0x54 ]
lea ecx [ ebp + 0x8 ]
call sub_43a6e8
neg eax
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
test edi edi
js r-xdata
and [ ebp - 0x8 ] 0x0
mov eax [ ecx ]
lea edx [ ebp - 0x1c ]
push edx
lea edx [ ebp - 0x8 ]
push edx
push ecx
call [ eax + 0x48 ]
test eax eax
js r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x10 ]
push edx
push [ ebp - 0x1c ]
push ecx
call [ eax + 0x14 ]
cmp [ ebp - 0x10 ] 0x5
je r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
mov eax [ ecx ]
push edx
push ecx
call [ eax + 0xc ]
mov esi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
push [ ebp - 0x24 ]
lea edi [ ebp - 0x54 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
xor edi edi
xor esi esi
mov [ ebp - 0x24 ] edi
test ebx ebx
je r-xdata
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call [ ProgIDFromCLSID@IAT ]
test eax eax
js r-xdata
cmp [ ebp - 0x10 ] 0x5
jne r-xdata
test edi edi
jne r-xdata
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x44 ]
call sub_40caee
push [ ebp - 0x14 ]
call [ CoTaskMemFree@IAT ]
push 0xffffffff
push ecx
lea ecx [ ebp - 0x44 ]
call sub_43b2d1
push eax
lea ecx [ ebp - 0x44 ]
call sub_40a2fb
lea eax [ ebp - 0x54 ]
push eax
push [ ebp - 0x44 ]
call [ CLSIDFromProgID@IAT ]
lea ecx [ ebp - 0x44 ]
call sub_405cd3
mov eax [ ebp - 0x8 ]
and [ ebp - 0x10 ] edi
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push esi
push eax
call [ ecx + 0x14 ]
cmp [ ebp - 0x10 ] 0x5
jne r-xdata
inc esi
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov ecx [ eax ]
push edx
push esi
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
mov edx [ ebp - 0x2c ]
push edx
movzx eax [ edx + 0x30 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4c ]
or [ ebp - 0x18 ] 0xffffffff
cmp [ ebp - 0x20 ] edi
jbe r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edi [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x30 ]
mov ecx [ eax ]
push edx
push edi
push eax
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
inc edi
cmp edi [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x14 ]
mov ecx [ eax ]
push edx
push [ ebp - 0x30 ]
push eax
call [ ecx + 0x38 ]
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x18 ]
mov ecx [ eax ]
push edx
push 0x0
push eax
call [ ecx + 0x48 ]
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x24 ] edi
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call [ ecx + 0x8 ]
sub_43ae84
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov esi ecx
lea ecx [ ebp - 0x4 ]
mov eax [ esi ]
push ecx
push r--data
push esi
mov edi 0x80004005
call [ eax ]
test eax eax
jne r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push esi
call [ eax ]
test eax eax
jne r-xdata
mov esi [ ebp - 0x4 ]
push esi
mov eax [ esi ]
call [ eax + 0x20 ]
mov ecx [ esi ]
push esi
mov edi eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax edi
pop edi
pop esi
leave
retn
mov esi [ ebp - 0x4 ]
push 0x0
mov eax [ esi ]
push esi
call [ eax + 0x14 ]
mov edi eax
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_43aee5
push ebp
mov ebp esp
sub esp 0x270
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
lea ecx [ ebp - 0x30 ]
mov edi edx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
call sub_40d3d2
lea ecx [ ebp - 0x20 ]
call sub_40d3d2
lea ecx [ ebp - 0x40 ]
call sub_40d3d2
push r--data
lea ecx [ ebp - 0x30 ]
call sub_407e53
push esi
lea ecx [ ebp - 0x30 ]
call sub_4039e8
push r--data
lea ecx [ ebp - 0x30 ]
call sub_4039e8
lea ecx [ ebp - 0x20 ]
call sub_40c4cd
test edi edi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0x5c
pop eax
cmp [ edi ] ax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x80000002
push [ ebp - 0x20 ]
call [ RegConnectRegistryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x20
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_421970
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x5c ] ebx
call sub_40c935
push r--data
lea ecx [ ebp - 0x40 ]
call sub_4039e8
mov eax [ ebp - 0x40 ]
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x60 ]
push eax
call [ WNetAddConnection2W@IAT ]
mov esi eax
test esi esi
js r-xdata
cmp [ edi + 0x2 ] ax
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_405cd3
lea ecx [ ebp - 0x20 ]
call sub_405cd3
lea ecx [ ebp - 0x30 ]
call sub_405cd3
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push 0x20019
push ebx
push [ ebp - 0x30 ]
push [ ebp - 0x10 ]
call [ RegOpenKeyExW@IAT ]
mov edi [ RegCloseKey@IAT ]
mov esi eax
test esi esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_407e53
push edi
lea ecx [ ebp - 0x20 ]
call sub_4039e8
push [ ebp - 0x10 ]
call edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push ebx
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] 0x1fe
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push [ ebp - 0x8 ]
call edi
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
shr eax 0x1
xor ecx ecx
mov [ ebp - 0xc ] eax
mov [ ebp + eax * 2 - 0x26c ] cx
lea eax [ ebp - 0x26c ]
push eax
call [ CLSIDFromString@IAT ]
mov esi eax
sub_43b064
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
push ebx
and [ eax ] 0x0
xor ebx ebx
push edi
mov edi edx
mov [ ebp - 0x1c ] ebx
test ecx ecx
jne r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0xc ]
push edx
push 0x800
push 0x0
push ecx
call [ eax + 0x10 ]
test eax eax
js r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
push esi
mov ecx [ eax ]
lea edx [ ebp - 0x34 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call [ ecx + 0x48 ]
mov esi eax
test esi esi
jns r-xdata
mov eax [ ebp - 0x4 ]
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
mov eax esi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
xor esi esi
xor edi edi
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] esi
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0x3c ]
push edx
lea edx [ ebp - 0x28 ]
push edx
xor ebx ebx
push 0x0
inc ebx
mov [ ebp - 0x10 ] ebx
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ecx ]
mov esi eax
call [ edx + 0x8 ]
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
test esi esi
js r-xdata
pop esi
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
test esi esi
jne r-xdata
mov eax 0x80028017
jmp r-xdata
cmp [ ebp - 0x10 ] bx
jb r-xdata
mov eax [ ebx ]
lea ecx [ ebp - 0x38 ]
push ecx
push ebx
call [ eax + 0xc ]
mov ecx [ ebp - 0x38 ]
mov esi ecx
mov ebx [ ecx + 0x28 ]
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x1c ]
push ecx
mov eax [ esi ]
push esi
call [ eax + 0x4c ]
cmp ebx 0x4
je r-xdata
mov [ ebp - 0x1c ] ebx
mov eax [ ebp - 0x4 ]
and [ ebp - 0x20 ] esi
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push edi
push eax
call [ ecx + 0x14 ]
cmp [ ebp - 0x20 ] 0x5
jne r-xdata
mov ebx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ eax ] esi
lea esi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
mov eax 0x80028ca0
jmp r-xdata
inc edi
cmp edi [ ebp - 0x28 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
mov ecx [ eax ]
push edx
push edi
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
movzx esi [ edx + 0x30 ]
mov ecx [ eax ]
push edx
push eax
mov [ ebp - 0x1c ] esi
call [ ecx + 0x4c ]
cmp esi 0x1
jbe r-xdata
test ebx ebx
jne r-xdata
mov esi [ ebp - 0x10 ]
or [ ebp - 0x14 ] 0xffffffff
xor esi esi
cmp [ ebp - 0x1c ] esi
jbe r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x30 ]
mov ecx [ eax ]
push edx
push esi
push eax
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
inc esi
cmp esi [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x18 ]
mov ecx [ eax ]
push edx
push [ ebp - 0x30 ]
push eax
call [ ecx + 0x38 ]
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x24 ]
mov ecx [ eax ]
push edx
push esi
push eax
call [ ecx + 0x24 ]
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x34 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
mov ecx [ eax ]
push edx
push 0x0
push eax
call [ ecx + 0x48 ]
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
test [ ebp - 0x24 ] 0x1
je r-xdata
test [ ebp - 0x24 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x18 ]
xor esi esi
inc esi
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43b289
push esi
mov esi ecx
push edi
mov edi edx
test esi esi
jne r-xdata
push esi
call sub_4218fb
inc eax
pop ecx
add eax eax
push eax
call [ CoTaskMemAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
and [ edi ] ecx
jmp r-xdata
push esi
push eax
call sub_421943
pop ecx
pop ecx
mov eax 0x8007000e
jmp r-xdata
xor eax eax
pop edi
pop esi
retn
sub_43b2d1
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ecx + 0x4 ]
push esi
xor esi esi
push edi
lea edx [ ebx - 0x1 ]
test ebx ebx
je r-xdata
or eax 0xffffffff
mov eax [ ecx ]
lea eax [ eax + edx * 2 ]
mov eax edx
jmp r-xdata
movzx ecx [ edi * 2 + r--data ]
inc edi
test cx cx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ ebp - 0x4 ] cx
je r-xdata
dec edx
sub eax 0x2
inc esi
cmp esi ebx
jb r-xdata
movzx ecx [ eax ]
push 0x2e
mov [ ebp - 0x4 ] ecx
xor edi edi
pop ecx
sub_43b31f
push ebp
mov ebp esp
push 0x8
call sub_42010a
and [ eax + 0x4 ] 0x0
pop ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov [ rw-data ] eax
inc [ rw-data ]
pop ebp
retn 0x4
sub_43b379
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_407da8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_43b398
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x18 ]
push eax
xor ebx ebx
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
mov esi ebx
push eax
lea edx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
mov edi ebx
mov [ ebp - 0x14 ] 0x4
call sub_43b8e7
add esp 0xc
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_43b850
mov ecx [ ebp - 0x8 ]
call sub_43b850
mov ecx esi
call sub_43b850
mov ecx edi
call sub_43b850
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x10
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x8 ]
call sub_43b982
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ebx
call [ GetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
push 0xc
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_421970
add esp 0xc
mov [ ebp - 0x2c ] 0x8
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
lea edx [ ecx + 0x10 ]
lea ecx [ ebp - 0xc ]
lea edx [ edx + eax * 2 ]
call sub_43b94e
mov esi [ ebp - 0xc ]
pop ecx
test al al
je r-xdata
push 0x2
push 0xc
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x4 ]
call [ GetAclInformation@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
add eax 0x8
push eax
push 0x8
mov [ ebp - 0x20 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ edi + 0x2 ] ax
lea eax [ edi + 0x8 ]
push eax
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
mov eax ebx
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x4
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp - 0x20 ]
movzx eax [ ecx + 0x2 ]
push eax
push ecx
push 0xffffffff
push 0x2
push esi
call [ AddAce@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc eax
add ecx 0xc
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
cmp eax 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x30 ]
jb r-xdata
mov al [ ecx - 0x4 ]
mov [ edi ] al
mov al [ ecx - 0x3 ]
mov [ edi + 0x1 ] al
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
movzx eax [ edi + 0x2 ]
push eax
push edi
push 0xffffffff
push 0x2
push esi
call [ AddAce@IAT ]
test eax eax
je r-xdata
push ebx
push esi
push 0x1
push [ ebp - 0x8 ]
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ ebp - 0x4 ]
call [ GetAce@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call [ SetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
mov bl 0x1
sub_43b593
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x18 ]
push eax
xor ebx ebx
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
mov esi ebx
push eax
lea edx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
mov edi ebx
mov [ ebp - 0x14 ] 0x4
call sub_43b8e7
add esp 0xc
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_43b850
mov ecx [ ebp - 0x8 ]
call sub_43b850
mov ecx esi
call sub_43b850
mov ecx edi
call sub_43b850
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x10
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x8 ]
call sub_43b982
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ebx
call [ GetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
push 0xc
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_421970
add esp 0xc
mov [ ebp - 0x2c ] 0x8
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
lea edx [ ecx + 0x10 ]
lea ecx [ ebp - 0xc ]
lea edx [ edx + eax * 2 ]
call sub_43b94e
mov esi [ ebp - 0xc ]
pop ecx
test al al
je r-xdata
push 0x2
push 0xc
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x4 ]
call [ GetAclInformation@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
add eax 0x8
push eax
push 0x8
mov [ ebp - 0x20 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ edi + 0x2 ] ax
lea eax [ edi + 0x8 ]
push eax
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
mov eax ebx
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x4
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp - 0x20 ]
movzx eax [ ecx + 0x2 ]
push eax
push ecx
push 0xffffffff
push 0x2
push esi
call [ AddAce@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc eax
add ecx 0xc
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
cmp eax 0x2
jb r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x30 ]
jb r-xdata
mov al [ ecx - 0x4 ]
mov [ edi ] al
mov al [ ecx - 0x3 ]
mov [ edi + 0x1 ] al
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
movzx eax [ edi + 0x2 ]
push eax
push edi
push 0xffffffff
push 0x2
push esi
call [ AddAce@IAT ]
test eax eax
je r-xdata
push ebx
push esi
push 0x1
push [ ebp - 0x8 ]
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ ebp - 0x4 ]
call [ GetAce@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call [ SetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
mov bl 0x1
sub_43b78e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push esi
xor ebx ebx
push ebx
push [ eax ]
mov edi ecx
push 0x2
push edi
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push esi
push [ esi ]
push eax
push 0x2
push edi
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
sub_43b7ef
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push esi
xor ebx ebx
push ebx
push [ eax ]
mov edi ecx
push 0x3
push edi
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push esi
push [ esi ]
push eax
push 0x3
push edi
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
sub_43b865
push ebx
push esi
push edi
mov edi ecx
push 0x4
pop ebx
xor esi esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] esi
call sub_43bdf8
mov eax [ edi + 0x4 ]
xor ecx ecx
mul ebx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov [ edi ] eax
cmp [ edi + 0x4 ] esi
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ edi ]
mov eax [ esi * 4 + rw-data ]
mov [ ecx + esi * 4 ] eax
inc esi
cmp esi [ edi + 0x4 ]
jb r-xdata
sub_43b8b0
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
push [ esi + 0xc ]
call [ CloseHandle@IAT ]
push [ esi ]
call j_sub_4228ca#2
pop ecx
pop esi
retn
xor eax eax
push eax
push eax
push eax
push [ esi + 0x8 ]
push eax
push [ esi + 0xc ]
call [ AdjustTokenPrivileges@IAT ]
push [ esi + 0x8 ]
call j_sub_4228ca#2
pop ecx
sub_43b8e7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push esi
mov eax ecx
mov ecx [ ebp + 0x8 ]
xor ebx ebx
push ebx
push [ ecx ]
mov edi edx
push edi
push eax
mov [ ebp - 0x4 ] eax
call [ GetUserObjectSecurity@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push esi
push [ esi ]
push eax
push edi
push [ ebp - 0x4 ]
call [ GetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
sub_43b94e
push esi
push edi
mov edi edx
push edi
push 0x8
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
xor eax eax
push 0x2
push edi
push eax
call [ InitializeAcl@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_43b982
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
mov esi ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
xor ebx ebx
xor ebx ebx
inc ebx
push ebx
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
jne r-xdata
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_43b9b8
push ebp
mov ebp esp
sub esp 0x14
push ebx
push ecx
push ecx
lea ecx [ ebp - 0x10 ]
call sub_43b865
lea ecx [ ebp - 0x10 ]
call sub_43bd4b
test al al
je r-xdata
xor bl bl
call sub_43be31
test al al
je r-xdata
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_43b8b0
mov al bl
pop ebx
leave
retn
sub_43b9f1
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
push ecx
push ecx
lea ecx [ ebp - 0x3c ]
call sub_43b865
push ecx
lea ecx [ ebp - 0x3c ]
call sub_43bec3
test al al
jne r-xdata
xor ebx ebx
push 0x20
lea eax [ ebp - 0x5c ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
mov esi ebx
mov edi ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_421970
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ ebp + 0x14 ] 0x1
mov [ ebp - 0x5c ] 0x20
mov [ ebp - 0x54 ] eax
mov [ ebp + 0xb ] bl
je r-xdata
xor bl bl
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43be95
test al al
je r-xdata
mov [ ebp + 0xb ] 0x1
lea ecx [ ebp - 0x3c ]
call sub_43b8b0
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x28
cmp [ ebp - 0x40 ] ebx
je r-xdata
push 0x2
pop ecx
test [ ebp + 0x14 ] cl
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_43b850
test esi esi
je r-xdata
push [ ebp - 0x40 ]
push [ ebp - 0x4 ]
call [ UnloadUserProfile@IAT ]
push 0x60000
push ebx
push r--data
call [ OpenWindowStationW@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
push 0x1
push ecx
push ebx
push ebx
push [ ebp - 0x4 ]
call [ DuplicateTokenEx@IAT ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
call [ CloseWindowStation@IAT ]
cmp esi 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push edi
call [ CloseDesktop@IAT ]
call [ GetProcessWindowStation@IAT ]
push esi
mov [ ebp - 0x14 ] eax
call [ SetProcessWindowStation@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
call j_sub_4228ca#2
cmp [ ebp - 0xc ] 0x0
pop ecx
je r-xdata
push eax
call [ SetProcessWindowStation@IAT ]
push 0x60081
push ebx
push ebx
push r--data
call [ OpenDesktopW@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ ebp - 0xc ]
call [ DestroyEnvironmentBlock@IAT ]
cmp edi 0xffffffff
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
call sub_43bf5b
test al al
je r-xdata
push ecx
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x2c ] 0xb00
push esi
mov [ ebp - 0x28 ] 0xf0000000
mov [ ebp - 0x20 ] 0x400
mov [ ebp - 0x1c ] 0xf037f
call sub_43b593
test al al
je r-xdata
push ecx
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x20 ] bx
push edi
mov [ ebp - 0x1c ] 0xf01ff
call sub_43b398
test al al
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax + 0x8 ] r--data
mov eax [ eax + 0x2c ]
and eax 0x100
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp + 0xb ] bl
je r-xdata
push [ ebp + 0x1c ]
call sub_4218fb
xor ecx ecx
push 0x2
inc eax
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
push [ ebp + 0x1c ]
mov [ ebp - 0x10 ] eax
push eax
call sub_421943
add esp 0x10
test [ ebp + 0x14 ] 0x4
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x4 ]
call [ LoadUserProfileW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x2c ]
mov eax [ ebp + 0x20 ]
push [ ebp + 0x28 ]
or eax 0x400
push [ ebp + 0x24 ]
push [ ebp - 0xc ]
push eax
push [ ebp + 0x10 ]
push ebx
push ebx
push [ ebp - 0x10 ]
push ebx
push [ ebp - 0x4 ]
call [ CreateProcessAsUserW@IAT ]
test eax eax
je r-xdata
push ebx
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push eax
call [ CreateEnvironmentBlock@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0xb ] bl
je r-xdata
mov bl 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x2c ]
call sub_43bff5
sub_43bca8
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x1
mov eax ebx
push edi
mov [ ebp - 0x4 ] eax
mov edi ebx
je r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
inc edi
jmp r-xdata
test [ ebp + 0x14 ] 0x4
je r-xdata
push 0x2
pop edi
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x20 ]
or eax 0x400
push eax
push [ ebp + 0x1c ]
push ebx
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateProcessWithLogonW@IAT ]
test eax eax
setne bl
push esi
lea eax [ ebp + 0x14 ]
push eax
push 0xa
mov [ ebp + 0x14 ] ebx
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
push 0x1
push [ ebp + 0x14 ]
lea eax [ ebp - 0x4 ]
push eax
call [ CreateEnvironmentBlock@IAT ]
push [ ebp + 0x14 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
pop esi
je r-xdata
pop edi
mov al bl
pop ebx
leave
retn 0x28
push [ ebp - 0x4 ]
call [ DestroyEnvironmentBlock@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
sub_43bd4b
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov eax ecx
push edi
lea ecx [ ebp - 0x10 ]
push ecx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ eax + 0xc ]
mov [ ebp - 0xc ] eax
xor bl bl
call sub_43b7ef
mov edi [ ebp - 0x4 ]
add esp 0xc
test al al
je r-xdata
mov ecx edi
call sub_43b850
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
xor esi esi
mov [ ebp - 0x8 ] esi
cmp [ eax + 0x4 ] esi
jbe r-xdata
mov eax [ eax ]
lea ecx [ ebp - 0x1c ]
push ecx
push [ eax + esi * 4 ]
xor bl bl
push 0x0
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x14 ] 0x0
cmp [ edi ] 0x0
jbe r-xdata
mov esi [ ebp - 0x14 ]
lea eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc esi
add eax 0xc
mov [ ebp - 0x4 ] eax
cmp esi [ edi ]
jb r-xdata
mov bl 0x1
push 0x8
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x8 ]
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
inc esi
mov [ ebp - 0x8 ] esi
cmp esi [ eax + 0x4 ]
jb r-xdata
sub_43bdf8
push esi
lea esi [ ecx + 0xc ]
push esi
push 0x0
push 0x28
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
test eax eax
jne r-xdata
xor eax eax
cmp [ esi ] eax
pop esi
setne al
retn
push esi
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
and [ esi ] eax
sub_43be31
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x500
call [ AllocateAndInitializeSid@IAT ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
xor eax eax
cmp ecx 0x1
sete al
pop ebx
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x8 ]
push ebx
call [ CheckTokenMembership@IAT ]
push [ ebp - 0x8 ]
neg eax
sbb eax eax
and [ ebp - 0x4 ] eax
call [ FreeSid@IAT ]
mov ecx [ ebp - 0x4 ]
sub_43be95
push ebp
mov ebp esp
movsx eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
and eax 0x2
push 0x0
or eax 0x4
shr eax 0x1
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LogonUserW@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x18
sub_43bec3
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov ebx [ esi + 0x4 ]
imul ebx ebx 0xc
add ebx 0x4
push ebx
mov [ ebp - 0xc ] ebx
call sub_42010a
mov edi eax
push ebx
mov [ ebp - 0x8 ] edi
call sub_42010a
pop ecx
pop ecx
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
mov [ edi ] ecx
xor ecx ecx
cmp [ esi + 0x4 ] ecx
jbe r-xdata
cmp [ esi + 0x8 ] ecx
je r-xdata
lea ebx [ edi + 0x4 ]
mov edi ecx
lea eax [ ebp - 0xc ]
push eax
push ecx
push ebx
push ecx
push ecx
push ecx
jmp r-xdata
mov [ ebx + 0x8 ] 0x2
mov eax [ esi ]
push ebx
push [ eax + edi * 4 ]
push ecx
call [ LookupPrivilegeValueW@IAT ]
inc edi
add ebx 0xc
push 0x0
pop ecx
cmp edi [ esi + 0x4 ]
jb r-xdata
mov edi [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
push edi
push ecx
push [ esi + 0xc ]
call [ AdjustTokenPrivileges@IAT ]
push edi
call j_sub_4228ca#2
pop ecx
call [ GetLastError@IAT ]
neg eax
pop edi
sbb eax eax
pop esi
inc eax
pop ebx
leave
retn 0x4
sub_43bf5b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
xor ebx ebx
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_43b78e
mov esi [ ebp - 0x8 ]
add esp 0xc
test al al
je r-xdata
mov ecx esi
call sub_43b850
pop esi
mov al bl
pop ebx
leave
retn 0x8
push edi
mov edi ebx
cmp [ esi ] ebx
jbe r-xdata
pop edi
lea ecx [ esi + 0x8 ]
mov edx 0xc0000000
push [ esi + edi * 8 + 0x4 ]
call [ GetLengthSid@IAT ]
push eax
push 0x8
mov [ ebp - 0x4 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx eax
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
inc edi
add ecx 0x8
cmp edi [ esi ]
jb r-xdata
push [ esi + edi * 8 + 0x4 ]
push ecx
push [ ebp - 0x4 ]
call [ CopySid@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
and eax edx
cmp eax edx
je r-xdata
jmp r-xdata
mov bl 0x1
sub_43bff5
push ebp
mov ebp esp
push ebx
push edi
push 0xc
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
mov ebx eax
push 0x0
push ebx
call edi
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call edi
push eax
call [ DuplicateHandle@IAT ]
push 0x2
push 0x0
push 0x0
lea eax [ ebx + 0x8 ]
push eax
call edi
push eax
mov eax [ ebp + 0x10 ]
push [ eax ]
call edi
push eax
call [ DuplicateHandle@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
xor eax eax
push eax
push eax
push ebx
push sub_43c066
push eax
push eax
call [ CreateThread@IAT ]
pop edi
pop ebx
pop ebp
retn 0xc
sub_43c066
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
push 0xffffffff
push [ edi ]
call [ WaitForSingleObject@IAT ]
push [ edi + 0x4 ]
push [ edi + 0x8 ]
call [ UnloadUserProfile@IAT ]
push [ edi + 0x8 ]
call [ CloseHandle@IAT ]
push [ edi ]
call [ CloseHandle@IAT ]
mov ecx edi
call sub_43b850
xor eax eax
pop edi
pop ebp
retn 0x4
sub_43c0a2
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov edi [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
add eax [ edi + 0x4 ]
mov ecx esi
push eax
call sub_407b6e
mov eax [ ebx + 0x4 ]
add eax eax
push eax
push [ ebx ]
push [ esi ]
call sub_41faa0
mov eax [ edi + 0x4 ]
mov edx [ ebx + 0x4 ]
mov ecx [ esi ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ edi ]
lea ecx [ ecx + edx * 2 ]
push ecx
call sub_41faa0
mov ecx [ ebx + 0x4 ]
add esp 0x18
add ecx [ edi + 0x4 ]
pop edi
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43c0fd
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43c12c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp al 0x1
test al al
jmp r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x4
push 0xffffffff
push 0xffffffff
push 0x1
push 0x0
mov ecx esi
call sub_43c145
jne r-xdata
sub_43c145
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push ebx
push esi
push edi
mov ebx ecx
push eax
push [ ebx ]
call [ GetWindowRect@IAT ]
mov esi [ ebp + 0x10 ]
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
movzx edi ax
movzx eax si
shl edi 0x10
xor esi esi
or edi eax
inc esi
cmp [ ebp + 0x8 ] 0x2
mov [ ebp + 0x14 ] 0x201
mov [ ebp + 0x10 ] 0x203
mov [ ebp - 0x4 ] 0x202
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
cdq
sub eax edx
sar eax 0x1
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov [ ebp + 0x14 ] 0x204
mov [ ebp - 0x4 ] 0x205
push 0x2
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp + 0x8 ] ecx
cmp [ ebp + 0xc ] ecx
jl r-xdata
mov [ ebp + 0x14 ] 0x207
mov [ ebp - 0x4 ] 0x208
push 0x10
pop esi
mov [ ebp + 0x10 ] 0x206
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0x10
mov eax ecx
cdq
sub eax edx
and eax 0xfffffffe
push edi
push esi
cmp eax ecx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
jmp r-xdata
push [ ebx ]
call [ PostMessageW@IAT ]
push 0x0
call [ Sleep@IAT ]
push edi
push 0x0
push [ ebp - 0x4 ]
push [ ebx ]
call [ PostMessageW@IAT ]
push 0x0
call [ Sleep@IAT ]
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ ebp + 0x8 ] ecx
cmp ecx [ ebp + 0xc ]
jle r-xdata
sub_43c239
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push 0x0
je r-xdata
push 0x0
jmp r-xdata
push 0x1
push 0x14f
push [ ecx ]
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
mov al 0x1
xor al al
jmp r-xdata
pop ebp
retn 0x4
sub_43c265
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ SendMessageW@IAT ]
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov edi ecx
push 0xb0
push [ edi ]
call ebx
mov esi [ ebp - 0x4 ]
push 0x0
push esi
push 0xc9
push [ edi ]
mov [ ebp - 0xc ] esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax 0x1
jl r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
inc edx
mov [ ecx ] edx
push 0x0
push [ ebp - 0x4 ]
push 0xc9
push [ edi ]
call ebx
cmp [ ebp - 0x8 ] eax
jne r-xdata
sub esi [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
jmp r-xdata
mov esi [ ebp - 0x8 ]
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x4 ]
push 0x0
dec eax
push eax
push 0xc9
push [ edi ]
mov [ ebp - 0x4 ] eax
call ebx
cmp esi eax
je r-xdata
mov esi [ ebp - 0xc ]
sub_43c2ed
push ebp
mov ebp esp
push 0x0
push 0xffffffff
push 0xc9
push [ ecx ]
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
inc eax
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_43c30d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x10000
mov esi ecx
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_404bce
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edi
dec eax
push eax
push 0xc4
mov [ edi ] 0x7fff
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_407e53
xor bl bl
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov ecx [ ebp + 0xc ]
push edi
call sub_407e53
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_404fd2
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x8
sub_43c39d
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ SendMessageW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
push 0xb0
push [ esi ]
mov [ ebp - 0x10 ] esi
call edi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
push ebx
xor ebx ebx
push ebx
push ebx
push 0xe
push [ esi ]
call edi
mov edi eax
test edi edi
je r-xdata
xor al al
jmp r-xdata
xor al al
cmp edi [ ebp - 0x8 ]
jb r-xdata
pop edi
pop esi
leave
retn 0x4
cmp edi [ ebp - 0x4 ]
jb r-xdata
xor ecx ecx
push 0x2
lea esi [ edi + 0x1 ]
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push eax
push esi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
push 0xd
push [ eax ]
call [ SendMessageW@IAT ]
mov esi [ ebp - 0xc ]
test eax eax
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
mov al bl
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
pop ebx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
lea eax [ esi + eax * 2 ]
push eax
call sub_407e53
mov bl 0x1
xor ecx ecx
mov [ esi + eax * 2 ] cx
sub_43c473
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
push r--data
lea ecx [ ebp - 0x14 ]
call sub_40caee
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_43e3b2
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_40caee
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_43e3b2
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
mov ecx 0x143
jmp r-xdata
xor al al
mov ecx 0x180
mov eax [ ebp + 0x8 ]
push [ eax ]
push 0x0
push ecx
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
setne al
jmp r-xdata
pop esi
pop ebx
leave
retn 0x4
sub_43c4f6
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
push r--data
lea ecx [ ebp - 0x14 ]
call sub_40caee
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_43e3b2
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_40caee
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_43e3b2
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
mov eax 0x144
jmp r-xdata
xor al al
mov eax 0x182
push 0x0
push [ ebp + 0x8 ]
push eax
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
setne al
jmp r-xdata
pop esi
pop ebx
leave
retn 0x4
sub_43c577
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40caee
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_43e3b2
lea ecx [ ebp - 0x10 ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40caee
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_43e3b2
lea ecx [ ebp - 0x10 ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
mov ecx 0x158
jmp r-xdata
xor al al
mov ecx 0x1a2
mov eax [ ebp + 0x8 ]
push [ eax ]
push 0xffffffff
push ecx
push [ esi ]
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0xc ]
cmp eax 0xffffffff
mov [ ecx ] eax
setne al
jmp r-xdata
pop esi
pop ebx
leave
retn 0x8
sub_43c600
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov esi ecx
push r--data
lea ecx [ ebp - 0x1c ]
call sub_40caee
push ecx
lea eax [ ebp - 0x1c ]
push eax
mov ecx esi
call sub_43e3b2
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_40caee
push ecx
lea eax [ ebp - 0x1c ]
push eax
mov ecx esi
call sub_43e3b2
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
mov eax 0x147
mov [ ebp - 0x8 ] 0x148
lea edi [ eax + 0x2 ]
jmp r-xdata
xor al al
mov eax 0x188
mov [ ebp - 0x8 ] 0x189
lea edi [ eax + 0x2 ]
xor ebx ebx
push ebx
push ebx
push eax
push [ esi ]
call [ SendMessageW@IAT ]
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
je r-xdata
push ebx
push eax
push edi
push [ esi ]
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
push 0x2
add eax 0x101
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov edi eax
push edi
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ esi ]
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
push edi
call sub_407e53
mov bl 0x1
push r--data
call sub_407e53
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push edi
call j_sub_4228ca#2
pop ecx
mov al bl
jmp r-xdata
sub_43c6fd
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push edi
mov edi ecx
push r--data
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edi
call sub_40caee
push ecx
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_43e3b2
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_40caee
push ecx
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_43e3b2
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
mov ecx 0x14d
mov [ ebp - 0x8 ] 0x9
jmp r-xdata
xor al al
mov ecx 0x18c
mov [ ebp - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
mov ebx [ SendMessageW@IAT ]
push [ eax ]
push 0xffffffff
push ecx
push [ edi ]
call ebx
cmp eax 0xffffffff
je r-xdata
push [ edi ]
push [ edi ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
or eax 0x10000
push eax
push 0x111
push [ edi ]
mov edi [ GetParent@IAT ]
call edi
push eax
call ebx
mov ebx [ ebp - 0xc ]
push [ ebx ]
push [ ebx ]
call [ GetDlgCtrlID@IAT ]
movzx ecx ax
mov eax [ ebp - 0x8 ]
movzx eax ax
shl eax 0x10
or ecx eax
push ecx
push 0x111
push [ ebx ]
call edi
push eax
call [ SendMessageW@IAT ]
mov al 0x1
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_43c7e6
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push edi
mov edi ecx
push r--data
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edi
call sub_40caee
push ecx
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_43e3b2
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_40caee
push ecx
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_43e3b2
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
mov eax 0x14e
mov [ ebp - 0x8 ] 0x9
jmp r-xdata
xor al al
mov eax 0x186
mov [ ebp - 0x8 ] 0x2
mov ebx [ SendMessageW@IAT ]
push 0x0
push [ ebp + 0x8 ]
push eax
push [ edi ]
call ebx
cmp eax 0xffffffff
je r-xdata
push [ edi ]
push [ edi ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
or eax 0x10000
push eax
push 0x111
push [ edi ]
mov edi [ GetParent@IAT ]
call edi
push eax
call ebx
mov ebx [ ebp - 0xc ]
push [ ebx ]
push [ ebx ]
call [ GetDlgCtrlID@IAT ]
movzx ecx ax
mov eax [ ebp - 0x8 ]
movzx eax ax
shl eax 0x10
or ecx eax
push ecx
push 0x111
push [ ebx ]
call edi
push eax
call [ SendMessageW@IAT ]
mov al 0x1
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_43c8cd
push ebp
mov ebp esp
sub esp 0x204
push esi
push [ ecx ]
call [ GetParent@IAT ]
mov esi eax
push 0x100
lea eax [ ebp - 0x204 ]
push eax
push esi
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x204 ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
push edi
mov edi [ ebp + 0x8 ]
push r--data
push [ edi ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push [ edi ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push 0x7029
jmp r-xdata
push r--data
push [ edi ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push 0x702c
jmp r-xdata
push 0x111
push esi
call [ SendMessageW@IAT ]
push r--data
push [ edi ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push 0x702a
jmp r-xdata
pop esi
leave
retn 0x4
mov al 0x1
pop edi
jmp r-xdata
push eax
push 0x702b
sub_43c98d
push ebp
mov ebp esp
sub esp 0x8cc
push ebx
push esi
push edi
xor esi esi
push esi
push esi
mov ebx ecx
push 0x1004
push [ ebx ]
call [ SendMessageW@IAT ]
lea ecx [ ebp - 0xc0 ]
mov edi eax
call sub_40181b
push [ ebx ]
push 0x34
call sub_444c65
push [ ebx ]
lea ecx [ ebp - 0xc0 ]
push 0x800
mov [ ebp - 0x4 ] eax
call sub_444c65
mov ecx [ ebp + 0xc ]
push 0x34
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x24 ] 0x400
call sub_444d41
test edi edi
jle r-xdata
cmp esi edi
jne r-xdata
push [ ebp - 0x4 ]
push esi
push 0x1073
push [ ebx ]
call [ SendMessageW@IAT ]
push 0x800
lea eax [ ebp - 0x8c8 ]
push eax
push [ ebp - 0x8 ]
lea ecx [ ebp - 0xc0 ]
call sub_444d0c
xor eax eax
mov [ ebp - 0xc8 ] ax
mov eax [ ebp + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x8c8 ]
push eax
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0xc0 ]
call sub_402e39
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
or esi 0xffffffff
inc esi
cmp esi edi
jl r-xdata
sub_43ca6d
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
xor esi esi
push esi
push esi
mov eax ecx
push 0x1004
push [ eax ]
mov [ ebp - 0x4 ] eax
call [ SendMessageW@IAT ]
mov ebx [ ebp + 0xc ]
push r--data
mov ecx ebx
mov edi eax
call sub_407e53
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x4 ]
push 0x2
push esi
push 0x102c
push [ eax ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x2
push esi
push 0x102c
push [ eax ]
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
inc esi
cmp esi edi
jl r-xdata
push 0xa
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_422177
add esp 0xc
mov ecx ebx
call sub_43c46a
test al al
jne r-xdata
push 0xa
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_422177
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
mov ecx ebx
call sub_407e53
jmp r-xdata
inc esi
cmp esi edi
jl r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov ecx ebx
call sub_4039e8
push r--data
mov ecx ebx
call sub_4039e8
jmp r-xdata
sub_43cb3f
push edi
xor edi edi
push edi
push edi
push 0x101f
push [ ecx ]
call [ SendMessageW@IAT ]
push edi
push edi
push 0x1200
push eax
call [ SendMessageW@IAT ]
pop edi
retn
sub_43cb61
push ebp
mov ebp esp
sub esp 0x8c0
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ ebp - 0xbc ]
call sub_40181b
push [ ebx ]
push 0x34
call sub_444c65
push [ ebx ]
lea ecx [ ebp - 0xbc ]
push 0x800
mov esi eax
call sub_444c65
mov ecx [ ebp + 0xc ]
push 0x34
mov edi eax
push esi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
push eax
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x20 ] 0x400
mov [ ebp - 0x24 ] edi
call sub_444d41
push esi
push [ ebp + 0x8 ]
push 0x1073
push [ ebx ]
call [ SendMessageW@IAT ]
push 0x800
lea eax [ ebp - 0x8bc ]
push eax
push edi
lea ecx [ ebp - 0xbc ]
call sub_444d0c
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x8bc ]
push eax
call sub_407e53
lea ecx [ ebp - 0xbc ]
call sub_402e39
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0xc
sub_43cc25
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0xbc ]
call sub_40181b
movzx eax [ ebp + 0x8 ]
push 0x2
pop ecx
push [ edi ]
neg eax
sbb eax eax
and eax ecx
mov [ ebp - 0x28 ] ecx
push 0x34
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x2c ] eax
call sub_444c65
mov ebx eax
push 0x34
push ebx
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0xbc ]
call sub_444d41
mov esi [ ebp + 0xc ]
cmp esi 0xffffffff
jne r-xdata
cmp esi [ ebp + 0x10 ]
jle r-xdata
push ebx
push esi
push 0x102b
push [ edi ]
call [ SendMessageW@IAT ]
push ebx
push esi
push 0x102b
push [ edi ]
call [ SendMessageW@IAT ]
inc esi
jmp r-xdata
lea ecx [ ebp - 0xbc ]
call sub_402e39
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0xc
sub_43ccb6
push ebx
push esi
push edi
push 0x0
push 0x0
mov edi ecx
push 0x1004
push [ edi ]
call [ SendMessageW@IAT ]
mov ebx eax
xor esi esi
test ebx ebx
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn
push 0x2
push esi
push 0x102c
push [ edi ]
call [ SendMessageW@IAT ]
push esi
mov ecx edi
push esi
test eax eax
je r-xdata
push 0x1
push 0x0
jmp r-xdata
call sub_43cc25
inc esi
cmp esi ebx
jl r-xdata
sub_43cd02
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_43e259
push [ esi ]
push [ ebp + 0x8 ]
push 0x111
push eax
call [ SendMessageW@IAT ]
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_43cd27
push esi
push edi
mov edi ecx
push 0x1
push [ edi ]
call sub_43e138
push [ edi ]
call [ SetFocus@IAT ]
push 0x0
push [ edi ]
mov esi eax
call sub_43e138
test esi esi
pop edi
setne al
pop esi
retn
sub_43cd4f
push ebp
mov ebp esp
sub esp 0x888
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] esi
call sub_40181b
xor ebx ebx
push ebx
push ebx
push 0x406
push [ esi ]
call [ SendMessageW@IAT ]
cmp [ ebp + 0x8 ] ebx
jl r-xdata
lea ecx [ ebp - 0x88 ]
call sub_402e39
pop esi
mov al bl
pop ebx
leave
retn 0x8
cmp [ ebp + 0x8 ] eax
jge r-xdata
push [ esi ]
mov ebx 0x800
push ebx
lea ecx [ ebp - 0x88 ]
call sub_444c65
mov esi eax
mov eax [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
push 0x40d
push [ eax ]
call [ SendMessageW@IAT ]
push ebx
lea eax [ ebp - 0x888 ]
push eax
push esi
lea ecx [ ebp - 0x88 ]
call sub_444d0c
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x888 ]
push eax
call sub_407e53
mov bl 0x1
sub_43cde6
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x1
push [ esi ]
mov [ ebp - 0x4 ] esi
call sub_43e138
mov edi [ MapVirtualKeyW@IAT ]
xor ebx ebx
push ebx
push 0x25
call edi
shl eax 0x10
or eax 0x1
push eax
cmp [ ebp + 0x8 ] ebx
jge r-xdata
push 0x27
push 0x100
push [ esi ]
mov esi [ PostMessageW@IAT ]
call esi
push ebx
call [ Sleep@IAT ]
push ebx
push 0x25
call edi
shl eax 0x10
or eax 0xc0000001
push eax
push 0x27
push 0x25
push 0x100
push [ esi ]
mov esi [ PostMessageW@IAT ]
call esi
push ebx
call [ Sleep@IAT ]
push ebx
push 0x25
call edi
shl eax 0x10
or eax 0xc0000001
push eax
push 0x25
jmp r-xdata
mov edi [ ebp - 0x4 ]
push 0x101
push [ edi ]
call esi
push ebx
call [ Sleep@IAT ]
push ebx
push [ edi ]
call sub_43e138
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0x4
sub_43ce8a
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x130b
push [ ecx ]
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax 0xffffffff
jne r-xdata
inc eax
mov [ ecx ] eax
mov al 0x1
xor al al
jmp r-xdata
pop ebp
retn 0x4
sub_43ceb5
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43d0d4
mov edi eax
test edi edi
je r-xdata
xor al al
push 0xf000
push edi
push 0x1127
push [ esi ]
call [ SendMessageW@IAT ]
shr eax 0xc
dec eax
cmp eax 0xffffffff
je r-xdata
mov cl [ ebp + 0xc ]
test cl cl
jne r-xdata
cmp cl 0x1
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push edi
mov ecx esi
call sub_43cf7f
test al al
je r-xdata
cmp eax 0x1
je r-xdata
push [ ebp - 0x4 ]
mov ecx esi
push [ ebp - 0x8 ]
push 0x1
push 0x0
call sub_43c145
mov al 0x1
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_43cf40
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43d0d4
mov ecx eax
test ecx ecx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
push 0x2
pop eax
jne r-xdata
xor al al
jmp r-xdata
push ecx
push eax
push 0x1102
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
setne al
xor eax eax
inc eax
pop esi
pop ecx
pop ebp
retn 0x8
sub_43cf7f
push ebp
mov ebp esp
sub esp 0xac
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] edi
call sub_40181b
push [ edi ]
mov eax [ ebp + 0x8 ]
push 0x10
mov [ ebp - 0x14 ] eax
call sub_444c65
mov esi eax
push 0x10
push esi
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_444d41
push esi
xor ebx ebx
push ebx
push 0x1104
push [ edi ]
call [ SendMessageW@IAT ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push esi
lea ecx [ ebp - 0xa8 ]
call sub_444d0c
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
push [ edi ]
mov esi [ ebp - 0x14 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x10 ]
push 0x10
mov [ ecx + 0x4 ] eax
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x20 ] eax
call sub_444c65
mov edi eax
cmp esi [ ebp - 0xc ]
jg r-xdata
lea ecx [ ebp - 0xa8 ]
call sub_402e39
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x8
push 0x10
push edi
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x24 ] esi
call sub_444d41
mov eax [ ebp - 0x4 ]
push edi
push ebx
push 0x1111
push [ eax ]
call [ SendMessageW@IAT ]
push 0x10
lea eax [ ebp - 0x24 ]
push eax
push edi
lea ecx [ ebp - 0xa8 ]
call sub_444d0c
test [ ebp - 0x1c ] 0x40
jne r-xdata
cmp esi [ ebp - 0xc ]
jg r-xdata
inc esi
cmp esi [ ebp - 0xc ]
jle r-xdata
mov [ ebp + 0x8 ] esi
cmp esi [ ebp - 0xc ]
jg r-xdata
inc esi
cmp esi [ ebp - 0xc ]
jle r-xdata
sub esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
add eax [ ebp + 0x8 ]
mov bl 0x1
mov [ ecx ] eax
push 0x10
push edi
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x24 ] esi
call sub_444d41
mov eax [ ebp - 0x4 ]
push edi
push ebx
push 0x1111
push [ eax ]
call [ SendMessageW@IAT ]
push 0x10
lea eax [ ebp - 0x24 ]
push eax
push edi
lea ecx [ ebp - 0xa8 ]
call sub_444d0c
test [ ebp - 0x1c ] 0x40
je r-xdata
sub_43d0d4
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor esi esi
push esi
push esi
mov eax ecx
push 0x110a
push [ eax ]
mov [ ebp - 0xc ] eax
call [ SendMessageW@IAT ]
mov edi eax
mov [ ebp - 0x8 ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
mov ebx [ ebx + 0x4 ]
call sub_40d3d2
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405cd3
mov eax edi
test esi esi
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_407e53
cmp esi ebx
jae r-xdata
mov eax [ ebp - 0xc ]
push edi
push 0x4
push 0x110a
push [ eax ]
call [ SendMessageW@IAT ]
mov edi eax
mov [ ebp - 0x8 ] edi
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x1c ]
push eax
push edi
call sub_43d38a
mov edi eax
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
mov edi [ ebp + 0x8 ]
inc esi
cmp esi ebx
jb r-xdata
push esi
mov ecx edi
call sub_41db6f
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_40bd2f
inc esi
cmp esi ebx
jb r-xdata
lea eax [ esi + 0x1 ]
push eax
mov ecx edi
call sub_41db6f
push 0x7c
pop ecx
cmp [ eax ] cx
jne r-xdata
push esi
mov ecx edi
call sub_41db6f
push 0x7c
pop ecx
cmp [ eax ] cx
jne r-xdata
mov edi [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_40bd2f
add esi 0x2
sub_43d1c5
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
mov edi ecx
call sub_43d0d4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor esi esi
cmp [ ebx + 0x4 ] esi
mov ebx [ SendMessageW@IAT ]
je r-xdata
test eax eax
jne r-xdata
push eax
push 0x4
jmp r-xdata
push eax
inc esi
push 0x1
mov eax esi
push 0x110a
push [ edi ]
call ebx
sub_43d206
push ebp
mov ebp esp
sub esp 0xb8
and [ ebp - 0x8 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
mov eax [ esi ]
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0xc ]
push edi
inc [ eax ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
call sub_40d3d2
test edi edi
je r-xdata
mov [ ebp + 0x10 ] 0x0
mov [ ebp + 0x10 ] 0x1
cmp edi [ ebp + 0xc ]
je r-xdata
mov ecx esi
call sub_43c46a
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push edi
push 0x1
push 0x110a
push [ ebx ]
call [ SendMessageW@IAT ]
inc [ ebp - 0x8 ]
mov edi eax
test edi edi
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push r--data
mov ecx esi
call sub_4039e8
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push r--data
mov ecx esi
call sub_4039e8
push edi
push 0x4
push 0x110a
push [ ebx ]
call [ SendMessageW@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
mov ecx ebx
call sub_43d4de
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_407b4b
push 0xa
lea eax [ ebp - 0xb4 ]
push eax
push [ ebp - 0x8 ]
call sub_422177
add esp 0xc
mov ecx esi
push 0x23
call sub_40bd2f
lea eax [ ebp - 0xb4 ]
push eax
mov ecx esi
call sub_4039e8
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
mov ecx ebx
call sub_43d4de
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_407b4b
jmp r-xdata
push 0xa
lea eax [ ebp - 0xb4 ]
push eax
push [ ebp - 0x8 ]
call sub_422177
add esp 0xc
mov ecx esi
push 0x23
call sub_40bd2f
lea eax [ ebp - 0xb4 ]
push eax
mov ecx esi
call sub_4039e8
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
lea ecx [ ebp - 0x28 ]
call sub_405cd3
mov al [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x14
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_40c935
push 0x0
push [ ebp + 0x14 ]
mov ecx ebx
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d206
test al al
jne r-xdata
sub_43d38a
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov [ ebp - 0x8 ] ecx
xor ebx ebx
push edi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1 ] bl
call sub_40d3d2
mov esi [ ebp + 0xc ]
push ebx
mov ecx esi
call sub_40a4f6
push 0x23
pop edi
cmp [ eax ] di
jne r-xdata
push ebx
mov ecx esi
call sub_40a4f6
cmp [ eax ] di
jne r-xdata
push 0x1
mov ecx esi
call sub_40a4f6
cmp [ eax ] di
je r-xdata
push [ esi ]
call sub_422241
mov edi [ ebp + 0x8 ]
pop ecx
mov [ ebp + 0xc ] eax
push 0x1
push ebx
mov ecx esi
call sub_40a2fb
push 0x1
push ebx
mov ecx esi
call sub_40a2fb
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_43d4de
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_41dfb6
test eax eax
je r-xdata
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x8 ]
push edi
push 0x1
push 0x110a
push [ eax ]
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
inc ebx
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_43d451
push ebp
mov ebp esp
push ebx
push esi
push 0x0
push 0x9
mov esi ecx
push 0x110a
push [ esi ]
call [ SendMessageW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_407e53
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
push 0x0
push 0x0
push 0x110a
push [ esi ]
call [ SendMessageW@IAT ]
push eax
mov ecx esi
call sub_43d206
xor al al
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub_43d4a7
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_407e53
push [ ebp + 0x8 ]
mov ecx esi
call sub_43d0d4
test eax eax
jne r-xdata
push [ ebp + 0xc ]
mov ecx esi
push eax
call sub_43d4de
xor al al
jmp r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
sub_43d4de
push ebp
mov ebp esp
sub esp 0x8ac
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ ebp - 0xa8 ]
call sub_40181b
push [ ebx ]
push 0x28
call sub_444c65
push [ ebx ]
lea ecx [ ebp - 0xa8 ]
push 0x800
mov esi eax
call sub_444c65
mov ecx [ ebp + 0x8 ]
push 0x28
mov edi eax
push esi
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] ecx
push eax
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x28 ] 0x11
mov [ ebp - 0x14 ] 0x400
mov [ ebp - 0x18 ] edi
call sub_444d41
push esi
push 0x0
push 0x113e
push [ ebx ]
call [ SendMessageW@IAT ]
mov esi eax
push 0x800
lea eax [ ebp - 0x8a8 ]
push eax
push edi
lea ecx [ ebp - 0xa8 ]
call sub_444d0c
mov ecx [ ebp + 0xc ]
test esi esi
je r-xdata
push r--data
call sub_407e53
xor ebx ebx
lea eax [ ebp - 0x8a8 ]
push eax
call sub_407e53
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0xa8 ]
call sub_402e39
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x8
sub_43d5a0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43d0d4
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push 0xf000
push eax
push 0x1127
push [ esi ]
call [ SendMessageW@IAT ]
shr eax 0xc
dec eax
sub_43d5ce
push ebp
mov ebp esp
push ecx
push ebx
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_43d0d4
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
push 0x5
push 0x110b
push [ edi ]
call [ SendMessageW@IAT ]
push ebx
push 0x9
push 0x110b
push [ edi ]
call [ SendMessageW@IAT ]
test eax eax
setne al
xor al al
jmp r-xdata
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43d623
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push esi
lea eax [ ebp + 0xc ]
push eax
push 0x1388
push 0x2
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ SendMessageTimeoutW@IAT ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x8
push 0x1
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_43d66c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
jmp r-xdata
call [ GetParent@IAT ]
test eax eax
jne r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
pop ebp
retn 0x8
xor eax eax
inc eax
jmp r-xdata
push eax
sub_43d68d
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x18 ]
cmp [ esi ] edi
ja r-xdata
xor al al
mov ebx [ ebp + 0xc ]
push r--data
mov ecx ebx
call sub_407e53
mov edx r--data
mov ecx ebx
call sub_41f885
test al al
jne r-xdata
push 0x3b
pop ecx
cmp ax cx
je r-xdata
mov ecx ebx
call sub_40b8a7
push [ ebx + 0x4 ]
push [ ebx ]
call [ CharUpperBuffW@IAT ]
mov eax [ esi ]
mov ebx [ ebp + 0x8 ]
push eax
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
push 0x3a
pop edx
cmp ax dx
je r-xdata
push 0x5d
pop ecx
cmp ax cx
je r-xdata
inc [ esi ]
push 0x3b
pop ecx
cmp ax cx
je r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
cmp [ esi ] edi
jbe r-xdata
cmp ax dx
jne r-xdata
push 0x5d
pop ecx
cmp ax cx
jne r-xdata
lea eax [ ecx + 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41db6f
movzx eax [ eax ]
push eax
mov ecx ebx
call sub_40bd2f
jmp r-xdata
mov eax [ esi ]
push eax
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
inc eax
push eax
mov ecx ebx
mov [ ebp + 0x18 ] eax
call sub_41db6f
mov ecx [ ebp + 0x8 ]
movzx eax [ eax ]
push 0x3b
pop edx
cmp cx dx
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push r--data
call sub_407e53
jmp r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_41db6f
movzx eax [ eax ]
push 0x3a
pop ecx
cmp ax cx
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
cmp ax dx
jne r-xdata
mov edi [ esi ]
push edi
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
inc [ esi ]
add [ esi ] 0x2
jmp r-xdata
lea eax [ edi + 0x1 ]
mov [ esi ] eax
jmp r-xdata
cmp eax 0x9
jne r-xdata
push ecx
mov ecx [ ebp + 0x10 ]
call sub_40bd2f
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_43d7d6
push ebp
mov ebp esp
sub esp 0x204
push ebx
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_407e53
mov edi [ ebp + 0x8 ]
push 0x1
push edi
call sub_43d623
call [ GetFocus@IAT ]
mov [ ebx + 0xd8 ] eax
test eax eax
je r-xdata
push 0x0
push edi
call sub_43d623
xor al al
push edi
push eax
call sub_43d66c
test eax eax
je r-xdata
push esi
push [ ebx + 0xd8 ]
mov ecx ebx
call sub_43e0c5
push 0x100
lea eax [ ebp - 0x204 ]
push eax
push [ ebx + 0xd8 ]
mov [ ebx + 0xd4 ] edi
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x204 ]
lea esi [ ebx + 0x8c ]
push eax
mov ecx esi
call sub_407e53
and [ ebx + 0x130 ] 0x0
push ebx
push sub_43d8ba
push edi
call [ EnumChildWindows@IAT ]
push [ ebx + 0x130 ]
lea eax [ ebp - 0x204 ]
push [ esi ]
push r--data
push eax
call sub_42234b
add esp 0x10
lea ecx [ ebp - 0x204 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_407e53
push 0x0
push edi
call sub_43d623
mov al 0x1
pop esi
jmp r-xdata
pop edi
pop ebx
leave
retn 0x8
sub_43d8c6
push ebp
mov ebp esp
sub esp 0x204
lea eax [ ebp - 0x204 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x100
push eax
push edi
mov esi ecx
call [ GetClassNameW@IAT ]
call [ GetFocus@IAT ]
mov ebx eax
lea eax [ ebp - 0x204 ]
push eax
push [ esi + 0x8c ]
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
inc [ esi + 0x130 ]
cmp edi [ esi + 0xd8 ]
jne r-xdata
push [ esi + 0xd4 ]
push ebx
call sub_43d66c
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_43d936
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
call sub_40d3d2
mov edx [ ebp + 0xc ]
cmp edx [ edi + 0x4 ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0xffffffff
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
sub ecx edx
mov eax [ edi + 0x4 ]
sub eax edx
cmp ecx eax
jbe r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push edi
call sub_407f40
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn 0xc
sub_43d978
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
lea ecx [ ebp - 0x18 ]
mov [ edi + 0x88 ] ebx
mov [ edi + 0xd8 ] ebx
call sub_40d3d2
lea ecx [ ebp - 0x28 ]
call sub_40d3d2
mov eax [ ebp + 0xc ]
mov esi [ eax + 0x4 ]
test esi esi
jne r-xdata
push ebx
mov ecx eax
call sub_41db6f
cmp [ eax ] 0x5b
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
lea eax [ esi - 0x1 ]
push eax
call sub_41db6f
cmp [ eax ] 0x5d
jne r-xdata
mov ecx edi
call sub_43e0c5
mov bl 0x1
test [ edi + 0x88 ] 0x8
je r-xdata
push esi
lea ecx [ edi + 0x9c ]
mov [ edi + 0x88 ] 0x8
call sub_40c935
lea eax [ esi - 0x2 ]
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] eax
mov esi [ EnumChildWindows@IAT ]
push edi
push sub_43dd46
push [ ebp + 0x8 ]
mov [ edi + 0x130 ] ebx
call esi
cmp [ edi + 0xd8 ] ebx
jne r-xdata
mov eax [ edi + 0xa0 ]
mov [ edi + 0x134 ] eax
lea esi [ eax - 0x1 ]
mov [ edi + 0x138 ] ebx
test eax eax
je r-xdata
cmp [ edi + 0x88 ] ebx
jne r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0xd8 ]
test eax eax
je r-xdata
test [ edi + 0x88 ] 0x8
je r-xdata
test esi esi
js r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
or [ edi + 0x88 ] 0x1
lea ecx [ edi + 0x8c ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_405cd3
lea ecx [ ebp - 0x18 ]
call sub_405cd3
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x8
push eax
lea eax [ edi + 0x9c ]
push eax
lea ecx [ edi + 0xbc ]
mov [ edi + 0x130 ] ebx
mov [ edi + 0x88 ] 0x4
call sub_40c935
push edi
push sub_43dd46
push [ ebp + 0x8 ]
call esi
push esi
lea ecx [ edi + 0x9c ]
call sub_40a4f6
movzx eax [ eax ]
push eax
call sub_4222df
dec esi
pop ecx
test eax eax
je r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
or [ edi + 0x88 ] 0x8
lea ecx [ edi + 0x9c ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_40c935
jmp r-xdata
xor ebx ebx
inc [ edi + 0x138 ]
test esi esi
jns r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
or [ edi + 0x88 ] 0x10
lea esi [ edi + 0xec ]
mov ecx esi
call sub_405cf6
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_405be9
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x20
call sub_422241
pop ecx
mov [ edi + 0xcc ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
call sub_43d68d
test al al
je r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
or [ edi + 0x88 ] 0x400
lea ecx [ edi + 0xac ]
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x40
call sub_422241
pop ecx
mov [ edi + 0xdc ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x80
call sub_422241
pop ecx
mov [ edi + 0xe0 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x100
call sub_422241
pop ecx
mov [ edi + 0xe4 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x200
call sub_422241
pop ecx
mov [ edi + 0xe8 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_41f885
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x2
call sub_422241
pop ecx
mov [ edi + 0xd0 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_43d614
test al al
jne r-xdata
or [ edi + 0x88 ] 0x4
lea ecx [ edi + 0xbc ]
sub_43dcf3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
push esi
and [ esi + 0xd8 ] 0x0
and [ esi + 0x130 ] 0x0
push sub_43dd46
push [ ebp + 0x8 ]
mov [ esi + 0x88 ] 0x20
mov [ esi + 0xcc ] eax
call [ EnumChildWindows@IAT ]
mov eax [ esi + 0xd8 ]
test eax eax
je r-xdata
xor al al
push eax
mov ecx esi
call sub_43e0c5
mov al 0x1
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_43dd52
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa2c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov eax [ edi + 0x88 ]
mov esi ebx
mov [ esp + 0xc ] ebx
test al 0x8
je r-xdata
test eax 0x400
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ esp + 0x2c ]
push eax
push esi
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x28 ]
push eax
call sub_4218fb
pop ecx
mov ecx eax
mov [ esp + 0xc ] ecx
test ecx ecx
je r-xdata
test [ edi + 0x88 ] 0x10
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
lea ecx [ edi + 0x8 ]
push 0x202
call sub_444c65
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x134 ]
cmp eax ecx
jle r-xdata
lea esi [ ecx - 0x1 ]
test esi esi
js r-xdata
mov ecx [ edi + 0x88 ]
test cl 0x20
je r-xdata
push 0x400
lea eax [ esp + 0x234 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x230 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_40caee
lea eax [ esp + 0x18 ]
lea esi [ edi + 0xec ]
push eax
mov ecx esi
call sub_407e36
lea ecx [ esp + 0x18 ]
call sub_405cd3
mov ecx esi
call sub_442e0a
test al al
je r-xdata
xor esi esi
inc esi
mov [ esp + 0xc ] esi
lea ecx [ esp + 0x10 ]
push ecx
push 0x1388
push 0x2
push eax
push 0x101
push [ edi + 0x4 ]
push esi
call [ SendMessageTimeoutW@IAT ]
mov esi [ esp + 0xc ]
test eax eax
je r-xdata
xor eax eax
inc eax
mov edx [ edi + 0x138 ]
cmp edx ebx
jle r-xdata
mov esi [ ebp + 0x8 ]
movzx eax [ esp + esi * 2 + 0x28 ]
push eax
call sub_4222df
dec esi
pop ecx
test eax eax
je r-xdata
test cl 0xc0
jne r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call [ GetDlgCtrlID@IAT ]
cmp [ edi + 0xcc ] eax
jne r-xdata
mov esi [ esp + 0xc ]
inc esi
inc ebx
push esi
lea ecx [ edi + 0x8 ]
call sub_444cc6
cmp [ esp + 0x10 ] ebx
jbe r-xdata
sub eax edx
add eax ebx
cmp ecx eax
jne r-xdata
mov ecx [ esp + 0xc ]
inc ebx
test esi esi
jns r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetParent@IAT ]
push eax
call [ ScreenToClient@IAT ]
mov ecx [ edi + 0x88 ]
test cl 0x40
je r-xdata
test ecx 0x300
je r-xdata
mov [ edi + 0xd8 ] ebx
jmp r-xdata
push 0x202
lea eax [ esp + 0x2c ]
push eax
push esi
lea ecx [ edi + 0x8 ]
call sub_444d0c
push [ edi + 0xac ]
xor eax eax
mov [ esp + 0x22c ] ax
lea eax [ esp + 0x2c ]
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
push ecx
lea eax [ esp + 0x2c ]
push eax
push [ edi + 0x9c ]
call sub_422315
add esp 0xc
test eax eax
jne r-xdata
test cl cl
jns r-xdata
mov eax [ edi + 0xdc ]
cmp eax [ esp + 0x10 ]
jne r-xdata
test cl 0x1
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
inc ebx
inc [ edi + 0x130 ]
push [ edi + 0x130 ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x238 ]
push r--data
push eax
call sub_42234b
push [ edi + 0x9c ]
lea eax [ esp + 0x244 ]
push eax
call sub_422203
add esp 0x18
test eax eax
jne r-xdata
test ecx 0x100
je r-xdata
mov eax [ edi + 0xe0 ]
cmp eax [ esp + 0x14 ]
jne r-xdata
inc esi
inc ebx
test [ edi + 0x88 ] 0x4
je r-xdata
push 0x100
lea eax [ esp + 0x234 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x230 ]
push eax
push [ edi + 0x8c ]
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ edi + 0xd8 ] esi
jmp r-xdata
test ecx 0x200
je r-xdata
mov eax [ esp + 0x20 ]
sub eax [ esp + 0x18 ]
cmp [ edi + 0xe4 ] eax
jne r-xdata
inc esi
inc ebx
test [ edi + 0x88 ] 0x2
je r-xdata
push 0x400
lea eax [ esp + 0x234 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
lea eax [ esp + 0x230 ]
push eax
push [ edi + 0xbc ]
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
inc esi
inc ebx
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x1c ]
cmp [ edi + 0xe8 ] eax
jne r-xdata
inc esi
inc ebx
cmp ebx esi
jne r-xdata
cmp ebx esi
jne r-xdata
inc esi
inc ebx
inc esi
inc ebx
mov eax [ ebp + 0x8 ]
mov [ edi + 0xd8 ] eax
inc esi
inc [ edi + 0x130 ]
mov eax [ edi + 0x130 ]
cmp eax [ edi + 0xd0 ]
jne r-xdata
inc ebx
sub_43e0c5
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
push 0x4
call sub_42010a
pop ecx
test eax eax
je r-xdata
push ecx
call sub_402dd4
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov [ esi ] eax
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_43e0f5
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_4223f0
pop ecx
lea esi [ eax + 0x1 ]
push esi
mov [ edi + 0x4 ] eax
call sub_403d82
push eax
mov [ edi + 0x8 ] eax
call sub_42010a
push esi
push [ ebp + 0x8 ]
mov [ edi ] eax
push eax
call sub_41faa0
add esp 0x10
mov ecx edi
call sub_40a6f8
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_43e138
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40193b
test al al
jne r-xdata
pop ebp
retn 0x8
push 0x1
jmp r-xdata
push 0x0
push [ ebp + 0x8 ]
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_43e19e
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0x4 ] esi
ja r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_4218fb
mov ebx [ edi + 0x4 ]
pop ecx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
mov edi [ edi ]
pop edi
pop esi
leave
retn 0x8
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc esi
add edi 0x2
cmp esi ebx
jb r-xdata
pop ebx
mov edx [ ebp + 0x8 ]
push eax
mov ecx edi
call sub_40b96c
pop ecx
test eax eax
je r-xdata
sub_43e1f1
push ebp
mov ebp esp
sub esp 0x200
lea eax [ ebp - 0x200 ]
push 0xff
push eax
push [ ecx ]
call [ GetClassNameW@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x200 ]
push eax
call sub_407e53
leave
retn 0x4
sub_43e221
push ebx
push esi
mov esi [ ecx ]
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
mov ebx 0x40000000
jmp r-xdata
test ebx eax
jne r-xdata
push esi
call sub_43e259
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
push esi
call sub_43e259
mov esi eax
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
sub_43e278
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push ebx
push [ esi ]
call [ GetWindowRect@IAT ]
test eax eax
je r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx esi
call sub_43e221
mov ecx eax
test ecx ecx
je r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebx ]
mov esi [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
push edi
mov edi [ ebx + 0x8 ]
sub edi [ ebx ]
mov [ ebp - 0x4 ] eax
sub esi eax
lea eax [ ebp - 0x8 ]
push eax
push ecx
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ebx ] eax
add eax edi
mov [ ebx + 0x8 ] eax
lea eax [ esi + ecx ]
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0xc ] eax
pop edi
sub_43e2e8
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push edi
mov [ ebp - 0x8 ] ebx
call sub_40c4cd
push [ ebx ]
call sub_40193b
test al al
je r-xdata
mov ecx ebx
call sub_43e390
mov ebx eax
test ebx ebx
jne r-xdata
xor al al
jmp r-xdata
xor ecx ecx
push 0x2
lea esi [ ebx + 0x1 ]
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov edi eax
mov eax [ ebp - 0x8 ]
push edi
push esi
push 0xd
push [ eax ]
call [ SendMessageW@IAT ]
test eax eax
jle r-xdata
mov ebx 0x7fff
pop edi
pop esi
pop ebx
leave
retn 0x4
push edi
call j_sub_4228ca#2
pop ecx
mov al 0x1
push edi
call sub_4223f0
pop ecx
push edi
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_407e53
lea ecx [ ebp - 0x18 ]
call sub_43e0f5
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40c610
lea ecx [ ebp - 0x18 ]
call sub_405cd3
jmp r-xdata
sub_43e390
push esi
mov esi ecx
push [ esi ]
call sub_40193b
test al al
je r-xdata
push 0x0
push 0x0
push 0xe
push [ esi ]
call [ SendMessageW@IAT ]
pop esi
retn
xor eax eax
pop esi
retn
sub_43e3b2
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_43e1f1
mov eax [ ebp + 0x8 ]
push ecx
push [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_43e19e
cmp eax 0xffffffff
lea ecx [ ebp - 0x10 ]
setne bl
call sub_405cd3
pop esi
mov al bl
pop ebx
leave
retn 0x8
sub_43e40f
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx ]
call [ MoveWindow@IAT ]
test eax eax
setne al
pop ebp
retn 0x10
sub_43e44e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_402d1a
mov eax [ ebx + 0x8 ]
push 0x4
pop ecx
cmp [ esi + 0xc ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
xor edi edi
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push 0x8
pop edx
cmp eax edx
jb r-xdata
pop edi
push ecx
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
je r-xdata
mov edx eax
xor edx edx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
push 0x4
mov [ esi + 0x4 ] edi
pop ecx
push [ esi + 0x4 ]
call j_sub_4228ca#2
pop ecx
mov eax [ esi + 0x4 ]
push 0x4
mov [ eax + edi * 4 ] edx
inc edi
pop ecx
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_43e4ea
push ebp
mov ebp esp
sub esp 0x38
lea ecx [ ebp - 0x14 ]
push esi
call sub_40d3d2
lea ecx [ ebp - 0x24 ]
call sub_40d3d2
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
push r--data
push r--data
push [ esi ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ esi ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x7
push r--data
push [ esi ]
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
push r--data
jmp r-xdata
push 0x7
push r--data
push [ esi ]
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
push r--data
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_407e53
push 0xa
push r--data
push [ esi ]
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e53
push 0xffffffff
push 0x7
jmp r-xdata
push r--data
push [ esi ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e53
push 0xffffffff
push 0xa
lea eax [ ebp - 0x34 ]
push eax
mov ecx esi
call sub_43d936
push eax
lea ecx [ ebp - 0x24 ]
call sub_40c935
lea ecx [ ebp - 0x34 ]
call sub_405cd3
lea eax [ ebp - 0x24 ]
push eax
call sub_43e630
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_405cd3
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop esi
leave
retn 0x4
push r--data
jmp r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_40c935
sub_43e630
push ebp
mov ebp esp
sub esp 0x14
lea ecx [ ebp - 0x14 ]
push ebx
push edi
call sub_40d3d2
xor eax eax
push 0x3b
mov edi eax
pop ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_40c935
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop edi
pop ebx
leave
retn 0x4
push edi
call sub_40a4f6
cmp [ eax ] bx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a4f6
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_40bd2f
inc edi
jmp r-xdata
push ebx
lea ecx [ ebp - 0x14 ]
call sub_40bd2f
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a4f6
xor ecx ecx
cmp [ eax ] cx
mov ecx [ ebp + 0x8 ]
je r-xdata
sub_43e6a9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x81c
push ebx
push esi
mov ebx ecx
push edi
xor edi edi
test [ ebx + 0x8 ] 0x40
mov esi edi
mov [ esp + 0xc ] edi
je r-xdata
test [ ebx + 0x8 ] 0x8
je r-xdata
inc edi
inc esi
mov [ esp + 0xc ] esi
test [ ebx + 0x8 ] 0x1
je r-xdata
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x20 ]
push eax
push [ ebx + 0xbc ]
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
test [ ebx + 0x8 ] 0x2
je r-xdata
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
inc esi
mov [ esp + 0xc ] esi
inc edi
test [ ebx + 0x8 ] 0x10
je r-xdata
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_40caee
lea eax [ esp + 0x10 ]
push eax
lea ecx [ ebx + 0x34 ]
call sub_407e36
lea ecx [ esp + 0x10 ]
call sub_405cd3
lea ecx [ ebx + 0x34 ]
call sub_442e0a
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ esp + 0xc ] edi
dec eax
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_4218fb
pop ecx
push eax
lea eax [ esp + 0x24 ]
push eax
call [ CharUpperBuffW@IAT ]
test [ ebx + 0x8 ] 0x4
je r-xdata
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_40caee
lea eax [ esp + 0x10 ]
push eax
lea ecx [ ebx + 0x78 ]
call sub_407e36
lea ecx [ esp + 0x10 ]
call sub_405cd3
lea ecx [ ebx + 0x78 ]
call sub_442e0a
test al al
je r-xdata
mov esi [ esp + 0xc ]
inc esi
mov [ esp + 0xc ] esi
test [ ebx + 0x8 ] 0x18
jne r-xdata
push [ ebx + 0x18 ]
lea eax [ esp + 0x24 ]
push eax
push [ ebx + 0x14 ]
call sub_422315
add esp 0xc
dec eax
je r-xdata
mov ecx [ ebx + 0x8 ]
test ecx 0x780
je r-xdata
cmp edi esi
jne r-xdata
mov esi [ esp + 0xc ]
inc esi
inc edi
inc edi
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x20 ]
push eax
push r--data
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
test [ ebx + 0x8 ] 0x18
jne r-xdata
inc edi
push [ ebx + 0x14 ]
lea eax [ esp + 0x24 ]
push eax
call sub_422633
pop ecx
pop ecx
test eax eax
je r-xdata
dec eax
jne r-xdata
test cl 0x20
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
mov ecx [ ebx + 0x8 ]
test cl cl
jns r-xdata
inc esi
push [ ebp + 0x8 ]
mov ecx ebx
call sub_43e970
test al al
je r-xdata
inc esi
mov [ esp + 0xc ] esi
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x20 ]
push eax
push r--data
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
jmp r-xdata
push [ ebx + 0x14 ]
lea eax [ esp + 0x24 ]
push eax
call sub_422203
pop ecx
pop ecx
jmp r-xdata
cmp edi esi
jne r-xdata
cmp edi esi
jne r-xdata
mov edx [ esp + 0x14 ]
test ecx 0x100
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ ebx + 0xd4 ] eax
jne r-xdata
inc edi
mov edi [ esp + 0xc ]
test eax eax
jne r-xdata
xor eax eax
inc eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebx + 0xec ]
call sub_40197e
inc [ ebx + 0xe4 ]
xor eax eax
cmp [ ebx + 0x4 ] al
sete al
jmp r-xdata
inc esi
inc [ ebx + 0xd0 ]
mov eax [ ebx + 0xd0 ]
cmp eax [ ebx + 0xcc ]
jne r-xdata
test ecx 0x200
je r-xdata
cmp [ ebx + 0xd8 ] edx
jne r-xdata
inc esi
inc edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
test ecx 0x400
je r-xdata
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
cmp [ ebx + 0xdc ] eax
jne r-xdata
inc esi
inc edi
mov eax [ esp + 0x1c ]
sub eax edx
cmp [ ebx + 0xe0 ] eax
jne r-xdata
inc esi
inc edi
inc esi
inc edi
sub_43e970
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_40193b
test al al
je r-xdata
mov al 0x1
jmp r-xdata
push esi
push sub_43e9b5
push [ ebp + 0x8 ]
mov [ esi + 0xe8 ] 0x0
call [ EnumChildWindows@IAT ]
cmp [ esi + 0xe8 ] 0x0
setne al
xor al al
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_43e9c1
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ebx ecx
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push 0xe
push [ ebp + 0x8 ]
call [ SendMessageW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0x5 ] 0x1
jne r-xdata
lea esi [ eax + 0x1 ]
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov edi eax
push edi
push esi
push 0xd
push [ ebp + 0x8 ]
call [ SendMessageW@IAT ]
mov ecx [ ebp - 0x4 ]
xor edx edx
mov [ edi + ecx * 2 ] dx
test eax eax
jg r-xdata
mov eax 0x7fff
mov [ ebp - 0x4 ] eax
xor eax eax
inc eax
cmp [ ebx + 0xc ] dl
jne r-xdata
xor esi esi
inc esi
jmp r-xdata
push [ ebx + 0x24 ]
push edi
call sub_422633
pop ecx
pop ecx
test eax eax
je r-xdata
push edi
call sub_4218fb
pop ecx
push eax
push edi
call [ CharUpperBuffW@IAT ]
push edi
call j_sub_4228ca#2
pop ecx
mov eax esi
jmp r-xdata
push edi
call j_sub_4228ca#2
pop ecx
mov [ ebx + 0xe8 ] 0x1
xor esi esi
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_43eaa7
push ebp
mov ebp esp
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_403097
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_43ead5
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
xor ecx ecx
push edi
lea edi [ esi + 0xc ]
mov [ ebp - 0x4 ] esi
mov [ esi ] ecx
mov [ edi ] ecx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x30 ] ecx
mov [ esi + 0x34 ] ecx
mov [ esi + 0x3c ] cx
mov [ esi + 0x8 ] ecx
test edx edx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov [ eax ] ecx
movsx eax [ ebx + 0x88 ]
mov [ esi + 0x10 ] eax
movsx eax [ ebx + 0x88 ]
movsx ecx [ ebx + 0x8c ]
add ecx eax
mov [ esi + 0x18 ] ecx
movsx eax [ ebx + 0x8a ]
mov [ esi + 0x14 ] eax
movsx eax [ ebx + 0x8a ]
movsx ecx [ ebx + 0x8e ]
add ecx eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x1c ] ecx
mov ecx edx
mov [ esi + 0x4 ] ebx
mov [ esi ] eax
call sub_44be14
test al al
je r-xdata
mov eax 0x80004005
cmp [ edx + 0xc ] 0x8
jne r-xdata
xor eax eax
mov eax [ edx ]
jmp r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push 0xc
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
push edi
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] 0x1
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x28 ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0xc
mov [ esi + 0x30 ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x2c ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
push 0x1
push [ edi ]
call [ OleSetContainedObject@IAT ]
mov ecx [ edi ]
lea eax [ esi + 0x10 ]
mov edx [ ecx ]
push eax
mov eax [ esi ]
push [ eax + 0x14 ]
push 0xffffffff
push [ esi + 0x28 ]
push 0x0
push 0xffffffff
push ecx
call [ edx + 0x2c ]
push 0x5
pop esi
push [ esi + 0x34 ]
mov eax [ ebp + 0x8 ]
push 0x2
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x34 ] eax
mov eax [ edi ]
push r--data
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x14 ]
movsx eax [ ebx + 0x8c ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0x8e ]
lea edx [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
call sub_43ef91
mov eax [ edi ]
lea edx [ ebp - 0x14 ]
mov ecx [ eax ]
push edx
push 0x1
push eax
call [ ecx + 0x44 ]
mov eax [ edi ]
push [ esi + 0x28 ]
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov ecx [ edi ]
lea eax [ esi + 0x38 ]
mov edx [ ecx ]
push eax
push [ esi + 0x34 ]
push ecx
call [ edx + 0x4c ]
mov eax [ edi ]
lea edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov esi [ ebp - 0x4 ]
jns r-xdata
test esi esi
jne r-xdata
mov eax [ edi ]
lea edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
mov edi eax
test edi edi
jns r-xdata
mov ecx esi
call sub_43f009
push 0x1
push 0x0
push 0x0
push ebx
jmp r-xdata
mov eax [ edi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
dec esi
test ebx ebx
je r-xdata
test ebx ebx
mov eax [ ebp + 0xc ]
lea ebx [ esi + 0x8 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc ]
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ecx ]
mov edi eax
call [ edx + 0x8 ]
test edi edi
js r-xdata
mov ecx esi
call sub_43f009
push 0x1
push 0x0
push 0x0
push edi
jmp r-xdata
mov ecx rw-data
call sub_45c235
mov ecx [ ebp + 0x14 ]
mov eax [ ebx ]
mov [ ecx ] eax
jmp r-xdata
sub_43ed56
push ebp
mov ebp esp
push esi
push 0xc
mov esi ecx
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x4 ] esi
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x4 ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
jmp r-xdata
push 0xc
mov [ esi + 0x8 ] eax
call sub_42010a
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
and [ esi + 0x10 ] 0x0
mov [ esi + 0xc ] eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43edea
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0xc ] edi
je r-xdata
cmp [ esi + 0x8 ] edi
je r-xdata
push [ esi + 0xc ]
call j_sub_4228ca#2
pop ecx
mov [ esi + 0xc ] edi
cmp [ esi + 0x4 ] edi
je r-xdata
push [ esi + 0x8 ]
call j_sub_4228ca#2
pop ecx
mov [ esi + 0x8 ] edi
cmp [ esi ] edi
je r-xdata
push [ esi + 0x4 ]
call j_sub_4228ca#2
pop ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
push [ esi ]
call j_sub_4228ca#2
pop ecx
mov [ esi ] edi
sub_43ee7d
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ edi + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ eax + 0x18 ] bl
mov eax [ edi + 0x4 ]
lea edx [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
lea esi [ edi + 0x8 ]
mov [ esi ] eax
jmp r-xdata
mov eax 0x80004005
mov eax [ ebp + 0x8 ]
lea esi [ edi + 0x8 ]
mov ecx [ eax ]
push esi
push ebx
push ebx
push ebx
push eax
call [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ edi + 0x4 ]
mov ecx [ esi ]
push [ eax + 0x30 ]
mov edx [ ecx ]
push ecx
call [ edx + 0xc ]
test eax eax
js r-xdata
mov eax [ esi ]
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0x28 ]
mov eax [ edi + 0x4 ]
mov ecx [ esi ]
add eax 0x10
mov edx [ ecx ]
push eax
push ecx
call [ edx + 0x18 ]
mov eax [ esi ]
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax + 0x18 ] 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43ef2d
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0x14 ] esi
je r-xdata
xor eax eax
push 0x40
call sub_42010a
pop ecx
test eax eax
je r-xdata
test esi esi
je r-xdata
push [ ebp + 0x10 ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_43ead5
mov esi eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push ecx
mov ecx esi
call sub_43ee53
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
sub_43ef91
push ebp
mov ebp esp
sub esp 0xc
mov eax edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
test ecx ecx
jne r-xdata
test eax eax
je r-xdata
mov ecx 0x80004003
call sub_43a83b
push ebx
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov esi [ GetDeviceCaps@IAT ]
mov ebx eax
push 0x58
push ebx
call esi
push 0x5a
push ebx
mov edi eax
call esi
push ebx
push 0x0
mov [ ebp - 0xc ] eax
call [ ReleaseDC@IAT ]
mov ebx [ ebp - 0x4 ]
mov esi [ MulDiv@IAT ]
push edi
push [ ebx ]
push 0x9ec
call esi
push [ ebp - 0xc ]
mov edi [ ebp - 0x8 ]
push [ ebx + 0x4 ]
mov [ edi ] eax
push 0x9ec
call esi
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
leave
retn
sub_43f009
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov edx [ esi + 0xc ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
test edx edx
je r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x3c ] bl
cmp [ esi + 0x34 ] ebx
je r-xdata
mov ecx [ edx ]
lea eax [ esi + 0x10 ]
push eax
mov eax [ esi ]
push [ eax + 0x14 ]
push 0xffffffff
push [ esi + 0x28 ]
push ebx
push 0xfffffffd
push edx
call [ ecx + 0x2c ]
cmp [ esi + 0x3d ] bl
jne r-xdata
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
push [ esi + 0x34 ]
call j_sub_4228ca#2
pop ecx
mov [ esi + 0x34 ] ebx
mov eax [ esi + 0xc ]
lea edx [ ebp - 0x8 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x3c ] bl
je r-xdata
cmp [ esi + 0x30 ] ebx
je r-xdata
push ecx
call sub_43ee68
mov [ esi + 0x2c ] ebx
push ebx
push [ esi + 0xc ]
call [ OleSetContainedObject@IAT ]
mov eax [ esi + 0xc ]
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x3d ] bl
je r-xdata
cmp [ esi + 0x28 ] ebx
je r-xdata
push [ esi + 0x30 ]
call j_sub_4228ca#2
pop ecx
mov [ esi + 0x30 ] ebx
mov eax [ esi + 0xc ]
push [ esi + 0x38 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
mov eax [ esi + 0xc ]
push ebx
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov eax [ esi + 0xc ]
push ebx
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x14 ]
push [ esi + 0x8 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
push ebx
push 0x2
push 0x1
push ecx
call [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x3c ] bl
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x18 ]
mov ecx [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
push [ esi + 0x28 ]
call j_sub_4228ca#2
pop ecx
mov [ esi + 0x28 ] ebx
mov eax [ esi + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0xc ] ebx
push [ esi + 0x8 ]
call [ DestroyWindow@IAT ]
mov eax [ ecx ]
push ecx
call [ eax + 0x14 ]
sub_43f144
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
xor edx edx
cmp ecx 0x3
jl r-xdata
mov eax edx
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
push edi
add esi 0xc
lea edi [ ecx - 0x2 ]
add esi 0x4
dec edi
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ esi ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
cmp [ ecx + 0x90 ] 0x1d
jne r-xdata
cmp [ ecx + 0x80 ] 0x0
je r-xdata
inc edx
sub_43f195
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x80 ]
test ecx ecx
je r-xdata
push ecx
call sub_43ee53
and [ esi + 0x80 ] 0x0
sub_43f1c2
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x8 ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call [ CopyRect@IAT ]
xor eax eax
leave
retn 0x8
sub_43f1eb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ecx ]
mov [ eax ] ecx
sub_43f207
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax 0x80004003
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov [ ecx ] eax
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_43f26b
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ eax + 0x14 ]
mov [ ecx ] eax
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_43f291
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ eax ] ebx
mov eax [ edi + 0x4 ]
mov eax [ eax ]
mov ecx [ eax + 0xc ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ edi + 0x4 ]
add eax 0x10
push eax
push [ ebp + 0x14 ]
call [ CopyRect@IAT ]
mov eax [ edi + 0x4 ]
add eax 0x10
push eax
push [ ebp + 0x18 ]
call [ CopyRect@IAT ]
mov ecx [ ebp + 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] 0x14
mov eax [ edi + 0x4 ]
pop edi
mov eax [ eax ]
mov eax [ eax + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] ebx
mov [ ecx + 0x10 ] ebx
xor eax eax
pop ebx
pop ebp
retn 0x18
sub_43f2f2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
test esi esi
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x90 ] 0x1d
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov esi [ esi + 0x80 ]
test esi esi
je r-xdata
mov eax [ ecx ]
push 0x0
push ecx
call [ eax + 0x1c ]
and [ ebp + 0x8 ] 0x0
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push ecx
call [ eax ]
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x18 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ esi + 0xc ]
lea eax [ esi + 0x10 ]
mov edx [ ecx ]
push eax
push [ esi + 0x8 ]
push 0xffffffff
push [ esi + 0x28 ]
push 0x0
push 0xffffffff
push ecx
call [ edx + 0x2c ]
jmp r-xdata
mov eax [ ecx ]
push 0x0
push ecx
call [ eax + 0x1c ]
sub_43f390
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0xfffffd3b
jne r-xdata
cmp eax 0xfffffd2b
jne r-xdata
mov eax [ ebp + 0x20 ]
push 0xb
pop ecx
mov [ eax ] cx
xor ecx ecx
inc ecx
cmp eax 0xffffea83
jne r-xdata
mov eax [ ebp + 0x20 ]
push 0x3
pop ecx
mov [ eax ] cx
mov [ eax + 0x8 ] 0x400
jmp r-xdata
pop ebp
retn 0x24
cmp eax 0xffffea82
je r-xdata
mov eax [ ebp + 0x20 ]
push 0xb
pop ecx
mov [ eax ] cx
xor ecx ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80020003
mov [ eax + 0x8 ] cx
sub_43f3f3
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
jne r-xdata
mov ecx [ esi + 0x30 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
jmp r-xdata
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0xc ]
jmp r-xdata
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
mov ecx [ esi + 0x34 ]
jmp r-xdata
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
jne r-xdata
mov ecx [ esi + 0x2c ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax 0x80004002
push [ ebp + 0xc ]
push edi
call sub_43f4c5
jmp r-xdata
sub_43f4c5
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov edx r--data
mov ecx edi
call sub_43a6e8
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx [ esi + 0xc ]
jmp r-xdata
sub_43f572
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
movsx eax [ edx + 0x88 ]
mov [ ecx + 0x10 ] eax
movsx eax [ edx + 0x88 ]
movsx ecx [ edx + 0x8c ]
add ecx eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x18 ] ecx
movsx ecx [ edx + 0x8a ]
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] ecx
movsx eax [ edx + 0x8a ]
movsx ecx [ edx + 0x8e ]
add ecx eax
mov eax [ esi + 0x4 ]
lea edx [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov eax [ esi + 0x4 ]
push edx
mov eax [ eax + 0xc ]
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
js r-xdata
mov eax 0x8000ffff
mov eax [ esi + 0x4 ]
add eax 0x20
mov ecx [ eax - 0x14 ]
push eax
mov edx [ ecx ]
push 0x1
push ecx
call [ edx + 0x48 ]
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x10
mov edx [ ecx ]
push eax
push [ ebp + 0xc ]
push ecx
call [ edx + 0x1c ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_43f61c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
push 0x1
push 0x0
push [ eax + 0x14 ]
call [ InvalidateRect@IAT ]
sub_43f664
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0xc
push 0x1
push 0x0
push [ eax + 0x14 ]
call [ InvalidateRect@IAT ]
sub_43f6fe
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
pop edi
mov [ eax + 0x10 ] esi
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_43f733
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x8 ]
call [ GetClientRect@IAT ]
sub_43f755
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop esi
pop ebp
retn 0x10
push [ eax + 0x14 ]
call [ GetMenu@IAT ]
mov eax [ esi + 0x4 ]
push [ eax + 0x10 ]
push esi
push [ ebp + 0x14 ]
push [ eax + 0x14 ]
push [ ebp + 0x10 ]
call [ OleSetMenuDescriptor@IAT ]
sub_43f7aa
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
push edi
lea ecx [ ebx + 0x24 ]
call sub_40d3d2
lea ecx [ ebx + 0x34 ]
call sub_40d3d2
lea ecx [ ebx + 0x44 ]
call sub_40d3d2
mov eax ebx
xor ecx ecx
and [ eax + 0x54 ] 0x0
mov [ eax + 0x20 ] cx
push r--data
lea ecx [ ebx + 0x24 ]
call sub_407e53
fld [ r--data ]
mov esi ebx
mov eax 0x80000000
or [ esi ] 0xffffffff
fstp [ esi + 0x18 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
xor eax eax
push r--data
lea ecx [ ebx + 0x34 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
call sub_407e53
push r--data
lea ecx [ ebx + 0x44 ]
call sub_407e53
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
sub_43f85c
mov edx [ ecx ]
mov eax [ ecx + 0x8 ]
cmp edx eax
jle r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ ecx + 0xc ]
cmp edx eax
jle r-xdata
mov [ ecx ] eax
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] eax
mov [ ecx + 0xc ] edx
sub_43f898
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push 0x63
push [ rw-data ]
mov esi ecx
call [ LoadIconW@IAT ]
push eax
xor ebx ebx
push ebx
push 0x80
push [ esi + 0x54 ]
call [ SendMessageW@IAT ]
mov edi [ SetWindowTextW@IAT ]
cmp [ esi + 0x28 ] ebx
jbe r-xdata
cmp [ esi + 0x48 ] ebx
mov ebx [ GetDlgItem@IAT ]
jbe r-xdata
push [ esi + 0x24 ]
push [ esi + 0x54 ]
call edi
cmp [ esi + 0x38 ] 0x0
jbe r-xdata
push 0x3ea
push [ esi + 0x54 ]
call ebx
push [ esi + 0x44 ]
push eax
call edi
movzx eax [ esi + 0x20 ]
mov ebx [ SendDlgItemMessageW@IAT ]
test ax ax
je r-xdata
push 0x3e9
push [ esi + 0x54 ]
call ebx
push [ esi + 0x34 ]
push eax
call edi
cmp [ esi + 0x14 ] 0x0
jle r-xdata
push 0x0
push eax
push 0xcc
push 0x3e9
push [ esi + 0x54 ]
call ebx
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x54 ]
call [ GetWindowRect@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_43f85c
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
sub ecx eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
sub eax ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov ecx 0x80000000
cmp eax ecx
je r-xdata
push 0x0
push [ esi + 0x14 ]
push 0xc5
push 0x3e9
push [ esi + 0x54 ]
call ebx
cmp [ esi + 0xc ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
cmp [ esi ] 0x0
jle r-xdata
mov ebx [ esi + 0xc ]
cmp [ esi + 0x4 ] 0x0
jle r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
lea ecx [ esi + 0x24 ]
mov edx r--data
call sub_43d614
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_43f85c
test [ esi + 0x10 ] 0x40
je r-xdata
push [ esi + 0x24 ]
push [ esi + 0x54 ]
call edi
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x8 ]
sub eax [ ebp - 0x1c ]
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
jmp r-xdata
push 0x0
push edi
push [ ebp - 0x8 ]
push ebx
push ecx
push [ esi + 0x54 ]
call [ MoveWindow@IAT ]
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x54 ]
call [ GetClientRect@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_43f85c
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
shl eax 0x10
sub eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x5
push [ esi + 0x54 ]
call [ PostMessageW@IAT ]
fldz
fcomp [ esi + 0x18 ]
fnstsw ax
test ah 0x5
jpe r-xdata
mov eax [ ebp - 0x10 ]
sub eax edi
sub eax [ ebp - 0x18 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
test [ esi + 0x10 ] 0x80
mov edi [ ebp - 0x4 ]
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
fld [ esi + 0x18 ]
push 0x0
fmul [ r--data ]
call sub_471e16
push eax
push 0x40a
push [ esi + 0x54 ]
call [ SetTimer@IAT ]
mov [ esi + 0x58 ] eax
sub_43fa7b
push ebp
mov ebp esp
sub esp 0x200
push esi
mov esi ecx
push 0x3e9
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push 0x100
lea ecx [ ebp - 0x200 ]
push ecx
push eax
call [ GetWindowTextW@IAT ]
test [ esi + 0x10 ] 0x1
je r-xdata
fldz
fcomp [ esi + 0x18 ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp - 0x200 ] 0x0
jne r-xdata
lea eax [ ebp - 0x200 ]
push eax
lea ecx [ esi + 0x34 ]
call sub_407e53
push 0x1
push [ esi + 0x54 ]
call [ EndDialog@IAT ]
push 0x40a
push [ esi + 0x54 ]
call [ KillTimer@IAT ]
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
sub_43fafd
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] 0x1
mov esi ecx
je r-xdata
pop edi
pop esi
leave
retn 0xc
push ebx
push 0x1
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
push 0x2
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
cmp edi ecx
jle r-xdata
push 0x3e9
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov ebx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
cmp ebx ecx
jle r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp ebx edx
jle r-xdata
mov eax edi
mov edi ecx
mov ecx eax
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] ecx
push 0x3ea
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
pop ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
cmp ecx eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
cmp eax edx
jle r-xdata
mov eax ebx
mov ebx ecx
mov ecx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
sub ecx edi
mov edi [ ebp + 0x10 ]
push 0x0
sub edx ebx
push edx
push ecx
sub edi edx
sub edi 0xa
push edi
push 0xa
pop eax
sub eax ecx
cdq
sub eax edx
mov ecx eax
mov eax [ ebp + 0xc ]
push 0x4
pop ebx
cdq
idiv ebx
sar ecx 0x1
add ecx eax
push ecx
push [ ebp + 0x8 ]
call [ MoveWindow@IAT ]
mov eax ebx
mov ebx edx
mov edx eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] edx
push 0x1
push 0x0
push [ esi + 0x54 ]
call [ InvalidateRect@IAT ]
push 0x0
lea ecx [ edi - 0x5 ]
push ecx
mov ecx [ ebp + 0xc ]
add ecx 0xffffffec
push ecx
push 0xa
push 0xa
push eax
call [ MoveWindow@IAT ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
cmp edx ecx
jle r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] ecx
sub edx eax
sub ecx ebx
push 0x0
push edx
lea eax [ ecx + 0xa ]
cdq
push ecx
sub eax edx
mov ecx eax
mov eax [ ebp + 0xc ]
imul eax eax 0x3
push edi
push 0x4
cdq
pop ebx
idiv ebx
sar ecx 0x1
sub eax ecx
push eax
push [ ebp + 0x8 ]
call [ MoveWindow@IAT ]
mov [ ebp - 0xc ] edx
mov edx eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
push 0xfffffffb
pop eax
sub ecx edx
sub eax ecx
push 0x0
add edi eax
mov eax [ ebp + 0xc ]
push ecx
add eax 0xffffffec
push eax
push edi
push 0xa
push ebx
call [ MoveWindow@IAT ]
mov eax edx
mov edx ecx
mov ecx eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] ecx
sub_43fca2
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x40a
push esi
mov esi ecx
jne r-xdata
pop esi
pop ebp
retn 0x4
push r--data
lea ecx [ esi + 0x34 ]
call sub_407e53
push 0x3
push [ esi + 0x54 ]
call [ EndDialog@IAT ]
sub_43fce6
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ rw-data ]
sub eax 0x5
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax ecx
shr eax 0x10
push eax
movzx eax cx
push eax
push [ ebp + 0x10 ]
mov ecx edx
call sub_43fafd
sub eax 0x1f
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax + 0x18 ] 0xbe
mov [ eax + 0x1c ] 0x72
jmp r-xdata
sub eax 0xec
je r-xdata
xor eax eax
inc eax
cmp [ edx + 0x54 ] 0x0
jne r-xdata
dec eax
je r-xdata
mov ecx edx
call sub_43f898
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx + 0x54 ] eax
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
leave
retn 0x10
mov ecx edx
call sub_43fa7b
jmp r-xdata
dec eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx edx
call sub_43fca2
jmp r-xdata
mov ecx edx
call sub_43f87b
jmp r-xdata
sub_43fd7d
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi edx
cmp esi [ edi + 0x4 ]
jbe r-xdata
mov edx [ edi ]
mov ecx [ ecx ]
push esi
call sub_40b96c
pop ecx
test eax eax
jns r-xdata
mov esi [ edi + 0x4 ]
jne r-xdata
mov al 0x1
jmp r-xdata
xor al al
cmp esi [ edi + 0x4 ]
jb r-xdata
pop edi
pop esi
retn
sub_43fdab
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
push [ esi + 0x14 ]
call sub_43fdab
push ecx
mov ecx esi
call sub_401926
push [ esi + 0x18 ]
mov ecx edi
call sub_43fdab
sub_43fde5
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
push [ ebp + 0x8 ]
call sub_43fe7c
test al al
je r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_43fe1e
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_43fe7c
mov esi [ ebp + 0xc ]
push esi
mov ecx edi
call sub_40b933
test eax eax
jns r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x18 ] 0x0
and [ eax + 0x14 ] 0x0
jmp r-xdata
jle r-xdata
mov ecx [ esi + 0x14 ]
mov [ edi + 0x14 ] ecx
mov [ edi + 0x18 ] esi
and [ esi + 0x14 ] 0x0
jmp r-xdata
pop ebp
retn 0x8
mov eax esi
mov eax [ esi + 0x18 ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x14 ] esi
and [ esi + 0x18 ] 0x0
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_43fe7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x4 ] ecx
test al 0x1
jne r-xdata
xor al al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ ebp + 0xc ] ecx
push edi
or eax 0x1
mov [ rw-data ] eax
call sub_40d3d2
push sub_471f83
call sub_421b2a
pop ecx
mov ecx rw-data
pop esi
pop ebx
leave
retn 0x8
jle r-xdata
mov edi [ edi + 0x14 ]
test edi edi
je r-xdata
mov bl 0x1
mov edi [ edi + 0x18 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov al bl
mov ecx [ ecx + 0x18 ]
mov [ edx + 0x14 ] ecx
mov edx [ esi ]
mov ecx [ rw-data ]
mov [ edx + 0x14 ] ecx
mov edx [ esi ]
mov ecx [ rw-data ]
mov [ edx + 0x18 ] ecx
pop edi
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_43fd7d
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edi
call sub_43fd7d
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
mov [ edx + 0x14 ] eax
mov eax [ esi ]
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x14 ]
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x18 ]
mov [ ecx + 0x14 ] eax
mov eax [ esi ]
mov [ edi + 0x18 ] eax
mov [ esi ] edi
cmp [ edi + 0x14 ] ebx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ esi ]
mov [ ecx + 0x18 ] eax
mov eax [ esi ]
mov [ ebp + 0xc ] eax
mov eax [ eax + 0x18 ]
mov ecx [ esi ]
mov eax [ edi + 0x14 ]
mov [ ecx + 0x18 ] eax
mov eax [ esi ]
mov [ edi + 0x14 ] eax
mov [ esi ] edi
cmp [ edi + 0x18 ] ebx
je r-xdata
mov [ esi ] eax
jmp r-xdata
mov edi [ esi ]
mov ecx [ ebp + 0x8 ]
push edi
call sub_40b933
test eax eax
jns r-xdata
sub_43ff93
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_43fde5
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi + 0x10 ]
pop edi
pop esi
pop ebp
retn 0x4
push 0x1c
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_40d3d2
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_40c935
mov eax [ edi + 0x4 ]
mov [ esi + 0x10 ] eax
inc [ edi + 0x4 ]
and [ esi + 0x18 ] 0x0
and [ esi + 0x14 ] 0x0
push [ edi ]
push esi
call sub_43fe1e
mov [ edi ] eax
sub_43ffef
push ebx
push esi
push edi
mov esi edx
mov edi ecx
mov ebx [ esi + 0x4 ]
push edi
call sub_4218fb
pop ecx
cmp eax ebx
jne r-xdata
xor al al
mov edx [ esi ]
push ebx
mov ecx edi
call sub_40b96c
pop ecx
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44001d
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov [ esi ] r--data
lea ecx [ esi + 0x8 ]
lea eax [ ebp + 0xc ]
mov [ esi + 0x4 ] 0x1
xor ebx ebx
push eax
mov [ ecx + 0x8 ] ebx
call sub_4113a0
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] r--data
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] eax
mov eax [ eax + 0x8 ]
mov [ esi + 0x2c ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ VariantInit@IAT ]
push 0x9
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
pop ebx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_440341
dec ebx
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ VariantClear@IAT ]
lea ecx [ ebp + 0xc ]
call sub_412570
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x14
sub_4400b8
push esi
push edi
mov edi ecx
mov edx [ edi + 0x2c ]
mov [ edi ] r--data
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edx eax
jb r-xdata
mov eax [ edi + 0x28 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx * 4 + 0x4 ]
mov ecx [ ecx + edx * 4 ]
mov eax [ eax ]
mov [ ecx ] eax
inc edx
mov ecx [ edi + 0x28 ]
call sub_4041e7
lea ecx [ edi + 0x18 ]
call sub_440312
lea ecx [ edi + 0x18 ]
call sub_44009f
lea ecx [ edi + 0x8 ]
pop edi
pop esi
jmp sub_412570
sub_440106
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_44009f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_44016d
push esi
push edi
mov edi ecx
xor esi esi
mov eax [ edi + 0x1c ]
push [ eax + esi ]
call [ VariantClear@IAT ]
add esi 0x4
cmp esi 0x24
jl r-xdata
pop edi
pop esi
retn
sub_44018a
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x10
push esi
push edi
test eax eax
je r-xdata
mov eax 0x80020006
mov edi [ ebp + 0x1c ]
test edi edi
je r-xdata
push [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_40caee
lea ecx [ ebp - 0x10 ]
call sub_40b8a7
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
xor esi esi
lea ecx [ ebp - 0x10 ]
mov [ edi ] esi
call sub_405cd3
xor eax eax
jmp r-xdata
inc esi
cmp esi 0xc
jb r-xdata
pop edi
pop esi
leave
retn 0x18
mov ecx [ esi * 4 + rw-data ]
lea edx [ ebp - 0x10 ]
call sub_43ffef
test al al
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
sub_440230
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax ecx
sub eax 0x9
je r-xdata
mov eax 0x80020003
dec eax
je r-xdata
cmp ecx 0x8
ja r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp + 0x20 ]
mov eax [ eax + 0x1c ]
push [ eax + ecx * 4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_4402ad
jmp r-xdata
pop ebp
retn 0x24
sub_44026b
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx r--data
call sub_43a6e8
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
xor eax eax
pop esi
mov ecx [ ebp + 0xc ]
mov edx r--data
call sub_43a6e8
test eax eax
jne r-xdata
mov eax 0x80004002
jmp r-xdata
pop ebp
retn 0xc
sub_4402ad
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
test [ ebp + 0x8 ] 0x2
je r-xdata
mov eax 0x8002000e
jmp r-xdata
mov eax 0x80020003
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
pop ebp
retn 0x10
xor eax eax
jmp r-xdata
mov eax 0x80020009
jmp r-xdata
sub_4402ea
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
push ecx
mov ecx esi
call sub_440144
sub_440312
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push ecx
call sub_440125
sub_440341
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x10
call sub_42010a
pop ecx
test eax eax
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edx edx
push [ ebp + 0x8 ]
mov ecx eax
call sub_439f5e
mov edx eax
jmp r-xdata
push edi
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
sub_4403e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov [ esi ] r--data
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
lea ebx [ esi + 0x20 ]
mov [ ebx ] edi
mov [ esi + 0x24 ] 0x1
mov eax [ ecx ]
mov [ esi + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x30 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0x34 ] eax
inc [ eax ]
mov eax [ ebp + 0x18 ]
mov [ esi + 0x38 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x3c ] eax
lea ecx [ esi + 0x40 ]
mov [ esi + 0x48 ] edi
call sub_4113a0
cmp [ esi + 0x4c ] 0x8
jne r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ esi + 0x40 ]
mov [ esi + 0x4 ] 0x80004003
mov eax [ edi ]
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push edi
call [ eax ]
test eax eax
js r-xdata
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
lea eax [ esi + 0x10 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx edi
call sub_43b064
pop ecx
pop ecx
test eax eax
js r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x14
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
push ebx
mov ecx [ eax ]
lea edx [ esi + 0x10 ]
push edx
push eax
call [ ecx + 0x10 ]
test eax eax
js r-xdata
mov eax [ ebx ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx ]
lea edx [ esi + 0x8 ]
mov ecx [ eax ]
push edx
push esi
push eax
call [ ecx + 0x14 ]
sub_4404fb
push esi
mov esi ecx
mov [ esi ] r--data
call sub_440e20
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x40 ]
call sub_412570
lea ecx [ esi + 0x28 ]
pop esi
jmp sub_405cd3
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_440527
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_440fb2
mov eax [ ebx + 0x8 ]
cmp [ esi + 0xc ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
xor ebx ebx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push 0x8
pop edx
cmp eax edx
jb r-xdata
pop edi
push 0x10
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
je r-xdata
mov edx eax
xor edi edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx * 4 ]
and [ edi + 0x8 ] 0x0
push ecx
mov ecx edi
call sub_4113a0
jmp r-xdata
mov [ esi + 0x4 ] edi
push [ esi + 0x4 ]
call j_sub_4228ca#2
pop ecx
mov eax [ esi + 0x4 ]
mov [ eax + ebx * 4 ] edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
sub_4405db
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4404c9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_4405fa
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4404e2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_440657
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x70 ]
mov eax [ edi + 0x28 ]
mov [ esp + 0x70 ] eax
mov eax [ edi + 0x2c ]
mov [ esp + 0x74 ] eax
mov eax [ edi + 0x30 ]
mov [ esp + 0x78 ] eax
mov eax [ edi + 0x34 ]
mov [ esp + 0x7c ] eax
inc [ eax ]
lea eax [ ebp + 0xc ]
push eax
mov [ esp + 0x40 ] edi
call sub_407b4b
mov eax [ ebp + 0x8 ]
push [ esp + 0x70 ]
mov eax [ eax + 0x8 ]
lea ecx [ esp + 0x5c ]
mov [ esp + 0x18 ] eax
call sub_40caee
mov ecx [ edi + 0x3c ]
lea eax [ esp + 0x58 ]
push eax
call sub_41cf79
mov esi eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x30 ] esi
call sub_405cd3
xor ebx ebx
test esi esi
je r-xdata
lea ecx [ esp + 0x70 ]
call sub_405cd3
lea ecx [ ebp + 0xc ]
call sub_405cd3
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ esi + 0x20 ] bl
je r-xdata
mov ecx [ edi + 0x38 ]
cmp [ ecx ] 0x40
jne r-xdata
mov ecx [ edi + 0x3c ]
mov eax [ esi + 0x10 ]
mov [ ecx + 0xf4 ] eax
push [ esi + 0x10 ]
mov [ esp + 0x38 ] ebx
call sub_405554
mov edx [ esp + 0x14 ]
mov ecx edx
shl ecx 0x4
mov [ esp + 0xc ] eax
mov eax ebx
push 0x4
mov [ esp + 0x1c ] ecx
mov [ esp + 0x5c ] r--data
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
pop esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x80 ] r--data
mov [ esp + 0x84 ] ebx
mov [ esp + 0x88 ] ebx
mov [ esp + 0x8c ] ebx
mov [ esp + 0x40 ] r--data
mov [ esp + 0x1c ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x68 ] 0x47
mov [ esp + 0x6c ] 0x48
mov [ esp + 0x38 ] 0x40
mov ecx ebx
lea esi [ edi + 0x40 ]
mov [ esp + 0x40 ] r--data
cmp [ esi + 0xc ] 0x8
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] 0x1
jne r-xdata
call sub_440fe1
mov [ esp + 0x13 ] bl
cmp ecx [ eax + 0x14 ]
jge r-xdata
cmp ecx edx
jge r-xdata
mov eax ebx
mov eax [ esi ]
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_412570
mov [ esp + 0x20 ] ebx
mov [ esp + 0x2c ] 0x1
mov eax [ esp + 0xc ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + esi * 4 ]
jmp r-xdata
push [ eax + 0x10 ]
call sub_40109f
mov eax [ esp + 0x30 ]
push 0x4
cmp [ eax + 0x14 ] 0x1
pop esi
mov [ esp + 0x54 ] 0x1
jl r-xdata
mov eax [ esp + 0x30 ]
mov edi [ esp + 0x14 ]
mov eax [ eax + 0x14 ]
cmp eax edi
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov esi edi
shl esi 0x4
mov eax [ eax + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
lea ecx [ esp + 0x20 ]
call sub_412570
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x30 ] 0x6
mov [ esp + 0x24 ] esi
call sub_41baef
lea eax [ esp + 0x70 ]
push eax
lea ecx [ esp + 0x94 ]
call sub_408182
lea eax [ esp + 0x90 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_41baef
lea ecx [ esp + 0x90 ]
call sub_412570
mov edi [ esp + 0x14 ]
dec edi
js r-xdata
mov eax [ esp + 0x30 ]
cmp ecx [ eax + 0x14 ]
jl r-xdata
mov eax [ ecx ]
cmp [ eax + 0x8 ] bx
je r-xdata
mov esi ebx
mov eax [ esp + 0x5c ]
mov [ esp + 0x1c ] eax
mov ecx [ esp + 0x3c ]
lea eax [ esp + 0x40 ]
mov ecx [ ecx + 0x38 ]
push eax
call sub_441006
lea ecx [ esp + 0x20 ]
call sub_412570
lea ecx [ esp + 0x40 ]
sub eax edi
mov esi ebx
test eax eax
jle r-xdata
mov eax [ ebx ]
add eax esi
push eax
lea ecx [ esp + 0x24 ]
call sub_44a6f6
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_41baef
sub esi 0x10
dec edi
jns r-xdata
xor ebx ebx
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov ecx [ esp + 0xc ]
inc esi
mov eax [ ecx + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
mov ecx rw-data
call sub_401188
lea ecx [ esp + 0x40 ]
call sub_407da8
lea ecx [ esp + 0x80 ]
call sub_4404e2
lea ecx [ esp + 0x20 ]
call sub_412570
lea ecx [ esp + 0x58 ]
jmp r-xdata
mov eax [ esp + 0x84 ]
sub eax esi
mov [ esp + 0x38 ] eax
mov eax [ ecx ]
cmp [ eax + 0x8 ] bx
je r-xdata
lea eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x5c ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] 0x1
call sub_41baef
lea ecx [ esp + 0x58 ]
call sub_412570
mov eax [ esp + 0x30 ]
inc esi
mov eax [ eax + 0x14 ]
sub eax edi
cmp esi eax
jl r-xdata
mov eax [ ecx ]
cmp [ eax ] 0x24
jne r-xdata
mov eax [ ecx ]
mov edi [ ecx + 0x4 ]
mov eax [ eax ]
cmp eax [ edi ]
mov edi [ esp + 0x3c ]
je r-xdata
cmp [ esp + 0x34 ] edx
jge r-xdata
mov edi [ esp + 0xc ]
inc esi
mov eax [ edi + 0x4 ]
mov ecx ebx
lea edi [ eax + esi * 4 ]
call sub_4404c9
mov ecx [ edx + 0x8 ]
mov eax [ esp + 0x38 ]
inc ebx
add esi 0x4
mov [ esp + 0x1c ] esi
cmp ebx ecx
jb r-xdata
sub ecx ebx
sub esp 0x10
lea esi [ ecx - 0x1 ]
shl esi 0x4
add esi [ edx ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ esp + 0x2c ]
push [ esi ]
call sub_440e42
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
cmp [ eax ] 0x24
je r-xdata
xor edi edi
inc edi
mov ecx ebx
lea edx [ edx + esi * 4 ]
cmp [ eax ] 0x1e
jne r-xdata
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov eax [ esp + 0xc ]
mov ecx [ edi + 0x3c ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
call sub_44d520
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x18 ]
mov eax [ eax ]
add ecx 0xfffffff0
add eax ecx
push eax
lea ecx [ esp + 0x24 ]
call sub_44a6f6
jmp r-xdata
cmp ax [ esp + 0x6c ]
jne r-xdata
inc ecx
jmp r-xdata
mov eax [ eax + esi ]
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
inc esi
add ecx 0x4
cmp [ eax ] 0x1e
jne r-xdata
cmp ax [ esp + 0x6c ]
jne r-xdata
inc ecx
jmp r-xdata
inc esi
add ecx 0x4
lea eax [ esp + 0x13 ]
push eax
lea ecx [ esp + 0x84 ]
call sub_41bc5c
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x5c ]
call sub_41baef
mov ecx [ esp + 0x34 ]
sub [ esp + 0x18 ] 0x10
mov edx [ esp + 0x14 ]
inc ecx
mov [ esp + 0x34 ] ecx
inc esi
jmp r-xdata
cmp ax [ esp + 0x38 ]
jne r-xdata
dec ecx
jns r-xdata
inc esi
add edi 0x4
jmp r-xdata
mov eax 0x100
mov [ esp + 0x18 ] eax
cmp ax [ esp + 0x38 ]
jne r-xdata
dec ecx
jns r-xdata
inc edi
jmp r-xdata
test ecx ecx
je r-xdata
mov edi [ esp + 0x3c ]
mov eax [ edi ]
movzx eax [ eax + 0x8 ]
cmp ax [ esp + 0x68 ]
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov [ esp + 0x14 ] edi
mov edi [ esp + 0x3c ]
cmp [ esp + 0x54 ] eax
jle r-xdata
add edx 0x4
mov eax [ edx ]
movzx eax [ eax + 0x8 ]
cmp ax [ esp + 0x68 ]
jne r-xdata
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x4 ]
lea ecx [ esp + 0x40 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_405b47
mov eax [ esp + 0x18 ]
push 0x1
or eax 0x200
push eax
mov eax [ esp + 0x24 ]
push [ eax ]
mov ecx [ edi + 0x3c ]
lea eax [ esi + 0x2 ]
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x14 ]
add eax esi
push eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x58 ]
push eax
push [ esp + 0x18 ]
call sub_40fa40
test eax eax
js r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x18 ] ebx
mov edx [ eax + 0x4 ]
lea ecx [ edx + esi * 4 ]
jmp r-xdata
mov esi [ esp + 0x44 ]
mov [ esp + 0x1c ] esi
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_407da8
lea ecx [ esp + 0x80 ]
call sub_4404e2
lea ecx [ esp + 0x20 ]
call sub_412570
lea ecx [ esp + 0x58 ]
call sub_4404c9
mov ebx 0x80004005
jmp r-xdata
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x40 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_405b47
mov eax [ esp + 0x18 ]
push 0x1
or eax 0x200
push eax
lea eax [ esp + 0x28 ]
push eax
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_412570
lea eax [ edi + 0x40 ]
push r--data
lea ecx [ esp + 0x94 ]
mov [ esp + 0x30 ] 0x6
mov [ esp + 0x24 ] eax
call sub_40caee
mov eax [ esp + 0x2c ]
sub eax 0x6
neg eax
sbb eax eax
not eax
and eax [ esp + 0x20 ]
push 0x1
push ebx
push eax
lea eax [ esp + 0x9c ]
push eax
call sub_40d380
lea ecx [ esp + 0x90 ]
call sub_405cd3
mov eax [ esp + 0x30 ]
mov ecx [ edi + 0x3c ]
mov eax [ eax + 0x10 ]
push ebx
push ebx
inc eax
push eax
call sub_401000
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_40d380
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x54 ]
add [ esp + 0x1c ] 0x4
inc eax
add esi eax
mov eax [ esp + 0x30 ]
inc edx
mov [ esp + 0x54 ] edx
cmp edx [ eax + 0x14 ]
jle r-xdata
sub_440c96
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x10
push esi
test eax eax
je r-xdata
mov eax 0x80020006
mov esi [ ebp + 0x1c ]
test esi esi
je r-xdata
push [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_40caee
lea ecx [ ebp - 0x10 ]
call sub_40b8a7
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_41f885
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
xor eax eax
jmp r-xdata
mov [ esi ] 0xfffffc19
pop esi
leave
retn 0x18
sub_440cf6
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ecx ] eax
xor eax eax
mov eax 0x80070057
jmp r-xdata
pop ebp
retn 0x10
sub_440d15
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov eax 0x80070057
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0xc ] ecx
setne cl
xor eax eax
mov [ edx ] ecx
jmp r-xdata
pop ebp
retn 0x8
sub_440d39
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0xfffffc19
push esi
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_440e20
xor eax eax
and [ ebp + 0x8 ] 0x0
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push [ ebp + 0xc ]
push ecx
call [ eax + 0x1c ]
test eax eax
js r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub esp 0x10
mov ecx esp
push [ ebp + 0x8 ]
call sub_40caee
push [ ebp + 0x1c ]
mov ecx esi
call sub_440657
push [ ebp + 0x8 ]
mov esi eax
call [ SysFreeString@IAT ]
mov eax esi
jmp r-xdata
pop esi
leave
retn 0x24
sub_440da7
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov edx r--data
call sub_43a6e8
mov esi [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
xor eax eax
mov ecx [ ebp + 0xc ]
mov edx r--data
call sub_43a6e8
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
lea edx [ esi + 0x10 ]
call sub_43a6e8
test eax eax
jne r-xdata
mov eax 0x80004002
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_440df8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x24 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
push ecx
mov ecx esi
call sub_440619
sub_440e20
push esi
mov esi ecx
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
and [ esi + 0x20 ] 0x0
pop esi
retn
push [ esi + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x18 ]
mov eax [ esi + 0x20 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_440e42
push ebp
mov ebp esp
sub esp 0x20
test [ ebp + 0xc ] 0x4000
push esi
je r-xdata
pop esi
leave
retn 0x14
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0xc ] esi
call sub_40d2d2
mov eax [ ebp + 0xc ]
and eax 0xfff
add eax 0xfffffffe
cmp eax 0x17
ja r-xdata
movzx eax [ eax + lookup_table_440f9a ]
jmp [ eax * 4 + jump_table_440f6e ]
mov ecx [ ebp - 0x8 ]
call sub_405372
movzx ecx al
neg ecx
sbb ecx ecx
cmp [ ebp + 0x14 ] esi
je r-xdata
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_43a1e8
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x14 ]
call [ VariantCopyInd@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40cdb4
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40d00b
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40cdb4
mov ecx [ ebp + 0x14 ]
mov [ ecx ] ax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40cdb4
movzx ecx al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_412620
mov eax [ ebp + 0x14 ]
fstp [ eax ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_412620
mov eax [ ebp + 0x14 ]
fstp [ eax ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x8
jne r-xdata
mov esi [ ebp - 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
push [ ebp + 0x14 ]
call [ SysReAllocString@IAT ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] cx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x8 ]
mov [ eax ] ecx
mov esi [ eax ]
sub_440fb2
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push ecx
call sub_44062e
sub_440fe1
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4 ]
mov ecx eax
mov edi [ eax + 0x10 ]
test ecx ecx
je r-xdata
dec [ esi ]
mov [ esi + 0x4 ] edi
test edi edi
jne r-xdata
push ecx
call sub_4405c6
pop edi
pop esi
retn
and [ esi + 0x8 ] edi
sub_441006
push ebp
mov ebp esp
push esi
push edi
push 0x14
mov esi ecx
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor edi edi
mov ecx eax
call sub_4403cc
mov edi eax
jmp r-xdata
mov [ esi + 0x4 ] edi
mov eax [ esi + 0x8 ]
mov [ eax + 0x10 ] edi
jmp r-xdata
push [ ebp + 0x8 ]
and [ edi + 0x10 ] 0x0
mov ecx edi
call sub_440527
cmp [ esi + 0x4 ] 0x0
je r-xdata
inc [ esi ]
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_441050
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov ebx ecx
push edi
mov [ ebx ] r--data
xor eax eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
mov ecx r--data
mov esi ecx
push [ ebp + 0xc ]
lea edi [ ebx + 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebx + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
mov [ ebx + 0x38 ] 0x1
call sub_441255
test eax eax
js r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebx + 0x28 ]
push eax
push 0x5
xor esi esi
push esi
lea eax [ ebx + 0x18 ]
push eax
mov [ ebp - 0x4 ] esi
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
push [ ebp - 0x4 ]
mov ecx ebx
call sub_4412f6
cmp [ ebx + 0x8 ] esi
jne r-xdata
mov [ ebx + 0x4 ] 0x80040154
push 0x1
call [ SetErrorMode@IAT ]
push r--data
push edi
mov esi eax
mov [ ebx + 0x10 ] edi
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
je r-xdata
mov [ ebx + 0x4 ] 0x80004002
jmp r-xdata
mov [ ebx + 0x4 ] 0x8002802f
mov ecx ebx
call sub_4413d1
test eax eax
js r-xdata
push esi
call [ SetErrorMode@IAT ]
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebx + 0x18 ]
push eax
call edi
test eax eax
js r-xdata
mov [ ebx + 0x4 ] 0x80040111
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebx + 0x28 ]
push edx
push 0x0
push ecx
call [ eax + 0xc ]
test eax eax
js r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x80004002
push [ ebp - 0x4 ]
mov ecx ebx
call sub_4412f6
sub_441199
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
mov ecx esi
call sub_4414df
mov ecx [ esi + 0xc ]
pop esi
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_441228
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x1c ]
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x14 ]
jmp r-xdata
pop ebp
retn 0x18
sub_441255
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push 0x0
lea edx [ ebx + 0x18 ]
call sub_43a857
pop ecx
test eax eax
js r-xdata
mov [ ebx + 0x4 ] 0x800401f3
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebx + 0x28 ]
push eax
push [ ebp + 0xc ]
call [ IIDFromString@IAT ]
test eax eax
jns r-xdata
push esi
push edi
lea edi [ ebx + 0x28 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
pop ebx
pop ebp
retn 0x8
mov [ ebx + 0x4 ] 0x800401f4
jmp r-xdata
sub_4412ae
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x10 ]
jmp r-xdata
pop ebp
retn 0x10
sub_4412d5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0xc ]
mov eax [ ecx ]
push ecx
call [ eax + 0xc ]
jmp r-xdata
pop ebp
retn 0x8
sub_4412f6
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_43ae84
mov edx [ edi ]
lea eax [ esi + 0x8 ]
push eax
push r--data
push edi
call [ edx ]
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_441321
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x28 ]
mov eax [ ecx ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x18 ]
jmp r-xdata
pop ebp
retn 0x24
sub_44137b
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_4413a6
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_4413d1
push ebp
mov ebp esp
sub esp 0x218
lea eax [ ebp - 0x218 ]
push ebx
push esi
push edi
push 0x104
mov esi ecx
push eax
push [ esi + 0x10 ]
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x80004005
lea edi [ esi + 0xc ]
push edi
push 0x2
lea eax [ ebp - 0x218 ]
push eax
call [ LoadTypeLibEx@IAT ]
test eax eax
js r-xdata
mov [ esi + 0x4 ] 0x80029c4a
jmp r-xdata
xor ebx ebx
push ebx
lea eax [ ebp - 0x218 ]
push eax
push [ edi ]
call [ RegisterTypeLib@IAT ]
test eax eax
js r-xdata
mov eax [ esi + 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_441357
test al al
je r-xdata
mov [ esi + 0x14 ] 0x2
jmp r-xdata
mov [ esi + 0x4 ] 0x8002801c
push ebx
lea eax [ ebp - 0x218 ]
push eax
push [ edi ]
lea ecx [ ebp - 0xc ]
call sub_4411c5
call eax
test eax eax
js r-xdata
push [ ebp - 0xc ]
call [ FreeLibrary@IAT ]
jmp r-xdata
mov [ esi + 0x14 ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
sub_441494
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push ecx
call [ eax ]
jmp r-xdata
pop ebp
retn 0xc
sub_4414b7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x38 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
push ecx
mov ecx esi
call sub_4411f5
sub_4414df
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
lea ecx [ ebp - 0x4 ]
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x1c ]
test eax eax
js r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
cmp [ esi + 0x14 ] 0x2
jne r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_441369
test al al
je r-xdata
mov eax [ esi + 0xc ]
push [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x30 ]
mov ecx [ ebp - 0x4 ]
push [ ecx + 0x14 ]
movzx eax [ ecx + 0x1a ]
push [ ecx + 0x10 ]
push eax
movzx eax [ ecx + 0x18 ]
push eax
push ecx
call [ UnRegisterTypeLib@IAT ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
push [ ecx + 0x14 ]
movzx eax [ ecx + 0x1a ]
push [ ecx + 0x10 ]
push eax
movzx eax [ ecx + 0x18 ]
push eax
push ecx
lea ecx [ ebp - 0x10 ]
call sub_4411dd
call eax
push [ ebp - 0x10 ]
call [ FreeLibrary@IAT ]
jmp r-xdata
sub_44157b
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] ebx
lea esi [ edi + 0x1c ]
mov [ edi ] r--data
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov [ esi ] ebx
mov [ edi + 0x20 ] 0x1
mov [ edi + 0x24 ] eax
cmp [ ebp + 0xc ] ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push [ ebp + 0xc ]
call sub_44220c
push esi
push 0x800
push [ edi + 0x10 ]
call [ CreateDispTypeInfo@IAT ]
test eax eax
js r-xdata
cmp [ esi ] ebx
je r-xdata
mov ecx edi
call sub_4420f7
lea eax [ ebp + 0xc ]
push eax
push [ esi ]
mov esi [ ebp + 0x8 ]
push esi
push ebx
call [ CreateStdDispatch@IAT ]
test eax eax
js r-xdata
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
push edx
mov [ edi + 0x14 ] esi
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ecx ]
mov esi eax
call [ edx + 0x8 ]
test esi esi
js r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
sub_441622
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x10 ]
push edi
xor edi edi
cmp [ eax + 0x4 ] edi
jbe r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
push [ esi + 0x8 ]
call j_sub_4228ca#2
push [ esi + 0xc ]
call j_sub_4228ca#2
push [ esi + 0x10 ]
call j_sub_4228ca#2
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
pop edi
mov eax [ esi + 0x8 ]
push [ eax + edi * 4 ]
call j_sub_4228ca#2
mov eax [ esi + 0x10 ]
inc edi
pop ecx
cmp edi [ eax + 0x4 ]
jb r-xdata
pop esi
retn
mov eax [ esi + 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_441693
push esi
push sub_43a22b
lea esi [ ecx - 0x4 ]
push [ esi ]
push 0x10
pop edx
call sub_4057d8
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_4416c8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
add esi 0x20
mov ecx [ esi - 0x8 ]
test ecx ecx
je r-xdata
push esi
call [ InterlockedIncrement@IAT ]
mov eax [ ecx ]
push ecx
call [ eax + 0x4 ]
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
sub_4416f1
push ebp
mov ebp esp
mov ax [ ebp + 0xc ]
sub esp 0x64
push ebx
push esi
xor ebx ebx
push edi
cmp ax 0x1f
jne r-xdata
cmp ax 0x1e
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
cmp ax 0x8
jne r-xdata
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x8 ]
push ebx
push 0xffffffff
push eax
push ebx
push ebx
mov ebx [ MultiByteToWideChar@IAT ]
mov [ ebp + 0xc ] eax
call ebx
xor ecx ecx
push 0x2
pop edx
mov edi eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push edi
mov esi eax
push esi
push 0xffffffff
push [ ebp + 0xc ]
xor eax eax
push eax
push eax
call ebx
push esi
call [ SysAllocString@IAT ]
push esi
mov ebx eax
call j_sub_4228ca#2
pop ecx
jmp r-xdata
push ebx
jmp r-xdata
mov ebx eax
cmp ax 0x48
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8 ]
push esi
call [ SysAllocString@IAT ]
push esi
mov ebx eax
call [ SysFreeString@IAT ]
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x8
call [ SysAllocString@IAT ]
mov ebx eax
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
mov esi [ esi + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x28
lea eax [ ebp - 0x60 ]
movsd [ edi ] [ esi ]
push eax
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
sub_4417c8
push ebp
mov ebp esp
mov ax [ ebp + 0xc ]
sub esp 0x50
push ebx
xor ebx ebx
push esi
cmp ax 0x1f
jne r-xdata
cmp ax 0x1e
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
cmp ax 0x8
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
mov eax [ eax + 0x8 ]
push ebx
mov eax [ eax ]
push ebx
push 0xffffffff
push eax
push ebx
push ebx
mov ebx [ MultiByteToWideChar@IAT ]
mov [ ebp + 0xc ] eax
call ebx
xor ecx ecx
push 0x2
pop edx
mov edi eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push edi
mov esi eax
push esi
push 0xffffffff
push [ ebp + 0xc ]
xor eax eax
push eax
push eax
call ebx
push esi
call [ SysAllocString@IAT ]
push esi
mov ebx eax
call j_sub_4228ca#2
pop ecx
pop edi
jmp r-xdata
push ebx
jmp r-xdata
mov ebx [ eax ]
cmp ax 0x48
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov esi [ eax ]
push esi
call [ SysAllocString@IAT ]
push esi
mov ebx eax
call [ SysFreeString@IAT ]
jmp r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn 0x8
call [ SysAllocString@IAT ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push 0x28
lea ecx [ ebp - 0x50 ]
push ecx
push [ eax + 0x8 ]
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
sub_441898
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4428c8
push edi
mov esi eax
call [ VariantClear@IAT ]
push 0x1e
pop eax
mov [ edi ] ax
mov [ edi + 0x8 ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4418c0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_442978
push edi
mov esi eax
call [ VariantClear@IAT ]
push 0x1f
pop eax
mov [ edi ] ax
mov [ edi + 0x8 ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4418e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ ebx ] 0x4
call sub_442caa
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ax
mov ecx 0xffff
cmp ax cx
jne r-xdata
pop ebx
pop ebp
retn 0xc
push esi
push edi
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov esi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push [ ebp + 0x8 ]
mov edi eax
push edi
call [ lstrcpyW@IAT ]
xor eax eax
xor ecx ecx
mov [ edi + esi * 2 ] ax
mov esi ecx
cmp [ edi ] cx
je r-xdata
push edi
call j_sub_4228ca#2
pop ecx
pop edi
pop esi
mov eax edi
lea eax [ edi + 0x2 ]
push r--data
lea eax [ eax + esi * 2 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
inc esi
lea eax [ edi + esi * 2 ]
cmp [ eax ] cx
jne r-xdata
xor eax eax
push edi
mov [ edi + esi * 2 ] ax
call sub_442caa
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ ebx ] 0x1
cmp [ eax ] 0x3a
je r-xdata
jmp r-xdata
sub_4419a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
mov edx esi
cmp [ ecx ] si
je r-xdata
pop esi
pop ebp
retn 0x8
push ebx
push edi
push 0x2c
pop ebx
push 0x2e
mov eax ecx
pop edi
cmp [ eax ] di
jne r-xdata
cmp [ eax ] bx
jne r-xdata
inc edx
lea eax [ ecx + edx * 2 ]
cmp [ eax ] si
jne r-xdata
mov [ eax ] bx
mov [ eax ] di
jmp r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
pop edi
pop ebx
sub_4419e1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x1c ]
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x14 ]
jmp r-xdata
pop ebp
retn 0x18
sub_441a0e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x10 ]
jmp r-xdata
pop ebp
retn 0x10
sub_441a35
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0xc ]
mov eax [ ecx ]
push ecx
call [ eax + 0xc ]
jmp r-xdata
pop ebp
retn 0x8
sub_441a56
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ebp + 0xc ]
sub esp 0x5c
push ebx
push esi
push edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
xor edi edi
cmp [ eax + 0x18 ] edi
je r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov eax 0x80004001
mov edx [ ebp + 0x1c ]
imul ecx ecx 0x1c
mov edx [ edx + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x20 ] ecx
cmp edx [ eax + ecx + 0x30 ]
jne r-xdata
mov eax 0x80020003
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
mov eax 0x8002000e
jmp r-xdata
mov esi edx
mov [ esp + 0x18 ] esi
mov ebx edi
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov esi [ ebp + 0x20 ]
test esi esi
je r-xdata
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov [ esp + 0x28 ] eax
xor ecx ecx
push 0x4
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push 0x10
mov [ esp + 0x30 ] eax
pop ecx
xor ebx ebx
mov eax esi
mul ecx
seto bl
xor ecx ecx
push 0x4
neg ebx
or ebx eax
pop eax
add ebx eax
setb cl
neg ecx
or ecx ebx
push ecx
call sub_42010a
mov ebx [ esp + 0x1c ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x24
mov eax [ eax + 0xc ]
pop esi
mov eax [ eax + ecx + 0x20 ]
cmp [ eax + ebx * 8 + 0x4 ] si
mov esi [ esp + 0x18 ]
jne r-xdata
mov eax 0x80020010
jmp r-xdata
push esi
call [ VariantClear@IAT ]
push 0x13
pop eax
mov [ esi ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ esi + 0x8 ] eax
xor eax eax
jmp r-xdata
mov [ esp + 0x1c ] edi
push sub_43a215
push ebx
mov [ eax ] esi
lea esi [ eax + 0x4 ]
push 0x10
pop edx
mov ecx esi
mov [ esp + 0x24 ] esi
call sub_41ac65
jmp r-xdata
inc ebx
cmp ebx edx
jb r-xdata
mov eax [ ebp + 0x1c ]
push 0x24
mov esi [ eax + 0x8 ]
sub esi ebx
dec esi
shl esi 0x4
add esi [ eax ]
pop eax
cmp [ esi ] ax
jne r-xdata
lea eax [ esp + 0x48 ]
push eax
call [ VariantInit@IAT ]
mov eax [ ebp + 0x8 ]
mov edx [ esp + 0x20 ]
mov ecx [ eax + 0xc ]
mov [ esp + 0x50 ] edi
mov [ esp + 0x54 ] edi
movzx eax [ ecx + edx + 0x36 ]
test eax 0x4000
jne r-xdata
mov ecx [ esp + 0x10 ]
or ebx 0xffffffff
xor ecx ecx
push 0x4
pop edx
mov eax ebx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov [ esp + 0x10 ] eax
xor ecx ecx
push 0x4
pop edx
mov eax ebx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov edx eax
mov eax edi
pop ecx
mov [ esp + 0x30 ] edx
mov [ esp + 0x3c ] edi
cmp [ esp + 0x24 ] eax
jbe r-xdata
mov eax 0x80020008
jmp r-xdata
lea eax [ esp + 0x58 ]
push eax
call [ VariantInit@IAT ]
mov eax [ esi + 0xc ]
lea edx [ esp + 0x58 ]
push edx
push edi
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] edi
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x28 ]
mov eax [ esp + 0x60 ]
test eax eax
jle r-xdata
push 0x15
pop eax
push 0x1e
pop esi
cmp ax si
je r-xdata
lea eax [ esp + 0x34 ]
push eax
push [ esp + 0x30 ]
lea eax [ esp + 0x48 ]
push [ esp + 0x30 ]
push ecx
push esi
push eax
push edx
call sub_442adc
mov eax [ esp + 0x40 ]
mov ebx [ esp + 0x34 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov [ esp + 0x44 ] 0x4024
cmp ax [ esp + 0x44 ]
je r-xdata
lea eax [ esp + 0x58 ]
push eax
call [ VariantClear@IAT ]
mov esi [ esp + 0x18 ]
dec eax
add esi eax
lea eax [ esp + 0x58 ]
push eax
mov [ esp + 0x1c ] esi
call [ VariantClear@IAT ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
mov ebx edi
cmp [ esp + 0x24 ] ebx
jbe r-xdata
push esi
call [ VariantClear@IAT ]
mov ecx [ ebx + 0xc ]
mov eax [ esp + 0x20 ]
movzx ecx [ ecx + eax + 0x36 ]
test ecx 0x4000
je r-xdata
push 0x1f
pop esi
cmp ax si
je r-xdata
push 0x1f
pop ecx
cmp ax cx
jne r-xdata
push [ esp + 0x38 ]
mov eax ebx
shl eax 0x4
add eax esi
push eax
push edx
mov [ esp + 0x40 ] eax
call sub_4429cb
test eax eax
jne r-xdata
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x20 ]
mov eax [ eax + 0xc ]
mov eax [ eax + ecx + 0x20 ]
movzx ecx [ eax + ebx * 8 + 0x4 ]
mov eax [ ebp + 0x1c ]
mov [ esp + 0x3c ] ecx
mov esi [ eax + 0x8 ]
sub esi ebx
dec esi
shl esi 0x4
add esi [ eax ]
test ecx 0x4000
je r-xdata
push 0x1e
mov eax ecx
pop edx
cmp eax edx
jl r-xdata
cmp [ esp + 0x50 ] edi
je r-xdata
push 0x48
pop esi
cmp ax si
jne r-xdata
push 0x1e
pop ecx
cmp ax cx
jne r-xdata
mov eax ebx
shl eax 0x4
add eax esi
push eax
mov [ esp + 0x18 ] 0x8
call sub_4418c0
mov eax [ esp + 0x14 ]
push 0x48
pop eax
push [ esp + 0x34 ]
cmp [ esp + 0x3c ] ax
jne r-xdata
push [ esp + 0x28 ]
call j_sub_4228ca#2
pop ecx
push [ esp + 0x2c ]
call j_sub_4228ca#2
mov eax [ esp + 0x20 ]
pop ecx
test eax eax
je r-xdata
push [ ebx + edi * 4 ]
call j_sub_4228ca#2
inc edi
pop ecx
cmp edi esi
jb r-xdata
push 0x1f
pop eax
cmp cx ax
je r-xdata
mov eax [ esp + 0x30 ]
mov eax [ eax + ebx * 4 ]
shl eax 0x4
add eax [ esp + 0x1c ]
cmp [ eax + 0x8 ] edi
je r-xdata
lea eax [ esp + 0x48 ]
push eax
push esi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
push 0x1f
pop edx
cmp eax edx
jle r-xdata
mov [ esp + 0x48 ] cx
and ecx 0xfff
push ecx
push esi
lea eax [ esp + 0x50 ]
push eax
call sub_442a49
jmp r-xdata
lea esi [ esp + 0x48 ]
push esi
mov esi [ esp + 0x30 ]
push esi
mov esi [ esp + 0x30 ]
push esi
push ebx
mov ebx [ ebp + 0x8 ]
push eax
push [ ecx + edx + 0x2c ]
mov eax [ ebp + 0xc ]
lea eax [ eax * 4 - 0x4 ]
push eax
push [ ebx + 0x14 ]
call [ DispCallFunc@IAT ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x44 ] eax
test esi esi
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax ebx
shl eax 0x4
add eax esi
push eax
mov [ esp + 0x18 ] 0x8
call sub_441898
jmp r-xdata
test eax 0x4000
je r-xdata
call [ VariantClear@IAT ]
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edi
mov [ ecx ] ax
jmp r-xdata
mov eax [ esp + 0x18 ]
movzx eax ax
and eax 0x4000
add eax 0x13
mov [ esp + 0x18 ] eax
call sub_442c80
mov ecx [ esp + 0x10 ]
mov [ ecx + ebx * 4 ] eax
push ebx
call j_sub_4228ca#2
pop ecx
push [ esp + 0x30 ]
call j_sub_4228ca#2
pop ecx
lea eax [ esp + 0x48 ]
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x44 ]
jmp r-xdata
push ecx
mov ecx eax
call sub_441693
push esi
call [ VariantClear@IAT ]
push 0x8
pop eax
push [ esp + 0x3c ]
mov [ esi ] ax
mov eax [ esp + 0x34 ]
mov eax [ eax + ebx * 4 ]
shl eax 0x4
add eax [ esp + 0x20 ]
push eax
call sub_4416f1
mov [ esi + 0x8 ] eax
push 0x1e
pop eax
cmp cx ax
jne r-xdata
and ecx 0xfff
push ecx
push esi
push eax
mov [ esp + 0x48 ] ecx
call sub_442a49
cmp [ esp + 0x3c ] 0xc
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
push 0x8
pop eax
mov [ esi ] ax
push ecx
lea eax [ esp + 0x4c ]
push eax
call sub_4416f1
mov [ esi + 0x8 ] eax
jmp r-xdata
push 0x48
pop edx
cmp eax edx
jne r-xdata
mov edx [ esp + 0x28 ]
mov ecx 0xffff
cmp [ edx + ebx * 2 ] cx
mov ecx [ esp + 0x10 ]
jne r-xdata
mov eax [ esp + 0x38 ]
movzx eax ax
sub eax 0x8
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ ecx + ebx * 4 ] eax
mov eax [ esp + 0x14 ]
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x24 ]
jb r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + ebx * 4 ]
cmp [ ecx + eax * 4 ] edi
je r-xdata
mov edx [ esp + 0x2c ]
cmp [ edx + ebx * 4 ] edi
jne r-xdata
mov [ edx + ebx * 2 ] ax
push 0x4
pop eax
push eax
call sub_42010a
pop ecx
mov ecx ebx
add ecx ecx
mov ecx [ esi + ecx * 8 + 0x8 ]
mov [ eax ] ecx
dec eax
je r-xdata
push [ ecx + eax * 4 ]
call [ VariantClear@IAT ]
jmp r-xdata
mov eax [ esp + 0x3c ]
mov edx [ esp + 0x30 ]
inc eax
mov [ esp + 0x3c ] eax
cmp eax [ esp + 0x24 ]
jb r-xdata
mov eax ebx
shl eax 0x4
add eax esi
mov [ edx + ebx * 4 ] eax
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_442893
jmp r-xdata
sub eax 0x3
je r-xdata
mov esi [ esp + 0x28 ]
inc ebx
mov [ edx + eax * 4 ] ebx
mov edx 0xffff
mov [ esi + ebx * 2 ] dx
mov esi [ esp + 0x2c ]
push 0x24
mov [ esi + ebx * 4 ] edi
mov esi [ ebp + 0x1c ]
mov [ ecx + ebx * 4 ] edi
mov edx [ esi + 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
dec edx
mov eax [ eax + 0xc ]
shl edx 0x4
add edx [ esi ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x38 ] ebx
mov eax [ eax + esi + 0x20 ]
mov esi [ esp + 0x40 ]
movzx eax [ eax + esi * 8 + 0x4 ]
mov esi eax
and esi 0xfff
mov [ esp + 0x3c ] esi
pop esi
cmp ax si
mov esi [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x40 ] eax
je r-xdata
mov ebx [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
mov [ ecx + ebx * 4 ] eax
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_442943
jmp r-xdata
sub eax 0x12
je r-xdata
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_4428c8
jmp r-xdata
dec eax
je r-xdata
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_442978
jmp r-xdata
sub eax 0x29
je r-xdata
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_4427f7
jmp r-xdata
cmp [ ecx + ebx * 4 ] edi
jne r-xdata
mov eax ebx
shl eax 0x4
add esi eax
push esi
call [ VariantClear@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov [ esi ] ax
mov eax [ ecx + ebx * 4 ]
mov [ esi + 0x8 ] eax
mov esi [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_44290f
jmp r-xdata
sub_4420f7
push ebp
mov ebp esp
sub esp 0x14
push edi
mov edi ecx
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
pop edi
leave
retn
mov eax [ ecx ]
push ebx
push esi
lea edx [ ebp - 0xc ]
push edx
push ecx
call [ eax + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ edi + 0x1c ]
movzx ebx [ edx + 0x30 ]
mov ecx [ eax ]
mov esi [ edx + 0x28 ]
push edx
push eax
mov [ ebp - 0x8 ] ebx
call [ ecx + 0x4c ]
cmp esi 0x3
je r-xdata
pop esi
pop ebx
cmp [ edi + 0x4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x10 ]
mov ecx [ eax ]
push edx
push ebx
push eax
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
inc ebx
cmp ebx [ ebp - 0x8 ]
jb r-xdata
and [ ebp - 0x4 ] eax
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push [ ebp - 0x10 ]
push eax
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x14 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ edx + 0x28 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x4c ]
cmp esi 0x3
je r-xdata
jmp r-xdata
mov eax [ edi + 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edi + 0x1c ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4421b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push ecx
call [ eax ]
jmp r-xdata
pop ebp
retn 0xc
sub_4421d3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x18 ]
lea edi [ esi + 0x20 ]
test ecx ecx
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov [ edi ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push ecx
mov ecx esi
call sub_4416b3
xor eax eax
mov eax [ edi ]
test eax eax
jne r-xdata
sub_44220c
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov [ ebp - 0x18 ] esi
call [ lstrlenW@IAT ]
mov [ ebp - 0xc ] eax
xor ecx ecx
push 0x2
add eax 0x6
pop ebx
mul ebx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
xor ecx ecx
mov [ esi + 0x4 ] eax
mov eax ebx
mov ebx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x30 ] 0x7c
cmp [ ebp - 0xc ] ecx
jle r-xdata
xor ecx ecx
push 0x3
pop edx
cmp [ esi + 0x24 ] ecx
je r-xdata
push 0x20
pop edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] 0x28
jmp r-xdata
xor ecx ecx
push 0x4
pop edi
mul edi
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x8 ]
xor ecx ecx
push 0x1c
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov [ esi + 0xc ] eax
mov [ eax ] r--data
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xc ]
pop ecx
or [ eax + 0x8 ] 0xffffffff
mov eax [ esi + 0xc ]
pop ecx
or [ eax + 0xc ] 0xffffffff
mov eax [ esi + 0xc ]
xor ecx ecx
mov [ eax + 0x10 ] edi
mov eax [ esi + 0xc ]
inc ecx
mov [ eax + 0x14 ] edx
mov eax [ esi + 0xc ]
push 0x2
mov [ eax + 0x18 ] cx
mov eax [ esi + 0xc ]
xor ecx ecx
mov [ eax + 0x1a ] cx
mov eax [ esi + 0xc ]
pop ecx
mov [ eax + 0x1c ] edx
mov eax [ esi + 0xc ]
push 0x13
mov [ eax + 0x20 ] edx
mov eax [ esi + 0xc ]
mov [ ebp + 0x8 ] ecx
mov [ eax + 0x24 ] edx
mov eax [ esi + 0xc ]
or [ eax + 0x28 ] 0xffffffff
mov eax [ esi + 0xc ]
mov [ eax + 0x2c ] edi
mov eax [ esi + 0xc ]
pop edi
mov [ eax + 0x30 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x34 ] cx
mov eax [ esi + 0xc ]
mov [ eax + 0x36 ] di
mov eax [ esi + 0x8 ]
mov edi ecx
mov [ eax ] edx
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] edx
cmp [ esi + 0x24 ] edx
je r-xdata
add eax edx
mov [ ebp - 0x8 ] eax
cmp [ edi + ecx * 2 ] dx
je r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov ecx eax
push 0x8
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x2c ] ecx
pop eax
test ebx ebx
jle r-xdata
mov eax [ esi + 0xc ]
push 0x5
mov [ eax + 0x38 ] r--data
mov eax [ esi + 0xc ]
pop edi
mov [ eax + 0x40 ] 0x1
mov eax [ esi + 0xc ]
push 0x3
mov [ eax + 0x44 ] edx
mov eax [ esi + 0xc ]
mov [ ebp + 0x8 ] edi
mov [ eax + 0x48 ] 0x4
mov eax [ esi + 0xc ]
mov [ eax + 0x4c ] ecx
mov eax [ esi + 0xc ]
xor ecx ecx
inc ecx
mov [ eax + 0x50 ] cx
mov eax [ esi + 0xc ]
pop ecx
push 0x10
mov [ eax + 0x52 ] cx
call sub_42010a
pop ecx
mov ecx [ esi + 0x8 ]
push 0x48
mov [ ecx + 0x8 ] eax
mov eax [ esi + 0x8 ]
pop ecx
mov eax [ eax + 0x8 ]
xor edx edx
mov [ eax + 0x4 ] cx
mov eax [ esi + 0x8 ]
mov ecx 0x4013
mov eax [ eax + 0x8 ]
push 0x13
mov [ eax + 0xc ] cx
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax ] edx
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ecx + 0x3c ] eax
mov eax [ esi + 0xc ]
xor ecx ecx
mov [ eax + 0x54 ] r--data
mov eax [ esi + 0xc ]
inc ecx
mov [ eax + 0x58 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x5c ] 0x2
mov eax [ esi + 0xc ]
mov [ eax + 0x60 ] ecx
mov eax [ esi + 0xc ]
mov [ eax + 0x64 ] 0x4
mov eax [ esi + 0xc ]
mov [ eax + 0x68 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x6c ] cx
mov eax [ esi + 0xc ]
pop ecx
mov [ eax + 0x6e ] cx
mov eax [ esi + 0x8 ]
push 0x3
mov [ eax + 0xc ] edx
mov eax [ esi + 0xc ]
pop ecx
mov [ eax + 0x70 ] r--data
mov eax [ esi + 0xc ]
mov [ eax + 0x74 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x78 ] ecx
mov eax [ esi + 0xc ]
mov [ eax + 0x7c ] 0x2
mov eax [ esi + 0xc ]
mov [ eax + 0x80 ] 0x4
mov eax [ esi + 0xc ]
mov [ eax + 0x84 ] edx
mov eax [ esi + 0xc ]
xor ecx ecx
inc ecx
mov [ eax + 0x88 ] cx
mov eax [ esi + 0xc ]
push 0x13
pop ecx
mov [ eax + 0x8a ] cx
mov eax [ esi + 0x8 ]
mov [ eax + 0x10 ] edx
inc ecx
movzx edx [ edi + ecx * 2 ]
cmp dx [ ebp - 0x10 ]
je r-xdata
push eax
call sub_42010a
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x10 ] eax
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
pop edi
pop esi
mov [ ecx ] eax
pop ebx
leave
retn 0x4
mov eax [ ebp + 0x8 ]
imul edi edi 0x1c
shl eax 0x2
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffe
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edi
inc eax
push 0x7c
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
pop edx
mov [ eax + ebx * 2 ] dx
push 0x20
inc ebx
pop eax
jmp r-xdata
mov eax [ esi + 0x4 ]
inc ecx
mov [ eax + ebx * 2 ] dx
movzx edx [ edi + ecx * 2 ]
push 0x20
pop eax
inc ebx
cmp dx ax
jne r-xdata
push 0xa
pop esi
cmp [ ebp + 0x8 ] si
mov esi [ ebp - 0x18 ]
je r-xdata
xor edx edx
mov [ eax + ecx * 2 ] dx
lea edx [ ecx + 0x1 ]
lea edx [ eax + edx * 2 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ edi + ecx * 2 ] ax
je r-xdata
mov eax [ ebp - 0x8 ]
xor ebx ebx
mov [ eax + ecx * 2 ] bx
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0x1c ]
mov [ edi + eax ] ecx
mov ecx [ ebp - 0x20 ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0xc ]
mov ebx [ ebp - 0x20 ]
mov [ edi + eax + 0x8 ] ebx
mov eax [ esi + 0xc ]
mov ebx [ ebp - 0x4 ]
mov [ edi + eax + 0xc ] ecx
mov eax [ esi + 0xc ]
xor ecx ecx
inc ecx
mov [ edi + eax + 0x18 ] cx
xor eax eax
mov [ ebp + 0x8 ] eax
mov ecx eax
cmp [ edx ] ax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
inc ecx
mov [ ebp - 0x2c ] ecx
cmp ecx ebx
jl r-xdata
inc ecx
jmp r-xdata
mov [ ebp - 0x10 ] eax
xor eax eax
test ecx ecx
jle r-xdata
push 0x3b
mov eax edx
mov ebx ecx
xor edi edi
pop esi
movzx ebx [ eax + ecx * 2 ]
cmp bx [ ebp - 0x30 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ebp - 0x4 ]
jne r-xdata
push 0x8
pop eax
movzx edx [ edi + ecx * 2 ]
cmp dx ax
jne r-xdata
mov ecx [ esi + 0xc ]
lea eax [ ecx + 0x1a ]
add eax edi
add ecx 0x10
push eax
add ecx edi
push ecx
push edx
call sub_4418e8
mov ecx [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edi + ecx + 0x14 ] eax
xor ecx ecx
test eax eax
je r-xdata
push 0x3b
pop ebx
cmp [ edx + eax * 2 ] bx
mov ebx [ ebp - 0x4 ]
je r-xdata
inc ecx
lea eax [ edx + ecx * 2 ]
cmp [ eax ] di
jne r-xdata
cmp [ eax + 0x2 ] di
je r-xdata
cmp dx [ ebp - 0x14 ]
je r-xdata
mov eax [ esi + 0x4 ]
push 0x3b
pop edx
mov [ eax + ebx * 2 ] dx
push 0x20
inc ebx
pop eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + eax ] ecx
mov eax [ esi + 0xc ]
mov [ edi + eax + 0x4 ] ecx
push 0x8
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov edx [ ebp - 0xc ]
pop ecx
mov ecx [ esi + 0x8 ]
mov [ edx + ecx ] eax
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
mov [ edx + eax * 2 ] cx
inc eax
lea eax [ edx + eax * 2 ]
cmp [ eax ] cx
je r-xdata
inc eax
cmp eax ecx
jl r-xdata
cmp [ eax ] si
jne r-xdata
mov esi [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ebp - 0x4 ]
xor eax eax
xor edi edi
mov [ eax ] di
inc ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
push 0x20
mov [ eax + ebx * 2 ] dx
inc ecx
inc ebx
pop eax
cmp [ edi + ecx * 2 ] ax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov eax [ edx + eax ]
mov [ edi + ecx + 0x4 ] eax
jmp r-xdata
xor ecx ecx
xor ebx ebx
cmp [ eax ] bx
mov ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov edx eax
mov [ ebp - 0x1c ] ecx
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
inc ecx
mov edx [ ebp - 0x14 ]
cmp [ edi + ecx * 2 ] dx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x2c ]
add edx 0x4
mov [ ebp - 0xc ] edx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
lea edx [ ecx + 0x1 ]
add edi 0x1c
lea edx [ eax + edx * 2 ]
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] edi
push edx
call sub_442caa
mov ecx [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ecx + edx ]
mov [ ecx + edi * 8 + 0x4 ] ax
mov eax [ esi + 0x8 ]
mov ecx edi
mov eax [ eax + edx ]
xor edi edi
mov [ eax + ecx * 8 ] edi
mov edi [ ebp - 0x14 ]
mov ebx eax
cmp [ edi + ecx * 2 ] ax
je r-xdata
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
lea ebx [ eax + ecx * 2 ]
cmp [ ebx ] di
jne r-xdata
xor eax eax
push edx
mov [ ebx ] ax
call sub_442caa
mov ecx [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ecx + edx ]
mov [ ecx + edi * 8 + 0x4 ] ax
mov eax [ esi + 0x8 ]
mov ecx edi
mov eax [ eax + edx ]
xor edx edx
mov [ eax + ecx * 8 ] edx
mov eax [ ebp - 0x10 ]
inc ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp - 0x1c ]
lea edx [ ebx + 0x2 ]
xor edi edi
xor edx edx
inc edx
jmp r-xdata
push 0x3b
pop edi
cmp [ ebx ] di
push 0x0
pop edi
jne r-xdata
mov ebx [ ebp - 0x4 ]
cmp [ edi + ecx * 2 ] ax
je r-xdata
inc ecx
jmp r-xdata
movzx eax [ edi + ecx * 2 ]
push 0x3b
pop edi
cmp ax di
mov edi [ ebp + 0x8 ]
jne r-xdata
cmp ax [ ebp - 0x10 ]
jne r-xdata
jmp r-xdata
movzx eax [ edi + ecx * 2 ]
mov [ ebp - 0x2c ] eax
cmp eax 0x29
je r-xdata
push 0x20
pop eax
push 0x20
pop eax
jmp r-xdata
xor eax eax
mov edx eax
inc ecx
mov eax [ esi + 0x4 ]
mov edi [ ebp - 0x2c ]
mov [ eax + ebx * 2 ] di
mov edi [ ebp + 0x8 ]
inc ecx
inc ebx
inc ecx
cmp [ edi + ecx * 2 ] ax
je r-xdata
cmp [ edi + ecx * 2 ] ax
je r-xdata
inc ecx
mov eax [ esi + 0x4 ]
test edx edx
jne r-xdata
push 0x3b
push 0xa
jmp r-xdata
xor eax eax
inc eax
push 0x20
cmp edx eax
je r-xdata
inc ecx
pop edi
mov [ eax + ebx * 2 ] di
mov edi [ ebp + 0x8 ]
push 0x3b
pop eax
inc ebx
cmp [ edi + ecx * 2 ] ax
jne r-xdata
pop eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ebx
pop edx
cmp ecx [ ebp - 0xc ]
jl r-xdata
sub_4427f7
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x10
call sub_42010a
mov esi [ ebp + 0x8 ]
mov ebx eax
movzx eax [ esi ]
pop ecx
cmp eax 0x8
jne r-xdata
cmp eax 0x24
jne r-xdata
push ebx
push [ esi + 0x8 ]
call [ CLSIDFromString@IAT ]
jmp r-xdata
mov esi [ esi + 0x8 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x14 ]
push eax
call [ VariantInit@IAT ]
mov eax [ esi + 0xc ]
xor edi edi
push edi
lea edx [ ebp - 0x14 ]
push edx
push edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x2c ]
test eax eax
js r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x4
push ebx
call j_sub_4228ca#2
pop ecx
mov ebx edi
mov eax 0x800c
cmp [ ebp - 0x14 ] ax
jne r-xdata
push 0x1a
pop eax
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edi ebx
mov esi [ eax + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x14 ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
sub_442893
push ebp
mov ebp esp
push esi
push 0x4
call sub_42010a
mov esi eax
mov eax [ ebp + 0x8 ]
pop ecx
cmp [ eax ] 0x9
jne r-xdata
and [ esi ] 0x0
mov ecx [ eax + 0x8 ]
mov [ esi ] ecx
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ecx ]
push ecx
call [ eax + 0x4 ]
jmp r-xdata
sub_4428c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x8 ]
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
mov edi eax
mov ecx 0x10000
cmp edi ecx
jle r-xdata
inc ecx
push ecx
call sub_42010a
pop ecx
mov esi eax
xor eax eax
push eax
push eax
lea ecx [ edi + 0x1 ]
push ecx
push esi
push 0xffffffff
push ebx
push eax
push eax
call [ WideCharToMultiByte@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx edi
sub_44290f
push ebp
mov ebp esp
push ecx
push ecx
push esi
push 0x8
call sub_42010a
mov edx [ ebp + 0x8 ]
mov esi eax
mov ecx [ edx + 0x8 ]
push 0x8
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ edx + 0xc ]
push eax
push esi
mov [ ebp - 0x4 ] ecx
call sub_41faa0
add esp 0x10
mov eax esi
pop esi
leave
retn 0x4
sub_442943
push ebp
mov ebp esp
push esi
push edi
push 0x10
call sub_42010a
pop ecx
mov edi eax
push edi
call [ VariantInit@IAT ]
mov esi [ ebp + 0x8 ]
push esi
push edi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
sub_442978
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x8 ]
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
mov esi eax
mov eax 0x10000
cmp esi eax
jle r-xdata
xor ecx ecx
push 0x2
inc eax
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov edi eax
test ebx ebx
je r-xdata
mov eax esi
xor eax eax
mov [ edi + esi * 2 ] ax
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
push edi
call [ lstrcpyW@IAT ]
sub_4429cb
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push ebx
push esi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp di 0xc
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx eax di
add eax 0xffffffe2
push 0x8
pop edx
cmp eax 0x1
ja r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
pop edi
movzx ecx [ ebx ]
cmp cx di
jne r-xdata
mov edi edx
cmp cx dx
jne r-xdata
push edi
push 0x0
push esi
push esi
call [ VariantChangeType@IAT ]
push 0x8
mov edi eax
pop eax
cmp [ esi ] ax
jne r-xdata
push 0x0
push [ esi + 0x8 ]
call sub_4419a0
xor eax eax
test edi edi
setns al
push 0x1
push [ esi + 0x8 ]
call sub_4419a0
sub_442a49
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
movzx eax di
push 0x8
pop ebx
cmp eax ebx
je r-xdata
mov esi [ ebp + 0xc ]
push esi
call [ VariantClear@IAT ]
push edi
push [ ebp + 0x8 ]
mov [ esi ] bx
call sub_4417c8
cmp eax 0x1d
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push ebx
push esi
call [ VariantCopyInd@IAT ]
test eax eax
jns r-xdata
cmp eax 0x1f
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp di 0xc
jne r-xdata
cmp eax 0x48
je r-xdata
mov edi [ ebx + 0x8 ]
push esi
movzx ebx [ edi ]
call [ VariantClear@IAT ]
mov eax ebx
push 0x8
pop ecx
cmp eax ecx
je r-xdata
push ebx
push edi
mov [ esi ] cx
call sub_4416f1
jmp r-xdata
cmp eax 0x1d
jle r-xdata
mov [ esi + 0x8 ] eax
mov [ esi ] bx
mov eax [ edi + 0x8 ]
jmp r-xdata
cmp eax 0x1f
jle r-xdata
cmp eax 0x48
je r-xdata
sub_442adc
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp [ ebx ] 0x24
push edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx 0x4000
test [ eax ] cx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
mov eax [ ebx + 0xc ]
xor esi esi
lea edx [ ebp - 0x1c ]
push edx
push esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x28 ]
mov edi [ ebp - 0x14 ]
mov [ ebp + 0x8 ] edi
test eax eax
js r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
mov edi [ ebp + 0x20 ]
mov esi [ ebp + 0x10 ]
push 0x13
pop ecx
push ecx
mov [ eax ] cx
mov eax [ edi ]
push 0x0
add eax eax
push ebx
push ebx
mov [ esi + eax * 8 ] cx
call [ VariantChangeType@IAT ]
mov ecx [ edi ]
mov eax [ ebx + 0x8 ]
add ecx ecx
mov [ esi + ecx * 8 + 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
test edi edi
jle r-xdata
mov eax [ ebx + 0xc ]
push esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push esi
push esi
push eax
call [ ecx + 0x2c ]
test eax eax
js r-xdata
mov ebx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax 0x4000
mov [ ebp - 0x8 ] edx
test [ ebx ] ax
je r-xdata
mov eax [ edx + 0xc ]
xor ecx ecx
inc ecx
sub ecx edi
lea eax [ eax + ecx * 4 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax esi
mov esi [ ebp + 0x20 ]
mov [ ebp - 0xc ] ecx
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x10 ]
push 0x13
pop eax
mov [ ebx ] ax
mov eax [ esi ]
shl eax 0x4
add eax edi
push eax
call [ VariantClear@IAT ]
mov ecx [ esi ]
mov ax [ ebx ]
add ecx ecx
mov [ edi + ecx * 8 ] ax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ edi + ecx * 8 + 0x8 ] eax
jmp r-xdata
dec [ esi ]
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push 0x13
pop edi
mov eax [ ebp + 0x20 ]
mov [ edx + ecx + 0x8 ] eax
push [ ebp - 0x8 ]
lea eax [ ecx + 0x8 ]
lea ecx [ ebp + 0x20 ]
add eax edx
push ecx
and [ eax ] 0x0
push eax
call sub_41faa0
add esp 0xc
jmp r-xdata
mov eax [ ecx + eax * 4 ]
mov [ ebp + 0x20 ] eax
mov eax [ esi ]
shl eax 0x4
add eax edx
push eax
call [ VariantClear@IAT ]
mov edx [ esi ]
mov ecx [ ebp + 0x10 ]
shl edx 0x4
lea eax [ ebx - 0x1 ]
mov [ edx + ecx ] di
cmp [ ebp + 0xc ] eax
jne r-xdata
mov ecx [ esi ]
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ eax + ecx * 2 ] di
mov eax ecx
shl eax 0x4
add eax edx
mov [ ebx + ecx * 4 ] eax
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ eax + ecx * 4 ] 0x0
lea eax [ ecx + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
cmp eax ebx
jb r-xdata
sub_442c80
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4427f7
push edi
mov esi eax
call [ VariantClear@IAT ]
push 0x13
pop eax
mov [ edi ] ax
mov [ edi + 0x8 ] esi
pop edi
mov eax esi
pop esi
pop ecx
pop ebp
retn 0x4
sub_442caa
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
call [ lstrlenW@IAT ]
mov edi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push [ ebp + 0x8 ]
mov ebx eax
push ebx
call [ lstrcpyW@IAT ]
xor eax eax
mov [ ebx + edi * 2 ] ax
movzx eax [ ebx + edi * 2 - 0x2 ]
cmp eax 0x2a
je r-xdata
xor eax eax
mov [ ebx + edi * 2 - 0x2 ] ax
mov [ ebp - 0x4 ] 0x4000
cmp eax 0x5e
jne r-xdata
mov di [ ebp - 0x4 ]
add di [ esi * 2 + rw-data ]
xor esi esi
inc esi
inc esi
cmp esi 0x24
jl r-xdata
push ebx
push [ esi * 4 + rw-data ]
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
mov ax di
jmp r-xdata
mov di [ ebp - 0x4 ]
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push ebx
call j_sub_4228ca#2
pop ecx
test esi esi
je r-xdata
sub_442d53
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ecx + 0x34 ]
jl r-xdata
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ecx + 0x2c ]
push eax
push [ ecx + 0x34 ]
mov ecx [ ecx ]
call sub_471851
mov ecx [ ebp + 0xc ]
add esp 0xc
push [ ebp + 0x8 ]
call sub_407e53
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
call sub_40a2fb
jmp r-xdata
pop ebp
retn 0x8
sub_442d9a
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x24 ] edi
je r-xdata
xor eax eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_407dd0
push 0x1
push [ ebp + 0x8 ]
mov ecx esi
call sub_41de96
mov ebx eax
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40d3d2
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
mov eax ebx
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push edi
mov ecx esi
call sub_442d53
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call sub_405b47
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_442e0a
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
xor al al
pop esi
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
push [ esi + 0x30 ]
push [ esi + 0x2c ]
push [ esi + 0x40 ]
push 0x0
push [ esi + 0x28 ]
push [ esi ]
call sub_408ca0
add esp 0x18
mov [ esi + 0x34 ] eax
test eax eax
jle r-xdata
and [ esi + 0x34 ] 0x0
mov al 0x1
pop esi
retn
sub_442e45
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
lea ecx [ ebp - 0x18 ]
call sub_40d3d2
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
lea ebx [ eax + 0x1 ]
mov [ esi ] ebx
cmp ebx [ edi + 0x4 ]
jge r-xdata
or ebx 0xffffffff
mov [ esi ] eax
xor eax eax
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x10 ] al
je r-xdata
mov [ ebp + 0x13 ] al
push ebx
mov ecx edi
call sub_41db6f
cmp [ eax ] 0x7b
jne r-xdata
mov eax [ esi ]
cmp eax [ edi + 0x4 ]
jl r-xdata
xor eax eax
lea eax [ ebx + 0x1 ]
mov [ ebp + 0x13 ] 0x1
mov [ esi ] eax
jmp r-xdata
push [ esi ]
mov ecx edi
call sub_41db6f
movzx eax [ eax ]
push eax
call sub_422952
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x18 ]
call sub_422241
cmp [ ebp + 0xc ] 0x0
pop ecx
mov ebx eax
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40c4cd
jmp r-xdata
mov ecx [ esi ]
push ecx
lea eax [ ecx + 0x1 ]
mov ecx edi
mov [ ebp + 0xc ] 0x1
mov [ esi ] eax
call sub_41db6f
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_40bd2f
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0xc
mov eax [ esi ]
cmp eax [ edi + 0x4 ]
je r-xdata
push eax
mov ecx edi
call sub_41db6f
cmp [ eax ] 0x7d
jne r-xdata
inc [ esi ]
jmp r-xdata
sub_442f27
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_402c64
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_442f5b
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
cmp [ eax ] di
je r-xdata
push 0x10
call sub_42010a
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jmp r-xdata
push eax
call j_sub_4228ca#2
dec [ esi + 0x10 ]
push 0x10
call sub_42010a
pop ecx
mov ecx [ esi + 0xc ]
mov [ ecx + 0xc ] eax
mov [ esi + 0xc ] eax
jmp r-xdata
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
call sub_403bcf
mov ecx [ esi + 0xc ]
pop edi
mov [ ecx ] eax
mov ecx [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ esi + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
inc [ esi + 0x10 ]
pop esi
pop ebp
retn 0xc
sub_442fcd
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0xb
push r--data
push esi
mov edi ecx
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
push 0xd
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
mov [ edi ] 0x1
push 0x16
push r--data
push esi
call sub_42247b
add esp 0xc
test eax eax
jne r-xdata
mov [ edi + 0x1 ] 0x1
jmp r-xdata
xor eax eax
inc eax
lea ecx [ esi + 0x2c ]
call sub_403bcf
mov esi eax
push esi
call sub_41dd27
push esi
call sub_41dcee
push esi
call sub_4218fb
pop ecx
movzx ecx [ esi + eax * 2 - 0x2 ]
push 0x22
pop ebx
cmp cx bx
je r-xdata
cmp [ esi ] cx
je r-xdata
push 0x27
pop edx
cmp cx dx
je r-xdata
xor ecx ecx
mov [ esi + eax * 2 - 0x2 ] cx
mov ecx [ edi + 0x4 ]
lea eax [ esi + 0x2 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
push esi
call j_sub_4228ca#2
pop ecx
xor eax eax
jmp r-xdata
movzx eax [ esi ]
cmp ax bx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
cmp ax dx
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
mov eax edi
jmp r-xdata
mov ecx [ edi + 0x4 ]
push esi
mov eax [ ecx ]
call [ eax + 0x8 ]
jmp r-xdata
xor edi edi
inc edi
sub_4430ac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov ecx [ ebx ]
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ecx + 0x4 ]
mov esi [ ecx + edi ]
mov [ ebx ] eax
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + 0x1 ]
mul edx
seto cl
mov [ ebp + 0x8 ] esi
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ ebx ]
add esi esi
add ecx edi
push esi
push ecx
mov edi eax
push edi
call sub_41faa0
mov ecx [ ebp + 0x8 ]
add [ ebx ] esi
xor eax eax
add esp 0x10
mov [ esi + edi ] ax
test ecx ecx
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
xor [ edi + eax * 2 ] cx
inc eax
cmp eax ecx
jl r-xdata
sub_443110
push ebp
mov ebp esp
mov eax 0x2048
call sub_430650
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edi [ GetModuleHandleW@IAT ]
push 0xfff
lea eax [ ebp - 0x2044 ]
push eax
push [ rw-data ]
push 0x0
call edi
mov esi [ LoadStringW@IAT ]
push eax
call esi
lea eax [ ebp - 0x2044 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_40caee
push 0xfff
lea eax [ ebp - 0x2044 ]
push eax
push [ ebp + 0xc ]
push 0x0
call edi
push eax
call esi
lea eax [ ebp - 0x2044 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40caee
push ebx
call sub_443438
push ebx
mov edi eax
call sub_4433b0
push ebx
mov esi eax
call sub_4433e2
push eax
call sub_443414
mov ebx eax
lea eax [ ebp - 0x2044 ]
test ebx ebx
jne r-xdata
push ebx
push esi
push r--data
push eax
call sub_42234b
add esp 0x10
push esi
push r--data
push eax
call sub_42234b
add esp 0xc
jmp r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
cmp [ rw-data ] 0x0
je r-xdata
push edi
lea ecx [ ebp - 0x24 ]
call sub_407e53
push 0xffffffff
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x24 ]
call sub_40a2fb
push r--data
lea ecx [ ebp - 0x24 ]
call sub_4039e8
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
lea eax [ ebp - 0x2044 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_40caee
push edi
lea ecx [ ebp - 0x14 ]
call sub_4039e8
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
lea ecx [ ebp - 0x24 ]
call sub_40d3d2
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
push 0x11010
push [ ebp - 0x44 ]
push [ ebp - 0x14 ]
push 0x0
call [ MessageBoxW@IAT ]
push [ ebp - 0x24 ]
push edi
push [ ebp - 0x34 ]
push esi
push ebx
push r--data
call sub_422c67
add esp 0x18
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_405cd3
lea ecx [ ebp - 0x14 ]
call sub_405cd3
lea ecx [ ebp - 0x34 ]
call sub_405cd3
lea ecx [ ebp - 0x44 ]
call sub_405cd3
sub_4432b0
push ebp
mov ebp esp
mov eax 0x2024
call sub_430650
push esi
push 0xfff
lea eax [ ebp - 0x2020 ]
mov esi ecx
push eax
push [ esi + 0x58 ]
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
lea eax [ ebp - 0x2020 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40caee
cmp [ esi + 0x2 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
lea eax [ ebp - 0x2020 ]
jne r-xdata
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
call sub_422c67
add esp 0x18
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push r--data
push eax
call sub_42234b
add esp 0x10
push [ ebp + 0xc ]
push r--data
push eax
call sub_42234b
add esp 0xc
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_405cd3
pop esi
leave
retn 0x10
lea eax [ ebp - 0x2020 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40caee
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4039e8
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4039e8
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_4039e8
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4039e8
push 0x11010
push [ ebp - 0x20 ]
push [ ebp - 0x10 ]
push 0x0
call [ MessageBoxW@IAT ]
lea ecx [ ebp - 0x10 ]
call sub_405cd3
sub_4433b0
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jg r-xdata
test ecx ecx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ eax + 0xc ]
dec ecx
jne r-xdata
pop ebp
retn 0x4
sub_4433e2
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jg r-xdata
test ecx ecx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ eax + 0xc ]
dec ecx
jne r-xdata
pop ebp
retn 0x4
sub_443414
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jge r-xdata
xor eax eax
test ecx ecx
js r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
jmp r-xdata
pop ebp
retn 0x4
sub_443438
push ebp
mov ebp esp
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jg r-xdata
test eax eax
jle r-xdata
mov eax [ ecx + eax * 4 - 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_443460
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push ecx
call sub_442f46
sub_44348f
push esi
mov esi ecx
dec [ esi + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + edx * 4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
pop esi
and [ eax + ecx * 4 ] 0x0
retn
push ecx
call sub_442f46
sub_4434b4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
mov eax esi
inc esi
cmp esi 0x2d
jl r-xdata
push [ edi ]
push [ esi * 4 + rw-data ]
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_443503
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp ecx edx
je r-xdata
mov eax ecx
pop ebp
retn 0x4
mov al [ edx ]
mov [ ecx ] al
mov al [ edx + 0x1 ]
mov [ ecx + 0x1 ] al
mov al [ edx + 0x3 ]
mov [ ecx + 0x3 ] al
mov al [ edx + 0x2 ]
mov [ ecx + 0x2 ] al
mov al [ edx + 0x4 ]
mov [ ecx + 0x4 ] al
mov al [ edx + 0x5 ]
mov [ ecx + 0x5 ] al
sub_443569
push ebp
mov ebp esp
sub esp 0x100
xor eax eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] ax
cmp [ edi + 0x20 ] eax
je r-xdata
push ebx
push 0xa0
call [ GetAsyncKeyState@IAT ]
mov ebx [ GetKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x1a ] 0x0
jne r-xdata
push 0xa0
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
pop edi
mov eax esi
pop esi
leave
retn 0x4
mov eax 0x80
cmp [ ebp - 0x60 ] al
je r-xdata
push 0xa1
call [ GetAsyncKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi ] 0x1
cmp [ edi + 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0xf0 ] al
jne r-xdata
cmp [ edi + 0x1b ] 0x0
jne r-xdata
push 0xa1
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
cmp [ ebp - 0x5f ] al
jne r-xdata
mov [ esi ] 0x1
push 0x11
call [ GetAsyncKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x1 ] 0x1
cmp [ ebp - 0xef ] al
jne r-xdata
cmp [ edi + 0x1b ] 0x0
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push 0x11
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
cmp [ ebp - 0xee ] al
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
mov [ esi + 0x1 ] 0x1
push 0x12
call [ GetAsyncKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x2 ] 0x1
cmp [ ebp - 0xa5 ] al
jne r-xdata
cmp [ edi + 0x1d ] 0x0
jne r-xdata
mov [ esi + 0x2 ] 0x1
cmp [ edi + 0x1d ] 0x0
jne r-xdata
push 0x12
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
cmp [ edi + 0x1e ] 0x0
jne r-xdata
mov [ esi + 0x3 ] 0x1
push 0x5b
call [ GetAsyncKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x3 ] 0x1
mov [ esi + 0x4 ] 0x1
jmp r-xdata
cmp [ edi + 0x1e ] 0x0
jne r-xdata
push 0x5b
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
pop ebx
mov [ esi + 0x4 ] 0x1
sub_4436f9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ eax + 0x4 ]
and [ esi ] 0x0
xor ebx ebx
dec edi
inc ebx
and [ ebp + 0xc ] 0x0
cmp edi 0xffffffff
jne r-xdata
push edi
mov ecx eax
call sub_41db6f
movzx eax [ eax ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
and [ esi ] 0x0
xor al al
jmp r-xdata
mov al 0x1
cmp eax 0x41
jb r-xdata
cmp eax 0x39
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp eax 0x61
jb r-xdata
cmp eax 0x46
ja r-xdata
sub eax ecx
jmp r-xdata
cmp eax 0x66
ja r-xdata
sub eax 0x37
jmp r-xdata
imul eax ebx
add [ esi ] eax
mov eax [ ebp + 0xc ]
dec edi
shl ebx 0x4
inc eax
mov [ ebp + 0xc ] eax
cmp eax 0x8
mov eax [ ebp + 0x8 ]
jl r-xdata
sub eax 0x57
test edi edi
js r-xdata
sub_44377c
push esi
mov esi ecx
cmp [ esi + 0xa ] 0x0
jne r-xdata
mov al 0x1
pop esi
retn
call sub_44383c
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x2d
je r-xdata
xor al al
pop esi
retn
cmp al 0x2e
je r-xdata
cmp al 0x23
je r-xdata
cmp al 0x28
je r-xdata
cmp al 0x22
je r-xdata
cmp al 0x25
je r-xdata
cmp al 0x27
je r-xdata
cmp al 0x24
je r-xdata
cmp al 0x26
je r-xdata
cmp al 0x21
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x5d
je r-xdata
cmp al 0x5b
je r-xdata
cmp al 0x5c
je r-xdata
cmp al 0xa5
je r-xdata
cmp al 0xa3
je r-xdata
cmp al 0x5f
je r-xdata
cmp al 0xa6
je r-xdata
cmp al 0xa7
je r-xdata
cmp al 0xa8
je r-xdata
cmp al 0xa9
je r-xdata
cmp al 0xaa
je r-xdata
cmp al 0xab
je r-xdata
cmp al 0xac
je r-xdata
cmp al 0xad
je r-xdata
cmp al 0xae
je r-xdata
cmp al 0xaf
je r-xdata
cmp al 0xb0
je r-xdata
cmp al 0xb1
je r-xdata
cmp al 0xb2
je r-xdata
cmp al 0xb3
je r-xdata
cmp al 0xb4
je r-xdata
cmp al 0xb5
je r-xdata
cmp al 0xb6
je r-xdata
cmp al 0xb7
jne r-xdata
sub_443845
push ebx
push edi
mov edi ecx
cmp [ edi + 0x10 ] 0x0
je r-xdata
pop edi
pop ebx
retn
push esi
xor esi esi
cmp [ edi + 0x20 ] esi
jne r-xdata
pop esi
push [ edi + 0x10 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x10 ] esi
mov ebx [ edi + 0x10 ]
call [ GetForegroundWindow@IAT ]
cmp eax ebx
je r-xdata
push ebx
call sub_41f78e
push 0xf
call sub_4449d1
inc esi
cmp esi 0x3
jl r-xdata
jmp r-xdata
sub_44388d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10c
cmp [ eax ] 0x0
push esi
mov esi ecx
je r-xdata
cmp [ eax + 0x2 ] 0x0
je r-xdata
mov [ esi + 0x14 ] 0x1
cmp [ eax + 0x3 ] 0x0
je r-xdata
mov [ esi + 0x16 ] 0x1
xor eax eax
cmp [ esi + 0x14 ] al
je r-xdata
mov [ esi + 0x17 ] 0x1
cmp [ esi + 0x15 ] al
je r-xdata
cmp [ esi + 0x1a ] al
je r-xdata
cmp [ esi + 0x16 ] al
je r-xdata
cmp [ esi + 0x1b ] al
je r-xdata
mov [ esi + 0x14 ] al
cmp [ esi + 0x17 ] al
je r-xdata
cmp [ esi + 0x1c ] al
je r-xdata
mov [ esi + 0x15 ] al
cmp [ esi + 0x18 ] al
je r-xdata
cmp [ esi + 0x1d ] al
je r-xdata
mov [ esi + 0x16 ] al
cmp [ esi + 0x20 ] eax
je r-xdata
cmp [ esi + 0x1e ] al
je r-xdata
mov [ esi + 0x17 ] al
push ebx
push edi
lea ecx [ ebp - 0xc ]
call sub_4434e5
mov ebx [ GetAsyncKeyState@IAT ]
push 0xa0
call ebx
mov edi [ GetKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
lea eax [ ebp - 0x10c ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x18 ] al
cmp [ esi + 0x1a ] 0x0
jne r-xdata
push 0xa0
call edi
mov ecx 0x8000
test cx ax
je r-xdata
pop esi
leave
retn 0x4
mov cl [ esi + 0x1a ]
mov dl [ esi + 0x1b ]
test cl cl
sete al
dec al
and [ ebp - 0x6c ] al
test dl dl
sete al
dec al
and [ ebp - 0x6b ] al
test cl cl
jne r-xdata
push 0xa1
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
push 0xa0
lea ecx [ ebp - 0xc ]
call sub_444c14
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_444497
cmp [ esi + 0x1c ] 0x0
sete al
dec al
and [ ebp - 0xfb ] al
cmp [ esi + 0x1d ] 0x0
sete al
dec al
and [ ebp - 0xfa ] al
test cl cl
sete al
dec al
and [ ebp - 0xb1 ] al
lea eax [ ebp - 0x10c ]
push eax
call [ SetKeyboardState@IAT ]
jmp r-xdata
test dl dl
sete al
dec al
and [ ebp - 0xfc ] al
cmp [ esi + 0x1b ] 0x0
jne r-xdata
push 0xa1
call edi
mov ecx 0x8000
test cx ax
je r-xdata
push 0x11
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
push 0xa1
lea ecx [ ebp - 0xc ]
call sub_444c14
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_444497
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push 0x11
call edi
mov ecx 0x8000
test cx ax
je r-xdata
push 0x12
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
push 0x11
lea ecx [ ebp - 0xc ]
call sub_444c14
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_444497
cmp [ esi + 0x1d ] 0x0
jne r-xdata
push 0x12
call edi
mov ecx 0x8000
test cx ax
je r-xdata
push 0x5b
call ebx
mov ebx 0x8000
test bx ax
jne r-xdata
push 0x12
lea ecx [ ebp - 0xc ]
call sub_444c14
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_444497
cmp [ esi + 0x1e ] 0x0
jne r-xdata
push 0x5b
call edi
test bx ax
je r-xdata
pop edi
pop ebx
push 0x5b
lea ecx [ ebp - 0xc ]
call sub_444c14
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_444497
sub_443abb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
push 0x1
push eax
mov [ esi + 0x20 ] eax
call sub_444a5b
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
mov [ esp + 0x14 ] bl
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] bx
jne r-xdata
push 0x40
lea ecx [ esp + 0x24 ]
mov edi ebx
call sub_407b6e
push ebx
push 0x14
mov ecx esi
call sub_4442d9
mov [ esp + 0x14 ] al
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_443569
push eax
lea ecx [ esp + 0x1c ]
call sub_443503
cmp [ esi + 0x8 ] 0x1
jne r-xdata
inc edi
mov ecx esi
mov [ esp + 0xc ] edi
call sub_443845
mov eax ebx
sub eax 0x21
je r-xdata
push 0x0
push [ esi + 0x20 ]
mov ecx esi
call sub_444a5b
lea ecx [ esp + 0x20 ]
call sub_405cd3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_4445f9
push [ esp + 0x14 ]
mov ecx esi
push 0x14
call sub_4442d9
mov [ esi + 0x17 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_41db6f
movzx ebx [ eax ]
test bx bx
je r-xdata
mov [ esi + 0x18 ] 0x1
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ esi + 0x14 ] 0x1
jmp r-xdata
sub eax 0x33
je r-xdata
mov [ esi + 0x16 ] 0x1
jmp r-xdata
sub eax 0x1d
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
push 0x7d
call sub_41da0a
test al al
jne r-xdata
push 0x1
push ebx
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
push 0x1
push 0x7b
mov ecx esi
call sub_443c15
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ax
jmp r-xdata
mov edi [ esp + 0xc ]
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ax
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
mov ecx esi
call sub_443d2b
sub_443c15
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0xc ]
call sub_4434e5
push [ ebp + 0x8 ]
call sub_444ba6
lea ecx [ ebp - 0xc ]
call sub_44383c
mov bl al
test bl bl
je r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
lea eax [ ebp - 0xb ]
push eax
mov ecx esi
call sub_44388d
lea ecx [ esi + 0x14 ]
push ecx
mov ecx esi
call sub_4445f9
test bl bl
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_4445dc
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ esi + 0x14 ]
push eax
mov ecx esi
call sub_4447de
sub_443c7f
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
push 0x1
push eax
mov [ esi + 0x20 ] eax
call sub_444a5b
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
mov [ ebp + 0xc ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] bx
jne r-xdata
mov edi ebx
push ebx
push 0x14
mov ecx esi
call sub_4442d9
mov [ ebp + 0xc ] al
lea eax [ ebp - 0xe ]
push eax
mov ecx esi
call sub_443569
push eax
lea ecx [ ebp - 0x8 ]
call sub_443503
cmp [ esi + 0x8 ] 0x1
jne r-xdata
mov ecx esi
inc edi
call sub_443845
push 0x1
push ebx
mov ecx esi
call sub_443c15
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ax
jmp r-xdata
push 0x0
push [ esi + 0x20 ]
mov ecx esi
call sub_444a5b
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_4445f9
push [ ebp + 0xc ]
mov ecx esi
push 0x14
call sub_4442d9
mov ecx [ ebp + 0x8 ]
push edi
call sub_41db6f
movzx ebx [ eax ]
test bx bx
je r-xdata
sub_443d2b
push ebp
mov ebp esp
sub esp 0x68
xor eax eax
push ebx
push esi
push edi
mov esi ecx
mov edi eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x6 ] al
mov [ ebp - 0x5 ] al
mov [ ebp - 0x7 ] al
mov [ ebp - 0x8 ] al
call sub_4434e5
xor ebx ebx
inc ebx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x10 ] ebx
call sub_40d3d2
lea ecx [ ebp - 0x34 ]
call sub_40d3d2
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x8 ]
push 0x20
pop eax
push eax
call sub_41da0a
test al al
je r-xdata
push [ ebp - 0x44 ]
push [ edi * 4 + rw-data ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0xc ]
push 0x20
pop edi
cmp edi 0x62
jne r-xdata
inc edi
cmp edi 0x62
jl r-xdata
inc esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call sub_41db6f
cmp [ eax ] 0x9
jne r-xdata
cmp [ edi + rw-data ] 0x0
movzx eax [ edi + rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x44 ]
call sub_40a4f6
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_444ba6
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call sub_41db6f
cmp [ eax ] di
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] esi
push 0x0
call sub_41da0a
push r--data
push [ ebp - 0x34 ]
call sub_421bc7
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0xe
ja r-xdata
push eax
lea ecx [ ebp - 0x24 ]
call sub_444c14
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_444342
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
jne r-xdata
push r--data
push [ ebp - 0x34 ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x6 ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405cd3
lea ecx [ ebp - 0x44 ]
call sub_405cd3
pop edi
pop esi
pop ebx
leave
retn 0x4
jmp [ eax * 4 + jump_table_44423f ]
cmp [ ebp - 0x6 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
push 0x0
lea ecx [ ebp - 0x44 ]
call sub_40a4f6
movzx eax [ eax ]
push ebx
push eax
jmp r-xdata
push r--data
push [ ebp - 0x34 ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_444c14
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push 0xd
lea ecx [ ebp - 0x24 ]
call sub_444c14
cmp [ ebp - 0x5 ] 0x0
mov [ ebp - 0x1a ] 0x1
jne r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
cmp [ esi + 0x1d ] 0x0
je r-xdata
push 0xa0
lea ecx [ ebp - 0x24 ]
call sub_444c14
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push 0xa1
lea ecx [ ebp - 0x24 ]
call sub_444c14
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ esi + 0x1a ] 0x0
jne r-xdata
cmp [ esi + 0x1a ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x1e ] 0x0
jne r-xdata
cmp [ esi + 0x1e ] 0x0
je r-xdata
cmp [ esi + 0x1f ] 0x0
jne r-xdata
cmp [ esi + 0x1f ] 0x0
je r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp [ ebp - 0x7 ] 0x0
movzx eax [ edi + rw-data ]
mov ecx esi
je r-xdata
mov ecx esi
call sub_443c15
jmp r-xdata
push r--data
push [ ebp - 0x34 ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x7 ] 0x1
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
cmp [ ebp - 0x6 ] 0x0
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
jne r-xdata
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_444c14
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_444c14
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp [ esi + 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp [ esi + 0x1b ] 0x0
jne r-xdata
push 0x10
lea ecx [ ebp - 0x24 ]
call sub_444c14
push 0x10
lea ecx [ ebp - 0x24 ]
call sub_444c14
jmp r-xdata
push 0x11
lea ecx [ ebp - 0x24 ]
call sub_444c14
mov [ esi + 0x1c ] 0x1
jmp r-xdata
push 0x11
lea ecx [ ebp - 0x24 ]
call sub_444c14
mov [ esi + 0x1c ] 0x0
jmp r-xdata
push 0x5b
lea ecx [ ebp - 0x24 ]
call sub_444c14
mov [ esi + 0x1e ] 0x1
jmp r-xdata
push 0x5b
lea ecx [ ebp - 0x24 ]
call sub_444c14
mov [ esi + 0x1e ] 0x0
jmp r-xdata
push 0x5c
lea ecx [ ebp - 0x24 ]
call sub_444c14
mov [ esi + 0x1f ] 0x1
push 0x5c
lea ecx [ ebp - 0x24 ]
call sub_444c14
mov [ esi + 0x1f ] 0x0
jmp r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
push 0x1
push ebx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x1
jmp r-xdata
xor ebx ebx
push ebx
lea ecx [ ebp - 0x34 ]
call sub_40a4f6
push 0x30
pop ecx
cmp [ eax ] cx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
cmp [ esi + 0x1d ] 0x0
je r-xdata
jmp r-xdata
call sub_444497
jmp r-xdata
mov [ esi + 0x1d ] 0x0
jmp r-xdata
cmp [ esi + 0x1a ] 0x0
je r-xdata
jmp r-xdata
cmp [ esi + 0x1b ] 0x0
je r-xdata
mov [ esi + 0x1b ] 0x1
jmp r-xdata
mov [ esi + 0x1a ] 0x0
jmp r-xdata
xor ebx ebx
mov edi ebx
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_444c14
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_444342
push ebx
push eax
call sub_44427b
jmp r-xdata
push 0x0
push eax
call sub_4442d9
jmp r-xdata
push [ ebp - 0x34 ]
call sub_422241
mov ebx eax
pop ecx
test ebx ebx
jg r-xdata
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_40a4f6
cmp [ eax ] 0x78
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
call sub_4445dc
jmp r-xdata
mov [ esi + 0x1a ] 0x1
jmp r-xdata
mov [ esi + 0x1b ] 0x0
jmp r-xdata
cmp [ esi + 0x1d ] bl
jne r-xdata
push edi
lea ecx [ ebp - 0x34 ]
call sub_40a4f6
mov al [ eax ]
add al 0x30
movzx eax al
push eax
lea ecx [ ebp - 0x24 ]
call sub_444c14
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_4445dc
inc edi
jmp r-xdata
xor ebx ebx
inc ebx
push 0x2
push ebx
lea ecx [ ebp - 0x34 ]
call sub_40a2fb
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4436f9
push ebx
lea ecx [ ebp - 0x34 ]
call sub_40a4f6
mov ebx [ ebp - 0x10 ]
push 0x30
pop ecx
cmp [ eax ] cx
push ebx
lea eax [ ebp - 0x64 ]
jne r-xdata
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_40a4f6
cmp [ eax ] 0x58
jne r-xdata
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_444c14
push edi
lea ecx [ ebp - 0x34 ]
call sub_40a4f6
cmp [ eax ] bx
je r-xdata
push r--data
push r--data
jmp r-xdata
push eax
call sub_444c4e
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_407e53
jmp r-xdata
sub_44427b
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x14 ]
call sub_4434e5
push [ ebp + 0x8 ]
call sub_444c14
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_44388d
lea ebx [ esi + 0x14 ]
push ebx
mov ecx esi
call sub_4445f9
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
push ebx
mov ecx esi
call sub_4447de
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_4445dc
dec edi
jne r-xdata
sub_4442d9
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push edi
movzx edi al
push edi
mov [ ebp - 0x4 ] ecx
call [ GetKeyState@IAT ]
mov bx ax
and bl 0x1
cmp [ ebp + 0xc ] bl
je r-xdata
pop edi
mov al bl
pop ebx
leave
retn 0x8
push esi
mov esi [ MapVirtualKeyW@IAT ]
push ecx
push 0x0
push 0x0
push edi
call esi
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_444b52
mov ecx [ ebp - 0x4 ]
call sub_44354e
push ecx
push 0x2
push 0x0
push edi
call esi
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_444b52
mov ecx [ ebp - 0x4 ]
call sub_443535
pop esi
sub_444342
push ebp
mov ebp esp
sub esp 0x128
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
movzx eax [ edi + 0x8 ]
cmp [ esi + 0x20 ] 0x0
mov bl [ edi ]
mov bh [ edi + 0x7 ]
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x4 ] bh
mov [ ebp - 0xc ] eax
je r-xdata
mov ecx edi
call sub_44383c
test al al
je r-xdata
cmp bl 0x14
je r-xdata
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
xor eax eax
mov [ ebp - 0x24 ] ax
movzx eax [ edi + 0x8 ]
mov [ ebp - 0x22 ] ax
push 0x1c
xor ecx ecx
lea eax [ ebp - 0x28 ]
inc ecx
push eax
push ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x20 ] 0x4
call [ SendInput@IAT ]
mov ecx edi
call sub_44377c
push ecx
mov ecx esi
cmp al 0x1
jne r-xdata
cmp bl 0x90
je r-xdata
push 0x0
push 0x1
jmp r-xdata
cmp bl 0x91
je r-xdata
mov ecx esi
call sub_44354e
pop edi
pop esi
pop ebx
leave
retn 0x4
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_444b52
jmp r-xdata
mov ecx edi
call sub_44383c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
movzx eax ax
push 0x1
push eax
push 0x102
lea eax [ ebp - 0x128 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx edi bh
shl edi 0x10
or edi 0x1
call sub_44377c
cmp al 0x1
jne r-xdata
movzx eax bl
or [ ebp + eax - 0x128 ] 0x80
lea eax [ ebp - 0x128 ]
push eax
call [ SetKeyboardState@IAT ]
cmp [ esi + 0x17 ] 0x0
jne r-xdata
or edi 0x1000000
cmp [ esi + 0x16 ] 0x0
jne r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
movzx eax bl
push edi
push eax
push 0x100
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp bl 0x12
jne r-xdata
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
jmp r-xdata
or edi 0x20000000
movzx eax bl
push edi
push eax
push 0x104
jmp r-xdata
sub_444497
push ebp
mov ebp esp
sub esp 0x124
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov bl [ edi ]
cmp [ esi + 0x20 ] 0x0
mov bh [ edi + 0x7 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x8 ] bh
je r-xdata
mov ecx edi
call sub_44383c
test al al
je r-xdata
cmp bl 0x14
je r-xdata
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
xor eax eax
mov [ ebp - 0x20 ] ax
movzx eax [ edi + 0x8 ]
mov [ ebp - 0x1e ] ax
push 0x1c
xor ecx ecx
lea eax [ ebp - 0x24 ]
inc ecx
push eax
push ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] 0x6
call [ SendInput@IAT ]
mov ecx edi
call sub_44377c
push ecx
mov ecx esi
cmp al 0x1
jne r-xdata
cmp bl 0x90
je r-xdata
push 0x2
push 0x3
jmp r-xdata
cmp bl 0x91
je r-xdata
mov ecx esi
call sub_443535
pop edi
pop esi
pop ebx
leave
retn 0x4
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_444b52
jmp r-xdata
mov ecx edi
call sub_44383c
test al al
je r-xdata
lea eax [ ebp - 0x124 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx edi bh
shl edi 0x10
or edi 0xc0000001
call sub_44377c
cmp al 0x1
jne r-xdata
movzx eax bl
xor [ ebp + eax - 0x124 ] 0x80
lea eax [ ebp - 0x124 ]
push eax
call [ SetKeyboardState@IAT ]
cmp [ esi + 0x17 ] 0x0
jne r-xdata
or edi 0x1000000
cmp [ esi + 0x16 ] 0x0
jne r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
movzx eax bl
push edi
push eax
push 0x101
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp bl 0x12
jne r-xdata
or edi 0x20000000
movzx eax bl
push edi
push eax
push 0x105
jmp r-xdata
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
jmp r-xdata
sub_4445f9
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi ] 0x0
mov edi ecx
jne r-xdata
cmp [ edi + 0x20 ] 0x0
push ebx
je r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ esi ] bl
je r-xdata
push [ edi + 0x20 ]
call [ GetParent@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
movzx eax [ edi + 0x27 ]
push ecx
push ebx
push eax
push 0xa0
mov ecx edi
call sub_444b52
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x3 ] 0x0
jne r-xdata
cmp [ esi + 0x2 ] bl
je r-xdata
movzx eax [ edi + 0x28 ]
push ecx
push ebx
push eax
push 0xa1
mov ecx edi
call sub_444b52
cmp [ esi ] 0x0
mov ebx [ PostMessageW@IAT ]
jne r-xdata
cmp [ esi ] 0x0
mov al [ ebp - 0xf0 ]
mov ecx 0x80
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x3 ] bl
je r-xdata
movzx eax [ edi + 0x24 ]
push ecx
push ebx
push eax
push 0x11
mov ecx edi
call sub_444b52
movzx eax [ edi + 0x26 ]
shl eax 0x10
or eax 0x1
push eax
push 0x10
push 0x100
push [ edi + 0x20 ]
call ebx
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
or al cl
or [ ebp - 0x60 ] cl
mov [ ebp - 0xf0 ] al
pop edi
pop esi
leave
retn 0x4
cmp [ esi + 0x4 ] bl
je r-xdata
movzx eax [ edi + 0x25 ]
push ecx
push ebx
push eax
push 0x12
mov ecx edi
call sub_444b52
mov al [ esi + 0x3 ]
test al al
je r-xdata
movzx eax [ edi + 0x24 ]
shl eax 0x10
or eax 0x1
push eax
push 0x11
push 0x100
push [ edi + 0x20 ]
call ebx
cmp [ esi + 0x2 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x0
je r-xdata
or al cl
or [ ebp - 0x5f ] cl
mov [ ebp - 0xf0 ] al
mov ecx edi
call sub_44354e
pop ebx
movzx eax [ edi + 0x29 ]
push ecx
push ebx
push eax
push 0x5b
mov ecx edi
call sub_444b52
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x3 ] 0x0
je r-xdata
or [ ebp - 0xef ] cl
movzx eax [ edi + 0x29 ]
shl eax 0x10
or eax 0x1
push eax
push 0x5b
push 0x100
push [ edi + 0x20 ]
call ebx
jmp r-xdata
test al al
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
or [ ebp - 0xee ] cl
movzx eax [ edi + 0x25 ]
shl eax 0x10
or eax 0x1
push eax
push 0x12
push 0x100
movzx eax [ edi + 0x25 ]
shl eax 0x10
or eax 0x20000001
push eax
push 0x12
push 0x104
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call [ SetKeyboardState@IAT ]
or [ ebp - 0xa5 ] cl
push [ edi + 0x20 ]
call ebx
sub_4447de
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi ] 0x0
mov edi ecx
jne r-xdata
cmp [ edi + 0x20 ] 0x0
push ebx
je r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
push 0x2
pop ebx
je r-xdata
push [ edi + 0x20 ]
call [ GetParent@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
movzx eax [ edi + 0x27 ]
push ecx
push ebx
push eax
push 0xa0
mov ecx edi
call sub_444b52
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x3 ] 0x0
jne r-xdata
cmp [ esi + 0x2 ] 0x0
je r-xdata
movzx eax [ edi + 0x28 ]
push ecx
push ebx
push eax
push 0xa1
mov ecx edi
call sub_444b52
cmp [ esi ] 0x0
mov ebx [ PostMessageW@IAT ]
jne r-xdata
cmp [ esi ] 0x0
mov al [ ebp - 0xf0 ]
mov ecx 0x80
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x3 ] 0x0
je r-xdata
movzx eax [ edi + 0x24 ]
push ecx
push ebx
push eax
push 0x11
mov ecx edi
call sub_444b52
movzx eax [ edi + 0x26 ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x10
push 0x101
push [ edi + 0x20 ]
call ebx
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
xor al cl
xor [ ebp - 0x60 ] cl
mov [ ebp - 0xf0 ] al
pop edi
pop esi
leave
retn 0x4
cmp [ esi + 0x4 ] 0x0
je r-xdata
movzx eax [ edi + 0x25 ]
push ecx
push ebx
push eax
push 0x12
mov ecx edi
call sub_444b52
mov al [ esi + 0x3 ]
test al al
je r-xdata
movzx eax [ edi + 0x24 ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x11
push 0x101
push [ edi + 0x20 ]
call ebx
cmp [ esi + 0x2 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x0
je r-xdata
xor al cl
xor [ ebp - 0x5f ] cl
mov [ ebp - 0xf0 ] al
mov ecx edi
call sub_443535
pop ebx
movzx eax [ edi + 0x29 ]
push ecx
push ebx
push eax
push 0x5b
mov ecx edi
call sub_444b52
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x3 ] 0x0
je r-xdata
xor [ ebp - 0xef ] cl
movzx eax [ edi + 0x29 ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x5b
push 0x101
push [ edi + 0x20 ]
call ebx
jmp r-xdata
test al al
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor [ ebp - 0xee ] cl
movzx eax [ edi + 0x25 ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x12
push 0x101
movzx eax [ edi + 0x25 ]
shl eax 0x10
or eax 0xe0000001
push eax
push 0x12
push 0x105
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call [ SetKeyboardState@IAT ]
xor [ ebp - 0xa5 ] cl
push [ edi + 0x20 ]
call ebx
sub_4449d1
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
pop esi
leave
retn 0x4
jne r-xdata
cmp esi 0xf
jae r-xdata
push 0x0
jmp r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
call [ Sleep@IAT ]
mov [ ebp + 0x8 ] esi
fild [ ebp + 0x8 ]
test esi esi
jns r-xdata
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fstp [ ebp - 0x28 ]
fadd [ r--data ]
push 0x0
call [ Sleep@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sbb eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x18 ]
fstp [ ebp - 0x20 ]
call sub_41ebde
fdivr [ ebp - 0x20 ]
fcomp [ ebp - 0x28 ]
fnstsw ax
test ah 0x5
jpo r-xdata
jmp r-xdata
sub_444a5b
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
test edi edi
jne r-xdata
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
call [ GetCurrentThreadId@IAT ]
cmp [ ebp + 0xc ] 0x0
mov esi eax
je r-xdata
cmp [ ebx + 0x9 ] 0x0
je r-xdata
test edi edi
mov edi [ AttachThreadInput@IAT ]
je r-xdata
push 0x0
call [ GetForegroundWindow@IAT ]
push eax
call [ GetWindowThreadProcessId@IAT ]
push 0x1
push eax
push esi
mov [ rw-data ] eax
call [ AttachThreadInput@IAT ]
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
pop edi
pop ebx
leave
retn 0x8
mov eax [ rw-data ]
push 0x0
push [ rw-data ]
push esi
call edi
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push edi
call [ GetWindowThreadProcessId@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp ecx eax
je r-xdata
push 0x0
push eax
push esi
call edi
push 0x0
push ecx
push eax
call edi
pop esi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x1
push eax
push esi
call [ AttachThreadInput@IAT ]
jmp r-xdata
push 0x1
push eax
push ecx
call [ AttachThreadInput@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp esi eax
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
and [ ebx + 0x20 ] 0x0
jmp r-xdata
sub_444b52
push ebp
mov ebp esp
sub esp 0x1c
test [ ecx + 0xc ] 0x4
je r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ keybd_event@IAT ]
movzx eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] ax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x16 ] ax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
push 0x1c
xor ecx ecx
lea eax [ ebp - 0x1c ]
inc ecx
push eax
push ecx
mov [ ebp - 0x1c ] ecx
call [ SendInput@IAT ]
jmp r-xdata
leave
retn 0x10
sub_444ba6
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0xa ] al
mov eax [ ebp + 0x8 ]
mov [ esi ] 0xff
mov [ esi + 0x8 ] ax
test ax ax
jne r-xdata
push eax
call [ VkKeyScanW@IAT ]
movzx eax ax
cmp ax 0xffff
je r-xdata
xor al al
jmp r-xdata
push ebx
mov ebx eax
mov [ esi ] al
movzx eax al
push 0x0
push eax
sar ebx 0x8
call [ MapVirtualKeyW@IAT ]
mov [ esi + 0x7 ] al
test bl 0x1
je r-xdata
pop esi
pop ebp
retn 0x4
test bl 0x2
je r-xdata
mov [ esi + 0x1 ] 0x1
test bl 0x4
pop ebx
je r-xdata
mov [ esi + 0x3 ] 0x1
mov al 0x1
mov [ esi + 0x4 ] 0x1
sub_444c14
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x6 ] eax
mov [ esi + 0x1 ] eax
mov [ esi + 0x5 ] al
mov [ esi + 0xa ] al
mov [ esi ] bl
call sub_44383c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
movzx eax bl
push 0x0
push eax
call [ MapVirtualKeyW@IAT ]
mov [ esi + 0x7 ] al
mov al 0x1
sub_444c65
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
xor esi esi
lea eax [ edi + 0x4 ]
cmp esi 0x10
jne r-xdata
inc esi
add eax 0x8
cmp esi 0x10
jl r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
call [ GetWindowThreadProcessId@IAT ]
push [ ebp - 0x4 ]
push 0x0
push 0x438
call [ OpenProcess@IAT ]
push 0x4
push 0x1000
push [ ebp + 0x8 ]
mov [ edi + esi * 8 ] eax
push 0x0
push eax
call [ VirtualAllocEx@IAT ]
mov [ edi + esi * 8 + 0x4 ] eax
xor eax eax
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x8
sub_444cc6
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
xor esi esi
lea eax [ edi + 0x4 ]
push 0x8000
push 0x0
push [ edi + esi * 8 + 0x4 ]
push [ edi + esi * 8 ]
call [ VirtualFreeEx@IAT ]
push [ edi + esi * 8 ]
call [ CloseHandle@IAT ]
and [ edi + esi * 8 + 0x4 ] 0x0
inc esi
add eax 0x8
cmp esi 0x10
jl r-xdata
cmp [ eax ] ecx
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_444d0c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
lea edx [ ecx + 0x4 ]
cmp eax 0x10
je r-xdata
inc eax
add edx 0x8
cmp eax 0x10
jl r-xdata
pop esi
pop ebp
retn 0xc
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push [ ecx + eax * 8 ]
call [ ReadProcessMemory@IAT ]
cmp [ edx ] esi
je r-xdata
sub_444d41
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
xor eax eax
lea edx [ ecx + 0x4 ]
cmp eax 0x10
je r-xdata
inc eax
add edx 0x8
cmp eax 0x10
jl r-xdata
pop esi
pop ebp
retn 0xc
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push esi
push [ ecx + eax * 8 ]
call [ WriteProcessMemory@IAT ]
cmp [ edx ] esi
je r-xdata
sub_444d76
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov eax [ edx ]
mov esi ecx
mov [ esi ] eax
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov al [ edx + 0x8 ]
mov [ esi + 0x8 ] al
mov eax [ edx + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edx + 0x10 ]
push eax
mov [ esi + 0x10 ] eax
call [ InterlockedIncrement@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub_444da9
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x8
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov eax ebx
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
jmp r-xdata
push 0x10
mov [ esi ] eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
push 0x4
mov [ esi + 0x4 ] eax
call sub_42010a
mov [ esi + 0x10 ] eax
pop ecx
mov [ eax ] 0x1
mov [ esi + 0xc ] esi
mov eax esi
pop esi
pop ebx
retn
sub_444e09
push esi
mov esi ecx
push [ esi + 0x10 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push ecx
call sub_444e3d
push [ esi + 0x10 ]
call j_sub_4228ca#2
pop ecx
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_444e54
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov ecx [ esi ]
call sub_43fe03
push eax
mov ecx esi
call sub_444e71
pop esi
pop ebp
retn 0x4
sub_444e71
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
js r-xdata
mov [ ecx + 0x8 ] 0x1
mov ecx [ rw-data ]
mov esi rw-data
test cl 0x1
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax esi
or ecx 0x1
mov [ rw-data ] ecx
push r--data
mov ecx esi
call sub_41d6b4
push sub_471f8d
call sub_421b2a
pop ecx
mov [ ecx + 0x8 ] 0x0
mov eax [ eax + 0x4 ]
mov eax [ eax + edx * 4 ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
call sub_445198
jmp r-xdata
sub_444ed4
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
push 0x4
mov ecx esi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
call sub_40cdb4
mov esi eax
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x14 ]
inc [ eax ]
mov [ ebp - 0x8 ] eax
call sub_40b8a7
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call [ CharUpperBuffW@IAT ]
mov ecx [ edi ]
lea eax [ ebp - 0x14 ]
push eax
call sub_43fe03
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
push esi
call sub_444f8a
pop edi
pop esi
leave
retn 0xc
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
mov [ ebp - 0x18 ] 0x1
call sub_445294
lea ecx [ ebp - 0x24 ]
mov esi eax
call sub_412570
sub_444f8a
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
js r-xdata
xor eax eax
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
dec eax
cmp esi eax
jle r-xdata
mov eax [ edx + 0x4 ]
xor ecx ecx
cmp [ eax + esi * 4 ] ecx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ ebp + 0x10 ] cl
je r-xdata
push esi
mov ecx edx
call sub_445366
xor ecx ecx
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov ecx [ edi + 0x4 ]
push eax
mov [ ebp - 0x8 ] 0x1
call sub_41baef
lea ecx [ ebp - 0x14 ]
call sub_412570
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x4 ] ecx
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
push esi
mov ecx edx
mov [ ebp - 0x8 ] 0x1
call sub_4453e6
lea ecx [ ebp - 0x14 ]
call sub_412570
call sub_445198
jmp r-xdata
mov eax [ eax + esi * 4 ]
jmp r-xdata
sub_44503c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_40b8a7
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
xor edi edi
inc edi
cmp [ ebp + 0xc ] di
jne r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
call sub_444e54
mov ecx [ ebp + 0x14 ]
push eax
call sub_40d89e
cmp [ ebx + 0x8 ] 0x0
je r-xdata
test [ ebp + 0xc ] 0x4
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
call sub_444e54
mov esi eax
push 0x29
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
xor edi edi
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_41f885
test al al
je r-xdata
push 0x2
mov eax [ ebp + 0x10 ]
mov ecx ebx
mov eax [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x10 ]
push eax
call sub_445294
test eax eax
js r-xdata
mov ecx [ ebp + 0x14 ]
push esi
call sub_40d89e
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov edx r--data
call sub_41f885
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x10
push 0x3
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] edi
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
call sub_44a76d
jmp r-xdata
pop edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x20 ]
inc [ eax ]
mov [ ebp - 0x14 ] eax
call sub_40b8a7
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ CharUpperBuffW@IAT ]
lea ecx [ ebp - 0x20 ]
call sub_405cd3
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
sub_445198
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x1c
push esi
test al 0x1
jne r-xdata
mov esi rw-data
push 0x2a
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
xor ecx ecx
inc ecx
or eax ecx
push sub_471f97
mov [ rw-data ] eax
mov [ rw-data ] ecx
call sub_421b2a
pop ecx
mov eax esi
pop esi
leave
retn
sub esp 0x10
mov ecx esp
push r--data
call sub_40caee
push 0x0
push 0x2a
lea ecx [ ebp - 0x18 ]
call sub_4499d0
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_44a689
lea ecx [ ebp - 0x10 ]
call sub_405cd3
sub_445216
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x1c
push esi
test al 0x1
jne r-xdata
mov esi rw-data
push 0x29
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
xor ecx ecx
inc ecx
or eax ecx
push sub_471fa1
mov [ rw-data ] eax
mov [ rw-data ] ecx
call sub_421b2a
pop ecx
mov eax esi
pop esi
leave
retn
sub esp 0x10
mov ecx esp
push r--data
call sub_40caee
push 0x0
push 0x29
lea ecx [ ebp - 0x18 ]
call sub_4499d0
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_44a689
lea ecx [ ebp - 0x10 ]
call sub_405cd3
sub_445294
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov ecx [ esi ]
call sub_43ff93
push [ ebp + 0xc ]
mov ecx esi
push eax
call sub_4452b6
pop esi
pop ecx
pop ebp
retn 0x8
sub_4452b6
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ebx [ edi + 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x4 ] eax
test esi esi
js r-xdata
mov eax esi
cmp esi eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0xc ]
push 0xf
call sub_40d2c0
test al al
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebx + 0x4 ]
xor ecx ecx
cmp [ eax + esi * 4 ] ecx
jne r-xdata
push [ ebp + 0xc ]
mov ecx ebx
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] 0xf
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ edi + 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40d89e
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] ecx
push esi
mov ecx ebx
mov [ ebp - 0xc ] 0x1
call sub_4453e6
lea ecx [ ebp - 0x18 ]
call sub_412570
xor eax eax
mov eax [ eax ]
jmp r-xdata
call sub_445216
mov ecx [ edi + 0x4 ]
push eax
jmp r-xdata
mov eax [ eax + 0xc ]
cmp eax [ edi + 0xc ]
jne r-xdata
call sub_41baef
mov ecx [ ebp - 0x4 ]
mov eax [ edi ]
inc ecx
mov [ eax + 0x4 ] ecx
sub_445366
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi [ esi + 0x8 ]
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push 0x8
pop eax
cmp edi eax
jb r-xdata
push ebx
inc eax
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax edi
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
sub eax ecx
shl eax 0x2
push eax
lea eax [ ebx + ecx * 4 ]
push 0x0
push eax
call sub_421970
add esp 0xc
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] edi
pop ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push ebx
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
sub_4453e6
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
push 0x10
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
push ecx
call sub_44062e
xor esi esi
push [ ebp + 0xc ]
and [ esi + 0x8 ] 0x0
mov ecx esi
call sub_4113a0
jmp r-xdata
mov eax [ edi + 0x4 ]
pop edi
mov [ eax + ebx * 4 ] esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_445436
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x14
mov ebx ecx
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
xor edi edi
lea ecx [ edi + 0x4 ]
call sub_40d3d2
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x4 ]
mov eax [ ebx + esi * 4 + 0x1b4 ]
add eax 0x8
push eax
mov [ ebp - 0x4 ] edi
call sub_40c935
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebx + 0x8c ]
mov [ edi ] esi
call sub_446437
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_44548a
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x14
mov ebx ecx
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
xor edi edi
lea ecx [ edi + 0x4 ]
call sub_40d3d2
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
shl eax 0x4
add eax 0x184
add eax ebx
push eax
lea ecx [ edi + 0x4 ]
mov [ ebp - 0x4 ] edi
call sub_40c935
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebx + 0x8c ]
mov [ edi ] esi
call sub_446437
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4454e0
push ebp
mov ebp esp
sub esp 0x38
cmp [ ebp + 0x10 ] 0xffffffff
push ebx
push esi
push edi
mov esi ecx
je r-xdata
call sub_445757
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] 0x7
jl r-xdata
xor eax eax
mov ebx [ esi + edi * 4 + 0x1b4 ]
push 0x2c
lea eax [ ebp - 0x34 ]
push 0x0
push eax
mov [ ebp - 0x38 ] 0x30
call sub_421970
add esp 0xc
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x207
jge r-xdata
or [ ebp - 0x8 ] 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
mov ecx esi
call sub_445d2c
test al al
je r-xdata
mov eax [ esi ]
mov [ ebx ] eax
jmp r-xdata
push edi
mov ecx esi
call sub_445685
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x34 ] 0x4
mov eax [ esi + ecx * 4 + 0x1b4 ]
lea edx [ ebp - 0x38 ]
mov eax [ eax ]
push edx
push 0x0
push ecx
push eax
mov [ ebx ] eax
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov [ ebx + 0x5 ] dl
mov [ ebp - 0x34 ] 0x32
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x28 ] edi
sub eax edx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebx ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ecx ] dx
jne r-xdata
dec eax
jne r-xdata
push [ ebp - 0x24 ]
call [ IsMenu@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
mov [ ebp - 0x30 ] 0x800
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
call [ CreatePopupMenu@IAT ]
test eax eax
jne r-xdata
mov [ ebx + 0x4 ] dl
mov [ ebp - 0x30 ] 0x200
mov [ ebx + 0x5 ] 0x1
mov eax [ ebp + 0x14 ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
or [ ebp - 0x34 ] 0x4
mov [ ebp - 0x24 ] eax
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
push edi
mov ecx esi
call sub_445a25
jmp r-xdata
mov [ esi + 0x9d4 ] edi
mov eax edi
jmp r-xdata
cmp edi 0x7
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ esi ]
cmp [ ebx ] eax
jne r-xdata
push eax
call [ GetMenuItemCount@IAT ]
mov ecx eax
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x8 ] ecx
cmp eax 0xffffffff
je r-xdata
lea eax [ ecx - 0x4 ]
jmp r-xdata
lea edx [ ecx - 0x4 ]
lea ecx [ eax + 0x1 ]
cmp ecx edx
jle r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push 0x1
push eax
push [ ebx ]
call [ InsertMenuItemW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
sub_445685
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi 0x207
jge r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
push edi
lea edi [ esi + 0x6d ]
lea edi [ ebx + edi * 4 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
and [ edi ] 0x0
cmp esi [ ebx + 0x9d0 ]
jne r-xdata
push ecx
call sub_44aa9c
pop edi
cmp esi 0x7
jl r-xdata
xor esi esi
cmp [ edi ] 0x0
jne r-xdata
cmp esi 0x7
jge r-xdata
dec esi
sub edi 0x4
cmp esi 0x7
jge r-xdata
mov [ ebx + 0x9d0 ] esi
sub_4456dc
push ebp
mov ebp esp
push edi
lea edi [ ecx + 0x8c ]
cmp [ edi ] 0x0
je r-xdata
cmp [ ecx + 0xa0 ] 0x0
jne r-xdata
mov eax [ ecx + 0x90 ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ eax ]
mov eax [ esi ]
mov [ ecx ] eax
lea eax [ esi + 0x4 ]
push eax
add ecx 0x4
call sub_40c935
mov ecx edi
call sub_446417
push ecx
mov ecx esi
call sub_468ba4
and [ rw-data ] 0x0
mov al 0x1
pop esi
jmp r-xdata
xor al al
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop ebp
retn 0x4
push 0xa
mov eax [ rw-data ]
cmp eax 0x64
jge r-xdata
inc eax
mov [ rw-data ] eax
push 0x0
jmp r-xdata
call [ Sleep@IAT ]
sub_445757
push ebx
mov ebx ecx
push esi
mov eax [ ebx + 0x9d0 ]
push edi
cmp eax 0x206
jge r-xdata
push 0x7
pop edi
cmp edi eax
jg r-xdata
push 0x18
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
or eax 0xffffffff
lea ecx [ ebx + 0x1d0 ]
xor esi esi
lea ecx [ esi + 0x8 ]
call sub_40d3d2
jmp r-xdata
cmp edi eax
jg r-xdata
inc edi
add ecx 0x4
cmp edi eax
jle r-xdata
inc eax
mov [ ebx + 0x9d0 ] eax
mov [ ebx + 0x9d0 ] 0x7
jmp r-xdata
mov eax [ ebx + 0x9d0 ]
test eax eax
jne r-xdata
push 0x18
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov [ ebx + edi * 4 + 0x1b4 ] esi
and [ esi ] 0x0
mov [ esi + 0x4 ] 0xff
mov eax edi
jmp r-xdata
mov edi [ ebx + 0x9d0 ]
jmp r-xdata
xor esi esi
lea ecx [ esi + 0x8 ]
call sub_40d3d2
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4457fb
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x2c
xor ebx ebx
lea eax [ ebp - 0x40 ]
push ebx
push eax
mov esi ecx
mov [ ebp - 0x44 ] 0x30
call sub_421970
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
movzx eax ax
push eax
mov ecx esi
mov [ ebp - 0x40 ] 0x1
call sub_445d2c
test al al
je r-xdata
xor al al
mov edi [ ebp - 0x4 ]
mov ecx [ esi + edi * 4 + 0x1b4 ]
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov eax [ ebp + 0x10 ]
shr eax 0x10
test ax ax
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
push ebx
push edi
push [ esi ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax [ ebp - 0x38 ]
test al 0x8
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
or eax 0x8
mov [ rw-data ] 0x1
xor eax 0x8
mov [ rw-data ] bl
jmp r-xdata
mov eax [ ecx ]
mov [ ebp + 0x10 ] eax
cmp [ esi + 0x7 ] bl
je r-xdata
mov al 0x1
jmp r-xdata
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x44 ]
push eax
push ebx
push 0x4
push [ esi ]
call [ SetMenuItemInfoW@IAT ]
mov ecx esi
call sub_4038e4
push 0x1f4
call [ Sleep@IAT ]
jmp r-xdata
cmp [ esi + 0x5 ] bl
je r-xdata
cmp [ ecx + 0x5 ] bl
je r-xdata
push edi
mov ecx esi
call sub_445436
jmp r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push ebx
push edi
push eax
call [ GetMenuItemInfoW@IAT ]
mov eax [ ebp - 0x38 ]
test al 0x8
je r-xdata
push eax
call [ GetMenuItemCount@IAT ]
mov [ ebp + 0x14 ] eax
cmp [ esi + 0x4 ] bl
je r-xdata
or eax 0x8
xor eax 0x8
jmp r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x44 ]
push eax
push ebx
push edi
push [ ebp + 0x10 ]
call [ SetMenuItemInfoW@IAT ]
or eax 0xffffffff
push ebx
push [ ebp + 0x10 ]
call [ GetMenuItemID@IAT ]
cmp eax edi
je r-xdata
mov eax ebx
dec ebx
mov [ ebp - 0x8 ] eax
js r-xdata
inc ebx
cmp ebx [ ebp + 0x14 ]
jl r-xdata
lea ecx [ ebx + 0x1 ]
lea ebx [ eax + 0x1 ]
mov [ ebp - 0x14 ] ecx
cmp ebx [ ebp + 0x14 ]
jge r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
push 0x400
push eax
lea eax [ ebx - 0x1 ]
push eax
push ecx
push [ ebp + 0x10 ]
call [ CheckMenuRadioItem@IAT ]
jmp r-xdata
mov edi [ ebp + 0x10 ]
dec ebx
jns r-xdata
mov eax [ ebp - 0xc ]
mov eax [ esi + eax * 4 + 0x1b4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
cmp eax edi
jne r-xdata
inc ebx
cmp ebx [ ebp + 0x14 ]
jl r-xdata
mov eax [ ebp - 0xc ]
mov eax [ esi + eax * 4 + 0x1b4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
push ebx
push edi
call [ GetMenuItemID@IAT ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_445d2c
test al al
je r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push ebx
push edi
call [ GetMenuItemID@IAT ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_445d2c
test al al
je r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
sub_445a25
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
or [ esp ] 0xffffffff
push ebx
push esi
push edi
lea eax [ esp + 0xc ]
push eax
push [ ebp + 0x8 ]
mov esi ecx
call sub_445d2c
test al al
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
push 0x7
pop ebx
cmp edi ebx
jl r-xdata
cmp edi [ esi + 0x9d0 ]
jg r-xdata
mov eax [ esi + edi * 4 + 0x1b4 ]
mov [ esp + 0x14 ] eax
cmp [ eax + 0x4 ] 0x1
mov ecx [ eax ]
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ebx [ esp + 0x14 ]
push 0x0
push edi
push [ ebx ]
call [ DeleteMenu@IAT ]
test eax eax
je r-xdata
push 0x2c
lea eax [ esp + 0x20 ]
push 0x0
push eax
mov [ esp + 0x24 ] 0x30
call sub_421970
add esp 0xc
lea eax [ esp + 0x18 ]
push eax
push 0x0
push edi
push [ esp + 0x1c ]
mov [ esp + 0x2c ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
xor eax eax
push 0xffffffff
push eax
lea ecx [ ebx + 0x8 ]
mov [ ebx + 0x4 ] 0xff
mov [ ebx ] eax
call sub_40a2fb
push edi
mov ecx esi
call sub_445685
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov [ esp + 0x10 ] ecx
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x9d0 ] ebx
jl r-xdata
lea edi [ esi + 0x1d0 ]
inc ebx
add edi 0x4
cmp ebx [ esi + 0x9d0 ]
jle r-xdata
cmp [ eax ] ecx
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov edi [ esp + 0xc ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
push 0x0
push ebx
push ecx
call [ DeleteMenu@IAT ]
mov eax [ edi ]
xor ecx ecx
mov [ eax + 0x4 ] 0xff
mov eax [ edi ]
push 0xffffffff
mov [ eax ] ecx
mov eax [ edi ]
push ecx
mov [ eax + 0x5 ] cl
mov ecx [ edi ]
add ecx 0x8
call sub_40a2fb
push ebx
mov ecx esi
call sub_445685
push ebx
mov ecx esi
call sub_445a25
jmp r-xdata
mov ecx [ esp + 0x10 ]
sub_445b75
push ebp
mov ebp esp
sub esp 0x34
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x5
je r-xdata
xor eax eax
cmp edi 0x6
je r-xdata
cmp edi 0x3
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi * 4 + rw-data ]
and [ esi ] 0x0
test eax eax
je r-xdata
cmp edi 0x4
je r-xdata
mov ebx [ eax ]
push 0x2c
lea eax [ ebp - 0x30 ]
push 0x0
push eax
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x34 ] 0x30
call sub_421970
add esp 0xc
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
mov ecx rw-data
call sub_445d2c
test al al
je r-xdata
push 0x208
call sub_42010a
mov ebx [ ebp + 0xc ]
pop ecx
mov [ ebx ] eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x34 ]
push eax
push 0x0
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x11
mov [ ebp - 0xc ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
push [ ebx ]
call j_sub_4228ca#2
pop ecx
test [ ebp - 0x2c ] 0x800
jne r-xdata
mov eax [ ebp - 0x28 ]
test al 0x3
je r-xdata
or [ esi ] 0x40
or [ esi ] 0x80
jmp r-xdata
test al 0x8
je r-xdata
or [ esi ] 0x100
test eax 0x8080
je r-xdata
or [ esi ] 0x4
or [ esi ] 0x1
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
or [ esi ] 0x200
test eax 0x1000
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_445c80
push ebp
mov ebp esp
sub esp 0x34
or [ ebp - 0x4 ] 0xffffffff
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
jne r-xdata
cmp esi 0x5
je r-xdata
mov eax [ rw-data ]
xor eax eax
cmp esi 0x6
je r-xdata
pop edi
pop esi
leave
retn 0x8
cmp esi 0x3
je r-xdata
mov edi esi
cmp esi 0x4
je r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push esi
mov ecx rw-data
call sub_445d2c
test al al
je r-xdata
push 0x2c
lea eax [ ebp - 0x30 ]
push 0x0
push eax
mov [ ebp - 0x34 ] 0x30
call sub_421970
add esp 0xc
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x30 ] 0x4
mov eax [ edi * 4 + rw-data ]
push 0x0
push esi
push [ eax ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ edi * 4 + rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
sub_445d2c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
or [ eax ] 0xffffffff
test edx edx
jns r-xdata
mov [ eax ] edx
mov eax edx
cmp eax 0x207
jge r-xdata
mov edx [ ecx + 0x9d4 ]
cmp edx 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
cmp [ ecx + eax * 4 + 0x1b4 ] 0x0
setne al
pop ebp
retn 0x8
sub_445d65
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
call sub_403bcf
push eax
lea ecx [ esp + 0x24 ]
call sub_404bce
mov esi [ ebp + 0x8 ]
or [ esp + 0x14 ] 0xffffffff
xor ecx ecx
cmp esi 0x5
je r-xdata
mov esi ecx
cmp esi 0x6
je r-xdata
mov edi [ esp + 0x20 ]
cmp esi 0x3
je r-xdata
mov eax esi
or ebx 0xffffffff
sub eax 0x3
je r-xdata
cmp esi 0x4
je r-xdata
cmp [ edi ] cx
mov ecx rw-data
jne r-xdata
dec eax
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push esi
mov ecx rw-data
call sub_445d2c
test al al
je r-xdata
push edi
call sub_407e53
push rw-data
jmp r-xdata
cmp [ esi * 4 + rw-data ] ecx
je r-xdata
cmp [ edi ] cx
mov ecx rw-data
jne r-xdata
xor ecx ecx
mov ebx [ ebp + 0x10 ]
mov esi [ esp + 0x14 ]
jmp r-xdata
cmp [ edi ] cx
je r-xdata
call sub_40c935
jmp r-xdata
push rw-data
mov eax [ esi * 4 + rw-data ]
push 0x208
mov [ esp + 0x18 ] eax
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x1c ]
call sub_404bce
xor eax eax
push 0x2c
push eax
mov [ esp + 0x1b ] al
lea eax [ esp + 0x34 ]
push eax
mov [ esp + 0x34 ] 0x30
call sub_421970
mov eax [ esp + 0x24 ]
add esp 0xc
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x28 ]
push eax
xor eax eax
push eax
mov eax [ esp + 0x1c ]
push esi
mov [ esp + 0x38 ] 0x11
mov [ esp + 0x5c ] 0x104
push [ eax ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
test [ esp + 0x30 ] 0x800
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_404fd2
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esp + 0x34 ]
xor ecx ecx
inc ecx
test edx 0x1000
je r-xdata
test ebx ebx
jns r-xdata
mov [ esp + 0x13 ] cl
mov eax edx
test bl 0x40
je r-xdata
xor eax eax
cmp [ edi ] ax
je r-xdata
test bl bl
jns r-xdata
and eax 0xfffffffc
mov esi eax
push edi
mov ebx eax
mov [ esp + 0x30 ] 0x10
mov [ esp + 0x50 ] edi
call sub_4218fb
pop ecx
mov [ esp + 0x50 ] eax
jmp r-xdata
test bl 0x1
je r-xdata
or eax 0x3
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x28 ]
push eax
xor eax eax
push eax
push esi
push [ edi ]
call [ SetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi ebx
and edi 0x4
je r-xdata
or eax 0x8
test ebx ebx
jle r-xdata
test ebx 0x100
je r-xdata
and eax 0xfffffff7
xor esi esi
inc esi
jmp r-xdata
test ebx 0x200
je r-xdata
test dl 0x8
je r-xdata
or eax 0x80
lea ecx [ esp + 0x18 ]
call sub_404fd2
jmp r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
xor eax eax
push eax
push esi
jmp r-xdata
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] eax
test edi edi
jne r-xdata
xor eax eax
push eax
push 0xffffffff
push [ edi ]
call [ SetMenuDefaultItem@IAT ]
test eax eax
je r-xdata
or eax 0x8
sub_445f91
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_445d2c
test al al
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
cmp ecx 0x7
jl r-xdata
cmp ecx [ rw-data ]
jg r-xdata
mov ecx [ ecx * 4 + rw-data ]
push [ ebp + 0xc ]
add ecx 0x8
call sub_40c935
xor eax eax
inc eax
jmp r-xdata
leave
retn 0x8
sub_445fdb
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
push edi
push 0x2c
lea eax [ ebp - 0x38 ]
push 0x0
push eax
mov edi ecx
mov [ ebp - 0x3c ] 0x30
call sub_421970
mov eax [ ebp + 0x14 ]
mov ecx [ edi + 0x9d0 ]
add esp 0xc
xor esi esi
push 0x8
pop ebx
push 0x1
mov [ ebp - 0x4 ] ecx
pop edx
sub eax 0x200
je r-xdata
push 0x40
pop esi
push 0xfffffff5
dec eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ rw-data ] 0x0
je r-xdata
mov esi edx
push 0xfffffff9
jmp r-xdata
dec eax
je r-xdata
cmp [ edi + 0x4 ] 0x0
mov ebx [ GetMenuItemCount@IAT ]
je r-xdata
mov ecx edi
call sub_44548a
push 0x2
pop esi
push 0xfffffff8
jmp r-xdata
dec eax
je r-xdata
mov esi [ DeleteMenu@IAT ]
push 0x0
push 0x5
push [ edi ]
call esi
push 0x0
push 0x4
push [ edi ]
call esi
push 0x0
push 0x6
push [ edi ]
call esi
push 0x0
push 0x3
push [ edi ]
call esi
mov [ edi + 0x8 ] 0x0
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp [ edi + 0xa ] 0x0
push 0x4
pop esi
je r-xdata
dec eax
je r-xdata
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
push [ edi ]
call ebx
test eax eax
jle r-xdata
push [ edi ]
call ebx
or esi 0xffffffff
test eax eax
jle r-xdata
push 0xfffffff3
jmp r-xdata
push 0x7
mov [ ebp - 0x30 ] ebx
pop ebx
mov [ ebp - 0x38 ] edx
cmp ecx ebx
jl r-xdata
mov esi ebx
push 0xfffffff7
jmp r-xdata
dec eax
je r-xdata
cmp [ edi + 0x6 ] 0x0
je r-xdata
mov [ edi + 0x6 ] bl
jmp r-xdata
push 0x0
push esi
push esi
push [ edi + 0x7c ]
mov ecx edi
push 0x0
mov [ edi + 0x9d0 ] 0x3
call sub_4454e0
push 0x0
push esi
push esi
push r--data
push 0x0
mov ecx edi
mov [ edi + 0x9d0 ] 0x5
call sub_4454e0
push 0x0
push esi
push esi
push [ edi + 0x6c ]
mov ecx edi
push 0x0
mov [ edi + 0x9d0 ] 0x2
call sub_4454e0
mov eax [ ebp - 0x4 ]
mov [ edi + 0x9d0 ] eax
mov [ edi + 0x8 ] 0x1
jmp r-xdata
push 0x0
push esi
push esi
push r--data
push 0x0
mov ecx edi
mov [ edi + 0x9d0 ] 0x4
call sub_4454e0
lea eax [ edi + 0x1d0 ]
mov [ ebp + 0x14 ] eax
push 0x10
pop esi
push 0xfffffff6
jmp r-xdata
dec eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetCursorPos@IAT ]
push [ ebp + 0x8 ]
call [ SetForegroundWindow@IAT ]
push ebx
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push ebx
push [ edi ]
call [ TrackPopupMenuEx@IAT ]
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call [ PostMessageW@IAT ]
mov ecx edi
call sub_4038e4
lea eax [ ebp - 0x3c ]
push eax
push ebx
push 0x4
push [ edi ]
mov [ rw-data ] 0x1
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x30 ] 0x8
call [ SetMenuItemInfoW@IAT ]
inc ebx
add eax 0x4
mov [ ebp + 0x14 ] eax
cmp ebx [ edi + 0x9d0 ]
jle r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x0
push ebx
push [ ecx ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
mov eax [ ebp + 0x14 ]
je r-xdata
test [ edi + 0xc ] esi
je r-xdata
push 0x20
pop esi
push 0xfffffff2
jmp r-xdata
mov ecx [ eax ]
test ecx ecx
je r-xdata
jmp r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
mov eax [ eax ]
mov eax [ eax ]
cmp eax [ edi ]
je r-xdata
push ebx
mov ecx edi
call sub_445436
mov eax [ ebp + 0x14 ]
sub_446237
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ edi ] bl
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] bx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0xc
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x1b0 ]
jmp r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x7f04
jmp r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x7f02
jmp r-xdata
push ebx
call [ LoadIconW@IAT ]
mov ebx eax
jmp r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x7f01
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push ebx
push [ ebp + 0x8 ]
push esi
call [ ExtractIconExW@IAT ]
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
push 0x7f03
mov [ edi ] 0x1
sub_446304
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + 0xe ]
cmp eax 0xb
ja r-xdata
xor eax eax
push [ ebp + 0xc ]
shl ecx 0x4
add ecx rw-data
call sub_40c935
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_44632e
push esi
mov esi ecx
push edi
cmp [ esi + 0x1a4 ] 0x0
jne r-xdata
push ebx
lea ebx [ esi + 0x1ac ]
push ebx
lea edi [ esi + 0x1a8 ]
push edi
call sub_4038c4
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ esi + 0x1a4 ] eax
pop ebx
je r-xdata
push ebx
push [ esi + 0x4c ]
mov ecx esi
push [ esi + 0x14 ]
call sub_446237
cmp [ esi + 0x50 ] 0x0
mov [ edi ] eax
mov eax [ esi + 0x1a4 ]
mov [ edi ] eax
cmp [ edi ] 0x0
jne r-xdata
pop edi
pop esi
retn
sub_446387
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi rw-data
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov ecx esi
call sub_403598
push 0xfffffffd
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
call sub_402b94
push 0xfffffffc
mov ecx esi
call sub_44548a
test bl 0x8
je r-xdata
mov [ rw-data ] 0x1
push 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
cmp [ rw-data ] 0x1
mov [ rw-data ] 0x0
jne r-xdata
mov ecx esi
call sub_44548a
xor eax eax
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push r--data
mov ecx rw-data
mov [ rw-data ] 0x0
call sub_407e53
push 0xfffffffa
mov ecx esi
call sub_403598
sub_446417
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
push eax
mov esi [ eax + 0x4 ]
call j_sub_4228ca#2
dec [ edi ]
pop ecx
mov [ edi + 0x4 ] esi
test esi esi
jne r-xdata
pop edi
pop esi
retn
and [ edi + 0x8 ] esi
sub_446437
push ebp
mov ebp esp
push esi
push 0x8
mov esi ecx
call sub_42010a
mov edx [ ebp + 0x8 ]
pop ecx
mov edx [ edx ]
mov ecx eax
and [ ecx + 0x4 ] 0x0
mov [ ecx ] edx
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov [ esi + 0x4 ] ecx
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov [ esi + 0x8 ] ecx
pop esi
pop ebp
retn 0x4
sub_44646d
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
retn 0x8
call sub_4465e2
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
sub eax edi
inc eax
push eax
lea eax [ ecx + edi ]
push eax
push ecx
call sub_41faa0
add esp 0xc
sub [ esi + 0x4 ] edi
sub_44649b
push ebp
mov ebp esp
push ecx
test [ ecx + 0x2c ] 0x2
push 0x2
je r-xdata
push [ ebp + 0x8 ]
call sub_404ca0
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_404ca0
cmp eax 0x2
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov cl [ ebp - 0x4 ]
mov al [ ebp - 0x3 ]
mov [ ebp - 0x3 ] cl
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] al
mov ax [ ebp - 0x4 ]
mov [ ecx ] ax
jmp r-xdata
leave
retn 0x4
sub_4464e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
call sub_40c4cd
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x1 ] bl
cmp [ esi ] ebx
jbe r-xdata
mov [ esi ] ebx
mov al 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_44649b
test al al
je r-xdata
mov al [ ebp - 0x1 ]
test al al
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1 ] 0x1
call sub_40bd2f
inc ebx
cmp ebx [ esi ]
jb r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_446538
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40c4cd
push 0xa
xor bl bl
pop edi
test bl bl
jne r-xdata
cmp [ ebp - 0x4 ] 0xd
mov bl 0x1
je r-xdata
mov al 0x1
xor al al
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_44649b
test al al
je r-xdata
cmp [ ebp - 0x4 ] di
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ ebp - 0x4 ] di
je r-xdata
push [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_40bd2f
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
mov ecx esi
call sub_404ee9
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_44649b
test al al
je r-xdata
sub_4465ba
mov eax [ ecx + 0x2c ]
dec eax
je r-xdata
push 0x20
pop eax
retn
dec eax
je r-xdata
push 0x40
pop eax
retn
dec eax
dec eax
je r-xdata
mov eax [ ecx + 0x30 ]
neg eax
sbb eax eax
and eax 0xffffff80
add eax 0x100
retn
xor eax eax
retn
sub_4465e2
push ebx
mov ebx ecx
call sub_408176
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0xc ]
push esi
dec [ eax ]
push edi
mov ecx ebx
call sub_40a6f8
mov edi [ ebx + 0x4 ]
inc edi
push edi
call sub_403d82
push eax
mov [ ebx + 0x8 ] eax
call sub_42010a
push edi
push [ ebx ]
mov esi eax
push esi
call sub_41faa0
add esp 0x10
mov [ ebx ] esi
pop edi
pop esi
sub_446636
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x14 ]
call sub_40a6d4
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_40c320
test al al
je r-xdata
xor bl bl
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_446765
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop esi
mov al bl
pop ebx
leave
retn 0x4
sub_446679
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_40a6d4
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_404c4f
test al al
je r-xdata
xor bl bl
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_446765
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop esi
mov al bl
pop ebx
leave
retn 0x8
sub_4466bf
push esi
push edi
mov edi ecx
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
call sub_404fb3
mov esi [ edi + 0x10 ]
sub esi eax
mov eax [ edi + 0x14 ]
push 0x1
push 0x0
sbb eax edx
push eax
push esi
push [ edi ]
call [ SetFilePointerEx@IAT ]
mov ecx edi
call sub_404fb3
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
pop edi
pop esi
retn
sub_4466f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x4 ]
xor eax eax
push eax
push eax
push eax
push eax
inc edi
push edi
push [ ebx ]
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push esi
push eax
call sub_42010a
pop ecx
mov esi eax
xor eax eax
push eax
push eax
push [ ebp + 0x8 ]
push esi
push edi
push [ ebx ]
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
dec eax
push eax
push ecx
mov ecx [ ebp + 0xc ]
push esi
call sub_41f2d0
push esi
call j_sub_4228ca#2
pop ecx
pop esi
mov ecx [ ebp + 0xc ]
call sub_41f324
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
sub_446765
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x4 ]
xor eax eax
push eax
push eax
inc edi
push edi
push [ ebx ]
push eax
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push esi
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push [ ebp + 0x8 ]
mov esi eax
push esi
push edi
push [ ebx ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp + 0xc ]
dec eax
push eax
push 0x0
push esi
call sub_4080ea
push esi
call j_sub_4228ca#2
pop ecx
pop esi
mov ecx [ ebp + 0xc ]
call sub_40c4cd
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
sub_4467dc
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
test [ esi + 0x2c ] 0x1
je r-xdata
test [ esi + 0x2c ] 0x2
je r-xdata
push [ ebp + 0x8 ]
call sub_446917
jmp r-xdata
test [ esi + 0x2c ] 0x4
lea ecx [ ebp - 0x14 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_4468b9
mov bl al
jmp r-xdata
call sub_40a6d4
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_41f26b
call sub_40a6d4
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_4466f8
jmp r-xdata
pop esi
mov al bl
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_446881
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405cd3
sub_446852
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
call sub_446623
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi ]
call [ WriteFile@IAT ]
mov eax [ ebp - 0x4 ]
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] 0x0
pop esi
leave
retn 0x8
sub_446881
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
push esi
push [ eax ]
call sub_446852
sub eax esi
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn 0x4
sub_4468b9
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax ]
push edi
mov edi [ eax + 0x4 ]
add edi edi
push edi
mov [ ebp - 0x4 ] ecx
call sub_42010a
pop ecx
xor ecx ecx
mov ebx eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
push edi
push ebx
call sub_446852
push ebx
mov esi eax
call j_sub_4228ca#2
pop ecx
xor eax eax
cmp esi edi
pop edi
pop esi
sete al
pop ebx
leave
retn 0x4
mov edx ebx
sub edx esi
mov al [ esi + 0x1 ]
mov [ edx + esi ] al
mov al [ esi ]
mov [ ebx + ecx + 0x1 ] al
add ecx 0x2
lea esi [ esi + 0x2 ]
cmp ecx edi
jb r-xdata
sub_446917
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
add esi esi
push esi
push [ eax ]
call sub_446852
sub eax esi
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn 0x4
sub_446937
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] 0x1
call sub_43bdf8
push 0x4
call sub_42010a
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ esi ] eax
mov [ eax ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446963
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
push edi
mov ebx [ esi + 0x4 ]
push ebx
lea ecx [ ebp - 0x10 ]
call sub_407b6e
xor edi edi
test ebx ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_40c935
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
pop ebx
leave
retn
push edi
mov ecx esi
call sub_40a4f6
cmp [ eax ] 0xa
jne r-xdata
push edi
mov ecx esi
call sub_40a4f6
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40bd2f
inc edi
cmp edi ebx
jb r-xdata
push 0xd
lea ecx [ ebp - 0x10 ]
call sub_40bd2f
sub_4469c9
push esi
mov esi ecx
cmp dl 0x1
jne r-xdata
push 0x0
call sub_447c22
test al al
jne r-xdata
pop esi
retn
push 0x1
jmp r-xdata
push 0x0
push esi
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_4469f9
push ebp
mov ebp esp
sub esp 0x438
push esi
mov esi edx
lea edx [ ebp - 0x438 ]
call sub_4031b8
lea edx [ ebp - 0x22c ]
mov ecx esi
call sub_4031b8
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call [ lstrcmpiW@IAT ]
pop esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x438 ]
call sub_447c0c
test al al
je r-xdata
cmp [ ebp + 0x8 ] al
je r-xdata
xor al al
leave
retn
lea ecx [ ebp - 0x22c ]
call sub_447c0c
test al al
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x22c ]
call sub_446d6d
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov al 0x1
leave
retn
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call [ MoveFileW@IAT ]
lea ecx [ ebp - 0x22c ]
call sub_447c0c
test al al
jmp r-xdata
lea eax [ ebp - 0x438 ]
push r--data
push eax
call sub_421914
lea eax [ ebp - 0x438 ]
push eax
call sub_4218fb
xor ecx ecx
mov [ ebp + eax * 2 - 0x436 ] cx
lea eax [ ebp - 0x22c ]
push eax
call sub_4218fb
xor ecx ecx
mov [ ebp + eax * 2 - 0x22a ] cx
lea eax [ ebp - 0x438 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0xa ] eax
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xe ] eax
mov [ ebp - 0x20 ] eax
mov eax 0x614
add esp 0x10
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x2
call [ SHFileOperationW@IAT ]
neg eax
sbb al al
inc al
leave
retn
je r-xdata
sub_446b3f
push ebp
mov ebp esp
mov eax 0x10b8
call sub_430650
push ebx
push esi
mov esi edx
xor ebx ebx
lea edx [ ebp - 0x640 ]
mov [ ebp - 0x1 ] bl
call sub_4031b8
lea edx [ ebp - 0x850 ]
mov ecx esi
call sub_4031b8
lea edx [ ebp - 0x850 ]
lea ecx [ ebp - 0x640 ]
call sub_447b9f
lea ecx [ ebp - 0x640 ]
mov [ ebp - 0x3 ] al
call sub_447c0c
mov esi r--data
test al al
je r-xdata
lea ecx [ ebp - 0x850 ]
call sub_447c0c
test al al
je r-xdata
lea eax [ ebp - 0x640 ]
push esi
push eax
call sub_421914
pop ecx
pop ecx
lea eax [ ebp - 0x10b8 ]
push eax
lea eax [ ebp - 0xca8 ]
push eax
lea eax [ ebp - 0xeb0 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x640 ]
push eax
call sub_42297d
add esp 0x14
lea eax [ ebp - 0xaa0 ]
push eax
lea eax [ ebp - 0x640 ]
push eax
call [ FindFirstFileW@IAT ]
mov esi eax
mov al 0x1
mov [ ebp - 0x2 ] al
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x850 ]
push esi
push eax
call sub_421914
pop ecx
pop ecx
mov bl [ ebp - 0x1 ]
cmp al 0x1
jne r-xdata
test [ ebp - 0xaa0 ] 0x10
jne r-xdata
lea eax [ ebp - 0xaa0 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
mov al [ ebp - 0x2 ]
jne r-xdata
lea eax [ ebp - 0x430 ]
push eax
lea eax [ ebp - 0x850 ]
push eax
lea eax [ ebp - 0x10b8 ]
push eax
lea edx [ ebp - 0xca8 ]
lea ecx [ ebp - 0xa74 ]
call sub_447334
add esp 0xc
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_421943
lea eax [ ebp - 0xeb0 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_421914
lea eax [ ebp - 0xa74 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_421914
add esp 0x18
lea ecx [ ebp - 0x430 ]
call sub_41dd84
test al al
je r-xdata
mov al bl
mov [ ebp - 0x2 ] al
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
lea eax [ ebp - 0x430 ]
jne r-xdata
cmp [ ebp + 0x8 ] bl
je r-xdata
push ebx
push eax
lea eax [ ebp - 0x220 ]
push eax
call [ CopyFileW@IAT ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
push esi
call [ FindClose@IAT ]
xor al al
jmp r-xdata
lea eax [ ebp - 0x430 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
lea eax [ ebp - 0x430 ]
push eax
je r-xdata
mov [ ebp - 0x1 ] 0x1
push ebx
push eax
lea eax [ ebp - 0x220 ]
push eax
call [ CopyFileW@IAT ]
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x220 ]
push eax
call [ MoveFileW@IAT ]
jmp r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x220 ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
call [ DeleteFileW@IAT ]
lea eax [ ebp - 0x220 ]
push eax
call [ DeleteFileW@IAT ]
jmp r-xdata
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
mov al bl
jmp r-xdata
sub_446d6d
push ebp
mov ebp esp
sub esp 0x20c
mov edx ecx
push ebx
push esi
push 0x104
lea ecx [ ebp - 0x20c ]
call sub_403b1e
lea eax [ ebp - 0x20c ]
push eax
call sub_4218fb
pop ecx
pop ecx
push 0x5c
pop ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + eax * 2 - 0x20e ] bx
jne r-xdata
test al 0x10
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
xor ecx ecx
mov [ ebp + eax * 2 - 0x20e ] cx
mov al 0x1
jmp r-xdata
xor al al
cmp eax 0x3
jne r-xdata
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x20c ]
call sub_403bcf
mov esi eax
push ebx
push esi
call sub_423174
pop ecx
pop ecx
test eax eax
jne r-xdata
xor ecx ecx
mov [ eax ] cx
mov ecx esi
call sub_446d6d
push esi
mov bl al
call j_sub_4228ca#2
pop ecx
test bl bl
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
mov al bl
jmp r-xdata
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
setne bl
sub_446e4a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x678
push ebx
xor ebx ebx
push esi
lea edx [ esp + 0x18 ]
mov [ esp + 0xf ] bl
call sub_4031b8
lea ecx [ esp + 0x18 ]
call sub_447c0c
test al al
je r-xdata
push ebx
push ebx
lea eax [ esp + 0x480 ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x28 ]
push eax
call sub_42297d
add esp 0x14
lea eax [ esp + 0x228 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call [ FindFirstFileW@IAT ]
mov esi eax
mov al 0x1
mov [ esp + 0xe ] al
cmp esi 0xffffffff
je r-xdata
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_421914
pop ecx
pop ecx
mov bl [ esp + 0xf ]
cmp al 0x1
jne r-xdata
test [ esp + 0x228 ] 0x10
jne r-xdata
lea eax [ esp + 0x228 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
mov al [ esp + 0xe ]
jne r-xdata
mov [ esp + 0xf ] al
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_421943
lea eax [ esp + 0x480 ]
push eax
lea eax [ esp + 0x24 ]
push eax
call sub_421914
lea eax [ esp + 0x264 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_421914
add esp 0x18
lea eax [ esp + 0x18 ]
push eax
call [ DeleteFileW@IAT ]
cmp eax 0x1
jne r-xdata
mov al bl
mov [ esp + 0xe ] al
jmp r-xdata
push esi
call [ FindClose@IAT ]
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
sub_446f5b
push ebp
mov ebp esp
sub esp 0x63c
push ebx
push esi
push edi
push 0x0
mov ebx ecx
push 0x2
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x234 ] 0x22c
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
lea eax [ ebp - 0x234 ]
push eax
push edi
call [ Process32FirstW@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx ebx
mov [ esi ] 0x0
call sub_4479c2
mov ebx eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0x234 ]
push eax
push edi
call [ Process32NextW@IAT ]
cmp eax 0x1
jne r-xdata
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
lea eax [ ebp - 0x63c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
push 0x0
lea eax [ ebp - 0x210 ]
push 0x0
push eax
call sub_42297d
lea eax [ ebp - 0x63c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_421914
push [ ebp - 0x8 ]
lea eax [ ebp - 0x438 ]
push eax
call sub_421bc7
add esp 0x24
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x22c ]
jmp r-xdata
mov eax [ ebp - 0x22c ]
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi ] 0x1
mov [ ecx ] eax
sub_44702f
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
push edi
xor esi esi
push esi
mov eax 0x80
push eax
push 0x3
push esi
push 0x3
mov ebx edx
push eax
push ecx
mov [ ebx ] esi
call [ CreateFileW@IAT ]
mov edx eax
mov [ ebp - 0x8 ] edx
cmp edx 0xffffffff
jne r-xdata
push 0xa
pop ecx
xor eax eax
push esi
lea edi [ ebp - 0x3c ]
[ edi ]
lea eax [ ebp - 0x4 ]
push eax
push 0x28
lea eax [ ebp - 0x3c ]
push eax
push 0xc
lea eax [ ebp - 0x14 ]
push eax
push 0x2d1400
push edx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] esi
call [ DeviceIoControl@IAT ]
mov esi eax
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov al 0x1
pop edi
pop esi
pop ebx
leave
retn
sub_4470ae
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x1c
cmp [ eax + 0x25 ] 0x0
jne r-xdata
push ebx
push esi
xor esi esi
push esi
mov eax 0x80
push eax
push 0x3
push esi
push 0x3
push eax
push ecx
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax 0x80004005
leave
retn
mov eax 0x80004005
jmp r-xdata
push edi
xor eax eax
lea edi [ ebp - 0x1c ]
stosd [ edi ]
stosd [ edi ]
push esi
stosd [ edi ]
lea eax [ ebp - 0x4 ]
push eax
push 0xc
lea eax [ ebp - 0x1c ]
push eax
push 0xc
lea eax [ ebp - 0x10 ]
push eax
push 0x2d1400
push ebx
mov [ ebp - 0x10 ] 0x7
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call [ DeviceIoControl@IAT ]
mov esi eax
push ebx
call [ CloseHandle@IAT ]
pop edi
test esi esi
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
cmp [ ebp - 0x14 ] al
setne al
sub_44713c
push ebp
mov ebp esp
sub esp 0x234
push ebx
push esi
push edi
xor esi esi
push esi
push 0x80
push 0x3
pop ebx
push ebx
push esi
push ebx
push 0xc0000000
push ecx
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x228
lea eax [ ebp - 0x230 ]
push esi
push eax
call sub_421970
add esp 0xc
mov edx 0x200
push 0x28
pop ecx
push 0x2
pop eax
push esi
mov [ ebp - 0x22e ] ax
lea eax [ ebp - 0x4 ]
push eax
push edx
lea eax [ ebp - 0x230 ]
push eax
push edx
push eax
push 0x4d02c
push edi
mov [ ebp - 0x230 ] cx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x224 ] ebx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x20a ] 0xec
mov [ ebp - 0x4 ] esi
call [ DeviceIoControl@IAT ]
push edi
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
mov eax 0x80004005
jmp r-xdata
xor eax eax
cmp [ ebp - 0x56 ] 0x1
setne al
pop edi
pop esi
pop ebx
leave
retn
sub_4471f1
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
dec eax
push eax
call sub_40a4f6
cmp [ eax ] 0x5c
je r-xdata
pop esi
retn
push r--data
mov ecx esi
call sub_4039e8
sub_447212
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x10 ]
push esi
push [ ebp + 0x10 ]
mov esi r--data
push esi
push eax
call sub_42234b
push [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_42234b
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_421bc7
add esp 0x20
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0xe
push [ ebp + 0x10 ]
push esi
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x10
push ebx
push edi
push eax
call [ LockResource@IAT ]
and [ ebp + 0x10 ] 0x0
xor ecx ecx
mov [ ebp + 0x8 ] eax
cmp cx [ eax + 0x4 ]
jae r-xdata
xor eax eax
lea edi [ eax + 0x6 ]
xor eax eax
inc eax
jmp r-xdata
push ebx
push esi
call [ LoadResource@IAT ]
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
pop edi
pop ebx
push ebx
push esi
call [ SizeofResource@IAT ]
push [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
call [ LockResource@IAT ]
movzx ecx [ edi ]
mov ebx [ rw-data ]
mov [ ebp + 0x14 ] eax
cmp ecx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
movzx eax [ eax + 0x4 ]
inc ecx
add edi 0xe
mov [ ebp + 0x10 ] ecx
cmp ecx eax
jb r-xdata
movzx ecx [ edi + 0x1 ]
mov edx [ rw-data ]
cmp ecx edx
jne r-xdata
movzx eax [ edi + 0xc ]
push 0x3
push eax
push esi
call [ FindResourceW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
movzx eax [ edi + 0x6 ]
cmp eax [ rw-data ]
je r-xdata
push 0x0
push edx
push ebx
push 0x30000
push 0x1
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
call [ CreateIconFromResourceEx@IAT ]
mov [ rw-data ] eax
jmp r-xdata
sub_447334
push ebp
mov ebp esp
mov eax 0x1060
call sub_430650
push esi
push edi
push 0x2a
push [ ebp + 0xc ]
mov edi edx
mov esi ecx
call sub_423084
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x1060 ]
push eax
lea eax [ ebp - 0xc48 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
push esi
call sub_42297d
lea eax [ ebp - 0x624 ]
push eax
lea eax [ ebp - 0xe54 ]
push eax
lea eax [ ebp - 0xc48 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
push [ ebp + 0xc ]
call sub_42297d
add esp 0x28
push 0x2e
pop esi
cmp [ ebp - 0x20c ] si
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_421943
jmp r-xdata
cmp [ ebp - 0x624 ] si
jne r-xdata
lea eax [ ebp - 0x20a ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_421943
pop ecx
pop ecx
pop ecx
pop ecx
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x830 ]
push eax
push [ ebp + 0x10 ]
call sub_421943
lea eax [ ebp - 0xc48 ]
push eax
push [ ebp + 0x10 ]
call sub_421914
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0xa3c ]
push eax
lea eax [ ebp - 0x624 ]
push eax
lea ecx [ ebp - 0x20c ]
call sub_4474b0
lea eax [ ebp - 0x418 ]
push eax
lea eax [ ebp - 0xe54 ]
push eax
mov edx edi
lea ecx [ ebp - 0x1060 ]
call sub_4474b0
add esp 0x20
cmp [ ebp - 0xa3c ] 0x0
je r-xdata
lea eax [ ebp - 0x622 ]
push eax
lea eax [ ebp - 0x624 ]
push eax
call sub_421943
pop ecx
pop ecx
cmp [ ebp - 0x20c ] 0x0
je r-xdata
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_421914
lea eax [ ebp - 0xa3c ]
jmp r-xdata
lea eax [ ebp - 0x418 ]
push eax
push [ ebp + 0x10 ]
call sub_421914
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_421914
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x418 ]
push eax
call sub_421914
add esp 0x10
sub_4474b0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x2a
pop eax
xor ebx ebx
push eax
push [ ebp + 0x8 ]
mov edi ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edi
mov esi ebx
mov [ ebp - 0xc ] eax
call sub_423084
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp - 0x10 ]
call sub_423132
pop ecx
pop ecx
pop edi
pop esi
test bl bl
pop ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x2a
movzx ecx [ eax ]
pop edx
cmp cx dx
je r-xdata
leave
retn
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_421943
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
mov edx ecx
mov ecx [ ebp + 0xc ]
inc edi
lea eax [ eax + edi * 2 ]
cmp [ eax ] bx
je r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
mov [ ecx + esi * 2 ] dx
inc esi
inc edi
movzx edx [ eax + edi * 2 ]
cmp dx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x8 ] edi
jmp r-xdata
xor eax eax
mov [ ecx + esi * 2 ] ax
mov bl 0x1
push 0x2a
pop edi
mov [ ecx + esi * 2 ] dx
inc esi
inc eax
movzx edx [ edi + eax * 2 ]
test dx dx
jne r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx ]
test dx dx
je r-xdata
add eax 0x2
cmp [ eax ] bx
jne r-xdata
mov [ ecx + esi * 2 ] dx
inc esi
movzx edx [ eax ]
cmp dx di
je r-xdata
sub_44757b
push ebp
mov ebp esp
sub esp 0x408
lea eax [ ebp - 0x204 ]
push ebx
mov ebx 0x100
push ebx
push eax
push ecx
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
push ebx
lea eax [ ebp - 0x408 ]
push eax
push 0x1389
xor ebx ebx
push ebx
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
cmp [ ebp + 0xc ] bl
je r-xdata
push 0x11010
lea eax [ ebp - 0x204 ]
push eax
lea eax [ ebp - 0x408 ]
push eax
push ebx
call [ MessageBoxW@IAT ]
mov eax r--data
push eax
push eax
lea eax [ ebp - 0x408 ]
push eax
push ebx
lea eax [ ebp - 0x204 ]
push eax
push r--data
call sub_422c67
add esp 0x18
jmp r-xdata
pop ebx
leave
retn
sub_447606
push ebp
mov ebp esp
push ebx
push esi
push edi
xor ebx ebx
push ebx
push 0x2000080
push 0x3
push ebx
push 0x1
push 0x40000000
push ecx
mov edi edx
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
push ebx
jne r-xdata
push edi
push ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push ebx
push edi
jmp r-xdata
push ebx
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
mov al 0x1
sub_44765d
push ebx
push esi
mov esi ecx
mov ebx rw-data
push edi
mov ecx ebx
mov edi edx
call sub_40c4cd
push 0x0
push sub_44768a
push esi
call [ EnumChildWindows@IAT ]
push ebx
mov ecx edi
call sub_40c935
pop edi
pop esi
pop ebx
retn
sub_44768a
push ebp
mov ebp esp
push esi
push 0x10000
call sub_42010a
mov esi eax
mov [ esp ] 0x7fff
push esi
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
cmp [ esi ] 0x0
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
xor eax eax
inc eax
pop esi
pop ebp
retn 0x8
push edi
mov edi rw-data
push esi
mov ecx edi
call sub_4039e8
push r--data
mov ecx edi
call sub_4039e8
pop edi
sub_4476db
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x18 ]
push ebx
push esi
push edi
mov edi ecx
push eax
push edi
mov ebx edx
call [ GetFileVersionInfoSizeW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_42010a
pop ecx
push eax
mov [ ebp - 0x4 ] eax
push esi
xor eax eax
push eax
push edi
mov [ ebp - 0xc ] eax
call [ GetFileVersionInfoW@IAT ]
mov esi [ ebp + 0x8 ]
push esi
call sub_4218fb
xor ecx ecx
push 0x2
add eax 0x1a
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov edi eax
push r--data
push edi
call sub_421943
push r--data
push esi
call sub_422203
add esp 0x18
test eax eax
je r-xdata
xor al al
jmp r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push edi
call sub_421914
push r--data
push esi
call sub_422633
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push [ ebp - 0x4 ]
call [ VerQueryValueW@IAT ]
test eax eax
je r-xdata
push 0x8
lea eax [ edi + 0x20 ]
push eax
push ebx
call sub_422c1d
push [ ebp - 0x4 ]
xor eax eax
mov [ ebx + 0x10 ] ax
call j_sub_4228ca#2
push edi
call j_sub_4228ca#2
add esp 0x14
mov al 0x1
jmp r-xdata
push esi
push edi
call sub_421914
pop ecx
pop ecx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
push [ ebp - 0x4 ]
call [ VerQueryValueW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call j_sub_4228ca#2
push edi
call j_sub_4228ca#2
mov al [ ebp - 0xc ]
pop ecx
pop ecx
push r--data
push esi
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push edi
call sub_421914
pop ecx
pop ecx
mov eax [ ebp - 0x10 ]
push 0x0
mov esi [ eax ]
push esi
push 0x4
lea ecx [ edi + 0x20 ]
pop edx
call sub_40ca32
push 0x0
shr esi 0x10
push esi
push 0x4
lea ecx [ edi + 0x28 ]
pop edx
call sub_40ca32
mov esi [ ebp + 0x8 ]
add esp 0x10
jmp r-xdata
push 0x200
push [ ebp - 0x8 ]
push ebx
call sub_422c1d
add esp 0xc
xor eax eax
mov [ ebx + 0x400 ] ax
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x8 ]
movzx eax cx
push eax
movzx eax dx
shr ecx 0x10
push ecx
push eax
shr edx 0x10
push edx
push r--data
push ebx
call sub_42234b
add esp 0x18
jmp r-xdata
push r--data
push edi
call sub_421914
push esi
push edi
call sub_421914
add esp 0x10
jmp r-xdata
mov [ ebp - 0xc ] 0x1
sub_4478ad
push ebp
mov ebp esp
sub esp 0x210
lea eax [ ebp - 0x4 ]
push esi
push eax
lea eax [ ebp - 0x210 ]
push eax
push 0x105
push [ ecx ]
mov esi edx
call [ GetFullPathNameW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
mov ecx esi
call sub_407e53
push r--data
mov ecx esi
call sub_41e617
pop esi
leave
retn
sub_4478ee
push ebp
mov ebp esp
sub esp 0x298
lea eax [ ebp - 0x298 ]
push esi
push edi
push eax
push 0x101
mov edi edx
mov esi ecx
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
jne r-xdata
push r--data
push edi
call sub_421943
pop ecx
pop ecx
push 0x100
lea eax [ ebp - 0x108 ]
push eax
call [ Ordinal_WSOCK32_57@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov edx [ eax + 0xc ]
xor ecx ecx
cmp [ edx ] ecx
je r-xdata
cmp esi ecx
jle r-xdata
mov eax edx
push 0x4
push [ edx + esi * 4 - 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_41faa0
add esp 0xc
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x108 ]
push eax
call sub_423220
or edx 0xffffffff
lea ecx [ ebp - 0x108 ]
call sub_448553
mov esi eax
push esi
push edi
call sub_421943
push esi
call j_sub_4228ca#2
add esp 0x14
push r--data
push edi
call sub_421943
pop ecx
pop ecx
jmp r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
leave
retn
call [ Ordinal_WSOCK32_116@IAT ]
jmp r-xdata
sub_4479c2
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi ebx
cmp [ esi ] bx
je r-xdata
push esi
call sub_42224a
pop ecx
mov eax esi
xor eax eax
jmp r-xdata
inc edi
lea eax [ esi + edi * 2 ]
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
retn
movzx eax [ eax ]
push eax
call sub_4222df
pop ecx
test eax eax
je r-xdata
sub_4479f8
push ebp
mov ebp esp
sub esp 0x208
lea eax [ ebp - 0x208 ]
push esi
push eax
xor eax eax
push eax
push eax
push ecx
push eax
mov esi edx
call [ SHGetFolderPathW@IAT ]
lea eax [ ebp - 0x208 ]
push eax
mov ecx esi
call sub_407e53
pop esi
leave
retn
sub_447a28
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov [ ebp - 0xc ] ecx
push edi
mov ecx edx
call sub_403bcf
push eax
lea ecx [ ebp - 0x14 ]
call sub_404bce
mov edi [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
xor eax eax
push ebx
mov [ edi + 0x4 ] eax
mov [ edi ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
mov esi eax
call sub_4218fb
pop ecx
test eax eax
je r-xdata
push r--data
push ebx
call sub_423318
mov ebx [ ebp - 0x4 ]
xor edi edi
inc edi
mov eax [ edi + 0x4 ]
imul eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x14 ]
mov [ edi ] ebx
mov [ edi + 0x4 ] eax
call sub_404fd2
pop edi
pop esi
pop ebx
leave
retn
push edi
push esi
call sub_4218fb
pop ecx
push eax
push esi
push [ ebp - 0xc ]
call [ GetTextExtentPoint32W@IAT ]
cmp [ edi ] ebx
jle r-xdata
push ebx
inc esi
call sub_4218fb
pop ecx
cmp esi eax
jb r-xdata
inc edi
push r--data
push 0x0
call sub_423318
jmp r-xdata
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
mov ebx eax
cmp [ ebx + esi * 2 ] 0xa
jne r-xdata
mov [ ebp - 0x8 ] edi
mov edi [ ebp + 0x8 ]
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
sub_447ae0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi rw-data
mov ecx edi
mov bl dl
call sub_40c4cd
push 0x0
push sub_447b18
push esi
mov [ rw-data ] bl
call [ EnumChildWindows@IAT ]
mov ecx [ ebp + 0x8 ]
push edi
call sub_40c935
pop edi
pop esi
pop ebx
pop ebp
retn
sub_447b18
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_447c22
test al al
jne r-xdata
xor eax eax
inc eax
pop esi
leave
retn 0x8
push esi
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] esi
call sub_40d3d2
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_43e2e8
lea eax [ ebp - 0x10 ]
mov esi rw-data
push eax
mov ecx esi
call sub_407b4b
push r--data
mov ecx esi
call sub_4039e8
lea ecx [ ebp - 0x10 ]
call sub_405cd3
cmp [ rw-data ] 0x1
jne r-xdata
sub_447b84
test ecx ecx
jns r-xdata
cmp ecx 0x1
jne r-xdata
or eax 0xffffffff
sub eax ecx
mov ecx eax
jmp r-xdata
neg ecx
xor ecx ecx
jmp r-xdata
mov eax ecx
retn
sub_447b9f
push ebp
mov ebp esp
sub esp 0x418
push esi
push edi
xor edi edi
push edi
push edi
lea eax [ ebp - 0x418 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ecx
mov esi edx
call sub_42297d
push edi
push edi
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_42297d
add esp 0x28
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x418 ]
jmp r-xdata
push eax
call sub_421bc7
test eax eax
pop ecx
setne al
pop ecx
leave
retn
sub_447c22
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1388
push 0x2
xor eax eax
push eax
push eax
push eax
push ecx
call [ SendMessageTimeoutW@IAT ]
neg eax
sbb al al
inc al
leave
retn
sub_447c45
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax ecx
xor esi esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov [ rw-data ] 0x0
test edi edi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
push eax
call [ MessageBoxW@IAT ]
mov edi eax
test esi esi
je r-xdata
mov [ rw-data ] 0x1
call [ GetCurrentThreadId@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x10 ]
push eax
xor ecx ecx
push ecx
lea eax [ ebp - 0xc ]
push eax
push sub_448097
push ecx
push ecx
mov [ ebp - 0x8 ] edi
call sub_422e57
mov esi eax
mov eax [ ebp - 0x4 ]
add esp 0x18
cmp [ rw-data ] 0x1
jne r-xdata
push 0xffffffff
push esi
mov [ rw-data ] 0x0
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
mov eax edi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_447cd7
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
mov eax 0x80000000
sub esi eax
neg esi
sbb esi esi
and esi ecx
mov ecx edx
sub ecx eax
mov eax [ ebp + 0xc ]
neg ecx
sbb ecx ecx
and ecx edx
add eax ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax esi
mov [ ebp - 0x8 ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] ecx
call [ MonitorFromRect@IAT ]
pop esi
leave
retn
sub_447d1c
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
inc eax
pop esi
retn
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x2
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x3
jmp r-xdata
call sub_41c929
xor ecx ecx
test al al
setne cl
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
pop eax
pop esi
retn
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41c929
xor ecx ecx
test al al
sete cl
jmp r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ ecx + 0x1 ]
pop esi
retn
xor eax eax
pop esi
retn
sub_447dd5
call sub_447d1c
dec eax
je r-xdata
push 0x2
dec eax
je r-xdata
push 0x8
jmp r-xdata
dec eax
je r-xdata
pop eax
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push eax
call [ mouse_event@IAT ]
mov al 0x1
retn
push 0x20
jmp r-xdata
xor al al
retn
sub_447e01
call sub_447d1c
dec eax
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x10
jmp r-xdata
dec eax
je r-xdata
pop eax
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push eax
call [ mouse_event@IAT ]
mov al 0x1
retn
push 0x40
jmp r-xdata
xor al al
retn
sub_447e2d
push esi
mov esi ecx
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push esi
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push 0x78
jmp r-xdata
xor al al
pop esi
retn
push eax
push 0xffffff88
push eax
push eax
push 0x800
call [ mouse_event@IAT ]
mov al 0x1
pop esi
retn
sub_447e6f
push ebp
mov ebp esp
sub esp 0x840
push esi
mov esi edx
lea edx [ ebp - 0x438 ]
call sub_4031b8
lea edx [ ebp - 0x22c ]
mov ecx esi
call sub_4031b8
lea ecx [ ebp - 0x438 ]
call sub_447c0c
test al al
jne r-xdata
lea ecx [ ebp - 0x22c ]
call sub_447c0c
xor esi esi
test al al
je r-xdata
xor al al
jmp r-xdata
lea edx [ ebp - 0x22c ]
lea ecx [ ebp - 0x438 ]
call sub_447b9f
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
lea edx [ ebp - 0x22c ]
lea ecx [ ebp - 0x438 ]
call sub_4469f9
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x438 ]
push eax
call sub_4218fb
xor ecx ecx
mov [ ebp + eax * 2 - 0x436 ] cx
lea eax [ ebp - 0x22c ]
push eax
call sub_4218fb
pop ecx
pop ecx
xor ecx ecx
mov [ ebp + eax * 2 - 0x22a ] cx
lea eax [ ebp - 0x438 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x14 ] eax
mov eax 0x614
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0xa ] esi
mov [ ebp - 0x6 ] esi
mov [ ebp - 0xe ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x1
call [ SHFileOperationW@IAT ]
neg eax
sbb al al
inc al
mov dl 0x1
lea ecx [ ebp - 0x438 ]
call sub_448245
test al al
jmp r-xdata
lea eax [ ebp - 0x63c ]
push eax
lea eax [ ebp - 0x840 ]
push eax
push esi
lea eax [ ebp - 0x438 ]
push esi
push eax
call sub_42297d
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_421914
lea eax [ ebp - 0x840 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_421914
add esp 0x24
cmp [ ebp - 0x63c ] si
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
setne al
jmp r-xdata
lea eax [ ebp - 0x63c ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_421914
pop ecx
pop ecx
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call [ MoveFileW@IAT ]
test eax eax
sub_44804c
push ebp
mov ebp esp
sub esp 0x200
lea eax [ ebp - 0x200 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x100
push eax
xor esi esi
push edi
inc esi
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x200 ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov [ rw-data ] edi
xor esi esi
sub_448097
push ebp
mov ebp esp
push ebx
push edi
call [ timeGetTime@IAT ]
cmp [ rw-data ] 0x0
mov ebx eax
je r-xdata
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push sub_44804c
push [ edi ]
mov [ rw-data ] ebx
call [ EnumThreadWindows@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
jl r-xdata
push ebx
push r--data
push ebx
push eax
mov [ rw-data ] 0x1
call [ FindWindowExW@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax [ edi + 0x4 ]
jae r-xdata
push ebx
push ebx
push 0x10
push [ rw-data ]
call [ SendMessageW@IAT ]
push 0xfa
call [ Sleep@IAT ]
push [ rw-data ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
call sub_4469c9
push [ rw-data ]
call [ SetActiveWindow@IAT ]
push ebx
push ebx
push 0xf5
push edi
call [ SendMessageW@IAT ]
mov ecx [ rw-data ]
xor dl dl
call sub_4469c9
jmp r-xdata
mov ecx ebx
call sub_41e3a5
test edx edx
jg r-xdata
jmp r-xdata
push ebx
push [ rw-data ]
call [ EndDialog@IAT ]
sub_448190
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi edx
mov edi [ edi ]
cmp edi ecx
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp edi ecx
jge r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] esi
jne r-xdata
jle r-xdata
mov eax ecx
sub eax edi
cdq
idiv [ ebp + 0x8 ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx esi
jge r-xdata
mov eax edi
sub eax ecx
cdq
idiv [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
cmp eax ebx
jge r-xdata
pop edi
pop esi
pop ebp
retn
jle r-xdata
mov eax esi
sub eax ecx
cdq
idiv [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
cmp eax ebx
jge r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] edx
jmp r-xdata
lea edx [ edi + eax ]
mov eax [ ebp + 0x10 ]
cmp edx ecx
jg r-xdata
mov al 0x1
pop ebx
mov eax ecx
sub eax esi
cdq
idiv [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
cmp eax ebx
jge r-xdata
mov [ eax ] edi
sub edi eax
mov eax [ ebp + 0x10 ]
cmp edi ecx
jge r-xdata
mov eax ebx
cmp eax ebx
jge r-xdata
mov [ edi ] esi
jmp r-xdata
mov [ edi ] eax
jmp r-xdata
add eax ecx
cmp eax esi
jg r-xdata
mov [ edi ] ecx
sub ecx eax
cmp ecx esi
jge r-xdata
sub_448245
push ebp
mov ebp esp
sub esp 0x22c
push ebx
mov bl dl
lea edx [ ebp - 0x22c ]
call sub_4031b8
lea ecx [ ebp - 0x22c ]
call sub_447c0c
test al al
je r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x22c ]
push eax
test bl bl
jne r-xdata
call sub_4218fb
pop ecx
xor ecx ecx
mov [ ebp + eax * 2 - 0x22a ] cx
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xa ] eax
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xe ] eax
mov [ ebp - 0x20 ] eax
mov eax 0x614
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x3
call [ SHFileOperationW@IAT ]
neg eax
sbb al al
inc al
call [ RemoveDirectoryW@IAT ]
test eax eax
setne al
jmp r-xdata
sub_4482d0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx ecx
push r--data
lea ecx [ ebp - 0x10 ]
mov esi edx
call sub_446937
push ecx
lea ecx [ ebp - 0x10 ]
call sub_43bec3
test al al
jne r-xdata
cmp ebx 0x20
je r-xdata
xor esi esi
jmp r-xdata
xor eax eax
inc eax
cmp ebx 0x40
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_43b8b0
mov eax esi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
test bl 0xb
jne r-xdata
push 0x0
push eax
call [ SetSystemPowerState@IAT ]
xor ecx ecx
test bl 0x14
je r-xdata
push 0x0
push ebx
call [ ExitWindowsEx@IAT ]
jmp r-xdata
xor eax eax
test bl 0x2
je r-xdata
inc ecx
mov esi eax
push esi
push eax
push ecx
push 0x0
push 0x0
push 0x0
call [ InitiateSystemShutdownExW@IAT ]
jmp r-xdata
inc eax
sub_448355
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi ecx
test esi esi
js r-xdata
pop esi
leave
retn
jne r-xdata
cmp esi 0xf
jae r-xdata
push 0x0
jmp r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
call [ Sleep@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ QueryPerformanceFrequency@IAT ]
push 0x0
call [ Sleep@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sbb eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x18 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x20 ]
fild [ ebp - 0x28 ]
fstp [ ebp - 0x20 ]
fdiv [ ebp - 0x20 ]
fmul [ r--data ]
call sub_471e16
cmp eax esi
jb r-xdata
jmp r-xdata
sub_4483d6
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x10 ]
mov bl dl
call sub_40d3d2
push r--data
lea ecx [ ebp - 0x10 ]
call sub_407e53
push 0x22
lea ecx [ ebp - 0x10 ]
call sub_40bd2f
push edi
lea ecx [ ebp - 0x10 ]
call sub_4039e8
push 0x22
lea ecx [ ebp - 0x10 ]
call sub_40bd2f
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4039e8
mov esi [ mciSendStringW@IAT ]
xor eax eax
push eax
push 0x100
lea eax [ ebp - 0x218 ]
push eax
push r--data
call esi
cmp [ ebp - 0x218 ] 0x0
je r-xdata
xor eax eax
cmp [ edi ] ax
je r-xdata
xor eax eax
push eax
push eax
push eax
push r--data
call esi
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
pop ebx
leave
retn
xor edi edi
push edi
push edi
push edi
push [ ebp - 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
test bl bl
je r-xdata
push r--data
push r--data
call esi
push edi
push edi
push edi
push r--data
jmp r-xdata
call esi
sub_448498
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x10 ]
mov ebx [ edi + 0x4 ]
push ebx
call sub_407b6e
xor esi esi
test ebx ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
call sub_40c935
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
pop ebx
leave
retn
push esi
mov ecx edi
call sub_40a4f6
cmp [ eax ] 0xd
je r-xdata
inc esi
cmp esi ebx
jb r-xdata
push esi
mov ecx edi
call sub_40a4f6
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40bd2f
sub_4484f4
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
xor edi edi
push edi
push edi
mov esi ecx
push 0x10
push esi
call [ PostMessageW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push 0x1f4
push 0x2
push edi
push edi
push 0x10
push esi
call [ SendMessageTimeoutW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push esi
call [ GetWindowThreadProcessId@IAT ]
push [ ebp - 0x4 ]
push edi
push 0x1f0fff
call [ OpenProcess@IAT ]
mov esi eax
push edi
push esi
call [ TerminateProcess@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_448553
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
mov esi edx
test edi edi
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
xor eax eax
push eax
push eax
push esi
push edi
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push edi
call sub_4223f0
pop ecx
lea esi [ eax + 0x1 ]
pop edi
pop esi
leave
retn
pop ebx
xor ecx ecx
push 0x2
pop edx
mov eax esi
cmp ebx esi
jl r-xdata
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push ebx
push eax
push esi
push edi
push 0x1
push 0x0
mov [ ebp - 0x4 ] eax
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x4 ]
mov eax ebx
sub_4485c0
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x8
mov [ ebp - 0x4 ] ecx
pop ecx
mov esi r--data
lea edi [ ebp - 0x2c ]
[ edi ] [ esi ]
push 0x30
mov ebx edx
pop eax
movsw [ edi ] [ esi ]
mov [ ebx ] ax
push 0x78
pop eax
mov [ ebx + 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
lea esi [ eax - 0x1 ]
test esi esi
js r-xdata
pop edi
xor ecx ecx
pop esi
mov [ ebx + eax * 4 + 0x4 ] cx
pop ebx
leave
retn
lea edi [ ebx + 0x4 ]
mov ebx [ ebp - 0x4 ]
lea edi [ edi + esi * 4 ]
cdq
push 0x10
pop ecx
idiv ecx
mov cx [ ebp + edx * 2 - 0x2c ]
mov ax [ ebp + eax * 2 - 0x2c ]
mov [ edi + 0x2 ] cx
mov [ edi ] ax
sub edi 0x4
dec esi
jns r-xdata
add eax 0x100
movzx eax [ esi + ebx ]
test eax eax
jns r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
sub_44863c
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx edx
push esi
lea eax [ ebx - 0x1 ]
mov edx ecx
xor esi esi
mov [ ebp - 0xc ] edx
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] esi
xor al al
xor ecx ecx
push edi
mov edi [ ebp + 0x8 ]
inc ecx
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] esi
test ebx ebx
jle r-xdata
mov al 0x1
pop edi
jmp r-xdata
movzx eax [ esi + edx ]
push [ ebp - 0x4 ]
cdq
push ecx
push edx
push eax
call sub_434ba0
add [ edi ] eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
adc [ edi + 0x4 ] edx
mov edx [ ebp - 0xc ]
shld eax ecx 0x8
inc esi
shl ecx 0x8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
cmp esi ebx
jl r-xdata
pop esi
pop ebx
leave
retn
sub_4486ae
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi edx
push edi
mov esi ecx
call [ GetLocalTime@IAT ]
cmp [ esi ] 0x0
je r-xdata
xor al al
push esi
call sub_4218fb
pop ecx
cmp eax 0x4
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
je r-xdata
push esi
call sub_4218fb
pop ecx
cmp eax 0x2
jb r-xdata
push 0x4
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_422c1d
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_422241
lea esi [ esi + ebx * 2 ]
add esi 0x8
push esi
mov [ edi ] ax
call sub_4218fb
add esp 0x14
cmp eax 0x2
jb r-xdata
mov al 0x1
pop ebx
jmp r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_422c1d
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_422241
lea esi [ esi + ebx * 2 ]
add esi 0x4
push esi
mov [ edi + 0x8 ] ax
lea ebx [ ebx * 2 + 0x4 ]
call sub_4218fb
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_422c1d
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_422241
lea esi [ esi + ebx * 2 ]
add esi 0x4
push esi
mov [ edi + 0x2 ] ax
call sub_4218fb
add esp 0x14
cmp eax 0x2
jb r-xdata
pop edi
pop esi
leave
retn
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_422c1d
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_422241
add esi ebx
push esi
mov [ edi + 0xa ] ax
call sub_4218fb
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_422c1d
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_422241
add esi 0x4
push esi
mov [ edi + 0x6 ] ax
call sub_4218fb
add esp 0x14
test eax eax
je r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_422c1d
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_422241
add esp 0x10
mov [ edi + 0xc ] ax
xor eax eax
mov [ edi + 0xe ] ax
lea esi [ esi + ebx * 2 ]
sub_44882c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx ecx
push edi
push ebx
mov [ ebp - 0x4 ] edx
call sub_4218fb
mov edi eax
cdq
sub eax edx
and eax 0xfffffffe
pop ecx
cmp edi eax
je r-xdata
push esi
xor esi esi
test edi edi
jle r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ax [ ebx + esi * 2 ]
mov [ ebp - 0xc ] ax
mov ax [ ebx + esi * 2 + 0x2 ]
mov [ ebp - 0xa ] ax
xor eax eax
push 0x8
lea edx [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ax
call sub_41bcea
pop ecx
test al al
je r-xdata
pop edi
pop ebx
leave
retn
xor al al
jmp r-xdata
mov cl [ ebp - 0x14 ]
mov eax esi
cdq
sub eax edx
mov edx [ ebp - 0x4 ]
sar eax 0x1
add esi 0x2
mov [ eax + edx ] cl
cmp esi edi
jl r-xdata
pop esi
sub_4488a2
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
push edi
mov esi edx
call sub_4218fb
and [ esi ] 0x0
pop ecx
xor ecx ecx
inc ecx
lea edx [ eax - 0x1 ]
xor ebx ebx
mov [ ebp - 0x4 ] 0x30
cmp edx 0xffffffff
je r-xdata
movzx eax [ edi + edx * 2 ]
cmp ax [ ebp - 0x4 ]
jb r-xdata
mov al 0x1
movzx ecx [ edi + 0x2 ]
cmp ecx 0x78
je r-xdata
cmp eax 0x41
jb r-xdata
cmp eax 0x39
ja r-xdata
push 0x30
pop eax
cmp [ edi ] ax
jne r-xdata
cmp ecx 0x58
jne r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x46
ja r-xdata
sub eax 0x30
jmp r-xdata
and [ esi ] 0x0
xor al al
jmp r-xdata
cmp eax 0x66
ja r-xdata
sub eax 0x37
jmp r-xdata
imul eax ecx
add [ esi ] eax
dec edx
shl ecx 0x4
inc ebx
cmp ebx 0x8
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x57
test edx edx
js r-xdata
sub_448932
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
mov esi edx
test edi edi
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
xor eax eax
push eax
push eax
push eax
push eax
push esi
push edi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push edi
call sub_4218fb
pop ecx
lea esi [ eax + 0x1 ]
pop edi
pop esi
leave
retn
pop ebx
cmp ebx esi
jge r-xdata
push ebx
push esi
jmp r-xdata
call sub_42010a
pop ecx
xor ecx ecx
push ecx
push ecx
push ebx
push eax
push esi
push edi
push ecx
push ecx
mov [ ebp - 0x4 ] eax
call [ WideCharToMultiByte@IAT ]
mov eax [ ebp - 0x4 ]
sub_448993
push ebx
push edi
xor eax eax
push eax
push eax
push 0xffffffff
mov ebx ecx
push ebx
push eax
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
retn
push esi
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push edi
mov esi eax
push esi
push 0xffffffff
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov eax esi
pop esi
sub_4489e0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec eax
jne r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_448a7c
mov ecx eax
call sub_44a5f1
mov al 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_448a2f
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40d349
neg eax
sbb eax eax
neg eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_448a7c
mov ecx eax
call sub_40d349
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
leave
retn 0x4
sub_448a89
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx ]
mov [ ebp + 0x8 ] eax
mov [ esi ] eax
test eax eax
je r-xdata
inc [ eax ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
xor ecx ecx
push 0x20
pop edx
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax edi
mov ecx [ ebp + 0x8 ]
push sub_448b39
push ecx
mov [ eax ] ecx
add eax 0x4
push 0x20
pop edx
mov ecx eax
mov [ ebp + 0x8 ] eax
call sub_41ac65
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
mov [ ebp + 0x8 ] edi
mov [ esi + 0x4 ] eax
cmp [ esi ] edi
jle r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
add eax edx
push eax
add ecx edx
call sub_448ba7
mov edx [ ebp + 0x8 ]
inc edi
add edx 0x20
mov [ ebp + 0x8 ] edx
cmp edi [ esi ]
jl r-xdata
sub_448b50
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_408176
test al al
je r-xdata
mov ecx [ esi ]
mov ax [ ebp + 0x8 ]
mov [ esi + 0x4 ] 0x1
mov [ ecx ] ax
mov eax [ esi ]
xor ecx ecx
mov [ eax + 0x2 ] cx
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
mov ecx esi
dec [ eax ]
call sub_40a6f8
push 0x8
pop eax
xor ecx ecx
push 0x2
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov [ esi ] eax
sub_448ba7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi ]
mov edi ecx
mov [ edi ] eax
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ edi + 0x8 ] eax
lea eax [ esi + 0xc ]
push eax
lea ecx [ edi + 0xc ]
call sub_40c935
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_448bdb
push esi
push sub_448b48
lea esi [ ecx - 0x4 ]
push [ esi ]
push 0x20
pop edx
call sub_4057d8
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_448bfb
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
cdq
cmp ecx esi
jge r-xdata
xor eax eax
jmp r-xdata
idiv esi
test edx edx
je r-xdata
idiv ecx
test edx edx
je r-xdata
pop ebp
retn 0xc
mov eax edx
pop esi
sub esi edx
mov edx esi
sub ecx edx
mov edx ecx
jmp r-xdata
sub_448c32
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp + 0xc ]
call sub_40b8a7
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ CharLowerBuffW@IAT ]
mov ecx esi
call sub_4492b3
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov edi ebx
mov [ esi ] ebx
xor edi edi
inc edi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jbe r-xdata
push edi
lea ecx [ ebp + 0xc ]
inc edi
call sub_40a4f6
push 0x3b
pop ecx
cmp [ eax ] cx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_405cd3
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
mov ebx [ esi ]
xor ecx ecx
push 0x20
pop edx
mov eax ebx
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_42010a
pop ecx
test eax eax
je r-xdata
lea eax [ edi - 0x1 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40a4f6
push 0x3b
pop ecx
cmp [ eax ] cx
je r-xdata
push edi
lea ecx [ ebp + 0xc ]
call sub_40a4f6
cmp [ eax ] bx
je r-xdata
inc [ esi ]
jmp r-xdata
xor ebx ebx
mov edi ebx
push sub_448b39
push ebx
lea edi [ eax + 0x4 ]
push 0x20
pop edx
mov ecx edi
mov [ eax ] ebx
call sub_41ac65
xor ebx ebx
jmp r-xdata
inc [ esi ]
mov eax [ ebp + 0x8 ]
mov edi [ ebp - 0x4 ]
mov [ esi + 0xc ] edi
test eax eax
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
mov ecx esi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] 0x8
call sub_448d85
mov edi eax
test edi edi
jne r-xdata
mov [ esi + 0x10 ] ebx
mov [ esi + 0x8 ] eax
push 0x4
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax ebx
mov [ eax ] 0x1
jmp r-xdata
mov edi ebx
push edi
mov [ esi + 0x10 ] eax
call sub_42010a
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
push ebx
push eax
call sub_421970
add esp 0x10
jmp r-xdata
sub_448d85
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ ebp + 0x18 ]
and [ esp + 0xc ] 0x0
mov eax [ eax ]
and [ esp + 0x10 ] 0x0
push ebx
push esi
mov [ esp + 0x10 ] ecx
xor edx edx
push edi
lea ecx [ esp + 0x50 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x24 ] edx
call sub_40d3d2
lea ecx [ esp + 0x40 ]
call sub_40d3d2
lea ecx [ esp + 0x30 ]
call sub_40d3d2
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ edi ] eax
jb r-xdata
push 0x20
pop esi
cmp [ ebp + 0x8 ] 0x0
mov edi [ ebp + 0x1c ]
je r-xdata
inc [ edi ]
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
jne r-xdata
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x20 ]
push [ eax ]
push [ edi ]
call sub_448bfb
mov ebx [ esp + 0x14 ]
mov esi eax
mov eax [ ebp + 0x18 ]
add esi [ edi ]
mov edx [ eax ]
cmp edx [ esp + 0x10 ]
jge r-xdata
mov eax [ edi ]
push eax
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
cmp ax si
je r-xdata
mov eax [ ebx + 0x4 ]
cmp [ edi ] eax
jae r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ebx + 0x4 ]
shl ecx 0x5
mov esi [ ecx + eax - 0x4 ]
mov [ esp + 0x18 ] esi
jmp r-xdata
mov ecx edx
push 0x20
shl ecx 0x5
pop edi
push r--data
lea ecx [ esp + 0x54 ]
call sub_407e53
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x20 ]
push [ eax ]
push esi
call sub_448bfb
mov ecx [ ebp + 0x18 ]
add eax esi
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ ecx ] eax
xor ebx ebx
mov eax [ ebx + 0x4 ]
add [ ecx + eax ] esi
mov eax [ ebx + 0x4 ]
add [ ecx + eax + 0x1c ] esi
inc edx
add ecx edi
cmp edx [ esp + 0x10 ]
jl r-xdata
mov edi [ ebp + 0x1c ]
mov ecx [ edi ]
push ecx
lea eax [ ecx + 0x1 ]
mov ecx ebx
mov [ edi ] eax
call sub_41db6f
movzx eax [ eax ]
push eax
lea ecx [ esp + 0x54 ]
call sub_40bd2f
jmp r-xdata
push [ edi ]
mov ecx ebx
call sub_41db6f
push 0x5f
pop ecx
cmp [ eax ] cx
jne r-xdata
push [ edi ]
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
push eax
call sub_4222b9
pop ecx
test eax eax
jne r-xdata
and [ esp + 0x20 ] 0x0
push r--data
lea ecx [ esp + 0x34 ]
call sub_407e53
push 0x20
pop esi
inc [ edi ]
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
jne r-xdata
mov eax [ edi ]
push eax
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
cmp ax si
je r-xdata
push [ edi ]
mov ecx ebx
call sub_41db6f
push 0x5b
pop ecx
cmp [ eax ] cx
je r-xdata
push 0x20
pop esi
push 0x5f
pop esi
inc [ edi ]
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
jne r-xdata
mov ecx [ edi ]
push ecx
lea eax [ ecx + 0x1 ]
mov ecx ebx
mov [ edi ] eax
call sub_41db6f
movzx eax [ eax ]
push eax
lea ecx [ esp + 0x34 ]
call sub_40bd2f
jmp r-xdata
push [ edi ]
mov ecx ebx
call sub_41db6f
cmp [ eax ] si
jne r-xdata
mov eax [ edi ]
push eax
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
cmp ax si
je r-xdata
mov eax [ edi ]
push eax
mov ecx ebx
call sub_41db6f
mov esi [ esp + 0x14 ]
push 0x5b
pop ecx
cmp [ eax ] cx
jne r-xdata
push [ edi ]
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
push eax
call sub_4222b9
pop ecx
test eax eax
jne r-xdata
mov eax [ edi ]
push eax
mov ecx ebx
call sub_41db6f
cmp [ eax ] 0x3b
jne r-xdata
inc [ edi ]
push r--data
lea ecx [ esp + 0x44 ]
call sub_407e53
mov eax [ edi ]
cmp eax [ ebx + 0x4 ]
jb r-xdata
inc [ edi ]
jmp r-xdata
push [ esp + 0x40 ]
call sub_422241
pop ecx
mov [ esp + 0x20 ] eax
test eax eax
jle r-xdata
mov ecx [ edi ]
push ecx
lea eax [ ecx + 0x1 ]
mov ecx ebx
mov [ edi ] eax
call sub_41db6f
movzx eax [ eax ]
push eax
lea ecx [ esp + 0x44 ]
call sub_40bd2f
jmp r-xdata
xor eax eax
inc eax
xor ecx ecx
mov eax rw-data
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] eax
mov ecx esi
call sub_4492b3
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
push eax
mov ecx ebx
call sub_41db6f
cmp [ eax ] 0x5d
jne r-xdata
push [ edi ]
mov ecx ebx
call sub_41db6f
movzx eax [ eax ]
push eax
call sub_4222df
pop ecx
test eax eax
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_405cd3
lea ecx [ esp + 0x40 ]
call sub_405cd3
lea ecx [ esp + 0x50 ]
call sub_405cd3
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ esp + 0x24 ]
cmp eax 0x100
jne r-xdata
push [ esp + 0x50 ]
add eax 0xffffffe8
push eax
call sub_422203
pop ecx
test eax eax
mov eax [ esp + 0x2c ]
pop ecx
jne r-xdata
mov ebx eax
jmp r-xdata
inc [ edi ]
cmp eax 0x80
jne r-xdata
dec [ esi ]
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ecx [ esp + 0x2c ]
mov ecx [ eax ]
mov [ esp + 0x24 ] ecx
test cl 0x31
je r-xdata
cmp [ esp + 0x20 ] 0x0
jg r-xdata
push [ esp + 0x30 ]
call sub_422241
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
and [ esp + 0x2c ] 0x0
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push edi
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push 0x1
call sub_448d85
test eax eax
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ eax - 0x4 ]
mov [ esp + 0x1c ] ecx
xor ecx ecx
inc ecx
mov [ esp + 0x2c ] ecx
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ esp + 0x18 ]
push [ eax ]
push [ esp + 0x20 ]
push esi
call sub_448bfb
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x1c ]
add esi eax
mov eax [ esp + 0x14 ]
shl ecx 0x5
mov eax [ eax + 0x4 ]
mov [ esp + 0x18 ] esi
mov [ ecx + eax ] esi
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x14 ]
shl ecx 0x5
mov eax [ esi + 0x4 ]
mov [ ecx + eax + 0x4 ] edx
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
mov edx [ esp + 0x24 ]
shl ecx 0x5
mov [ ecx + eax + 0x8 ] edx
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
push eax
mov eax [ esi + 0x4 ]
shl ecx 0x5
add eax 0xc
add ecx eax
call sub_40c935
mov eax [ esp + 0x20 ]
imul eax [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
add edx eax
mov eax [ esi + 0x4 ]
shl ecx 0x5
mov [ esp + 0x18 ] edx
mov [ ecx + eax + 0x1c ] edx
mov ecx [ ebp + 0x20 ]
mov eax [ esp + 0x1c ]
cmp eax [ ecx ]
jle r-xdata
mov [ esp + 0x20 ] 0x1
mov [ ecx ] 0x8
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ esp + 0x2c ]
cmp eax [ ecx ]
jle r-xdata
add eax 0x1c
mov [ esp + 0x28 ] eax
cmp eax rw-data
jl r-xdata
or ecx 0x4
mov [ esp + 0x24 ] ecx
inc [ esp + 0x10 ]
mov [ ecx ] eax
dec [ esi ]
jmp r-xdata
cmp eax 0x2
je r-xdata
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x4
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x10
je r-xdata
push 0x2
pop ebx
jmp r-xdata
sub_449228
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ebx ecx
push 0x4
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
mov ecx esi
call sub_40cdb4
mov edi [ ebp + 0xc ]
mov [ edi ] eax
mov edi [ ebp + 0xc ]
and [ edi ] 0x0
cmp [ ebx ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x2
xor eax eax
test ecx ecx
js r-xdata
mov ecx [ edi ]
cmp ecx [ ebx ]
jge r-xdata
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
shl ecx 0x5
mov esi [ ecx + eax + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4084a6
mov ecx [ ebp + 0x8 ]
push esi
mov eax [ ecx + 0x8 ]
push [ eax ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
shl ecx 0x5
mov eax [ ecx + eax ]
add eax [ ebx + 0x8 ]
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
cmp eax [ ebx ]
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
jmp r-xdata
sub_4492b3
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4 ]
xor edi edi
test ecx ecx
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push ecx
call sub_448bdb
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0xc ] edi
pop edi
pop esi
retn
dec [ eax ]
jne r-xdata
mov [ esi + 0x10 ] edi
push [ esi + 0x10 ]
call j_sub_4228ca#2
push [ esi + 0x8 ]
call j_sub_4228ca#2
pop ecx
pop ecx
sub_449310
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
mov edi ecx
call sub_449228
mov esi eax
test esi esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0xc ]
shl ecx 0x5
mov edx [ ecx + eax ]
mov edi [ ecx + eax + 0x1c ]
mov ebx [ ecx + eax + 0x8 ]
mov [ ebp + 0x8 ] edx
mov edx [ ecx + eax + 0x4 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x8 ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
cmp eax edi
jl r-xdata
imul ecx edx
add eax ecx
mov [ ebp + 0x8 ] eax
add esi ecx
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax edi
jmp r-xdata
test bl 0x21
je r-xdata
push 0x3
pop edi
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x14 ]
test bl 0x4
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push ecx
push eax
push edi
push esi
push ebx
push [ ebp + 0xc ]
call sub_449569
jmp r-xdata
test bl 0x40
je r-xdata
cmp ecx 0xffffffff
jne r-xdata
test bl 0x8
je r-xdata
test al al
je r-xdata
sub edi [ ebp + 0x8 ]
test al al
je r-xdata
dec edx
je r-xdata
cmp edx 0x4
je r-xdata
mov edi [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x7
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_44be63
mov [ esi ] eax
test bl 0x10
je r-xdata
test bl 0x10
je r-xdata
test al al
je r-xdata
dec edx
je r-xdata
test al al
je r-xdata
cmp edx 0x8
jne r-xdata
mov [ esi ] edi
push edi
push esi
push edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_44be47
mov ecx [ ebp + 0xc ]
call sub_44be8a
mov ebx eax
cmp ebx edi
jle r-xdata
test bl 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40d00b
mov [ esi ] al
test al al
je r-xdata
dec edx
dec edx
je r-xdata
fld [ esi ]
mov ecx [ ebp + 0xc ]
call sub_412620
fstp [ esi ]
xor eax eax
test al al
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_44ad14
push eax
call sub_41faa0
add esp 0xc
jmp r-xdata
push ebx
push ecx
call sub_44be47
pop ecx
push eax
push esi
call sub_41faa0
add esp 0xc
push ebx
push ecx
mov ecx [ ebp + 0xc ]
call sub_44be47
pop ecx
push eax
push ebx
mov ebx edi
movsx edi [ esi ]
movzx edi [ esi ]
jmp r-xdata
test bl 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40d00b
mov [ esi ] ax
test al al
je r-xdata
sub edx 0x4
jne r-xdata
fld [ esi ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_412620
fstp [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
movsx edi [ esi ]
jmp r-xdata
movzx edi [ esi ]
jmp r-xdata
mov edi [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
mov [ esi ] edi
test bl 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40d00b
mov [ esi ] eax
test al al
je r-xdata
mov esi [ ebp + 0x10 ]
fstp [ ebp - 0x10 ]
mov ecx esi
call sub_412570
fld [ ebp - 0x10 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] 0x2
jmp r-xdata
mov edi [ esi ]
mov ebx [ esi + 0x4 ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40d00b
mov [ esi ] eax
mov [ esi + 0x4 ] edx
sub_449569
push ebp
mov ebp esp
sub esp 0x14
test [ ebp + 0xc ] 0x4
push ebx
push esi
push edi
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
cmp [ ebp + 0x20 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0xffffffff
jne r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_40d16a
mov ecx esi
test al al
je r-xdata
mov ebx [ ebp + 0x14 ]
sub ebx [ ebp + 0x18 ]
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push 0x2
push [ ebp + 0x10 ]
lea eax [ ebp + 0x20 ]
push eax
call sub_41faa0
add esp 0xc
push [ ebp + 0x20 ]
push 0x1
push [ ebp + 0x10 ]
lea eax [ ebp + 0x23 ]
push eax
call sub_41faa0
movsx ax [ ebp + 0x23 ]
movzx eax ax
add esp 0xc
push eax
jmp r-xdata
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx eax [ eax ]
call sub_40cdb4
jmp r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
test [ ebp + 0xc ] 0x1
mov esi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_448b50
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
movzx eax [ eax ]
mov [ ebp + 0x20 ] eax
push 0x2
lea eax [ ebp + 0x20 ]
mov al [ eax ]
mov [ ebp + 0x23 ] al
push 0x1
lea eax [ ebp + 0x23 ]
jmp r-xdata
push eax
lea ecx [ ebp - 0x10 ]
call sub_448b50
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_40a4f6
test [ ebp + 0xc ] 0x1
je r-xdata
shr ebx 0x1
xor ecx ecx
push 0x2
pop edx
lea eax [ ebx + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
lea esi [ ebx + ebx ]
push esi
push [ ebp + 0x10 ]
mov edi eax
push edi
call sub_41faa0
mov ecx [ ebp + 0x24 ]
add esp 0x10
xor eax eax
push edi
mov [ esi + edi ] ax
call sub_40ca8e
push edi
call j_sub_4228ca#2
lea esi [ ebx + 0x1 ]
push esi
call sub_42010a
push ebx
push [ ebp + 0x10 ]
mov edi eax
push edi
call sub_41faa0
add esp 0x10
mov edx esi
mov ecx edi
mov [ edi + ebx ] 0x0
call sub_448553
mov ecx [ ebp + 0x24 ]
mov esi eax
push esi
call sub_40ca8e
push esi
call j_sub_4228ca#2
push edi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
shr ebx 0x1
call sub_4084a6
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] ebx
jge r-xdata
call sub_4084a6
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] ebx
jge r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
push eax
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x20
pop ecx
jmp r-xdata
mov ecx esi
call sub_4084a6
push ebx
push 0x0
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f40
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea eax [ ebx + ebx ]
push eax
push [ ebp - 0x10 ]
jmp r-xdata
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x4 ]
inc ebx
mov ecx esi
call sub_4084a6
push ebx
push 0x0
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f40
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
mov ecx [ ebp - 0x10 ]
lea edx [ ebx + 0x1 ]
call sub_448932
mov esi eax
push ebx
push esi
push [ ebp + 0x10 ]
call sub_41faa0
push esi
call j_sub_4228ca#2
add esp 0x10
jmp r-xdata
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x4 ]
inc ebx
push [ ebp + 0x10 ]
call sub_41faa0
add esp 0xc
jmp r-xdata
sub_4497b6
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edi
call sub_44a7a2
test al al
je r-xdata
test [ ebp + 0x8 ] 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
or esi 0xffffffff
cmp [ eax + 0x8 ] ebx
jbe r-xdata
test [ ebp + 0x8 ] 0xc
push 0x2
pop edi
je r-xdata
xor ebx ebx
inc ebx
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0x10 ]
mov edi [ edi + 0x8 ]
mov ecx esi
call sub_412570
mov [ esi ] edi
mov [ esi + 0xc ] 0x7
xor edi edi
jmp r-xdata
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
lea ecx [ ebp + 0x14 ]
call sub_412570
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x1c
mov eax [ ebp + 0xc ]
or ebx 0xffffffff
mov esi [ eax + 0x8 ]
cmp esi edi
jbe r-xdata
push 0x2
jmp r-xdata
mov eax [ eax + 0x4 ]
xor edi edi
push [ eax ]
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0xc ] edi
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x14 ] edi
call sub_4113a0
push 0x4
lea ecx [ ebp - 0x1c ]
call sub_40d2c0
test al al
jne r-xdata
push esi
push [ ebp + 0x10 ]
lea eax [ ebp + 0x14 ]
push eax
mov ecx edi
call sub_4492f4
mov eax [ eax + 0x4 ]
push 0x29
mov eax [ eax ]
mov ecx eax
mov [ ebp + 0x8 ] eax
call sub_41d5f6
test al al
jne r-xdata
pop edi
jmp r-xdata
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_449228
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] eax
mov ecx esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40cdb4
lea ecx [ ebp - 0x1c ]
lea esi [ eax - 0x1 ]
call sub_412570
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1c ] esi
mov ecx [ ebp + 0x8 ]
call sub_40cdb4
mov esi eax
dec esi
jns r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
push ebx
push 0x1
push [ ebp + 0x10 ]
push [ eax + esi * 4 - 0x4 ]
lea eax [ ebp + 0x14 ]
push eax
call sub_449310
jmp r-xdata
mov eax [ eax + 0x4 ]
push 0x29
mov edi [ eax ]
mov ecx edi
call sub_41d5f6
test al al
jne r-xdata
call sub_412570
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
call sub_412570
mov [ esi ] edi
mov edi [ ebp + 0x8 ]
mov [ esi + 0xc ] ebx
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
jmp r-xdata
mov edi eax
mov eax [ ebp + 0xc ]
mov ecx edi
call sub_40cdb4
mov ebx eax
dec ebx
jns r-xdata
lea ecx [ ebp - 0x1c ]
call sub_412570
jmp r-xdata
and [ esi ] 0x0
push 0x3
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
sub_4499a0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
inc [ eax ]
mov eax ecx
pop ebp
retn 0x4
sub_4499d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
lea ecx [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
inc [ eax ]
call sub_405cd3
mov eax esi
pop esi
pop ebp
retn 0x18
sub_449a0a
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
test eax eax
je r-xdata
inc [ eax + 0x4 ]
mov ecx [ edi + 0x8 ]
xor ebx ebx
push ebx
lea edx [ esi + 0x8 ]
call sub_449d25
mov ecx [ edi + 0xc ]
push ebx
lea edx [ esi + 0xc ]
call sub_449d25
mov ecx [ edi + 0x10 ]
push ebx
lea edx [ esi + 0x10 ]
call sub_449d25
mov ecx [ edi + 0x14 ]
push ebx
lea edx [ esi + 0x14 ]
call sub_449d25
mov ecx [ edi + 0x18 ]
push ebx
lea edx [ esi + 0x18 ]
call sub_449d25
mov ecx [ edi + 0x1c ]
push ebx
lea edx [ esi + 0x1c ]
call sub_449d25
add esp 0x18
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
inc [ eax + 0x4 ]
sub_449a8f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x2 ] ax
mov eax [ ecx ]
test al 0x8
je r-xdata
test [ ecx ] 0x10
je r-xdata
or eax 0x6
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
mov [ ecx ] 0x10
sub_449ad4
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xfa0
lea eax [ esi + 0x14 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] edi
push eax
mov [ esi + 0xc ] edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ esi + 0x2c ]
push edi
mov [ edx ] edi
mov [ esi + 0x30 ] edi
call sub_449d25
lea eax [ esi + 0x34 ]
mov [ esp ] 0x1f4
push eax
call [ InterlockedExchange@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_449b29
push esi
mov esi ecx
call sub_449ce3
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x24 ]
pop esi
test ecx ecx
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_449b57
push edi
mov edi ecx
mov [ edi ] r--data
call sub_44a31d
push [ edi + 0x2c ]
call [ CloseHandle@IAT ]
push [ edi + 0x30 ]
call [ CloseHandle@IAT ]
push [ edi + 0x8 ]
call j_sub_4228ca#2
pop ecx
lea eax [ edi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ edi ] r--data
pop edi
retn
sub_449b92
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_449bb2
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_449b57
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_449bd1
push esi
push 0x38
mov esi ecx
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push esi
mov ecx eax
call sub_449ad4
pop esi
retn
sub_449bee
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
call [ EnterCriticalSection@IAT ]
cmp [ ebp + 0xc ] 0x0
mov ebx [ edi + 0xc ]
je r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
push [ edi + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_44ad14
push [ edi + 0xc ]
mov ecx [ ebp + 0x8 ]
push [ edi + 0x8 ]
call sub_44be47
push eax
call sub_41faa0
add esp 0xc
sub_449c3b
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
call [ EnterCriticalSection@IAT ]
lea eax [ edi + 0x34 ]
push [ eax ]
push eax
call [ InterlockedExchange@IAT ]
cmp eax 0x1f6
jne r-xdata
mov bl 0x1
xor ebx ebx
cmp [ edi + 0xc ] ebx
je r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov al bl
pop ebx
retn
sub_449c73
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x14 ]
push esi
call [ EnterCriticalSection@IAT ]
mov edi [ ebx + 0xc ]
push [ ebx + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_44ad14
push [ ebx + 0xc ]
mov ecx [ ebp + 0x8 ]
push [ ebx + 0x8 ]
call sub_44be47
push eax
call sub_41faa0
push [ ebx + 0xc ]
push 0x0
push [ ebx + 0x8 ]
call sub_421970
add esp 0x18
mov [ ebx + 0xc ] 0x0
push esi
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_449d25
push ebp
mov ebp esp
push edi
mov edi ecx
test edi edi
jne r-xdata
push 0x2
push [ ebp + 0x8 ]
push 0x0
push edx
call [ GetCurrentProcess@IAT ]
push eax
push edi
call [ GetCurrentProcess@IAT ]
push eax
call [ DuplicateHandle@IAT ]
and [ edx ] ecx
jmp r-xdata
pop edi
pop ebp
retn
sub_449d5f
push ebx
push esi
push edi
mov edi ecx
xor esi esi
mov ecx [ edi + 0x20 ]
xor bl bl
test ecx ecx
je r-xdata
mov ecx edi
call sub_44a0a2
test al al
je r-xdata
call sub_449c3b
mov bl al
test bl bl
je r-xdata
mov ecx [ edi + 0x24 ]
test ecx ecx
je r-xdata
test bl bl
je r-xdata
lea ecx [ edi + 0x8 ]
call sub_449cce
mov ecx [ edi + 0x20 ]
dec [ ecx + 0x4 ]
jne r-xdata
push 0x2
pop esi
jmp r-xdata
mov ecx edi
call sub_44a112
test al al
je r-xdata
call sub_449c3b
test al al
je r-xdata
lea ecx [ edi + 0x10 ]
call sub_449cce
jmp r-xdata
or esi 0x8
jmp r-xdata
and [ edi + 0x20 ] esi
mov eax [ ecx ]
push 0x1
call [ eax ]
test esi esi
jne r-xdata
or esi 0x1
lea ecx [ edi + 0x10 ]
call sub_449cce
mov ecx [ edi + 0x24 ]
dec [ ecx + 0x4 ]
jne r-xdata
or esi 0x4
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
and [ edi + 0x4 ] esi
and [ edi + 0x24 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_449e00
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_44a0a2
test al al
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov eax [ ebx ]
xor ecx ecx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi ] ecx
je r-xdata
cmp [ edi ] ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx ebx
call sub_449cce
mov ecx edi
call sub_449cce
mov ecx [ esi ]
push 0x0
mov edx ebx
call sub_449d25
mov eax [ ebp + 0x14 ]
push 0x0
mov ecx [ eax ]
mov edx edi
call sub_449d25
mov eax [ esi ]
pop ecx
pop ecx
jmp r-xdata
sub_449e65
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx ]
push esi
push edi
xor edi edi
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
test al 0x10
je r-xdata
test [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0xc ]
call [ GetStdHandle@IAT ]
mov esi [ ebp + 0x10 ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0xc ]
call [ GetStdHandle@IAT ]
mov esi [ ebp + 0x10 ]
mov [ esi ] eax
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi ]
test eax eax
jne r-xdata
push 0x1
mov edx esi
mov ecx eax
call sub_449d25
pop ecx
jmp r-xdata
mov [ esi ] edi
push edi
push 0x80
push 0x3
lea eax [ ebp - 0xc ]
push eax
push 0x2
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
leave
retn 0x10
push edi
lea eax [ ebp - 0xc ]
push eax
push esi
push [ ebp + 0x14 ]
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
push 0x1
lea edx [ ebp + 0x10 ]
call sub_449d25
pop ecx
mov ecx esi
call sub_449cce
mov eax [ ebp + 0x10 ]
mov [ esi ] eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
sub_449f31
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx ]
push esi
push edi
xor edi edi
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
test al 0x10
je r-xdata
test al 0x1
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov esi [ ebp + 0x10 ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov esi [ ebp + 0x10 ]
mov [ esi ] eax
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi ]
test eax eax
jne r-xdata
push 0x1
mov edx esi
mov ecx eax
call sub_449d25
pop ecx
jmp r-xdata
mov [ esi ] edi
push edi
push 0x80
push 0x3
lea eax [ ebp - 0xc ]
push eax
push 0x1
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
leave
retn 0x10
push edi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x14 ]
push esi
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
push 0x1
lea edx [ ebp + 0x10 ]
call sub_449d25
pop ecx
mov ecx esi
call sub_449cce
mov eax [ ebp + 0x10 ]
mov [ esi ] eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
sub_449ffa
push ebp
mov ebp esp
call sub_44a0a2
test al al
je r-xdata
mov ecx [ ecx + 0x24 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_44a120
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop ebp
jmp sub_449bee
xor eax eax
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40ca8e
sub_44a041
push ebp
mov ebp esp
call sub_44a0a2
test al al
je r-xdata
mov ecx [ ecx + 0x24 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_44a157
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40ca8e
xor eax eax
pop ebp
retn 0x4
pop ebp
jmp sub_449c73
sub_44a073
push ebx
push esi
mov esi ecx
push edi
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0xc ]
push eax
lea edi [ esi + 0x10 ]
push edi
lea ebx [ esi + 0x14 ]
push ebx
call sub_449e00
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0xfffffff4
push 0x4
mov ecx esi
call sub_449e65
sub_44a0ba
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_44a112
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
lea esi [ ecx + 0x18 ]
push [ ebp + 0x8 ]
push [ esi ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
pop esi
mov ecx esi
call sub_449cce
sub_44a120
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop ebp
jmp sub_449bee
xor eax eax
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40ca8e
sub_44a157
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40ca8e
xor eax eax
pop ebp
retn 0x4
pop ebp
jmp sub_449c73
sub_44a17a
push ebx
push esi
mov esi ecx
push edi
lea eax [ esi + 0x10 ]
push eax
lea eax [ esi + 0x14 ]
push eax
lea edi [ esi + 0x8 ]
push edi
lea ebx [ esi + 0xc ]
push ebx
call sub_449e00
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0xfffffff5
push 0x2
mov ecx esi
call sub_449e65
sub_44a1b7
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov ebx ecx
push 0x1f5
lea esi [ ebx + 0x34 ]
push esi
mov [ ebp - 0xc ] esi
call [ InterlockedExchange@IAT ]
push 0xffff
call sub_42010a
mov edi eax
mov eax 0xffff
push eax
mov [ ebp - 0x8 ] edi
mov [ ebx + 0x10 ] eax
call sub_42010a
pop ecx
pop ecx
push 0x0
mov [ ebx + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0xffff
push edi
push [ ebx + 0x2c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push edi
call j_sub_4228ca#2
pop ecx
mov edi 0x1f6
push edi
push esi
call [ InterlockedExchange@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov esi [ ebp - 0xc ]
lea esi [ ebx + 0x14 ]
push esi
call [ EnterCriticalSection@IAT ]
mov eax [ ebx + 0xc ]
mov ecx [ ebp - 0x4 ]
add eax ecx
cmp [ ebx + 0x10 ] eax
jae r-xdata
mov eax [ ebx + 0xc ]
add eax [ ebx + 0x8 ]
push ecx
push edi
push eax
call sub_41faa0
mov eax [ ebp - 0x4 ]
add [ ebx + 0xc ] eax
add esp 0xc
push esi
call [ LeaveCriticalSection@IAT ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0xffff
push edi
push [ ebx + 0x2c ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0xc ]
add eax [ ebp - 0x4 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
jns r-xdata
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fmul [ r--data ]
call sub_471e16
push eax
mov [ ebx + 0x10 ] eax
call sub_42010a
push [ ebx + 0xc ]
mov [ ebx + 0x8 ] eax
push edi
push [ ebx + 0x8 ]
call sub_41faa0
push edi
call j_sub_4228ca#2
mov ecx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
add esp 0x14
fadd [ r--data ]
sub_44a2f6
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
xor ecx ecx
cmp [ esi + 0x30 ] ecx
jne r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push ecx
push esi
push sub_44a2dc
push ecx
push ecx
call [ CreateThread@IAT ]
mov [ esi + 0x30 ] eax
sub_44a31d
push esi
mov esi ecx
push edi
lea edi [ esi + 0x30 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
lea ebx [ esi + 0x34 ]
push [ ebx ]
push ebx
call [ InterlockedExchange@IAT ]
cmp eax 0x1f6
je r-xdata
pop ebx
add esi 0x14
push esi
call [ EnterCriticalSection@IAT ]
push 0x1f6
push [ edi ]
call [ TerminateThread@IAT ]
push 0x3e8
push [ edi ]
call [ WaitForSingleObject@IAT ]
mov ecx edi
call sub_449cce
push 0x1f6
push ebx
call [ InterlockedExchange@IAT ]
push esi
call [ LeaveCriticalSection@IAT ]
sub_44a37f
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
call sub_44a1a9
test al al
je r-xdata
pop esi
retn
mov ecx esi
call sub_44a0ac
test al al
je r-xdata
mov ecx [ esi + 0x8 ]
call sub_449bd1
mov ecx eax
mov [ esi + 0x20 ] eax
call sub_44a2f6
call sub_44a0a2
test al al
jne r-xdata
mov ecx [ esi + 0x10 ]
call sub_449bd1
mov [ esi + 0x24 ] eax
mov ecx eax
pop esi
jmp sub_44a2f6
sub_44a3ee
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ax [ edi + 0x8 ]
mov [ esi + 0x8 ] ax
mov ax [ edi + 0xa ]
mov [ esi + 0xa ] ax
call sub_41df5b
test al al
je r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x10
jne r-xdata
push 0x10
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
xor edx edx
mov eax [ edi ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
jmp r-xdata
mov eax [ edi ]
mov [ esi ] eax
fld [ edi ]
fstp [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] edx
jmp r-xdata
sub_44a485
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_41df5b
test al al
je r-xdata
mov ax [ edi + 0x8 ]
mov [ esi + 0x8 ] ax
mov ax [ edi + 0xa ]
mov ecx esi
mov [ esi + 0xa ] ax
call sub_41df5b
test al al
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x10
jne r-xdata
push 0x10
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
push ecx
call sub_401926
cmp ax 0x20
jne r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
xor edx edx
mov eax [ edi ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
jmp r-xdata
mov eax [ edi ]
mov [ esi ] eax
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov [ esi ] edx
jmp r-xdata
sub_44a525
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41df5b
test al al
je r-xdata
push 0x10
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_40caee
jmp r-xdata
push ecx
call sub_401926
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44a563
movzx eax [ ecx + 0x8 ]
cmp ax 0x41
je r-xdata
xor eax eax
inc eax
retn
cmp ax 0x52
je r-xdata
cmp ax 0x53
je r-xdata
cmp ax 0x54
je r-xdata
cmp ax 0x55
je r-xdata
cmp ax 0x56
je r-xdata
xor eax eax
retn
sub_44a5d3
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
push [ ebp + 0x8 ]
call sub_40d500
test al al
je r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_44a5f1
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
mov ebx ecx
call sub_44a5d3
test eax eax
je r-xdata
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x20
and edi 0xff00
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax + 0x14 ] ecx
jmp r-xdata
xor esi esi
mov ecx esi
call sub_40d3d2
jmp r-xdata
pop ebx
pop ebp
retn 0xc
push [ ebp + 0x8 ]
mov ecx esi
call sub_40c935
mov eax [ ebp + 0xc ]
and [ esi + 0x1c ] 0x0
and [ esi + 0x18 ] 0x0
or edi 0x1
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] eax
push [ ebx ]
push esi
call sub_40d420
pop edi
mov [ ebx ] eax
pop esi
sub_44a65e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
inc eax
push eax
mov [ esi + 0x8 ] eax
call sub_42010a
pop ecx
mov [ esi ] eax
mov ecx esi
mov [ eax ] 0x0
call sub_40a6f8
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44a689
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412570
push 0x18
mov [ esi + 0xc ] 0xa
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_4499a0
jmp r-xdata
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44a6be
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412570
push 0x10
mov [ esi + 0xc ] 0x4
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push [ ecx ]
mov ecx eax
call sub_40caee
jmp r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44a6f6
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
mov esi ecx
call sub_412570
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_44b428
cmp al 0x1
je r-xdata
push edi
mov ecx esi
call sub_44b05a
cmp al 0x1
je r-xdata
push 0x10
mov [ esi + 0xc ] 0x8
call sub_42010a
pop ecx
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
push edi
push [ esi ]
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
push [ esi ]
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_4228ca#2
and [ esi ] 0x0
pop ecx
mov ecx esi
call sub_412570
sub_44a76d
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412570
push 0x14
mov [ esi + 0xc ] 0xf
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_444d76
jmp r-xdata
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44a7b1
push esi
mov esi ecx
movzx eax [ esi ]
cmp ax [ edx ]
je r-xdata
push ebx
xor ebx ebx
inc ebx
test ax ax
je r-xdata
xor al al
pop esi
retn
mov al bl
cmp ax bx
je r-xdata
test eax 0x6000
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax [ edx + 0x8 ]
cmp eax 0xe
jne r-xdata
pop ebx
pop esi
retn
add eax 0xfffffffe
push 0x4
pop ecx
cmp eax 0x22
ja r-xdata
push 0x10
push edx
push esi
jmp r-xdata
push ecx
lea eax [ edx + 0x8 ]
push eax
lea eax [ esi + 0x8 ]
push eax
movzx eax [ eax + lookup_table_44a83d ]
jmp [ eax * 4 + jump_table_44a829 ]
call sub_420183
add esp 0xc
jmp r-xdata
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov ecx ebx
jmp r-xdata
push 0x2
jmp r-xdata
push 0x8
pop ecx
sub_44a875
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
dec eax
je r-xdata
mov edi [ ebp + 0x8 ]
push ebx
cmp [ edi + 0xc ] 0x1
jne r-xdata
dec eax
je r-xdata
push 0x2
pop ebx
cmp [ edi + 0xc ] ebx
jne r-xdata
mov eax [ esi ]
imul [ edi ]
mov ecx [ esi ]
imul ecx [ edi ]
mov ebx eax
mov eax ecx
mov edi edx
cdq
cmp eax ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xc ] 0x1
je r-xdata
dec eax
je r-xdata
call sub_41df8a
mov ecx edi
call sub_412620
fmul [ esi ]
fstp [ esi ]
push [ edi + 0x4 ]
mov eax [ esi ]
push [ edi ]
cdq
push edx
push eax
call sub_434ba0
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0xc ] ebx
jmp r-xdata
mov [ esi + 0xc ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
jmp r-xdata
cmp edx edi
jne r-xdata
mov ecx edi
call sub_40d00b
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
call sub_434ba0
mov [ esi ] eax
mov [ esi + 0x4 ] edx
jmp r-xdata
cmp [ edi + 0xc ] 0x2
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
je r-xdata
pop ebx
mov [ esi ] ecx
jmp r-xdata
mov ecx esi
call sub_44b00a
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_41df8a
mov ecx edi
jmp r-xdata
call sub_41df8a
sub eax 0x5
je r-xdata
call sub_412620
fmul [ esi ]
fstp [ esi ]
jmp r-xdata
dec eax
dec eax
jne r-xdata
sub_44a955
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
xor edx edx
mov eax [ edi + 0xc ]
inc edx
cmp eax edx
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] edx
jne r-xdata
cmp eax 0x2
je r-xdata
cmp [ esi + 0xc ] 0x2
jne r-xdata
mov eax [ edi ]
sub eax [ esi ]
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov ecx eax
mov eax [ edi ]
mov esi edx
cdq
sub eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ebx edx
mov eax ecx
sbb ebx esi
mov esi [ ebp - 0x4 ]
cdq
cmp eax esi
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] edx
je r-xdata
cmp eax 0x3
je r-xdata
call sub_41df8a
mov ecx esi
mov eax [ edi ]
cdq
sub eax [ esi ]
sbb edx [ esi + 0x4 ]
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ edi + 0xc ] 0x2
jmp r-xdata
mov [ edi + 0xc ] 0x2
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
jmp r-xdata
cmp edx ebx
jne r-xdata
mov ecx esi
call sub_40d00b
sub [ edi ] eax
sbb [ edi + 0x4 ] edx
jmp r-xdata
cmp [ esi + 0xc ] 0x2
jne r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp eax 0x4
je r-xdata
mov ecx edi
call sub_44b00a
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ edi ] ecx
jmp r-xdata
call sub_412620
fsubr [ edi ]
fstp [ edi ]
call sub_41df8a
cmp eax 0x7
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ edi ]
cmp [ ecx + 0xc ] edx
jne r-xdata
cmp eax 0x8
jle r-xdata
call sub_40d00b
call sub_40cdb4
jmp r-xdata
cmp eax 0xb
jg r-xdata
sub esi eax
mov [ edi ] esi
jmp r-xdata
sub_44aa57
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
jle r-xdata
mov ecx esi
call sub_44b00a
mov eax esi
pop esi
pop ebp
retn 0x4
cmp eax 0x2
jle r-xdata
call sub_41df8a
cmp eax 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_412620
fdivr [ esi ]
fstp [ esi ]
cmp eax 0x4
je r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0xb
jne r-xdata
sub_44aab4
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x5
jne r-xdata
xor eax eax
cmp [ esi ] 0x0
je r-xdata
call sub_44ac55
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ eax + 0x8 ]
mov [ ecx ] edx
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_44aadf
mov eax [ ecx ]
mov edx [ eax + 0x20c ]
cmp edx [ eax + 0x210 ]
je r-xdata
xor ecx ecx
push esi
test edx edx
jle r-xdata
xor al al
retn
mov al 0x1
pop esi
retn
add eax 0x10c
xor al al
pop esi
retn
cmp esi [ eax - 0x100 ]
jge r-xdata
inc ecx
add eax 0x4
cmp ecx edx
jl r-xdata
mov esi [ eax ]
test esi esi
js r-xdata
sub_44ab1c
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edx [ esi ]
mov ecx [ edx + 0x20c ]
test ecx ecx
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
cmp ecx [ eax + 0x20c ]
jne r-xdata
push ebx
xor ebx ebx
test ecx ecx
jle r-xdata
mov ecx edi
call sub_44ac07
test eax eax
js r-xdata
mov ecx 0x10c
mov eax [ esi ]
xor ecx ecx
mov [ ebp + 0x8 ] ecx
cmp [ eax + 0x20c ] ecx
jle r-xdata
mov ecx [ edi ]
mov ecx [ ecx ]
mov ebx [ ecx + eax * 4 ]
test ebx ebx
je r-xdata
and [ ecx + edx ] 0x0
mov eax [ edi ]
and [ ecx + eax ] 0x0
mov edx [ esi ]
inc ebx
lea ecx [ ecx + 0x4 ]
cmp ebx [ edx + 0x20c ]
jl r-xdata
mov eax [ esi ]
cmp ecx [ eax + 0x20c ]
jl r-xdata
mov ebx 0x10c
push 0x0
push 0x0
push esi
call sub_4114a0
add esp 0xc
test eax eax
je r-xdata
pop ebx
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
and [ ebx + eax ] 0x0
mov eax [ edi ]
and [ ebx + eax ] 0x0
mov eax [ esi ]
inc ecx
add ebx 0x4
mov [ ebp + 0x8 ] ecx
cmp ecx [ eax + 0x20c ]
jl r-xdata
mov ecx edi
call sub_44aadf
test al al
jne r-xdata
push ebx
mov ecx eax
call sub_40d89e
mov eax [ esi ]
mov ecx esi
inc [ ebx + eax ]
mov eax [ edi ]
inc [ ebx + eax ]
call sub_44aadf
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub_44ac07
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x5
je r-xdata
call sub_44aadf
test al al
je r-xdata
or eax 0xffffffff
pop esi
retn
mov eax [ esi ]
push edi
mov esi [ eax + 0x20c ]
mov edx [ eax + 0x8 ]
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
push ebx
lea ebx [ eax + 0x10c ]
mov eax edx
cdq
idiv [ ebx - 0x100 ]
mov ecx [ ebx ]
lea ebx [ ebx + 0x4 ]
mov edx eax
imul ecx edx
add edi ecx
dec esi
jne r-xdata
pop ebx
sub_44ac55
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x5
jne r-xdata
pop esi
leave
retn
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
cmp eax 0x1
jle r-xdata
dec eax
mov [ ecx ] eax
mov eax [ esi ]
push ebx
mov ebx [ eax ]
mov eax [ eax + 0x8 ]
push edi
xor ecx ecx
push 0x4
pop edi
mul edi
seto cl
mov [ ebp - 0x4 ] ebx
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ecx [ esi ]
push edi
mov [ ecx ] eax
call sub_42010a
pop ecx
pop ecx
mov ecx eax
test ecx ecx
je r-xdata
xor ecx ecx
mov [ ecx ] 0x1
jmp r-xdata
pop edi
pop ebx
cmp [ ebx + edi * 4 ] 0x0
je r-xdata
mov eax [ esi ]
xor edi edi
mov [ eax + 0x4 ] ecx
mov eax [ esi ]
cmp [ eax + 0x8 ] edi
jle r-xdata
mov eax [ eax ]
and [ eax + edi * 4 ] 0x0
push 0x10
call sub_42010a
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
xor ebx ebx
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + edi * 4 ]
and [ ebx + 0x8 ] 0x0
push ecx
mov ecx ebx
call sub_4113a0
jmp r-xdata
mov eax [ esi ]
inc edi
cmp edi [ eax + 0x8 ]
jl r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov [ eax + edi * 4 ] ebx
mov ebx [ ebp - 0x4 ]
jmp r-xdata
sub_44ad14
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412570
push 0x8
call sub_42010a
mov edx [ ebp + 0x8 ]
mov [ esi ] eax
pop ecx
mov [ eax ] edx
test edx edx
je r-xdata
push 0x1
call sub_42010a
pop ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
mov eax [ esi ]
push [ eax ]
call sub_42010a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
push [ eax ]
push 0x0
push [ eax + 0x4 ]
call sub_421970
add esp 0x10
jmp r-xdata
mov eax [ esi ]
mov [ esi + 0xc ] 0xb
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn 0x4
sub_44ad79
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
call sub_412570
push 0x14
call sub_42010a
mov esi eax
xor edi edi
pop ecx
test esi esi
je r-xdata
mov esi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0xc ] 0xc
mov [ ebx ] esi
mov edi esi
test esi esi
je r-xdata
mov eax [ ebp + 0x10 ]
sub esp 0x10
mov ecx esp
push [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x1c ]
mov ecx esi
inc [ eax ]
call sub_448c32
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
test eax eax
je r-xdata
lea ecx [ ebp + 0x10 ]
call sub_405cd3
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
push ecx
mov ecx esi
call sub_43a56f
jmp r-xdata
sub_44ae06
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp eax 0xb
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
dec eax
cmp eax 0x9
ja r-xdata
push 0x1
xor ebx ebx
call sub_42010a
mov edi eax
mov [ edi ] bl
jmp [ eax * 4 + jump_table_44af3e ]
mov edx [ esi + 0x8 ]
mov [ ebp - 0x4 ] edx
call sub_40d093
test al al
je r-xdata
mov eax [ esi ]
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
push 0x8
mov [ ebp - 0xc ] eax
jmp r-xdata
fld [ esi ]
push 0x8
fstp [ ebp - 0x10 ]
jmp r-xdata
mov al [ esi ]
xor ebx ebx
inc ebx
mov [ ebp - 0x10 ] al
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_41e3cc
mov ebx [ edx + 0x4 ]
test ebx ebx
jne r-xdata
mov ebx [ edx + 0x4 ]
sub ebx 0x2
sar ebx 0x1
push ebx
call sub_42010a
mov edi eax
mov eax [ ebp - 0x4 ]
pop ecx
mov ecx [ eax ]
mov edx edi
lea ecx [ ecx + 0x4 ]
call sub_44882c
test al al
jne r-xdata
mov [ ebp - 0x10 ] eax
push 0x4
pop ebx
push ebx
call sub_42010a
mov edi eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_41faa0
add esp 0x10
jmp r-xdata
push 0x8
call sub_42010a
mov [ esi ] eax
mov [ eax ] ebx
pop ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] edi
mov ecx esi
call sub_44b00a
mov [ esi + 0xc ] 0xb
push ebx
call sub_42010a
pop ecx
push ebx
lea ecx [ ebp - 0x20 ]
mov edi eax
call sub_44a65e
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_41f26b
push ebx
push [ ebp - 0x20 ]
push edi
call sub_41faa0
add esp 0xc
lea ecx [ ebp - 0x20 ]
call sub_405cd3
jmp r-xdata
push 0x1
call sub_42010a
mov edi eax
mov [ edi ] bl
jmp r-xdata
push edi
call j_sub_4228ca#2
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
sub_44af66
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
jle r-xdata
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x3
jle r-xdata
call sub_41f833
cmp eax 0x4
je r-xdata
mov ecx edi
call sub_4084a6
push [ edi + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_407b4b
cmp eax 0x7
je r-xdata
cmp eax 0x8
jle r-xdata
pop edi
cmp eax 0xa
jle r-xdata
cmp eax 0xb
jne r-xdata
cmp [ edi + 0xc ] eax
jne r-xdata
push edi
call sub_414265
jmp r-xdata
sub_44afce
push ebp
mov ebp esp
cmp [ ecx + 0xc ] 0xe
jne r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40caee
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
jmp r-xdata
pop ebp
retn 0x4
sub_44b020
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_412570
push 0x14
mov [ edi + 0xc ] 0xd
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_40d3d2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] esi
pop edi
mov [ esi + 0x10 ] eax
pop esi
pop ebp
retn 0x4
sub_44b05a
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx eax [ esi ]
mov edi ecx
test eax 0x2000
jne r-xdata
test eax 0x4000
je r-xdata
xor al al
jmp r-xdata
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
mov esi [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
call sub_40342c
movsx ecx [ esi ]
mov eax [ edi ]
and [ ebp + 0x8 ] 0x0
mov [ eax + 0x210 ] ecx
mov edx [ edi ]
push 0x4
cmp [ edx + 0x210 ] 0x0
pop ecx
mov [ ebp - 0x14 ] ecx
jle r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
push 0x0
push edi
call sub_403320
mov eax [ edi ]
pop ecx
mov eax [ eax + 0x8 ]
pop ecx
movzx ecx [ esi + 0x2 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
and eax 0xf00
cmp eax 0x100
je r-xdata
lea eax [ esi + 0x10 ]
mov ebx 0x10c
mov [ ebp - 0x18 ] eax
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
push esi
call [ SafeArrayAccessData@IAT ]
xor ebx ebx
inc ebx
test eax eax
js r-xdata
cmp eax 0x200
je r-xdata
mov eax [ esi ]
mov [ ebx + edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ edi ]
inc eax
add ebx ecx
mov [ ebp + 0x8 ] eax
lea esi [ esi + 0x8 ]
cmp eax [ edx + 0x210 ]
jl r-xdata
mov esi [ ebp - 0x10 ]
mov al bl
and [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov ecx edi
call sub_412570
jmp r-xdata
cmp eax 0x400
je r-xdata
push esi
call [ SafeArrayUnaccessData@IAT ]
mov esi [ ebp - 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
push esi
call [ SafeArrayAccessData@IAT ]
xor ebx ebx
inc ebx
test eax eax
js r-xdata
cmp eax 0x800
je r-xdata
xor ecx ecx
and [ ecx ] 0x0
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] ebx
jmp r-xdata
and [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
call [ SafeArrayAccessData@IAT ]
xor ebx ebx
inc ebx
test eax eax
js r-xdata
test cl cl
jns r-xdata
push 0x10
call sub_42010a
pop ecx
mov ecx eax
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ ebp - 0x18 ]
mov eax [ eax ]
push 0x8
mov [ eax + edx * 4 ] ecx
pop eax
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x24 ]
mov eax [ eax + edx * 4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ edi ]
mov ecx [ eax ]
mov ecx [ ecx + edx * 4 ]
call sub_44a6f6
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ SafeArrayGetVartype@IAT ]
mov cx [ ebp + 0x8 ]
movzx eax cx
xor ebx ebx
add eax 0xfffffffe
inc ebx
cmp eax 0x15
ja r-xdata
xor ecx ecx
and [ ecx ] 0x0
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] ebx
jmp r-xdata
and [ ebp - 0x14 ] 0x0
mov esi [ ebp - 0x8 ]
movzx eax cx
test eax 0x4000
je r-xdata
movzx eax [ eax + lookup_table_44b412 ]
jmp [ eax * 4 + jump_table_44b3fa ]
push 0x10
call sub_42010a
pop ecx
mov ecx eax
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ edi ]
mov edx [ ebp - 0x18 ]
mov eax [ eax ]
push 0x9
mov [ eax + edx * 4 ] ecx
pop eax
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x20 ]
lea eax [ eax + edx * 4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ edi ]
mov ecx [ eax ]
mov ecx [ ecx + edx * 4 ]
call sub_44a6f6
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp eax esi
jl r-xdata
xor ecx ecx
and [ ecx ] 0x0
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] ebx
jmp r-xdata
push 0x4
pop eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0xc ]
push eax
push esi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
mov [ ebp - 0x14 ] 0x8
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push esi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
push 0x10
call sub_42010a
pop ecx
mov ecx eax
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ edi ]
mov edx [ ebp - 0x18 ]
mov eax [ eax ]
mov [ eax + edx * 4 ] ecx
mov eax 0x400c
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ edi ]
mov ecx [ eax ]
mov ecx [ ecx + edx * 4 ]
call sub_44a6f6
mov eax [ ebp - 0x18 ]
add [ ebp - 0x14 ] 0x10
inc eax
mov [ ebp - 0x18 ] eax
cmp eax esi
jl r-xdata
and [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
mov ecx edi
push eax
call sub_44ad14
push eax
call sub_41faa0
add esp 0xc
push esi
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
jmp r-xdata
mov esi [ ebp - 0x14 ]
xor ecx ecx
and [ ecx ] 0x0
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] ebx
jmp r-xdata
mov eax edx
or ax cx
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
push esi
push [ ebp - 0xc ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x34 ] cx
call sub_41faa0
add esp 0xc
jmp r-xdata
mov eax [ edi ]
mov edx [ ebp - 0x18 ]
mov eax [ eax ]
mov [ eax + edx * 4 ] ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0x4000
test edx eax
je r-xdata
push 0x10
call sub_42010a
pop ecx
mov ecx eax
test ecx ecx
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov eax [ edi ]
mov ecx [ eax ]
mov eax [ ebp - 0x18 ]
mov ecx [ ecx + eax * 4 ]
call sub_44a6f6
mov eax [ ebp - 0x18 ]
add [ ebp - 0xc ] esi
inc eax
mov [ ebp - 0x18 ] eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
sub_44b428
push ebp
mov ebp esp
sub esp 0x98
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
movzx eax [ edi ]
cmp eax 0x24
jg r-xdata
sub eax 0x4002
cmp eax 0x15
ja r-xdata
je r-xdata
xor al al
jmp [ eax * 4 + jump_table_44b8ec ]
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
mov eax [ edi + 0xc ]
xor esi esi
push esi
lea edx [ ebp - 0x1c ]
push edx
push esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x2c ]
mov eax [ ebp - 0x1c ]
test eax 0x8000
je r-xdata
cmp eax 0x17
ja r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
xor esi esi
cmp [ edi + 0x8 ] esi
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
push 0xc
pop ecx
and eax 0xfff
push 0x14
sub eax ecx
je r-xdata
jmp [ eax * 4 + jump_table_44b88c ]
mov al 0x1
jmp r-xdata
push 0x10
mov [ ebx + 0xc ] 0x8
call sub_42010a
pop ecx
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ ebx ]
push 0x9
pop ecx
mov [ eax ] cx
mov eax [ edi + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax ]
mov [ ecx + 0x8 ] eax
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
movsx esi [ eax ]
jmp r-xdata
movzx esi [ eax ]
jmp r-xdata
movsx esi [ eax ]
jmp r-xdata
movzx esi [ eax ]
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov esi [ edi ]
mov edi [ edi + 0x4 ]
jmp r-xdata
fld [ eax ]
jmp r-xdata
fld [ eax ]
jmp r-xdata
push 0x10
call sub_42010a
pop ecx
test eax eax
je r-xdata
cmp [ eax ] 0x0
jmp r-xdata
push [ edi + 0x8 ]
call sub_44a6f6
jmp r-xdata
mov [ ebx + 0xc ] ecx
call sub_42010a
pop ecx
test eax eax
je r-xdata
dec eax
je r-xdata
push 0x10
mov [ ebx + 0xc ] 0x8
call sub_42010a
pop ecx
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
push edi
push [ ebx ]
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
movsx esi [ edi + 0x8 ]
movzx esi [ edi + 0x8 ]
jmp r-xdata
movsx esi [ edi + 0x8 ]
jmp r-xdata
movzx esi [ edi + 0x8 ]
jmp r-xdata
mov esi [ edi + 0x8 ]
jmp r-xdata
mov esi [ edi + 0x8 ]
mov edi [ edi + 0xc ]
fld [ edi + 0x8 ]
fld [ edi + 0x8 ]
jmp r-xdata
fild [ edi + 0x8 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fdiv [ r--data ]
jmp r-xdata
xor esi esi
cmp [ edi + 0x8 ] esi
je r-xdata
cmp [ edi + 0x8 ] 0x0
fld [ edi + 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
push ecx
push ecx
fstp [ esp ]
call [ VariantTimeToSystemTime@IAT ]
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x26 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x94 ]
push r--data
push eax
call sub_42234b
add esp 0x20
lea eax [ ebp - 0x94 ]
push eax
mov ecx ebx
mov esi edi
lea edi [ ebp - 0x74 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
push eax
lea eax [ ebp - 0x74 ]
push eax
movsd [ edi ] [ esi ]
call [ VarR8FromDec@IAT ]
mov ecx ebx
fld [ ebp - 0x34 ]
jmp r-xdata
push r--data
jmp r-xdata
sub esp 0x10
mov ecx esp
push r--data
call sub_40caee
push 0x0
push 0x2a
lea ecx [ ebp - 0x4c ]
call sub_4499d0
lea eax [ ebp - 0x4c ]
push eax
mov ecx ebx
call sub_44a689
lea ecx [ ebp - 0x44 ]
cmp [ edi + 0x8 ] 0x80020004
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ ecx ]
push ecx
call [ eax + 0x4 ]
jmp r-xdata
call sub_412570
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
jmp r-xdata
call sub_412570
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
jmp r-xdata
fstp [ ebp - 0xc ]
call sub_412570
fld [ ebp - 0xc ]
mov [ ebx + 0xc ] 0x3
fstp [ ebx ]
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] 0x4
jmp r-xdata
mov ecx [ edi + 0x8 ]
push [ ecx ]
jmp r-xdata
setne [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e387
jmp r-xdata
mov [ ebx ] esi
push [ ebp - 0x14 ]
mov ecx eax
call sub_448a89
mov [ ebx + 0xc ] 0xd
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
dec eax
je r-xdata
push [ ebx ]
call [ VariantClear@IAT ]
push [ ebx ]
call j_sub_4228ca#2
and [ ebx ] 0x0
pop ecx
push 0x10
call sub_42010a
pop ecx
test eax eax
je r-xdata
call sub_40ca8e
jmp r-xdata
sub esp 0x10
mov ecx esp
push r--data
call sub_40caee
push 0x0
push 0x29
lea ecx [ ebp - 0x64 ]
call sub_4499d0
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_44a689
lea ecx [ ebp - 0x5c ]
jmp r-xdata
mov ecx eax
call sub_40caee
mov esi eax
mov edi esi
mov ecx edi
call sub_40d3d2
jmp r-xdata
mov [ ebx + 0xc ] 0xe
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
mov [ ebx + 0xc ] 0xf
call sub_42010a
pop ecx
test eax eax
je r-xdata
push [ edi + 0x8 ]
call sub_405cd3
jmp r-xdata
push 0x1a
pop eax
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx ] edi
mov [ edi + 0x10 ] eax
jmp r-xdata
mov edi esi
mov ecx edi
call sub_40d3d2
jmp r-xdata
push [ ebp - 0x14 ]
mov ecx eax
call sub_444d76
jmp r-xdata
push [ ebp - 0x14 ]
mov ecx edi
mov [ ebx ] edi
call sub_407e53
push [ ebp - 0x14 ]
call [ SysFreeString@IAT ]
jmp r-xdata
mov esi eax
sub_44b944
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0xc ] 0x8
je r-xdata
xor al al
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0x8
je r-xdata
push 0x2a
pop ebx
push ebx
call sub_41d5f6
test al al
jne r-xdata
push ebx
mov ecx edi
call sub_41d5f6
test al al
je r-xdata
push ebx
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
push ebx
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
push 0xe
pop ebx
push ebx
mov ecx edi
call sub_40d2c0
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
push ebx
mov ecx edi
call sub_40d2c0
test al al
je r-xdata
push ebx
mov ecx esi
call sub_40d2c0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push ebx
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov edx esi
call sub_405b2a
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_44afce
mov esi eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_44afce
mov edx esi
mov ecx eax
call sub_405b2a
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405cd3
lea ecx [ ebp - 0x24 ]
call sub_405cd3
mov al bl
jmp r-xdata
sub_44ba33
push esi
mov esi ecx
call sub_412570
push 0x14
mov [ esi + 0xc ] 0xf
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_444da9
jmp r-xdata
mov [ esi ] eax
pop esi
retn
sub_44ba5d
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_412570
push 0x14
mov [ edi + 0xc ] 0xe
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_40d3d2
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx esi
mov [ edi ] esi
call sub_40c935
pop edi
pop esi
pop ebp
retn 0x4
sub_44ba9b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
and [ ebx ] 0x0
and [ ebx + 0x8 ] 0x0
push edi
mov edi ecx
lea ecx [ ebp + 0xc ]
mov [ ebx + 0xc ] 0x1
call sub_44bd6a
mov ecx edi
mov esi eax
call sub_44bd6a
mov edx 0x40060
mov [ ebp + 0x8 ] eax
test edx esi
je r-xdata
mov ecx 0x701f8
test edx eax
je r-xdata
mov ecx ebx
call sub_412570
fld1
mov [ ebx + 0xc ] 0x3
jmp r-xdata
mov edx 0x204
test edx esi
je r-xdata
test ecx esi
je r-xdata
fstp [ ebx ]
jmp r-xdata
test edx eax
je r-xdata
test ecx eax
je r-xdata
mov ecx ebx
test esi 0x100000
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_412570
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x14
test eax 0x10038
je r-xdata
test ecx esi
je r-xdata
mov ecx edi
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_423d90
fld1
pop ecx
fcom st1
pop ecx
mov ecx ebx
fnstsw ax
test ah 0x41
jne r-xdata
test esi 0x10038
test esi 0x10000
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_412620
push ecx
push ecx
mov ecx edi
fstp [ esp ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_423e50
add esp 0x10
fstp [ ebp - 0x8 ]
mov ecx ebx
call sub_412570
fld [ ebp - 0x8 ]
mov [ ebx + 0xc ] 0x3
test esi 0xffff0000
je r-xdata
mov ecx ebx
test eax 0x200
jne r-xdata
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
test esi 0x200
fstp st0
fld [ rw-data ]
call sub_412570
fldz
mov [ ebx + 0xc ] 0x3
jmp r-xdata
call sub_412570
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebx ]
push 0x3
pop edi
mov [ ebx + 0xc ] edi
test al 0x20
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
call sub_412570
mov eax [ ebp + 0x8 ]
fld [ ebp - 0x8 ]
push 0x3
fstp [ ebx ]
pop edi
mov [ ebx + 0xc ] edi
test al 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
movzx eax ax
test eax eax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_412620
push ecx
push ecx
mov ecx edi
fstp [ esp ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_423d90
fstp [ esp ]
call sub_423e50
add esp 0x10
fstp [ ebp - 0x8 ]
mov ecx ebx
call sub_412570
fld [ ebp - 0x8 ]
push 0x3
fstp [ ebx ]
pop edi
mov [ ebx + 0xc ] edi
test esi 0x100000
je r-xdata
test esi 0x10038
jmp r-xdata
test esi 0x100000
je r-xdata
fld [ rw-data ]
fmul [ r--data ]
jmp r-xdata
test esi 0x200
jmp r-xdata
mov ecx ebx
call sub_412570
mov [ ebx + 0xc ] edi
fld [ rw-data ]
mov ecx ebx
fchs
fstp [ ebp - 0x8 ]
call sub_412570
mov [ ebx + 0xc ] edi
jmp r-xdata
test si si
jne r-xdata
mov ecx ebx
call sub_44bd6a
test eax 0xffff0000
je r-xdata
mov ecx ebx
call sub_412620
fchs
mov ecx ebx
fstp [ ebp - 0x8 ]
call sub_412570
fld [ ebp - 0x8 ]
mov [ ebx + 0xc ] edi
jmp r-xdata
jne r-xdata
test esi 0x10000
je r-xdata
fstp [ ebp - 0x8 ]
call sub_412570
mov [ ebx + 0xc ] 0x3
jne r-xdata
fld [ ebp - 0x8 ]
mov ecx ebx
call sub_412620
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
fstp [ ebx ]
fld [ rw-data ]
fchs
jmp r-xdata
call sub_412570
mov [ ebx + 0xc ] 0x3
jmp r-xdata
mov ecx ebx
call sub_412620
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ r--data ]
jmp r-xdata
mov ecx ebx
call sub_40d00b
mov ecx ebx
mov esi eax
mov edi edx
call sub_412570
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
sub_44bd6a
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0xc ] 0x3
jne r-xdata
cmp [ edi + 0xc ] 0x1
jne r-xdata
fld [ edi ]
push ecx
push ecx
fstp [ esp ]
call sub_423cea
mov esi eax
pop ecx
pop ecx
test esi 0x1f8
je r-xdata
cmp [ edi + 0xc ] 0x2
jne r-xdata
mov eax [ edi ]
cdq
mov ecx eax
jmp r-xdata
pop edi
mov eax esi
pop esi
leave
retn
fld [ edi ]
call sub_471e16
mov ecx eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fld [ edi ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov eax ecx
or eax edx
je r-xdata
jmp r-xdata
or esi 0x40000
mov eax ecx
and eax 0x1
or eax 0x0
je r-xdata
or esi 0x200000
or esi 0x100000
jmp r-xdata
or esi 0x20000
jmp r-xdata
jl r-xdata
test edx edx
jg r-xdata
or esi 0x10000
jmp r-xdata
test ecx ecx
jae r-xdata
sub_44be14
cmp [ ecx + 0xc ] 0x8
jne r-xdata
xor al al
retn
mov eax [ ecx ]
test eax eax
je r-xdata
movzx ecx [ eax ]
cmp ecx 0x9
jne r-xdata
cmp ecx 0xd
je r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44be63
mov eax [ ecx + 0xc ]
test eax eax
jle r-xdata
xor eax eax
retn
cmp eax 0x4
jle r-xdata
jmp sub_40d00b
cmp eax 0x7
je r-xdata
mov eax [ ecx ]
retn
cmp eax 0x8
jne r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
retn
sub_44be8a
mov eax [ ecx + 0xc ]
cmp eax 0x7
jg r-xdata
sub eax 0x9
je r-xdata
je r-xdata
xor eax eax
inc eax
retn
dec eax
dec eax
je r-xdata
push 0x4
dec eax
je r-xdata
mov eax [ ecx ]
mov eax [ eax ]
retn
dec eax
je r-xdata
dec eax
je r-xdata
mov eax [ ecx ]
mov eax [ eax + 0xc ]
retn
xor eax eax
retn
push 0x8
jmp r-xdata
dec eax
je r-xdata
pop eax
retn
dec eax
jne r-xdata
mov eax [ ecx + 0x8 ]
mov eax [ eax + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
retn
sub_44bed4
dec [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
add eax 0x4
mov [ rw-data ] eax
mov eax ecx
shr eax 0xb
xor ecx eax
mov eax ecx
and eax 0xff3a58ad
shl eax 0x7
xor ecx eax
mov eax ecx
and eax 0xffffdf8c
shl eax 0xf
xor ecx eax
mov eax ecx
shr eax 0x12
xor eax ecx
shr eax 0x1
retn
call sub_44bfb8
sub_44bf19
push ebp
mov ebp esp
push ecx
push ecx
dec [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
add eax 0x4
mov [ rw-data ] eax
mov eax ecx
shr eax 0xb
xor ecx eax
mov eax ecx
and eax 0xff3a58ad
shl eax 0x7
xor ecx eax
mov eax ecx
and eax 0xffffdf8c
shl eax 0xf
xor ecx eax
mov eax ecx
shr eax 0x12
xor eax ecx
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
jns r-xdata
call sub_44bfb8
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
leave
retn
fadd [ r--data ]
sub_44bf7c
push esi
xor esi esi
inc esi
mov [ rw-data ] ecx
mov edx esi
mov ecx rw-data
mov eax [ ecx ]
shr eax 0x1e
xor eax [ ecx ]
add ecx 0x4
imul eax eax 0x6c078965
add eax edx
mov [ ecx ] eax
inc edx
cmp ecx rw-data
jl r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
pop esi
retn
sub_44bfb8
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov esi rw-data
jne r-xdata
mov [ rw-data ] 0x270
mov [ rw-data ] esi
mov edi 0xe3
mov ebx 0x9908b0df
push 0x0
call sub_4240da
pop ecx
mov ecx eax
call sub_44bf7c
lea edx [ esi + 0x4 ]
mov al [ edx ]
and al 0x1
movzx ecx al
mov eax [ esi ]
neg ecx
sbb ecx ecx
xor eax [ edx ]
and ecx ebx
and eax 0x7ffffffe
xor eax [ esi ]
shr eax 0x1
xor eax [ esi + 0x634 ]
xor eax ecx
mov [ esi ] eax
mov esi edx
dec edi
jne r-xdata
mov edi 0x18c
lea edx [ esi + 0x4 ]
mov al [ edx ]
and al 0x1
movzx ecx al
mov eax [ esi ]
neg ecx
sbb ecx ecx
xor eax [ edx ]
and ecx ebx
and eax 0x7ffffffe
xor eax [ esi ]
shr eax 0x1
xor eax [ esi - 0x38c ]
xor eax ecx
mov [ esi ] eax
lea esi [ edx ]
dec edi
jne r-xdata
mov ecx [ rw-data ]
mov al cl
and al 0x1
movzx edx al
mov eax [ esi ]
neg edx
sbb edx edx
xor eax ecx
and eax 0x7ffffffe
xor eax [ esi ]
and edx ebx
shr eax 0x1
xor eax [ esi - 0x38c ]
pop edi
xor eax edx
mov [ esi ] eax
pop esi
pop ebx
retn
sub_44c07d
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
leave
retn 0x8
push ebx
movzx ebx [ ecx ]
push esi
movzx esi [ ecx + 0x2 ]
jle r-xdata
shl esi 0x10
add esi ebx
mov [ ecx ] esi
pop esi
pop ebx
xor ecx ecx
mov eax [ ebp + 0x8 ]
xor edx edx
movzx eax [ ecx + eax ]
add eax ebx
mov ebx 0xfff1
div ebx
mov ebx edx
xor edx edx
lea eax [ esi + ebx ]
mov esi 0xfff1
div esi
inc ecx
mov esi edx
cmp ecx edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
sub_44c0d1
push ebx
push esi
push edi
push 0x20000
mov edi ecx
call sub_4245ec
mov esi eax
mov [ edi + 0x438 ] esi
mov [ esp ] 0x10000
call sub_4245ec
mov ebx eax
mov [ edi + 0x45c ] ebx
mov [ esp ] 0x10000
call sub_4245ec
pop ecx
mov [ edi + 0x458 ] eax
test esi esi
je r-xdata
mov ecx edi
call sub_44c450
push 0x5
pop eax
test ebx ebx
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c12d
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
mov [ esi + 0x44e ] ax
shl [ esi + 0x44c ] 0x1
dec [ esi + 0x450 ]
mov eax [ esi + 0x44c ]
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
dec edi
cmp [ esi + 0x450 ] 0x0
jne r-xdata
pop edi
shr eax 0x10
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_44c5e0
movzx eax al
shl eax 0x8
or [ esi + 0x44c ] eax
mov ecx esi
call sub_44c5e0
movzx eax al
or [ esi + 0x44c ] eax
add [ esi + 0xc ] 0x2
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x4 ]
movzx eax [ edx + ecx ]
shl eax 0x8
or [ esi + 0x44c ] eax
inc ecx
mov [ esi + 0xc ] ecx
movzx eax [ ecx + edx ]
or [ esi + 0x44c ] eax
lea eax [ ecx + 0x1 ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov [ esi + 0x450 ] 0x10
sub_44c1c9
push esi
push edi
push 0x2
mov edi ecx
xor esi esi
call sub_44c12d
cmp eax 0x3
jne r-xdata
add esi 0x3
pop edi
add eax esi
pop esi
retn
push eax
pop esi
push eax
mov ecx edi
call sub_44c12d
cmp eax 0x7
jne r-xdata
push 0xa
pop esi
push 0x5
mov ecx edi
call sub_44c12d
cmp eax 0x1f
jne r-xdata
push ebx
push 0x29
pop esi
push 0x8
mov ecx edi
call sub_44c12d
mov ebx 0xff
cmp eax ebx
jne r-xdata
pop ebx
lea esi [ ebx + 0x29 ]
jmp r-xdata
push 0x8
mov ecx edi
call sub_44c12d
cmp eax ebx
je r-xdata
add esi ebx
sub_44c22e
push ebp
mov ebp esp
push esi
push 0xf
mov esi ecx
call sub_44c12d
mov edx [ ebp + 0x8 ]
mov ecx esi
mov [ edx ] eax
call sub_44c1c9
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] eax
pop ebp
retn 0x8
sub_44c251
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jne r-xdata
mov [ esi + 0x1c ] ebx
lea eax [ esi + 0x24 ]
push r--data
push eax
call sub_424129
pop ecx
pop ecx
mov [ esi + 0x1c ] eax
test eax eax
jne r-xdata
mov [ esi + 0x20 ] ebx
lea eax [ esi + 0x22e ]
push r--data
push eax
call sub_424129
pop ecx
pop ecx
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push 0x2
push edi
mov ecx esi
call sub_44c0d1
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
lea eax [ esi + 0x10 ]
push eax
mov ecx esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x43c ] ebx
mov [ esi + 0x440 ] ebx
mov [ esi + 0x444 ] ebx
mov [ esi + 0x44c ] ebx
mov [ esi + 0x450 ] ebx
mov [ esi + 0x448 ] bl
mov [ esi + 0x460 ] ebx
mov [ esi + 0x464 ] ebx
call sub_44c4d4
test eax eax
je r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
call sub_44c376
mov ecx esi
call sub_44c450
cmp [ esi + 0x1c ] ebx
je r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
cmp [ esi + 0x20 ] ebx
je r-xdata
push [ esi + 0x1c ]
call sub_424274
pop ecx
push 0x3
jmp r-xdata
push [ esi + 0x1c ]
call sub_424274
pop ecx
cmp [ esi + 0x20 ] ebx
je r-xdata
push [ esi + 0x1c ]
call sub_424274
pop ecx
cmp [ esi + 0x20 ] ebx
je r-xdata
push [ esi + 0x1c ]
call sub_424274
pop ecx
xor eax eax
inc eax
jmp r-xdata
push [ esi + 0x20 ]
call sub_424274
pop ecx
pop eax
jmp r-xdata
xor eax eax
push [ esi + 0x20 ]
call sub_424274
pop ecx
mov eax edi
jmp r-xdata
push [ esi + 0x20 ]
call sub_424274
pop ecx
pop edi
sub_44c376
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ esi + 0x43c ] edi
jb r-xdata
push 0x1
mov ecx esi
call sub_44c12d
mov ecx esi
cmp eax 0x1
jne r-xdata
mov ecx esi
call sub_44c676
xor eax eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_44c22e
mov ebx [ esi + 0x43c ]
sub ebx [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x8
call sub_44c12d
mov edx [ esi + 0x43c ]
mov ecx [ esi + 0x438 ]
and edx 0x1ffff
mov [ edx + ecx ] al
inc [ esi + 0x43c ]
inc [ esi + 0x440 ]
jmp r-xdata
mov ecx esi
call sub_44c553
mov ecx esi
call sub_44c488
cmp [ esi + 0x448 ] 0x0
jne r-xdata
mov edi [ ebp - 0x4 ]
push 0x4
pop eax
jmp r-xdata
mov ecx [ esi + 0x43c ]
mov edx [ esi + 0x438 ]
mov eax ebx
and eax 0x1ffff
and ecx 0x1ffff
mov al [ eax + edx ]
inc ebx
mov [ ecx + edx ] al
inc [ esi + 0x43c ]
inc [ esi + 0x440 ]
dec edi
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
sub_44c450
push esi
mov esi ecx
mov eax [ esi + 0x438 ]
test eax eax
je r-xdata
mov eax [ esi + 0x45c ]
test eax eax
je r-xdata
push eax
call sub_4228ca
pop ecx
mov eax [ esi + 0x458 ]
pop esi
test eax eax
je r-xdata
push eax
call sub_4228ca
pop ecx
retn
push eax
call sub_4228ca
pop ecx
sub_44c488
mov eax [ rw-data ]
push esi
mov esi ecx
cmp eax 0x1000
jbe r-xdata
inc eax
mov [ rw-data ] eax
mov ecx [ esi + 0x454 ]
and [ rw-data ] 0x0
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
imul eax eax 0x64
xor edx edx
div [ esi + 0x10 ]
push eax
push [ esi + 0x8 ]
push [ esi + 0xc ]
call ecx
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x448 ] 0x1
pop esi
retn
sub_44c4d4
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x1
jne r-xdata
push [ esi + 0x1c ]
lea eax [ ebp - 0x8 ]
push 0x8
push 0x1
push eax
call sub_4244ae
add esp 0x10
mov eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push 0x8
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41faa0
add esp 0xc
jmp r-xdata
movzx ecx [ ebp - 0x4 ]
movzx eax [ ebp - 0x3 ]
add [ esi + 0xc ] 0x8
shl ecx 0x8
or ecx eax
movzx eax [ ebp - 0x2 ]
shl ecx 0x8
or ecx eax
movzx eax [ ebp - 0x1 ]
shl ecx 0x8
or ecx eax
mov eax [ ebp + 0x8 ]
push r--data
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_424560
pop ecx
neg eax
pop ecx
sbb eax eax
neg eax
pop esi
leave
retn 0x4
sub_44c553
push edi
mov edi ecx
cmp [ edi + 0x18 ] 0x1
mov eax [ edi + 0x444 ]
jne r-xdata
cmp eax [ edi + 0x43c ]
jb r-xdata
cmp eax [ edi + 0x43c ]
jae r-xdata
mov ecx [ edi + 0x444 ]
mov eax [ edi + 0x438 ]
and ecx 0x1ffff
movzx eax [ ecx + eax ]
push eax
mov ecx edi
call sub_44c629
inc [ edi + 0x444 ]
mov eax [ edi + 0x444 ]
inc [ edi + 0x8 ]
and [ edi + 0x440 ] 0x0
pop edi
retn
push esi
mov esi [ edi + 0x444 ]
mov eax [ edi + 0x438 ]
mov ecx [ edi + 0x8 ]
mov edx [ edi ]
and esi 0x1ffff
mov al [ esi + eax ]
mov [ edx + ecx ] al
inc [ edi + 0x8 ]
inc [ edi + 0x444 ]
mov eax [ edi + 0x444 ]
cmp eax [ edi + 0x43c ]
jb r-xdata
pop esi
jmp r-xdata
sub_44c5e0
push esi
mov esi ecx
mov ecx 0x10000
mov eax [ esi + 0x464 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
push ecx
push 0x1
push [ esi + 0x45c ]
call sub_4244ae
add esp 0x10
and [ esi + 0x464 ] 0x0
cmp eax ecx
jne r-xdata
mov ecx [ esi + 0x464 ]
mov eax [ esi + 0x45c ]
mov al [ ecx + eax ]
inc ecx
mov [ esi + 0x464 ] ecx
pop esi
retn
sub_44c629
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov edx [ edi + 0x460 ]
mov esi [ edi + 0x458 ]
mov [ esi + edx ] al
inc [ edi + 0x460 ]
mov eax 0x10000
cmp [ edi + 0x460 ] eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push [ edi + 0x20 ]
push eax
push 0x1
push [ edi + 0x458 ]
call sub_42373e
add esp 0x10
and [ edi + 0x460 ] 0x0
sub_44c676
push esi
mov esi ecx
mov eax [ esi + 0x460 ]
test eax eax
je r-xdata
pop esi
retn
push [ esi + 0x20 ]
push eax
push 0x1
push [ esi + 0x458 ]
call sub_42373e
add esp 0x10
and [ esi + 0x460 ] 0x0
sub_44c6a0
push ebp
mov ebp esp
push ecx
push ecx
push esi
push 0x0
mov esi ecx
call sub_4240da
pop ecx
push eax
mov ecx esi
call sub_44c6e4
fld1
mov ecx 0x3ff00000
fstp [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
cmp [ ebp - 0x8 ] ecx
setne al
inc eax
mov [ esi + 0xd4 ] eax
and [ esi + 0xd4 ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_44c6e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
movzx ecx [ ebp + 0x8 ]
lea edi [ esi + 0x8 ]
push 0x11
mov edx edi
pop ebx
mov eax ecx
imul eax eax 0x53a9b4fb
xor ecx ecx
inc ecx
sub ecx eax
mov [ edx ] ecx
lea edx [ edx + 0x4 ]
dec ebx
jne r-xdata
and [ esi ] ebx
push 0x44
lea eax [ esi + 0x4c ]
push edi
push eax
mov [ esi + 0x4 ] 0xa
call sub_41faa0
push 0x44
lea eax [ esi + 0x90 ]
push edi
push eax
call sub_41faa0
add esp 0x18
push 0x9
pop edi
mov ecx esi
call sub_44c74a
fstp st0
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44c74a
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi ecx
push 0x9
mov eax [ edi ]
push [ edi + eax * 4 + 0x8 ]
call sub_42467e
mov ecx [ edi + 0x4 ]
push 0xd
push [ edi + ecx * 4 + 0x8 ]
mov esi eax
call sub_42467e
add esi eax
mov eax [ edi ]
add esp 0x10
mov [ edi + eax * 4 + 0x8 ] esi
dec [ edi ]
push 0x10
pop eax
jns r-xdata
dec [ edi + 0x4 ]
jns r-xdata
mov [ edi ] eax
mov ecx [ edi ]
mov eax [ edi + ecx * 4 + 0x8 ]
cmp eax [ edi + 0x4c ]
jne r-xdata
mov [ edi + 0x4 ] eax
mov eax [ edi + 0xd4 ]
sub eax 0x0
je r-xdata
push 0x44
push 0x24
pop eax
sub eax ecx
lea eax [ edi + eax * 4 ]
push eax
lea eax [ edi + 0x8 ]
push eax
call sub_420183
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
shl eax 0x14
shr esi 0xc
or esi 0x3ff00000
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] esi
dec eax
je r-xdata
fldz
jmp r-xdata
mov eax esi
shl eax 0x14
shr esi 0xc
or esi 0x3ff00000
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov [ ebp - 0x4 ] esi
fild [ ebp - 0x4 ]
test esi esi
jns r-xdata
pop edi
pop esi
leave
retn
fld [ ebp - 0x8 ]
fsub [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
sub_44c81a
push esi
mov esi ecx
call sub_44c74a
fstp st0
mov ecx esi
call sub_44c74a
fmul [ r--data ]
call sub_471de0
pop esi
cmp eax 0x100
jl r-xdata
retn 0x8
mov eax 0xff
sub_44c846
push ebp
mov ebp esp
sub esp 0xdc
lea ecx [ ebp - 0xdc ]
push esi
push edi
call sub_44c6a0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0xdc ]
call sub_44c6e4
xor esi esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
pop edi
pop esi
leave
retn 0xc
mov edi [ ebp + 0x8 ]
push ecx
push ecx
lea ecx [ ebp - 0xdc ]
call sub_44c81a
xor [ esi + edi ] al
inc esi
cmp esi [ ebp + 0xc ]
jb r-xdata
sub_44c890
push ebp
mov ebp esp
mov eax 0x11d0
call sub_430650
push ebx
push esi
push edi
xor edi edi
xor eax eax
mov ebx ecx
push 0x10000
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x4ac ] edi
mov [ ebp - 0x4a8 ] edi
mov [ ebp - 0x4a4 ] edi
mov [ ebp - 0x4a0 ] edi
mov [ ebp - 0x49c ] edi
mov [ ebp - 0x498 ] edi
mov [ ebp - 0x494 ] edi
mov [ ebp - 0x490 ] edi
mov [ ebp - 0x48c ] edi
mov [ ebp - 0x488 ] ax
mov [ ebp - 0x27e ] ax
mov [ ebp - 0x58 ] edi
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_404bce
lea ecx [ ebp - 0x794 ]
call sub_44c6a0
push edi
push [ ebx + 0x4 ]
xor esi esi
push [ ebx ]
inc esi
mov ecx ebx
mov [ ebp - 0x1c ] esi
call sub_4041a7
push r--data
push [ ebp + 0x8 ]
call sub_422203
pop ecx
pop ecx
push ecx
test eax eax
lea eax [ ebp - 0xdbc ]
push eax
push [ ebp + 0x8 ]
mov ecx ebx
jne r-xdata
call sub_44ce59
test eax eax
je r-xdata
call sub_44ce59
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x6
jmp r-xdata
lea eax [ ebp - 0xbac ]
push eax
lea eax [ ebp - 0x11cc ]
push eax
lea eax [ ebp - 0xfc4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0xc ]
call sub_42297d
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x9a4 ]
push eax
call sub_421943
lea eax [ ebp - 0xfc4 ]
push eax
lea eax [ ebp - 0x9a4 ]
push eax
call sub_421914
lea eax [ ebp - 0xbac ]
push eax
lea eax [ ebp - 0x11cc ]
push eax
lea eax [ ebp - 0xfc4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0xdbc ]
push eax
call sub_42297d
add esp 0x24
lea eax [ ebp - 0x11cc ]
push eax
lea eax [ ebp - 0x9a4 ]
push eax
call sub_421914
lea eax [ ebp - 0xbac ]
push eax
lea eax [ ebp - 0x9a4 ]
push eax
call sub_421914
add esp 0x10
lea eax [ ebp - 0x9a4 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x2477
push eax
lea ecx [ ebp - 0x794 ]
call sub_44c6e4
mov edx [ ebp - 0x20 ]
mov ecx edi
test edx edx
jle r-xdata
push 0x9
jmp r-xdata
pop edi
jmp r-xdata
push [ ebx ]
mov [ ebp + 0xc ] eax
push esi
push esi
lea eax [ ebp - 0x5 ]
push eax
mov ecx ebx
call sub_40417d
push [ ebx ]
lea eax [ ebp - 0xc ]
push esi
push 0x4
push eax
mov ecx ebx
call sub_40417d
push [ ebx ]
mov eax [ ebp - 0xc ]
xor eax 0x87bc
push esi
mov [ ebp - 0x20 ] eax
push 0x4
lea eax [ ebp - 0xc ]
push eax
mov ecx ebx
call sub_40417d
push [ ebx ]
lea eax [ ebp - 0xc ]
push esi
push 0x4
push eax
mov ecx ebx
call sub_40417d
push [ ebx ]
mov eax [ ebp - 0xc ]
xor eax 0xa685
push esi
mov [ ebp - 0x24 ] eax
push 0x4
lea eax [ ebp - 0x38 ]
push eax
mov ecx ebx
call sub_40417d
push [ ebx ]
lea eax [ ebp - 0x3c ]
push esi
push 0x4
push eax
mov ecx ebx
call sub_40417d
push [ ebx ]
lea eax [ ebp - 0x40 ]
push esi
push 0x4
push eax
mov ecx ebx
call sub_40417d
push [ ebx ]
lea eax [ ebp - 0x44 ]
push esi
push 0x4
push eax
mov ecx ebx
call sub_40417d
lea eax [ ebp - 0x6bc ]
push eax
call sub_44d009
lea eax [ ebp - 0x6bc ]
push r--data
push eax
call sub_424129
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
push [ ebp - 0x18 ]
call sub_424274
pop ecx
cmp [ ebp - 0x24 ] esi
je r-xdata
lea eax [ ecx + 0x10000 ]
cmp eax edx
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_404fd2
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
lea eax [ ebp - 0x6bc ]
push eax
call [ DeleteFileW@IAT ]
push 0xa
jmp r-xdata
mov eax 0x10000
mov eax edx
sub eax ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
push edi
push esi
lea eax [ ebp - 0x6bc ]
push eax
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x488 ] ax
mov [ ebp - 0x27e ] ax
lea eax [ ebp - 0x6bc ]
push eax
lea ecx [ ebp - 0x4ac ]
mov [ ebp - 0x4ac ] edi
mov [ ebp - 0x4a8 ] edi
mov [ ebp - 0x4a4 ] edi
mov [ ebp - 0x4a0 ] edi
mov [ ebp - 0x49c ] edi
mov [ ebp - 0x490 ] edi
mov [ ebp - 0x48c ] edi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x498 ] edi
mov [ ebp - 0x494 ] edi
call sub_44d10c
mov esi [ ebp + 0xc ]
push esi
lea ecx [ ebp - 0x4ac ]
call sub_44d134
lea ecx [ ebp - 0x4ac ]
call sub_44c251
test eax eax
je r-xdata
push eax
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
call sub_44c07d
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
push esi
push [ ebp - 0x14 ]
call sub_42373e
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
add esp 0x10
cmp ecx edx
jl r-xdata
mov ebx [ ebp - 0x14 ]
mov esi [ ebp - 0x30 ]
mov edi eax
push [ ebx ]
add ecx eax
push eax
push esi
push [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ecx
mov ecx ebx
mov [ ebp + 0x8 ] eax
call sub_40417d
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] edi
test eax eax
jle r-xdata
lea eax [ ebp - 0x6bc ]
push eax
call [ DeleteFileW@IAT ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_44cfc8
lea eax [ ebp - 0x6bc ]
push eax
call [ DeleteFileW@IAT ]
push 0x7
lea eax [ ebp - 0x6bc ]
push eax
call [ DeleteFileW@IAT ]
push 0xb
jmp r-xdata
mov esi [ ebp - 0x1c ]
push ecx
push ecx
lea ecx [ ebp - 0x794 ]
call sub_44c81a
xor [ ebx + esi ] al
inc esi
cmp esi edi
jl r-xdata
mov ebx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
xor esi esi
inc esi
xor edi edi
sub_44cc82
push ebp
mov ebp esp
sub esp 0x690
push ebx
push esi
push edi
mov edi ecx
xor ecx ecx
push ecx
push [ edi + 0x4 ]
xor eax eax
push [ edi ]
xor ebx ebx
mov [ ebp - 0x47c ] ecx
mov [ ebp - 0x478 ] ecx
mov [ ebp - 0x474 ] ecx
mov [ ebp - 0x470 ] ecx
mov [ ebp - 0x46c ] ecx
mov [ ebp - 0x468 ] ecx
mov [ ebp - 0x464 ] ecx
mov [ ebp - 0x460 ] ecx
mov [ ebp - 0x45c ] ecx
mov [ ebp - 0x28 ] ecx
inc ebx
mov ecx edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x458 ] ax
mov [ ebp - 0x24e ] ax
mov [ ebp - 0x14 ] ebx
call sub_4041a7
push ecx
lea eax [ ebp - 0x68c ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call sub_44ce59
test eax eax
je r-xdata
push [ edi ]
lea eax [ ebp - 0x5 ]
push ebx
push ebx
push eax
mov ecx edi
call sub_40417d
push [ edi ]
lea eax [ ebp - 0xc ]
push ebx
push 0x4
push eax
mov ecx edi
call sub_40417d
push [ edi ]
mov ebx [ ebp - 0xc ]
push 0x1
push 0x4
lea eax [ ebp - 0xc ]
mov esi 0x87bc
push eax
mov ecx edi
xor ebx esi
call sub_40417d
mov eax [ ebp - 0xc ]
push [ edi ]
xor eax esi
mov esi [ ebp + 0x10 ]
push 0x1
mov [ esi ] eax
push 0x4
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
call sub_40417d
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
push 0x1
push 0x10
push [ ecx ]
xor edi 0xa685
call sub_4041a7
push [ esi ]
call sub_4245ec
pop ecx
push ebx
mov [ ebp + 0x8 ] eax
call sub_4245ec
mov esi [ ebp - 0x10 ]
pop ecx
push [ esi ]
mov ecx esi
push 0x1
push ebx
push eax
mov [ ebp + 0x10 ] eax
call sub_40417d
mov ecx [ esi + 0x8 ]
add ecx 0x2477
push ecx
push ebx
push [ ebp + 0x10 ]
call sub_44c846
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
lea ecx [ ebp - 0x14 ]
call sub_44c07d
mov esi [ ebp + 0x8 ]
cmp edi [ ebp - 0x14 ]
je r-xdata
push 0x6
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
push esi
call sub_4228ca
pop ecx
push ebx
call sub_4228ca
pop ecx
push 0xa
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push esi
call sub_4228ca
mov esi ebx
xor ecx ecx
xor eax eax
mov [ ebp - 0x458 ] ax
mov [ ebp - 0x24e ] ax
inc eax
mov [ ebp - 0x474 ] ecx
mov [ ebp - 0x470 ] ecx
mov [ ebp - 0x46c ] ecx
mov [ ebp - 0x460 ] ecx
mov [ ebp - 0x45c ] ecx
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x47c ]
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x464 ] eax
mov [ ebp - 0x478 ] ebx
mov [ ebp - 0x47c ] esi
call sub_44c251
push ebx
call sub_4228ca
jmp r-xdata
pop eax
jmp r-xdata
mov eax [ ebp + 0xc ]
pop ecx
mov [ eax ] esi
xor eax eax
sub_44ce59
push ebp
mov ebp esp
sub esp 0x228
push ebx
push esi
push edi
mov ebx ecx
xor esi esi
mov [ ebp - 0x1 ] 0x1
xor al al
mov [ ebp - 0x1 ] al
push [ ebx ]
lea eax [ ebp - 0x8 ]
push 0x1
push 0x4
inc esi
push eax
mov ecx ebx
mov [ ebp - 0x14 ] esi
call sub_40417d
mov esi [ ebp - 0x8 ]
push [ ebx ]
xor esi 0xadbc
lea eax [ ebp - 0x228 ]
lea edi [ esi + esi ]
push edi
push 0x1
push eax
mov ecx ebx
call sub_40417d
lea eax [ esi + 0xb33f ]
push eax
push edi
lea eax [ ebp - 0x228 ]
push eax
call sub_44c846
push [ ebx ]
xor eax eax
push 0x1
mov [ ebp + edi - 0x228 ] ax
push 0x4
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
call sub_40417d
mov esi [ ebp - 0x8 ]
push [ ebx ]
xor esi 0xf820
mov ecx ebx
lea edi [ esi + esi ]
push edi
push 0x1
push [ ebp + 0xc ]
call sub_40417d
lea eax [ esi + 0xf479 ]
mov esi [ ebp + 0xc ]
push eax
push edi
push esi
call sub_44c846
push [ ebp + 0x8 ]
xor eax eax
mov [ edi + esi ] ax
lea eax [ ebp - 0x228 ]
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx ]
lea eax [ ebp - 0x10 ]
push 0x4
push 0x1
push eax
mov ecx ebx
call sub_40417d
push 0x18ee
push 0x4
lea eax [ ebp - 0x10 ]
push eax
call sub_44c846
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0xc ] 0x0
call sub_424560
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x6
pop eax
xor eax eax
jmp r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_422203
mov esi [ ebp - 0x14 ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
xor edi edi
inc edi
push edi
push edi
push [ ebx ]
mov ecx ebx
call sub_4041a7
push [ ebx ]
lea eax [ ebp - 0x18 ]
push edi
push 0x4
push eax
mov ecx ebx
call sub_40417d
mov eax [ ebp - 0x18 ]
xor eax 0x87bc
mov [ ebp - 0x18 ] eax
push edi
add eax 0x18
push eax
push [ ebx ]
mov ecx ebx
call sub_4041a7
mov al [ ebp - 0x1 ]
jmp r-xdata
test esi esi
je r-xdata
cmp al 0x1
je r-xdata
sub_44cfc8
push ebp
mov ebp esp
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x40000000
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_44d009
push ebp
mov ebp esp
sub esp 0x20c
lea eax [ ebp - 0x20c ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20c ]
push 0x0
push r--data
push eax
call [ GetTempFileNameW@IAT ]
leave
retn 0x4
sub_44d03f
push ebp
mov ebp esp
sub esp 0x164
push ebx
push esi
push edi
xor edi edi
push edi
mov esi ecx
push edi
push [ esi ]
call sub_4041a7
push [ esi ]
xor ebx ebx
inc ebx
push ebx
push 0x40
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_40417d
push edi
push [ ebp - 0x44 ]
mov ecx esi
push [ esi ]
call sub_4041a7
push ebx
push 0x4
push [ esi ]
mov ecx esi
call sub_4041a7
push [ esi ]
lea eax [ ebp - 0x14 ]
push ebx
push 0x14
push eax
mov ecx esi
call sub_40417d
push [ esi ]
movzx edi [ ebp - 0x12 ]
push ebx
push 0x60
lea eax [ ebp - 0x160 ]
push eax
mov ecx esi
call sub_40417d
mov eax 0x20b
cmp [ ebp - 0x160 ] ax
jne r-xdata
push ebx
push 0x80
push [ esi ]
mov ecx esi
call sub_4041a7
imul edi edi 0x28
push ebx
sub edi 0x28
push edi
push [ esi ]
mov ecx esi
call sub_4041a7
push [ esi ]
lea eax [ ebp - 0x3c ]
push ebx
push 0x28
push eax
mov ecx esi
call sub_40417d
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x28 ]
push 0x0
push eax
push [ esi ]
mov ecx esi
call sub_4041a7
pop edi
pop esi
pop ebx
leave
retn
push ebx
push 0x10
push [ esi ]
mov ecx esi
call sub_4041a7
sub_44d10c
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x104
push [ ebp + 0x8 ]
lea eax [ esi + 0x24 ]
push eax
call sub_422c1d
add esp 0xc
xor eax eax
mov [ esi + 0x22c ] ax
pop esi
pop ebp
retn 0x4
sub_44d134
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x104
push [ ebp + 0x8 ]
lea eax [ esi + 0x22e ]
push eax
call sub_422c1d
add esp 0xc
xor eax eax
mov [ esi + 0x436 ] ax
pop esi
pop ebp
retn 0x4
sub_44d15f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
push 0x8
pop edx
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
xor ebx ebx
pop ecx
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] ebx
jbe r-xdata
mov edx eax
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
xor edi edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx * 4 ]
and [ edi + 0x8 ] 0x0
push ecx
mov ecx edi
call sub_4113a0
jmp r-xdata
push 0x10
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + ebx * 4 ] edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
sub_44d1ed
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x10
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
xor edx edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
jmp r-xdata
mov [ esi ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44d231
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_40d89e
mov al [ esi + 0x10 ]
mov [ edi + 0x10 ] al
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov al [ esi + 0x18 ]
mov [ edi + 0x18 ] al
lea eax [ esi + 0x20 ]
push eax
lea ecx [ edi + 0x20 ]
call sub_40d89e
mov al [ esi + 0x30 ]
mov [ edi + 0x30 ] al
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_44d2ae
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_402e54
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_44d2cd
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x4b4 ]
mov ecx esi
call sub_40307a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_44d307
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
push ecx
call sub_44d2f2
sub_44d338
push ebp
mov ebp esp
mov eax 0x204c
call sub_430650
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov edi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ edi + 0xfc ] 0x1
je r-xdata
mov esi [ LoadStringW@IAT ]
mov ebx 0xfff
push ebx
lea eax [ ebp - 0x2048 ]
push eax
push 0x66
push [ rw-data ]
call esi
lea eax [ ebp - 0x2048 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_40caee
push ebx
lea eax [ ebp - 0x2048 ]
push eax
push 0x72
push [ rw-data ]
call esi
lea eax [ ebp - 0x2048 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40caee
mov edx [ edi + 0xf4 ]
push edx
call sub_443438
push edx
mov ebx eax
call sub_4433b0
push edx
mov [ ebp - 0x4 ] eax
call sub_4433e2
push eax
call sub_443414
mov esi eax
lea eax [ ebp - 0x2048 ]
test esi esi
je r-xdata
push [ edi + 0xc8 ]
push edx
push esi
push [ ebp - 0x4 ]
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_40d3d2
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
lea ecx [ ebp - 0x14 ]
call sub_4039e8
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
push r--data
push eax
call sub_42234b
add esp 0x10
lea eax [ ebp - 0x2048 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_40caee
test ebx ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
cmp [ rw-data ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_407e53
push [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_4039e8
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
push 0x11010
push [ ebp - 0x44 ]
push [ ebp - 0x14 ]
push [ rw-data ]
call [ MessageBoxW@IAT ]
test esi esi
je r-xdata
push [ ebp - 0x34 ]
push [ edi + 0xf4 ]
push [ edi + 0xc8 ]
push r--data
call sub_422c67
add esp 0x10
jmp r-xdata
push [ ebp - 0x24 ]
push ebx
push [ ebp - 0x34 ]
push [ ebp - 0x4 ]
push esi
push r--data
call sub_422c67
add esp 0x18
jmp r-xdata
xor eax eax
cmp [ edi + 0x11c ] al
lea ecx [ ebp - 0x24 ]
sete al
mov [ edi + 0xfc ] 0x1
dec eax
and eax 0x7ffff071
inc eax
mov [ rw-data ] eax
call sub_405cd3
lea ecx [ ebp - 0x14 ]
call sub_405cd3
lea ecx [ ebp - 0x34 ]
call sub_405cd3
lea ecx [ ebp - 0x44 ]
call sub_405cd3
sub_44d520
push ebp
mov ebp esp
mov eax 0x204c
call sub_430650
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov edi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ edi + 0xfc ] 0x1
je r-xdata
mov esi [ LoadStringW@IAT ]
mov ebx 0xfff
push ebx
lea eax [ ebp - 0x2048 ]
push eax
push 0x66
push [ rw-data ]
call esi
lea eax [ ebp - 0x2048 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_40caee
push ebx
lea eax [ ebp - 0x2048 ]
push eax
push [ ebp + 0x8 ]
push [ rw-data ]
call esi
lea eax [ ebp - 0x2048 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40caee
mov edx [ edi + 0xf4 ]
push edx
call sub_443438
push edx
mov esi eax
call sub_4433b0
push edx
mov [ ebp - 0x4 ] eax
call sub_4433e2
push eax
call sub_443414
mov ebx eax
lea eax [ ebp - 0x2048 ]
test ebx ebx
je r-xdata
push [ edi + 0xc8 ]
push edx
push ebx
push [ ebp - 0x4 ]
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_40d3d2
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push esi
lea ecx [ ebp - 0x14 ]
call sub_4039e8
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
push r--data
push eax
call sub_42234b
add esp 0x10
lea eax [ ebp - 0x2048 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_40caee
test esi esi
je r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
cmp [ rw-data ] 0x0
je r-xdata
push esi
lea ecx [ ebp - 0x24 ]
call sub_407e53
push 0xffffffff
push [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40a2fb
push r--data
lea ecx [ ebp - 0x24 ]
call sub_4039e8
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
push 0x11010
push [ ebp - 0x44 ]
push [ ebp - 0x14 ]
push [ rw-data ]
call [ MessageBoxW@IAT ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x24 ]
mov [ rw-data ] eax
call sub_405cd3
lea ecx [ ebp - 0x14 ]
call sub_405cd3
lea ecx [ ebp - 0x34 ]
call sub_405cd3
lea ecx [ ebp - 0x44 ]
call sub_405cd3
mov eax [ ebp + 0x8 ]
add eax 0x7ffff000
push [ ebp - 0x34 ]
push [ edi + 0xf4 ]
push [ edi + 0xc8 ]
push r--data
call sub_422c67
add esp 0x10
jmp r-xdata
push [ ebp - 0x24 ]
push esi
push [ ebp - 0x34 ]
push [ ebp - 0x4 ]
push ebx
push r--data
call sub_422c67
add esp 0x18
jmp r-xdata
xor eax eax
inc eax
cmp [ edi + 0x11c ] 0x0
mov [ edi + 0xfc ] eax
je r-xdata
sub_44d712
push ebp
mov ebp esp
mov eax 0x2000
call sub_430650
push esi
xor esi esi
xor eax eax
cmp [ ebp + 0xc ] 0xffffffff
push esi
mov [ ebp - 0x2000 ] ax
push 0xfff
lea eax [ ebp - 0x2000 ]
push eax
push esi
jne r-xdata
push [ ebp + 0xc ]
call [ GetLastError@IAT ]
push eax
jmp r-xdata
push esi
push 0x1000
call [ FormatMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x2000 ]
push eax
call sub_40caee
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0x8
sub_44d76e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
mov ecx [ ebp + 0xc ]
call sub_40c4cd
xor al al
add ecx 0x49c
cmp eax [ ecx ]
jge r-xdata
push eax
call sub_414700
push [ eax ]
mov ecx [ ebp + 0xc ]
call sub_407e53
mov al 0x1
jmp r-xdata
pop ebp
retn 0x8
sub_44d7b4
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_40caee
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ esi - 0x394 ]
call sub_44d891
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop esi
leave
retn 0x4
sub_44d7e4
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x4 ]
mov ecx esi
call sub_407be1
mov edx [ ebp + 0x8 ]
mov ecx esi
mov [ eax + 0x14 ] edx
call sub_407be1
mov cl [ ebp + 0xc ]
mov [ eax + 0x18 ] cl
pop esi
pop ebp
retn 0x8
sub_44d80a
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0xf4 ]
lea esi [ edi + 0x160 ]
mov [ ebp - 0x4 ] eax
mov ebx [ esi ]
je r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_40e1f0
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_40109f
cmp ebx [ esi ]
jb r-xdata
mov ecx rw-data
call sub_401188
jmp r-xdata
mov ecx esi
call sub_40d9f2
mov eax [ ebp - 0x4 ]
mov [ edi + 0xf4 ] eax
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_44d869
mov eax [ rw-data ]
push esi
mov esi [ eax + 0x4 ]
push eax
call j_sub_4228ca#2
dec [ rw-data ]
mov [ rw-data ] esi
neg esi
sbb esi esi
and [ rw-data ] esi
pop ecx
pop esi
retn
sub_44d891
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_44d1ed
mov edi eax
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_44d1ed
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_44d8e9
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_401962
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_44d929
push ebp
mov ebp esp
dec [ ebp + 0xc ]
jne r-xdata
xor eax eax
pop ebp
retn 0x10
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push 0x1
push 0x467
push [ ebp + 0x8 ]
call [ SendMessageW@IAT ]
sub_44d950
push ebp
mov ebp esp
sub esp 0xa2c
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xa2c ]
push eax
push 0x104
push [ ebp + 0x8 ]
call [ GetFullPathNameW@IAT ]
test eax eax
je r-xdata
leave
retn 0xc
push ebx
lea eax [ ebp - 0xa2c ]
push eax
lea eax [ ebp - 0x20c ]
push r--data
push eax
call sub_42234b
lea eax [ ebp - 0x20c ]
push eax
call sub_4218fb
mov ebx eax
add esp 0x10
cmp [ ebp + ebx * 2 - 0x20e ] 0x5c
jne r-xdata
push edi
xor edi edi
push edi
push [ ebp + 0xc ]
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + ebx * 2 - 0x210 ] 0x3a
je r-xdata
push edi
push 0x2200000
push 0x3
push edi
push edi
push 0x40000000
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] al
je r-xdata
xor eax eax
mov [ ebp + ebx * 2 - 0x20e ] ax
push [ ebp + 0xc ]
call [ RemoveDirectoryW@IAT ]
push 0x618
lea eax [ ebp - 0x824 ]
push 0x0
push eax
call sub_421970
lea eax [ ebx + ebx ]
mov [ ebp - 0x81a ] ax
mov eax [ ebp - 0x81a ]
add eax 0x2
mov [ ebp - 0x818 ] ax
push 0x104
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x814 ]
push eax
mov [ ebp - 0x824 ] 0xa0000003
call sub_422c1d
mov eax [ ebp - 0x81a ]
add esp 0x18
add eax 0xc
xor edx edx
push edx
mov [ ebp - 0x820 ] ax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
movzx eax ax
push edx
add eax 0x8
push eax
lea eax [ ebp - 0x824 ]
push eax
push 0x900a4
push edi
call [ DeviceIoControl@IAT ]
push edi
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop ebx
call [ CloseHandle@IAT ]
xor eax eax
inc eax
call [ CloseHandle@IAT ]
sub_44daad
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x4 ]
mov ebx [ ecx ]
mov [ esp + 0x34 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x38 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x3c ] eax
inc [ eax ]
mov eax [ edi + 0x4 ]
mov [ esp + 0x30 ] ebx
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x10 ]
inc [ eax ]
mov [ esp + 0x1c ] eax
call sub_40b8a7
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call [ CharLowerBuffW@IAT ]
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
mov esi r--data
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
push esi
lea ecx [ esp + 0x14 ]
call sub_407e53
push ebx
call [ GetDriveTypeW@IAT ]
cmp eax 0x5
jne r-xdata
mov edx esi
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
push r--data
lea ecx [ esp + 0x24 ]
call sub_40caee
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_407b4b
push r--data
lea ecx [ esp + 0x24 ]
call sub_4039e8
mov edi [ mciSendStringW@IAT ]
xor ebx ebx
push ebx
push ebx
push ebx
push [ esp + 0x2c ]
call edi
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
push r--data
lea ecx [ esp + 0x24 ]
call sub_407e53
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_407b4b
push r--data
lea ecx [ esp + 0x24 ]
call sub_4039e8
push ebx
push ebx
push ebx
push [ esp + 0x2c ]
call edi
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_405cd3
lea ecx [ esp + 0x30 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
lea ecx [ esp + 0x24 ]
call sub_407e53
push ebx
push ebx
push ebx
push [ esp + 0x2c ]
call edi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
lea ecx [ esp + 0x20 ]
call sub_405cd3
jmp r-xdata
sub_44dc73
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp [ ebx + 0x8 ] 0x3
push edi
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx edi
call sub_4469f9
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x4 ] 0x1
sub_44dce9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_446d6d
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_44dd25
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov esi [ eax ]
mov ecx esi
mov [ esp + 0x1c ] edi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x48 ]
push [ eax ]
call sub_40caee
xor ebx ebx
push 0x1
mov [ esp + 0x14 ] bl
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
call [ SetErrorMode@IAT ]
mov esi eax
cmp [ esp + 0x4c ] ebx
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_412570
mov edx [ esp + 0x1c ]
or [ edi ] 0xffffffff
xor eax eax
inc eax
push ebx
mov [ edi + 0xc ] eax
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
mov ecx [ esp + 0x48 ]
call sub_447c0c
test al al
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_4471f1
cmp [ esp + 0x18 ] 0x1
jbe r-xdata
push [ esp + 0x14 ]
lea eax [ esp + 0x34 ]
push [ esp + 0x14 ]
mov ecx edi
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x30 ]
push eax
push [ esp + 0x5c ]
call sub_4524a9
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
test al 0x1
je r-xdata
mov edi [ ebp + 0xc ]
cmp [ esp + 0x10 ] bl
je r-xdata
or ebx 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
and al 0x2
neg al
sbb al al
not al
and al 0x1
mov [ esp + 0x14 ] al
mov [ esp + 0x10 ] 0x1
mov ecx edi
call sub_412570
mov eax [ esp + 0x20 ]
mov [ edi ] eax
mov eax [ esp + 0x24 ]
mov [ edi + 0xc ] 0x2
mov [ edi + 0x4 ] eax
jmp r-xdata
push 0x3
push 0x1
push edi
call sub_403320
mov eax [ esp + 0x2c ]
add esp 0xc
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x24 ]
push ebx
mov [ esp + 0x40 ] eax
push 0x1
lea eax [ esp + 0x40 ]
push eax
push edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] 0x2
call sub_412320
add esp 0x10
lea ecx [ esp + 0x38 ]
call sub_412570
mov eax [ esp + 0x28 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x2c ]
push 0x1
mov [ esp + 0x40 ] eax
push 0x1
lea eax [ esp + 0x40 ]
push eax
push edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] 0x2
call sub_412320
add esp 0x10
lea ecx [ esp + 0x38 ]
call sub_412570
mov eax [ esp + 0x30 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x34 ]
push 0x2
mov [ esp + 0x40 ] eax
pop eax
push eax
mov [ esp + 0x48 ] eax
push 0x1
lea eax [ esp + 0x40 ]
push eax
push edi
mov [ esp + 0x50 ] ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x38 ]
call sub_412570
jmp r-xdata
push esi
call [ SetErrorMode@IAT ]
lea ecx [ esp + 0x48 ]
call sub_405cd3
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44df2f
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp [ ebx + 0x8 ] 0x3
push edi
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx edi
call sub_447e6f
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x4 ] 0x1
sub_44dfa5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor bl bl
cmp [ esi + 0x8 ] 0x2
jb r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov dl bl
mov ecx [ eax ]
call sub_448245
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
inc bl
sub_44dffe
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x114
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
mov [ esp + 0x38 ] ebx
xor edi edi
call sub_40ca8e
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x18 ] eax
inc [ eax ]
lea ecx [ esp + 0xc ]
call sub_40b8a7
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ CharLowerBuffW@IAT ]
mov edx r--data
lea ecx [ esp + 0xc ]
call sub_41f885
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0xc ]
call sub_41f885
test al al
je r-xdata
push 0x63
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0xc ]
call sub_41f885
test al al
je r-xdata
push 0x5
jmp r-xdata
pop esi
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0xc ]
call sub_41f885
test al al
je r-xdata
push 0x2
jmp r-xdata
push 0x61
lea eax [ esp + 0x4c ]
pop ebx
mov [ esp + 0x1c ] eax
mov edx r--data
lea ecx [ esp + 0xc ]
call sub_41f885
test al al
je r-xdata
push 0x3
jmp r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_41e617
push [ esp + 0xc ]
push [ esp + 0x20 ]
call sub_421943
pop ecx
inc edi
add [ esp + 0x20 ] 0x8
pop ecx
cmp esi 0x63
jne r-xdata
mov edx r--data
lea ecx [ esp + 0xc ]
call sub_41f885
test al al
je r-xdata
push 0x4
jmp r-xdata
push ebx
lea ecx [ esp + 0x10 ]
call sub_448b50
push r--data
lea ecx [ esp + 0x10 ]
call sub_4039e8
push [ esp + 0xc ]
call [ GetDriveTypeW@IAT ]
cmp eax esi
je r-xdata
test edi edi
jle r-xdata
inc ebx
cmp ebx 0x7a
jle r-xdata
cmp eax 0x1
je r-xdata
mov edx r--data
lea ecx [ esp + 0xc ]
call sub_41f885
test al al
je r-xdata
push 0x6
mov edx [ esp + 0x34 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
jmp r-xdata
lea eax [ edi + 0x1 ]
push eax
xor ebx ebx
inc ebx
push ebx
push [ ebp + 0xc ]
call sub_403320
and [ esp + 0x34 ] 0x0
push 0x0
push ebx
lea eax [ esp + 0x34 ]
push eax
push [ ebp + 0xc ]
mov [ esp + 0x3c ] edi
mov [ esp + 0x48 ] ebx
call sub_412320
add esp 0x1c
lea ecx [ esp + 0x20 ]
call sub_412570
mov esi ebx
cmp edi ebx
jl r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
xor esi esi
push 0x0
push 0x1
call sub_44d7e4
lea ecx [ esp + 0xc ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ebx [ esp + 0x48 ]
push ebx
lea ecx [ esp + 0x3c ]
call sub_40caee
push eax
lea ecx [ esp + 0x24 ]
call sub_408182
push esi
push 0x1
lea eax [ esp + 0x28 ]
push eax
push [ ebp + 0xc ]
call sub_412320
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_412570
lea ecx [ esp + 0x38 ]
call sub_405cd3
inc esi
add ebx 0x8
cmp esi edi
jle r-xdata
jmp r-xdata
sub_44e228
push ebp
mov ebp esp
sub esp 0x218
push ebx
push esi
push edi
push 0x1
mov ebx ecx
call [ SetErrorMode@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_4471f1
push 0x104
xor edi edi
lea eax [ ebp - 0x218 ]
push eax
push edi
push edi
push edi
push edi
push edi
push [ ebp - 0x10 ]
call [ GetVolumeInformationW@IAT ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push r--data
call sub_40ca8e
mov eax [ ebx ]
push edi
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
lea eax [ ebp - 0x218 ]
push eax
call sub_40ca8e
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_44e2d5
push ebp
mov ebp esp
sub esp 0x218
push ebx
push esi
push edi
push 0x1
mov ebx ecx
call [ SetErrorMode@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_4471f1
xor edi edi
push edi
push edi
push edi
push edi
push edi
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push [ ebp - 0x10 ]
call [ GetVolumeInformationW@IAT ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push r--data
call sub_40ca8e
mov eax [ ebx ]
push edi
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
lea eax [ ebp - 0x218 ]
push eax
call sub_40ca8e
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_44e382
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
push edi
push 0x1
mov ebx ecx
call [ SetErrorMode@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
lea ecx [ ebp - 0x14 ]
call sub_4471f1
xor edi edi
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x104
lea eax [ ebp - 0x21c ]
push eax
push [ ebp - 0x14 ]
call [ GetVolumeInformationW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov eax [ ebx ]
push edi
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
push [ ebp - 0x4 ]
lea eax [ ebp - 0x21c ]
push r--data
push eax
call sub_42234b
mov ecx [ ebp + 0xc ]
add esp 0xc
lea eax [ ebp - 0x21c ]
push eax
call sub_40ca8e
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_44e44c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
push 0x1
mov [ esp + 0x18 ] ecx
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0xc ]
push r--data
mov ecx ebx
mov esi eax
call sub_40ca8e
mov edi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
cmp [ edi + 0x8 ] eax
jbe r-xdata
mov eax [ edi + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
push r--data
mov eax [ ecx ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x34 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x38 ] eax
inc [ eax ]
lea ecx [ esp + 0x1c ]
call sub_40caee
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40d18c
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov [ esp + 0x10 ] eax
cmp eax 0x1
jl r-xdata
lea ecx [ esp + 0x28 ]
call sub_4471f1
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_407b4b
push r--data
lea ecx [ esp + 0x1c ]
call sub_41e617
push r--data
lea ecx [ esp + 0x1c ]
call sub_4039e8
mov eax [ edi + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
push [ edi + 0x8 ]
lea ecx [ esp + 0x1c ]
call sub_407b4b
jmp r-xdata
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
cmp eax 0x3
jle r-xdata
cmp eax 0x2
jne r-xdata
push [ esp + 0x28 ]
call [ GetDriveTypeW@IAT ]
cmp eax edi
je r-xdata
mov eax [ esp + 0x10 ]
xor edi edi
inc edi
cmp eax edi
jne r-xdata
cmp eax 0x3
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_4470ae
cmp eax 0x80004005
jne r-xdata
mov edx [ esp + 0x14 ]
push 0x0
mov eax [ edx ]
push edi
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
dec eax
dec eax
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_405cd3
lea ecx [ esp + 0x28 ]
call sub_405cd3
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
call sub_44702f
test al al
je r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_44713c
cmp eax 0x80004005
je r-xdata
push r--data
jmp r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0xf
ja r-xdata
push r--data
jmp r-xdata
mov ecx ebx
push r--data
jmp r-xdata
dec eax
je r-xdata
jmp [ eax * 4 + jump_table_44e6c4 ]
push r--data
jmp r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
push r--data
jmp r-xdata
mov ecx ebx
dec eax
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
call sub_40ca8e
jmp r-xdata
sub_44e704
push ebp
mov ebp esp
sub esp 0x238
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] 0x100
mov esi [ eax ]
mov [ ebp - 0x4 ] ecx
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] edi
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
cmp [ ebp - 0x10 ] 0x2
mov [ ebp - 0x14 ] eax
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov esi eax
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x28 ] edi
cmp ax dx
jne r-xdata
push 0x3
push r--data
push edi
call sub_42247b
add esp 0xc
neg eax
sbb eax eax
add eax 0x2
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ecx
movzx eax [ edi ]
push 0x2a
pop edx
test ax ax
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax 0x4
jae r-xdata
or esi 0x80
mov [ ebp - 0x4 ] esi
cmp [ edi ] dx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x238 ]
push eax
push esi
push ecx
push ecx
lea eax [ ebp - 0x38 ]
push eax
push ecx
jmp r-xdata
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x238 ]
push ecx
mov ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax ]
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x238 ]
push ecx
mov ecx [ ebp - 0x4 ]
push ecx
push [ eax ]
push 0x0
jmp r-xdata
call [ WNetUseConnectionW@IAT ]
mov edi [ ebp + 0xc ]
mov esi eax
test esi esi
je r-xdata
mov esi [ ebp - 0x18 ]
push 0x2a
pop eax
cmp [ esi ] ax
jne r-xdata
mov ecx edi
call sub_412570
xor ecx ecx
inc ecx
xor eax eax
mov [ edi + 0xc ] ecx
mov [ edi ] eax
cmp esi 0x5
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push esi
call j_sub_4228ca#2
push [ ebp - 0x14 ]
call j_sub_4228ca#2
pop ecx
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
test [ ebp - 0xc ] 0x100
mov ecx edi
je r-xdata
cmp esi 0x55
je r-xdata
push eax
push 0x2
jmp r-xdata
push r--data
lea eax [ ebp - 0x238 ]
push eax
jmp r-xdata
push eax
push 0x3
cmp esi 0x4b2
je r-xdata
mov eax [ ebx ]
call sub_40ca8e
push eax
cmp esi 0x4b0
jne r-xdata
cmp esi 0x43
jne r-xdata
push 0x4
jmp r-xdata
mov eax [ ebx ]
cmp esi 0x56
jne r-xdata
push 0x5
jmp r-xdata
push ecx
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push esi
add ecx ebx
call sub_407ba9
jmp r-xdata
push 0x6
jmp r-xdata
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
sub_44e913
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x1
push 0x1
push [ eax ]
call [ WNetCancelConnection2W@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push 0xa
call [ Sleep@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push ebx
add ecx edi
call sub_407ba9
sub_44e973
push ebp
mov ebp esp
sub esp 0x804
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x400
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x804 ]
push ecx
push [ eax ]
call [ WNetGetConnectionW@IAT ]
mov ecx [ ebp + 0xc ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x804 ]
push eax
call sub_40ca8e
push r--data
call sub_40ca8e
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push esi
add ecx edi
call sub_407ba9
jmp r-xdata
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_44e9f4
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x1
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_4471f1
mov eax [ ebx + 0x4 ]
mov edi [ eax + 0x4 ]
mov ecx edi
call sub_4084a6
mov eax [ edi + 0x8 ]
push [ eax ]
push [ ebp - 0x10 ]
call [ SetVolumeLabelW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_412570
and [ edi ] 0x0
mov [ edi + 0xc ] 0x1
sub_44ea85
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
xor edi edi
inc edi
push edi
mov [ ebp - 0x4 ] ecx
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0xc ]
mov ecx ebx
mov esi eax
call sub_412570
and [ ebx ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xc ] edi
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x30 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x24 ] eax
inc [ eax ]
lea ecx [ ebp - 0x30 ]
call sub_4471f1
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x30 ]
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
push 0x0
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
fild [ ebp - 0x10 ]
mov ecx ebx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fstp [ ebp - 0x8 ]
call sub_412570
fld [ ebp - 0x8 ]
mov [ ebx + 0xc ] 0x3
fstp [ ebx ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405cd3
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_44eb4b
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
xor edi edi
inc edi
push edi
mov [ ebp - 0x4 ] ecx
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0xc ]
mov ecx ebx
mov esi eax
call sub_412570
and [ ebx ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xc ] edi
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x30 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x24 ] eax
inc [ eax ]
lea ecx [ ebp - 0x30 ]
call sub_4471f1
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x30 ]
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
push 0x0
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
fild [ ebp - 0x10 ]
mov ecx ebx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fstp [ ebp - 0x8 ]
call sub_412570
fld [ ebp - 0x8 ]
mov [ ebx + 0xc ] 0x3
fstp [ ebx ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405cd3
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_44ec11
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push 0x1
mov ebx ecx
call [ SetErrorMode@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x10 ] eax
inc [ eax ]
lea ecx [ ebp - 0x1c ]
call sub_4471f1
xor edi edi
cmp [ ebp - 0x18 ] 0x3
jne r-xdata
push 0x3
pop edi
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_40a4f6
cmp [ eax ] 0x3a
jne r-xdata
push r--data
sub eax 0x3
je r-xdata
push 0x2
lea ecx [ ebp - 0x1c ]
call sub_40a4f6
cmp [ eax ] 0x5c
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405cd3
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
push r--data
jmp r-xdata
sub eax 0x10
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x1c ]
call [ GetDiskFreeSpaceW@IAT ]
test eax eax
jne r-xdata
call sub_40ca8e
jmp r-xdata
push r--data
jmp r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax edi
sub eax 0x0
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push r--data
push r--data
jmp r-xdata
call sub_40ca8e
test edi edi
je r-xdata
sub_44ed1a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call [ SetCurrentDirectoryW@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_44ed57
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x224
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0xc ] 0x0
cmp [ edi + 0x8 ] 0x3
jb r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x0
push [ esp + 0x10 ]
mov ecx [ eax ]
mov edx edi
call sub_446b3f
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x8
je r-xdata
mov [ esp + 0xc ] 0x1
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push 0x0
push 0x0
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x2c ]
push eax
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_42297d
add esp 0x14
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_40caee
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_4039e8
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx ebx
call sub_40cdb4
lea ecx [ esp + 0x10 ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_446f4b
test al al
jne r-xdata
call sub_405cd3
call sub_405cd3
jmp r-xdata
mov ecx [ esp + 0x10 ]
call sub_446d6d
test al al
jne r-xdata
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
sub_44ee88
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp [ ebx + 0x8 ] 0x2
push edi
mov [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_447c0c
test al al
mov eax [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x0
push edi
push [ eax ]
call [ CreateHardLinkW@IAT ]
mov edi [ ebp + 0xc ]
mov ecx edi
mov esi eax
call sub_412570
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
call sub_40cdb4
test eax eax
jne r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x4 ]
mov eax [ esi + 0x8 ]
push edi
push [ eax ]
call sub_44d950
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
mov [ ebp - 0x4 ] al
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call [ DeleteFileW@IAT ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x0
push edi
push [ eax ]
call [ CreateHardLinkW@IAT ]
mov edi [ ebp + 0xc ]
mov ecx edi
mov esi eax
call sub_412570
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
sub_44efcd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov ecx esi
mov [ esp + 0x14 ] ebx
xor edi edi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x20 ]
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x2c ] eax
inc [ eax ]
mov ecx edx
call sub_4478ad
mov esi [ esp + 0x24 ]
push 0xffffffff
push 0xffffffff
push 0xffffffff
push 0x1
push 0x2
push r--data
lea ecx [ esp + 0x38 ]
call sub_45267a
cmp eax esi
jne r-xdata
push 0x0
call [ CoInitialize@IAT ]
lea eax [ esp + 0x10 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
push r--data
lea ecx [ esp + 0x24 ]
call sub_4039e8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x10 ]
push [ eax ]
mov edx [ ecx ]
push ecx
call [ edx + 0x50 ]
cmp ebx 0x2
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] edi
mov [ esi + 0xc ] 0x1
call [ CoUninitialize@IAT ]
jmp r-xdata
cmp ebx 0x3
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x10 ]
push [ eax ]
mov edx [ ecx ]
push ecx
call [ edx + 0x24 ]
lea ecx [ esp + 0x20 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0x4
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x10 ]
push [ eax ]
mov edx [ ecx ]
push ecx
call [ edx + 0x2c ]
cmp ebx 0x5
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x10 ]
push [ eax ]
mov edx [ ecx ]
push ecx
call [ edx + 0x1c ]
mov edx [ ebp + 0x8 ]
cmp ebx 0x6
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x14 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x10 ]
push 0x0
push [ eax ]
mov edx [ ecx ]
push ecx
call [ edx + 0x44 ]
cmp ebx 0x7
jbe r-xdata
mov eax [ edx + 0x4 ]
mov esi [ eax + 0x18 ]
mov ecx esi
call sub_405372
test al al
je r-xdata
cmp ebx 0x8
jbe r-xdata
mov eax [ edx + 0x4 ]
mov esi [ eax + 0x14 ]
mov ebx [ eax + 0x1c ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx ebx
mov esi [ eax ]
mov eax [ esp + 0x10 ]
mov edi [ eax ]
call sub_40cdb4
push eax
push esi
push [ esp + 0x18 ]
call [ edi + 0x44 ]
mov ebx [ esp + 0x14 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x30 ]
push [ eax ]
call sub_40caee
lea eax [ esp + 0xf ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x15 ]
push eax
lea eax [ esp + 0x1a ]
push eax
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x44 ]
push eax
call sub_41da5a
lea ecx [ esp + 0x30 ]
lea ebx [ eax - 0x1 ]
neg bl
sbb bl bl
call sub_405cd3
inc bl
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ esp + 0x10 ]
mov esi [ eax ]
call sub_40cdb4
push eax
push [ esp + 0x14 ]
call [ esi + 0x3c ]
mov edx [ ebp + 0x8 ]
mov ebx [ esp + 0x14 ]
mov cl [ esp + 0xc ]
test cl cl
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ esp + 0x18 ]
xor ebx ebx
mov ecx [ eax ]
inc ebx
push ebx
push [ esp + 0x24 ]
push eax
call [ ecx + 0x18 ]
test eax eax
jns r-xdata
mov al [ esp + 0xd ]
test al al
je r-xdata
push 0x4
pop edi
mov eax [ esp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
cmp [ esp + 0xe ] 0x0
je r-xdata
or edi 0x2
mov eax [ esp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
test al al
jne r-xdata
or edi 0x1
mov eax [ esp + 0x10 ]
shl edi 0x8
or edi [ esp + 0x1c ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x34 ]
test cl cl
jne r-xdata
or edi 0x6
sub_44f2bf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
mov edi ecx
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_446e4a
test al al
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
call [ GetLastError@IAT ]
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_44f314
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41dd84
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_44f350
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x25c
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x18 ]
push ecx
push [ eax ]
call [ FindFirstFileW@IAT ]
mov ebx eax
mov [ esp + 0x10 ] ebx
cmp ebx 0xffffffff
jne r-xdata
lea eax [ esp + 0x44 ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] ebx
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x44 ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
push ebx
mov [ esi + 0xc ] 0x1
call [ FindClose@IAT ]
mov ecx [ edi + 0x19c ]
xor ebx ebx
test ecx ecx
je r-xdata
push 0x14
cmp ebx ecx
jne r-xdata
mov edx [ edi + 0x198 ]
call sub_42010a
pop ecx
mov ecx [ edi + 0x198 ]
mov ecx [ ecx + ebx * 4 ]
mov [ ecx ] eax
call sub_42010a
pop ecx
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
lea ecx [ edi + 0x194 ]
call sub_40197e
jmp r-xdata
inc ebx
add edx 0x4
cmp ebx ecx
jb r-xdata
mov eax [ edi + 0x198 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
mov [ eax ] 0x1
mov eax [ edi + 0x198 ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
mov [ eax + 0x8 ] ecx
lea ecx [ esp + 0x44 ]
call sub_403bcf
mov ecx [ edi + 0x198 ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx + ebx * 4 ]
mov ecx [ ecx ]
mov [ ecx + 0xc ] eax
mov eax [ edi + 0x198 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
mov eax [ esp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov ecx esi
call sub_412570
lea eax [ ebx + 0x1 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
jmp r-xdata
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
sub_44f4ca
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
xor ebx ebx
inc ebx
push ebx
push [ eax ]
lea eax [ esp + 0x14 ]
push eax
mov esi ecx
call sub_41f0f3
test al al
je r-xdata
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push ebx
add ecx esi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
jmp r-xdata
mov eax [ esi + 0x198 ]
mov edi [ esp + 0xc ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x10 ]
push eax
mov eax [ ecx ]
push [ eax + 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push [ eax + 0xc ]
mov ecx [ ebp + 0xc ]
call sub_40ca8e
mov eax [ esi + 0x198 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
test [ eax + 0x10 ] 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x3c ]
push eax
call sub_40ca8e
test [ esp + 0x10 ] 0x10
je r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
push [ eax + 0xc ]
call j_sub_4228ca#2
mov eax [ esi + 0x198 ]
pop ecx
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
and [ eax + 0xc ] 0x0
jmp r-xdata
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push ebx
add ecx esi
call sub_407ba9
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push ebx
add ecx esi
call sub_407ba9
sub_44f5ba
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push 0x0
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41f0f3
test al al
je r-xdata
mov [ ebp + 0x8 ] 0x0
mov ecx [ esi + 0x198 ]
mov eax [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
call sub_4465ac
mov [ ebp + 0x8 ] al
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_41e387
xor eax eax
pop esi
pop ebp
retn 0x8
sub_44f608
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x10 ]
call sub_40d3d2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41dd92
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
test bl 0x1
je r-xdata
test bl 0x20
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
test bl 0x4
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
test bl 0x2
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
test bl bl
jns r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
test bl 0x10
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
test ebx 0x1000
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
test ebx 0x800
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
test ebx 0x100
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
call sub_407bef
lea ecx [ esp + 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
lea ecx [ esp + 0x14 ]
call sub_4039e8
jmp r-xdata
sub_44f736
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov edi ecx
mov ebx [ eax ]
push 0x4
mov ecx ebx
call sub_40d2c0
test al al
je r-xdata
push 0x0
push ebx
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
call sub_41f0f3
test al al
je r-xdata
push 0x38
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ edi + 0x198 ]
mov eax [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov ebx [ eax + 0x4 ]
xor ebx ebx
mov ecx eax
call sub_405080
mov ebx eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov ecx ebx
call sub_4050ec
and [ ebx + 0x2c ] 0x0
and [ ebx + 0x30 ] 0x0
push ecx
mov ecx ebx
call sub_404592
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
or edi 0x2000
push edi
push [ esi + 0x8 ]
mov ecx ebx
call sub_404bf9
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
sub eax 0x2
neg eax
sbb eax eax
and edi eax
cmp [ esi + 0x8 ] 0x2
mov edi 0x4000
jb r-xdata
mov ecx ebx
call sub_4465ba
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
mov ecx [ ecx + 0x4 ]
push 0x4
mov ecx [ ecx ]
call sub_40d2c0
test al al
je r-xdata
test ebx ebx
je r-xdata
push ecx
mov ecx ebx
call sub_404592
sub_44f841
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ eax ]
call sub_40ca8e
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x20c ]
push eax
call sub_40ca8e
jmp r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x20c ]
mov ecx [ ecx ]
call sub_4031b8
lea ecx [ ebp - 0x20c ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
lea edx [ ebp - 0x20c ]
call sub_403a67
cmp al 0x1
jne r-xdata
sub_44f8ef
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
push edi
xor ebx ebx
push ebx
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41f0f3
test al al
je r-xdata
mov eax [ esi ]
xor edi edi
mov ecx [ eax + 0x4 ]
push ebx
inc edi
push edi
add ecx esi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] edi
mov [ esi ] ebx
mov ecx [ esi + 0x198 ]
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
mov ecx esi
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov edi [ eax + 0x10 ]
mov ebx [ eax + 0x14 ]
call sub_412570
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_44f967
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x20c ]
push eax
jmp r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x20c ]
mov ecx [ ecx ]
call sub_4031b8
lea eax [ ebp - 0x20c ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40ca8e
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push eax
call [ GetShortPathNameW@IAT ]
test eax eax
je r-xdata
sub_44fa15
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
push 0xffffffff
mov eax [ edx ]
mov [ esp + 0x3c ] eax
mov eax [ edx + 0x4 ]
push 0xffffffff
mov [ esp + 0x44 ] eax
mov eax [ edx + 0x8 ]
push 0xffffffff
mov [ esp + 0x4c ] eax
mov eax [ edx + 0xc ]
push 0x1
push 0x2
mov [ esp + 0x58 ] eax
inc [ eax ]
mov esi [ esp + 0x50 ]
mov ebx r--data
push ebx
lea ecx [ esp + 0x50 ]
call sub_45267a
cmp eax esi
jne r-xdata
mov esi [ ebp + 0xc ]
push r--data
mov ecx esi
call sub_40ca8e
mov eax [ edi ]
xor ebx ebx
mov ecx [ eax + 0x4 ]
push ebx
push 0x1
add ecx edi
call sub_44d7e4
lea ecx [ esp + 0x38 ]
call sub_446f4b
test al al
je r-xdata
push ebx
lea ecx [ esp + 0x3c ]
call sub_4039e8
lea ecx [ esp + 0x38 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call [ CoInitialize@IAT ]
lea eax [ esp + 0xc ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x24 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov eax [ esp + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x24 ]
push ebx
push [ esp + 0x3c ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
test eax eax
js r-xdata
mov eax [ esp + 0x24 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x7
push 0x1
push esi
call sub_403320
mov eax [ esp + 0x18 ]
add esp 0xc
mov ecx [ eax ]
push 0x2
push ebx
mov ebx 0x104
push ebx
lea edx [ esp + 0x5c ]
push edx
push eax
call [ ecx + 0xc ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_40caee
push eax
lea ecx [ esp + 0x14 ]
call sub_408182
push 0x0
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_405cd3
mov eax [ esp + 0xc ]
push ebx
mov ecx [ eax ]
lea edx [ esp + 0x54 ]
push edx
push eax
call [ ecx + 0x20 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_40caee
push eax
lea ecx [ esp + 0x14 ]
call sub_408182
push 0x1
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_405cd3
mov eax [ esp + 0xc ]
push ebx
mov ecx [ eax ]
lea edx [ esp + 0x54 ]
push edx
push eax
call [ ecx + 0x28 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_40caee
push eax
lea ecx [ esp + 0x14 ]
call sub_408182
push 0x2
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_405cd3
mov eax [ esp + 0xc ]
push ebx
mov ecx [ eax ]
lea edx [ esp + 0x54 ]
push edx
push eax
call [ ecx + 0x18 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_40caee
push eax
lea ecx [ esp + 0x14 ]
call sub_408182
push 0x3
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_405cd3
mov eax [ esp + 0xc ]
lea edx [ esp + 0x4c ]
mov ecx [ eax ]
push edx
push ebx
lea edx [ esp + 0x58 ]
push edx
push eax
call [ ecx + 0x40 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_40caee
push eax
lea ecx [ esp + 0x14 ]
call sub_408182
push 0x4
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_405cd3
mov eax [ esp + 0x4c ]
mov [ esp + 0x10 ] eax
xor eax eax
inc eax
push 0x5
push eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x18 ]
push eax
xor ebx ebx
push esi
mov [ esp + 0x28 ] ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
mov eax [ esp + 0xc ]
lea edx [ esp + 0x48 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x38 ]
mov eax [ esp + 0x48 ]
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x18 ] ebx
inc eax
push 0x6
push eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push ebx
add ecx edi
call sub_44d7e4
sub_44fd47
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
mov eax [ eax + 0x4 ]
push ebx
push esi
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push [ eax ]
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
mov esi [ ebp + 0xc ]
mov ebx [ esp + 0x2c ]
xor edi edi
or edi [ esp + 0x30 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44fdd2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c4
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
mov [ esp + 0x58 ] ecx
mov esi [ eax ]
push edi
mov ecx esi
xor edi edi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x80 ]
push ecx
push [ eax ]
call [ FindFirstFileW@IAT ]
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov edx [ esp + 0x5c ]
push 0x0
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
mov eax [ esp + 0x84 ]
mov [ esp + 0x4c ] eax
mov eax [ esp + 0x88 ]
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x8c ]
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x58 ] eax
mov eax [ esp + 0x94 ]
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x98 ]
push ecx
mov [ esp + 0x4c ] eax
call [ FindClose@IAT ]
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
dec edi
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
lea eax [ esp + 0x4c ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x50 ]
dec edi
je r-xdata
xor ebx ebx
inc ebx
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
xor ebx ebx
inc ebx
cmp eax ebx
jne r-xdata
lea eax [ esp + 0x54 ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x58 ]
jmp r-xdata
lea eax [ esp + 0x44 ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x48 ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
push 0x6
push ebx
push esi
call sub_403320
movzx eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x70 ]
push r--data
push eax
call sub_42234b
add esp 0x18
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_40caee
lea ecx [ esp + 0x10 ]
push eax
call sub_408182
push 0x0
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x34 ]
call sub_405cd3
movzx eax [ esp + 0x26 ]
push eax
mov edi r--data
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_42234b
add esp 0xc
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_40caee
lea ecx [ esp + 0x10 ]
push eax
call sub_408182
push ebx
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x34 ]
call sub_405cd3
movzx eax [ esp + 0x2a ]
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_42234b
add esp 0xc
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_40caee
lea ecx [ esp + 0x10 ]
push eax
call sub_408182
push 0x2
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x34 ]
call sub_405cd3
movzx eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_42234b
add esp 0xc
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_40caee
lea ecx [ esp + 0x10 ]
push eax
call sub_408182
push 0x3
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x34 ]
call sub_405cd3
movzx eax [ esp + 0x2e ]
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_42234b
add esp 0xc
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_40caee
lea ecx [ esp + 0x10 ]
push eax
call sub_408182
push 0x4
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x34 ]
call sub_405cd3
movzx eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_42234b
add esp 0xc
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_40caee
lea ecx [ esp + 0x10 ]
push eax
call sub_408182
push 0x5
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
lea ecx [ esp + 0x34 ]
call sub_405cd3
jmp r-xdata
movzx eax [ esp + 0x30 ]
push eax
movzx eax [ esp + 0x32 ]
push eax
movzx eax [ esp + 0x34 ]
push eax
movzx eax [ esp + 0x36 ]
push eax
movzx eax [ esp + 0x36 ]
push eax
movzx eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x78 ]
push r--data
push eax
call sub_42234b
mov ecx [ ebp + 0xc ]
add esp 0x20
lea eax [ esp + 0x60 ]
push eax
call sub_40ca8e
jmp r-xdata
push eax
call [ FileTimeToSystemTime@IAT ]
cmp [ ebx + 0x8 ] 0x2
jbe r-xdata
sub_45013f
push ebp
mov ebp esp
sub esp 0x408
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp [ ebx + 0x8 ] 0x1
push edi
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov edi r--data
jmp r-xdata
push r--data
push edi
call sub_422203
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x408 ]
push eax
call sub_40ca8e
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push edi
mov ecx [ eax ]
lea edx [ ebp - 0x408 ]
call sub_4476db
pop ecx
cmp al 0x1
jne r-xdata
push r--data
push r--data
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
call sub_40ca8e
mov edx [ ebp - 0x4 ]
push 0x0
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
sub_4501e4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa5c
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x8 ] 0x3
mov [ esp + 0x24 ] 0x0
jne r-xdata
mov [ esp + 0xc ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ esp + 0xc ] 0x1
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0xb4 ] 0x2
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov edx r--data
call sub_41f885
test al al
jne r-xdata
push 0x1
push [ ebx + 0xc8 ]
lea ecx [ esp + 0x18 ]
call sub_403f9b
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ esp + 0x34 ]
push eax
call sub_421943
push 0x5c
pop eax
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_423084
add esp 0x10
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
lea eax [ esp + 0x448 ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x868 ]
push eax
lea eax [ esp + 0x34 ]
push eax
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_42297d
add esp 0x14
cmp [ esp + 0x30 ] 0x0
jne r-xdata
push 0x2
push [ ebx + 0xc8 ]
lea ecx [ esp + 0x18 ]
call sub_403f9b
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ esp + 0x23c ]
push eax
call sub_421943
pop ecx
pop ecx
lea ecx [ esp + 0x238 ]
call sub_447c0c
test al al
je r-xdata
push [ ebx + 0xd8 ]
lea eax [ esp + 0x34 ]
push eax
call sub_421943
lea eax [ esp + 0x38 ]
push r--data
push eax
call sub_421914
mov eax [ edi + 0x4 ]
add esp 0x10
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ esp + 0x34 ]
push eax
call sub_421914
pop ecx
pop ecx
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x23c ]
push eax
call sub_421943
lea eax [ esp + 0x868 ]
push eax
lea eax [ esp + 0x244 ]
push eax
call sub_421914
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x24c ]
push eax
call sub_421914
lea eax [ esp + 0x460 ]
push eax
lea eax [ esp + 0x254 ]
push eax
call sub_421914
mov eax [ edi + 0x4 ]
add esp 0x20
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x650 ]
mov ecx [ ecx ]
push eax
lea eax [ esp + 0x23c ]
push eax
mov edx r--data
push edx
call sub_447334
add esp 0xc
lea ecx [ esp + 0x650 ]
call sub_41dd84
cmp al 0x1
jne r-xdata
cmp [ esp + 0x448 ] 0x0
jne r-xdata
push 0x0
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x0
push [ esp + 0x10 ]
mov edx [ eax ]
lea ecx [ esp + 0x38 ]
call sub_446b3f
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ esp + 0x238 ]
push eax
call sub_4218fb
pop ecx
push 0x5c
pop ecx
cmp [ esp + eax * 2 + 0x236 ] cx
jne r-xdata
test al al
jne r-xdata
cmp [ esp + 0xc ] al
je r-xdata
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_421943
lea eax [ esp + 0x450 ]
push r--data
push eax
call sub_421943
add esp 0x10
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push ecx
lea ecx [ esp + 0x654 ]
push ecx
push [ eax ]
lea ecx [ esp + 0x1c ]
call sub_44c890
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_403e39
push 0x0
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
sub_4504f1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0x14 ] 0x0
cmp [ edi + 0x8 ] 0x3
jb r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x1
push [ esp + 0x18 ]
mov ecx [ eax ]
mov edx edi
call sub_446b3f
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x8
je r-xdata
mov [ esp + 0x14 ] 0x1
lea ecx [ esp + 0x18 ]
call sub_40d3d2
push 0x8
call sub_42010a
mov [ esp + 0x14 ] eax
mov [ esp ] 0x202
call sub_42010a
pop ecx
mov ecx [ edi + 0x4 ]
mov [ esp + 0xc ] eax
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
push 0x0
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x1c ]
push [ ecx ]
call sub_42297d
mov esi [ esp + 0x24 ]
add esp 0x14
lea ecx [ esp + 0x18 ]
push esi
call sub_4039e8
push [ esp + 0xc ]
lea ecx [ esp + 0x1c ]
call sub_4039e8
cmp [ esp + 0x1c ] 0x0
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
push [ esp + 0xc ]
call j_sub_4228ca#2
pop ecx
mov ecx ebx
call sub_40cdb4
lea ecx [ esp + 0x18 ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_446f4b
test al al
jne r-xdata
call sub_405cd3
call sub_405cd3
jmp r-xdata
mov ecx [ esp + 0x18 ]
call sub_446d6d
test al al
jne r-xdata
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
sub_45066a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov eax [ eax + 0x4 ]
push 0x4
mov edi [ eax ]
mov ecx edi
call sub_40d2c0
test al al
je r-xdata
push 0x0
push edi
lea eax [ esp + 0x14 ]
push eax
mov ecx ebx
call sub_41f0f3
test al al
je r-xdata
push 0x38
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov ecx [ ebx + 0x198 ]
mov eax [ esp + 0xc ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
xor edi edi
mov ecx eax
call sub_405080
mov edi eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x100
lea ecx [ esp + 0x24 ]
call sub_407b6e
xor eax eax
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov esi [ ebp + 0xc ]
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push 0x2000
push [ esi + 0x8 ]
mov ecx edi
call sub_404bf9
test al al
jne r-xdata
cmp [ esp + 0x18 ] 0x0
mov ecx esi
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_405b47
jmp r-xdata
push ecx
mov ecx edi
call sub_404592
lea eax [ esp + 0x10 ]
push eax
call sub_412490
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx ebx
call sub_44d7e4
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
call sub_40a666
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_407da8
lea ecx [ esp + 0x20 ]
call sub_405cd3
mov ecx edi
call sub_4050ec
and [ edi + 0x2c ] 0x0
and [ edi + 0x30 ] 0x0
push ecx
mov ecx edi
call sub_404592
mov eax [ ebp + 0x8 ]
push 0x4
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
je r-xdata
sub_4507e6
push ebp
mov ebp esp
sub esp 0x22c
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x22c ]
mov ecx [ ecx ]
call sub_4031b8
lea eax [ ebp - 0x22c ]
push eax
call sub_4218fb
pop ecx
xor ecx ecx
mov [ ebp + eax * 2 - 0x22a ] cx
lea eax [ ebp - 0x22c ]
push 0x54
mov [ ebp - 0x18 ] eax
pop eax
xor edi edi
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0xa ] edi
mov [ ebp - 0x6 ] edi
mov [ ebp - 0xe ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x1c ] 0x3
call [ SHFileOperationW@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
leave
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
sub_450878
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
push esi
cmp [ ecx + 0x8 ] eax
je r-xdata
push 0x7
push eax
push 0x0
call [ SHEmptyRecycleBinW@IAT ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_4508d9
push ebp
mov ebp esp
mov eax 0x164c
call sub_430650
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
mov esi [ edi + 0x8 ]
push 0x208
mov [ ebp - 0x23c ] ax
xor ebx ebx
lea eax [ ebp - 0x23a ]
push ebx
push eax
mov [ ebp - 0x10 ] ecx
mov [ ebp + 0x8 ] esi
call sub_421970
xor eax eax
push 0x206
mov [ ebp - 0x444 ] ax
lea eax [ ebp - 0x442 ]
push ebx
push eax
call sub_421970
add esp 0x18
xor eax eax
push eax
mov ebx 0x200
mov [ ebp - 0x4 ] eax
call [ CoInitialize@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jns r-xdata
cmp esi 0x5
jb r-xdata
call [ CoUninitialize@IAT ]
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
cmp esi 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_44be63
mov [ ebp - 0x4 ] eax
cmp esi 0x3
jb r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x444 ]
push eax
call sub_421943
mov esi [ ebp + 0x8 ]
pop ecx
pop ecx
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor esi esi
mov eax [ eax ]
cmp [ eax ] si
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x1
je r-xdata
mov [ ebp - 0x2c ] esi
lea eax [ ebp + 0x8 ]
push eax
call [ SHGetDesktopFolder@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x2
je r-xdata
push 0x40
pop ebx
mov edx [ ebp - 0x10 ]
push 0x0
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
push r--data
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x23c ]
push eax
call sub_40ca8e
lea eax [ ebp - 0x23c ]
push eax
push esi
call [ SHGetPathFromIDListW@IAT ]
mov eax [ ebp - 0x8 ]
push esi
mov edx [ eax ]
push eax
call [ edx + 0x14 ]
cmp [ ebp - 0x23c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x164c ]
push eax
call sub_421943
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x164c ]
mov [ ebp - 0x24 ] eax
pop ecx
lea eax [ ebp - 0x444 ]
mov [ ebp - 0x18 ] eax
pop ecx
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x1c ] sub_44d929
mov [ ebp - 0x20 ] ebx
call [ SHBrowseForFolderW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc ] esi
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x64c ]
push eax
call sub_421943
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
mov ecx [ eax ]
xor esi esi
push esi
lea edx [ ebp - 0xc ]
push edx
push esi
lea edx [ ebp - 0x64c ]
push edx
push esi
push esi
push eax
call [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x4
je r-xdata
or ebx 0x40
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
call [ CoUninitialize@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x23c ]
push eax
jmp r-xdata
or ebx 0x10
mov ecx [ ebp + 0xc ]
call sub_40ca8e
sub_450b20
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa5c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor eax eax
push edi
mov edi eax
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x28 ] ecx
mov esi [ eax + 0x4 ]
mov ecx esi
mov [ esp + 0x10 ] edi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor edx edx
mov esi [ eax ]
inc edx
cmp [ ebx + 0x8 ] 0x3
mov [ esp + 0x2c ] edx
jb r-xdata
xor eax eax
mov bl al
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
xor edx edx
inc edx
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x18 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
mov ecx edx
inc [ eax ]
mov [ esp + 0x24 ] eax
call sub_4478ad
lea eax [ esp + 0x860 ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x660 ]
push eax
lea eax [ esp + 0x454 ]
push eax
push [ esp + 0x28 ]
call sub_42297d
add esp 0x14
lea eax [ esp + 0x658 ]
push eax
lea eax [ esp + 0x44c ]
push eax
call sub_421914
lea eax [ esp + 0x868 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_421914
add esp 0x10
lea eax [ esp + 0x238 ]
push eax
push 0x104
call [ GetCurrentDirectoryW@IAT ]
mov edi [ SetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x448 ]
push eax
call edi
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov bl dl
xor eax eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_447c0c
test al al
je r-xdata
cmp eax 0x2d
jne r-xdata
add esi 0x2
mov ecx edx
jmp r-xdata
mov [ esp + 0x14 ] bl
cmp [ esi ] ax
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_405cd3
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
push eax
call [ GetFileAttributesW@IAT ]
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
or eax esi
not ecx
and eax ecx
push eax
lea eax [ esp + 0x34 ]
push eax
call [ SetFileAttributesW@IAT ]
test eax eax
jne r-xdata
movzx eax [ esi ]
cmp eax 0x52
je r-xdata
add esi 0x2
xor eax eax
mov ecx eax
lea eax [ esp + 0x238 ]
push eax
call edi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
test bl bl
je r-xdata
lea eax [ esp + 0x238 ]
push eax
call edi
mov eax edx
cmp eax 0x72
je r-xdata
lea eax [ esp + 0x30 ]
push eax
call edi
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_421943
pop ecx
pop ecx
jmp r-xdata
or [ esp + 0xc ] eax
or edi eax
mov [ esp + 0x10 ] edi
jmp r-xdata
cmp eax 0x41
je r-xdata
push [ esp + 0x14 ]
mov ecx [ esp + 0x2c ]
push [ esp + 0x10 ]
lea eax [ esp + 0x38 ]
push esi
push eax
call sub_452044
test al al
jne r-xdata
movzx eax [ esi ]
cmp eax 0x2b
jne r-xdata
add esi 0x2
xor eax eax
cmp [ esi ] ax
jne r-xdata
push 0x20
jmp r-xdata
cmp eax 0x61
je r-xdata
pop eax
jmp r-xdata
cmp eax 0x53
je r-xdata
cmp ecx edx
jne r-xdata
push 0x4
jmp r-xdata
cmp eax 0x73
je r-xdata
cmp eax 0x48
je r-xdata
push 0x2
cmp eax 0x68
je r-xdata
cmp eax 0x4e
je r-xdata
mov eax 0x80
jmp r-xdata
cmp eax 0x6e
je r-xdata
cmp eax 0x4f
je r-xdata
mov eax 0x1000
jmp r-xdata
cmp eax 0x6f
je r-xdata
cmp eax 0x54
je r-xdata
mov eax 0x100
jmp r-xdata
cmp eax 0x74
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_450dca
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
push 0x0
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
mov edi ecx
call sub_41f0f3
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x0
push [ ebp + 0x8 ]
call sub_41e387
mov eax [ esi + 0x4 ]
mov edx [ edi + 0x198 ]
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ edx + eax * 4 ]
call sub_40cdb4
mov ecx esi
mov edi eax
call sub_40d00b
mov ecx [ ebx ]
push edi
mov ecx [ ecx + 0x4 ]
push edx
push eax
call sub_404ee9
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
call sub_41e387
pop ebx
jmp r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_450e41
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa6c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0x1c ] ecx
mov eax [ edi + 0x4 ]
mov ebx [ edi + 0x8 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ eax ]
xor eax eax
mov [ esp + 0xc ] eax
cmp ebx 0x3
jb r-xdata
cmp ebx 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test eax eax
js r-xdata
xor eax eax
mov bl al
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
cmp eax 0x2
jg r-xdata
lea eax [ esp + 0x30 ]
push eax
call [ GetLocalTime@IAT ]
push eax
push 0x1
lea edx [ esp + 0x38 ]
mov ecx esi
call sub_4486ae
pop ecx
pop ecx
test al al
jne r-xdata
mov bl al
xor eax eax
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ esp + 0xc ] eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_447c0c
mov esi [ esp + 0xc ]
test al al
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ esp + 0x14 ]
push eax
push eax
call [ LocalFileTimeToFileTime@IAT ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x20 ]
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0xc ]
mov ecx edx
inc [ eax ]
mov [ esp + 0x2c ] eax
call sub_4478ad
lea eax [ esp + 0x668 ]
push eax
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x878 ]
push eax
lea eax [ esp + 0x464 ]
push eax
push [ esp + 0x30 ]
call sub_42297d
add esp 0x14
lea eax [ esp + 0x870 ]
push eax
lea eax [ esp + 0x45c ]
push eax
call sub_421914
lea eax [ esp + 0x670 ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_421914
add esp 0x10
lea eax [ esp + 0x248 ]
push eax
push 0x104
call [ GetCurrentDirectoryW@IAT ]
mov edi [ SetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x458 ]
push eax
call edi
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov [ esp + 0x10 ] bl
cmp [ esi ] ax
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_405cd3
push [ esp + 0x10 ]
mov ecx [ esp + 0x20 ]
push esi
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_45219f
test al al
jne r-xdata
push esi
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x44 ]
call sub_447606
pop ecx
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x248 ]
push eax
call edi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
test bl bl
je r-xdata
lea eax [ esp + 0x248 ]
push eax
call edi
lea eax [ esp + 0x40 ]
push eax
call edi
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_421943
pop ecx
pop ecx
sub_4510a8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
lea ecx [ esp + 0x4 ]
push ebx
push esi
push edi
call sub_40d3d2
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x10 ]
call sub_4478ad
lea ecx [ esp + 0x10 ]
call sub_446f4b
test al al
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esp + 0x10 ]
xor ebx ebx
push ebx
push ebx
cmp [ ebx + 0x8 ] 0x3
jne r-xdata
mov [ esi + 0xc ] 0x1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] ebx
push [ esp + 0x10 ]
push ebx
push ebx
push ebx
call esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esp + 0x10 ]
xor ebx ebx
push ebx
push edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
push 0x29
mov ecx [ ecx + 0x8 ]
call sub_41d5f6
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x8 ]
mov esi [ WritePrivateProfileStringW@IAT ]
push [ eax ]
call esi
test eax eax
je r-xdata
sub_451195
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
lea ecx [ ebp - 0x18 ]
call sub_40d3d2
push 0x1fffe
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_404bce
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x18 ]
call sub_4478ad
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x18 ]
mov eax [ esi + 0x8 ]
push 0xffff
push [ ebp - 0x8 ]
push ebx
push edi
push [ eax ]
call [ GetPrivateProfileStringW@IAT ]
push [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40ca8e
lea ecx [ ebp - 0x8 ]
call sub_404fd2
lea ecx [ ebp - 0x18 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_451244
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ esp + 0x50 ]
mov [ esp + 0x24 ] ebx
call sub_40d3d2
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x50 ]
call sub_4478ad
push 0xfffe
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x2c ]
call sub_404bce
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esp + 0x50 ]
mov eax [ esi + 0x8 ]
push 0x7fff
push [ esp + 0x30 ]
push [ eax ]
call [ GetPrivateProfileSectionW@IAT ]
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
add ecx ebx
push 0x14
call sub_42010a
mov edi eax
xor ebx ebx
pop ecx
mov [ esp + 0x20 ] edi
test edi edi
je r-xdata
mov edi ebx
mov [ esp + 0x20 ] ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
jmp r-xdata
mov edx [ esp + 0x24 ]
push ebx
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
jmp r-xdata
mov edi [ esp + 0x28 ]
cmp [ esp + 0x1c ] 0x0
mov ecx edi
mov al bl
mov [ esp + 0x18 ] ecx
mov [ edi ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0xf ] al
mov esi ebx
jle r-xdata
push 0x1
call sub_44d7e4
cmp [ esp + 0x14 ] 0x3d
jne r-xdata
cmp [ ecx ] esi
jne r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov al 0x1
mov [ esp + 0xf ] al
jmp r-xdata
inc esi
cmp esi [ esp + 0x1c ]
jl r-xdata
push 0xd
pop edx
mov [ edi + esi * 2 ] dx
mov edx [ esp + 0x10 ]
cmp [ ecx + 0x8 ] ebx
je r-xdata
test al al
jne r-xdata
movzx edx [ edi + esi * 2 ]
mov [ esp + 0x14 ] edx
cmp edx 0x3b
mov edx [ esp + 0x10 ]
jne r-xdata
mov edi [ esp + 0x20 ]
test edx edx
jle r-xdata
mov [ ecx + 0xc ] ebx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0x4 ] ebx
test al al
jne r-xdata
lea eax [ esi + 0x1 ]
mov [ ecx + 0x8 ] eax
mov al [ esp + 0xf ]
mov [ ecx + 0x4 ] esi
jmp r-xdata
push 0x2
lea eax [ edx + 0x1 ]
push eax
push 0x2
push [ ebp + 0xc ]
call sub_403320
mov esi [ esp + 0x20 ]
push ebx
push ebx
push 0x2
lea eax [ esp + 0x4c ]
push eax
push [ ebp + 0xc ]
mov [ esp + 0x54 ] esi
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] 0x1
call sub_412320
add esp 0x24
lea ecx [ esp + 0x30 ]
call sub_412570
lea ecx [ esp + 0x40 ]
call sub_40d3d2
lea ecx [ esp + 0x30 ]
call sub_40d3d2
test esi esi
jle r-xdata
inc edx
mov [ ecx + 0xc ] esi
mov [ esp + 0x10 ] edx
cmp [ edi + esi * 2 + 0x2 ] bx
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_405cd3
lea ecx [ esp + 0x40 ]
call sub_405cd3
jmp r-xdata
mov [ esp + 0x10 ] 0x1
mov al bl
mov [ esp + 0xf ] al
cmp [ edi + esi * 2 + 0x2 ] bx
je r-xdata
push 0x14
call sub_42010a
pop ecx
mov ecx eax
test ecx ecx
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_404fd2
lea ecx [ esp + 0x50 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0xffffffff
push ebx
lea ecx [ esp + 0x48 ]
call sub_40a2fb
mov eax [ edi + 0x4 ]
sub eax [ edi ]
lea ecx [ esp + 0x40 ]
push eax
push [ edi ]
push [ esp + 0x30 ]
call sub_4080ea
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x64 ]
call sub_408182
push ebx
push [ esp + 0x14 ]
lea eax [ esp + 0x68 ]
push 0x2
push eax
push [ ebp + 0xc ]
call sub_412320
add esp 0x14
lea ecx [ esp + 0x60 ]
call sub_412570
push 0xffffffff
push ebx
lea ecx [ esp + 0x38 ]
call sub_40a2fb
mov eax [ edi + 0xc ]
sub eax [ edi + 0x8 ]
lea ecx [ esp + 0x30 ]
push eax
push [ edi + 0x8 ]
push [ esp + 0x30 ]
call sub_4080ea
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x74 ]
call sub_408182
push 0x1
push [ esp + 0x14 ]
lea eax [ esp + 0x78 ]
push 0x2
push eax
push [ ebp + 0xc ]
call sub_412320
add esp 0x14
lea ecx [ esp + 0x70 ]
call sub_412570
push edi
mov edi [ edi + 0x10 ]
call j_sub_4228ca#2
inc [ esp + 0x14 ]
pop ecx
dec esi
jne r-xdata
mov ecx ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] ebx
mov [ ecx + 0x10 ] ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ ecx ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov [ eax + 0x10 ] ecx
mov [ esp + 0x18 ] ecx
jmp r-xdata
sub_451543
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x38 ]
call sub_40d3d2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x38 ]
call sub_4478ad
push 0xfffe
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x24 ]
call sub_404bce
mov ebx [ esp + 0x20 ]
push 0xa
pop esi
push [ esp + 0x38 ]
mov [ ebx + 0x2 ] si
push 0x7fff
push ebx
call [ GetPrivateProfileSectionNamesW@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
cmp [ ebx + 0x2 ] si
je r-xdata
push 0xc
call sub_42010a
mov edi eax
xor esi esi
pop ecx
mov [ esp + 0x1c ] edi
test edi edi
je r-xdata
mov edi esi
mov [ esp + 0x1c ] esi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
jmp r-xdata
mov ebx [ esp + 0x14 ]
lea eax [ ebx + 0x1 ]
push eax
push 0x1
push [ ebp + 0xc ]
call sub_403320
xor eax eax
inc eax
push esi
push eax
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x3c ]
push eax
push [ ebp + 0xc ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x4c ] esi
call sub_412320
add esp 0x1c
lea ecx [ esp + 0x28 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_40d3d2
test ebx ebx
jle r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x10 ]
mov edi esi
cmp [ esp + 0x10 ] 0x0
mov ecx edi
mov [ esp + 0x18 ] ecx
mov [ edi ] esi
mov [ esp + 0x14 ] esi
mov ebx esi
jle r-xdata
lea ecx [ esp + 0x28 ]
call sub_405cd3
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c4cd
mov eax [ edi + 0x4 ]
sub eax [ edi ]
lea ecx [ esp + 0x28 ]
push eax
push [ edi ]
push [ esp + 0x28 ]
call sub_4080ea
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_408182
inc esi
push esi
push 0x1
lea eax [ esp + 0x50 ]
push eax
push [ ebp + 0xc ]
call sub_412320
add esp 0x10
lea ecx [ esp + 0x48 ]
call sub_412570
push edi
mov edi [ edi + 0x8 ]
call j_sub_4228ca#2
pop ecx
cmp esi ebx
jl r-xdata
inc ebx
cmp ebx edx
jl r-xdata
mov [ ecx + 0x4 ] ebx
push 0xd
pop ecx
push 0xc
inc edi
mov [ eax + ebx * 2 ] cx
call sub_42010a
pop ecx
test eax eax
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_404fd2
lea ecx [ esp + 0x38 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + ebx * 2 ] si
jne r-xdata
mov [ esp + 0x14 ] edi
mov edi [ esp + 0x1c ]
mov eax esi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov ecx eax
lea eax [ ebx + 0x1 ]
mov [ ecx ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] ecx
sub_451726
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ecx edi
call sub_412570
mov ebx [ ebp + 0x8 ]
and [ edi ] 0x0
mov [ edi + 0xc ] 0x1
cmp [ ebx + 0x8 ] 0x3
mov [ ebp + 0xf ] 0x0
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
inc [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x24 ]
call sub_4478ad
push 0xfffe
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_404bce
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
push 0x7fff
push [ ebp - 0x14 ]
push [ eax ]
call [ GetPrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
test eax eax
setg [ ebp + 0xf ]
lea ecx [ ebp - 0x14 ]
call sub_404fd2
lea ecx [ ebp - 0x24 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
push 0x3
lea ecx [ ebp - 0xc ]
push ecx
push [ eax ]
call [ GetPrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
push [ ebp - 0x14 ]
push [ eax ]
call [ WritePrivateProfileSectionW@IAT ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
mov esi [ WritePrivateProfileStringW@IAT ]
xor ebx ebx
push ebx
push ebx
push [ eax ]
call esi
push [ ebp - 0x24 ]
push ebx
push ebx
push ebx
call esi
mov ecx edi
call sub_412570
xor eax eax
inc eax
mov [ edi + 0xc ] eax
mov [ edi ] eax
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
inc eax
push 0x0
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
jmp r-xdata
sub_451893
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x10 ]
call sub_4478ad
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi [ WritePrivateProfileStringW@IAT ]
push ebx
push edi
push [ eax ]
call esi
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
push [ ebp - 0x10 ]
xor eax eax
push eax
push eax
push eax
call esi
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_451939
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebx + 0xc ] 0x1
call sub_40d3d2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x20 ]
call sub_4478ad
mov eax [ ebp + 0x8 ]
push 0x5
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_40d2c0
push 0x2
pop edx
test al al
je r-xdata
push 0x4
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
push 0x0
mov ecx esi
call sub_40218e
cmp eax edx
jne r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor ecx ecx
mov eax [ eax + 0x4 ]
push 0x2
add eax 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov edi eax
mov eax [ ebp + 0x8 ]
pop ecx
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0xa
mov ecx [ eax ]
pop edx
push 0x2
mov eax edi
mov [ ebp + 0xc ] edx
pop esi
push edx
mov ecx esi
call sub_40218e
cmp eax edx
jne r-xdata
movzx edx [ ecx ]
cmp dx [ ebp + 0xc ]
jne r-xdata
add ecx esi
jmp r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
cmp [ edi + 0x8 ] 0x4
mov [ ebp - 0x8 ] ebx
jb r-xdata
test dx dx
je r-xdata
xor edx edx
jmp r-xdata
cmp [ ecx ] dx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
mov eax [ eax + 0x8 ]
xor esi esi
mov [ ebp - 0xc ] eax
mov ebx eax
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40cdb4
mov ebx eax
mov [ ebp - 0x8 ] ebx
test ebx ebx
jns r-xdata
xor ecx ecx
mov [ eax ] ecx
mov [ eax ] dx
add eax esi
add ecx esi
jmp r-xdata
xor ecx ecx
push 0x2
lea eax [ esi + 0x1 ]
pop esi
mul esi
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov ebx [ ebp - 0x8 ]
pop ecx
mov [ ebp - 0x10 ] eax
mov edi eax
push 0x0
push edx
push 0x2
pop edx
push edx
push 0x1
push ebx
call sub_4114a0
mov esi eax
add esp 0x14
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x1
push [ ebp - 0x4 ]
mov edi [ eax + 0x4 ]
push 0x2
pop eax
push eax
push 0x1
push ebx
call sub_4114a0
mov esi eax
add esp 0x14
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
add eax edi
add esi 0x2
add esi eax
inc edx
jmp r-xdata
xor ebx ebx
inc ebx
mov [ ebp - 0x8 ] ebx
push edi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
push [ ebp - 0x20 ]
xor eax eax
push eax
push eax
push eax
call [ WritePrivateProfileStringW@IAT ]
mov ecx ebx
call sub_412570
xor eax eax
inc eax
mov [ ebx + 0xc ] eax
mov [ ebx ] eax
mov ebx [ ebp + 0xc ]
xor eax eax
mov [ edi ] ax
mov edi [ ebp - 0x10 ]
jmp r-xdata
push 0x0
push ebx
push esi
push 0x1
push edx
call sub_4114a0
mov esi eax
add esp 0x14
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x2
mov eax [ eax ]
pop edx
push 0x1
mov ecx ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] esi
call sub_40218e
cmp edx eax
jge r-xdata
lea ecx [ ebp - 0x20 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x20 ]
mov eax [ esi + 0x8 ]
push edi
push [ eax ]
call [ WritePrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
push 0x3d
pop eax
push 0x1
push ebx
push edx
push 0x1
push [ ebp - 0xc ]
mov [ edi ] ax
add edi edx
call sub_4114a0
mov esi eax
add esp 0x14
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x2
mov eax [ eax ]
pop esi
mov [ edi ] cx
add edi edx
add eax edx
jmp r-xdata
xor eax eax
mov [ edi ] ax
add edi esi
inc ebx
jmp r-xdata
mov [ edi ] cx
add edi esi
add eax esi
jmp r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
mov edx [ ebp - 0xc ]
push 0x1
mov ecx edx
call sub_40218e
cmp ebx eax
jge r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
sub_451bfa
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xd4
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ esp + 0x78 ]
call sub_40d3d2
mov ecx [ ebp + 0xc ]
xor eax eax
push r--data
mov [ esp + 0x28 ] eax
call sub_40ca8e
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x58 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x5c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x60 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x64 ] eax
inc [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x48 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x4c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x14 ]
inc [ eax ]
mov [ esp + 0x54 ] eax
call sub_40d3d2
lea ecx [ esp + 0x30 ]
call sub_40d3d2
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
push eax
lea ecx [ esp + 0x44 ]
call sub_404bce
mov esi r--data
push esi
push [ esp + 0x44 ]
jmp r-xdata
call sub_423318
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esp + 0x34 ]
call sub_407e53
push r--data
lea ecx [ esp + 0x34 ]
call sub_452628
push r--data
lea ecx [ esp + 0x34 ]
mov [ esp + 0x10 ] eax
call sub_452628
mov esi eax
mov eax [ esp + 0xc ]
cmp eax 0xffffffff
je r-xdata
push esi
lea ecx [ esp + 0x18 ]
call sub_4039e8
xor esi esi
inc esi
cmp [ esp + 0x18 ] esi
jbe r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx ebx
call sub_44d7e4
jmp r-xdata
cmp esi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] 0x6
jb r-xdata
push esi
lea ecx [ esp + 0x18 ]
call sub_40a4f6
cmp [ eax ] 0x7c
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_404fd2
lea ecx [ esp + 0x30 ]
call sub_405cd3
lea ecx [ esp + 0x14 ]
call sub_405cd3
lea ecx [ esp + 0x48 ]
call sub_405cd3
lea ecx [ esp + 0x58 ]
call sub_405cd3
lea ecx [ esp + 0x78 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp esi eax
jb r-xdata
push 0x1fffe
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x10 ]
call sub_404bce
cmp [ ebp + 0x10 ] 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_44be63
mov [ esp + 0x24 ] eax
inc esi
cmp esi [ esp + 0x18 ]
jb r-xdata
push esi
lea ecx [ esp + 0x18 ]
call sub_40a4f6
xor ecx ecx
mov [ eax ] cx
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_407b4b
push r--data
lea ecx [ esp + 0x18 ]
call sub_4039e8
mov eax [ esp + 0xc ]
sub esi eax
dec esi
push esi
inc eax
push eax
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x84 ]
call sub_407f40
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_407b4b
mov esi r--data
push esi
lea ecx [ esp + 0x18 ]
call sub_4039e8
push esi
push 0x0
mov esi [ esp + 0xc ]
xor eax eax
mov [ esi ] ax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ esp + 0xc ]
push [ eax ]
push esi
call sub_421943
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
lea eax [ esp + 0x88 ]
mov [ esp + 0xbc ] esi
push eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
cmp eax 0x1f
jg r-xdata
push 0x58
lea eax [ esp + 0x8c ]
push 0x0
push eax
call sub_421970
mov eax [ esp + 0x30 ]
mov [ esp + 0x98 ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0xa0 ] eax
mov eax [ esp + 0x38 ]
mov [ esp + 0xc4 ] eax
mov eax [ esp + 0x34 ]
add esp 0xc
cmp [ ebp + 0x10 ] 0x4
mov [ esp + 0xa4 ] esi
mov [ esp + 0x88 ] 0x58
mov [ esp + 0xa8 ] 0xffff
mov [ esp + 0xb4 ] eax
mov esi 0x80004
jb r-xdata
call [ GetSaveFileNameW@IAT ]
test eax eax
je r-xdata
call [ GetOpenFileNameW@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
test eax eax
js r-xdata
xor eax eax
push eax
mov eax [ ebx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
push [ esp + 0xa4 ]
push [ esp + 0xa4 ]
test esi 0x200
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
test al 0x10
je r-xdata
lea ecx [ esp + 0xc ]
call sub_404fd2
mov ecx [ ebp + 0xc ]
call sub_40ca8e
jmp r-xdata
call sub_4218fb
pop ecx
push [ esp + 0xa4 ]
lea ecx [ esp + 0x6c ]
mov esi eax
call sub_40caee
mov eax [ esp + 0xa4 ]
add eax 0x2
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
test al 0x8
je r-xdata
add esi 0x2
lea eax [ eax + esi * 2 ]
mov [ esp + 0xa4 ] eax
cmp [ eax ] bx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
test al 0x4
je r-xdata
or esi 0x2000
push eax
call sub_4218fb
lea ecx [ esp + 0x6c ]
mov esi eax
mov [ esp ] r--data
call sub_4039e8
push [ esp + 0xa4 ]
lea ecx [ esp + 0x6c ]
call sub_4039e8
mov eax [ esp + 0xa4 ]
add eax 0x2
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x68 ]
push eax
call sub_407bef
lea ecx [ esp + 0x68 ]
call sub_405cd3
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
test al 0x2
je r-xdata
or esi 0x200
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
test al 0x1
je r-xdata
or esi 0x800
or esi 0x1000
sub_452044
push ebp
mov ebp esp
sub esp 0x25c
push ebx
push esi
push edi
mov edi [ FindFirstFileW@IAT ]
lea eax [ ebp - 0x258 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
xor bl bl
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
call [ FindClose@IAT ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
mov al bl
lea eax [ ebp - 0x258 ]
push eax
push r--data
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x258 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
mov bl 0x1
mov edi [ SetCurrentDirectoryW@IAT ]
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x22c ]
push eax
call [ GetFileAttributesW@IAT ]
mov ecx eax
or ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
not eax
and ecx eax
push ecx
lea eax [ ebp - 0x22c ]
push eax
call [ SetFileAttributesW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x258 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
xor al al
jmp r-xdata
mov bl 0x1
test [ ebp - 0x258 ] 0x10
je r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x22c ]
push eax
call edi
push [ ebp + 0x14 ]
mov ecx ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_452044
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
push r--data
call edi
push esi
call [ FindClose@IAT ]
sub_45219f
push ebp
mov ebp esp
sub esp 0x25c
push ebx
push esi
push edi
mov edi [ FindFirstFileW@IAT ]
lea eax [ ebp - 0x258 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
xor bl bl
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
call [ FindClose@IAT ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
mov al bl
lea eax [ ebp - 0x258 ]
push eax
push r--data
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x258 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
mov bl 0x1
mov edi [ SetCurrentDirectoryW@IAT ]
mov ebx [ ebp - 0x4 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x22c ]
call sub_447606
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x258 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
xor al al
jmp r-xdata
mov bl 0x1
test [ ebp - 0x258 ] 0x10
je r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x22c ]
push eax
call edi
push [ ebp + 0x14 ]
mov ecx ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_45219f
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
push r--data
call edi
push esi
call [ FindClose@IAT ]
sub_4522e5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov [ esp + 0x10 ] ecx
mov edi [ eax ]
push 0x4
mov ecx edi
call sub_40d2c0
test al al
je r-xdata
xor ebx ebx
push ebx
push edi
mov edi [ esp + 0x18 ]
lea eax [ esp + 0x1c ]
push eax
mov ecx edi
call sub_41f0f3
test al al
je r-xdata
push 0x38
call sub_42010a
xor ebx ebx
pop ecx
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov ecx [ edi + 0x198 ]
mov eax [ esp + 0x14 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4 ]
test [ edi + 0x28 ] 0x3
jne r-xdata
mov edi ebx
mov ecx eax
call sub_405080
mov edi eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
push 0xb
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_40d2c0
test al al
jne r-xdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push 0x1
push [ esi + 0x8 ]
mov ecx edi
call sub_404bf9
test al al
jne r-xdata
mov ecx esi
call sub_44be47
mov ecx [ ebp + 0x8 ]
mov edx eax
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_44be8a
push eax
push edx
mov ecx edi
call sub_44689f
test al al
jne r-xdata
test [ edi + 0x28 ] 0x10
jne r-xdata
push ecx
mov ecx edi
call sub_404592
mov eax [ ebp + 0x8 ]
push 0x4
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov ecx esi
call sub_4084a6
cmp [ ebp + 0x10 ] 0x0
mov esi [ esi + 0x8 ]
je r-xdata
mov ecx edi
call sub_4050ec
push ecx
mov ecx edi
mov [ edi + 0x2c ] ebx
mov [ edi + 0x30 ] ebx
call sub_404592
push esi
mov ecx edi
call sub_4467dc
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
add eax 0x2
push eax
lea ecx [ esp + 0x1c ]
call sub_407b6e
push esi
lea ecx [ esp + 0x1c ]
call sub_40c935
push r--data
lea ecx [ esp + 0x1c ]
call sub_4039e8
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_4467dc
lea ecx [ esp + 0x18 ]
call sub_405cd3
jmp r-xdata
dec eax
push eax
mov ecx esi
mov [ esp + 0x18 ] eax
call sub_41db6f
cmp [ eax ] 0xd
je r-xdata
push [ esp + 0x14 ]
mov ecx esi
call sub_41db6f
cmp [ eax ] 0xa
jne r-xdata
mov eax [ esi + 0x4 ]
sub_4524a9
push ebp
mov ebp esp
sub esp 0x27c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_40caee
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
push r--data
inc [ eax ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
call sub_4039e8
lea eax [ ebp - 0x278 ]
push eax
push [ ebp - 0x10 ]
mov bl 0x1
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
lea ecx [ ebp - 0x24 ]
call sub_405cd3
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x18
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
xor bl bl
cmp eax 0xb
jne r-xdata
lea eax [ ebp - 0x24c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x278 ]
push eax
push [ ebp + 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x24c ]
push r--data
push eax
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
call sub_41e76d
cmp eax 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40c935
lea eax [ ebp - 0x24c ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4039e8
test [ ebp - 0x278 ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x25c ]
xor eax eax
or eax [ ebp - 0x258 ]
add [ edx ] eax
adc [ edx + 0x4 ] ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
add [ edi ] 0x1
adc [ edi + 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x0
je r-xdata
add [ esi ] 0x1
adc [ esi + 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4039e8
push [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push esi
push edi
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_4524a9
mov bl al
test bl bl
je r-xdata
jmp r-xdata
sub_452628
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor edx edx
xor esi esi
cmp [ edi + 0x4 ] edx
jbe r-xdata
or eax 0xffffffff
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
inc edx
inc esi
cmp esi [ edi + 0x4 ]
jb r-xdata
mov eax [ edi ]
movzx eax [ eax + edx * 2 ]
mov [ ebp + 0x8 ] eax
movzx eax [ ebx ]
xor ecx ecx
test ax ax
je r-xdata
mov eax edx
jmp r-xdata
inc ecx
movzx eax [ ebx + ecx * 2 ]
test ax ax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] ax
je r-xdata
movzx eax [ ebx ]
sub_45267a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
push esi
xor eax eax
push edi
mov edi [ ebp + 0x1c ]
xor edx edx
cmp edi 0x7fffffff
sete al
mov esi ecx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edx
mov [ ebp + 0x1c ] eax
test ebx ebx
jns r-xdata
je r-xdata
push [ ebp + 0x8 ]
call sub_4218fb
mov ebx eax
xor edx edx
pop ecx
test ebx ebx
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
jle r-xdata
neg eax
mov [ ebp + 0x10 ] eax
test esi esi
js r-xdata
test esi esi
jns r-xdata
mov esi ecx
sub esi ebx
cmp esi ecx
jge r-xdata
cmp esi ecx
jl r-xdata
mov esi edx
mov eax ecx
jmp r-xdata
test edi edi
jns r-xdata
xor eax eax
inc eax
sub eax ebx
add esi eax
mov eax [ ebp + 0x10 ]
jmp r-xdata
test edi edi
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x18
lea ecx [ esi + 0x1 ]
cmp edi ecx
jle r-xdata
lea edi [ esi + 0x1 ]
test esi esi
js r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
mov edi ecx
sub edi esi
mov ecx esi
sub ecx edi
mov [ ebp + 0x18 ] ecx
cmp esi ecx
jle r-xdata
mov edi ecx
mov eax esi
sub eax ebx
inc eax
add eax edi
mov edi [ ebp + 0x10 ]
mov [ ebp + 0x18 ] eax
cmp esi eax
jge r-xdata
mov edi ecx
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov edi ecx
cmp edx edi
jge r-xdata
cmp edx edi
jge r-xdata
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
jne r-xdata
push [ ebp + 0xc ]
lea eax [ eax + esi * 2 ]
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
call sub_41dfd2
mov edx [ ebp + 0x8 ]
push ebx
lea ecx [ eax + esi * 2 ]
call sub_40b96c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax edx
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ eax + esi * 2 ]
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
call sub_41dfd2
mov edx [ ebp + 0x8 ]
push ebx
lea ecx [ eax + esi * 2 ]
call sub_40b96c
pop ecx
jmp r-xdata
dec esi
inc edx
mov [ ebp - 0x4 ] edx
cmp edx eax
je r-xdata
mov edx [ ebp - 0x4 ]
test eax eax
mov eax [ ebp + 0x10 ]
jne r-xdata
inc esi
inc edx
mov [ ebp - 0x4 ] edx
cmp edx edi
je r-xdata
mov edx [ ebp - 0x4 ]
test eax eax
jne r-xdata
cmp edx eax
jge r-xdata
mov edi eax
sub esi ebx
jmp r-xdata
jmp r-xdata
add esi ebx
jmp r-xdata
cmp esi edi
jg r-xdata
cmp esi [ ebp + 0x18 ]
jl r-xdata
sub_452a4a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46a7e0
mov esi [ ebp + 0xc ]
mov ecx esi
test al al
je r-xdata
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
call sub_412570
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_452a97
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46a88f
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_452acc
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ebx [ esi + 0x8 ]
or edi 0xffffffff
test ebx ebx
je r-xdata
cmp ebx 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov edi eax
push 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
test esi esi
je r-xdata
push eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
push esi
call sub_40ca8e
push esi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push edi
call sub_46a8dc
mov edi [ esp + 0xc ]
mov esi eax
test edi edi
jg r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_452b52
push ebp
mov ebp esp
mov eax 0x2020
call sub_430650
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
xor eax eax
xor ebx ebx
mov [ ebp - 0x20 ] ecx
mov [ ebp + 0x8 ] eax
cmp edi 0x3
jbe r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov ebx eax
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x2020 ]
push edx
lea edx [ ebp - 0x18 ]
push edx
lea edx [ ebp + 0x8 ]
push edx
lea edx [ ebp - 0x14 ]
push edx
mov ecx 0xfff
mov [ ebp - 0x2020 ] cx
mov ecx [ esi + 0x4 ]
lea edx [ ebp - 0x1c ]
mov esi [ ecx ]
mov ecx [ ecx + 0x4 ]
push edx
push ebx
push eax
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46afee
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
xor edi edi
inc edi
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov edx [ ebp - 0x20 ]
and [ esi ] 0x0
xor edi edi
inc edi
mov [ esi + 0xc ] edi
mov eax [ edx ]
push 0x0
mov ecx [ eax + 0x4 ]
push edi
add ecx edx
call sub_44d7e4
jmp r-xdata
mov esi [ ebp + 0xc ]
add ebx 0x2
push ebx
push edi
push esi
call sub_403320
mov eax [ ebp - 0x1c ]
and [ ebp - 0x8 ] 0x0
push 0x0
mov [ ebp - 0x10 ] eax
push edi
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_412320
add esp 0x1c
lea ecx [ ebp - 0x10 ]
call sub_412570
mov eax [ ebp - 0x14 ]
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0x10 ] eax
push edi
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_412570
cmp ebx 0x4
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2020 ]
push eax
call sub_40ca8e
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
push 0x2
mov [ ebp - 0x10 ] eax
push edi
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_412570
mov eax [ ebp - 0x18 ]
and [ ebp - 0x8 ] 0x0
push 0x3
mov [ ebp - 0x10 ] eax
push edi
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_412570
sub_452ccf
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi ecx
xor ebx ebx
push 0xe
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
inc [ eax ]
lea ecx [ ebp - 0x24 ]
xor eax eax
inc eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x34 ]
push eax
call sub_44afce
mov ecx eax
jmp r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffd
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
call sub_405cd3
mov eax [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
mov eax [ ebp - 0x4 ]
test al 0x2
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_41cf79
test eax eax
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405cd3
mov ecx [ eax + 0x14 ]
cmp ecx 0x4
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x2
add ecx edi
call sub_44d7e4
or ebx 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
push ecx
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46b086
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] ebx
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x8
mov [ esi + 0xc ] 0x1
sub_452e0a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x4 ]
xor eax eax
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ ecx + 0xc ] 0x4
jne r-xdata
mov ebx [ edi + 0xc ]
mov [ ebp - 0x8 ] ebx
cmp [ ebx + 0xc ] 0x4
jne r-xdata
inc eax
sub eax 0x0
je r-xdata
add eax 0x2
mov esi [ edi + 0x4 ]
mov edi [ edi ]
mov ecx ebx
call sub_40cdb4
mov ecx [ ebp - 0x4 ]
push eax
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
mov ecx edi
call sub_40cdb4
push eax
call sub_46a773
dec eax
je r-xdata
call sub_4084a6
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ebx [ eax ]
call sub_40cdb4
push eax
push edi
mov ecx esi
call sub_40cdb4
push eax
mov ecx ebx
call sub_40cdb4
push eax
call sub_46a773
jmp r-xdata
dec eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
mov [ esi + 0xc ] 0x1
mov ecx ebx
call sub_4084a6
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov eax [ esi + 0x4 ]
push edx
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov edi [ eax ]
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
mov ecx edi
call sub_40cdb4
push eax
call sub_46a773
jmp r-xdata
dec eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov ecx ebx
call sub_4084a6
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push edi
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46a773
jmp r-xdata
sub_452f47
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
push edi
xor edi edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jbe r-xdata
sub esp 0x10
mov ecx esp
lea eax [ ebp - 0x10 ]
push eax
mov [ ecx + 0x8 ] edi
call sub_4113a0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46b0e9
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
lea ecx [ ebp - 0x10 ]
mov [ esi + 0xc ] ebx
mov [ esi ] edi
call sub_412570
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x10 ]
push [ eax + 0x4 ]
call sub_40d89e
sub_452fb7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
mov ebx ecx
mov ecx [ eax + 0x4 ]
push edi
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46b14a
mov edi eax
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
neg edi
push edi
add ecx ebx
call sub_407ba9
xor edi edi
inc edi
sub_453013
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
mov ebx ecx
mov ecx [ eax + 0x4 ]
push edi
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46b354
mov edi eax
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
neg edi
push edi
add ecx ebx
call sub_407ba9
xor edi edi
inc edi
sub_45306f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46b48d
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4530af
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
lea ecx [ esp ]
push esi
push edi
call sub_40d3d2
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ edi + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46b4d4
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
lea ecx [ esp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_405cd3
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ esp + 0xc ]
call sub_40c935
sub_453133
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_40cdb4
push eax
push 0xffffffff
push edi
push 0xffffffff
push 0x0
push 0xffffffff
push 0x0
call sub_41a599
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
mov edi eax
sub_453188
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
push 0xffffffff
mov ecx [ ecx ]
call sub_40cdb4
push eax
push edi
push 0xffffffff
push 0x0
push 0xffffffff
push 0x0
call sub_41a599
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
mov edi eax
sub_4531dd
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_40d3d2
mov ebx [ ebp + 0xc ]
or [ ebp - 0x8 ] 0xffffffff
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
cmp edi 0x5
jbe r-xdata
cmp edi 0x4
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
cmp edi 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
push 0x4
mov eax [ eax + 0x10 ]
mov ecx eax
mov [ ebp + 0x8 ] eax
call sub_40d2c0
test al al
je r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x18 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov ecx [ ebp + 0x8 ]
call sub_4084a6
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push [ eax + 0x8 ]
call sub_40c935
or edi 0xffffffff
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov edi eax
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
call sub_412620
push ecx
push ecx
mov ecx esi
fstp [ esp ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0x18 ]
push edi
call sub_40cdb4
push eax
call sub_46ba61
mov ecx ebx
mov esi eax
call sub_412570
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
sub_4532cd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
and [ esp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
or ebx 0xffffffff
mov esi [ edi + 0x8 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x1c ] 0x1
cmp esi 0x3
jbe r-xdata
cmp esi 0x2
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov ebx eax
sub esp 0x10
mov ecx esp
lea eax [ esp + 0x20 ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_4113a0
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push ebx
mov ecx [ eax ]
mov eax [ edi + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46bb3e
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
lea ecx [ esp + 0x10 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_412570
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
push [ ecx + 0x8 ]
lea ecx [ esp + 0x14 ]
call sub_40d89e
sub_453379
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x2
push edi
jbe r-xdata
mov edx [ esi + 0x4 ]
push eax
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46c1ee
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
sub_4533cd
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov [ ebp - 0x4 ] ecx
xor edi edi
push 0xe
mov ecx esi
mov [ ebp - 0x8 ] edi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x1c ] eax
inc [ eax ]
lea ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x28 ]
and ebx 0xfffffffd
call sub_405cd3
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0xc ] eax
inc [ eax ]
test bl 0x2
je r-xdata
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_41cf79
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_405cd3
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46c2a6
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] edi
xor esi esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
push edi
mov [ esi + 0xc ] eax
mov [ esi ] edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
sub_4534d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
cmp [ esi + 0x8 ] 0x4
mov [ ebp - 0x4 ] edi
mov ebx edi
jbe r-xdata
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov edi eax
push [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
push edi
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push ebx
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46c2e7
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40cdb4
mov ebx eax
sub_453562
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x1
push edi
jbe r-xdata
mov ecx [ esi + 0x4 ]
push eax
mov ecx [ ecx ]
call sub_40cdb4
push eax
call sub_46c467
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
sub_4535ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46c4f9
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4535ec
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x2
push edi
jbe r-xdata
mov edx [ esi + 0x4 ]
push eax
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46cb07
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
sub_453641
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] bl
cmp esi 0x3
jb r-xdata
cmp esi 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_41d5f6
test al al
jne r-xdata
cmp esi 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov eax [ eax + 0xc ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_41d5f6
test al al
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ecx ebx
call sub_4084a6
mov eax [ ebx + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ eax ]
push [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
push ebx
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46cc68
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov ecx [ edi + 0x4 ]
push 0x29
mov esi [ ecx + 0x10 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
mov ecx esi
call sub_40cdb4
and al 0x1
mov [ ebp - 0x4 ] al
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
shr al 0x1
and al 0x1
mov [ ebp + 0x8 ] al
sub_45372c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
jbe r-xdata
push esi
push edi
push eax
call sub_46d80a
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ ecx + 0x4 ]
mov ecx [ eax ]
call sub_44be63
sub_453768
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x5
push 0x1
push esi
mov edi ecx
xor ebx ebx
call sub_403320
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp [ eax + 0x8 ] ebx
jbe r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_46d852
test al al
je r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_44be63
mov ebx eax
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
mov eax [ ebp + 0xc ]
xor edi edi
xor ebx ebx
push edi
inc ebx
mov [ ebp - 0x1c ] eax
push ebx
lea eax [ ebp - 0x1c ]
push eax
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ebx
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_412570
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x1c ] eax
push ebx
lea eax [ ebp - 0x1c ]
push eax
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ebx
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_412570
mov eax [ ebp - 0x4 ]
push 0x2
mov [ ebp - 0x1c ] eax
push ebx
lea eax [ ebp - 0x1c ]
push eax
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ebx
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_412570
mov eax [ ebp - 0x8 ]
push 0x3
mov [ ebp - 0x1c ] eax
push ebx
lea eax [ ebp - 0x1c ]
push eax
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ebx
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_412570
mov eax [ ebp - 0xc ]
push 0x4
mov [ ebp - 0x1c ] eax
push ebx
lea eax [ ebp - 0x1c ]
push eax
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ebx
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_412570
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_45389c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x20 ]
call sub_40d3d2
xor edi edi
cmp [ rw-data ] 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edi
call sub_407e53
mov ebx edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x24 ]
push eax
mov ecx rw-data
call sub_46d93b
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] edi
jbe r-xdata
mov eax [ esi ]
push edi
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
mov ebx [ ebp - 0x4 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov eax [ ebp - 0x24 ]
mov [ esi ] eax
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edi [ ebp + 0xc ]
push 0x5
push eax
push edi
call sub_403320
push 0x0
push 0x1
push 0x0
push edi
call sub_4114a0
mov esi eax
add esp 0x1c
mov ecx esi
call sub_412570
mov ecx [ ebp - 0x24 ]
xor eax eax
inc eax
push eax
push eax
push 0x0
push edi
mov [ esi + 0xc ] eax
mov [ esi ] ecx
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov eax [ ebp - 0x10 ]
push 0x2
push 0x1
push 0x0
push edi
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov eax [ ebp - 0xc ]
push 0x3
push 0x1
push 0x0
push edi
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
push 0x4
push ecx
push 0x0
push edi
mov [ esi + 0xc ] ecx
mov [ esi ] eax
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov [ esi ] ebx
jmp r-xdata
lea ecx [ ebp - 0x20 ]
mov [ esi + 0xc ] 0x1
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_453a00
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x2
push 0x1
push esi
mov ebx ecx
xor edi edi
call sub_403320
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp [ eax + 0x8 ] edi
jbe r-xdata
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_46d9a7
xor edi edi
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_44be63
mov edi eax
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
inc edi
push edi
add ecx ebx
call sub_44d7e4
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] edi
mov eax [ ebp + 0xc ]
xor ebx ebx
push edi
inc ebx
mov [ ebp - 0x10 ] eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ebx
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_412570
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x10 ] eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ebx
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_412570
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_453ab6
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov [ ebp - 0x4 ] ecx
xor edi edi
push 0xe
mov ecx esi
mov [ ebp - 0x8 ] edi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x1c ] eax
inc [ eax ]
lea ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x28 ]
and ebx 0xfffffffd
call sub_405cd3
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x14 ] esi
inc [ eax ]
mov [ ebp - 0xc ] eax
test bl 0x2
je r-xdata
test esi esi
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_405cd3
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_46da07
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] edi
xor esi esi
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_41cf79
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
push edi
mov [ esi + 0xc ] eax
mov [ esi ] edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
sub_453bc5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
push edi
mov [ esp + 0x1c ] ebx
jbe r-xdata
mov ecx [ esi + 0x4 ]
push 0x5
mov edi [ ecx ]
mov ecx edi
call sub_40d2c0
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
mov ebx eax
mov [ esp + 0x1c ] eax
push 0x1
mov ecx edi
call sub_40218e
xor ecx ecx
push 0x6
mov edi eax
pop edx
mul edx
seto cl
mov [ esp + 0x18 ] edi
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
xor ecx ecx
mov ebx eax
mov [ esp + 0x14 ] ecx
test edi edi
jle r-xdata
push ebx
push 0x0
push 0x0
call sub_46daaa
jmp r-xdata
push [ esp + 0x1c ]
push edi
push ebx
call sub_46daaa
push ebx
call j_sub_4228ca#2
pop ecx
mov edi ebx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call j_sub_4228ca#2
mov esi [ ebp + 0xc ]
pop ecx
mov ecx esi
call sub_412570
and [ esi ] 0x0
lea ecx [ esp + 0x28 ]
mov [ esi + 0xc ] 0x1
call sub_405cd3
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
mov [ edi ] 0x1
je r-xdata
cmp [ esp + 0x11 ] 0x0
je r-xdata
mov [ edi ] 0x5
cmp [ esp + 0x12 ] 0x0
je r-xdata
or [ edi ] 0x8
mov ax [ esp + 0x20 ]
mov [ edi + 0x2 ] ax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x28 ]
mov [ edi + 0x4 ] ax
call sub_405cd3
mov ecx [ esp + 0x14 ]
inc ecx
add edi 0x6
mov [ esp + 0x14 ] ecx
cmp ecx [ esp + 0x18 ]
jl r-xdata
or [ edi ] 0x10
mov eax [ esi + 0x4 ]
push 0x0
push ecx
push 0x2
push 0x1
push [ eax ]
call sub_4114a0
mov esi eax
add esp 0x14
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
push 0x1
push [ esp + 0x18 ]
mov [ esp + 0x38 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x3c ] eax
inc [ eax ]
mov eax [ esi + 0x4 ]
push 0x2
push 0x1
push [ eax ]
call sub_4114a0
add esp 0x14
mov ecx eax
call sub_40cdb4
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x13 ]
push eax
lea eax [ esp + 0x16 ]
push eax
lea eax [ esp + 0x19 ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_41da5a
test al al
je r-xdata
mov edi [ esp + 0x18 ]
sub_453d69
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
or ebx 0xffffffff
mov [ ebp + 0x8 ] ebx
cmp edi 0x2
jbe r-xdata
cmp edi 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov ebx eax
cmp edi 0x4
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40cdb4
mov [ ebp + 0x8 ] eax
xor eax eax
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_44be63
jmp r-xdata
mov edx [ esi + 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push ebx
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
call sub_46db30
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_453df2
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x8 ]
mov [ ebp + 0x8 ] 0x2
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
cmp esi 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov [ ebp + 0x8 ] eax
cmp esi 0x2
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_44be63
jmp r-xdata
push eax
push ebx
push [ ebp + 0x8 ]
call sub_46db90
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_453e56
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_40d3d2
mov ebx [ ebp + 0xc ]
or [ ebp - 0x8 ] 0xffffffff
xor eax eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
mov [ ebp + 0x8 ] eax
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
cmp edi 0x5
jbe r-xdata
cmp edi 0x4
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
cmp edi 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
push 0x7
mov eax [ eax + 0x10 ]
mov ecx eax
mov [ ebp + 0x8 ] eax
call sub_40d2c0
test al al
je r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
push 0x4
mov ebx [ eax + 0xc ]
mov ecx ebx
call sub_40d2c0
test al al
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov ecx [ ebp + 0x8 ]
call sub_44be63
mov [ ebp + 0x8 ] eax
cmp edi 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
mov ecx ebx
call sub_4084a6
push [ ebx + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_40c935
mov ebx [ ebp + 0xc ]
or edi 0xffffffff
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_412620
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push [ ebp - 0x8 ]
push eax
push edi
call sub_46dbe3
mov ecx ebx
mov esi eax
call sub_412570
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
sub_453f6b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
or eax 0xffffffff
push eax
push eax
push edi
push eax
push 0x0
push eax
push [ ecx ]
call sub_41a599
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
mov edi eax
sub_453fc5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
xor ebx ebx
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_44be63
mov ebx eax
mov ecx [ esi + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
push 0xffffffff
push 0xffffffff
push ebx
push edi
push [ ecx ]
push 0xffffffff
push 0x0
call sub_41a599
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
sub_454037
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
xor ebx ebx
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_44be63
mov ebx eax
mov ecx [ esi + 0x4 ]
push ebx
mov ecx [ ecx ]
push edi
call sub_40cdb4
push eax
call sub_46dc79
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
sub_45409b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x8 ] ecx
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_44be63
mov ecx eax
push ecx
mov ecx rw-data
call sub_41aaff
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
jmp r-xdata
xor eax eax
pop ebp
retn 0x8
sub_4540e6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_44be63
push edi
push eax
call sub_46dd52
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
sub_454132
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
inc esi
mov [ esp + 0x14 ] edi
cmp edi esi
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov ecx ebx
mov [ rw-data ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] esi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x10 ] ecx
cmp [ rw-data ] cl
jbe r-xdata
push ecx
lea eax [ esp + 0x13 ]
push eax
push ecx
push ebx
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x3c ]
push eax
push rw-data
mov ecx rw-data
mov [ esp + 0x2b ] bl
call sub_456a38
test al al
je r-xdata
mov edi [ ebp + 0x10 ]
lea ecx [ esp + 0x28 ]
call sub_4404c9
lea ecx [ esp + 0x18 ]
call sub_412570
lea ecx [ esp + 0x38 ]
call sub_412570
mov eax ebx
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
mov esi [ rw-data ]
lea ecx [ esp + 0x18 ]
call sub_412570
mov [ esp + 0x18 ] esi
xor esi esi
mov [ esp + 0x24 ] 0x1
inc esi
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ rw-data ] edi
cmp [ esp + 0xf ] bl
je r-xdata
mov eax ecx
sub eax ebx
je r-xdata
mov edi [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
call sub_412570
mov eax [ ebp + 0x8 ]
dec eax
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_4404c9
lea ecx [ esp + 0x18 ]
call sub_412570
lea ecx [ esp + 0x38 ]
call sub_412570
lea ecx [ esp + 0x38 ]
call sub_40cdb4
mov ebx eax
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_41baef
mov ecx [ esp + 0x10 ]
movzx eax [ rw-data ]
inc ecx
mov [ esp + 0x10 ] ecx
cmp ecx eax
jl r-xdata
lea ecx [ esp + 0x18 ]
call sub_412570
mov eax [ ebp + 0xc ]
jmp r-xdata
dec eax
jne r-xdata
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] eax
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_412570
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] edi
jmp r-xdata
sub_4542c4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
inc esi
mov [ esp + 0x14 ] edi
cmp edi esi
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
xor ebx ebx
mov ecx rw-data
mov [ rw-data ] ebx
call sub_41cf79
mov ecx eax
mov [ esp + 0x10 ] ecx
cmp [ ecx + 0x14 ] 0x4
jg r-xdata
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] esi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] esi
mov [ esp + 0x38 ] r--data
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
cmp [ ecx + 0x14 ] ebx
jle r-xdata
push ecx
lea eax [ esp + 0x13 ]
push eax
push ecx
push ebx
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
mov [ esp + 0x2b ] bl
call sub_456a38
test al al
je r-xdata
mov edi ebx
mov esi ebx
cmp [ rw-data ] esi
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_412570
mov eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push 0x4
lea ecx [ esp + 0x2c ]
mov [ rw-data ] edi
call sub_40d2c0
test al al
je r-xdata
mov eax edi
sub eax ebx
je r-xdata
mov edi [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
call sub_412570
mov eax [ ebp + 0x14 ]
mov [ esp + 0x24 ] esi
jmp r-xdata
dec eax
je r-xdata
cmp [ esp + 0xf ] bl
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_4084a6
mov eax [ esp + 0x30 ]
push r--data
push [ eax ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x18 ]
call sub_412570
mov eax [ ebp + 0x18 ]
jmp r-xdata
dec eax
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_4404c9
lea ecx [ esp + 0x18 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_40cdb4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
push 0x2
pop ebx
mov [ esp + 0x24 ] 0x7
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_41baef
mov eax [ esp + 0x10 ]
inc edi
cmp edi [ eax + 0x14 ]
jl r-xdata
lea ecx [ esp + 0x18 ]
call sub_412570
mov eax [ ebp + 0x1c ]
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_4404c9
lea ecx [ esp + 0x18 ]
call sub_412570
lea ecx [ esp + 0x28 ]
call sub_412570
mov eax esi
jmp r-xdata
sub_45447e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
cmp eax 0x8
jae r-xdata
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
xor ebx ebx
pop ecx
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] ebx
jbe r-xdata
push 0x8
pop eax
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
xor edi edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + ebx * 4 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov ecx [ edx + 0x4 ]
mov [ edi + 0x4 ] ecx
jmp r-xdata
push 0x8
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + ebx * 4 ] edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
sub_454507
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi ]
mov edi ecx
mov [ edi ] eax
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov eax [ esi + 0x24 ]
mov [ edi + 0x24 ] eax
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
inc [ eax ]
mov al [ esi + 0x30 ]
mov [ edi + 0x30 ] al
mov eax [ esi + 0x34 ]
mov [ edi + 0x34 ] eax
mov eax [ esi + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ esi + 0x3c ]
mov [ edi + 0x3c ] eax
mov eax [ esi + 0x40 ]
mov [ edi + 0x40 ] eax
inc [ eax ]
lea eax [ esi + 0x44 ]
push eax
lea ecx [ edi + 0x44 ]
call sub_45447e
mov eax [ esi + 0x54 ]
mov [ edi + 0x54 ] eax
lea eax [ esi + 0x58 ]
push eax
lea ecx [ edi + 0x58 ]
call sub_4546b0
mov al [ esi + 0xd0 ]
mov [ edi + 0xd0 ] al
mov eax [ esi + 0xd4 ]
mov [ edi + 0xd4 ] eax
mov eax [ esi + 0xd8 ]
mov [ edi + 0xd8 ] eax
mov al [ esi + 0xdc ]
mov [ edi + 0xdc ] al
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4545cf
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ esi + 0x20 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call sub_40caee
push [ ebp + 0xc ]
lea ecx [ esi + 0x34 ]
call sub_40caee
lea ecx [ esi + 0x44 ]
call sub_45469c
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ esi + 0x58 ]
mov [ esi + 0x54 ] ebx
call sub_4546b0
mov al [ ebp + 0x14 ]
mov [ esi + 0xd0 ] al
mov eax [ rw-data ]
inc eax
mov [ esi + 0xd4 ] ebx
mov [ rw-data ] eax
mov [ esi + 0xd8 ] eax
xor eax eax
cmp [ esi + 0x38 ] ebx
mov [ esi + 0xdc ] 0x1
sete al
mov [ esi + 0x30 ] al
mov eax [ ebp + 0x10 ]
test al 0x1
je r-xdata
test al 0x2
je r-xdata
or [ esi + 0x54 ] 0x80000000
mov ecx eax
and ecx 0x4
je r-xdata
or [ esi + 0x54 ] 0x3000
test al 0x8
je r-xdata
test al 0x8
jne r-xdata
test al 0x10
je r-xdata
test ecx ecx
jne r-xdata
or [ esi + 0x54 ] 0x1
lea ecx [ ebp + 0x18 ]
call sub_403db0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x88
mov [ esi + 0xdc ] bl
or [ esi + 0x54 ] 0x2
sub_4546b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_454722
lea eax [ esi + 0x34 ]
push eax
lea ecx [ edi + 0x34 ]
call sub_454722
mov eax [ esi + 0x68 ]
mov [ edi + 0x68 ] eax
mov eax [ esi + 0x6c ]
mov [ edi + 0x6c ] eax
mov eax [ esi + 0x70 ]
mov [ edi + 0x70 ] eax
mov eax [ esi + 0x74 ]
mov [ edi + 0x74 ] eax
inc [ eax ]
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4546ee
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xe0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_454507
mov edi eax
sub_454722
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ edx ]
mov [ ecx ] ax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
inc [ eax ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov eax [ edx + 0x18 ]
mov [ ecx + 0x18 ] eax
mov eax [ edx + 0x1c ]
mov [ ecx + 0x1c ] eax
mov eax [ edx + 0x20 ]
mov [ ecx + 0x20 ] eax
inc [ eax ]
mov eax [ edx + 0x24 ]
mov [ ecx + 0x24 ] eax
mov eax [ edx + 0x28 ]
mov [ ecx + 0x28 ] eax
mov eax [ edx + 0x2c ]
mov [ ecx + 0x2c ] eax
mov eax [ edx + 0x30 ]
mov [ ecx + 0x30 ] eax
inc [ eax ]
mov eax ecx
pop ebp
retn 0x4
sub_454782
push esi
mov esi ecx
call sub_40d3d2
lea ecx [ esi + 0x10 ]
call sub_40d3d2
lea ecx [ esi + 0x20 ]
call sub_40d3d2
lea ecx [ esi + 0x30 ]
call sub_40d3d2
lea ecx [ esi + 0x40 ]
call sub_40d3d2
lea ecx [ esi + 0x50 ]
call sub_40d3d2
lea ecx [ esi + 0x60 ]
call sub_40d3d2
mov eax esi
pop esi
retn
sub_4547d7
push esi
mov esi ecx
call sub_45592d
push [ esi + 0xd4 ]
call [ CloseHandle@IAT ]
lea ecx [ esi + 0x58 ]
call sub_403db0
lea ecx [ esi + 0x44 ]
call sub_4547be
lea ecx [ esi + 0x34 ]
call sub_405cd3
lea ecx [ esi + 0x20 ]
pop esi
jmp sub_405cd3
sub_45480c
push esi
mov esi ecx
lea ecx [ esi + 0x60 ]
call sub_405cd3
lea ecx [ esi + 0x50 ]
call sub_405cd3
lea ecx [ esi + 0x40 ]
call sub_405cd3
lea ecx [ esi + 0x30 ]
call sub_405cd3
lea ecx [ esi + 0x20 ]
call sub_405cd3
lea ecx [ esi + 0x10 ]
call sub_405cd3
mov ecx esi
pop esi
jmp sub_405cd3
sub_454864
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4547be
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_454898
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x88 ]
mov ecx esi
call sub_454847
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_4548bd
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
push ecx
call sub_454883
sub_4548e8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x8 ]
xor edi edi
mov ebx edi
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
call sub_44ad14
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov ebx edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov edx [ esi + 0x4 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov eax [ eax + ebx * 4 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ edi + ecx ]
push eax
call sub_41faa0
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ebx * 4 ]
add esp 0xc
add edi [ eax + 0x4 ]
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
mov eax [ edx ]
lea edx [ edx + 0x4 ]
add ebx [ eax + 0x4 ]
dec ecx
jne r-xdata
sub_45494e
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi ] edi
je r-xdata
push edi
push edi
push 0x1
push edi
call [ CreateEventW@IAT ]
xor ecx ecx
mov [ esi ] eax
test eax eax
pop edi
setne al
pop esi
retn 0x10
push [ esi ]
call [ CloseHandle@IAT ]
mov [ esi ] edi
sub_45497b
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
je r-xdata
push ebx
mov ebx [ esi + 0x54 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
movzx eax [ edi + 0x78 ]
push 0x0
push [ edi + 0x70 ]
push [ edi + 0x30 ]
push [ edi + 0x20 ]
push eax
push [ edi + 0x10 ]
push [ esi + 0x4 ]
call [ InternetConnectW@IAT ]
mov [ esi ] eax
push 0x0
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_454a41
jmp r-xdata
push ebx
push 0x80000000
push [ edi + 0x60 ]
push eax
call [ FtpOpenFileW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0xdeadbeef
push 0x15
mov ecx esi
call sub_4556a9
jmp r-xdata
pop esi
pop ebp
retn 0xc
lea eax [ ebp + 0xc ]
push eax
push edi
call [ FtpGetFileSize@IAT ]
mov edx [ ebp + 0xc ]
xor ecx ecx
or ecx eax
xor eax eax
or edx eax
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
cmp [ ebp + 0x10 ] al
je r-xdata
push eax
push 0xdeadbeef
push 0x16
jmp r-xdata
pop edi
pop ebx
push 0x1
push eax
push eax
push edi
mov ecx esi
call sub_45550c
jmp r-xdata
mov ecx esi
call sub_4556a9
mov al bl
push edi
call [ InternetCloseHandle@IAT ]
mov bl al
test edi edi
je r-xdata
sub_454a41
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x54 ]
push ebx
and eax 0x80000000
push eax
push ebx
push ebx
push [ esi + 0x20 ]
push [ esi + 0x4 ]
call [ InternetOpenUrlW@IAT ]
mov edi eax
mov ecx esi
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
push edi
call sub_455703
push ebx
push ebx
push ebx
push ebx
push edi
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
push ebx
push 0xdeadbeef
push 0x29
jmp r-xdata
push ebx
push 0xdeadbeef
push 0x2a
mov ecx esi
push edi
call sub_454be4
cmp eax 0xc8
jne r-xdata
call sub_4556a9
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x8
push edi
call [ InternetCloseHandle@IAT ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push 0x5
push edi
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] 0x20
call [ HttpQueryInfoW@IAT ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x24 ]
push eax
call sub_42224a
pop ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
mov ecx esi
cmp [ ebp + 0xc ] bl
je r-xdata
push 0x1
push ebx
push ebx
jmp r-xdata
push edi
call sub_45550c
jmp r-xdata
mov bl al
test edi edi
je r-xdata
sub_454b20
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x7c ]
call sub_454782
lea eax [ ebp - 0x7c ]
push eax
push [ edi + 0x20 ]
call sub_4557d7
test al al
jne r-xdata
mov esi [ ebp - 0xc ]
cmp esi 0x3
je r-xdata
push 0x0
push 0xdeadbeef
push 0x1
push esi
mov ecx edi
call sub_4553f6
test al al
jne r-xdata
cmp esi 0x1
je r-xdata
lea ecx [ ebp - 0x7c ]
mov bl al
call sub_45480c
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x4
dec esi
je r-xdata
push 0x0
push 0xdeadbeef
push 0x3
jmp r-xdata
push 0x0
push 0xdeadbeef
push 0x2
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ edi + 0x8c ]
push eax
call sub_4554a5
movzx eax al
push eax
lea eax [ ebp - 0x7c ]
push eax
mov ecx edi
call sub_45497b
dec esi
dec esi
je r-xdata
mov ecx edi
call sub_4556a9
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ edi + 0x58 ]
push eax
call sub_4554a5
movzx eax al
push eax
lea eax [ ebp - 0x7c ]
push eax
mov ecx edi
call sub_454c23
jmp r-xdata
push 0x0
push 0xdeadbeef
push 0x4
jmp r-xdata
sub_454be4
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20000013
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x4
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn 0x4
sub_454c23
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp [ ebx + 0x74 ] 0x4
push edi
mov edi ecx
mov esi [ edi + 0x54 ]
mov [ ebp - 0x4 ] esi
jne r-xdata
movzx eax [ ebx + 0x78 ]
push 0x0
push 0x0
push [ ebx + 0x70 ]
push [ ebx + 0x30 ]
push [ ebx + 0x20 ]
push eax
push [ ebx + 0x10 ]
push [ edi + 0x4 ]
call [ InternetConnectW@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
or esi 0x800000
mov [ ebp - 0x4 ] esi
xor ecx ecx
push ecx
push esi
push ecx
push ecx
push ecx
push [ ebx + 0x60 ]
push ecx
push eax
call [ HttpOpenRequestW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push eax
push 0xdeadbeef
push 0xb
mov ecx edi
call sub_4556a9
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push eax
push 0xdeadbeef
push 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
test [ ebp - 0x4 ] 0x1000
je r-xdata
push ebx
push esi
mov ecx edi
call sub_455703
mov ecx edi
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
push 0x4
pop ebx
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x1f
push esi
mov [ ebp + 0x8 ] ebx
call [ InternetQueryOptionW@IAT ]
or [ ebp + 0xc ] 0x100
push ebx
lea eax [ ebp + 0xc ]
push eax
push 0x1f
push esi
call [ InternetSetOptionW@IAT ]
mov al bl
push esi
call [ InternetCloseHandle@IAT ]
push ebx
push 0xdeadbeef
push 0xd
push esi
call sub_454be4
cmp eax 0xc8
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push 0x5
push esi
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] 0x20
call [ HttpQueryInfoW@IAT ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x24 ]
push eax
call sub_42224a
pop ecx
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
mov ecx edi
cmp [ ebp + 0x10 ] bl
je r-xdata
push 0x1
push ebx
push ebx
jmp r-xdata
push esi
call sub_45550c
jmp r-xdata
call sub_4556a9
mov bl al
test esi esi
je r-xdata
sub_454d88
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
push edi
mov esi [ eax ]
mov edi ecx
push 0x29
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
push r--data
lea ecx [ edi + 0x78 ]
call sub_407e53
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ edi + 0x78 ]
call sub_40c935
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_454de4
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov ecx [ eax ]
call sub_40cdb4
mov esi [ edi + 0x4 ]
mov ebx eax
mov [ ebp + 0x8 ] esi
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x0
push [ ebp + 0x8 ]
call sub_41e387
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ esi ]
cmp [ eax + 0xd8 ] ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_468b5a
mov esi [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_455b1e
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x4 ]
call sub_41e387
push ecx
mov eax esp
lea ecx [ ebp + 0x8 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
sub_454e63
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xec
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor eax eax
cmp [ ebx + 0x8 ] 0x2
push edi
mov [ esp + 0x10 ] ecx
jbe r-xdata
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ esp + 0xc ] eax
xor eax eax
jmp r-xdata
mov [ esp + 0x14 ] al
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ esp + 0x10 ]
mov esi [ eax ]
lea eax [ ebx + 0x4 ]
sub esp 0x78
mov [ esp + 0x88 ] eax
lea eax [ ebx + 0x10 ]
mov ecx esp
push eax
call sub_4546b0
push [ esp + 0x8c ]
lea ecx [ esp + 0x94 ]
push [ esp + 0x88 ]
push edi
push esi
call sub_4545cf
push eax
lea ecx [ ebx + 0x4 ]
call sub_455a3a
lea ecx [ esp + 0x18 ]
call sub_4547d7
mov esi [ ebx + 0x8 ]
push 0x1
mov ecx [ esi ]
call sub_4558e3
mov eax [ esi ]
xor edi edi
push edi
push [ eax + 0x18 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
mov eax [ esi ]
push edi
push [ eax + 0x1c ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov bl [ esp + 0x14 ]
mov eax [ esi ]
test bl bl
je r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_41e3ee
cmp [ ebx + 0x8 ] 0x3
jbe r-xdata
mov ecx [ eax + 0x8 ]
mov edi [ eax + 0xc ]
mov [ esp + 0xc ] ecx
mov eax [ eax + 0xd8 ]
mov [ esp + 0xc ] eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x10 ]
call sub_455a0f
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov eax [ esp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] edi
test bl bl
jne r-xdata
sub_454f9e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp [ ebx + 0x8 ] 0x0
push edi
mov edi ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov esi [ edi + 0x4 ]
mov [ ebp - 0x4 ] esi
mov ebx eax
mov esi [ edi + 0x4 ]
xor ebx ebx
mov [ ebp + 0x8 ] esi
push ecx
mov eax esp
lea ecx [ ebp - 0x4 ]
and [ eax ] 0x0
call sub_402e2a
mov ebx [ ebp + 0x8 ]
test al al
je r-xdata
mov eax [ esi ]
cmp [ eax + 0xd8 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov ecx [ esi ]
push 0x0
add ecx 0xd4
call sub_4559c0
test al al
jne r-xdata
push 0x0
push 0x1
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_468b5a
mov esi [ ebp - 0x4 ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_468b5a
mov esi [ ebp + 0x8 ]
jmp r-xdata
inc ebx
or eax 0xffffffff
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
jmp r-xdata
push ecx
mov ecx esp
and [ ecx ] 0x0
lea ecx [ ebp - 0x4 ]
call sub_402e2a
test al al
je r-xdata
push ecx
mov eax esp
lea ecx [ ebp + 0x8 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
xor edx edx
sub eax edx
je r-xdata
push 0x6
push 0x1
push [ ebp + 0xc ]
call sub_403320
mov eax [ esi ]
push 0x0
mov ebx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push 0x1
push 0x0
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_4114a0
mov edi eax
add esp 0x1c
mov ecx edi
call sub_412570
mov eax [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x2
mov [ edi ] ebx
mov [ edi + 0x4 ] eax
mov eax [ esi ]
push 0x1
mov ebx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push 0x1
push 0x0
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_4114a0
mov edi eax
add esp 0x10
mov ecx edi
call sub_412570
mov eax [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x2
mov [ edi ] ebx
mov [ edi + 0x4 ] eax
mov ecx [ esi ]
xor edi edi
push edi
add ecx 0xd4
call sub_4559c0
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
push 0x2
push 0x1
push edi
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x10
mov ecx eax
call sub_41e387
mov ecx [ esi ]
call sub_455484
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
push 0x3
push 0x1
push edi
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x10
mov ecx eax
call sub_41e387
mov eax [ esi ]
push 0x4
mov ebx [ eax + 0x18 ]
push 0x1
push edi
push [ ebp + 0xc ]
call sub_4114a0
mov edi eax
add esp 0x10
mov ecx edi
call sub_412570
xor ecx ecx
inc ecx
mov [ edi + 0xc ] ecx
mov [ edi ] ebx
mov eax [ esi ]
mov edi [ eax + 0x1c ]
push 0x5
push ecx
push 0x0
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x10
mov esi eax
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edi [ eax + 0x8 ]
mov ebx [ eax + 0xc ]
dec eax
je r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
mov eax [ esi ]
mov edi [ eax + 0x10 ]
mov ebx [ eax + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov ecx [ esi ]
push edx
add ecx 0xd4
call sub_4559c0
dec eax
je r-xdata
mov ecx [ esi ]
call sub_455484
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
call sub_41e387
jmp r-xdata
mov eax [ esi ]
mov edi [ eax + 0x18 ]
dec eax
je r-xdata
mov eax [ esi ]
mov edi [ eax + 0x1c ]
jmp r-xdata
push edx
push 0x2
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
sub_455235
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xe4
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp [ esi + 0x8 ] 0x1
push edi
mov [ esp + 0xc ] ebx
jbe r-xdata
xor edi edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
sub esp 0x78
mov esi [ eax ]
lea eax [ ebx + 0x10 ]
mov ecx esp
push eax
call sub_4546b0
push 0x0
push edi
push r--data
push esi
lea ecx [ esp + 0x98 ]
call sub_4545cf
push 0x0
lea ecx [ esp + 0x14 ]
call sub_4558e3
mov esi [ ebp + 0xc ]
mov edi [ esp + 0x20 ]
mov ebx [ esp + 0x24 ]
mov ecx esi
call sub_412570
mov [ esi + 0x4 ] ebx
mov ebx [ esp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push [ esp + 0x2c ]
add ecx ebx
call sub_44d7e4
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push [ esp + 0x30 ]
add ecx ebx
call sub_407ba9
lea ecx [ esp + 0x10 ]
call sub_4547d7
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4552fd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xf4
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x1
mov edi ecx
jbe r-xdata
xor ebx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov ebx eax
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ esp + 0x68 ]
call sub_4548e8
mov eax [ esp + 0x28 ]
and [ esp + 0x18 ] 0x0
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
push ecx
lea eax [ esp + 0x14 ]
push eax
mov eax [ edi ]
mov [ esp + 0x24 ] 0x2
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_4556da
lea ecx [ esp + 0x10 ]
call sub_412570
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push [ esp + 0x3c ]
add ecx edi
call sub_44d7e4
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push [ esp + 0x40 ]
add ecx edi
call sub_407ba9
mov ecx [ ebp + 0xc ]
push ebx
call sub_40ca8e
jmp r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
sub esp 0x78
mov esi [ eax ]
lea eax [ edi + 0x10 ]
mov ecx esp
push eax
call sub_4546b0
push 0x0
push ebx
mov ebx r--data
push ebx
push esi
lea ecx [ esp + 0xa8 ]
call sub_4545cf
push 0x1
lea ecx [ esp + 0x24 ]
call sub_4558e3
cmp [ esp + 0x38 ] 0x0
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_4547d7
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4553f6
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
push esi
inc ebx
push edi
mov edi ecx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
movzx eax [ edi + 0x58 ]
movzx eax [ edi + 0x8c ]
jmp r-xdata
mov eax [ edi + 0xc0 ]
xor esi esi
push esi
cmp ecx ebx
jne r-xdata
lea edx [ edi + 0x7c ]
movsx ecx ax
lea edx [ edi + 0xb0 ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp ecx 0x2
jne r-xdata
push esi
push esi
push ebx
jmp r-xdata
push esi
push esi
push esi
push r--data
push [ edx ]
push 0x3
jmp r-xdata
push eax
call [ InternetOpenW@IAT ]
mov [ edi + 0x4 ] eax
cmp eax esi
jne r-xdata
cmp [ edi + 0xdc ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov al bl
push 0x8
lea ecx [ ebp - 0x8 ]
push ecx
push 0x32
push esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] esi
call [ InternetSetOptionW@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_455484
push ebx
push esi
mov esi ecx
xor ebx ebx
push ebx
lea ecx [ esi + 0xd4 ]
call sub_4559c0
test al al
je r-xdata
pop esi
mov al bl
pop ebx
retn
cmp [ esi + 0x18 ] ebx
jne r-xdata
inc ebx
sub_4554a5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
movsx eax [ eax ]
xor ebx ebx
dec eax
je r-xdata
mov al bl
pop ebx
pop ebp
retn 0x4
dec eax
je r-xdata
mov bl 0x1
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x26
push ebx
mov [ ebp + 0x8 ] ebx
call [ InternetQueryOptionW@IAT ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_42010a
push [ ebp + 0x8 ]
mov esi eax
push ebx
push esi
call sub_421970
add esp 0x10
lea eax [ ebp + 0x8 ]
push eax
push esi
push 0x26
push ebx
call [ InternetQueryOptionW@IAT ]
cmp [ esi + 0x4 ] ebx
push esi
setne bl
call j_sub_4228ca#2
pop ecx
pop esi
jmp r-xdata
sub_455521
push ebp
mov ebp esp
sub esp 0x404
push ebx
push esi
push edi
mov esi ecx
push r--data
push [ esi + 0x34 ]
call sub_424129
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
push eax
push 0xdeadbeef
push 0x1f
jmp r-xdata
push ebx
push 0xdeadbeef
push 0x20
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov ecx esi
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x4
push edi
call sub_424274
pop ecx
mov eax [ esi + 0x8 ]
or eax [ esi + 0xc ]
mov ecx esi
jne r-xdata
push edi
push 0x1
push [ ebp - 0x4 ]
lea eax [ ebp - 0x404 ]
push eax
call sub_42373e
mov eax [ ebp - 0x4 ]
add esp 0x10
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] ebx
test eax eax
jne r-xdata
push 0x1
push ebx
push ebx
jmp r-xdata
push ebx
push 0xdeadbeef
push 0x21
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x400
lea eax [ ebp - 0x404 ]
push eax
push [ ebp + 0x8 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
call sub_4556a9
mov bl al
test edi edi
je r-xdata
sub_4555da
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor ebx ebx
push ebx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x8 ] 0x1
call [ InternetQueryDataAvailable@IAT ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
jne r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov ecx 0x400
mov [ ebp - 0x8 ] ecx
mov eax [ esi + 0x8 ]
or eax [ esi + 0xc ]
jne r-xdata
call sub_4548d9
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x8 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
push 0x1
push ebx
push ebx
push ebx
push 0xdeadbeef
push 0x21
jmp r-xdata
push edi
call j_sub_4228ca#2
pop ecx
push ebx
push 0xdeadbeef
push 0x20
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov ecx esi
call sub_4556a9
pop edi
pop esi
pop ebx
leave
retn 0x4
push edi
call j_sub_4228ca#2
pop ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x44 ]
push edi
call sub_45595a
mov eax [ ebp - 0x4 ]
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_4556a9
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xdeadbeef
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x18 ] eax
jne r-xdata
lea ecx [ esi + 0xd4 ]
call sub_455692
mov al [ ebp + 0x10 ]
pop esi
pop ebp
retn 0xc
call [ GetLastError@IAT ]
mov [ esi + 0x1c ] eax
sub_4556da
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
lea esi [ ecx + 0x4 ]
mov ecx esi
call sub_407be1
lea ecx [ eax + 0x20 ]
call sub_40d89e
mov ecx esi
call sub_407be1
mov [ eax + 0x30 ] 0x0
pop esi
pop ebp
retn 0x8
sub_455703
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
lea edx [ ecx + 0x90 ]
cmp [ eax + 0x70 ] 0x1
je r-xdata
cmp [ eax + 0x70 ] 0x1
push edi
lea edi [ ecx + 0xa0 ]
je r-xdata
lea edx [ ecx + 0x5c ]
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
lea edi [ ecx + 0x6c ]
pop edi
pop ebp
retn 0x8
inc eax
push eax
push [ edx ]
push 0x2b
push [ ebp + 0x8 ]
call [ InternetSetOptionW@IAT ]
mov eax [ edi + 0x4 ]
inc eax
push eax
push [ edi ]
push 0x2c
push [ ebp + 0x8 ]
call [ InternetSetOptionW@IAT ]
sub_455755
push ebx
mov ebx edx
push esi
mov eax [ ebx + 0x4 ]
push edi
mov edi ecx
mov ecx [ eax ]
call sub_40cdb4
push 0x2
pop ecx
dec eax
je r-xdata
xor eax eax
inc eax
dec eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ edi + 0x24 ]
call sub_40c935
dec eax
je r-xdata
mov [ edi ] cx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ edi + 0x4 ]
call sub_40c935
dec eax
jne r-xdata
mov eax [ ebx + 0x8 ]
sub eax ecx
je r-xdata
mov [ edi ] ax
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ edi + 0x14 ]
call sub_40c935
sub_4557d7
push ebp
mov ebp esp
sub esp 0x4c
push esi
push 0x38
xor esi esi
lea eax [ ebp - 0x48 ]
push esi
push eax
call sub_421970
xor eax eax
inc eax
add esp 0xc
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x4c ]
push eax
push esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4c ] 0x7c
call sub_4218fb
pop ecx
push eax
push [ ebp + 0x8 ]
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
push edi
push [ ebp - 0x44 ]
mov ecx ebx
push esi
push [ ebp - 0x48 ]
call sub_4080ea
push [ ebp - 0x38 ]
lea ecx [ ebx + 0x10 ]
push esi
push [ ebp - 0x3c ]
call sub_4080ea
push [ ebp - 0x2c ]
lea ecx [ ebx + 0x20 ]
push esi
push [ ebp - 0x30 ]
call sub_4080ea
push [ ebp - 0x24 ]
lea ecx [ ebx + 0x30 ]
push esi
push [ ebp - 0x28 ]
call sub_4080ea
push [ ebp - 0x1c ]
lea ecx [ ebx + 0x40 ]
push esi
push [ ebp - 0x20 ]
call sub_4080ea
push [ ebp - 0x14 ]
lea esi [ ebx + 0x50 ]
push 0x0
push [ ebp - 0x18 ]
mov ecx esi
call sub_4080ea
push esi
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebx + 0x40 ]
call sub_43c0a2
push eax
lea ecx [ ebx + 0x60 ]
call sub_40c935
lea ecx [ ebp - 0x10 ]
call sub_405cd3
mov ax [ ebp - 0x34 ]
mov [ ebx + 0x78 ] ax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x74 ] eax
dec eax
je r-xdata
xor al al
jmp r-xdata
mov [ ebx + 0x70 ] 0x1
dec eax
je r-xdata
pop esi
leave
retn 0x8
mov [ ebx + 0x70 ] 0x2
jmp r-xdata
mov [ ebx + 0x70 ] 0x3
jmp r-xdata
pop edi
mov al 0x1
pop ebx
sub_4558e3
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xd0 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_454b20
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub esp 0x10
lea ecx [ esi + 0xd4 ]
call sub_45494e
push esi
push 0x0
push sub_4559b1
call sub_424b5d
xor eax eax
add esp 0xc
cmp [ esi + 0x18 ] eax
sete al
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45592d
push edi
mov edi ecx
push [ edi + 0x4 ]
call [ InternetCloseHandle@IAT ]
push [ edi ]
call [ InternetCloseHandle@IAT ]
and [ edi ] 0x0
and [ edi + 0x4 ] 0x0
push 0x2710
lea ecx [ edi + 0xd4 ]
call sub_4559c0
pop edi
retn
sub_45595a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
test ebx ebx
je r-xdata
xor al al
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
call sub_455a92
push 0x0
call j_sub_4228ca#2
mov eax [ edi + 0x4 ]
pop ecx
mov ecx [ edi + 0x8 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov [ eax ] ebx
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov [ eax + 0x4 ] esi
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4559c0
push ebp
mov ebp esp
cmp [ ecx ] 0x0
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ecx ]
call [ WaitForSingleObject@IAT ]
neg eax
sbb eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_4559e0
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push ecx
call sub_402b56
sub_455a0f
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx + 0x8 ]
push ecx
mov [ esi + 0x4 ] eax
call sub_4548bd
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ eax + 0x4 ] 0x0
jmp r-xdata
dec [ esi + 0x8 ]
sub_455a3a
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_4546ee
mov edi eax
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_4546ee
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_455a92
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x8
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
add eax eax
cmp eax 0x8
jae r-xdata
xor edi edi
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov ecx [ edx + 0x4 ]
mov [ edi + 0x4 ] ecx
jmp r-xdata
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
je r-xdata
push 0x8
pop eax
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
sub_455b1e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_4548bd
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_455b5e
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_424fc0
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_455b9e
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_425110
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_455bde
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
or edx 0xffffffff
mov eax [ eax ]
lea ecx [ ebp + 0x8 ]
mov ax [ eax ]
mov [ ebp + 0x8 ] ax
xor eax eax
mov [ ebp + 0xa ] ax
call sub_448932
mov esi [ ebp + 0xc ]
mov ebx eax
mov ecx esi
movzx edi [ ebx ]
call sub_412570
mov [ esi + 0xc ] 0x1
push ebx
mov [ esi ] edi
call j_sub_4228ca#2
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_455c38
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ eax ]
mov ecx esi
movzx edi [ eax ]
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_455c90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
xor esi esi
inc esi
mov edi eax
cmp [ ebp + 0x8 ] esi
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40cdb4
and edi eax
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
sub_455ce2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
not edi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_455d13
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor esi esi
inc esi
push 0x10
xor ebx ebx
cmp [ edx + 0x8 ] 0x3
mov [ ebp - 0xc ] ecx
pop edi
mov [ ebp - 0x4 ] esi
jb r-xdata
cmp [ edx + 0x8 ] 0x2
jb r-xdata
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0xc ] 0xa
jne r-xdata
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
cmp edi 0x20
jge r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_4084a6
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ eax ] ebx
je r-xdata
call sub_44be39
cmp eax 0x29
je r-xdata
and ebx eax
mov [ ebp + 0x8 ] ebx
test esi esi
jns r-xdata
or ebx 0xffffffff
mov ecx edi
shl ebx cl
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx eax [ eax ]
sub eax 0x42
je r-xdata
cmp esi edi
jge r-xdata
add esi edi
js r-xdata
push 0x8
dec eax
dec eax
je r-xdata
sub esi edi
test esi esi
jne r-xdata
jmp r-xdata
push 0x20
jmp r-xdata
sub eax 0x13
je r-xdata
xor ebx ebx
mov ecx edi
sub ecx esi
inc ebx
shl ebx cl
mov [ ebp - 0xc ] ecx
mov ecx esi
dec ebx
cmp edi 0x20
jge r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop edi
mov esi [ ebp - 0x4 ]
sub eax 0xb
je r-xdata
mov eax ebx
and eax [ ebp - 0x4 ]
shl eax cl
or [ ebp + 0x8 ] eax
mov edx ebx
and edx eax
xor eax eax
shl edx cl
inc eax
mov ecx edi
shl eax cl
dec eax
and edx eax
or [ ebp + 0x8 ] edx
jmp r-xdata
mov [ esi ] eax
xor eax eax
mov [ esi + 0xc ] 0x1
dec eax
dec eax
je r-xdata
not ebx
xor eax eax
inc eax
mov ecx edi
shl eax cl
sub eax ebx
lea ebx [ eax - 0x1 ]
jmp r-xdata
cmp edi 0x20
jge r-xdata
sub eax 0x13
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov edx [ ebp - 0xc ]
and ebx [ ebp - 0x4 ]
lea ecx [ edx - 0x1 ]
mov eax 0x7fffffff
sar eax cl
mov ecx edx
sar ebx cl
and eax ebx
or eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov edx [ ebp - 0xc ]
xor eax eax
inc eax
push ebx
mov [ esi + 0xc ] eax
mov [ esi ] ebx
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_455ea2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov ecx [ esi + 0x4 ]
mov edi [ ecx ]
mov ecx [ ecx + 0x4 ]
test eax eax
js r-xdata
call sub_40cdb4
mov esi eax
mov ecx edi
neg esi
call sub_40cdb4
mov edi eax
mov ecx esi
shl edi cl
call sub_40cdb4
mov ecx edi
mov esi eax
call sub_40cdb4
mov edi eax
mov ecx esi
sar edi cl
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_455f08
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
xor esi esi
inc esi
mov edi eax
cmp [ ebp + 0x8 ] esi
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40cdb4
xor edi eax
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
sub_455f5a
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_425810
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
push 0x0
fstp [ esi ]
mov ecx esi
mov [ esi + 0xc ] 0x3
call sub_40d00b
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_456927
push eax
mov ecx esi
call sub_40d89e
lea ecx [ ebp - 0x10 ]
call sub_412570
xor eax eax
pop esi
leave
retn 0x8
sub_455fbf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
call sub_40cdb4
test eax eax
jne r-xdata
cmp eax 0xff
jle r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_448b50
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
jmp r-xdata
cmp eax 0x80
jge r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
jmp r-xdata
xor eax eax
pop esi
leave
retn 0x8
or edx 0xffffffff
lea ecx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] 0x0
call sub_448553
mov ecx [ ebp + 0xc ]
mov esi eax
push esi
call sub_40ca8e
push esi
call j_sub_4228ca#2
pop ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ax
xor eax eax
mov [ ebp + 0xa ] ax
lea eax [ ebp + 0x8 ]
push eax
call sub_40ca8e
jmp r-xdata
sub_456071
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
call sub_40cdb4
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp eax 0xffff
jle r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_448b50
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
jmp r-xdata
mov [ ebp + 0x8 ] ax
xor eax eax
mov [ ebp + 0xa ] ax
lea eax [ ebp + 0x8 ]
push eax
call sub_40ca8e
push r--data
call sub_40ca8e
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
jmp r-xdata
xor eax eax
pop esi
leave
retn 0x8
sub_4560f3
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
push 0x10
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
call sub_41bcea
pop ecx
test al al
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
cmp [ esi + 0x4 ] 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
dec eax
je r-xdata
call sub_412570
mov eax [ ebp - 0x8 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
call sub_412570
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
dec eax
je r-xdata
dec eax
jne r-xdata
push 0x2
push [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push [ ebp - 0x8 ]
push eax
call sub_456927
mov ecx eax
call sub_40d00b
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
call sub_412570
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
sub_4561c7
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_424cc0
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_456207
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_4256e0
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
push 0x0
fstp [ esi ]
mov ecx esi
mov [ esi + 0xc ] 0x3
call sub_40d00b
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_456927
push eax
mov ecx esi
call sub_40d89e
lea ecx [ ebp - 0x10 ]
call sub_412570
xor eax eax
pop esi
leave
retn 0x8
sub_45626c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov edi ecx
mov ecx [ eax ]
call sub_44be63
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x7
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_44be63
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi + 0xc ] 0x7
mov [ esi ] edi
jmp r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4562d8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x5
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_45630a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xb
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_45633c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov ebx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov eax [ ebx + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_40d16a
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
cmp [ edi + 0xc ] 0x3
jne r-xdata
mov ecx edi
call sub_412620
call sub_471e16
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
mov ecx [ eax ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_412620
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx esi
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
sub_4563bd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
push 0x7
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
xor edi edi
mov ecx esi
call sub_44be63
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor edi edi
inc edi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45640b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov ebx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov eax [ ebx + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_40d16a
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
cmp [ edi + 0xc ] 0x1
je r-xdata
mov ecx esi
call sub_412570
xor eax eax
inc eax
mov [ esi ] eax
mov [ esi + 0xc ] eax
cmp [ edi + 0xc ] 0x2
je r-xdata
mov ecx edi
call sub_412620
call sub_471e16
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
mov ecx [ eax ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_412620
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
sub_456492
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d16a
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_4564c2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x7
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_4564f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x4
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_456526
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xf
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_456558
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_424d50
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_456598
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x4 ]
xor ebx ebx
mov ecx [ edi ]
inc ebx
push ebx
call sub_40d2c0
test al al
je r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ edi ]
call sub_40d18c
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
push ebx
call sub_40d2c0
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_412620
push ecx
push ecx
mov ecx esi
fstp [ esp ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_4255f0
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x10
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov ecx [ edi + 0x4 ]
call sub_40d18c
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
call sub_40cdb4
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
call sub_40d00b
or eax edx
je r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx ]
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
mov ecx esi
mov edi eax
call sub_40cdb4
cdq
idiv edi
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi edx
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov ebx [ ecx ]
mov ecx [ ecx + 0x4 ]
call sub_40d00b
mov ecx ebx
mov edi eax
mov esi edx
call sub_40d00b
push esi
push edi
push edx
push eax
call sub_433210
mov edi [ ebp + 0xc ]
mov ecx edi
mov esi eax
mov ebx edx
call sub_412570
mov [ edi + 0xc ] 0x2
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_4566a8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax ]
call sub_44be63
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4566d7
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x3
mov ebx ecx
mov [ ebp - 0x1 ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_412570
and [ edi ] 0x0
xor ecx ecx
inc ecx
mov [ edi + 0xc ] ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
call sub_44bf19
fstp [ ebp - 0x14 ]
mov ecx edi
call sub_412570
fld [ ebp - 0x14 ]
cmp eax ecx
je r-xdata
mov [ ebp - 0x1 ] al
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_412620
fst [ ebp - 0x14 ]
fldz
fcompp
fnstsw ax
test ah 0x1
je r-xdata
add eax 0xfffffffe
cmp eax ecx
ja r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
jmp r-xdata
call sub_44bf19
fmul [ ebp - 0x14 ]
mov ecx edi
fstp [ ebp - 0x14 ]
call sub_412570
fld [ ebp - 0x14 ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ esi + 0x4 ]
push 0x5
mov ecx [ eax ]
call sub_40d2c0
test al al
jne r-xdata
fstp [ edi ]
mov [ edi + 0xc ] 0x3
mov eax [ esi + 0x4 ]
push 0x5
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0xc ] eax
call sub_40d2c0
test al al
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp - 0x1 ] al
je r-xdata
call sub_412620
fstp [ ebp - 0xc ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_412620
fst [ ebp - 0x14 ]
fcomp [ ebp - 0xc ]
fnstsw ax
test ah 0x1
je r-xdata
call sub_40cdb4
mov ecx [ ebp + 0x8 ]
mov esi eax
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx ]
call sub_40cdb4
mov ecx eax
mov eax esi
sub eax ecx
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x8 ] eax
cmp ecx esi
jge r-xdata
call sub_44bf19
fld [ ebp - 0xc ]
fld [ ebp - 0x14 ]
mov ecx edi
fsub st1
fxch st2
fmulp st1
faddp st1
fstp [ ebp - 0x14 ]
call sub_412570
fld [ ebp - 0x14 ]
jmp r-xdata
test eax eax
jle r-xdata
cmp eax 0x7ffffff
jge r-xdata
call sub_44bed4
cdq
idiv [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx edi
add esi edx
call sub_412570
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
jmp r-xdata
inc eax
mov [ ebp + 0x8 ] eax
sub_456882
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_425634
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_4568c2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_407bef
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4568e7
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
fstp [ esp ]
call sub_425260
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
add esp 0x8
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
xor eax eax
pop esi
leave
retn 0x8
sub_456927
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
xor edx edx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
inc ebx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ebx
sub eax edx
je r-xdata
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov ecx edi
add ecx 0x80000000
mov eax ebx
adc eax edx
cmp eax edx
ja r-xdata
mov ecx esi
dec eax
je r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] ebx
jb r-xdata
call sub_412570
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] ebx
mov [ esi ] eax
jmp r-xdata
call sub_412570
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] eax
jmp r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov [ esi ] edi
pop edi
sub_4569ba
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ ebp + 0x8 ]
call sub_41a63d
mov edi [ ebp + 0xc ]
test edi edi
jns r-xdata
mov eax 0xff
cmp edi eax
jle r-xdata
xor edi edi
mov esi [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
push eax
push ebx
push edi
push esi
call sub_45a720
lea eax [ ebx + 0x3 ]
push eax
lea eax [ ebx + 0x2 ]
push eax
mov eax esi
push edi
shr eax 0x8
push eax
call sub_45a720
lea eax [ ebx + 0x5 ]
push eax
lea eax [ ebx + 0x4 ]
push eax
push edi
sar esi 0x10
push esi
call sub_45a720
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov edi eax
sub_456a38
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
mov ecx esi
call sub_412570
xor ebx ebx
push ebx
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
call sub_40109f
lea ecx [ esp + 0x20 ]
call sub_40d3d2
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_456b60
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_405cd3
mov ecx rw-data
call sub_401188
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x1c
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x24 ]
mov [ esp + 0x18 ] r--data
push ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_40ace0
cmp [ esp + 0x18 ] 0x1
jbe r-xdata
mov bl 0x1
mov ecx edi
call sub_40124c
push [ ebp + 0x1c ]
mov esi eax
push [ ebp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x1c ]
push eax
push ebx
mov ecx edi
mov [ esp + 0x20 ] ebx
call sub_413680
test eax eax
jns r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push esi
mov ecx edi
call sub_401ac0
lea ecx [ esp + 0x10 ]
call sub_405800
push esi
mov ecx edi
call sub_401ac0
jmp r-xdata
sub_456b19
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowRect@IAT ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov [ ecx ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
leave
retn 0xc
push eax
push [ ebp + 0x10 ]
call [ ClientToScreen@IAT ]
sub_456b60
push ebp
mov ebp esp
sub esp 0xa4
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_41cf79
mov ecx eax
test ecx ecx
je r-xdata
xor al al
mov ebx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x8 ]
sub eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] r--data
cmp eax [ ecx + 0x18 ]
jl r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4404c9
cmp eax [ ecx + 0x14 ]
jg r-xdata
mov esi [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_40c935
push r--data
mov ecx esi
call sub_4039e8
mov eax [ ebp + 0x14 ]
mov edi eax
cmp eax [ ebx + 0x8 ]
jae r-xdata
push r--data
mov ecx esi
call sub_4039e8
lea ecx [ ebp - 0x10 ]
call sub_4404c9
mov al 0x1
jmp r-xdata
push edi
push r--data
lea eax [ ebp - 0xa0 ]
push 0x40
push eax
call sub_42592d
add esp 0x10
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40caee
mov eax [ ebx + 0x4 ]
push 0x1
push 0x0
push [ eax + edi * 4 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40d380
lea ecx [ ebp - 0x20 ]
call sub_405cd3
mov ecx esi
cmp edi [ ebp + 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push r--data
push r--data
jmp r-xdata
call sub_4039e8
lea eax [ ebp - 0xa0 ]
push eax
mov ecx esi
call sub_4039e8
inc edi
cmp edi [ ebx + 0x8 ]
jb r-xdata
sub_456c64
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
and [ esp + 0x4 ] 0x0
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov [ esp + 0x10 ] ebx
cmp [ edi + 0x480 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
pop edi
mov [ esi ] ebx
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov eax [ eax + 0x4 ]
push 0xe
mov esi [ eax ]
mov ecx esi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
mov eax [ edi + 0x47c ]
mov eax [ eax ]
mov [ eax + 0x11 ] 0x1
jmp r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x34 ] eax
inc [ eax ]
lea ecx [ esp + 0x28 ]
lea eax [ esp + 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
mov ecx eax
jmp r-xdata
mov esi [ edi + 0x478 ]
mov [ esp + 0xc ] esi
test bl 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
and ebx 0xfffffffd
call sub_405cd3
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x24 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_40b8a7
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
mov esi [ edi + 0x478 ]
mov [ esp + 0xc ] esi
lea ecx [ esp + 0x38 ]
call sub_405cd3
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x10 ]
call sub_468b5a
mov esi [ esp + 0xc ]
jmp r-xdata
inc ebx
lea ecx [ esp + 0x18 ]
call sub_405cd3
mov ebx [ esp + 0x10 ]
mov ecx [ esi ]
lea edx [ esp + 0x18 ]
call sub_405b2a
test al al
jne r-xdata
push ecx
mov eax esp
lea ecx [ esp + 0x10 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
mov eax [ esi ]
mov [ eax + 0x11 ] 0x1
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x10 ]
call sub_468b5a
mov esi [ esp + 0xc ]
jmp r-xdata
push ecx
mov eax esp
lea ecx [ esp + 0x10 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
sub_456df1
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0x8 ] 0x0
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1 ] 0x1
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x1c ]
inc [ eax ]
mov [ ebp - 0x10 ] eax
call sub_40b8a7
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call [ CharUpperBuffW@IAT ]
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_40a4f6
cmp [ eax ] 0x40
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
push ecx
push r--data
lea ecx [ ebp - 0x1c ]
call sub_43e19e
cmp eax 0xffffffff
jne r-xdata
cmp [ edi + 0x8 ] 0x3
jne r-xdata
mov esi [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x1
je r-xdata
test [ ebp - 0xc ] 0x100
je r-xdata
cmp [ ebp - 0x1 ] cl
je r-xdata
mov esi [ ebp - 0x8 ]
xor esi esi
inc esi
jmp r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
call sub_40d89e
jmp r-xdata
mov eax [ ebx ]
xor edi edi
mov ecx [ eax + 0x4 ]
push 0x0
inc edi
push edi
add ecx ebx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] edi
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx ebx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax [ edi + 0x4 ]
push esi
push ecx
push [ eax + 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40d380
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
and al 0x4
neg al
sbb al al
not al
and [ ebp - 0x1 ] al
jmp r-xdata
push 0x2
pop esi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x2
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
and [ esi ] 0x0
jmp r-xdata
push esi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_40d2d2
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
sub_456f7d
push ebp
mov ebp esp
push ecx
push ecx
push 0x10000
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_404bce
push 0x7fff
push [ ebp - 0x8 ]
push [ rw-data ]
call [ GetWindowTextW@IAT ]
push [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40ca8e
lea ecx [ ebp - 0x8 ]
call sub_404fd2
xor eax eax
leave
retn 0x8
sub_456fc3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
push [ rw-data ]
call [ SetWindowTextW@IAT ]
xor eax eax
pop esi
pop ebp
retn 0x8
sub_456fee
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
mov [ ebp + 0x8 ] 0x1f4
mov ebx 0x3e8
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov [ ebp + 0x8 ] eax
push ebx
push [ ebp + 0x8 ]
call [ Beep@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
mov ebx eax
sub_45703c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
test eax eax
jne r-xdata
push 0x1
push eax
jmp r-xdata
call [ BlockInput@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_457099
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x23c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ecx
push r--data
mov ecx ebx
mov [ esp + 0x24 ] esi
call sub_40ca8e
push [ rw-data ]
call [ OpenClipboard@IAT ]
mov edi [ IsClipboardFormatAvailable@IAT ]
push 0xd
call edi
test eax eax
je r-xdata
push 0x1
call edi
test eax eax
je r-xdata
push 0xd
call [ GetClipboardData@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0xf
call edi
test eax eax
je r-xdata
push 0x1
call [ GetClipboardData@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ GlobalLock@IAT ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
push 0x0
push 0x3
call [ CountClipboardFormats@IAT ]
test eax eax
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
je r-xdata
push 0xf
call [ GetClipboardData@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ GlobalLock@IAT ]
test eax eax
je r-xdata
push eax
mov ecx ebx
call sub_40ca8e
push edi
call [ GlobalUnlock@IAT ]
jmp r-xdata
call [ CloseClipboard@IAT ]
push 0x0
push 0x4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
push 0x2
jmp r-xdata
push edi
call [ GlobalLock@IAT ]
test eax eax
je r-xdata
push eax
lea ecx [ esp + 0x14 ]
call sub_43e0f5
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_45ae5a
push eax
mov ecx ebx
call sub_407bef
lea ecx [ esp + 0x28 ]
call sub_405cd3
push edi
call [ GlobalUnlock@IAT ]
lea ecx [ esp + 0x10 ]
call sub_405cd3
jmp r-xdata
call [ CloseClipboard@IAT ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
jmp r-xdata
add ecx esi
call sub_44d7e4
lea ecx [ esp + 0x10 ]
call sub_40d3d2
push 0x0
push 0x0
push 0xffffffff
push edi
call [ DragQueryFileW@IAT ]
xor ecx ecx
dec eax
test eax eax
jle r-xdata
push 0x104
lea eax [ esp + 0x3c ]
push eax
push ecx
push edi
call [ DragQueryFileW@IAT ]
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_4039e8
lea eax [ esp + 0x10 ]
push eax
mov ecx ebx
call sub_407bef
push edi
call [ GlobalUnlock@IAT ]
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_407ba9
lea ecx [ esp + 0x10 ]
call sub_405cd3
jmp r-xdata
mov ebx ecx
mov esi eax
push 0x104
lea eax [ esp + 0x3c ]
push eax
push ebx
push edi
call [ DragQueryFileW@IAT ]
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_4039e8
push 0xa
lea ecx [ esp + 0x14 ]
call sub_40bd2f
inc ebx
cmp ebx esi
jl r-xdata
mov esi [ esp + 0x20 ]
mov [ esp + 0xc ] ebx
mov ebx [ ebp + 0xc ]
mov ecx [ esp + 0xc ]
sub_457294
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
call sub_4084a6
mov ebx [ esi + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
lea eax [ eax * 2 + 0x2 ]
push eax
push 0x2
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
push [ rw-data ]
call [ OpenClipboard@IAT ]
call [ EmptyClipboard@IAT ]
jmp r-xdata
push esi
call [ GlobalLock@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
push 0x0
push 0x3
call [ CloseClipboard@IAT ]
push [ ebx ]
push eax
call sub_421943
pop ecx
pop ecx
push esi
call [ GlobalUnlock@IAT ]
push [ rw-data ]
call [ OpenClipboard@IAT ]
call [ EmptyClipboard@IAT ]
push esi
push 0xd
call [ SetClipboardData@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
push 0x0
push 0x4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
sub_457384
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
push ecx
call sub_425a99
lea ecx [ eax + 0x40 ]
mov edx esi
call sub_41f1c4
mov esi [ ebp + 0xc ]
pop ecx
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4573bf
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push 0x10000
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_404bce
mov edi [ ebp - 0x8 ]
xor eax eax
mov [ edi ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x7fff
push edi
push [ eax ]
call [ GetEnvironmentVariableW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
call sub_44a6be
lea ecx [ ebp - 0x8 ]
call sub_404fd2
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_45741e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp [ ebx + 0x8 ] 0x2
mov eax [ ebx + 0x4 ]
push edi
jb r-xdata
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push 0x0
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push edi
jmp r-xdata
mov eax [ esi + 0x8 ]
push [ eax ]
call [ SetEnvironmentVariableW@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_457482
push ebp
mov ebp esp
push ecx
push ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x3a98
xor ebx ebx
inc ebx
push ebx
push r--data
push 0x0
push 0x1a
push 0xffff
mov edi ecx
call [ SendMessageTimeoutW@IAT ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop ebx
leave
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push ebx
add ecx edi
call sub_44d7e4
pop esi
sub_4574d8
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
lea ecx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
call sub_40b8a7
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call [ CharUpperBuffW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_448a2f
push 0x0
test eax eax
je r-xdata
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40d2d2
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40d89e
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_45757d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
xor ebx ebx
push esi
mov [ esp + 0xc ] r--data
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
mov [ rw-data ] 0x1
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push [ eax ]
push ebx
call sub_40ace0
test eax eax
js r-xdata
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
mov [ rw-data ] bl
call sub_44d7e4
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
cmp [ esp + 0x18 ] 0x1
jbe r-xdata
push 0xffffffff
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x1c ]
push eax
mov ecx edi
mov [ esp + 0x1c ] ebx
call sub_40fa40
test eax eax
js r-xdata
mov [ rw-data ] bl
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_405800
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45762e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
push 0xe
mov ecx esi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
push 0xd
call sub_40d2c0
test al al
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_44afce
jmp r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_44afbf
push eax
mov ecx edi
call sub_44d76e
lea eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
jmp r-xdata
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_4576bb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi [ edi + 0x8 ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] esi
call sub_43f7aa
and [ esp + 0x14 ] 0x0
lea eax [ esi - 0x2 ]
cmp eax 0x8
ja r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x5
add ecx ebx
call sub_44d7e4
jmp [ eax * 4 + jump_table_457a6f ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_44be63
mov [ esp + 0x14 ] eax
mov ecx [ edi + 0x4 ]
push 0x29
mov esi [ ecx + 0x20 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x1c ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x18 ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0xc ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
fld [ r--data ]
mov ecx esi
call sub_40cdb4
mov [ esp + 0x10 ] eax
fild [ esp + 0x10 ]
fldz
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
mov ecx esi
call sub_40cdb4
mov [ esp + 0x2c ] eax
or [ esp + 0x30 ] 0x80
jmp r-xdata
mov ecx esi
call sub_40cdb4
mov [ esp + 0x28 ] eax
or [ esp + 0x30 ] 0x40
jmp r-xdata
or [ esp + 0x30 ] 0x20
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x14 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
or [ esp + 0x30 ] 0x10
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx esi [ eax ]
test si si
je r-xdata
xor eax eax
mov [ esp + 0x40 ] ax
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ esp + 0x58 ]
call sub_40c935
lea ecx [ esp + 0x54 ]
call sub_40c4cd
jmp r-xdata
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ esp + 0x68 ]
call sub_40c935
lea ecx [ esp + 0x64 ]
call sub_40c4cd
jmp r-xdata
fstp [ esp + 0x38 ]
fstp st0
mov ecx esi
call sub_40cdb4
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx esi
call sub_40cdb4
mov [ esp + 0x20 ] eax
jmp r-xdata
mov ecx esi
call sub_41dd62
test eax eax
jne r-xdata
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea eax [ ebx + 0xb8 ]
push eax
jmp r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov [ esp + 0xc ] 0x1
mov [ esp + 0x40 ] si
mov edx [ esp + 0x2c ]
push ecx
push [ esp + 0x28 ]
mov ecx [ esp + 0x30 ]
push [ esp + 0x28 ]
call sub_447cd7
add esp 0xc
test eax eax
jne r-xdata
or [ esp + 0x30 ] 0xc0
lea ecx [ esp + 0x48 ]
call sub_40c935
cmp [ esp + 0x1c ] 0x6
ja r-xdata
cmp eax 0x30
jl r-xdata
push [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_43f82d
cmp eax 0x1
jne r-xdata
push eax
push 0x4
jmp r-xdata
push 0x0
push 0x3
cmp eax 0x39
jle r-xdata
push 0x0
cmp eax 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x54 ]
push eax
call sub_407bef
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
lea ecx [ esp + 0x20 ]
call sub_456a1c
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ esp + 0xc ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
sub eax 0x30
mov [ esp + 0x10 ] eax
cmp eax 0x4d
je r-xdata
cmp eax 0x3
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
jne r-xdata
push 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0xc ] ebx
mov ebx [ esp + 0x18 ]
mov [ esp + 0x34 ] eax
mov eax [ edi + 0x4 ]
inc ebx
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
imul ecx ecx 0xa
mov eax [ eax ]
add ecx 0xffffffd0
movzx eax [ eax + ebx * 2 ]
add ecx eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
or [ esp + 0x30 ] 0x1
jmp r-xdata
cmp eax 0x6d
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0xc ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
test ax ax
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 + 0x2 ]
push eax
call sub_422952
pop ecx
test eax eax
je r-xdata
inc [ esp + 0xc ]
jmp r-xdata
add ecx ebx
call sub_44d7e4
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
jmp r-xdata
sub_457a93
push ebp
mov ebp esp
call sub_43be31
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_457abb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x9
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_457aed
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
inc [ eax ]
mov [ ebp - 0x4 ] eax
call sub_40b8a7
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_448a2f
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
lea ecx [ ebp - 0x10 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_405cd3
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_457b62
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push 0xd
mov esi [ eax ]
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
push 0xe
mov ecx esi
call sub_40d2c0
mov esi [ ebp + 0xc ]
mov ecx esi
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] 0x2
jmp r-xdata
call sub_412570
and [ esi ] 0x0
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_457bc4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push 0x29
mov esi [ eax ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
push 0x2a
mov ecx esi
call sub_41d5f6
mov esi [ ebp + 0xc ]
mov ecx esi
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
call sub_412570
and [ esi ] 0x0
call sub_412570
mov [ esi ] 0x2
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov [ esi + 0xc ] 0x1
sub_457c26
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0x10 ] ecx
mov eax [ edi + 0x8 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x20 ]
push eax
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0xc ] 0x1
mov esi [ eax ]
mov ecx esi
xor ebx ebx
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_447d1c
test eax eax
jne r-xdata
mov esi [ esp + 0x1c ]
cmp esi 0x2
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov edx [ esp + 0x10 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ edx ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x5
add ecx edx
call sub_44d7e4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_41d5f6
test al al
jne r-xdata
cmp esi 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov [ esp + 0xc ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_41d5f6
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_40cdb4
mov [ esp + 0x18 ] eax
or eax 0xffffffff
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
jmp r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov ecx [ eax + 0x4 ]
call sub_41d5f6
test al al
je r-xdata
mov ecx [ esp + 0x1c ]
call sub_40cdb4
mov [ esp + 0x14 ] eax
cmp [ esp + 0xc ] 0x0
jle r-xdata
push 0x1
push eax
push [ esp + 0x1c ]
mov ecx ebx
push [ esp + 0x24 ]
call sub_459fec
test ebx ebx
mov ebx [ esp + 0x10 ]
je r-xdata
xor ebx ebx
inc ebx
mov ecx [ edi + 0x4 ]
push 0x29
mov ecx [ ecx + 0x8 ]
call sub_41d5f6
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_447dd5
mov ecx [ ebx + 0x114 ]
call sub_448355
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_447e01
mov ecx [ ebx + 0x110 ]
call sub_448355
dec [ esp + 0xc ]
jne r-xdata
sub_457ddb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
mov [ esp + 0xc ] ecx
mov esi [ eax ]
push edi
mov ecx esi
or edi 0xffffffff
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_447d1c
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov esi eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
cmp [ ebx + 0x8 ] 0x6
mov [ esp + 0x18 ] eax
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ esp + 0x10 ]
push 0x1
push edi
push [ esp + 0x1c ]
push esi
call sub_459fec
cmp edi 0x2
jge r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov edi eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_447dd5
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x118 ]
call sub_448355
push 0x1
push edi
push [ esp + 0x20 ]
mov ecx esi
push [ esp + 0x28 ]
call sub_459fec
mov ecx [ esi + 0x118 ]
call sub_448355
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_447e01
mov ecx [ esp + 0x10 ]
mov ecx [ ecx + 0x110 ]
call sub_448355
cmp edi 0xffffffff
je r-xdata
push 0x2
pop edi
sub_457f01
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_447dd5
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_457f3d
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
mov esi [ LoadCursorW@IAT ]
push 0x7f8a
xor ebx ebx
push ebx
call esi
push 0x7f00
push ebx
mov [ ebp - 0x54 ] eax
call esi
push 0x7f03
push ebx
mov [ ebp - 0x50 ] eax
call esi
push 0x7f8b
push ebx
mov [ ebp - 0x4c ] eax
call esi
push 0x7f01
push ebx
mov [ ebp - 0x48 ] eax
call esi
push 0x7f81
push ebx
mov [ ebp - 0x44 ] eax
call esi
push 0x7f88
push ebx
mov [ ebp - 0x40 ] eax
call esi
push 0x7f80
push ebx
mov [ ebp - 0x3c ] eax
call esi
push 0x7f86
push ebx
mov [ ebp - 0x38 ] eax
call esi
push 0x7f83
push ebx
mov [ ebp - 0x34 ] eax
call esi
push 0x7f85
push ebx
mov [ ebp - 0x30 ] eax
call esi
push 0x7f82
push ebx
mov [ ebp - 0x2c ] eax
call esi
push 0x7f84
push ebx
mov [ ebp - 0x28 ] eax
call esi
push 0x7f04
push ebx
mov [ ebp - 0x24 ] eax
call esi
push 0x7f02
push ebx
mov [ ebp - 0x20 ] eax
call esi
push 0x7f89
push ebx
mov [ ebp - 0x1c ] eax
call esi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x14
call [ GetCursorInfo@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push edi
mov edi ebx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
inc edi
cmp edi 0xf
jle r-xdata
cmp eax [ ebp + edi * 4 - 0x54 ]
je r-xdata
pop esi
xor eax eax
pop ebx
leave
retn 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
cmp edi 0xf
jg r-xdata
mov [ esi ] ebx
lea eax [ edi + 0x1 ]
mov [ esi ] eax
jmp r-xdata
pop edi
sub_458065
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
call [ GetCursorPos@IAT ]
call [ GetForegroundWindow@IAT ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x104 ]
call sub_456b19
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
mov ecx ebx
call sub_40d16a
test al al
jne r-xdata
xor ebx ebx
push 0x2
inc ebx
push ebx
push [ ebp + 0xc ]
call sub_403320
mov eax [ ebp - 0x8 ]
and [ ebp - 0x18 ] 0x0
push 0x0
mov [ ebp - 0x20 ] eax
push ebx
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
call sub_412320
add esp 0x1c
lea ecx [ ebp - 0x20 ]
call sub_412570
mov eax [ ebp - 0x4 ]
and [ ebp - 0x18 ] 0x0
push ebx
mov [ ebp - 0x20 ] eax
push ebx
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x20 ]
call sub_412570
jmp r-xdata
mov ecx ebx
call sub_40cdb4
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
xor ebx ebx
inc ebx
cmp eax ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] edi
sub_458171
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x3
push edi
mov edi ecx
jne r-xdata
mov edx [ esi + 0x4 ]
push 0x0
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push eax
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
mov ecx edi
call sub_459fec
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
sub_4581b7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_447e01
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_4581f3
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
inc edi
cmp [ eax + 0x8 ] 0x2
mov [ ebp - 0x4 ] ecx
jb r-xdata
push ebx
xor ebx ebx
push esi
test edi edi
jle r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
test edi edi
jle r-xdata
pop esi
pop ebx
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_447e2d
test al al
je r-xdata
xor eax eax
pop edi
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x110 ]
call sub_448355
mov eax [ ebp + 0x8 ]
inc ebx
cmp ebx edi
jl r-xdata
jmp r-xdata
sub_458272
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ edi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x30 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x24 ] eax
inc [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
xor ebx ebx
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
inc [ eax ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
cmp eax 0xffffffff
je r-xdata
mov esi ebx
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
mov eax 0x4000
cmp [ ebp - 0xc ] eax
jbe r-xdata
mov eax [ ebp - 0x8 ]
add eax 0xb8
push eax
lea ecx [ ebp - 0x30 ]
call sub_40c935
mov eax [ ebp - 0x30 ]
mov [ ebp + 0x8 ] eax
mov ecx esi
call sub_40cdb4
mov esi eax
or esi 0x10000
jmp r-xdata
cmp [ ebp - 0x10 ] 0x5
jb r-xdata
push 0xffffffff
push eax
lea ecx [ ebp - 0x20 ]
call sub_40a2fb
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov ecx [ edi + 0x4 ]
push 0x29
mov ecx [ ecx + 0x4 ]
call sub_41d5f6
test al al
je r-xdata
cmp [ edi + 0x8 ] 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_44be63
mov ebx eax
push esi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push ebx
call [ MessageBoxW@IAT ]
mov ecx [ edi + 0x4 ]
push 0x29
mov edi [ ecx + 0xc ]
mov ecx edi
call sub_41d5f6
test al al
jne r-xdata
mov ecx edi
call sub_412620
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x41
jne r-xdata
fmul [ r--data ]
call sub_471de0
mov edx [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x8 ]
mov ecx ebx
call sub_447c45
add esp 0xc
jmp r-xdata
fstp st0
fldz
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
lea ecx [ ebp - 0x20 ]
mov [ esi ] edi
mov [ esi + 0xc ] 0x1
call sub_405cd3
lea ecx [ ebp - 0x30 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_4583fc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
and [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
push 0xe
mov ecx esi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x34 ] eax
inc [ eax ]
lea ecx [ esp + 0x28 ]
lea eax [ esp + 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
and ebx 0xfffffffd
call sub_405cd3
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x24 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_40b8a7
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_41cf79
test eax eax
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_405cd3
lea ebx [ edi + 0x12c ]
mov esi [ ebx ]
mov [ esp + 0x10 ] esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
mov ecx ebx
call sub_44d891
mov ecx [ esi ]
lea edx [ esp + 0x18 ]
call sub_405b2a
test al al
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_407ba9
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_468b5a
mov esi [ esp + 0x10 ]
jmp r-xdata
push ecx
mov eax esp
lea ecx [ esp + 0x14 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
sub_458550
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
and [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
push 0xe
mov ecx esi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x34 ] eax
inc [ eax ]
lea ecx [ esp + 0x28 ]
lea eax [ esp + 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
and ebx 0xfffffffd
call sub_405cd3
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x24 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_40b8a7
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_41cf79
test eax eax
je r-xdata
lea ecx [ esp + 0x38 ]
call sub_405cd3
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov esi [ edi + 0x12c ]
mov [ esp + 0x10 ] esi
mov ecx [ esi ]
lea edx [ esp + 0x18 ]
call sub_405b2a
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ edi + 0x12c ]
call sub_44d8e9
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_468b5a
mov esi [ esp + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ecx
mov eax esp
lea ecx [ esp + 0x14 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
sub_458694
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1bc
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov esi [ esi + 0x8 ]
mov edi ecx
mov ecx ebx
mov [ esp + 0xc ] 0xfa0
call sub_412570
and [ ebx ] 0x0
xor eax eax
inc eax
cmp esi eax
mov esi [ ebp + 0x8 ]
mov [ ebx + 0xc ] eax
jbe r-xdata
lea eax [ esp + 0x38 ]
push eax
push 0x101
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
test eax eax
jle r-xdata
lea ecx [ esp + 0x28 ]
call sub_40a6d4
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
lea eax [ esp + 0x28 ]
push eax
push [ esi + 0x8 ]
call sub_41f26b
push [ esp + 0x28 ]
call [ Ordinal_WSOCK32_10@IAT ]
push [ esp + 0x28 ]
mov esi eax
call [ Ordinal_WSOCK32_52@IAT ]
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x4
add ecx edi
call sub_44d7e4
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov [ esp + 0xc ] eax
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x4
add ecx edi
call sub_44d7e4
jmp r-xdata
call [ IcmpCreateFile@IAT ]
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x28 ]
call sub_405cd3
mov eax [ r--data ]
mov [ esp + 0x14 ] eax
mov al [ r--data ]
push 0x29
mov [ esp + 0x1c ] al
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x20 ]
call sub_404bce
push [ esp + 0xc ]
lea eax [ esp + 0x18 ]
push 0x29
cmp esi 0xffffffff
jne r-xdata
push [ esp + 0x24 ]
push 0x0
push 0x5
push eax
push esi
push [ esp + 0x2c ]
call [ IcmpSendEcho@IAT ]
mov esi [ esp + 0x1c ]
mov esi [ esp + 0x24 ]
push esi
push 0x0
push 0x5
push eax
mov eax [ esp + 0x3c ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
push [ esp + 0x2c ]
call [ IcmpSendEcho@IAT ]
jmp r-xdata
push 0x0
push 0x2
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push [ esp + 0x10 ]
call [ IcmpCloseHandle@IAT ]
call [ Ordinal_WSOCK32_116@IAT ]
lea ecx [ esp + 0x1c ]
call sub_404fd2
mov esi [ esi + 0x8 ]
mov ecx ebx
call sub_412570
xor eax eax
inc eax
mov [ ebx + 0xc ] eax
test esi esi
jne r-xdata
cmp eax 0x2af9
jbe r-xdata
mov [ ebx ] esi
mov [ ebx ] eax
jmp r-xdata
push 0x0
push 0x4
jmp r-xdata
cmp eax 0x2afd
jbe r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
cmp eax 0x2b02
je r-xdata
xor eax eax
push 0x0
inc eax
push eax
jmp r-xdata
cmp eax 0x2b0a
jne r-xdata
push 0x0
push 0x3
jmp r-xdata
sub_458878
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov [ ebp - 0xc ] ecx
push edi
mov ecx ebx
call sub_412570
mov esi [ ebp + 0x8 ]
xor edi edi
xor eax eax
inc edi
mov [ ebx + 0xc ] edi
mov [ ebx ] eax
cmp [ esi + 0x8 ] 0x7
mov [ ebp - 0x8 ] eax
jb r-xdata
cmp [ esi + 0x8 ] 0x5
mov [ ebp + 0xc ] edi
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
cmp [ esi + 0x8 ] 0x6
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40cdb4
cmp eax edi
jle r-xdata
call [ GetForegroundWindow@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_44be63
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
mov [ ebp + 0xc ] eax
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
cmp [ ebp - 0x8 ] 0x1
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
push esi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_44be63
jmp r-xdata
call sub_45a0fb
call sub_45a1cd
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov ecx [ esi + 0x4 ]
mov edi eax
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x20 ] edi
call sub_40cdb4
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ecx + 0x8 ]
call sub_40cdb4
mov ecx [ ebp + 0x8 ]
mov esi eax
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x18 ] esi
mov ecx [ ecx + 0xc ]
call sub_40cdb4
sub esi edi
push esi
mov [ ebp - 0x14 ] eax
call sub_422626
pop ecx
mov ecx [ ebp - 0xc ]
lea edi [ eax + 0x1 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x4 ]
call sub_45a268
mov esi eax
test esi esi
je r-xdata
mov ecx ebx
fstp [ ebp - 0x10 ]
call sub_412570
fld [ ebp - 0x10 ]
push esi
fstp [ ebx ]
mov [ ebx + 0xc ] 0x3
call j_sub_4228ca#2
pop ecx
sub_4589ad
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x3
mov [ ebp - 0x4 ] ecx
jb r-xdata
call [ GetForegroundWindow@IAT ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_44be63
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_44be63
jmp r-xdata
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov ecx [ esi + 0x4 ]
mov edi eax
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
mov esi eax
push ebx
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x108 ]
call sub_456b19
add edi [ ebp - 0xc ]
add esi [ ebp - 0x8 ]
push 0x0
call [ GetDC@IAT ]
push esi
push edi
push eax
mov [ ebp + 0x8 ] eax
call [ GetPixel@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov ebx eax
call sub_412570
push [ ebp + 0x8 ]
mov edx ebx
sar edx 0x10
movzx ecx bl
and edx 0xff
shl ecx 0x10
or edx ecx
and ebx 0xff00
or edx ebx
push 0x0
mov [ esi + 0xc ] 0x1
mov [ esi ] edx
call [ ReleaseDC@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_458a77
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ esi + 0x4 ]
push edi
mov ecx [ eax ]
mov [ ebp - 0x2c ] ebx
call sub_40cdb4
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x48 ] eax
mov ecx [ ecx + 0x8 ]
call sub_40cdb4
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ecx + 0xc ]
mov [ ebp - 0x44 ] eax
call sub_40cdb4
cmp [ esi + 0x8 ] 0x8
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x40 ] eax
jb r-xdata
call [ GetForegroundWindow@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x1c ]
call sub_44be63
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40cdb4
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_44be63
jmp r-xdata
xor ecx ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov ecx eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edi eax
push edi
lea eax [ ebp - 0x3c ]
push eax
push [ ebx + 0x108 ]
call sub_456b19
cmp [ esi + 0x8 ] 0x7
jb r-xdata
mov ecx ebx
call sub_412570
mov edx [ ebp - 0x2c ]
and [ ebx ] 0x0
xor eax eax
inc eax
push 0x0
mov [ ebx + 0xc ] eax
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax edx
neg eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp + 0xc ] ecx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
push ecx
mov ecx [ eax + 0x10 ]
call sub_40cdb4
push eax
lea ecx [ ebp - 0x34 ]
call sub_4569ba
mov esi [ ebp + 0x8 ]
cmp esi [ ebp - 0x4c ]
mov eax [ ebp - 0x14 ]
setl [ ebp - 0x1 ]
cmp eax [ ebp - 0x48 ]
setl [ ebp - 0x2 ]
sub eax [ ebp - 0x48 ]
push eax
call sub_422626
sub esi [ ebp - 0x4c ]
inc eax
push esi
mov [ ebp - 0x18 ] eax
call sub_422626
pop ecx
pop ecx
lea esi [ eax + 0x1 ]
lea eax [ ebp - 0x24 ]
push eax
xor cl cl
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp + 0xb ] cl
push edi
mov ecx ebx
mov [ ebp - 0x28 ] esi
call sub_45a268
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x6
jb r-xdata
push [ ebp - 0x14 ]
call j_sub_4228ca#2
pop ecx
mov cl [ ebp + 0xb ]
test cl cl
jne r-xdata
mov eax esi
shl eax 0x2
mov edi eax
imul edi ecx
add eax edi
mov [ ebp - 0x1c ] eax
mov al [ ebp + 0xb ]
mov [ ebp - 0x20 ] edi
mov esi edi
mov [ ebp - 0x10 ] edi
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov esi [ ebp - 0xc ]
add esi [ ebp - 0x24 ]
add ecx edx
mov [ ebp - 0xc ] esi
mov esi [ ebp - 0x28 ]
mov [ ebp + 0xc ] ecx
test al al
je r-xdata
cmp esi [ ebp - 0x1c ]
jge r-xdata
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
add eax esi
push eax
lea ecx [ ebp - 0x34 ]
call sub_459f79
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov al [ ebp + 0xb ]
lea esi [ esi + edx * 4 ]
mov [ ebp - 0x10 ] esi
test al al
je r-xdata
push 0x2
push 0x1
push ebx
mov [ ebp + 0xb ] 0x1
call sub_403320
add esp 0xc
mov eax esi
sub eax edi
push 0x4
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edi [ ebp - 0x4c ]
add edi eax
mov edi [ ebp - 0x44 ]
sub edi eax
jmp r-xdata
mov edi [ ebp + 0xc ]
add edi [ ebp - 0x48 ]
mov edi [ ebp - 0xc ]
jmp r-xdata
sub edi [ ebp - 0x3c ]
push 0x0
push 0x1
push 0x0
push ebx
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
xor edx edx
inc edx
cmp [ ebp - 0x2 ] 0x0
mov [ esi + 0xc ] edx
mov [ esi ] edi
je r-xdata
sub edi [ ebp - 0x38 ]
push edx
push edx
push 0x0
push ebx
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov [ esi ] edi
mov edi [ ebp - 0x20 ]
mov [ esi + 0xc ] 0x1
mov esi [ ebp - 0x10 ]
sub_458d31
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x8 ]
je r-xdata
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
push esi
mov ecx [ eax ]
call sub_40cdb4
xor esi esi
test eax eax
js r-xdata
cmp ebx 0x2
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
cmp eax 0x65
jge r-xdata
pop esi
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor ecx ecx
mov eax [ eax ]
cmp [ eax ] cx
je r-xdata
mov eax [ edi + 0x4 ]
push esi
mov ecx [ eax ]
call sub_40cdb4
push eax
push 0x402
push [ rw-data ]
call [ SendMessageW@IAT ]
cmp ebx 0x2
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
xor eax eax
push eax
push 0xc
push [ rw-data ]
call [ SendMessageW@IAT ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
xor eax eax
push eax
push 0xc
push [ rw-data ]
call [ SendMessageW@IAT ]
sub_458df8
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x2
mov eax [ esi + 0x4 ]
mov edi ecx
jne r-xdata
mov esi [ eax ]
mov ecx esi
mov ecx [ eax + 0x4 ]
call sub_40cdb4
test eax eax
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
je r-xdata
call sub_4084a6
push 0x0
push [ esi + 0x8 ]
lea ecx [ edi + 0x88 ]
call sub_443abb
call sub_4084a6
push 0x0
push [ esi + 0x8 ]
lea ecx [ edi + 0x88 ]
call sub_443c7f
jmp r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_458e5b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov edi ecx
mov ecx [ eax ]
push 0x1
call sub_40cdb4
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
push 0x1
mov ecx [ eax + 0x4 ]
call sub_40cdb4
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
push [ eax + 0x8 ]
call sub_40d89e
sub_458eba
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi + 0x4 ]
push 0x1
mov ecx [ eax ]
call sub_40cdb4
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_407ba9
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
push [ eax + 0x4 ]
call sub_40d89e
sub_458ef9
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x2
jne r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
xor dl dl
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov dl 0x1
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_4483d6
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_458f4b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov ecx [ eax ]
call sub_40cdb4
push 0x64
pop ecx
cmp eax ecx
ja r-xdata
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
pop esi
imul eax eax 0xffff
cdq
idiv ecx
movzx eax ax
mov ecx eax
shl ecx 0x10
or ecx eax
push ecx
push 0x0
call [ waveOutSetVolume@IAT ]
jmp r-xdata
xor eax eax
pop edi
pop ebp
retn 0x8
sub_458fd8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x1
push [ eax + 0x8 ]
push eax
call sub_45a750
mov esi [ ebp + 0xc ]
mov edi [ rw-data ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45900c
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov ebx ecx
mov ecx [ eax ]
push edi
call sub_40cdb4
mov esi [ ebx + 0x498 ]
mov edi eax
mov eax esi
cdq
mov ecx 0x3e8
idiv ecx
mov [ ebp - 0x108 ] edi
mov [ ebp - 0x10c ] 0x1
mov [ ebp - 0x8 ] eax
imul eax eax 0x3e8
sub esi eax
imul esi esi 0x3e8
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x4 ] esi
xor esi esi
push esi
push esi
lea eax [ ebp - 0x10c ]
push eax
push esi
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
push esi
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
lea eax [ ebp - 0x10c ]
push eax
push edi
call [ Ordinal_WSOCK32_151@IAT ]
test eax eax
je r-xdata
push esi
push esi
push edi
call [ Ordinal_WSOCK32_1@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
jmp r-xdata
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_4590d3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call [ Ordinal_WSOCK32_3@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x8 ] 0x1
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_41e387
xor eax eax
pop esi
pop ebp
retn 0x8
sub_459122
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push ebx
push esi
mov esi [ eax ]
mov ebx ecx
push edi
mov edi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_40cdb4
push eax
push esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
call sub_45acd3
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
push 0x6
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ Ordinal_WSOCK32_4@IAT ]
test eax eax
jne r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
push edi
call [ Ordinal_WSOCK32_3@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
jmp r-xdata
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_4591dc
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x2
mov ebx ecx
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov edx [ esi + 0x4 ]
mov esi [ edx ]
mov edi [ edx + 0x4 ]
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_40cdb4
push eax
push esi
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
call sub_45acd3
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
push 0x6
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
call [ Ordinal_WSOCK32_2@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
push edi
call [ Ordinal_WSOCK32_3@IAT ]
push [ ebp - 0x4 ]
push edi
call [ Ordinal_WSOCK32_13@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
jmp r-xdata
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_4592c0
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x14 ]
call sub_40a6d4
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x8 ]
call sub_41f26b
push [ ebp - 0x14 ]
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
push 0x4
push [ eax ]
lea eax [ ebp - 0x4 ]
push eax
call sub_41faa0
add esp 0xc
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_45adca
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_45ae5a
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0x24 ]
call sub_405cd3
push eax
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_45936f
push ebp
mov ebp esp
sub esp 0x138
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov edx [ edi + 0x4 ]
mov ebx eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0xc ] ebx
call sub_40cdb4
mov ecx [ ebp + 0xc ]
push r--data
mov edi eax
call sub_40ca8e
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ esi + 0x498 ]
mov eax ecx
cdq
mov [ ebp - 0x4 ] 0x3e8
idiv [ ebp - 0x4 ]
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x138 ] 0x1
mov [ ebp - 0x14 ] eax
imul eax eax 0x3e8
sub ecx eax
imul ecx ecx 0x3e8
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x10 ] ecx
xor ecx ecx
push ecx
push ecx
lea eax [ ebp - 0x138 ]
push eax
push ecx
call [ Ordinal_WSOCK32_18@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
push ebx
lea eax [ edi + 0x1 ]
push eax
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_404bce
lea eax [ ebp - 0x138 ]
push eax
push ebx
call [ Ordinal_WSOCK32_151@IAT ]
push 0x0
test eax eax
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
push 0xffffffff
mov ebx [ ebp - 0x8 ]
push edi
push ebx
push [ ebp - 0xc ]
call [ Ordinal_WSOCK32_16@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
jmp r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
push 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x3
jb r-xdata
push ebx
mov [ ebx + edi ] 0x0
call sub_4223f0
pop ecx
cmp eax edi
jne r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push edi
push ebx
push edi
call sub_44ad14
push eax
call sub_41faa0
add esp 0xc
jmp r-xdata
push ebx
lea ecx [ ebp - 0x24 ]
call sub_43e0f5
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_45ae5a
mov ecx [ ebp + 0xc ]
push eax
call sub_407bef
lea ecx [ ebp - 0x34 ]
call sub_405cd3
lea ecx [ ebp - 0x24 ]
call sub_405cd3
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_404fd2
sub_459500
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ esi + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
mov edx [ esi + 0x4 ]
mov edi eax
mov ecx [ edx + 0x4 ]
call sub_44be47
mov ecx [ esi + 0x4 ]
mov edx eax
mov ecx [ ecx + 0x4 ]
call sub_44be8a
push 0x0
push eax
push edx
push edi
call [ Ordinal_WSOCK32_19@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi + 0xc ] 0x1
cmp edi 0xffffffff
jne r-xdata
mov [ esi ] edi
and [ esi ] 0x0
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_459577
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi ecx
call [ Ordinal_WSOCK32_116@IAT ]
mov edx [ esi ]
mov edi eax
mov ecx [ edx + 0x4 ]
push 0x0
push edi
add ecx esi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
test edi edi
sete [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_41e387
pop edi
xor eax eax
pop esi
leave
retn 0x8
sub_4595af
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x198
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
push 0x202
mov edi ecx
call [ Ordinal_WSOCK32_115@IAT ]
mov edx [ edi ]
mov esi eax
mov ecx [ edx + 0x4 ]
push 0x0
push esi
add ecx edi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
test esi esi
sete [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41e387
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4595fd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3bc
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x4 ]
push esi
mov [ esp + 0xc ] 0x3a8
mov [ esp + 0x18 ] 0x10
mov [ esp + 0x14 ] 0x1
mov esi [ eax ]
push edi
mov edi [ ebx + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0x3f
push [ eax ]
lea eax [ esp + 0x33c ]
push eax
call sub_422c1d
xor eax eax
mov [ esp + 0x3be ] ax
mov eax [ ebx + 0x4 ]
add esp 0xc
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0xff
push [ eax ]
lea eax [ esp + 0x138 ]
push eax
call sub_422c1d
xor eax eax
mov [ esp + 0x33a ] ax
mov eax [ ebx + 0x4 ]
add esp 0xc
mov ecx [ eax + 0x8 ]
call sub_40cdb4
imul eax eax 0x3e8
mov [ esp + 0x330 ] eax
cmp edi 0x3
jbe r-xdata
and [ esp + 0x3b4 ] 0x0
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov [ esp + 0x3b4 ] eax
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x1
call [ Shell_NotifyIconW@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4596e2
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov esi [ eax ]
push edi
mov edi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_40cdb4
push eax
push esi
mov esi [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_45acd3
test al al
jne r-xdata
push ebx
push 0x11
push 0x2
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi [ ebp + 0xc ]
push 0x4
mov ebx eax
push 0x1
push edi
mov [ ebp - 0x4 ] ebx
call sub_403320
add esp 0xc
cmp ebx 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push ebx
call [ Ordinal_WSOCK32_2@IAT ]
xor ebx ebx
push ebx
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
push ebx
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
pop edi
xor eax eax
pop esi
leave
retn 0x8
push 0x1
push ebx
push edi
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
xor eax eax
inc eax
push eax
push eax
push ebx
push edi
mov [ esi + 0xc ] eax
mov [ esi ] 0x2b594d1
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov eax [ ebp - 0x4 ]
xor ecx ecx
inc ecx
push 0x2
push ecx
push ebx
push edi
mov [ esi + 0xc ] ecx
mov [ esi ] eax
call sub_4114a0
mov edi eax
mov eax [ ebp + 0x8 ]
add esp 0x10
mov ecx [ eax + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx edi
call sub_407bef
push 0x3
push 0x1
push ebx
push [ ebp + 0xc ]
call sub_4114a0
mov edi eax
mov eax [ ebp + 0x8 ]
add esp 0x10
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx edi
call sub_407bef
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
mov eax [ ebp - 0x4 ]
push eax
call [ Ordinal_WSOCK32_3@IAT ]
jmp r-xdata
pop ebx
push ebx
push 0x1
push ebx
push edi
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
or [ esi ] 0xffffffff
jmp r-xdata
sub_45986a
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
push 0x0
xor ebx ebx
inc ebx
push ebx
push ebx
push [ eax ]
mov edi ecx
call sub_4114a0
add esp 0x10
test eax eax
jne r-xdata
mov ecx eax
call sub_40cdb4
cmp eax 0x2b594d1
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
push 0x0
mov [ esi + 0xc ] ebx
push 0xffffffff
jmp r-xdata
mov eax [ esi + 0x4 ]
push ebx
push ebx
push ebx
push [ eax ]
call sub_4114a0
add esp 0x10
mov ecx eax
call sub_40cdb4
push eax
call [ Ordinal_WSOCK32_3@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
push 0x0
mov [ esi + 0xc ] ebx
push 0xfffffffe
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
call sub_412570
and [ esi ] 0x0
push 0x0
mov [ esi + 0xc ] ebx
call [ Ordinal_WSOCK32_111@IAT ]
push eax
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_459923
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x4
push 0x1
push edi
mov esi ecx
call sub_403320
add esp 0xc
push 0x11
push 0x2
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov ebx eax
mov [ ebp - 0x8 ] ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jbe r-xdata
xor ebx ebx
push ebx
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
push ebx
push 0x1
push ebx
push edi
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
or [ esi ] 0xffffffff
jmp r-xdata
xor ebx ebx
push ebx
push 0x1
push ebx
push edi
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
xor eax eax
inc eax
push eax
push eax
push ebx
push edi
mov [ esi + 0xc ] eax
mov [ esi ] 0x2b594d1
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_412570
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
push 0x2
push ecx
push ebx
push edi
mov [ esi + 0xc ] ecx
mov [ esi ] eax
call sub_4114a0
mov ecx [ ebp + 0x8 ]
add esp 0x10
mov ecx [ ecx + 0x4 ]
mov edi eax
mov esi [ ecx ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx edi
call sub_407bef
push 0x3
push 0x1
push ebx
push [ ebp + 0xc ]
call sub_4114a0
mov edi eax
mov eax [ ebp + 0x8 ]
add esp 0x10
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx edi
call sub_407bef
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push 0x20
push 0xffff
push ebx
mov [ ebp - 0x4 ] 0x1
call [ Ordinal_WSOCK32_21@IAT ]
test eax eax
jne r-xdata
sub_459a66
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x15c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
call sub_40cdb4
mov ecx [ ebp + 0xc ]
push r--data
mov [ esp + 0x18 ] eax
call sub_40ca8e
mov ecx [ ebx + 0x4 ]
push 0x0
xor edi edi
inc edi
push edi
push edi
push [ ecx ]
call sub_4114a0
add esp 0x10
test eax eax
jne r-xdata
mov ecx eax
call sub_40cdb4
cmp eax 0x2b594d1
je r-xdata
push 0x0
push 0xffffffff
mov eax [ ebx + 0x4 ]
push edi
push edi
push edi
push [ eax ]
call sub_4114a0
add esp 0x10
mov ecx eax
mov [ esp + 0x10 ] eax
call sub_40cdb4
mov ebx eax
xor eax eax
mov [ esp + 0x40 ] ax
lea edi [ esp + 0x42 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ esp + 0x20 ] 0x10
cmp ebx 0xffffffff
je r-xdata
push 0x0
push 0xfffffffe
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
lea eax [ esp + 0x38 ]
push eax
push ecx
push ecx
lea eax [ esp + 0x6c ]
push eax
push ecx
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] 0x186a0
mov [ esp + 0x78 ] ebx
mov [ esp + 0x74 ] 0x1
call [ Ordinal_WSOCK32_18@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
jmp r-xdata
mov edi [ esp + 0x14 ]
lea eax [ edi + 0x1 ]
push eax
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x1c ]
call sub_404bce
lea eax [ esp + 0x60 ]
push eax
push ebx
call [ Ordinal_WSOCK32_151@IAT ]
test eax eax
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
jmp r-xdata
push 0x0
push 0xffffffff
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x44 ]
push eax
push 0x0
push edi
mov edi [ esp + 0x28 ]
push edi
push ebx
call [ Ordinal_WSOCK32_17@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
xor esi esi
cmp [ eax + 0x8 ] 0x3
jb r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
jmp r-xdata
push edi
mov [ edi + ebx ] 0x0
call sub_4223f0
pop ecx
push ebx
cmp eax ebx
jne r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov ecx [ ebp + 0x8 ]
and eax 0x1
mov ecx [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov ecx [ ecx + 0x8 ]
call sub_40cdb4
mov esi eax
and esi 0x2
mov [ esp + 0x14 ] esi
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
mov ecx [ esp + 0x14 ]
push edi
push ebx
test esi esi
jne r-xdata
lea ecx [ esp + 0x2c ]
call sub_407b6e
push edi
lea ecx [ esp + 0x54 ]
call sub_43e0f5
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_40c610
lea ecx [ esp + 0x50 ]
call sub_405cd3
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x28 ]
push eax
test esi esi
jne r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
xor edi edi
push 0x3
inc edi
push edi
push [ ebp + 0xc ]
call sub_403320
push edi
push edi
push 0x0
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x1c
mov esi eax
push [ esp + 0x44 ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea ecx [ esp + 0x2c ]
call sub_43e0f5
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_45ae5a
push eax
mov ecx esi
call sub_407bef
lea ecx [ esp + 0x50 ]
call sub_405cd3
push 0x2
push edi
push 0x0
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x10
mov edi eax
push [ esp + 0x42 ]
call [ Ordinal_WSOCK32_15@IAT ]
mov ecx edi
movzx esi ax
call sub_412570
xor eax eax
inc eax
push 0x0
push eax
push 0x0
push [ ebp + 0xc ]
mov [ edi + 0xc ] eax
mov [ edi ] esi
call sub_4114a0
add esp 0x10
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
call sub_405cd3
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
call sub_44ad14
push eax
call sub_41faa0
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_407bef
lea ecx [ esp + 0x28 ]
call sub_405cd3
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ebx
push edi
push ebx
test esi esi
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_404fd2
mov ecx [ esp + 0x1c ]
jmp r-xdata
sub_459d3e
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
push 0x0
xor edi edi
inc edi
push edi
push edi
push [ eax ]
mov ebx ecx
call sub_4114a0
add esp 0x10
test eax eax
jne r-xdata
mov ecx eax
call sub_40cdb4
cmp eax 0x2b594d1
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
push 0x0
mov [ esi + 0xc ] edi
push 0xffffffff
jmp r-xdata
mov eax [ esi + 0x4 ]
push 0x2
mov edi [ eax ]
push 0x1
push 0x1
push edi
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
push 0x3
push 0x1
push 0x1
push edi
call sub_4114a0
add esp 0x10
mov ecx eax
call sub_40cdb4
push eax
push esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
call sub_45acd3
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
push 0x0
mov [ esi + 0xc ] edi
push 0xfffffffe
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov edi [ ebp + 0x8 ]
push 0x1
mov eax [ edi + 0x4 ]
push 0x1
push 0x1
push [ eax ]
call sub_4114a0
add esp 0x10
mov ecx eax
call sub_40cdb4
mov ecx [ edi + 0x4 ]
mov esi eax
mov ecx [ ecx + 0x4 ]
call sub_44be47
mov ecx [ edi + 0x4 ]
mov edx eax
mov ecx [ ecx + 0x4 ]
call sub_44be8a
push 0x10
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push eax
push edx
push esi
call [ Ordinal_WSOCK32_20@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
cmp edi 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov [ esi ] edi
and [ esi ] 0x0
push 0x0
mov [ esi + 0xc ] 0x1
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov [ esi + 0xc ] 0x1
sub_459e86
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov eax [ eax + 0xc ]
dec eax
cmp eax 0xe
ja r-xdata
push r--data
jmp [ eax * 4 + jump_table_459f1e ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40ca8e
xor eax eax
pop ebp
retn 0x8
sub_459f5a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov cl [ ebp + 0x8 ]
cmp cl [ eax ]
jb r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
cmp cl [ eax ]
ja r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0xc
sub_459f79
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
movzx eax [ edx ]
push eax
mov esi ecx
call sub_459fbe
test al al
je r-xdata
xor eax eax
movzx eax [ edx + 0x1 ]
push eax
mov ecx esi
call sub_459fd5
test al al
je r-xdata
lea eax [ esi + 0x1 ]
push eax
movzx eax [ edx + 0x2 ]
push esi
push eax
call sub_459f5a
test al al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_459fec
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call [ GetForegroundWindow@IAT ]
push eax
lea eax [ esp + 0x1c ]
push eax
push [ esi + 0x104 ]
call sub_456b19
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
add esi [ esp + 0x18 ]
add edi [ esp + 0x1c ]
lea eax [ esp + 0x28 ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea eax [ esi + 0x1 ]
shl eax 0x10
cdq
idiv [ esp + 0x30 ]
mov esi [ ebp + 0x10 ]
lea ebx [ eax - 0x1 ]
lea eax [ edi + 0x1 ]
shl eax 0x10
cdq
idiv [ esp + 0x34 ]
lea edi [ eax - 0x1 ]
test esi esi
jne r-xdata
jle r-xdata
push esi
push esi
push edi
push ebx
push 0x8001
call [ mouse_event@IAT ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0xa
pop esi
cmp esi 0x64
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0xa
pop ecx
call sub_448355
push 0x0
push 0x0
push [ esp + 0x18 ]
push [ esp + 0x20 ]
push 0x8001
call [ mouse_event@IAT ]
push 0xa
pop ecx
call sub_448355
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x30 ]
imul eax eax 0xffff
cdq
dec ecx
idiv ecx
mov ecx [ esp + 0x34 ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x24 ]
imul eax eax 0xffff
cdq
dec ecx
idiv ecx
inc eax
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
push 0x20
push esi
mov edx edi
mov ecx ebx
call sub_448190
add esp 0x10
test al al
je r-xdata
sub_45a0fb
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
add eax esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ebx eax
imul ebx ecx
xor edx edx
shl ebx 0x2
lea eax [ esi + eax * 4 ]
push edi
shl ecx 0x2
inc edx
xor edi edi
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x10 ] ecx
mov ebx esi
cmp esi eax
jae r-xdata
mov ebx 0xfff1
mov ecx 0x15ae
shl ecx 0x10
or ecx edx
mov [ ebp + 0x8 ] ecx
fild [ ebp + 0x8 ]
jns r-xdata
sub ecx ebx
sub ecx 0x3
je r-xdata
add ebx [ ebp + 0x10 ]
mov esi ebx
pop edi
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn 0x10
fadd [ r--data ]
mov ecx edx
shr ecx 0x10
imul ecx ecx 0xf
movzx edx dx
add edx ecx
mov ecx edi
shr ecx 0x10
imul ecx ecx 0xf
movzx edi di
add edi ecx
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov ebx 0xfff1
cmp edx ebx
jb r-xdata
movzx eax [ esi + 0x2 ]
add edx eax
movzx eax [ esi + 0x1 ]
add edi edx
add edx eax
movzx eax [ esi ]
add esi [ ebp + 0xc ]
add edi edx
add edx eax
add edi edx
cmp esi [ ebp - 0x4 ]
jb r-xdata
mov ecx edi
shr ecx 0x10
imul ecx ecx 0xf
movzx eax di
add ecx eax
cmp ecx ebx
jb r-xdata
sub edx ebx
jmp r-xdata
sub_45a1cd
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
add eax esi
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov ebx eax
imul ebx [ ebp + 0x14 ]
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x14 ]
or edx 0xffffffff
shl ebx 0x2
shl eax 0x2
push edi
mov [ ebp + 0xc ] eax
mov edi esi
cmp edi [ ebp + 0x10 ]
jb r-xdata
add edi [ ebp + 0xc ]
mov esi edi
movzx eax [ esi + 0x2 ]
movzx ecx dl
xor ecx eax
movzx eax [ esi + 0x1 ]
shr edx 0x8
xor edx [ ecx * 4 + rw-data ]
movzx ecx dl
xor ecx eax
movzx eax [ esi ]
shr edx 0x8
xor edx [ ecx * 4 + rw-data ]
add esi ebx
movzx ecx dl
xor ecx eax
shr edx 0x8
xor edx [ ecx * 4 + rw-data ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
not edx
mov [ ebp + 0x8 ] edx
fild [ ebp + 0x8 ]
test edx edx
jns r-xdata
pop edi
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn 0x10
fadd [ r--data ]
sub_45a268
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov eax [ esi + 0x8 ]
mov edx [ esi ]
mov edi [ esi + 0x4 ]
cmp eax edx
mov [ ebp - 0x10 ] ecx
mov ecx [ esi + 0xc ]
setl bl
cmp ecx edi
setl bh
mov [ ebp - 0x1 ] bl
mov [ ebp + 0xf ] bh
test bl bl
je r-xdata
test bh bh
je r-xdata
mov [ esi ] eax
mov [ esi + 0x8 ] edx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push [ eax + 0x108 ]
call sub_456b19
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
add [ esi + 0x8 ] ecx
add [ esi + 0xc ] eax
add [ esi ] ecx
add [ esi + 0x4 ] eax
mov edi [ esi + 0x8 ]
mov ebx [ esi + 0xc ]
sub edi [ esi ]
sub ebx [ esi + 0x4 ]
inc edi
inc ebx
push 0x0
mov [ ebp - 0xc ] ebx
call [ GetDC@IAT ]
push ebx
push edi
push eax
mov [ ebp - 0x8 ] eax
call [ CreateCompatibleBitmap@IAT ]
push [ ebp - 0x8 ]
mov [ ebp + 0x8 ] eax
call [ CreateCompatibleDC@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
push eax
call [ SelectObject@IAT ]
mov dh [ ebp + 0xf ]
mov [ ebp - 0x14 ] eax
mov ecx ebx
test dh dh
je r-xdata
mov [ esi + 0x4 ] ecx
mov [ esi + 0xc ] edi
mov dl [ ebp - 0x1 ]
mov eax edi
test dl dl
je r-xdata
neg ecx
test dh dh
je r-xdata
neg eax
mov ebx [ esi + 0x4 ]
mov ebx [ esi + 0xc ]
jmp r-xdata
mov edx [ esi ]
mov edx [ esi + 0x8 ]
jmp r-xdata
mov [ ebp + 0xc ] ebx
mov ebx [ ebp - 0xc ]
test dl dl
je r-xdata
push edi
call j_sub_4228ca#2
pop ecx
xor eax eax
mov eax edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
push 0xcc0020
push ecx
push eax
push [ ebp + 0xc ]
push edx
push [ ebp - 0x8 ]
push ebx
push edi
push 0x0
push 0x0
push esi
call [ StretchBlt@IAT ]
mov eax ebx
neg eax
mov [ ebp - 0x40 ] eax
push 0x20
xor eax eax
inc eax
xor ecx ecx
mov [ ebp - 0x3c ] ax
pop eax
push ecx
mov [ ebp - 0x3a ] ax
lea eax [ ebp - 0x48 ]
push eax
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
mov [ ebp - 0x48 ] 0x28
push esi
mov esi [ GetDIBits@IAT ]
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x38 ] ecx
call esi
mov ecx [ ebp - 0x34 ]
mov eax [ ebp + 0x10 ]
push ecx
mov [ eax ] ecx
call sub_42010a
pop ecx
push 0x0
mov edi eax
lea eax [ ebp - 0x48 ]
push eax
push edi
push ebx
mov ebx [ ebp - 0x10 ]
push 0x0
push [ ebp + 0x8 ]
push ebx
call esi
push [ ebp - 0x14 ]
mov esi eax
push ebx
call [ SelectObject@IAT ]
push [ ebp + 0x8 ]
call [ DeleteObject@IAT ]
push ebx
call [ DeleteDC@IAT ]
push [ ebp - 0x8 ]
push 0x0
call [ ReleaseDC@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_45a3f7
push ebp
mov ebp esp
sub esp 0xb0
push ebx
push esi
or esi 0xffffffff
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] esi
or ebx esi
mov [ ebp - 0x4 ] 0x88c00000
mov [ ebp - 0xc ] 0x8
call sub_40d3d2
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
push eax
call [ DestroyWindow@IAT ]
and [ rw-data ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_405cd3
pop esi
xor eax eax
pop ebx
leave
retn 0xc
cmp [ ebp + 0xc ] 0x3
push edi
mov edi [ ebp + 0x8 ]
jb r-xdata
cmp [ ebp + 0xc ] 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_40c935
mov esi [ ebp - 0x8 ]
cmp [ ebp + 0xc ] 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov esi eax
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0xc ] 0x6
jb r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40cdb4
mov ebx eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
cmp esi 0xffffffff
jne r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40cdb4
test al 0x1
je r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0xfffffed4
cdq
sub eax edx
mov esi eax
sar esi 0x1
mov [ ebp - 0x8 ] esi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
and al 0x2
movsx eax al
neg eax
sbb eax eax
push 0x8
not eax
pop ecx
and eax ecx
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
test al 0x10
je r-xdata
mov [ ebp - 0x4 ] 0x88000000
push 0x64
push 0x12c
xor esi esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ SetRect@IAT ]
mov ecx [ ebp - 0xc ]
push ecx
push esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
call [ AdjustWindowRectEx@IAT ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
xor eax eax
push eax
push eax
push eax
push [ rw-data ]
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp - 0x8 ]
mov ebx [ CreateWindowExW@IAT ]
push [ ebp - 0x4 ]
push ecx
push r--data
push [ ebp - 0xc ]
call ebx
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ rw-data ] eax
call [ GetClientRect@IAT ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor esi esi
mov ecx [ eax ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push esi
push esi
push esi
push [ rw-data ]
sub eax 0x119
push 0x18
push 0x500
push 0x4
push eax
push 0x50000000
push ecx
push r--data
push esi
call ebx
push esi
push esi
push esi
push r--data
mov [ rw-data ] eax
call [ CreateDCW@IAT ]
mov ebx [ GetStockObject@IAT ]
push 0x11
mov esi eax
call ebx
push eax
push esi
call [ SelectObject@IAT ]
lea eax [ ebp - 0xb0 ]
push eax
push 0x40
push esi
call [ GetTextFaceW@IAT ]
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
mov edi eax
call [ DeleteDC@IAT ]
imul edi edi 0xfffffff6
lea eax [ ebp - 0xb0 ]
push eax
xor eax eax
push eax
push 0x2
push eax
push 0x4
push 0x1
push eax
push eax
push eax
push 0x258
push eax
push eax
push eax
push 0x48
mov eax edi
cdq
pop ecx
idiv ecx
push eax
call [ CreateFontW@IAT ]
mov esi [ SendMessageW@IAT ]
push 0x1
push eax
push 0x30
push [ rw-data ]
call esi
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
xor edi edi
push edi
push edi
push edi
push [ rw-data ]
mov ecx 0x104
push 0x14
sub eax ecx
push ecx
cdq
push 0x1e
sub eax edx
sar eax 0x1
push eax
push 0x50000001
push edi
mov edi [ CreateWindowExW@IAT ]
push r--data
push 0x200
call edi
mov [ rw-data ] eax
push 0x640000
push 0x0
push 0x401
push eax
call esi
push 0x0
push 0x1
push 0x404
push [ rw-data ]
call esi
xor ecx ecx
push ecx
push ecx
push ecx
push [ rw-data ]
push 0x32
push 0x500
push 0x37
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax 0x118
push eax
push 0x50000000
push [ ebp - 0x2c ]
push r--data
push ecx
call edi
push 0x1
push 0x11
mov [ rw-data ] eax
call ebx
push eax
push 0x30
push [ rw-data ]
call esi
push 0x4
push [ rw-data ]
call [ ShowWindow@IAT ]
pop edi
mov eax [ ebp - 0x10 ]
add eax 0xffffff9c
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
xor [ ebp - 0x4 ] 0x8000000
sub_45a720
push ebp
mov ebp esp
movzx edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx edx
sub ecx esi
jns r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] cl
lea eax [ edx + esi ]
mov ecx 0xff
pop esi
cmp eax ecx
jg r-xdata
xor ecx ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] cl
pop ebp
retn 0x10
mov ecx eax
sub_45a750
push ebp
mov ebp esp
sub esp 0xb8
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x1c ] 0xffffffff
push ebx
push esi
xor ebx ebx
push edi
mov edi 0x50000001
mov [ ebp - 0xc ] 0x1f4
mov [ ebp - 0x4 ] 0x190
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x8 ] 0x88c00000
mov [ ebp - 0x10 ] 0x8
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov esi [ DeleteObject@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x2c ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x3
jb r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call esi
mov [ rw-data ] ebx
cmp esi 0x4
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ DestroyWindow@IAT ]
mov [ rw-data ] ebx
push eax
call esi
mov [ rw-data ] ebx
cmp esi 0x5
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40cdb4
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ ebp - 0xc ] eax
cmp esi 0x6
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40cdb4
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
cmp esi 0x7
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40cdb4
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x18 ]
call sub_40cdb4
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40cdb4
cmp [ ebp + 0x10 ] 0x1
mov ecx eax
mov [ ebp - 0x30 ] ecx
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x2c ]
push ecx
push 0x0
push 0x0
push eax
call [ SetRect@IAT ]
push esi
push 0x0
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
call [ AdjustWindowRectEx@IAT ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ CreateWindowExW@IAT ]
mov ecx [ eax ]
xor eax eax
push eax
push eax
push eax
push [ rw-data ]
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x8 ]
push ecx
push r--data
push [ ebp - 0x10 ]
call esi
lea ecx [ ebp - 0x2c ]
push ecx
push eax
mov [ rw-data ] eax
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
sub ecx [ ebp - 0x2c ]
sub eax [ ebp - 0x28 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x4 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
mov al cl
and al 0x2
movsx eax al
neg eax
sbb eax eax
not eax
and eax [ ebp - 0x10 ]
mov esi eax
mov [ ebp - 0x10 ] esi
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
sub eax 0x16
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
sub ecx 0x16
mov esi [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor esi esi
push esi
push esi
push esi
push [ rw-data ]
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xb
push 0xb
push edi
push [ eax ]
push r--data
push esi
call [ CreateWindowExW@IAT ]
push esi
push esi
push esi
mov edi eax
push r--data
mov [ ebp - 0x8 ] edi
call [ CreateDCW@IAT ]
push 0x11
mov esi eax
call [ GetStockObject@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
lea eax [ ebp - 0xb8 ]
push eax
push 0x40
push esi
call [ GetTextFaceW@IAT ]
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
mov [ ebp - 0xc ] eax
call [ DeleteDC@IAT ]
cmp [ ebp + 0xc ] 0x8
jb r-xdata
xor edi edi
push edi
push edi
push edi
push [ rw-data ]
mov [ ebp + 0x10 ] edi
push eax
push ecx
push edi
push edi
push 0x5000000e
push edi
push r--data
push edi
call esi
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
push edi
push edi
push 0x3
push edi
push edi
push 0x80000000
push [ ecx ]
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax 0x88c00000
mov eax 0x88800000
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax edi
mov eax 0x50000002
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x9
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0x1c ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_4218fb
pop ecx
cmp eax 0x1
jb r-xdata
push edi
push ebx
call [ GetFileSize@IAT ]
mov esi eax
push esi
push 0x2
call [ GlobalAlloc@IAT ]
mov edi eax
push edi
call [ GlobalLock@IAT ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push eax
push ebx
call [ ReadFile@IAT ]
push edi
mov esi eax
call [ GlobalUnlock@IAT ]
push ebx
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
mov ecx [ ebp - 0xc ]
jne r-xdata
xor eax 0x8000000
mov [ ebp - 0x8 ] eax
jmp r-xdata
test cl 0x10
je r-xdata
mov edi [ ebp - 0x14 ]
movsx eax al
and eax 0x2
or eax 0xa0000001
shr eax 0x1
mov [ ebp - 0x14 ] eax
test cl 0x4
je r-xdata
push 0xc
pop esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x20 ]
call sub_40cdb4
cmp eax 0x6
jl r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x1c ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_421943
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push edi
call [ CreateStreamOnHGlobal@IAT ]
lea eax [ ebp + 0x10 ]
push eax
push r--data
xor ebx ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call [ OleLoadPicture@IAT ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push edi
call [ GlobalFree@IAT ]
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
jmp r-xdata
mov eax 0x190
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x24 ]
call sub_40cdb4
test eax eax
js r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x20 ]
call sub_40cdb4
mov esi eax
jmp r-xdata
mov eax [ ecx ]
lea edx [ ebp + 0xc ]
push edx
push ecx
call [ eax + 0xc ]
push 0x2000
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
call [ CopyImage@IAT ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push [ ebp + 0xc ]
mov esi [ ebp - 0x30 ]
push ebx
push 0x172
push esi
call [ SendMessageW@IAT ]
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
push 0x20
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
push eax
push ebx
push ebx
push ebx
push esi
call [ SetWindowPos@IAT ]
jmp r-xdata
push 0x4
push [ rw-data ]
call [ ShowWindow@IAT ]
push edi
call [ GetDC@IAT ]
push [ rw-data ]
mov ebx eax
push ebx
call [ SelectObject@IAT ]
mov ecx [ ebp + 0x8 ]
mov edi eax
mov ecx [ ecx + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
lea eax [ ebp - 0x34 ]
mov edx [ edx ]
push eax
mov ecx ebx
call sub_447a28
pop ecx
push edi
push ebx
call [ SelectObject@IAT ]
mov esi [ ebp - 0x8 ]
push ebx
push esi
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x30 ]
push 0x1
push [ ebp - 0x30 ]
cdq
push [ ebp + 0x10 ]
sub eax edx
sar eax 0x1
add eax 0xb
push eax
push 0xb
push esi
call [ MoveWindow@IAT ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_40cdb4
cmp eax 0x3e8
jg r-xdata
cmp [ ebp + 0xc ] 0xa
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_40cdb4
jmp r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
xor ecx ecx
push ecx
push 0x2
push ecx
push 0x4
push 0x1
push ecx
push ecx
push ecx
push eax
mov eax [ ebp - 0xc ]
imul eax esi
push ecx
push ecx
push ecx
push 0xffffffb8
cdq
pop ecx
idiv ecx
push eax
call [ CreateFontW@IAT ]
push 0x1
push eax
push 0x30
push edi
mov [ rw-data ] eax
call [ SendMessageW@IAT ]
test [ ebp - 0x30 ] 0x20
je r-xdata
sub_45acd3
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x2
pop eax
mov [ edi ] ax
lea eax [ ebp - 0x10 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_45ae3b
push [ eax ]
call [ Ordinal_WSOCK32_10@IAT ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_405cd3
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ edi + 0x4 ] ebx
lea eax [ ecx - 0x1 ]
cmp eax 0xfffe
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edx r--data
call sub_43d614
test al al
je r-xdata
push 0x0
push 0x2
push ecx
call [ Ordinal_WSOCK32_9@IAT ]
mov [ edi + 0x2 ] ax
mov al 0x1
jmp r-xdata
push 0x0
push 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
xor al al
sub_45ad59
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x4 ]
xor eax eax
push eax
push eax
inc edi
push edi
push [ ebx ]
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push esi
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push [ ebp + 0x8 ]
mov esi eax
push esi
push edi
push [ ebx ]
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp + 0xc ]
dec eax
push eax
push 0x0
push esi
call sub_4080ea
push esi
call j_sub_4228ca#2
pop ecx
pop esi
mov ecx [ ebp + 0xc ]
call sub_40c4cd
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
sub_45adca
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_4223f0
pop ecx
mov ebx eax
mov ecx esi
mov [ esi + 0x4 ] ebx
call sub_408176
mov ecx esi
test al al
je r-xdata
push ecx
push ecx
call sub_44646d
jmp r-xdata
push ebx
call sub_41f33f
mov eax [ esi + 0xc ]
dec [ eax ]
call sub_40a6f8
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_403d82
push eax
mov [ esi + 0x8 ] eax
call sub_42010a
pop ecx
mov [ esi ] eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
inc eax
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_41faa0
add esp 0xc
pop ebx
sub_45ae3b
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
call sub_40a6d4
push [ ebp + 0x8 ]
push esi
call sub_45ae79
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_45ae5a
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
call sub_40d3d2
push [ ebp + 0x8 ]
push esi
call sub_45ad59
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_45ae79
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x4 ]
xor eax eax
push eax
push eax
push eax
push eax
inc edi
push edi
push [ ebx ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push esi
push eax
call sub_42010a
pop ecx
mov esi eax
xor eax eax
push eax
push eax
push [ ebp + 0x8 ]
push esi
push edi
push [ ebx ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
dec eax
push eax
push ecx
mov ecx [ ebp + 0xc ]
push esi
call sub_41f2d0
push esi
call j_sub_4228ca#2
pop ecx
pop esi
mov ecx [ ebp + 0xc ]
call sub_41f324
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
sub_45aef6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_44be14
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_45af26
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ecx
xor edi edi
mov ecx ebx
mov [ esp + 0x10 ] esi
mov [ esp + 0x1c ] edi
call sub_412570
push edi
mov [ ebx + 0xc ] 0x1
mov [ ebx ] edi
mov [ esp + 0x18 ] edi
call [ CoInitialize@IAT ]
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ VariantInit@IAT ]
push 0x9
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] edi
mov edi [ ebp + 0x8 ]
pop eax
mov [ esp + 0x20 ] ax
mov eax [ edi + 0x8 ]
dec eax
je r-xdata
call [ CoUninitialize@IAT ]
push 0x3c
call sub_42010a
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
dec eax
je r-xdata
xor eax eax
mov ecx [ edi + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
push 0x0
push 0x0
push [ ecx ]
mov ecx ebx
call sub_441050
mov esi [ esp + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push ebx
push 0x0
push 0x0
jmp r-xdata
dec eax
je r-xdata
and [ esp + 0x38 ] 0x0
push 0x2
mov [ esp + 0x18 ] eax
pop ebx
mov [ esp + 0x30 ] eax
mov [ esp + 0x3c ] 0x1
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
xor ebx ebx
push eax
inc ebx
call sub_44a6f6
and [ esp + 0x48 ] 0x0
push eax
lea ecx [ esp + 0x44 ]
call sub_4113a0
jmp r-xdata
mov [ esp + 0x28 ] eax
mov eax [ eax + 0x4 ]
test eax eax
js r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x1c ]
push edi
push [ eax ]
call sub_45c604
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
mov ecx ebx
call sub_40d18c
mov ecx ebx
test al al
je r-xdata
dec eax
jne r-xdata
test bl 0x1
lea ecx [ esp + 0x30 ]
and ebx 0xfffffffd
call sub_412570
test bl 0x2
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ VariantClear@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4084a6
mov eax [ ebx + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ ebp + 0xc ]
mov eax [ esi + 0x8 ]
mov esi [ esp + 0x14 ]
push 0x0
push ebx
push edi
push [ eax ]
mov ecx esi
call sub_45c604
jmp r-xdata
call sub_40cdb4
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ ebp + 0xc ]
push [ esp + 0x1c ]
push ebx
mov eax [ esp + 0x14 ]
test eax eax
jns r-xdata
lea ecx [ esp + 0x40 ]
call sub_412570
and [ esp + 0x18 ] 0x0
mov eax [ edi + 0x4 ]
mov esi [ esi + 0x1ac ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
cmp eax esi
jg r-xdata
push 0x0
push 0x0
push 0x0
push eax
mov ecx esi
call sub_45c235
xor eax eax
mov ecx [ edi + 0x4 ]
push 0x29
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov esi [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov esi [ esp + 0x10 ]
lea ecx [ eax - 0x1 ]
mov eax [ esi + 0x1a8 ]
mov eax [ eax + ecx * 4 ]
mov ebx [ eax ]
mov [ esp + 0x18 ] ebx
jmp r-xdata
and [ esp + 0x38 ] 0x0
push 0x8
mov [ esp + 0x18 ] eax
pop ebx
mov [ esp + 0x30 ] eax
mov [ esp + 0x3c ] 0x1
mov ecx [ ebp + 0xc ]
push 0x4
pop ebx
lea eax [ esp + 0x20 ]
push eax
call sub_44a6f6
and [ esp + 0x48 ] 0x0
push eax
lea ecx [ esp + 0x44 ]
call sub_4113a0
jmp r-xdata
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
xor ebx ebx
jmp r-xdata
push 0x3c
call sub_42010a
pop ecx
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
test bl 0x4
jmp r-xdata
lea ecx [ esp + 0x30 ]
and ebx 0xfffffff7
call sub_412570
test bl 0x8
je r-xdata
mov [ esp + 0x28 ] eax
mov eax [ eax + 0x4 ]
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ esp + 0x18 ]
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x20 ]
push ebx
push [ eax ]
call sub_441050
mov esi [ esp + 0x10 ]
jmp r-xdata
je r-xdata
sub_45b250
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor esi esi
mov eax [ eax ]
push esi
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] esi
mov [ esp + 0x17 ] 0x1
call [ CoInitialize@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x3
mov [ esp + 0x18 ] esi
jbe r-xdata
call [ CoUninitialize@IAT ]
mov ecx [ esp + 0x1c ]
push esi
lea edx [ esp + 0x3c ]
call sub_43a857
pop ecx
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0xc ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_44be63
mov esi eax
test esi esi
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push r--data
push 0x17
push esi
lea eax [ esp + 0x48 ]
push eax
mov [ esp + 0x28 ] esi
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov ecx esi
call sub_41e3ee
mov [ esp + 0x13 ] al
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_44be14
test al al
je r-xdata
push eax
push r--data
push eax
push 0x3
jmp r-xdata
mov esi [ esp + 0x14 ]
mov ecx esi
call sub_43ae84
mov [ esp + 0x18 ] 0x1
jmp r-xdata
push esi
push r--data
push esi
xor esi esi
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov ecx ebx
call sub_45c235
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x14 ] esi
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0x24 ]
call [ IIDFromString@IAT ]
test eax eax
jns r-xdata
mov ebx [ esp + 0x24 ]
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
and [ esp + 0x14 ] 0x0
mov eax [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x4c ]
push ecx
push esi
call [ eax ]
test eax eax
jns r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0x28
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0x0
push r--data
push 0x0
push 0x2
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
and [ esp + 0x30 ] 0x0
xor ecx ecx
cmp [ esp + 0x13 ] cl
setne cl
push ecx
push ebx
push [ esp + 0x1c ]
mov ecx eax
call sub_44157b
mov [ esp + 0x30 ] eax
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
call [ VariantInit@IAT ]
and [ esp + 0x30 ] 0x0
and [ esp + 0x34 ] 0x0
push 0x9
pop eax
mov [ esp + 0x28 ] ax
test ebx ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
push 0x0
push r--data
push 0x0
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x28 ]
push eax
call sub_44a6f6
lea eax [ esp + 0x28 ]
push eax
call [ VariantClear@IAT ]
xor eax eax
push 0x1
sub_45b482
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
xor edi edi
push r--data
mov [ esp + 0x18 ] edi
call sub_40ca8e
lea eax [ esp + 0x28 ]
push eax
call [ VariantInit@IAT ]
mov esi [ ebp + 0x8 ]
push 0x9
pop eax
mov [ esp + 0x28 ] ax
mov eax [ esi + 0x4 ]
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
mov edx [ eax ]
mov ecx edx
mov [ esp + 0x14 ] edx
call sub_44be14
test al al
je r-xdata
mov ecx edx
call sub_4084a6
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x18 ]
inc [ eax ]
mov [ esp + 0x24 ] eax
call sub_40b8a7
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_43d614
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x2
jae r-xdata
push edi
push r--data
push edi
push 0x1
mov ecx ebx
call sub_45c235
mov edi eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
push 0x50
call sub_42010a
pop ecx
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push edi
push r--data
push edi
push 0x1
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
call [ VariantClear@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
push 0xe
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x18 ] eax
call sub_40d2c0
mov ecx [ esp + 0x14 ]
test al al
je r-xdata
cmp [ ebx + 0x180 ] edi
je r-xdata
mov ecx edi
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov ecx ebx
call sub_45c235
mov edi eax
jmp r-xdata
push 0x2
pop eax
mov [ esp + 0x10 ] eax
call sub_4084a6
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x38 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x3c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x40 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x44 ] eax
inc [ eax ]
lea eax [ esp + 0x38 ]
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x48 ]
push eax
call sub_44afce
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_405cd3
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov eax [ ebx + 0x17c ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + edx * 4 - 0x4 ]
mov eax [ eax ]
add eax 0x8
push eax
call sub_40d89e
jmp r-xdata
mov [ esp + 0x30 ] ecx
jmp r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
push edi
push edi
push edi
push esi
mov [ esp + 0x14 ] edi
mov ecx [ esi + 0x4 ]
mov esi [ ecx + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x14 ] eax
jmp r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffd
lea ecx [ esp + 0x38 ]
mov [ esp + 0x10 ] eax
call sub_405cd3
mov eax [ esp + 0x10 ]
push eax
mov ecx ebx
call sub_41cf79
neg eax
sbb al al
inc al
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
test al 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x28 ]
push eax
call sub_44a6f6
mov esi [ ecx + 0x4 ]
test esi esi
jns r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
lea eax [ ebx + 0x188 ]
push eax
push ebx
push [ esp + 0x1c ]
push [ esi + 0x8 ]
push ecx
mov ecx [ esp + 0x24 ]
call sub_4403e0
mov ecx eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_405cd3
push 0x30
call sub_42010a
pop ecx
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
mov [ esp + 0x14 ] edi
mov ecx [ esi + 0x4 ]
sub esp 0x10
mov edx [ ecx + 0x4 ]
mov ecx esp
push edx
mov [ ecx + 0x8 ] edi
call sub_4113a0
mov ecx [ esp + 0x24 ]
lea eax [ ebx + 0x178 ]
push eax
call sub_44001d
mov [ esp + 0x14 ] eax
jmp r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ ebx + 0x178 ]
push eax
call sub_45d0a1
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] eax
call sub_405cd3
sub_45b74b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x8 ]
push esi
push edi
mov esi r--data
lea edi [ esp + 0x60 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x40 ]
push eax
mov [ esp + 0x18 ] ecx
movsd [ edi ] [ esi ]
call [ VariantInit@IAT ]
mov ecx [ ebp + 0xc ]
xor ebx ebx
xor esi esi
inc esi
push r--data
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] esi
call sub_40ca8e
push ebx
call [ CoInitialize@IAT ]
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x8 ]
push 0x29
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
call [ CoUninitialize@IAT ]
xor eax eax
inc eax
cmp [ esp + 0x20 ] eax
jbe r-xdata
push r--data
mov ecx esi
call sub_40ca8e
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov edx r--data
mov eax [ ecx ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x54 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x58 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x50 ]
inc [ eax ]
mov [ esp + 0x5c ] eax
call sub_41f885
test al al
je r-xdata
mov [ esp + 0x28 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ eax ]
lea edx [ esp + 0x64 ]
call sub_43a857
pop ecx
test eax eax
jns r-xdata
mov edi [ SetErrorMode@IAT ]
push 0x1
call edi
mov esi eax
mov eax [ esp + 0x28 ]
neg eax
sbb eax eax
lea ecx [ esp + 0x60 ]
and eax ecx
lea ecx [ esp + 0x34 ]
push ecx
push 0x1
push [ esp + 0x38 ]
mov [ esp + 0x40 ] r--data
push 0x2
push 0x15
push ebx
push eax
push ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
call [ CoGetInstanceFromFile@IAT ]
test eax eax
js r-xdata
cmp [ esp + 0x20 ] 0x2
mov [ esp + 0x24 ] 0x1
jbe r-xdata
mov ecx [ esp + 0x14 ]
push ebx
push ebx
push ebx
push eax
call sub_45c235
mov ebx eax
jmp r-xdata
lea eax [ esp + 0x24 ]
push eax
push r--data
push ebx
push [ esp + 0x3c ]
mov [ esp + 0x34 ] ebx
call [ CoGetObject@IAT ]
test eax eax
js r-xdata
mov eax [ esp + 0x38 ]
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push ebx
call [ GetRunningObjectTable@IAT ]
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
call [ VariantClear@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x14 ]
push ebx
push ebx
push ebx
push eax
call sub_45c235
push esi
mov ebx eax
call edi
mov eax [ esp + 0x24 ]
push esi
mov [ esp + 0x14 ] eax
call edi
mov ecx [ esp + 0x28 ]
push ebx
push ebx
push ebx
push 0x80004005
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x28 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x24 ]
test eax eax
jns r-xdata
mov [ esp + 0x24 ] 0x1
mov ecx esi
call sub_40cdb4
cmp eax 0x1
jl r-xdata
push ebx
push ebx
push ebx
push 0x80020006
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_405cd3
mov eax [ esp + 0x28 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x18 ] ebx
mov ecx [ eax ]
push eax
mov [ esp + 0x34 ] 0x1
call [ ecx + 0x14 ]
mov eax [ esp + 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx [ esp + 0x24 ]
call sub_45c235
mov ebx eax
jmp r-xdata
push 0x9
pop ecx
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x40 ]
mov [ esp + 0x40 ] cx
mov ecx [ ebp + 0xc ]
push eax
call sub_44a6f6
jmp r-xdata
mov edx [ esp + 0x2c ]
sub esp 0x10
lea esi [ esp + 0x70 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx eax
movsd [ edi ] [ esi ]
call sub_43ac4b
add esp 0x10
test eax eax
mov eax [ esp + 0x10 ]
jne r-xdata
mov eax [ esp + 0x28 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx ebx
jmp r-xdata
cmp [ esp + 0x18 ] ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push ebx
push ebx
push ebx
push 0x80028ca0
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x20 ]
mov ecx [ eax ]
push edx
push [ esp + 0x1c ]
push eax
call [ ecx + 0x18 ]
test eax eax
js r-xdata
mov eax [ esp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov eax [ esp + 0x28 ]
push ebx
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esp + 0x2c ]
mov ecx [ esp + 0x10 ]
sub esp 0x10
lea esi [ esp + 0x70 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_43ac4b
add esp 0x10
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esp + 0x10 ] ebx
mov esi [ esp + 0x30 ]
cmp esi [ esp + 0x24 ]
je r-xdata
mov eax [ esp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
mov [ esp + 0x30 ] esi
sub_45bae6
push ebp
mov ebp esp
sub esp 0x2a0
push ebx
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
call sub_44be14
test al al
jne r-xdata
push esi
xor esi esi
inc esi
mov [ ebp - 0x1c ] esi
cmp [ edi + 0x8 ] esi
jbe r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov eax [ edi + 0x4 ]
xor edx edx
mov edi [ eax ]
cmp [ edi + 0xc ] 0x8
jne r-xdata
mov ecx [ edx + 0x4 ]
call sub_40cdb4
mov esi eax
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jl r-xdata
pop edi
xor eax eax
pop ebx
leave
retn 0x8
mov edi edx
mov edi [ edi ]
jmp r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
cmp esi 0x7
jg r-xdata
cmp esi 0x7
jne r-xdata
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x28 ] edx
call sub_45bf43
test al al
je r-xdata
mov edi [ edi + 0x8 ]
cmp esi 0x5
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
mov [ ebp - 0x8 ] edx
mov eax [ edi ]
push r--data
push edi
call [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
test eax eax
js r-xdata
mov eax [ edi ]
lea ecx [ ebp + 0x8 ]
push ecx
push 0x800
push edx
push edi
call [ eax + 0x10 ]
test eax eax
jne r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
mov eax [ edi ]
lea ecx [ ebp + 0x8 ]
push ecx
push [ eax ]
lea ecx [ ebp - 0x30 ]
push 0x6
call sub_45aede
call eax
push 0x104
lea eax [ ebp - 0x2a0 ]
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2a0 ]
push eax
call sub_40ca8e
jmp r-xdata
mov eax [ edi ]
push 0x800
push 0x0
push edi
call [ eax + 0x10 ]
mov edi eax
mov esi [ ebp - 0x40 ]
push esi
mov eax [ esi ]
call [ eax + 0xc ]
mov ecx [ esi ]
push esi
mov edi eax
call [ ecx + 0x8 ]
mov esi [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
push [ ebp - 0x30 ]
call [ FreeLibrary@IAT ]
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
test edi edi
js r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
push ecx
call [ eax + 0xc ]
mov esi [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
lea eax [ ebp - 0x94 ]
push 0x28
push eax
lea eax [ ebp - 0x34 ]
push eax
call [ StringFromGUID2@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x94 ]
push eax
call sub_40ca8e
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ecx ]
cmp esi 0x1
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
xor edx edx
push edx
push edx
push edx
lea edx [ ebp + 0x8 ]
push edx
jmp r-xdata
lea edx [ ebp - 0x20 ]
push edx
lea edx [ ebp + 0x8 ]
push edx
push ecx
call [ eax + 0x48 ]
test eax eax
je r-xdata
xor ebx ebx
push ebx
push ebx
lea edx [ ebp + 0x8 ]
push edx
push ebx
push 0xffffffff
push ecx
call [ eax + 0x30 ]
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40ca8e
push [ ebp + 0x8 ]
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp esi 0x4
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x14 ]
push edx
push [ ebp - 0x20 ]
push eax
call [ ecx + 0x14 ]
cmp [ ebp - 0x14 ] 0x5
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
push eax
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ecx + 0x10 ]
movzx eax [ ecx + 0x1a ]
push eax
movzx eax [ ecx + 0x18 ]
push eax
push ecx
call [ QueryPathOfRegTypeLib@IAT ]
mov ecx [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov edx [ ecx ]
push ecx
mov esi eax
call [ edx + 0x30 ]
test esi esi
jne r-xdata
cmp esi 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
and [ ebp - 0xc ] 0x0
xor edi edi
mov [ ebp - 0x44 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_40ca8e
push [ ebp - 0x10 ]
call [ SysFreeString@IAT ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x5
jne r-xdata
cmp esi 0x6
jne r-xdata
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0xc ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
lea eax [ ebp - 0x94 ]
push 0x28
push eax
lea eax [ ebp - 0x34 ]
push eax
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x14 ] esi
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push edi
push eax
call [ ecx + 0x14 ]
cmp [ ebp - 0x14 ] 0x5
jne r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
mov eax [ ebp - 0x1c ]
cmp eax 0x6
jne r-xdata
inc edi
cmp edi [ ebp - 0x44 ]
jb r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x18 ]
mov ecx [ eax ]
push edx
push edi
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x3c ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
mov edx [ ebp - 0x3c ]
push edx
movzx eax [ edx + 0x30 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4c ]
or [ ebp - 0x24 ] 0xffffffff
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0xc ] edx
jbe r-xdata
cmp eax 0x3
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x94 ]
push eax
call sub_40ca8e
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x38 ]
mov ecx [ eax ]
push edx
mov edx [ ebp - 0x10 ]
push edx
push eax
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call [ ProgIDFromCLSID@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x10 ]
inc edx
mov [ ebp - 0x10 ] edx
cmp edx [ ebp - 0xc ]
jb r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push [ ebp - 0x38 ]
push eax
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
mov ecx [ eax ]
push edx
push 0x0
push eax
call [ ecx + 0x48 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
je r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
xor esi esi
inc esi
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call [ ecx + 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
call sub_40ca8e
push [ ebp - 0x4 ]
call [ CoTaskMemFree@IAT ]
jmp r-xdata
sub_45bf55
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_45bf80
push ebp
mov ebp esp
sub esp 0x98
push ebx
push esi
push edi
mov esi ecx
xor ecx ecx
xor eax eax
push 0x20
mov [ ebp - 0x1c ] eax
push ecx
lea eax [ ebp - 0x94 ]
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x20 ] 0x20404
mov [ ebp - 0x18 ] 0xc0
mov [ ebp - 0x14 ] 0x46000000
call sub_421970
mov edx [ ebp + 0x8 ]
add esp 0xc
test edx edx
je r-xdata
xor edi edi
inc edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx ebx
call sub_44be14
xor edi edi
inc edi
push 0xd
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0xc ] 0x8
jne r-xdata
cmp [ edx + 0xc ] 0x8
jne r-xdata
xor eax eax
mov eax [ ebx ]
jmp r-xdata
xor eax eax
mov eax [ edx ]
jmp r-xdata
push edi
push r--data
cmp [ ebx + 0xc ] 0x8
jne r-xdata
test eax eax
je r-xdata
push 0x1
push r--data
push 0x0
push 0x2
jmp r-xdata
cmp [ edx + 0xc ] 0x8
jne r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax [ ebx ]
jmp r-xdata
mov ecx esi
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
mov [ ebp + 0x8 ] ecx
test ecx ecx
jne r-xdata
cmp [ ebx + 0xc ] 0x8
jne r-xdata
push edi
push r--data
jmp r-xdata
cmp [ eax ] cx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0xc ]
push edx
push 0x400
push edi
lea edx [ ebp - 0x24 ]
push edx
mov esi r--data
push esi
push ecx
call [ eax + 0x14 ]
test eax eax
js r-xdata
xor esi esi
mov esi [ ebx ]
jmp r-xdata
push 0x0
push edi
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0xc ]
mov eax [ ecx ]
push edx
push 0x400
push edi
lea edx [ ebp - 0x28 ]
push edx
push esi
push ecx
call [ eax + 0x14 ]
test eax eax
js r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp esi edi
je r-xdata
mov esi [ esi + 0x8 ]
lea eax [ ebp - 0x3c ]
push eax
call [ VariantInit@IAT ]
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x3c ]
push ecx
push edi
push esi
call [ eax + 0xc ]
mov esi eax
test esi esi
jns r-xdata
mov [ ebp - 0xc ] 0xfffffffc
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
push 0x10
call sub_41fa89
and [ ebp - 0x44 ] 0x0
mov esi eax
pop ecx
lea eax [ ebp - 0x74 ]
push eax
mov [ ebp - 0x4c ] esi
call [ VariantInit@IAT ]
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x50 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x94 ]
push edx
lea edx [ ebp - 0x74 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push 0x3
push 0x800
push r--data
push [ ebp - 0xc ]
push eax
call [ ecx + 0x18 ]
push esi
mov [ ebp + 0x8 ] eax
call j_sub_4228ca
mov eax [ ebp + 0x8 ]
pop ecx
test eax eax
jns r-xdata
mov ecx ebx
mov [ ebp - 0x3c ] di
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] edi
cmp esi edi
jne r-xdata
mov ecx ebx
call sub_412570
xor eax eax
push edi
push eax
push eax
mov [ ebx + 0xc ] edi
mov [ ebx ] eax
push esi
jmp r-xdata
mov esi [ ebp - 0x6c ]
test esi esi
je r-xdata
mov ecx 0x80020009
push edi
push 0x0
cmp eax ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_44a6f6
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
push edi
push r--data
push 0x0
push edi
jmp r-xdata
push 0xd
pop eax
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x64 ] ax
mov eax [ esi ]
push ecx
push esi
call [ eax ]
mov ecx [ esi ]
push esi
mov [ ebp + 0x8 ] eax
call [ ecx + 0x8 ]
mov esi [ ebp - 0x5c ]
test esi esi
jne r-xdata
push 0x0
push eax
jmp r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ecx
call sub_45c235
mov eax [ esi ]
push esi
call [ eax + 0x14 ]
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_44a6f6
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
mov esi [ ebp - 0x8 ]
push 0xd
pop ecx
push edi
push esi
push esi
push [ ebp + 0x8 ]
jmp r-xdata
sub_45c235
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x180 ] ebx
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ esi ]
push ebx
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_44d7e4
xor eax eax
cmp [ ebp + 0x14 ] al
sete al
dec eax
jmp r-xdata
xor eax eax
mov ecx [ esi + 0x180 ]
mov eax [ esi + 0x17c ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov edi [ eax ]
mov ecx edi
mov [ ebp + 0x14 ] edi
call sub_44016d
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
push ebx
mov ecx edi
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] 0x1
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x48 ]
call sub_412570
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push 0x2
pop ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_44d712
push [ ebp + 0x10 ]
xor ebx ebx
lea ecx [ ebp - 0x38 ]
inc ebx
call sub_40caee
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x48 ]
and ebx 0xfffffffd
call sub_405cd3
push eax
lea ecx [ ebp - 0x58 ]
call sub_408182
lea eax [ ebp - 0x58 ]
push eax
push 0x1
mov ecx edi
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x58 ]
call sub_412570
test bl 0x2
je r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
lea ecx [ ebp - 0x38 ]
and ebx 0xfffffffe
call sub_405cd3
mov edi [ ebp + 0x14 ]
cmp [ edi + 0x8 ] 0x0
je r-xdata
or ebx 0x8
call sub_4084a6
mov ecx [ edi + 0x10 ]
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x58 ]
push eax
or ebx 0x4
call sub_44afce
mov ecx eax
jmp r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
push [ edi + 0x8 ]
lea ecx [ ebp - 0x58 ]
call sub_41d6b4
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x58 ]
push eax
push 0x2
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x58 ]
call sub_412570
test bl 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
and ebx 0xfffffff7
call sub_405cd3
mov eax [ ecx ]
mov [ ebp - 0x38 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x34 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x2c ] eax
inc [ eax ]
test bl 0x8
je r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
push [ edi + 0x4 ]
lea ecx [ ebp - 0x58 ]
call sub_41d6b4
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x58 ]
push eax
push 0x3
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x58 ]
call sub_412570
xor ebx ebx
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] 0x1
call [ VariantInit@IAT ]
push 0x9
pop eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] ax
mov [ ebp - 0x20 ] edi
mov eax [ edi ]
push edi
call [ eax + 0x4 ]
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4c ] 0x1
call sub_41baef
lea ecx [ ebp - 0x58 ]
call sub_412570
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0xc ]
mov ecx [ ecx + eax * 4 - 0x4 ]
call sub_44a6f6
push ecx
lea eax [ ebp + 0x17 ]
push eax
push ecx
push ebx
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx esi
mov [ rw-data ] 0x1
call sub_456a38
test al al
jne r-xdata
lea ecx [ ebp - 0x58 ]
call sub_405cd3
mov eax [ edi + 0x10 ]
mov ecx [ ebp + 0x14 ]
and [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
push 0x5
mov [ ebp - 0x3c ] 0x1
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x48 ]
call sub_412570
movzx eax [ edi ]
test ax ax
jne r-xdata
push [ edi + 0xc ]
lea ecx [ ebp - 0x58 ]
call sub_41d6b4
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x58 ]
push eax
push 0x4
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x58 ]
call sub_412570
mov eax [ esi ]
push ebx
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_44d7e4
lea eax [ ebp - 0x28 ]
push eax
mov [ rw-data ] bl
call [ VariantClear@IAT ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
call sub_412570
lea ecx [ ebp - 0x14 ]
call sub_4404c9
lea ecx [ ebp - 0x38 ]
call sub_405cd3
push ecx
lea eax [ ebp + 0x17 ]
push eax
push ecx
push 0x1
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx esi
call sub_456a38
mov edi [ ebp + 0x14 ]
and [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
push 0x8
mov ecx edi
mov [ ebp - 0x3c ] 0x1
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x48 ]
call sub_412570
jmp r-xdata
mov eax [ edi + 0x1c ]
call [ GetLastError@IAT ]
and [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
push 0x6
mov ecx edi
mov [ ebp - 0x3c ] 0x1
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x48 ]
call sub_412570
push [ esi + 0xf4 ]
call sub_4433b0
and [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
push 0x7
mov ecx edi
mov [ ebp - 0x3c ] 0x1
call sub_4401fa
mov ecx eax
call sub_43a25b
lea ecx [ ebp - 0x48 ]
call sub_412570
lea ecx [ edi + 0x8 ]
push 0xe
call sub_40d2c0
lea ecx [ edi + 0x8 ]
test al al
je r-xdata
sub_45c604
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x14 ] ebx
call sub_40d3d2
lea ecx [ ebp - 0x9c ]
call sub_40d3d2
lea ecx [ ebp - 0x8c ]
call sub_40d3d2
push 0x6
xor esi esi
pop ecx
xor eax eax
mov [ ebp - 0x4c ] esi
lea edi [ ebp - 0x48 ]
[ edi ]
mov edi [ ebp + 0x18 ]
mov ecx edi
call sub_412570
mov ecx [ ebp + 0x8 ]
push esi
lea edx [ ebp - 0xbc ]
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
call sub_43a857
pop ecx
test eax eax
jns r-xdata
mov ebx [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x9
pop eax
push ebx
push [ ebp + 0x10 ]
mov [ ebp - 0x7c ] ax
lea eax [ ebp - 0xbc ]
push eax
call sub_43aee5
mov edi eax
add esp 0xc
test edi edi
js r-xdata
push esi
push esi
push esi
push eax
mov ecx ebx
jmp r-xdata
push esi
push esi
push esi
push edi
push esi
push esi
push esi
push 0x3
push 0x2
push esi
push esi
push 0xffffffff
push esi
call [ CoInitializeSecurity@IAT ]
push 0x10
lea eax [ ebp - 0x6c ]
push esi
push eax
call sub_421970
mov ecx [ ebp + 0xc ]
add esp 0xc
lea edx [ ebp - 0x68 ]
call sub_43b289
cmp [ ebp + 0x10 ] esi
je r-xdata
call sub_45c235
mov esi eax
push 0x9
mov [ ebp - 0x64 ] esi
pop ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x18 ] 0x1
call sub_407e53
push r--data
lea ecx [ ebp - 0x5c ]
call sub_452628
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
push edi
lea eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_45d029
push eax
lea ecx [ ebp - 0x9c ]
call sub_40c935
lea ecx [ ebp - 0xac ]
call sub_405cd3
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x98 ]
mov [ ebp - 0x24 ] eax
push 0xffffffff
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_43d936
push eax
lea ecx [ ebp - 0x8c ]
call sub_40c935
lea ecx [ ebp - 0xac ]
call sub_405cd3
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x88 ]
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x64 ] esi
je r-xdata
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
push ebx
mov [ ebp - 0x20 ] ebx
call sub_4218fb
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x2c ] eax
test ebx ebx
je r-xdata
mov [ ebp - 0x7c ] bx
mov [ ebp - 0x74 ] eax
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0xc
lea eax [ ebp - 0x10 ]
push esi
push eax
mov [ ebp - 0x74 ] esi
call sub_421970
mov eax [ ebp - 0x74 ]
add esp 0xc
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x6c ]
push eax
push 0x15
push esi
lea eax [ ebp - 0xbc ]
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x8 ] esi
call [ CoCreateInstanceEx@IAT ]
push [ ebp - 0x68 ]
mov edi eax
call [ CoTaskMemFree@IAT ]
test edi edi
js r-xdata
lea eax [ ebp - 0x30 ]
push 0x9
mov [ ebp - 0x38 ] eax
pop ebx
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x40 ] 0x2
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x3c ] 0x3
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x64 ] eax
jmp r-xdata
test edi edi
js r-xdata
push 0x1
push r--data
push esi
push 0x1
jmp r-xdata
push 0x800
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ ebp - 0x48 ]
push [ ebp - 0x4c ]
push eax
call [ CoSetProxyBlanket@IAT ]
mov edi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x18 ]
lea eax [ ebp - 0x7c ]
push eax
call sub_44a6f6
mov eax [ ebp - 0x74 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
lea ecx [ ebp - 0x8c ]
call sub_405cd3
lea ecx [ ebp - 0x9c ]
call sub_405cd3
lea ecx [ ebp - 0x5c ]
call sub_405cd3
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x14
sub_45c8b7
push ebp
mov ebp esp
sub esp 0x108
mov eax [ ebp + 0x18 ]
push ebx
mov eax [ eax + 0x8 ]
xor ebx ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x34 ] 0xfffffffd
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x5 ] bl
test esi esi
je r-xdata
xor eax eax
inc eax
push eax
push r--data
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov ecx esi
call sub_45cff8
test al al
jne r-xdata
mov ecx esi
call sub_44be14
test al al
je r-xdata
push 0x1
push r--data
push ebx
push 0x2
push 0xc
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
push 0x8
pop eax
cmp [ esi + 0xc ] eax
jne r-xdata
call sub_45c235
push 0xf
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
cmp [ esi + 0xc ] 0xc
jne r-xdata
mov eax ebx
mov eax [ esi ]
jmp r-xdata
push 0x1
push r--data
push ebx
push 0x4
jmp r-xdata
cmp [ esi + 0xc ] 0xf
jne r-xdata
mov esi ebx
mov esi [ esi ]
jmp r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
mov [ ebp - 0x104 ] ebx
call sub_43abf3
pop ecx
test eax eax
jns r-xdata
mov esi [ eax + 0x8 ]
mov [ ebp - 0x14 ] esi
test esi esi
je r-xdata
mov ecx edi
jmp r-xdata
mov esi ebx
mov esi [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub esp 0x10
mov ecx esp
push [ ebp + 0x14 ]
call sub_41d6b4
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x18 ]
push [ ebp + 0x8 ]
call sub_4497b6
push ebx
push eax
mov ecx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp + 0x8 ] ecx
cmp cx ax
jne r-xdata
push 0x1
push ebx
mov ecx edi
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x74 ]
push [ ebp + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41d6b4
push eax
mov ecx esi
call sub_44503c
lea ecx [ ebp - 0x74 ]
mov esi eax
call sub_412570
push ebx
push esi
jmp r-xdata
mov esi [ ebp - 0xc ]
push 0x10
inc esi
xor ecx ecx
pop edx
mov eax esi
mul edx
seto cl
push 0x4
pop edx
neg ecx
or ecx eax
xor eax eax
add ecx edx
setb al
neg eax
or eax ecx
push eax
call sub_41fa89
pop ecx
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] 0x3
test edx edx
je r-xdata
push ebx
push eax
mov ecx ebx
mov [ ebp + 0x14 ] ecx
push sub_43a215
push esi
mov [ eax ] esi
add eax 0x4
push 0x10
pop edx
mov ecx eax
mov [ ebp + 0x14 ] eax
call sub_41ac65
mov ecx [ ebp + 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
push ecx
push [ ebp + 0x14 ]
mov ecx esi
call sub_43a8c8
add esp 0xc
test eax eax
js r-xdata
cmp [ ebp - 0x104 ] 0x0
je r-xdata
mov edi eax
mov ebx edi
shl ebx 0x4
add ebx 0xfffffff0
add ebx ecx
mov eax [ ebp - 0xc ]
mov esi ebx
test eax eax
je r-xdata
test [ ebp - 0x100 ] 0x1
je r-xdata
test [ ebp + 0x8 ] 0xc
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] eax
je r-xdata
mov ecx ebx
mov [ ebp + 0x10 ] ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx ebx
mov eax [ eax + 0x4 ]
push [ eax + esi * 4 ]
call sub_43a25b
inc esi
sub ebx 0x10
cmp esi edi
jb r-xdata
mov edi [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
xor ebx ebx
cmp [ ebp - 0x100 ] 0x1
jne r-xdata
cmp [ ebp - 0xf8 ] bx
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
call [ VariantInit@IAT ]
push 0x20
lea eax [ ebp - 0x64 ]
push ebx
push eax
call sub_421970
mov ecx [ ebp - 0x14 ]
mov esi [ ebp + 0x8 ]
mov eax [ ecx ]
add esp 0xc
cmp [ ebp - 0x5 ] 0x0
lea edx [ ebp - 0x18 ]
push edx
lea edx [ ebp - 0x64 ]
push edx
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x18 ]
shl eax 0x4
add esi 0xfffffff0
push 0x2
add esi eax
mov eax [ ebp - 0xc ]
pop edx
mov [ ebp + 0x8 ] 0x1
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x44 ]
push edx
push ebx
jmp r-xdata
inc ecx
sub esi 0x10
mov [ ebp + 0x10 ] ecx
cmp ecx eax
jb r-xdata
push esi
call [ VariantClear@IAT ]
mov ecx [ ebp + 0x10 ]
mov edx 0x4008
movzx eax [ ebp + ecx * 4 - 0xf4 ]
mov [ esi ] ax
cmp ax dx
jne r-xdata
test eax eax
jns r-xdata
cmp [ ebp - 0x20 ] 0x1
jne r-xdata
lea edx [ ebp - 0x2c ]
push edx
push esi
push 0x800
push r--data
push [ ebp - 0x10 ]
push ecx
call [ eax + 0x18 ]
cmp eax 0x80020003
jne r-xdata
cmp [ ebp + ecx * 4 - 0xf2 ] dx
jne r-xdata
mov edi [ ebp - 0x1c ]
mov eax [ edi + 0x4 ]
push 0x2
mov eax [ eax + ecx * 4 ]
pop edx
cmp [ eax + 0xc ] 0x6
mov eax [ ebp - 0xc ]
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
mov [ esi + 0x8 ] eax
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push ebx
add ecx edi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x44 ]
push eax
call sub_44a6f6
mov eax [ ebp - 0xc ]
mov esi ebx
test eax eax
je r-xdata
mov ecx 0x80020009
cmp eax ecx
jne r-xdata
push 0x1
push ebx
push ebx
push eax
mov edx [ ebp - 0x14 ]
push 0x4
pop ecx
xor eax eax
cmp si cx
mov ecx [ edx ]
sete al
lea esi [ ebp - 0x18 ]
push esi
lea esi [ ebp - 0x64 ]
push esi
push ebx
lea esi [ ebp - 0x2c ]
push esi
lea eax [ eax * 4 + 0x4 ]
push eax
push 0x800
push r--data
push [ ebp - 0x10 ]
push edx
call [ ecx + 0x18 ]
mov [ esi + 0x8 ] esi
lea eax [ ebp - 0x44 ]
push eax
call [ VariantClear@IAT ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov edi [ ebp + 0x14 ]
shl eax 0x4
add edi 0xfffffff0
add edi eax
push 0x1
push ebx
lea eax [ ebp - 0x64 ]
push eax
push ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
push ecx
mov ecx eax
call sub_441693
inc esi
sub edi 0x10
cmp esi [ ebp - 0xc ]
jb r-xdata
cmp [ ebp - 0x104 ] 0x0
je r-xdata
mov ecx edi
call sub_45c235
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0x6
jne r-xdata
movzx ecx [ ebp + esi * 4 - 0xf4 ]
mov edx 0x4024
cmp cx dx
je r-xdata
mov ecx ebx
mov ecx [ eax ]
jmp r-xdata
test [ ebp + esi * 4 - 0xf2 ] 0x2
jne r-xdata
push edi
call sub_44a6f6
test ecx 0x4000
jne r-xdata
push 0x8
pop ecx
cmp [ edi ] cx
jne r-xdata
sub_45cd12
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi ecx
test esi esi
je r-xdata
or eax 0xffffffff
push r--data
mov ecx esi
call sub_40ca8e
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
je r-xdata
push 0x3
jmp r-xdata
push 0x1
call sub_45c8b7
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x14
sub_45cd56
push ebp
mov ebp esp
sub esp 0x18
mov edx [ ebp + 0x10 ]
xor eax eax
push esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
test edx edx
je r-xdata
push edx
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push eax
push 0x4
cmp [ edx + 0x8 ] eax
jbe r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x8
jne r-xdata
push edx
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push eax
push 0x8
jmp r-xdata
call sub_45c8b7
lea ecx [ ebp - 0x14 ]
mov esi eax
call sub_412570
mov eax esi
pop esi
leave
retn 0xc
sub_45cdb5
push ebp
mov ebp esp
sub esp 0x40
mov edx [ ebp + 0x8 ]
push ebx
mov edx [ edx + 0x4 ]
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x34 ] ecx
xor eax eax
mov [ ebp - 0x8 ] ecx
mov ecx [ esi ]
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0xe ] ax
mov eax [ edx + ecx * 4 ]
push edi
movsx eax [ eax + 0xa ]
or edi 0xffffffff
inc ecx
mov [ ebp - 0xc ] eax
mov eax [ edx + ecx * 4 ]
mov [ esi ] ecx
push 0x47
pop esi
cmp [ eax + 0x8 ] si
mov esi [ ebp + 0xc ]
mov [ ebp - 0x10 ] di
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
xor edi edi
mov eax [ edx + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
inc edi
dec eax
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_412570
lea ecx [ ebp - 0x18 ]
call sub_44a46f
lea ecx [ ebp - 0x28 ]
call sub_405800
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx eax [ ecx + 0x8 ]
sub eax 0x47
je r-xdata
test edi edi
je r-xdata
sub eax 0x37
jne r-xdata
mov eax [ ebp - 0xc ]
inc [ esi ]
push 0x7f
pop esi
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] si
call sub_40b6d0
mov edx [ ebp - 0x24 ]
xor ecx ecx
mov [ ebp + 0xc ] ecx
mov eax [ edx ]
dec edi
jmp r-xdata
push ecx
lea ecx [ ebp - 0x28 ]
call sub_40b6d0
inc [ esi ]
jmp r-xdata
mov ecx [ esi ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_44d520
xor edi edi
mov eax [ edx + ecx * 4 ]
push 0x40
cmp [ eax + 0x8 ] 0x33
pop esi
jne r-xdata
or edi 0xffffffff
push edi
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx ebx
call sub_40fa40
test eax eax
js r-xdata
push 0x0
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
push [ eax ]
call sub_40d2d2
test al al
je r-xdata
jmp r-xdata
test [ ebp - 0x8 ] 0x100
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_41baef
mov edx [ ebp - 0x24 ]
mov ecx [ ebp + 0xc ]
push 0x7f
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] si
pop esi
jne r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
cmp [ esi + 0xc ] 0x8
mov ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ edx + ecx * 4 ]
jmp r-xdata
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] si
je r-xdata
mov edi ecx
inc ecx
mov [ ebp + 0xc ] ecx
cmp [ esi + 0xc ] 0x5
jne r-xdata
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x35
je r-xdata
cmp [ eax + 0x8 ] si
je r-xdata
mov eax [ edx + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6e
jmp r-xdata
inc ecx
mov [ ebp + 0xc ] ecx
lea ecx [ ebp - 0x3c ]
call sub_412570
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x30 ] 0x6
mov eax [ ecx + eax * 4 ]
push 0x40
movzx eax [ eax + 0x8 ]
pop esi
cmp ax si
je r-xdata
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
push 0x40
pop esi
mov ecx ebx
call sub_44d520
jmp r-xdata
or edi 0xffffffff
push 0x7f
pop ecx
cmp ax cx
je r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx ebx
call sub_45f211
test eax eax
js r-xdata
mov [ ebp + 0xc ] edi
jmp r-xdata
or edi 0xffffffff
jmp r-xdata
mov esi [ ebp + 0x8 ]
sub_45cff8
push esi
push 0x8
mov esi ecx
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
inc eax
pop esi
retn
push 0xc
mov ecx esi
call sub_40d2c0
test al al
jne r-xdata
push 0xf
mov ecx esi
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
pop esi
retn
sub_45d029
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
cmp esi [ edi + 0x4 ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40d3d2
mov ecx [ ebp + 0x8 ]
push esi
push 0x0
push edi
call sub_407f40
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
mov esi [ edi + 0x4 ]
sub_45d058
push esi
mov esi ecx
push edi
cmp [ esi + 0x9 ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
push ecx
call sub_41bdcc
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
push ecx
call sub_41bdcc
dec [ esi ]
pop edi
pop esi
retn
sub_45d0a1
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push 0x4
mov eax [ esi + 0xc ]
pop ebx
cmp [ esi + 0x8 ] eax
jne r-xdata
push ebx
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edx edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mul ebx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_41fa89
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca
add esp 0x10
sub_45d12a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
lea esi [ ecx + 0x4 ]
mov ecx esi
call sub_407be1
mov ecx eax
call sub_40d89e
mov ecx esi
call sub_407be1
mov cl [ ebp + 0xc ]
mov [ eax + 0x10 ] cl
pop esi
pop ebp
retn 0x8
sub_45d154
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
push 0x8
pop edx
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
xor edi edi
pop ecx
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov edx eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push 0xc
call sub_42010a
pop ecx
test eax eax
je r-xdata
xor ecx ecx
mov ecx [ ebx + 0x4 ]
push [ ecx + edi * 4 ]
mov ecx eax
call sub_44a3ee
mov ecx eax
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + edi * 4 ] ecx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_45d1da
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi ]
mov edi ecx
mov [ edi ] eax
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
lea eax [ esi + 0x10 ]
push eax
lea ecx [ edi + 0x10 ]
call sub_40d89e
lea eax [ esi + 0x20 ]
push eax
lea ecx [ edi + 0x20 ]
call sub_40d89e
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_45d21a
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
inc ebx
cmp [ edi + 0x8 ] ebx
jne r-xdata
or eax 0xffffffff
mov eax [ edi + 0x4 ]
push 0x6
mov esi [ eax ]
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
and [ ebp - 0x18 ] 0x0
push esi
lea ecx [ ebp - 0x20 ]
call sub_4113a0
push 0x5
lea ecx [ ebp - 0x20 ]
call sub_40d2c0
test al al
je r-xdata
cmp [ esi + 0xc ] 0x6
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_412570
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_40218e
cmp eax ebx
jne r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
push 0x0
push ebx
lea eax [ ebp - 0x20 ]
push ebx
push eax
call sub_4114a0
mov esi eax
add esp 0x10
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
inc [ eax ]
mov [ ebp - 0x4 ] eax
call sub_40b8a7
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_41f885
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
mov ecx edi
call sub_440fb2
mov esi ebx
mov ecx [ edi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
lea ecx [ ebp - 0x10 ]
call sub_405cd3
lea ecx [ ebp - 0x20 ]
call sub_412570
xor eax eax
jmp r-xdata
push esi
push ebx
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_4114a0
add esp 0x10
mov ecx edi
push eax
call sub_41baef
inc esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push ebx
lea ecx [ ebp - 0x20 ]
call sub_40218e
cmp esi eax
jge r-xdata
sub_45d342
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x38
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
inc [ edi ]
mov edx [ edi ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea esi [ ebx + 0x160 ]
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0xb5
jmp r-xdata
mov ecx esi
call sub_4053b6
push eax
lea ecx [ ebp - 0x34 ]
call sub_404b40
cmp [ ebp - 0x34 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
call sub_44d520
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_412570
lea ecx [ ebp - 0x24 ]
call sub_412570
xor eax eax
cmp [ esi ] eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x5
je r-xdata
mov edx [ ebp + 0x10 ]
mov ecx eax
xor edi edi
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0x10 ]
inc eax
mov [ ecx ] eax
mov ecx esi
call sub_40d9f2
lea ecx [ ebp - 0x14 ]
call sub_412570
lea ecx [ ebp - 0x24 ]
call sub_412570
jmp r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] di
jne r-xdata
xor eax eax
cmp [ esi ] eax
je r-xdata
mov eax [ edx ]
push eax
lea esi [ eax + 0x1 ]
mov [ edx ] esi
call sub_405554
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0x14
je r-xdata
inc ecx
jmp r-xdata
dec eax
je r-xdata
test ecx ecx
jne r-xdata
dec eax
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
dec eax
je r-xdata
lea eax [ esi - 0x1 ]
mov [ edx ] eax
dec ecx
jmp r-xdata
dec eax
jne r-xdata
sub_45d443
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
xor ebx ebx
xor esi esi
mov [ ebp - 0xc ] ecx
inc esi
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] esi
call sub_412570
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x2c ] esi
call sub_412570
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] 0xb
call sub_40d3d2
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
inc [ edi ]
mov ecx [ edi ]
mov edx [ ebx + 0x4 ]
xor esi esi
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] si
mov esi [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push 0x33
mov eax [ eax + ecx * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
cmp [ eax ] 0x10
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov [ ebp + 0x8 ] 0x7f
inc ecx
mov [ edi ] ecx
mov eax [ edx + ecx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x49
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_40d2d2
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ecx + 0x1 ]
push 0xffffffff
mov [ edi ] eax
lea eax [ ebp - 0x1c ]
push eax
push edi
push ebx
mov ecx esi
call sub_40fa40
test eax eax
js r-xdata
mov [ ebp - 0x8 ] 0xb
dec eax
je r-xdata
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa3
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x1c ]
push 0x100
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_40d380
mov eax [ ebp - 0x8 ]
sub eax 0xb
je r-xdata
push 0xffffffff
push 0x6e
jmp r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x9d
mov esi [ eax ]
lea ecx [ ebp - 0x2c ]
call sub_412570
inc [ edi ]
mov ecx [ edi ]
mov [ ebp - 0x2c ] esi
mov esi [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x8 ] 0xc
jmp r-xdata
dec eax
dec eax
je r-xdata
mov ecx esi
call sub_44d520
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_414265
dec eax
je r-xdata
inc [ edi ]
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x5
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_412570
xor eax eax
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0xd
jmp r-xdata
lea eax [ ecx - 0x1 ]
mov [ edi ] eax
lea ecx [ ebp - 0x3c ]
call sub_405cd3
lea ecx [ ebp - 0x1c ]
call sub_412570
lea ecx [ ebp - 0x2c ]
call sub_412570
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp ax 0x40
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_44a955
jmp r-xdata
dec eax
jne r-xdata
mov eax [ edx + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
pop eax
push eax
jmp r-xdata
inc ecx
push 0x33
mov eax [ edx + ecx * 4 ]
pop edx
mov [ edi ] ecx
cmp [ eax + 0x8 ] dx
je r-xdata
mov ecx [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_44a875
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ ebp - 0x3c ]
push [ eax ]
call sub_40c935
inc [ edi ]
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
sub_45d67e
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov edi ecx
mov eax [ eax + 0x4 ]
xor ecx ecx
push 0x7f
inc ecx
pop ebx
mov [ ebp - 0x4 ] ecx
cmp [ eax + 0x8 ] bx
jne r-xdata
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x10 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] ecx
push esi
mov ecx edi
call sub_40fa40
test eax eax
js r-xdata
mov ebx ecx
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_412570
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] bx
je r-xdata
and [ ebp + 0x8 ] 0x0
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40cdb4
lea ecx [ ebp - 0x18 ]
mov ebx eax
call sub_412570
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx edi
call sub_44d520
pop edi
pop esi
pop ebx
leave
retn 0x8
lea esi [ edi + 0x160 ]
push 0xffffffff
push 0x96
mov ecx edi
call sub_44d520
jmp r-xdata
mov ecx esi
call sub_4053b6
cmp [ eax ] 0x1
je r-xdata
inc [ ebp + 0x8 ]
mov ecx esi
call sub_4053b6
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
inc eax
mov [ ecx ] eax
mov ecx esi
call sub_4053b6
cmp [ eax ] 0x2
je r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
mov ecx esi
call sub_4053b6
cmp [ eax ] 0x3
jne r-xdata
mov ecx esi
call sub_40d9f2
cmp [ ebp + 0x8 ] ebx
jl r-xdata
sub_45d76f
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
xor ebx ebx
xor eax eax
push edi
mov edi ecx
inc eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x10 ] eax
call sub_404ae8
mov esi [ ebp + 0xc ]
mov [ ebp - 0x48 ] 0x4
mov eax [ esi ]
dec eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x2 ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
push 0xffffffff
mov [ edi + 0xf4 ] eax
push 0xa0
mov al [ ebp - 0x4 ]
test al al
je r-xdata
dec ecx
mov [ edi + 0xf4 ] ecx
mov ecx [ edx + 0x4 ]
xor esi esi
mov eax [ ecx ]
cmp [ eax + 0x8 ] si
mov esi [ ebp + 0xc ]
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ edi + 0x160 ]
call sub_404b02
cmp [ ebp - 0x3 ] 0x0
mov eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ esi ]
push eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
call sub_405554
mov edx eax
mov [ ebp - 0xc ] edx
test edx edx
je r-xdata
mov eax [ eax ]
sub eax 0x14
je r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
inc ebx
jmp r-xdata
dec eax
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_412570
lea ecx [ ebp - 0x38 ]
call sub_412570
pop edi
pop esi
pop ebx
leave
retn 0x8
test ebx ebx
jne r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ebx ebx
jne r-xdata
dec eax
je r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x8 ] 0x1
cmp [ eax + 0x8 ] cx
jne r-xdata
dec ebx
jmp r-xdata
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x2 ] 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x40 ] ecx
jmp r-xdata
dec eax
jne r-xdata
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edx
mov ecx edi
call sub_405322
test eax eax
js r-xdata
cmp [ eax ] 0x6
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp - 0x8 ]
mov dl 0x1
push 0x2
mov [ ebp - 0x1 ] dl
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x72
jmp r-xdata
test dl dl
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov ecx edi
call sub_44d520
mov eax [ esi ]
mov [ ebp - 0x3 ] 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub_45d8ff
push ebp
mov ebp esp
sub esp 0x200
push ebx
mov ebx ecx
xor ecx ecx
mov eax ecx
push esi
mov [ ebp - 0x30 ] ecx
push edi
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x38 ] eax
call sub_40d3d2
lea ecx [ ebp - 0x5c ]
call sub_40d3d2
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor eax eax
inc [ esi ]
mov edx [ esi ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x20 ] 0x1
mov ecx [ eax + edx * 4 ]
xor eax eax
cmp [ ecx + 0x8 ] ax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
sub eax 0x1a
je r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
movsx eax [ ecx + 0xa ]
push eax
push 0x6e
mov ecx ebx
call sub_44d520
dec eax
dec eax
je r-xdata
push 0xa
push 0x8
lea eax [ ebp - 0x1fc ]
push eax
push [ ebx + 0xf4 ]
call sub_425b75
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
add esp 0x10
mov eax [ ecx + eax * 4 ]
push 0x7f
pop edx
push 0x33
mov [ ebp - 0x68 ] edx
pop edx
cmp [ eax + 0x8 ] dx
push 0x7f
mov [ ebp - 0x60 ] edx
pop edx
jne r-xdata
mov [ ebp - 0x18 ] 0x1
xor ecx ecx
inc ecx
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push edx
mov [ ebp - 0x44 ] 0x4e
mov [ ebp - 0x4c ] 0x4f
mov [ ebp - 0x48 ] 0x47
mov [ ebp - 0x40 ] 0x40
mov [ ebp - 0x64 ] 0x48
lea eax [ edx + 0x1 ]
mov [ esi ] eax
jmp r-xdata
push 0x2
pop ecx
movsx eax [ ecx + 0xa ]
push eax
push 0x7f
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x9b
jmp r-xdata
lea eax [ ebp - 0x1fc ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_407e53
push 0x2e
lea ecx [ ebp - 0x5c ]
call sub_40bd2f
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ ebp - 0x5c ]
push [ eax ]
call sub_407b4b
push 0x10
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
call sub_40d2d2
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] ecx
jne r-xdata
mov ecx ebx
call sub_44d520
push [ ebp - 0x18 ]
push 0x400
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_4489e0
mov eax [ ebp - 0x14 ]
inc [ esi ]
mov ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ edi + 0x4 ]
push 0x4e
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_40ca8e
push 0x10
push [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x5c ]
push eax
call sub_40d380
push 0x10
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
call sub_40d2d2
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x79
jmp r-xdata
mov [ ebp + 0x13 ] 0x0
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
inc ecx
cmp [ ebp + 0x13 ] 0x0
mov edx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
movsx eax [ edx + 0xa ]
mov [ esi ] ecx
mov [ ebp - 0x10 ] eax
je r-xdata
inc [ esi ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
push 0x4f
mov eax [ eax + ecx * 4 ]
pop ecx
movsx edi [ eax + 0xa ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov edx [ esi ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x68 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_40d89e
push 0x4e
pop eax
push 0x5
lea ecx [ ebp - 0x2c ]
cmp [ edx + 0x8 ] ax
jne r-xdata
mov ebx [ edi + 0x4 ]
xor eax eax
mov edx eax
mov eax [ ebx + ecx * 4 ]
push 0x7f
pop esi
cmp [ eax + 0x8 ] si
mov esi [ ebp + 0xc ]
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
push esi
push [ ebp + 0x8 ]
mov ecx ebx
call sub_40fa40
test eax eax
js r-xdata
sub esp 0x10
mov ecx esp
push [ ebp + 0x8 ]
call sub_45d154
xor eax eax
push eax
push [ esi ]
push [ ebp - 0x8 ]
call sub_45ec7e
lea ecx [ ebp - 0x2c ]
mov esi eax
call sub_412570
mov [ ebp - 0x2c ] esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_412570
lea ecx [ ebp - 0x5c ]
call sub_405cd3
lea ecx [ ebp - 0x78 ]
call sub_405cd3
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp ax [ ebp - 0x40 ]
jne r-xdata
call sub_40d2c0
test al al
jne r-xdata
call sub_40d2c0
test al al
jne r-xdata
mov ebx [ ebp - 0x34 ]
jne r-xdata
push edi
push 0x7b
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_40cdb4
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov ecx edx
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
pop eax
push eax
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ ecx + eax * 4 ]
push 0x33
pop edx
cmp [ eax + 0x8 ] dx
je r-xdata
push [ ebp - 0x10 ]
jmp r-xdata
xor eax eax
mov ecx eax
mov eax [ ebp - 0xc ]
mov [ ebp + 0x10 ] ecx
cmp eax [ edi + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
sub esp 0x10
dec eax
mov ecx esp
push edi
mov [ esi ] eax
call sub_45d154
lea eax [ ebp - 0x38 ]
push eax
push [ esi ]
xor eax eax
push eax
call sub_45ec7e
xor ecx ecx
mov [ ebp - 0x17c ] eax
mov eax [ ebp - 0x38 ]
inc ecx
mov [ ebp - 0x8 ] eax
cmp eax ecx
jle r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x47
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ eax + 0x4 ]
push 0x4f
mov eax [ eax + ecx * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
mov eax [ esi ]
mov [ ebp + 0x13 ] 0x1
mov eax [ ecx + eax * 4 ]
lea ecx [ ebp - 0x78 ]
push [ eax ]
call sub_40c935
push [ ebp - 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_40d2d2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
push 0x7f
pop edx
push 0x7e
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
push esi
push edi
mov ecx ebx
call sub_40fa40
test eax eax
js r-xdata
push 0x7f
mov esi eax
pop edx
mov eax [ ebp - 0x8 ]
test eax eax
jle r-xdata
push 0x7f
mov ebx eax
pop esi
lea ecx [ ebp - 0x2c ]
call sub_40346e
xor eax eax
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0x8 ] eax
jle r-xdata
mov ebx ecx
inc edx
dec eax
je r-xdata
lea eax [ ecx + 0x1 ]
lea ecx [ ebp - 0x2c ]
mov [ esi ] eax
call sub_40cdb4
mov edx [ ebp - 0x8 ]
mov ecx [ esi ]
mov [ ebp + edx * 4 - 0x17c ] eax
mov eax [ ebp + 0x8 ]
push 0x4e
mov eax [ eax + 0x4 ]
inc edx
mov eax [ eax + ecx * 4 ]
pop ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x38 ] edx
cmp [ eax + 0x8 ] cx
je r-xdata
push [ ebp - 0x10 ]
push 0x6e
jmp r-xdata
xor eax eax
mov [ rw-data ] al
jmp r-xdata
mov esi [ ebp + 0xc ]
cmp ax [ ebp - 0x44 ]
je r-xdata
push 0x1
lea eax [ ebp - 0x17c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
push edi
mov ecx ebx
call sub_40203a
test al al
je r-xdata
mov ecx eax
xor eax eax
lea edi [ ebp - 0x17c ]
[ edi ]
mov edi [ ebp + 0x8 ]
push 0x4e
pop edx
cmp ax dx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x78 ]
mov ecx [ ecx ]
call sub_405b2a
mov ecx [ ebp - 0xc ]
test al al
je r-xdata
xor eax eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_403320
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp + eax * 4 - 0x17c ]
lea ecx [ ebp - 0x2c ]
call sub_403489
test al al
je r-xdata
sub esp 0x10
mov ecx esp
push edi
call sub_45d154
xor eax eax
push eax
push [ esi ]
push ebx
call sub_45ec7e
mov [ ebp + ebx * 4 - 0x17c ] eax
inc ebx
cmp ebx [ ebp - 0x8 ]
jl r-xdata
mov ebx [ ebp - 0x34 ]
mov eax [ edi + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ebx
cmp [ eax + 0x8 ] bx
mov eax [ edi + 0x4 ]
push 0x40
mov eax [ eax + ecx * 4 ]
pop ebx
cmp [ eax + 0x8 ] bx
mov ebx [ ebp - 0x34 ]
je r-xdata
dec edx
jmp r-xdata
sub eax 0x6
je r-xdata
mov edi [ ebp + 0x8 ]
cmp edx 0x1
jl r-xdata
inc ecx
cmp ax [ ebp - 0x48 ]
je r-xdata
jmp r-xdata
inc ebx
push 0x47
pop edx
cmp ax dx
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
jmp r-xdata
push [ ebp - 0x10 ]
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
push [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc eax
mov [ ebp + 0x10 ] eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
inc ecx
mov [ esi ] ecx
test edx edx
jne r-xdata
dec eax
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_40346e
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + esi * 4 ]
mov [ ebp - 0xc ] eax
movzx eax [ eax + 0x8 ]
cmp ax dx
je r-xdata
cmp ax [ ebp - 0x4c ]
je r-xdata
mov eax [ edi + 0x4 ]
push 0x33
mov eax [ eax + ecx * 4 ]
mov [ ebp + 0x10 ] eax
movzx eax [ eax + 0x8 ]
pop edx
mov [ ebp - 0x10 ] eax
cmp ax dx
jne r-xdata
mov ebx [ ebp - 0x34 ]
mov esi [ ebp + 0xc ]
push 0x4f
pop edx
cmp ax dx
je r-xdata
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx [ edi + 0x8 ]
jb r-xdata
push 0x82
jmp r-xdata
xor eax eax
cmp ecx [ edi + 0x8 ]
jae r-xdata
push 0x7d
jmp r-xdata
xor eax eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_403320
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp + eax * 4 - 0x17c ]
lea ecx [ ebp - 0x2c ]
call sub_403489
test al al
je r-xdata
dec ecx
jmp r-xdata
cmp ax [ ebp - 0x64 ]
je r-xdata
dec ebx
jmp r-xdata
push 0x48
pop edx
cmp ax dx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov [ ebp + 0x10 ] ecx
cmp ax [ ebp - 0x40 ]
jne r-xdata
push 0x40
pop edx
cmp ax dx
jne r-xdata
cmp ax [ ebp - 0x60 ]
jne r-xdata
test ecx ecx
je r-xdata
cmp ax si
je r-xdata
test ebx ebx
je r-xdata
inc esi
cmp esi [ edi + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x78 ]
mov ecx [ ecx ]
call sub_405b2a
mov ecx [ ebp + 0x10 ]
push 0x7f
pop edx
test al al
je r-xdata
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
sub_45dfce
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
push edi
mov edi ecx
xor ecx ecx
inc ecx
xor ebx ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x1 ] bl
call sub_404ae8
mov ecx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x3c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x40 ] ebx
mov eax [ eax + 0x4 ]
push 0x7f
pop edx
mov [ ebp - 0x78 ] 0x5
cmp [ eax + 0x8 ] dx
jne r-xdata
mov esi [ ebp + 0xc ]
push 0xffffffff
mov eax [ esi ]
dec eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push ecx
mov ecx edi
call sub_40fa40
test eax eax
js r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x6e
jmp r-xdata
lea ecx [ ebp - 0x48 ]
call sub_412570
lea ecx [ ebp - 0x38 ]
call sub_412570
lea ecx [ ebp - 0x28 ]
call sub_412570
lea ecx [ ebp - 0x58 ]
call sub_412570
lea ecx [ ebp - 0x68 ]
call sub_412570
pop edi
pop esi
pop ebx
leave
retn 0x8
mov edx ebx
mov ecx edi
call sub_44d520
mov eax [ ebp - 0x18 ]
push 0xffffffff
mov [ edi + 0xf4 ] eax
push 0xa0
dec ecx
mov [ edi + 0xf4 ] ecx
mov ecx [ ebx + 0x4 ]
xor esi esi
mov eax [ ecx ]
cmp [ eax + 0x8 ] si
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ esi ]
push eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
call sub_405554
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ eax ]
sub eax 0x14
je r-xdata
inc edx
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0xc ] edx
test edx edx
jne r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x2 ] dl
jne r-xdata
dec edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ecx + 0x4 ]
xor esi esi
cmp [ eax + 0x8 ] si
mov esi [ ebp + 0xc ]
mov [ ebp - 0x3 ] 0x1
mov [ ebp - 0x8 ] 0x1
jne r-xdata
dec eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x6
jne r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
mov ecx edi
call sub_40fa40
test eax eax
js r-xdata
mov eax [ ecx + 0x8 ]
push 0x7f
pop ecx
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] 0x2
cmp [ eax + 0x8 ] cx
jne r-xdata
mov esi [ esi ]
mov al [ ebp - 0x3 ]
dec esi
mov [ ebp - 0x70 ] esi
test al al
je r-xdata
mov eax [ esi ]
mov edx [ ebp - 0xc ]
mov [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ ebp - 0x8 ]
xor ecx ecx
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x8 ]
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ edi + 0x160 ]
call sub_404b02
cmp [ ebp - 0x2 ] 0x0
mov eax [ ebp + 0xc ]
je r-xdata
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x38 ]
call sub_40cbf7
test al al
jne r-xdata
cmp [ eax ] 0xf
jne r-xdata
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
inc esi
push ebx
mov ecx edi
mov [ ebp - 0x8 ] esi
call sub_40fa40
test eax eax
js r-xdata
mov eax [ ebx + 0x4 ]
push 0x7f
mov eax [ eax + esi * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
inc esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
lea edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x28 ]
call sub_41ee93
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x28 ]
call sub_44a860
test al al
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
jmp r-xdata
sub_45e26d
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
push ebx
push esi
mov ebx ecx
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
inc [ edi ]
lea esi [ ebx + 0x16c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_45ea48
lea ecx [ ebp - 0x10 ]
call sub_412570
push 0xffffffff
mov ecx esi
call sub_45ea97
push eax
push edi
push [ ebp + 0x8 ]
mov ecx ebx
call sub_40fa40
test eax eax
js r-xdata
mov ecx esi
call sub_45d058
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0xa5
call sub_44d520
mov ecx esi
call sub_45ea97
mov ecx eax
call sub_45cff8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_45e2fb
push ebp
mov ebp esp
sub esp 0x70
push ebx
push esi
xor esi esi
push edi
mov edi [ ebp + 0x10 ]
xor eax eax
push [ edi ]
inc eax
mov ebx ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x5c ] r--data
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x10 ] esi
call sub_40d89e
mov eax [ edi ]
mov edi [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0x7f
mov [ ebp - 0x18 ] 0x41
mov eax [ edi ]
push 0x47
mov eax [ edx + eax * 4 + 0x4 ]
pop ecx
cmp [ eax + 0x8 ] cx
mov ecx [ ebp + 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x5c ]
call sub_440fb2
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ ecx + 0x4 ]
push 0x47
mov eax [ edx + eax * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ecx [ edi ]
push 0x35
mov eax [ edx + ecx * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
push edi
push ecx
mov ecx ebx
call sub_45cdb5
test eax eax
js r-xdata
push 0x35
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
dec [ edi ]
mov [ ebp - 0x8 ] r--data
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ edx + 0x4 ]
mov [ ebp + 0xc ] ecx
mov ecx [ ecx + eax * 4 ]
movzx eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
call sub_44a563
test al al
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ edi ] eax
lea ecx [ ebp - 0x2c ]
call sub_412570
lea ecx [ ebp - 0x4c ]
call sub_412570
lea ecx [ ebp - 0x3c ]
call sub_412570
lea ecx [ ebp - 0x5c ]
call sub_4404c9
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
inc [ edi ]
push 0xffffffff
lea eax [ ebp - 0x4c ]
push eax
push edi
push edx
mov ecx ebx
call sub_40fa40
test eax eax
js r-xdata
cmp [ ecx + 0x8 ] 0x4e
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x10 ]
mov ecx ebx
call sub_45cd12
test eax eax
js r-xdata
push 0xf
lea ecx [ ebp - 0x3c ]
call sub_40d2c0
test al al
je r-xdata
mov edi [ ebp - 0x1c ]
push 0x41
pop eax
cmp di ax
je r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
mov ecx ebx
call sub_44d520
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_45cff8
test al al
je r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0xc ]
mov eax [ ecx + eax * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_41baef
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x3c ]
push eax
mov ecx ebx
call sub_45cd56
mov esi eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x3c ]
push eax
push esi
mov ecx ebx
call sub_45cd12
test eax eax
js r-xdata
lea ecx [ ebp - 0x2c ]
call sub_412570
lea ecx [ ebp - 0x4c ]
call sub_412570
lea ecx [ ebp - 0x3c ]
call sub_412570
lea ecx [ ebp - 0x5c ]
call sub_4404c9
mov eax esi
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_40d89e
lea ecx [ ebp - 0x2c ]
call sub_412570
mov ecx [ ebp + 0x8 ]
mov edx [ edi ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x2c ] esi
mov eax [ eax + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
push 0x35
mov eax [ eax + ecx * 4 - 0x4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x6c ]
call sub_41d6b4
mov ecx [ ebp - 0x30 ]
sub ecx 0xf
neg ecx
sbb ecx ecx
push esi
not ecx
and ecx [ ebp - 0x3c ]
push 0x1
lea eax [ ebp - 0x6c ]
push eax
call sub_444ed4
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0xc ] eax
call sub_412570
mov ecx [ ebp - 0xc ]
call sub_44ba33
push [ ebp - 0xc ]
lea ecx [ ebp - 0x3c ]
call sub_40d89e
mov eax [ ebp + 0x8 ]
add [ edi ] 0x2
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
movsx eax di
sub eax 0x52
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_412570
lea ecx [ ebp - 0x4c ]
call sub_412570
lea ecx [ ebp - 0x3c ]
call sub_412570
lea ecx [ ebp - 0x5c ]
call sub_4404c9
xor eax eax
jmp r-xdata
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
cmp ax [ ebp - 0x18 ]
jne r-xdata
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x6c ]
call sub_41d6b4
mov ecx [ ebp - 0x30 ]
sub ecx 0xf
neg ecx
sbb ecx ecx
push 0x1
not ecx
and ecx [ ebp - 0x3c ]
push 0x1
lea eax [ ebp - 0x6c ]
push eax
call sub_444ed4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
lea ecx [ ebp - 0x6c ]
call sub_412570
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_414265
dec eax
je r-xdata
push 0x35
pop edx
cmp ax dx
je r-xdata
lea eax [ edx - 0x1 ]
mov [ edi ] eax
jmp r-xdata
xor esi esi
inc esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_44a955
dec eax
je r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ edi ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x48
je r-xdata
push r--data
push ecx
mov ecx ebx
call sub_44d338
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_44aa57
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_40d89e
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_44a875
jmp r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_44af66
jmp r-xdata
sub_45e713
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov edx [ esi + 0x4 ]
add [ edi ] 0x2
mov [ ebp - 0x8 ] ecx
mov ecx [ edi ]
push 0x48
mov eax [ edx + ecx * 4 ]
pop ebx
cmp [ eax + 0x8 ] bx
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x8 ]
jne r-xdata
push esi
lea ecx [ ebp - 0x28 ]
call sub_45d154
mov edx [ edi ]
mov edi [ ebp - 0x24 ]
xor esi esi
push 0x40
mov ecx esi
mov [ ebp + 0x8 ] 0x47
pop ebx
mov eax [ edx + ecx * 4 - 0x8 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x70
call sub_44d520
or eax 0xffffffff
jmp r-xdata
cmp ax [ ebp - 0xc ]
jne r-xdata
inc ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp ax bx
jne r-xdata
dec ecx
jmp r-xdata
test ecx ecx
js r-xdata
test ecx ecx
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x3c ]
push eax
push edi
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] 0x1
call sub_40fa40
test eax eax
jns r-xdata
inc edx
jmp r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x24 ]
push 0x40
mov eax [ edx + ecx * 4 ]
pop ebx
cmp [ eax + 0x8 ] bx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
mov eax [ edi + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp + 0x8 ]
jne r-xdata
add ecx 0xfffffffe
dec ecx
jmp r-xdata
lea ecx [ ebp - 0x3c ]
call sub_412570
lea ecx [ ebp - 0x28 ]
call sub_405800
mov eax esi
push 0xe
lea ecx [ ebp - 0x3c ]
call sub_40d2c0
test al al
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x10 ] ax
xor eax eax
push 0x1
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0xe ] ax
call sub_40b7ff
lea ecx [ ebp - 0x3c ]
call sub_44afbf
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ ecx + eax * 4 ]
call sub_44a485
push [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push edi
push eax
push 0x1
mov ecx ebx
call sub_4144e0
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0xc ] eax
call sub_44a46f
jmp r-xdata
push 0x47
pop eax
mov [ edi ] ecx
mov ecx [ edx + ecx * 4 + 0x4 ]
push eax
call sub_40b7ff
or [ ebp + 0xc ] 0xffffffff
push 0xd
lea ecx [ ebp - 0x3c ]
call sub_40d2c0
mov ebx [ ebp - 0x8 ]
test al al
je r-xdata
push 0x4
lea ecx [ ebp - 0x3c ]
call sub_40d2c0
test al al
je r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x24 ]
push 0x34
mov ecx [ ecx + eax * 4 ]
call sub_40b7ff
mov ecx [ edi ]
mov eax [ ebp - 0x24 ]
mov esi [ eax + ecx * 4 ]
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_44afce
push eax
mov ecx esi
call sub_41df08
lea ecx [ ebp - 0x4c ]
call sub_405cd3
lea eax [ ebp + 0xf ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push edi
push eax
push 0x1
mov ecx ebx
call sub_413680
xor esi esi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
mov eax [ edi ]
push 0x7f
mov eax [ edx + eax * 4 ]
pop edx
mov ecx esi
cmp [ eax + 0x8 ] dx
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_4084a6
mov ecx [ ebp - 0x34 ]
mov eax [ ecx ]
mov [ ebp - 0x4c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x48 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x4c ]
inc [ eax ]
mov [ ebp - 0x40 ] eax
call sub_40b8a7
push [ ebp - 0x48 ]
push [ ebp - 0x4c ]
call [ CharUpperBuffW@IAT ]
mov ecx [ rw-data ]
push [ ebp - 0x4c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
test eax eax
jns r-xdata
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x4 ]
push 0xdead
add ecx ebx
call sub_44d7e4
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x4 ]
push 0xbeef
add ecx ebx
call sub_407ba9
inc [ edi ]
mov edx [ edi ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp + 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_4084a6
push [ ebp - 0x34 ]
mov ecx ebx
call sub_41cf79
test eax eax
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x10 ] ax
xor eax eax
push 0x1
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0xe ] ax
call sub_40b7ff
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ ecx + eax * 4 ]
call sub_44a485
push [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push edi
push eax
push 0x1
mov ecx ebx
call sub_4144e0
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0xc ] eax
call sub_44a46f
jmp r-xdata
cmp ax [ ebp - 0xc ]
jne r-xdata
inc ecx
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_405cd3
mov eax [ edi ]
mov ecx [ ebp - 0x24 ]
push 0x34
mov ecx [ ecx + eax * 4 ]
call sub_40b7ff
lea ecx [ ebp - 0x3c ]
call sub_4084a6
mov eax [ edi ]
mov ecx [ ebp - 0x24 ]
push [ ebp - 0x34 ]
mov ecx [ ecx + eax * 4 ]
call sub_41df08
lea eax [ ebp + 0xf ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push edi
push eax
push 0x1
mov ecx ebx
call sub_413680
mov [ ebp + 0xc ] eax
test ecx ecx
js r-xdata
dec ecx
lea eax [ edx + 0x1 ]
mov [ edi ] eax
push 0x7f
pop edx
cmp ax dx
jne r-xdata
jmp r-xdata
sub_45ea48
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
je r-xdata
push edi
push 0x18
call sub_42010a
mov edi eax
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_40d89e
mov [ esi + 0x9 ] 0x0
jmp r-xdata
xor edi edi
push [ ebp + 0x8 ]
and [ edi + 0x8 ] 0x0
mov ecx edi
call sub_4113a0
jmp r-xdata
inc [ esi ]
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov [ edi + 0x10 ] eax
mov [ esi + 0x4 ] edi
pop edi
sub_45eabc
push ebp
mov ebp esp
sub esp 0x124
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_45eb34
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x124 ]
push 0x80
push eax
call sub_426a63
add esp 0x10
test eax eax
jne r-xdata
push r--data
jmp r-xdata
lea eax [ ebp - 0x124 ]
push eax
mov [ ebp - 0x124 ] ax
mov ecx [ ebp + 0x8 ]
call sub_40caee
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_45eb17
push ebp
mov ebp esp
sub esp 0x24
lea eax [ ebp - 0x24 ]
push eax
call sub_45eb34
test eax eax
je r-xdata
xor eax eax
leave
retn
mov eax [ eax + 0x18 ]
inc eax
leave
retn
sub_45eb34
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ecx
lea eax [ ebp - 0x24 ]
push eax
call sub_425c91
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx 0x80004005
call sub_43a83b
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x9
pop ecx
lea esi [ ebp - 0x24 ]
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
jmp r-xdata
leave
retn 0x4
sub_45eb88
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x8 ]
call sub_45eb74
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov [ esi ] edx
mov eax esi
pop esi
leave
retn
sub_45ebb9
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_45ebe4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor ecx ecx
cmp dx 0x47
jne r-xdata
lea eax [ esi + 0x1 ]
mov [ edi ] eax
test ecx ecx
jne r-xdata
push 0x48
pop eax
cmp dx ax
jne r-xdata
inc ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ edi ]
mov eax [ eax + 0x4 ]
push 0x35
mov eax [ eax + esi * 4 ]
movzx edx [ eax + 0x8 ]
pop eax
cmp dx ax
jne r-xdata
test ebx ebx
je r-xdata
cmp dx 0x7f
je r-xdata
test ecx ecx
jne r-xdata
inc esi
mov [ edi ] esi
test ecx ecx
jg r-xdata
mov [ ebx ] cl
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
dec ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push 0x35
mov eax [ ebx + 0x4 ]
pop ebx
mov eax [ eax + esi * 4 + 0x4 ]
cmp [ eax + 0x8 ] bx
mov ebx [ ebp + 0x10 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x35
mov eax [ ebx + 0x4 ]
pop ebx
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] bx
mov ebx [ ebp + 0x10 ]
je r-xdata
push 0x48
pop eax
cmp dx ax
je r-xdata
lea eax [ esi - 0x1 ]
mov [ edi ] eax
sub_45ec7e
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov eax [ ebx + ecx * 4 - 0x4 ]
push edi
xor edi edi
push 0x4e
mov [ ebp - 0x4 ] edi
mov esi edi
pop edi
xor edx edx
cmp [ eax + 0x8 ] di
mov [ ebp - 0x1c ] edi
sete dl
mov [ ebp - 0x8 ] 0x4f
mov [ ebp - 0xc ] 0x47
mov [ ebp - 0x10 ] 0x48
mov [ ebp - 0x14 ] 0x7f
cmp ax [ ebp - 0x8 ]
jne r-xdata
test esi esi
jne r-xdata
cmp ax 0x41
jne r-xdata
test esi esi
jne r-xdata
test edx edx
je r-xdata
inc edx
jmp r-xdata
cmp ax [ ebp - 0xc ]
jne r-xdata
test edx edx
je r-xdata
dec edx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
inc ecx
jmp r-xdata
cmp ax [ ebp - 0x10 ]
jne r-xdata
inc esi
jmp r-xdata
mov eax [ ebx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] di
jne r-xdata
mov eax [ ebx + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax di
jne r-xdata
cmp ax [ ebp - 0x14 ]
je r-xdata
dec esi
jmp r-xdata
lea ecx [ ebp + 0x14 ]
call sub_405800
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x1c
xor edx edx
inc edx
mov edi edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp + 0x10 ]
add ecx 0x2
mov [ ebp + 0xc ] edi
test edx edx
je r-xdata
lea edx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ edx ] edi
lea edi [ ebx + ecx * 4 ]
push 0x4e
mov eax [ edi ]
pop ebx
cmp [ eax + 0x8 ] bx
mov ebx [ ebp + 0x18 ]
jne r-xdata
cmp ax [ ebp - 0x8 ]
jne r-xdata
test esi esi
jne r-xdata
mov edi [ ebp + 0xc ]
push 0x4e
pop ebx
cmp ax [ ebp - 0xc ]
jne r-xdata
test esi esi
jne r-xdata
test edi edi
je r-xdata
inc edi
jmp r-xdata
inc [ edx ]
lea edi [ edi + 0x4 ]
mov eax [ edi ]
cmp [ eax + 0x8 ] bx
je r-xdata
mov ebx [ ebp + 0x18 ]
cmp ax [ ebp - 0x10 ]
jne r-xdata
inc esi
jmp r-xdata
dec edi
jmp r-xdata
lea eax [ ebx + 0x1 ]
cmp edi eax
jge r-xdata
cmp ax 0x40
jne r-xdata
dec esi
jmp r-xdata
add edx 0x4
jmp r-xdata
cmp ecx [ ebp - 0x4 ]
jle r-xdata
cmp ax [ ebp - 0x14 ]
je r-xdata
lea eax [ ebx + 0x1 ]
cmp edi eax
jne r-xdata
mov eax [ edx ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x1c ]
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
inc ecx
jmp r-xdata
sub_45ede9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
push eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x4 ]
mov ebx ecx
mov ecx [ esi ]
mov eax [ eax + ecx * 4 ]
push [ eax ]
call sub_40d2d2
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push [ ebp + 0x10 ]
inc [ esi ]
push [ ebp - 0x4 ]
mov ecx ebx
push esi
push edi
call sub_40f6d0
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x79
call sub_44d520
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_45ee52
push ebp
mov ebp esp
mov eax 0x2028
call sub_430650
push ebx
push esi
push edi
lea ecx [ ebp - 0x14 ]
call sub_40d3d2
lea ecx [ ebp - 0x24 ]
call sub_40d3d2
mov ebx [ ebp + 0x8 ]
xor eax eax
mov ecx ebx
mov esi eax
call sub_4084a6
mov eax [ ebx + 0x8 ]
xor bl bl
mov edi [ eax ]
movzx eax [ edi ]
test ax ax
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_405cd3
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x25
pop ecx
inc esi
cmp ax cx
jne r-xdata
push eax
lea ecx [ ebp - 0x14 ]
call sub_40bd2f
cmp [ edi + esi * 2 ] cx
jne r-xdata
test bl bl
je r-xdata
jmp r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_407e53
push 0x25
pop ebx
jmp r-xdata
push ecx
lea ecx [ ebp - 0x14 ]
mov bl 0x1
call sub_40bd2f
inc esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_407bef
movzx eax [ edi + esi * 2 ]
cmp ax bx
jne r-xdata
movzx eax [ edi + esi * 2 ]
test ax ax
je r-xdata
test ax ax
je r-xdata
xor eax eax
cmp [ edi + esi * 2 ] ax
je r-xdata
push eax
lea ecx [ ebp - 0x24 ]
call sub_40bd2f
inc esi
push r--data
lea ecx [ ebp - 0x14 ]
mov bl 0x1
call sub_4039e8
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
mov [ ebp - 0x2024 ] ax
push 0xfff
lea eax [ ebp - 0x2024 ]
push eax
push [ ebp - 0x24 ]
inc esi
call [ GetEnvironmentVariableW@IAT ]
lea ecx [ ebp - 0x14 ]
test eax eax
je r-xdata
push r--data
mov bl 0x1
call sub_4039e8
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407b4b
push r--data
lea ecx [ ebp - 0x14 ]
call sub_4039e8
jmp r-xdata
lea eax [ ebp - 0x2024 ]
push eax
call sub_4039e8
mov bl 0x1
jmp r-xdata
sub_45ef9d
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
mov [ ebp - 0x10 ] ecx
push edi
lea ecx [ ebp - 0x20 ]
call sub_40d3d2
lea ecx [ ebp - 0x40 ]
call sub_40d3d2
lea ecx [ ebp - 0x30 ]
call sub_40d3d2
mov ebx [ ebp + 0x8 ]
xor eax eax
mov ecx ebx
mov esi eax
call sub_4084a6
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x48 ] 0x1
mov edi [ eax ]
xor eax eax
mov bl al
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] eax
movzx eax [ edi ]
test ax ax
je r-xdata
lea ecx [ ebp - 0x54 ]
call sub_412570
lea ecx [ ebp - 0x30 ]
call sub_405cd3
lea ecx [ ebp - 0x40 ]
call sub_405cd3
lea ecx [ ebp - 0x20 ]
call sub_405cd3
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x24
pop ecx
push 0x40
inc esi
pop edx
cmp ax cx
jne r-xdata
cmp ax dx
jne r-xdata
cmp [ edi + esi * 2 ] cx
jne r-xdata
push eax
lea ecx [ ebp - 0x20 ]
call sub_40bd2f
cmp [ edi + esi * 2 ] dx
jne r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_407e53
push 0x24
pop ebx
jmp r-xdata
push ecx
test bl bl
je r-xdata
jmp r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_407e53
push 0x40
pop ebx
jmp r-xdata
push edx
jmp r-xdata
movzx eax [ edi + esi * 2 ]
cmp ax bx
jne r-xdata
movzx eax [ edi + esi * 2 ]
test ax ax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_407bef
movzx eax [ edi + esi * 2 ]
cmp ax bx
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov bl 0x1
call sub_40bd2f
inc esi
jmp r-xdata
test ax ax
je r-xdata
xor ebx ebx
cmp [ edi + esi * 2 ] bx
je r-xdata
test ax ax
je r-xdata
xor eax eax
cmp [ edi + esi * 2 ] ax
je r-xdata
push eax
lea ecx [ ebp - 0x40 ]
call sub_40bd2f
inc esi
push r--data
lea ecx [ ebp - 0x20 ]
call sub_4039e8
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_407b4b
jmp r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
inc esi
call sub_40c935
lea ecx [ ebp - 0x30 ]
call sub_40b8a7
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
call [ CharUpperBuffW@IAT ]
push ebx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_40d2d2
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
push eax
lea ecx [ ebp - 0x40 ]
call sub_40bd2f
inc esi
push r--data
lea ecx [ ebp - 0x20 ]
mov bl 0x1
call sub_4039e8
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_407b4b
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
inc esi
call sub_40c935
lea ecx [ ebp - 0x30 ]
call sub_40b8a7
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
call [ CharUpperBuffW@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_41e08f
test eax eax
js r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
mov bl 0x1
call sub_4039e8
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_407b4b
push r--data
jmp r-xdata
mov ecx ebx
call sub_4084a6
mov eax [ ebx + 0x8 ]
lea ecx [ ebp - 0x20 ]
push [ eax ]
call sub_4039e8
push r--data
lea ecx [ ebp - 0x20 ]
mov bl 0x1
call sub_4039e8
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_407b4b
push r--data
lea ecx [ ebp - 0x54 ]
call sub_4084a6
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x20 ]
call sub_407b4b
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4039e8
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_45f211
push ebp
mov ebp esp
sub esp 0x124
mov edx [ ebp + 0x8 ]
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x18 ] 0x0
mov eax [ edx + 0x4 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov ecx [ esi ]
mov [ ebp - 0x14 ] 0x1
mov eax [ eax + ecx * 4 - 0x4 ]
push edi
movsx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
push 0x4e
mov eax [ eax + ecx * 4 ]
pop ebx
xor edi edi
or ecx 0xffffffff
cmp [ eax + 0x8 ] bx
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] edi
je r-xdata
inc [ esi ]
mov eax [ esi ]
mov edi [ edx + 0x4 ]
push ecx
mov eax [ edi + eax * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x20 ]
push eax
push esi
push edx
call sub_40fa40
mov edi [ ebp - 0x4 ]
test eax eax
js r-xdata
mov esi [ ebp + 0x10 ]
mov ecx [ esi ]
call sub_40346e
xor edi edi
cmp [ ebp - 0x4 ] edi
jle r-xdata
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_40cdb4
test eax eax
js r-xdata
push 0x0
push [ ebp + 0x14 ]
push [ esi ]
call sub_4114a0
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
lea ecx [ ebp - 0x20 ]
call sub_412570
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
xor esi esi
push [ ebp - 0xc ]
push 0x7a
push [ ebp + edi * 4 - 0x120 ]
mov ecx [ esi ]
call sub_403489
inc edi
cmp edi ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
push 0x7b
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
lea eax [ ecx + 0x1 ]
lea ecx [ ebp - 0x20 ]
mov [ esi ] eax
call sub_40cdb4
mov edx [ ebp + 0x8 ]
mov [ ebp + edi * 4 - 0x120 ] eax
mov ecx [ edx + 0x4 ]
mov eax [ esi ]
push 0x4e
mov eax [ ecx + eax * 4 ]
pop ecx
inc edi
cmp [ eax + 0x8 ] cx
push 0xffffffff
pop ecx
mov ecx ebx
call sub_44d520
sub_45f34f
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
xor esi esi
xor eax eax
push edi
inc eax
mov edi ecx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] eax
call sub_40d3d2
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax + 0x4 ]
push 0x47
mov eax [ eax + ecx * 4 ]
pop ecx
movzx eax [ eax + 0x8 ]
cmp ax 0x35
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_440fb2
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax + 0x4 ]
push 0x47
mov eax [ eax + ecx * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
cmp ax cx
je r-xdata
push [ eax ]
lea ecx [ ebp - 0x30 ]
call sub_40c935
lea eax [ ecx - 0x1 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebx ] eax
call sub_407e53
jmp r-xdata
push [ ebp + 0x10 ]
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebx ] eax
mov eax esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
push ecx
mov ecx edi
call sub_45cdb5
test eax eax
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x47
mov eax [ eax + edx * 4 + 0x4 ]
pop ecx
cmp [ eax + 0x8 ] cx
mov ecx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
call sub_40d89e
jmp r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0x8 ]
mov ecx edi
call sub_45f34f
mov esi eax
mov [ ebp + 0x13 ] 0x1
cmp [ edi + 0x4ac ] al
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
push r--data
push ecx
mov ecx edi
call sub_44d338
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405cd3
lea ecx [ ebp - 0x40 ]
call sub_412570
lea ecx [ ebp - 0x10 ]
call sub_412570
lea ecx [ ebp - 0x20 ]
call sub_4404c9
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x13 ]
push eax
push ebx
push [ ebp + 0x8 ]
call sub_45ebe4
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
push [ ebp - 0x30 ]
mov ecx edi
push [ ebp + 0x10 ]
push eax
call sub_45cd12
lea ecx [ ebp - 0x10 ]
call sub_45cff8
test al al
jne r-xdata
mov ecx [ ebp + 0x14 ]
push r--data
call sub_40ca8e
mov eax [ edi ]
push esi
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
jmp r-xdata
sub_45f4df
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x14 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
or ebx 0xffffffff
inc [ edi ]
push ebx
lea eax [ ebp - 0x1c ]
push eax
push edi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] 0x1
call sub_40fa40
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4f
je r-xdata
cmp [ ebp + 0x14 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
sete dl
mov ecx [ eax ]
cmp [ ecx + 0xc ] 0xf
jne r-xdata
mov eax [ edx + ecx * 4 - 0x4 ]
mov ecx esi
jmp r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x7b
call sub_44d520
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1c ]
push edx
push eax
call sub_444ed4
mov esi eax
test esi esi
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_412570
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
push 0x29
mov ecx esi
call sub_41d5f6
test al al
je r-xdata
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov edx r--data
call sub_41f885
test al al
jne r-xdata
xor ebx ebx
sub_45f5bc
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
fld [ eax ]
push edi
lea edi [ ecx + 0x4 ]
fstp [ ebp - 0x8 ]
mov ecx edi
call sub_407be1
mov esi eax
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
mov ecx edi
fstp [ esi ]
mov [ esi + 0xc ] 0x3
call sub_407be1
pop edi
mov [ eax + 0x10 ] 0x0
pop esi
leave
retn 0x8
sub_45f5fb
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
push 0x8
pop edx
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
xor edi edi
pop ecx
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov edx eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x4
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
xor edx edx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + edi * 4 ] edx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_45f67e
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0x28
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_449a0a
mov edi eax
sub_45f6af
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
inc [ eax ]
mov eax ecx
pop ebp
retn 0x4
sub_45f6d9
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ edx ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0x10 ] eax
inc [ eax ]
mov eax ecx
pop ebp
retn 0x8
sub_45f761
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_45f717
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_45f780
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_45f730
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_4228ca#2
pop ecx
sub_45f79f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x394
xor eax eax
cmp [ ebp + 0x10 ] al
push ebx
setne al
and [ esp + 0x20 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ edi + 0x4 ]
cwde
mov [ esp + 0x14 ] eax
shl eax 0x2
sub ecx eax
mov [ esp + 0x2c ] ebx
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x60 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x64 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x68 ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x14 ]
inc [ eax ]
add ecx 0xfffffffd
add ecx [ edi + 0x8 ]
mov [ esp + 0x6c ] eax
mov eax ecx
cdq
sub eax edx
mov edx eax
sar edx 0x1
mov [ esp + 0x7c ] ecx
lea eax [ edx + edx ]
mov [ esp + 0x1c ] edx
cmp eax ecx
je r-xdata
xor eax eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x70 ]
push eax
lea eax [ esp + 0x64 ]
push eax
mov [ esp + 0x84 ] edx
mov [ esp + 0x40 ] r--data
or esi 0xffffffff
call sub_460458
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x4
add ecx ebx
call sub_44d7e4
jmp r-xdata
and [ esp + 0x78 ] 0x0
and [ esp + 0x30 ] 0x0
push 0x3
pop eax
sub eax [ esp + 0x14 ]
cmp [ esp + 0x7c ] 0x0
mov [ esp + 0x24 ] eax
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx ebx
call sub_44d7e4
jmp r-xdata
lea ecx [ esp + 0x60 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
shl eax 0x2
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x38 ]
call sub_45f717
push edi
lea eax [ esp + 0x74 ]
push eax
mov ecx ebx
call sub_460579
mov [ esp + 0x28 ] eax
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
mov [ esp + 0x70 ] eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor edi edi
inc edi
push 0x0
mov [ esi + 0xc ] edi
push edi
mov eax [ esp + 0x10 ]
lea edi [ esp + edi + 0xa8 ]
mov [ esp + 0x48 ] edi
cmp [ edi ] 0x10
jne r-xdata
sub esp 0x10
lea eax [ esp + 0x48 ]
mov ecx esp
push eax
call sub_45f5fb
push 0x4
pop eax
sub eax [ esp + 0x24 ]
push eax
push edi
lea eax [ esp + 0x88 ]
push eax
call sub_460719
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x7c ]
mov [ esp + 0x7c ] eax
lea eax [ esp + 0x70 ]
push eax
call sub_41f92c
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea eax [ esi + 0x1 ]
push eax
xor edi edi
inc edi
push edi
push [ ebp + 0xc ]
mov [ esp + 0x88 ] esi
call sub_403320
add esp 0xc
cmp [ esp + 0x80 ] edi
jne r-xdata
push 0xffffffff
push 0x67
mov ecx ebx
call sub_44d520
push 0x0
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov eax [ esp + eax + 0xb0 ]
add [ esp + 0x78 ] eax
cmp [ esp + eax + 0xac ] 0x0
jne r-xdata
xor esi esi
cmp [ esp + 0x7c ] esi
jle r-xdata
push 0x0
push edi
push 0x0
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x10
push eax
lea eax [ esp + 0x8c ]
push eax
call sub_460300
lea eax [ esp + 0x10 ]
inc esi
push eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x14 ] esi
call sub_4628d9
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x18 ]
mov esi [ esi + eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov esi [ esp + 0x10 ]
mov eax [ ecx ]
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x54 ] eax
mov eax [ ecx + 0x8 ]
mov edi esi
imul edi edi 0x18
mov [ esp + 0x58 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x5c ] eax
inc [ eax ]
lea eax [ esp + 0xa0 ]
add eax edi
push eax
lea eax [ esp + 0x54 ]
push eax
mov [ esp + 0x54 ] esi
mov [ esp + 0x18 ] edi
call sub_45fc96
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0xc
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x38 ] ecx
mov eax [ ecx + eax + 0x4 ]
mov ecx eax
mov [ esp + 0x24 ] eax
call sub_40d2c0
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x24 ]
shl eax 0x2
mov [ esp + 0x14 ] eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
push 0x0
mov [ esi + 0xc ] 0x1
push 0x5
jmp r-xdata
mov ecx [ esp + 0x20 ]
call sub_44be8a
mov edx [ esp + 0x10 ]
lea ecx [ eax - 0x1 ]
shr ecx 0x2
add [ esp + 0x1c ] ecx
lea eax [ ecx + 0x1 ]
imul eax [ esp + edx + 0xb0 ]
mov edx [ esp + 0x1c ]
add [ esp + 0x78 ] eax
sub edx ecx
mov [ esp + 0x20 ] ecx
cmp edx esi
jle r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
je r-xdata
push ebx
lea eax [ esp + eax + 0xa4 ]
push eax
call sub_460300
mov eax [ ebp + 0x8 ]
push 0xc
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x18 ]
mov esi [ ecx + eax + 0x4 ]
mov ecx esi
call sub_40d2c0
test al al
je r-xdata
and [ esi ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
lea ecx [ esp + 0x50 ]
call sub_405cd3
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x34 ]
mov eax [ edx + eax + 0x4 ]
cmp [ eax + 0xc ] 0xc
jne r-xdata
mov eax edx
imul eax eax 0x18
lea ebx [ esp + 0xa0 ]
add ebx eax
lea eax [ edx + ecx ]
imul eax eax 0x18
sub edx esi
lea eax [ esp + eax + 0xa0 ]
push [ esp + 0x28 ]
call [ FreeLibrary@IAT ]
lea eax [ esi + 0x1 ]
push eax
push edi
push 0x0
push [ ebp + 0xc ]
mov [ esp + 0x34 ] eax
call sub_4114a0
mov ebx eax
mov eax [ esp + 0x4c ]
add esp 0x10
mov ecx [ eax + esi * 4 ]
mov eax [ ecx ]
imul eax eax 0x18
cmp [ esp + eax + 0xa8 ] 0x10
jne r-xdata
mov ecx esi
call sub_44be63
mov ecx ebx
mov esi eax
call sub_412570
mov [ ebx + 0xc ] 0x7
mov [ ebx ] esi
jmp r-xdata
push esi
mov ecx ebx
call sub_40d89e
jmp r-xdata
xor edx edx
mov edx [ eax ]
jmp r-xdata
push 0x6
mov esi ebx
mov edi eax
pop ecx
sub ebx 0x18
sub eax 0x18
[ edi ] [ esi ]
dec edx
jne r-xdata
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x4c ]
mov edi [ esp + 0x48 ]
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x24 ]
add [ esp + 0x14 ] 0x8
cmp esi [ esp + 0x7c ]
jl r-xdata
dec esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
sub ecx esi
add esi ecx
mov edx [ edx + 0x8 ]
inc ecx
add ecx esi
cmp esi ecx
jge r-xdata
add [ esp + 0x18 ] 0x8
lea ecx [ esp + 0x50 ]
call sub_405cd3
mov eax [ esp + 0x30 ]
mov edi [ ebp + 0x8 ]
inc eax
mov [ esp + 0x30 ] eax
cmp eax [ esp + 0x7c ]
jl r-xdata
mov eax [ edx ]
and [ edi + 0x4 ] 0x0
mov [ edi - 0x8 ] eax
mov [ edi ] 0x10
mov eax [ esp + ebx + 0xb0 ]
mov [ edi + 0x8 ] eax
lea edx [ edx + 0x4 ]
lea edi [ edi + 0x18 ]
dec ecx
jne r-xdata
mov ebx [ esp + 0x2c ]
sub_45fc96
push ebp
mov ebp esp
sub esp 0x514
mov eax [ r--data ]
mov [ ebp - 0x510 ] eax
mov eax [ r--data ]
mov [ ebp - 0x50c ] eax
xor eax eax
push ebx
push esi
push edi
push 0x6
pop edx
push 0x4
pop ebx
mov ecx edx
lea edi [ ebp - 0x508 ]
[ edi ]
mov [ ebp - 0x4f0 ] edx
mov [ ebp - 0x4ec ] ebx
mov esi r--data
lea edi [ ebp - 0x4e8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x4de ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov eax [ r--data ]
mov [ ebp - 0x4c0 ] eax
mov eax [ r--data ]
mov [ ebp - 0x4bc ] eax
mov [ ebp - 0x4c8 ] 0x7
mov [ ebp - 0x4c4 ] ebx
xor eax eax
mov ecx edx
lea edi [ ebp - 0x4b8 ]
[ edi ]
mov [ ebp - 0x4a0 ] ebx
mov [ ebp - 0x49c ] ebx
mov esi r--data
lea edi [ ebp - 0x498 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x48e ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x478 ] ebx
mov [ ebp - 0x474 ] ebx
mov esi r--data
lea edi [ ebp - 0x470 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x466 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
push 0x5
mov [ ebp - 0x44c ] ebx
pop ecx
mov [ ebp - 0x450 ] ecx
mov esi r--data
lea edi [ ebp - 0x448 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x43e ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x424 ] ebx
xor eax eax
mov esi r--data
lea edi [ ebp - 0x420 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x414 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x400 ] ecx
mov [ ebp - 0x3fc ] ebx
xor eax eax
mov esi r--data
lea edi [ ebp - 0x3f8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x3ec ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x3d8 ] ecx
mov [ ebp - 0x3d4 ] ebx
xor eax eax
mov esi r--data
lea edi [ ebp - 0x3d0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x3c4 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x3b0 ] 0x2
mov [ ebp - 0x3ac ] ebx
mov esi r--data
lea edi [ ebp - 0x3a8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x39a ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x384 ] ebx
push 0x3
pop ecx
mov [ ebp - 0x388 ] ecx
mov esi r--data
lea edi [ ebp - 0x380 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x376 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x360 ] ecx
mov [ ebp - 0x35c ] ebx
mov esi r--data
xor eax eax
lea edi [ ebp - 0x358 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x34e ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x334 ] ebx
xor eax eax
xor ecx ecx
inc ecx
mov [ ebp - 0x338 ] ecx
mov esi r--data
lea edi [ ebp - 0x330 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x324 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x310 ] ecx
mov [ ebp - 0x30c ] ebx
mov esi r--data
lea edi [ ebp - 0x308 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x2f8 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x2e8 ] ecx
mov [ ebp - 0x2e4 ] ebx
mov esi r--data
lea edi [ ebp - 0x2e0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x2d4 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0x2c0 ] 0x9
mov esi r--data
lea edi [ ebp - 0x2b8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x2aa ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov eax [ r--data ]
mov [ ebp - 0x290 ] eax
mov eax [ r--data ]
push 0x8
pop ebx
mov [ ebp - 0x28c ] eax
mov [ ebp - 0x298 ] 0xa
mov [ ebp - 0x294 ] ebx
mov ecx edx
xor eax eax
push 0x4
pop edx
lea edi [ ebp - 0x288 ]
[ edi ]
mov [ ebp - 0x26c ] edx
mov [ ebp - 0x270 ] ebx
mov esi r--data
lea edi [ ebp - 0x268 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x25e ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x244 ] edx
mov [ ebp - 0x248 ] ebx
mov esi r--data
lea edi [ ebp - 0x240 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x232 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x21c ] edx
mov [ ebp - 0x220 ] ebx
mov esi r--data
lea edi [ ebp - 0x218 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x208 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x1f4 ] edx
push 0xb
pop ecx
mov [ ebp - 0x1f8 ] ecx
mov esi r--data
lea edi [ ebp - 0x1f0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x1e2 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x1cc ] edx
mov [ ebp - 0x1d0 ] ecx
mov esi r--data
lea edi [ ebp - 0x1c8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x1ba ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0xc
stosw [ edi ]
pop edx
mov [ ebp - 0x1a8 ] edx
mov [ ebp - 0x1a4 ] 0x4
xor eax eax
mov esi r--data
lea edi [ ebp - 0x1a0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x194 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x17c ] ebx
mov [ ebp - 0x180 ] 0xd
mov esi r--data
lea edi [ ebp - 0x178 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x16a ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x158 ] 0xe
mov esi r--data
lea edi [ ebp - 0x150 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x140 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x130 ] ecx
push 0x4
pop ebx
mov [ ebp - 0x12c ] ebx
mov esi r--data
lea edi [ ebp - 0x128 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x116 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x108 ] edx
mov [ ebp - 0x104 ] ebx
mov esi r--data
lea edi [ ebp - 0x100 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0xee ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
push 0x5
mov [ ebp - 0xe0 ] ecx
mov [ ebp - 0xdc ] ebx
pop ecx
mov esi r--data
lea edi [ ebp - 0xd8 ]
[ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0xc4 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb8 ] edx
xor eax eax
push 0x5
pop ecx
mov esi r--data
lea edi [ ebp - 0xb0 ]
[ edi ] [ esi ]
lea edi [ ebp - 0x9c ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x90 ] edx
xor eax eax
push 0x5
pop ecx
mov esi r--data
lea edi [ ebp - 0x88 ]
[ edi ] [ esi ]
lea edi [ ebp - 0x74 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x68 ] 0xf
mov esi r--data
lea edi [ ebp - 0x60 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x52 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
push 0x7
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] 0x10
mov [ ebp - 0x38 ] ax
pop ecx
lea edi [ ebp - 0x36 ]
[ edi ]
xor ebx ebx
stosw [ edi ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ebx
call sub_40d3d2
mov edi [ ebp + 0xc ]
push 0x3b
mov [ edi + 0xc ] ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x14 ] ebx
mov ebx [ ebp + 0x8 ]
mov [ edi + 0x8 ] 0x4
pop edi
mov edi [ ebp + 0xc ]
test esi esi
je r-xdata
push esi
mov ecx ebx
call sub_40a4f6
cmp [ eax ] di
je r-xdata
xor eax eax
mov bl al
push esi
push ecx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_407f40
push esi
mov ecx ebx
call sub_40a4f6
push 0x3b
pop ecx
cmp [ eax ] cx
mov ecx ebx
jne r-xdata
xor ecx ecx
inc esi
jmp r-xdata
push esi
lea eax [ esi + 0x1 ]
push eax
jmp r-xdata
push esi
mov ecx ebx
call sub_40a4f6
xor ecx ecx
cmp [ eax ] cx
je r-xdata
xor ecx ecx
xor ebx ebx
mov [ edi + 0xc ] ecx
inc ebx
lea esi [ eax - 0x1 ]
push esi
lea ecx [ ebp - 0x10 ]
call sub_40a4f6
cmp [ eax ] 0x2a
jne r-xdata
push 0x0
call sub_40a2fb
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push [ ebp - 0x10 ]
push eax
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
xor ebx ebx
inc ebx
push ebx
push esi
lea ecx [ ebp - 0x10 ]
mov [ edi + 0xc ] ebx
call sub_40a2fb
xor ecx ecx
jmp r-xdata
mov ecx esi
imul ecx ecx 0x28
mov eax [ ebp + ecx - 0x4f0 ]
mov [ edi + 0x8 ] eax
cmp [ edi + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
add eax 0x28
inc esi
push 0x0
mov [ ebp + 0xc ] eax
pop ecx
jns r-xdata
lea eax [ ebp - 0x510 ]
mov esi ecx
mov [ ebp + 0xc ] eax
mov eax [ ebp + ecx - 0x4ec ]
mov [ edi + 0x10 ] eax
mov [ edi + 0x10 ] 0x4
jmp r-xdata
cmp [ eax ] cx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x8
test esi esi
jns r-xdata
sub_460300
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x8 ]
push edi
cmp eax 0xf
ja r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_460418 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebx + 0x14 ]
call sub_4228ca
pop ecx
mov ecx [ ebx ]
or edx 0xffffffff
call sub_448553
mov ecx [ ebp + 0xc ]
mov esi eax
push esi
call sub_40ca8e
push esi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
push [ ebx ]
mov ecx [ ebp + 0xc ]
call sub_40ca8e
jmp r-xdata
mov edi [ ebx ]
mov esi [ ebp + 0xc ]
mov edi [ ebx ]
mov ecx esi
call sub_412570
and [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
jmp r-xdata
movsx edi [ ebx ]
jmp r-xdata
movzx edi [ ebx ]
jmp r-xdata
movzx edi [ ebx ]
jmp r-xdata
fld [ ebx ]
fld [ ebx ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebx ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x7
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebx ]
mov ebx [ ebx + 0x4 ]
mov ecx esi
call sub_412570
mov [ esi + 0x4 ] ebx
mov ebx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x9
pop eax
mov [ ebp - 0x18 ] ax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push eax
call sub_44a6f6
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
mov [ esi ] edi
jmp r-xdata
sub_460458
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov ecx esi
mov [ edi + 0x4 ] ebx
call sub_40b8a7
push [ esi + 0x4 ]
push [ esi ]
call [ CharLowerBuffW@IAT ]
push 0xffffffff
push 0xffffffff
push 0xffffffff
push 0x1
push 0x1
push r--data
mov ecx esi
call sub_45267a
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
mov [ edi + 0x10 ] 0x1
mov eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
lea eax [ edi + 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_45fc96
test al al
jne r-xdata
cmp eax [ esi + 0x4 ]
jae r-xdata
mov bl 0x1
mov edx r--data
mov ecx esi
call sub_41f885
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
mov ecx [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
sub eax ecx
dec eax
push eax
lea eax [ ecx + 0x1 ]
push eax
push esi
lea ecx [ ebp - 0x10 ]
call sub_407f40
push 0xffffffff
push [ ebp + 0xc ]
mov ecx esi
call sub_40a2fb
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_41f885
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
mov al bl
mov [ edi + 0x10 ] ebx
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ edi + 0x4 ] ebx
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_41f885
test al al
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
lea ecx [ ebp - 0x10 ]
call sub_405cd3
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_460579
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0xc ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax + 0x8 ]
push edi
mov edi ecx
mov ecx esi
mov [ ebp - 0xc ] edi
call sub_4084a6
mov edx [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x10 ] eax
inc [ eax ]
mov eax [ esi + 0x4 ]
xor ebx ebx
mov eax [ eax ]
push 0x4
mov ecx eax
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x8 ] eax
call sub_40d2c0
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40cdb4
test eax eax
jle r-xdata
mov esi [ ebp - 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call [ LoadLibraryW@IAT ]
mov esi eax
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov esi ebx
mov eax [ esi + 0x4 ]
mov esi [ edi + 0x1ac ]
mov ecx [ eax ]
call sub_40cdb4
cmp eax esi
jg r-xdata
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x4
mov eax [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov ecx edi
call sub_40d2c0
test al al
je r-xdata
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
lea ecx [ eax - 0x1 ]
mov eax [ edi + 0x1a8 ]
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
jmp r-xdata
mov ecx edi
call sub_40cdb4
push eax
push esi
call [ GetProcAddress@IAT ]
mov edi [ ebp + 0x8 ]
mov [ edi ] eax
lea ecx [ ebp - 0x2c ]
call sub_40a6d4
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41f26b
push [ ebp - 0x2c ]
push esi
call [ GetProcAddress@IAT ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
mov [ edi ] eax
call sub_405cd3
jmp r-xdata
call sub_44d7e4
jmp r-xdata
mov ebx esi
mov eax [ ebp + 0xc ]
push 0x4
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40d2c0
test al al
je r-xdata
cmp [ edi ] ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405cd3
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x8
cmp [ edi ] ebx
jne r-xdata
push 0x41
lea ecx [ ebp - 0x1c ]
call sub_40bd2f
lea ecx [ ebp - 0x2c ]
call sub_40a6d4
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41f26b
push [ ebp - 0x2c ]
push esi
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x2c ]
mov [ edi ] eax
call sub_405cd3
cmp [ ebp - 0x1 ] bl
je r-xdata
mov edx [ ebp - 0xc ]
push ebx
mov eax [ edx ]
push 0x3
mov ecx [ eax + 0x4 ]
add ecx edx
push esi
call [ FreeLibrary@IAT ]
sub_460719
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] eax
mov [ ebx + 0x2c ] eax
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0xc ] eax
jle r-xdata
lea ecx [ ebp + 0x14 ]
call sub_45f717
pop ebx
leave
retn 0x1c
push esi
push edi
mov edi [ ebp + 0x10 ]
shl edi 0x2
mov [ ebp + 0x8 ] edi
xor eax eax
mov [ ecx + ebx + 0x44 ] eax
cmp edx 0x10
ja r-xdata
lea eax [ esi + 0x2 ]
imul eax eax 0x18
and [ eax + ebx ] 0x0
mov ecx [ ebp - 0x8 ]
add edi 0x8
inc ecx
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] ecx
cmp ecx [ ebx + 0xc ]
jl r-xdata
jmp [ edx * 4 + jump_table_4609d5 ]
mov eax [ ebp + 0x18 ]
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
mov ecx esi
imul ecx ecx 0x18
mov [ ebp + 0x10 ] esi
mov edx [ ecx + ebx + 0x38 ]
mov [ ebp - 0x4 ] ecx
cmp edx 0x10
je r-xdata
pop edi
pop esi
mov eax [ ebp + 0xc ]
push 0x2a
mov eax [ eax + 0x4 ]
mov eax [ edi + eax ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_41d5f6
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x2a
mov eax [ eax + 0x4 ]
mov eax [ edi + eax ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_41d5f6
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_40cdb4
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_40d00b
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_40cdb4
lea ecx [ esi + 0x2 ]
imul ecx ecx 0x18
mov [ ecx + ebx ] ax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_40cdb4
lea ecx [ esi + 0x2 ]
imul ecx ecx 0x18
mov [ ecx + ebx ] al
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_412620
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
lea eax [ esi + 0x2 ]
imul eax eax 0x18
fstp [ eax + ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_412620
lea eax [ esi + 0x2 ]
imul eax eax 0x18
fstp [ eax + ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_40d00b
lea ecx [ esi + 0x2 ]
imul ecx ecx 0x18
mov [ ecx + ebx + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov edx [ edi + eax ]
mov ecx edx
call sub_44be14
test al al
je r-xdata
cmp [ ecx + ebx + 0x3c ] eax
je r-xdata
lea eax [ esi + 0x2 ]
imul eax eax 0x18
and [ eax + ebx ] 0x0
jmp r-xdata
mov esi [ ebp - 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_4218fb
pop ecx
mov ecx 0x10000
cmp eax ecx
jae r-xdata
mov esi [ ebp - 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_4218fb
pop ecx
mov ecx 0x10000
cmp eax ecx
jae r-xdata
lea ecx [ esi + 0x2 ]
imul ecx ecx 0x18
mov [ ecx + ebx ] eax
cmp [ edx + 0xc ] 0x8
jne r-xdata
mov [ ecx + ebx + 0x3c ] eax
mov eax [ ebp + 0xc ]
push 0xc
mov eax [ eax + 0x4 ]
mov eax [ edi + eax ]
mov ecx eax
mov [ ebp + 0x8 ] eax
call sub_40d2c0
mov ecx [ ebp + 0x8 ]
test al al
je r-xdata
inc eax
push eax
call sub_4245ec
mov esi [ ebp + 0x8 ]
mov edi eax
mov eax [ ebp + 0xc ]
pop ecx
mov ecx [ eax + 0x4 ]
mov esi [ esi + ecx ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
or edx 0xffffffff
mov ecx [ ecx ]
call sub_448932
mov esi eax
push esi
push edi
call sub_423220
push esi
call j_sub_4228ca#2
add esp 0xc
mov eax ecx
lea eax [ eax * 2 + 0x2 ]
push eax
call sub_4245ec
mov esi [ ebp + 0x8 ]
mov edi eax
mov eax [ ebp + 0xc ]
pop ecx
mov ecx [ eax + 0x4 ]
mov esi [ esi + ecx ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
push [ ecx ]
push edi
call sub_421943
pop ecx
pop ecx
jmp r-xdata
mov eax ecx
xor eax eax
mov eax [ edx ]
jmp r-xdata
call sub_44be63
cmp [ ecx + 0xc ] 0xc
jne r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x2
imul eax eax 0x18
mov [ eax + ebx ] edi
mov eax [ ebp - 0x4 ]
mov [ eax + ebx + 0x44 ] edi
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ ecx ]
jmp r-xdata
sub_460a22
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
cmp [ rw-data ] 0x1
push ebx
push esi
push edi
jne r-xdata
mov esi [ ebp + 0x8 ]
mov bl [ rw-data ]
mov eax [ esi + 0x4 ]
mov ecx rw-data
push [ eax ]
mov [ rw-data ] 0x1
mov [ esp + 0x17 ] bl
call sub_41cf79
mov cl [ eax + 0x20 ]
mov [ rw-data ] cl
push [ eax + 0x10 ]
mov [ esp + 0x18 ] eax
call sub_40109f
xor eax eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x1
mov edi eax
cmp [ esi + 0x1c ] eax
jle r-xdata
xor eax eax
xor edx edx
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push 0x0
mov eax [ eax + 0x10 ]
inc eax
push eax
mov ecx rw-data
call sub_401000
mov ecx rw-data
call sub_401188
mov eax [ esi + 0x30 ]
lea ecx [ esp + 0x18 ]
sub eax 0x9
je r-xdata
lea ebx [ esi + 0x40 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_412620
fstp [ rw-data ]
mov edi [ rw-data ]
mov esi [ rw-data ]
dec eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
call sub_460300
push 0x1
push 0x200
lea eax [ esp + 0x20 ]
push eax
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 + 0x4 ]
call sub_40d380
inc edi
add ebx 0x18
cmp edi [ esi + 0x1c ]
jl r-xdata
mov bl [ esp + 0x13 ]
call sub_40d00b
mov esi eax
mov edi edx
jmp r-xdata
lea ecx [ esp + 0x18 ]
mov [ rw-data ] 0x0
mov [ rw-data ] bl
call sub_412570
mov eax esi
mov edx edi
sub_460b3c
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_41cf79
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_405b47
push [ esi + 0x10 ]
call sub_405554
cmp [ esi + 0x20 ] 0x0
push 0x3
mov [ ebp + 0x8 ] eax
pop edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jle r-xdata
push 0x4
pop edi
mov al 0x1
shl edi 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ edi + eax ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cd3
jmp r-xdata
push [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_40c935
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_405b47
lea ecx [ ebp - 0x10 ]
add edi 0x4
call sub_405cd3
inc ebx
cmp ebx [ esi + 0x14 ]
jl r-xdata
add edi 0x4
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
test ebx ebx
je r-xdata
sub_460c22
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov edi ecx
mov ecx [ eax ]
call sub_40cdb4
mov esi eax
dec esi
js r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp esi [ edi + 0x1bc ]
jge r-xdata
mov eax [ edi + 0x1b8 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
push 0x8000
push 0x0
push [ eax + 0x10 ]
call [ VirtualFree@IAT ]
mov eax [ edi + 0x1b8 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x1b8 ]
mov eax [ eax + esi * 4 ]
and [ eax ] 0x0
jmp r-xdata
push ecx
call sub_44d323
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_460ca1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi ecx
mov ecx [ eax ]
call sub_40cdb4
test eax eax
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp eax [ esi + 0x1bc ]
jg r-xdata
mov ecx [ esi + 0x1b8 ]
mov esi [ ebp + 0xc ]
mov eax [ ecx + eax * 4 - 0x4 ]
push edi
mov eax [ eax ]
mov ecx esi
mov edi [ eax + 0x10 ]
call sub_412570
mov [ esi ] edi
mov [ esi + 0xc ] 0x7
pop edi
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_460d01
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
push esi
push edi
mov ebx ecx
xor esi esi
push 0x340
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] esi
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax esi
mov ecx eax
call sub_45f703
jmp r-xdata
cmp ecx esi
jne r-xdata
mov edx [ ebx + 0x1b8 ]
lea ecx [ eax + 0x10 ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x1c ] ecx
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x38 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x3c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x40 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x38 ]
inc [ eax ]
mov [ esp + 0x44 ] eax
call sub_40b8a7
push [ esp + 0x3c ]
mov edi [ CharLowerBuffW@IAT ]
push [ esp + 0x3c ]
call edi
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x28 ]
inc [ eax ]
mov [ esp + 0x34 ] eax
call sub_40b8a7
push [ esp + 0x2c ]
push [ esp + 0x2c ]
call edi
mov esi [ ebx + 0x1bc ]
xor edi edi
mov ecx edi
mov [ esp + 0x24 ] edi
test esi esi
je r-xdata
mov eax [ ebx + 0x1b8 ]
mov esi [ esp + 0x14 ]
mov eax [ eax + ecx * 4 ]
mov [ eax ] esi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ ebx + 0x1b4 ]
call sub_4628d9
mov esi [ esp + 0x14 ]
jmp r-xdata
mov [ esp + 0x24 ] ecx
inc ecx
add edx 0x4
cmp ecx esi
jb r-xdata
push 0x2
pop eax
mov [ esp + 0x18 ] eax
call sub_4084a6
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x48 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x4c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x54 ] eax
inc [ eax ]
lea eax [ esp + 0x48 ]
xor eax eax
inc eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x58 ]
push eax
call sub_44afce
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0xe
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_40d2c0
mov ecx edi
test al al
je r-xdata
mov eax [ edx ]
cmp [ eax ] edi
je r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffd
lea ecx [ esp + 0x48 ]
mov [ esp + 0x18 ] eax
call sub_405cd3
mov eax [ esp + 0x18 ]
push esi
push eax
mov ecx ebx
call sub_460b3c
neg al
sbb al al
inc al
mov [ esp + 0x13 ] al
mov eax [ esp + 0x18 ]
test al 0x2
je r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
lea ecx [ esp + 0x58 ]
call sub_405cd3
mov esi [ esp + 0x1c ]
push esi
lea eax [ esp + 0x3c ]
push eax
call sub_460458
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
push eax
push 0x3
jmp r-xdata
xor eax eax
mov esi eax
mov edi eax
xor ebx ebx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor ecx ecx
inc ecx
xor eax eax
push eax
mov [ esi + 0xc ] ecx
push ecx
jmp r-xdata
mov [ esi + 0xc ] 0x1
cmp [ esp + 0x2c ] 0x1
mov ebx [ esp + 0x20 ]
mov [ esp + 0x18 ] esi
mov esi [ esp + 0x1c ]
jbe r-xdata
push esi
lea ecx [ esp + 0x2c ]
call sub_40a4f6
push 0x3b
pop ecx
inc esi
cmp [ eax ] cx
jne r-xdata
mov [ esi ] eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea ecx [ esp + 0x38 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] eax
mov [ esp + 0x18 ] eax
test edi edi
jle r-xdata
mov eax [ esp + 0x18 ]
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_40a4f6
push 0x3b
pop ecx
cmp [ eax ] cx
je r-xdata
push esi
lea ecx [ esp + 0x2c ]
call sub_40a4f6
cmp [ eax ] bx
je r-xdata
inc edi
jmp r-xdata
push 0x40
mov esi sub_41fa89
push 0x3000
sub esi sub_41fa12
push esi
push eax
call [ VirtualAlloc@IAT ]
push esi
mov esi sub_41fa12
mov edi eax
push esi
push edi
call sub_41faa0
mov ecx [ ebx + 0x1b8 ]
mov ebx [ esp + 0x30 ]
add esp 0xc
mov ecx [ ecx + ebx * 4 ]
mov ecx [ ecx ]
mov [ ecx + 0x10 ] edi
mov ecx [ esp + 0x14 ]
sub edi esi
mov eax edi
add eax r-xdata
mov [ eax + 0x1 ] sub_460a19
mov eax edi
add eax r-xdata
mov [ eax + 0x1 ] ecx
mov ecx [ esp + 0x1c ]
mov eax edi
add eax r-xdata
add edi r-xdata
mov [ eax + 0x1 ] ecx
xor eax eax
cmp [ ecx + 0xc ] eax
je r-xdata
lea ecx [ esi + 0x40 ]
mov [ esp + 0x20 ] ecx
inc edi
mov [ edi ] 0xc3
cmp [ ecx + 0x4 ] 0x1
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
push eax
push 0x2
mov ecx [ esp + 0x20 ]
mov eax [ ecx ]
add [ esi + 0x8 ] eax
mov eax [ esp + 0x18 ]
inc eax
add ecx 0x18
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ecx
cmp eax edi
jl r-xdata
mov [ edi ] 0xc2
mov ax [ ecx + 0x8 ]
mov [ edi + 0x1 ] ax
jmp r-xdata
lea eax [ ecx - 0x10 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_45fc96
test al al
je r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
lea eax [ ebx + 0x1 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
sub_461084
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov edi ecx
mov ecx [ eax ]
call sub_40cdb4
mov esi eax
dec esi
js r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp esi [ edi + 0x1ac ]
jge r-xdata
mov eax [ edi + 0x1a8 ]
mov eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ eax ]
call [ FreeLibrary@IAT ]
mov eax [ edi + 0x1a8 ]
mov eax [ eax + esi * 4 ]
and [ eax ] 0x0
jmp r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4610e5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
mov ebx ecx
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call [ LoadLibraryW@IAT ]
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
mov ecx [ ebx + 0x1ac ]
push edi
xor edi edi
test ecx ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
jmp r-xdata
cmp edi ecx
jne r-xdata
mov edx [ ebx + 0x1a8 ]
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x1a8 ]
mov eax [ eax + edi * 4 ]
mov [ eax ] esi
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebx + 0x1a4 ]
call sub_4628d9
jmp r-xdata
inc edi
add edx 0x4
cmp edi ecx
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
lea eax [ edi + 0x1 ]
mov [ esi ] eax
pop edi
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
sub_46117f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
push edi
mov edi ecx
jbe r-xdata
mov ecx [ esi + 0x4 ]
and [ ebp + 0x8 ] 0x0
mov esi [ ecx ]
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ edx ]
sub esp 0x10
mov ecx esp
push ebx
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_44ad79
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx esi
call sub_412570
and [ esi ] 0x0
push 0x0
push [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_44be63
mov ebx eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] ebx
push ebx
push 0x3
jmp r-xdata
mov [ esi + 0xc ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
sub_46122d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x4 ]
push edi
mov edi ecx
mov ecx [ esi ]
push 0xc
call sub_40d2c0
test al al
jne r-xdata
or [ esp + 0xc ] 0xffffffff
cmp [ ebx + 0x8 ] 0x3
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx + 0x4 ]
and [ esp + 0x18 ] 0x0
push [ eax + 0x4 ]
lea ecx [ esp + 0x14 ]
call sub_4113a0
push 0x4
lea ecx [ esp + 0x14 ]
call sub_40d2c0
test al al
jne r-xdata
mov ecx [ esi + 0x8 ]
push 0x29
call sub_41d5f6
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0xc
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_40cdb4
lea ecx [ esp + 0x10 ]
lea esi [ eax - 0x1 ]
call sub_412570
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x10 ] esi
mov ecx [ esi + 0x8 ]
call sub_40cdb4
mov esi eax
dec esi
mov [ esp + 0xc ] esi
jns r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
push 0x0
mov [ esi + 0xc ] 0x1
push 0x5
jmp r-xdata
push 0x0
push ecx
push [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0xc ]
push eax
call sub_4492f4
pop ecx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
lea ecx [ esp + 0x10 ]
call sub_412570
and [ esi ] 0x0
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
sub_461341
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x4 ]
push edi
mov edi [ esi ]
mov [ ebp - 0x8 ] ecx
push 0xc
mov ecx edi
call sub_40d2c0
test al al
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov edx [ ebp - 0x8 ]
xor ebx ebx
inc ebx
xor edi edi
mov [ esi + 0xc ] ebx
mov [ esi ] edi
mov eax [ edx ]
push edi
mov ecx [ eax + 0x4 ]
push ebx
add ecx edx
call sub_44d7e4
jmp r-xdata
cmp [ edi + 0xc ] 0xc
jne r-xdata
push [ esi + 0x4 ]
xor edi edi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] edi
call sub_4113a0
push 0x4
lea ecx [ ebp - 0x1c ]
call sub_40d2c0
xor ebx ebx
inc ebx
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0xc
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40cdb4
lea ecx [ ebp - 0x1c ]
lea esi [ eax - 0x1 ]
call sub_412570
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1c ] esi
mov esi [ ebp + 0xc ]
mov edi [ edi + 0x8 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x7
mov [ esi ] edi
mov ecx edi
mov ecx [ eax ]
jmp r-xdata
call sub_412570
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
call sub_412570
mov edx [ ebp - 0x8 ]
mov [ esi + 0xc ] ebx
mov [ esi ] edi
mov eax [ edx ]
push edi
mov ecx [ eax + 0x4 ]
push [ ebp - 0x4 ]
add ecx edx
call sub_44d7e4
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_449228
mov esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
mov ecx esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_412570
jmp r-xdata
sub_46146c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
mov edi ecx
push 0xc
mov ecx esi
call sub_40d2c0
test al al
jne r-xdata
cmp [ esi + 0xc ] 0xc
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
xor edi edi
mov edi [ esi ]
jmp r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov edi [ edi + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
sub_4614d6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x4 ]
push edi
mov edi ecx
mov ecx [ esi ]
push 0xc
call sub_40d2c0
test al al
jne r-xdata
or [ esp + 0xc ] 0xffffffff
cmp [ ebx + 0x8 ] 0x4
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx + 0x4 ]
and [ esp + 0x18 ] 0x0
push [ eax + 0x4 ]
lea ecx [ esp + 0x14 ]
call sub_4113a0
push 0x4
lea ecx [ esp + 0x14 ]
call sub_40d2c0
test al al
jne r-xdata
mov ecx [ esi + 0xc ]
push 0x29
call sub_41d5f6
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0xc
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_40cdb4
lea ecx [ esp + 0x10 ]
lea esi [ eax - 0x1 ]
call sub_412570
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x10 ] esi
mov ecx [ esi + 0xc ]
call sub_40cdb4
mov esi eax
dec esi
mov [ esp + 0xc ] esi
jns r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
push 0x0
mov [ esi + 0xc ] 0x1
push 0x5
jmp r-xdata
push [ esp + 0xc ]
lea eax [ esp + 0x14 ]
push 0x1
push [ ebp + 0xc ]
push edx
push eax
call sub_449310
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
lea ecx [ esp + 0x10 ]
call sub_412570
and [ esi ] 0x0
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
sub_4615ee
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xc
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40d2c0
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_461620
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
xor ebx ebx
mov ecx esi
mov [ ebp - 0x1 ] bl
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
call sub_446f5b
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x4
add ecx edi
call sub_44d7e4
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
push [ ebp + 0x8 ]
push ebx
push 0x1
call [ OpenProcess@IAT ]
mov ebx [ ebp + 0xc ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
push 0x0
push esi
call [ TerminateProcess@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x5
jne r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push eax
call [ GetLastError@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x3
add ecx edi
call sub_44d7e4
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
push r--data
lea ecx [ ebp - 0x14 ]
call sub_446937
push ecx
lea ecx [ ebp - 0x14 ]
call sub_43bec3
test al al
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x5
add ecx edi
call sub_407ba9
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx edi
call sub_44d7e4
mov ecx ebx
call sub_412570
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
push [ ebp + 0x8 ]
push 0x0
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_43b8b0
jmp r-xdata
sub_4617aa
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
xor ebx ebx
mov ecx esi
mov [ ebp - 0x1 ] bl
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
call sub_446f5b
mov esi [ ebp + 0xc ]
pop ecx
mov ecx esi
test al al
jne r-xdata
call sub_412570
cmp [ ebp - 0x1 ] bl
je r-xdata
call sub_412570
xor eax eax
inc eax
push ebx
mov [ esi + 0xc ] eax
mov [ esi ] ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ ebp + 0x8 ]
fild [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x3
test eax eax
jns r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
fstp [ esi ]
jmp r-xdata
fadd [ r--data ]
sub_461836
push ebp
mov ebp esp
sub esp 0x38
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x8 ]
mov edi ecx
mov ecx ebx
mov [ ebp - 0x4 ] eax
call sub_412570
and [ ebx ] 0x0
xor eax eax
xor ecx ecx
inc ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] ecx
cmp eax ecx
jbe r-xdata
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call [ GetCurrentProcessId@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_40cdb4
cmp eax 0xffffffff
je r-xdata
push esi
cmp ecx 0xffffffff
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea eax [ ebp + 0xb ]
mov ecx [ ecx ]
push eax
lea edx [ ebp - 0x4 ]
call sub_446f5b
cmp [ ebp + 0xb ] 0x0
pop ecx
jne r-xdata
push 0x28
lea eax [ ebp - 0x30 ]
push eax
push ecx
call [ GetProcessMemoryInfo@IAT ]
test eax eax
jne r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
push 0x0
jmp r-xdata
push 0x2
push 0x1
push ebx
call sub_403320
push esi
push 0x1
push esi
push ebx
call sub_4114a0
mov esi [ ebp - 0x24 ]
mov edi eax
add esp 0x1c
mov ecx edi
call sub_412570
and [ edi + 0x4 ] 0x0
push 0x1
push 0x1
push 0x0
push ebx
mov [ edi + 0xc ] 0x2
mov [ edi ] esi
call sub_4114a0
mov esi [ ebp - 0x28 ]
mov edi eax
add esp 0x10
mov ecx edi
call sub_412570
and [ edi + 0x4 ] 0x0
mov [ edi + 0xc ] 0x2
mov [ edi ] esi
mov eax [ edi ]
push esi
mov ecx [ eax + 0x4 ]
push 0x2
add ecx edi
call sub_44d7e4
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
push ecx
call [ GetProcessIoCounters@IAT ]
test eax eax
je r-xdata
push eax
xor esi esi
push esi
push 0x410
call [ OpenProcess@IAT ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x6
push 0x1
push ebx
call sub_403320
push esi
push 0x1
push esi
push ebx
call sub_4114a0
mov esi [ ebp - 0x38 ]
mov edi [ ebp - 0x34 ]
mov ebx eax
add esp 0x1c
mov ecx ebx
call sub_412570
push 0x1
push 0x1
push 0x0
push [ ebp + 0xc ]
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
call sub_4114a0
mov esi [ ebp - 0x30 ]
mov edi [ ebp - 0x2c ]
mov ebx eax
add esp 0x10
mov ecx ebx
call sub_412570
push 0x2
pop eax
push eax
push 0x1
push 0x0
push [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
call sub_4114a0
mov esi [ ebp - 0x28 ]
mov edi [ ebp - 0x24 ]
mov ebx eax
add esp 0x10
mov ecx ebx
call sub_412570
push 0x3
push 0x1
push 0x0
push [ ebp + 0xc ]
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
call sub_4114a0
mov esi [ ebp - 0x20 ]
mov edi [ ebp - 0x1c ]
mov ebx eax
add esp 0x10
mov ecx ebx
call sub_412570
push 0x4
push 0x1
push 0x0
push [ ebp + 0xc ]
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
call sub_4114a0
mov esi [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
mov ebx eax
add esp 0x10
mov ecx ebx
call sub_412570
push 0x5
push 0x1
push 0x0
push [ ebp + 0xc ]
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
call sub_4114a0
mov esi [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov ebx eax
add esp 0x10
mov ecx ebx
call sub_412570
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
jmp r-xdata
sub_461ad0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8a4
push ebx
push esi
push edi
lea ecx [ esp + 0x3c ]
call sub_40d3d2
xor esi esi
push esi
push 0x2
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x70 ] 0x22c
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
lea eax [ esp + 0x68 ]
push eax
push edi
call [ Process32FirstW@IAT ]
mov ebx [ ebp + 0x8 ]
lea eax [ esp + 0x298 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_40caee
lea eax [ esp + 0x28 ]
push eax
push [ esp + 0x74 ]
lea ecx [ esp + 0x5c ]
call sub_45f6d9
push eax
lea ecx [ esp + 0x1c ]
call sub_462962
lea ecx [ esp + 0x58 ]
call sub_405cd3
lea ecx [ esp + 0x28 ]
call sub_405cd3
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ esp + 0x29c ]
push eax
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ esp + 0x4a0 ]
push eax
lea eax [ esp + 0x29c ]
push eax
lea eax [ esp + 0x6b0 ]
push eax
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x9c ]
push eax
call sub_42297d
lea eax [ esp + 0x4b4 ]
push eax
lea eax [ esp + 0x2b0 ]
push eax
call sub_421914
add esp 0x1c
cmp [ ebx + 0x8 ] esi
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov edi [ esp + 0x20 ]
mov ebx [ ebp + 0xc ]
push 0x2
lea eax [ edi + 0x1 ]
push eax
push 0x2
push ebx
call sub_403320
xor eax eax
push eax
push eax
push 0x2
push eax
push ebx
call sub_4114a0
mov esi eax
add esp 0x24
mov ecx esi
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] edi
test edi edi
je r-xdata
lea eax [ esp + 0x68 ]
push eax
push edi
call [ Process32NextW@IAT ]
push 0x0
pop esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_45f730
lea ecx [ esp + 0x3c ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
mov ecx esi
fstp [ esp + 0x28 ]
call sub_412570
fld [ esp + 0x28 ]
add [ esp + 0x10 ] 0x4
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov esi [ esp + 0x14 ]
inc esi
mov [ esp + 0x14 ] esi
dec edi
jne r-xdata
fadd [ r--data ]
push 0x0
push esi
push 0x2
push 0x0
push ebx
call sub_4114a0
mov ecx [ esp + 0x24 ]
add esp 0x14
mov ecx [ ecx ]
add ecx 0x4
push ecx
mov ecx eax
call sub_407bef
push 0x1
push esi
push 0x2
push 0x0
push ebx
call sub_4114a0
mov esi eax
mov eax [ esp + 0x24 ]
add esp 0x14
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ esp + 0x28 ] ecx
fild [ esp + 0x28 ]
test ecx ecx
jns r-xdata
sub_461cc7
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
mov ecx edi
call sub_412570
and [ edi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ edi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea eax [ ebp + 0xf ]
mov ecx [ ecx ]
push eax
lea edx [ ebp - 0x4 ]
call sub_446f5b
cmp [ ebp + 0xf ] 0x0
pop ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
push [ ebp - 0x4 ]
push 0x0
push 0x200
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
sub eax 0x0
je r-xdata
push 0x40
dec eax
je r-xdata
mov eax 0x4000
jmp r-xdata
dec eax
je r-xdata
push eax
push esi
call [ SetPriorityClass@IAT ]
mov ecx edi
call sub_412570
xor eax eax
inc eax
mov [ edi + 0xc ] eax
mov [ edi ] eax
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x0
add ecx ebx
call sub_44d7e4
push 0x20
jmp r-xdata
dec eax
je r-xdata
pop eax
mov eax 0x8000
jmp r-xdata
dec eax
je r-xdata
mov eax 0x80
jmp r-xdata
dec eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x100
jmp r-xdata
sub_461daf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x8 ]
mov edi ecx
push eax
call sub_462346
test al al
jne r-xdata
push ecx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp + 0x8 ] 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_402f0e
push 0x0
mov ecx edi
mov [ edi + 0xfc ] 0x8
call sub_40e1f0
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
pop esi
jmp r-xdata
xor eax eax
pop edi
pop ebp
retn 0x8
sub_461e35
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push [ eax + 0x8 ]
mov edi ecx
push eax
call sub_462346
test al al
jne r-xdata
mov ecx [ edi + 0x458 ]
lea eax [ ebp + 0xb ]
xor ebx ebx
push eax
lea edx [ ebp - 0x4 ]
mov [ ebp + 0xb ] bl
call sub_446f5b
pop ecx
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
xor ebx ebx
cmp [ ebp + 0xb ] bl
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0xcccccccc
add ecx edi
call sub_407ba9
push [ ebp - 0x4 ]
push ebx
push 0x100400
call [ OpenProcess@IAT ]
mov [ edi + 0x474 ] eax
push ecx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp + 0x8 ] 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_402f0e
push ebx
mov ecx edi
mov [ edi + 0xfc ] 0x9
call sub_40e1f0
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
jmp r-xdata
push ebx
mov [ esi + 0xc ] eax
mov [ esi ] ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
sub_461f45
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
push 0x1
push 0x1
call sub_4623c5
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xfc ] 0x7
call sub_40e1f0
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
sub_461fa1
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
push 0x0
push 0x1
call sub_4623c5
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xfc ] 0x7
call sub_40e1f0
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
sub_462015
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
push eax
push 0x1
call sub_462121
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xfc ] 0x7
call sub_40e1f0
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
sub_462073
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x8 ] 0x1
mov esi 0x80000000
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov edx esi
mov ecx eax
call sub_4482d0
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov esi eax
or esi 0x40000000
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_4620f6
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_462121
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
mov [ ebp - 0x10 ] ecx
push edi
lea ecx [ ebp - 0x30 ]
call sub_40d3d2
xor ecx ecx
push 0x3c
push ecx
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x1
call sub_421970
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
add esp 0xc
cmp ebx 0x2
jb r-xdata
cmp ebx 0x3
jb r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor ecx ecx
mov eax [ eax ]
cmp [ eax ] cx
je r-xdata
cmp ebx 0x4
jb r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
mov [ ebp - 0x4 ] eax
xor esi esi
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor esi esi
mov eax [ eax ]
cmp [ eax ] si
je r-xdata
push 0x3c
pop ebx
push ebx
lea eax [ ebp - 0x6c ]
push esi
push eax
call sub_421970
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x60 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x68 ] 0x40
mov [ ebp - 0x64 ] esi
mov esi [ eax ]
add esp 0xc
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp - 0x4 ]
mov eax [ eax ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] ebx
call [ ShellExecuteExW@IAT ]
mov edi eax
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
movzx eax ax
mov [ ebp - 0xc ] eax
cmp ebx 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0xc ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
test ebx ebx
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_40c935
test edi edi
jne r-xdata
push ebx
call j_sub_4228ca#2
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
xor ebx ebx
mov eax [ edx ]
push ebx
mov ecx [ eax + 0x4 ]
inc edi
push edi
add ecx edx
call sub_44d7e4
mov esi [ ebp + 0x14 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] edi
mov [ esi ] ebx
jmp r-xdata
mov esi [ ebp + 0x14 ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
xor edi edi
inc edi
cmp [ ebp - 0x34 ] 0x0
mov [ esi + 0xc ] edi
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
mov [ edx + 0x470 ] eax
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
xor eax eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] eax
call sub_4620e4
test al al
je r-xdata
push [ ebp - 0x34 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x20 ]
call sub_45f749
call eax
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
push [ ebp - 0x20 ]
call [ FreeLibrary@IAT ]
fstp [ ebp - 0x14 ]
mov ecx esi
fld [ ebp - 0x14 ]
fstp [ ebp - 0x14 ]
call sub_412570
fld [ ebp - 0x14 ]
mov [ esi + 0xc ] 0x3
fstp [ esi ]
fadd [ r--data ]
sub_462346
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
push edi
mov esi [ eax ]
mov edi ecx
mov ecx esi
call sub_40d16a
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ edi + 0x458 ]
call sub_40c935
cmp [ ebp + 0xc ] 0x2
jne r-xdata
mov ecx esi
call sub_40cdb4
test eax eax
jne r-xdata
and [ edi + 0x468 ] 0x0
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
imul eax eax 0x3e8
mov [ edi + 0x468 ] eax
jmp r-xdata
xor al al
jmp r-xdata
call [ timeGetTime@IAT ]
mov [ edi + 0x46c ] eax
mov al 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4623c5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xac
push ebx
push esi
push edi
push 0x44
pop esi
push esi
xor ebx ebx
lea eax [ esp + 0x74 ]
mov edi ecx
push ebx
push eax
mov [ esp + 0x40 ] edi
call sub_421970
xor eax eax
inc eax
mov [ esp + 0xa8 ] eax
mov [ esp + 0xac ] ax
mov al [ ebp + 0xc ]
add esp 0xc
mov [ esp + 0x70 ] esi
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x28 ] ebx
mov esi ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] ebx
mov ebx [ ebp + 0x10 ]
test al al
je r-xdata
cmp [ ebx + 0x8 ] 0x3
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
cmp [ ebx + 0x8 ] 0x7
mov [ esp + 0x28 ] eax
jbe r-xdata
push 0x2
pop eax
cmp [ ebx + 0x8 ] eax
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov esi eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
mov al [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_40cdb4
mov esi eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x1c ]
jmp r-xdata
test esi 0x10000
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
test al al
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
jmp r-xdata
and esi 0xffff0000
call sub_40cdb4
and eax 0xffff
mov [ esp + 0x1c ] eax
mov al [ ebp + 0xc ]
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esp + 0x24 ] 0x10
cmp [ ebx + 0x8 ] 0x6
jbe r-xdata
call sub_40cdb4
mov [ esp + 0xa0 ] ax
cmp [ ebx + 0x8 ] 0x1
mov [ esp + 0x18 ] eax
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x14 ] eax
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_403bcf
mov ecx [ ebx + 0x4 ]
mov [ esp + 0xc ] eax
mov esi [ ecx + 0x8 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_403bcf
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x10 ] eax
mov esi [ ecx + 0x10 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_403bcf
cmp [ ebx + 0x8 ] 0x5
mov [ esp + 0x18 ] eax
jbe r-xdata
mov edi [ GetCurrentDirectoryW@IAT ]
push 0x0
push 0x0
call edi
mov esi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push eax
push esi
mov [ esp + 0x28 ] eax
call edi
mov esi [ esp + 0x20 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
mov esi eax
test esi esi
je r-xdata
mov edi [ GetSystemDirectoryW@IAT ]
push 0x0
push 0x0
call edi
mov esi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push esi
mov esi eax
push esi
mov [ esp + 0x28 ] eax
call edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0x14 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_403bcf
mov esi eax
test esi esi
je r-xdata
mov edx [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x4c ]
call sub_449a8f
test edx edx
je r-xdata
mov ecx [ ebx + 0x4 ]
push r--data
mov ecx [ ecx ]
call sub_40ca8e
mov ecx [ ebx + 0x4 ]
push r--data
mov ecx [ ecx + 0x4 ]
call sub_40ca8e
mov ecx [ ebx + 0x4 ]
push r--data
mov ecx [ ecx + 0x8 ]
call sub_40ca8e
push esi
call sub_4218fb
pop ecx
test eax eax
jne r-xdata
mov edi [ esp + 0x34 ]
push esi
call sub_4218fb
pop ecx
test eax eax
jne r-xdata
xor bl bl
call sub_44a17a
cmp eax 0xffffffff
sete bl
dec bl
lea ecx [ esp + 0x48 ]
mov [ esp + 0xac ] eax
and bl 0x1
call sub_44a073
cmp eax 0xffffffff
sete bh
dec bh
lea ecx [ esp + 0x48 ]
mov [ esp + 0xb0 ] eax
and bh bl
call sub_44a102
cmp eax 0xffffffff
sete bl
dec bl
mov [ esp + 0xa8 ] eax
and bl bh
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x0
push [ esp + 0x34 ]
movzx eax bl
push eax
push 0x0
push 0x0
push [ esp + 0x38 ]
push 0x0
call [ CreateProcessW@IAT ]
test eax eax
setne bh
push [ esp + 0x30 ]
push [ esp + 0x28 ]
push ecx
push [ esp + 0x40 ]
push [ esp + 0x2c ]
push [ esp + 0x2c ]
push [ esp + 0x38 ]
call sub_43bc90
push [ esp + 0x14 ]
mov bh al
call sub_4218fb
pop ecx
mov ecx [ esp + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x74 ]
push eax
push esi
je r-xdata
or [ esp + 0x9c ] 0x100
jmp r-xdata
push [ esp + 0x3c ]
call [ CloseHandle@IAT ]
test bl bl
je r-xdata
mov eax [ edi ]
xor ebx ebx
mov ecx [ eax + 0x4 ]
push ebx
push 0x1
add ecx edi
call sub_44d7e4
push ebx
call [ GetLastError@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov esi [ ebp + 0x14 ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
push [ esp + 0xc ]
call sub_4218fb
pop ecx
mov ecx [ esp + 0xc ]
test eax eax
je r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_449d09
mov eax [ esp + 0x40 ]
lea ecx [ esp + 0x48 ]
mov [ esp + 0x4c ] eax
call sub_44a37f
lea eax [ esp + 0x48 ]
push eax
lea ecx [ edi + 0x488 ]
call sub_462881
lea ecx [ esp + 0x48 ]
call sub_449b29
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ esp + 0x10 ]
call sub_4218fb
pop ecx
mov ecx [ esp + 0x10 ]
test eax eax
je r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
mov eax [ esp + 0x40 ]
fild [ esp + 0x40 ]
test eax eax
jns r-xdata
mov eax [ esp + 0x38 ]
mov [ edi + 0x470 ] eax
jmp r-xdata
push [ esp + 0x14 ]
call j_sub_4228ca#2
pop ecx
push [ esp + 0xc ]
call j_sub_4228ca#2
pop ecx
push [ esp + 0x10 ]
call j_sub_4228ca#2
pop ecx
jmp r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
mov esi [ ebp + 0x14 ]
fstp [ esp + 0x28 ]
mov ecx esi
call sub_412570
fld [ esp + 0x28 ]
push [ esp + 0x38 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
call [ CloseHandle@IAT ]
fadd [ r--data ]
push [ esp + 0x18 ]
call j_sub_4228ca#2
pop ecx
push esi
call j_sub_4228ca#2
pop ecx
test bh bh
jne r-xdata
sub_462852
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push ecx
call sub_468ba4
sub_462881
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_45f67e
mov edi eax
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_45f67e
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4628d9
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push 0x4
mov eax [ esi + 0xc ]
pop ebx
cmp [ esi + 0x8 ] eax
jne r-xdata
push ebx
call sub_42010a
mov edx eax
pop ecx
test edx edx
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edx edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mul ebx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
sub_462962
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x14
call sub_42010a
pop ecx
test eax eax
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edx edx
push [ ebp + 0x8 ]
mov ecx eax
call sub_45f6af
mov edx eax
jmp r-xdata
push edi
xor ecx ecx
push 0x4
pop edx
mov [ esi + 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
cmp [ esi + 0x4 ] 0x0
pop ecx
mov edi eax
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_41faa0
push [ esi + 0x4 ]
call j_sub_4228ca#2
add esp 0x10
sub_462a0a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
and [ esp ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ebx [ esi + 0x8 ]
mov edi ecx
lea ecx [ esp + 0x48 ]
call sub_40d3d2
lea ecx [ esp + 0x28 ]
call sub_40d3d2
lea ecx [ esp + 0x38 ]
call sub_40d3d2
lea ecx [ esp + 0x58 ]
call sub_40d3d2
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
sub esp 0x10
mov ecx esp
push [ eax ]
call sub_40caee
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x60 ]
push eax
call sub_463d7b
mov eax [ esp + 0x28 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x3c ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x40 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x44 ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_463af7
test al al
jne r-xdata
cmp [ esp + 0x4c ] 0x0
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx edi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov esi [ esp + 0x18 ]
lea eax [ esp + 0xc ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x50 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x58 ]
call sub_405cd3
lea ecx [ esp + 0x38 ]
call sub_405cd3
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea ecx [ esp + 0x48 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
je r-xdata
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov eax [ edi ]
xor ebx ebx
mov ecx [ eax + 0x4 ]
push 0x0
inc ebx
push ebx
add ecx edi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
mov esi [ esp + 0xc ]
jmp r-xdata
xor ebx ebx
push ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x3
add ecx edi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
call sub_463c63
push [ esp + 0x10 ]
mov bl al
call [ RegCloseKey@IAT ]
test bl bl
jne r-xdata
dec ebx
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
or eax 0x2001f
push eax
push 0x0
push [ esp + 0x44 ]
push esi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
xor ebx ebx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] ebx
call sub_463aba
test al al
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0xfffffffe
add ecx edi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
push [ esp + 0x14 ]
call [ RegDeleteValueW@IAT ]
test eax eax
je r-xdata
push [ esp + 0xc ]
call [ RegCloseKey@IAT ]
push [ esp + 0x38 ]
push esi
call [ RegDeleteKeyW@IAT ]
push ebx
push [ esp + 0x18 ]
lea ecx [ esp + 0x24 ]
push [ esp + 0x40 ]
push esi
call sub_4629ed
call eax
jmp r-xdata
push [ esp + 0x10 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
push 0x2
pop ebx
cmp eax ebx
jne r-xdata
cmp [ esp + 0x1c ] ebx
je r-xdata
push ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0xfffffffe
add ecx edi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x2
test eax eax
je r-xdata
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_407ba9
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0xfffffffe
add ecx edi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] ebx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
jmp r-xdata
push [ esp + 0x1c ]
call [ FreeLibrary@IAT ]
mov [ esi + 0xc ] 0x1
sub_462d1a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
and [ esp ] 0x0
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x18 ] 0xff
call sub_40d3d2
lea ecx [ esp + 0x20 ]
call sub_40d3d2
lea ecx [ esp + 0x40 ]
call sub_40d3d2
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
sub esp 0x10
mov ecx esp
push [ eax ]
call sub_40caee
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_463d7b
mov eax [ esp + 0x20 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x34 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x38 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x3c ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x24 ]
push eax
call sub_463af7
test al al
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
push 0x0
push 0x2
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0xc ]
push eax
push [ esp + 0x14 ]
push [ esp + 0x38 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ esp + 0x50 ]
push ecx
xor ebx ebx
push ebx
push ebx
push ebx
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x6c ]
push ecx
mov ecx [ eax + 0x4 ]
call sub_40cdb4
dec eax
push eax
push [ esp + 0x30 ]
call [ RegEnumKeyExW@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
jmp r-xdata
mov ecx [ esp + 0xc ]
jmp r-xdata
push 0x0
push 0x3
lea ecx [ esp + 0x40 ]
call sub_405cd3
lea ecx [ esp + 0x20 ]
call sub_405cd3
lea ecx [ esp + 0x30 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x58 ]
push eax
call sub_40ca8e
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0xffffffff
add ecx edi
call sub_44d7e4
jmp r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x20 ]
or eax 0x20019
push eax
push 0x0
push [ esp + 0x4c ]
push ecx
call [ RegOpenKeyExW@IAT ]
mov esi [ RegCloseKey@IAT ]
test eax eax
je r-xdata
push [ esp + 0xc ]
call esi
push [ esp + 0x14 ]
call esi
sub_462ec7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
and [ esp + 0x4 ] 0x0
push ebx
push esi
push edi
push 0x8002
mov edi ecx
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x2c ]
call sub_404bce
lea ecx [ esp + 0x40 ]
mov [ esp + 0x20 ] 0x3fff
call sub_40d3d2
lea ecx [ esp + 0x30 ]
call sub_40d3d2
lea ecx [ esp + 0x50 ]
call sub_40d3d2
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
sub esp 0x10
mov ecx esp
push [ eax ]
call sub_40caee
lea eax [ esp + 0x60 ]
push eax
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x58 ]
push eax
call sub_463d7b
mov eax [ esp + 0x30 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x44 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x48 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4c ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_463af7
test al al
jne r-xdata
cmp [ esp + 0x44 ] 0x0
je r-xdata
push 0x0
push 0x2
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x48 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
mov eax [ ebx + 0x4 ]
push esi
lea ecx [ esp + 0x2c ]
push ecx
push esi
lea ecx [ esp + 0x30 ]
push ecx
push [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
dec eax
push eax
push [ esp + 0x30 ]
call [ RegEnumValueW@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
cmp [ esp + 0x10 ] esi
je r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
push 0x0
push 0x3
lea ecx [ esp + 0x50 ]
call sub_405cd3
lea ecx [ esp + 0x30 ]
call sub_405cd3
lea ecx [ esp + 0x40 ]
call sub_405cd3
lea ecx [ esp + 0x28 ]
call sub_404fd2
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x28 ]
push eax
call sub_44a6be
mov eax [ edi ]
push esi
mov ecx [ eax + 0x4 ]
push [ esp + 0x28 ]
add ecx edi
call sub_407ba9
mov eax [ edi ]
push esi
mov ecx [ eax + 0x4 ]
push 0xffffffff
add ecx edi
call sub_44d7e4
jmp r-xdata
push [ esp + 0x10 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x20 ]
or eax 0x20019
push eax
xor esi esi
push esi
push [ esp + 0x5c ]
push ecx
call [ RegOpenKeyExW@IAT ]
push esi
test eax eax
je r-xdata
push [ esp + 0x10 ]
call esi
push [ esp + 0x14 ]
mov esi [ RegCloseKey@IAT ]
call esi
cmp [ esp + 0x10 ] 0x0
je r-xdata
sub_4630ad
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
push r--data
mov ecx edi
call sub_40ca8e
lea ecx [ esp + 0x38 ]
call sub_40d3d2
lea ecx [ esp + 0x28 ]
call sub_40d3d2
lea ecx [ esp + 0x48 ]
call sub_40d3d2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
sub esp 0x10
mov eax [ edx ]
mov ecx esp
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x50 ]
push eax
call sub_463d7b
mov eax [ esp + 0x28 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x3c ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x40 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x44 ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_463af7
test al al
jne r-xdata
xor esi esi
mov [ esp + 0x14 ] esi
cmp [ esp + 0x3c ] esi
je r-xdata
push 0x0
push 0x2
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x40 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0xc ]
push ecx
xor esi esi
push esi
lea ecx [ esp + 0x24 ]
push ecx
push esi
push [ eax ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
push esi
test eax eax
je r-xdata
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
cmp [ esp + 0x14 ] esi
je r-xdata
mov ecx [ esp + 0x14 ]
jmp r-xdata
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
push esi
push 0x3
jmp r-xdata
lea ecx [ esp + 0x48 ]
call sub_405cd3
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea ecx [ esp + 0x38 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx ]
push [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
push esi
push 0xffffffff
jmp r-xdata
push esi
push 0x1
push [ esp + 0x14 ]
call [ RegCloseKey@IAT ]
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x24 ]
or eax 0x20019
push eax
push esi
push [ esp + 0x54 ]
push ecx
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push esi
push 0xfffffffe
push 0x2
pop edx
cmp eax edx
jbe r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
push [ esp + 0x14 ]
call esi
mov eax [ esp + 0xc ]
shr eax 0x1
xor ecx ecx
inc eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov [ esp + 0x24 ] eax
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov esi [ esp + 0x20 ]
lea eax [ esp + 0xc ]
push eax
push esi
xor eax eax
push eax
push eax
push [ ecx ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
cmp eax 0x3
je r-xdata
xor edi edi
push edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov eax [ ebx ]
push edi
mov ecx [ eax + 0x4 ]
push 0xfffffffe
add ecx ebx
call sub_44d7e4
mov eax [ esp + 0xc ]
shr eax 0x1
xor ecx ecx
mov [ esp + 0xc ] eax
mov [ esi + eax * 2 ] cx
push [ esp + 0xc ]
mov ecx edi
call sub_44ad14
mov edi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0xc ]
push eax
push edi
xor esi esi
push esi
push esi
push [ ecx ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
push 0x4
pop ecx
cmp eax ecx
je r-xdata
push [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
call esi
cmp [ esp + 0x14 ] 0x0
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x4 ]
push 0xfffffffe
add ecx ebx
call sub_44d7e4
mov ebx [ ebp + 0xc ]
mov ecx ebx
call sub_412570
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esi + 0x8 ]
xor ebx ebx
push ebx
push ebx
push [ eax ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
mov esi [ esp + 0x20 ]
mov ecx edi
call sub_412570
push 0x2
pop eax
mov [ edi + 0xc ] eax
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
jmp r-xdata
cmp eax 0x7
je r-xdata
mov eax [ esp + 0xc ]
shr eax 0x1
xor ecx ecx
add eax edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
mov [ esp + 0x24 ] eax
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov esi [ esp + 0x20 ]
lea eax [ esp + 0xc ]
push eax
push esi
xor eax eax
push eax
push eax
push [ ecx ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
cmp eax 0xb
jne r-xdata
mov eax [ esp + 0xc ]
shr eax 0x1
xor ecx ecx
mov [ esp + 0xc ] eax
mov [ esi + eax * 2 ] cx
mov eax [ esp + 0xc ]
cmp eax 0x1
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] 0x8
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esi + 0x8 ]
xor edi edi
push edi
push edi
push [ eax ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
mov ebx [ ebp + 0xc ]
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x24 ]
mov ecx ebx
call sub_412570
push 0x2
pop eax
mov [ ebx + 0xc ] eax
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
jmp r-xdata
push esi
mov ecx edi
call sub_40ca8e
jmp r-xdata
xor edx edx
cmp [ esi + eax * 2 - 0x2 ] dx
jne r-xdata
push 0xa
pop ebx
test eax eax
je r-xdata
dec eax
mov [ esp + 0xc ] eax
cmp [ esi + ecx * 2 - 0x2 ] bx
jne r-xdata
cmp [ esi + ecx * 2 ] dx
jne r-xdata
xor eax eax
mov [ esi + ecx * 2 - 0x2 ] ax
jmp r-xdata
inc ecx
cmp ecx eax
jb r-xdata
mov [ esi + ecx * 2 ] bx
mov eax [ esp + 0xc ]
sub_46352a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
and [ esp + 0x4 ] 0x0
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ esp + 0x40 ]
mov [ esp + 0x14 ] ebx
call sub_40d3d2
lea ecx [ esp + 0x30 ]
call sub_40d3d2
lea ecx [ esp + 0x50 ]
call sub_40d3d2
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
cmp eax 0x1
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
sub esp 0x10
mov eax [ edx ]
mov ecx esp
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x60 ]
push eax
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x58 ]
push eax
call sub_463d7b
mov eax [ esp + 0x30 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x44 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x48 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4c ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_463af7
test al al
jne r-xdata
cmp eax 0x4
jne r-xdata
cmp [ esp + 0x44 ] 0x0
je r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx ebx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x48 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_405cd3
lea ecx [ esp + 0x30 ]
call sub_405cd3
lea ecx [ esp + 0x40 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x20 ] 0x1
jbe r-xdata
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov eax [ ebx ]
xor edi edi
mov ecx [ eax + 0x4 ]
push esi
inc edi
push edi
add ecx ebx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
cmp [ esp + 0x10 ] 0x0
mov [ esi + 0xc ] edi
je r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
xor edi edi
push edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov eax [ ebx ]
push edi
mov ecx [ eax + 0x4 ]
push 0x3
add ecx ebx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
push [ esp + 0xc ]
mov esi [ RegCloseKey@IAT ]
call esi
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_421bc7
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
push [ esp + 0x10 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x24 ]
xor esi esi
push esi
or eax 0x20006
push eax
push esi
push r--data
push esi
push [ esp + 0x6c ]
push ecx
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
push [ esp + 0x10 ]
call esi
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_421bc7
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_4218fb
lea ebx [ eax * 2 + 0x2 ]
mov eax [ edi + 0x4 ]
pop ecx
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push ebx
push edi
push 0x2
xor ebx ebx
push ebx
push [ eax ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_421bc7
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_4218fb
lea ebx [ eax * 2 + 0x2 ]
mov eax [ edi + 0x4 ]
pop ecx
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push ebx
push edi
xor edi edi
inc edi
push edi
xor ebx ebx
push ebx
push [ eax ]
push [ esp + 0x20 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
push ebx
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_407ba9
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] ebx
jmp r-xdata
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_421bc7
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor ecx ecx
mov eax [ eax + 0x4 ]
mov [ esp + 0x14 ] eax
add eax 0x2
push 0x2
pop edx
mov [ esp + 0x20 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov ecx [ edi + 0x4 ]
mov [ esp + 0x18 ] eax
mov esi [ ecx + 0xc ]
mov ecx esi
call sub_4084a6
mov ecx [ esp + 0x14 ]
mov edx [ esi + 0x8 ]
mov esi [ esp + 0x18 ]
mov edx [ edx ]
inc ecx
push ecx
mov ecx esi
call sub_403b1e
pop ecx
mov ecx [ esp + 0x14 ]
xor eax eax
mov [ esi + ecx * 2 ] eax
test ecx ecx
je r-xdata
mov edx [ esp + 0x14 ]
push ebx
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_407ba9
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] edi
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0xc ] 0x1
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_421bc7
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push 0x4
lea ecx [ esp + 0x24 ]
push ecx
push 0x4
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ esp + 0x18 ]
mov ecx [ eax ]
mov eax [ esp + 0x14 ]
add eax eax
push eax
push edi
push 0x7
push 0x0
push ecx
push [ esp + 0x20 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
cmp [ esi + eax * 2 ] 0xa
jne r-xdata
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_421bc7
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ eax + 0xc ]
call sub_40d00b
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x24 ] edx
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push 0x8
lea ecx [ esp + 0x24 ]
push ecx
push 0xb
jmp r-xdata
push edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
jmp r-xdata
push edi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
push 0x0
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_407ba9
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
inc eax
cmp eax ecx
jb r-xdata
xor edx edx
mov [ esi + eax * 2 ] dx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_44be47
mov edx [ edi + 0x4 ]
mov ebx eax
mov esi [ edx + 0x4 ]
mov edi [ edx + 0xc ]
mov ecx esi
call sub_4084a6
mov edx [ esi + 0x8 ]
mov ecx edi
call sub_44be8a
push eax
push ebx
push 0x3
xor ebx ebx
push ebx
push [ edx ]
jmp r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
push edi
push [ eax ]
push [ esp + 0x20 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
test ecx ecx
je r-xdata
push [ esp + 0x20 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
sub_463acc
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_463af7
push ebp
mov ebp esp
sub esp 0x14
lea ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
call sub_40b8a7
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call [ CharUpperBuffW@IAT ]
mov esi [ ebp + 0xc ]
push ecx
and [ esi ] 0x0
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_463e59
mov edi r--data
mov edx edi
mov ecx eax
call sub_41f885
lea ecx [ ebp - 0x10 ]
mov bl al
call sub_405cd3
test bl bl
je r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
push edi
lea ecx [ ebp + 0x10 ]
call sub_41e617
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000002
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov [ esi ] 0x100
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000000
jmp r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov bl 0x1
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000005
jmp r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000001
jmp r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000003
jmp r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_41f885
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
lea ecx [ ebp + 0x10 ]
call sub_405cd3
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x18
sub_463c63
push ebp
mov ebp esp
sub esp 0x228
push ebx
push esi
mov esi ecx
xor ecx ecx
lea eax [ ebp - 0x24 ]
push eax
push ecx
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x228 ]
push eax
push ecx
mov ebx edx
push esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] 0xff
call [ RegEnumKeyExW@IAT ]
cmp eax 0x103
je r-xdata
mov al 0x1
mov eax ebx
or eax 0x20019
mov [ ebp - 0x1c ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ebx
call sub_463c63
push [ ebp - 0x8 ]
mov bl al
call [ RegCloseKey@IAT ]
test bl bl
je r-xdata
pop esi
pop ebx
leave
retn
xor ebx ebx
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] ebx
call sub_463aba
test al al
lea eax [ ebp - 0x228 ]
je r-xdata
push eax
push esi
call [ RegDeleteKeyW@IAT ]
mov ebx [ ebp - 0xc ]
push ebx
mov ebx [ ebp - 0xc ]
push ebx
push eax
push esi
lea ecx [ ebp - 0x18 ]
call sub_4629ed
call eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] eax
je r-xdata
test eax eax
jne r-xdata
push [ ebp - 0x18 ]
call [ FreeLibrary@IAT ]
xor ecx ecx
lea eax [ ebp - 0x24 ]
push eax
push ecx
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x228 ]
push eax
push ecx
push esi
mov [ ebp - 0x4 ] 0xff
call [ RegEnumKeyExW@IAT ]
cmp eax 0x103
mov eax [ ebp - 0x1c ]
jne r-xdata
push [ ebp - 0x18 ]
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push 0x0
lea eax [ ebp - 0x228 ]
push eax
push esi
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
sub_463d7b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
call sub_40c4cd
mov ecx [ ebp + 0xc ]
call sub_40c4cd
mov ecx [ ebp + 0x10 ]
call sub_40c4cd
xor edi edi
cmp [ ebp + 0x18 ] 0x2
mov ebx r--data
jb r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40c4cd
push edi
lea ecx [ ebp + 0x14 ]
call sub_40a4f6
push 0x5c
pop esi
cmp [ eax ] si
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
push edi
lea eax [ ebp + 0x14 ]
push eax
call sub_407f40
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
sub eax esi
dec eax
push eax
lea eax [ esi + 0x1 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
call sub_407f40
mov ecx [ ebp + 0x10 ]
push ebx
call sub_41e617
lea ecx [ ebp + 0x14 ]
call sub_405cd3
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov esi [ ebp + 0x18 ]
push 0x1
lea ecx [ ebp + 0x14 ]
call sub_40a4f6
cmp [ eax ] si
jne r-xdata
push 0x2
push edi
lea ecx [ ebp + 0x14 ]
call sub_40a2fb
push ebx
lea ecx [ ebp + 0x14 ]
call sub_452628
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push edi
lea eax [ ebp + 0x14 ]
push eax
call sub_407f40
lea eax [ esi + 0x1 ]
push eax
push edi
lea ecx [ ebp + 0x14 ]
call sub_40a2fb
jmp r-xdata
mov esi [ ebp + 0x18 ]
push ebx
lea ecx [ ebp + 0x14 ]
call sub_452628
mov esi eax
cmp esi 0xffffffff
jne r-xdata
sub_463e59
push ebp
mov ebp esp
push esi
push edi
push 0x2
mov edi ecx
pop esi
cmp [ edi + 0x4 ] esi
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40d3d2
mov ecx [ edi + 0x4 ]
push esi
sub ecx esi
push ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_407f40
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
mov esi [ edi + 0x4 ]
sub_463e8c
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
push r--data
mov ecx ebx
call sub_40ca8e
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
jbe r-xdata
mov [ ebp + 0xf ] 0x0
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
call sub_41e3ee
mov [ ebp + 0xf ] al
jmp r-xdata
mov [ ebp + 0xb ] 0x0
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_41e3ee
mov [ ebp + 0xb ] al
jmp r-xdata
xor esi esi
inc esi
cmp [ edx + 0x8 ] esi
jbe r-xdata
push 0x0
push 0x2
call sub_449c3b
mov ecx [ edi + 0x494 ]
test al al
je r-xdata
mov ecx [ edi + 0x494 ]
test ecx ecx
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
and [ edi + 0x494 ] 0x0
push 0x0
push esi
jmp r-xdata
mov eax [ ecx ]
push esi
call [ eax ]
push ebx
call sub_449c73
mov esi eax
mov [ ebp + 0xc ] eax
push esi
push ebx
call sub_449bee
mov esi eax
mov [ ebp + 0xc ] esi
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
mov eax [ edi ]
push 0x0
mov ecx [ eax + 0x4 ]
push [ ebp + 0xc ]
add ecx edi
call sub_407ba9
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
mov ecx ebx
call sub_44be47
mov edx esi
mov ecx eax
call sub_448553
push [ ebp + 0xc ]
mov esi eax
push 0x0
push esi
lea ecx [ ebp - 0x10 ]
call sub_4080ea
push esi
call j_sub_4228ca#2
pop ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
cmp [ ebp + 0xb ] 0x0
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_463fc5
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
lea ecx [ edi + 0x488 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
mov [ ebp - 0x14 ] ecx
test eax eax
jns r-xdata
push ecx
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
fstp [ esp ]
push ecx
push eax
call sub_46418b
push ecx
mov eax esp
xor ebx ebx
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
mov [ eax ] ebx
call sub_402e2a
test al al
je r-xdata
fadd [ r--data ]
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x2
add ecx edi
call sub_44d7e4
mov edx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x1
mov ecx [ esi ]
jbe r-xdata
add ecx 0x18
call sub_449cce
call sub_44a112
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_464359
jmp r-xdata
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edi
call sub_44d7e4
jmp r-xdata
mov eax [ edx + 0x4 ]
push 0xb
mov edi [ eax + 0x4 ]
mov ecx edi
call sub_40d2c0
mov ecx edi
test al al
je r-xdata
mov ecx [ esi ]
call sub_449d53
test al al
jne r-xdata
call sub_4084a6
mov eax [ edi + 0x8 ]
or edx 0xffffffff
mov ecx [ eax ]
call sub_448932
mov ebx eax
push ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
call sub_4223f0
pop ecx
call sub_44be47
mov ecx [ ebp + 0x8 ]
mov ebx eax
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0xc ] ebx
mov ecx [ ecx + 0x4 ]
call sub_44be8a
jmp r-xdata
push [ ebp - 0xc ]
call j_sub_4228ca#2
pop ecx
jmp r-xdata
mov ecx [ esi ]
push eax
push ebx
call sub_44a0ba
mov edi [ ebp + 0xc ]
mov ecx edi
mov ebx eax
call sub_412570
cmp [ ebp - 0x8 ] 0x0
mov [ edi + 0xc ] 0x1
mov [ edi ] ebx
je r-xdata
sub_46410e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
lea esi [ ecx + 0x488 ]
mov ecx [ eax ]
call sub_412620
push ecx
push ecx
lea eax [ ebp + 0x8 ]
fstp [ esp ]
push esi
push eax
call sub_46418b
push ecx
mov eax esp
lea ecx [ ebp + 0x8 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_464359
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
sub_46418b
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fld [ ebp + 0x10 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fadd [ r--data ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + 0xc ]
call sub_468b5a
mov esi [ ebp + 0xc ]
jmp r-xdata
pop esi
leave
retn 0x10
push ecx
mov eax esp
lea ecx [ ebp + 0xc ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
sub_4641f9
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_412620
fstp [ ebp - 0xc ]
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov [ ebp + 0xb ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_41e3ee
mov [ ebp + 0xb ] al
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_41e3ee
mov [ ebp - 0x1 ] al
jmp r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x2
add ecx ebx
call sub_44d7e4
mov esi [ ebp - 0x8 ]
mov ecx [ esi ]
call [ ebp + 0x18 ]
test al al
je r-xdata
fld [ ebp - 0xc ]
push ecx
push ecx
lea edi [ ebx + 0x488 ]
fstp [ esp ]
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x10 ] edi
call sub_46418b
push ecx
mov eax esp
lea ecx [ ebp - 0x8 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
cmp [ ebp + 0xb ] 0x0
mov ecx [ esi ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_464359
jmp r-xdata
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
mov edi eax
mov [ ebp + 0x8 ] eax
push 0x1
push [ ebp + 0xc ]
call [ ebp + 0x10 ]
mov edi eax
mov [ ebp + 0x8 ] edi
jmp r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx ebx
call sub_407ba9
mov edi [ ebp - 0x10 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_40d3d2
mov ecx [ ebp + 0xc ]
call sub_44be47
mov edx edi
mov ecx eax
call sub_448553
push [ ebp + 0x8 ]
mov edi eax
push 0x0
push edi
lea ecx [ ebp - 0x20 ]
call sub_4080ea
push edi
call j_sub_4228ca#2
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x20 ]
call sub_405cd3
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov ecx [ esi ]
call sub_449d53
test al al
jne r-xdata
sub_464359
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_44d307
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_464399
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4465e2
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
cmp ecx [ esi + 0x4 ]
jae r-xdata
add eax [ esi + 0x4 ]
add eax ecx
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4643ba
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_44be47
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_44be8a
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4643f3
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_44be47
mov edx [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
mov ecx [ edx ]
call sub_44be8a
mov ecx [ edx + 0x4 ]
mov ebx eax
or esi 0xffffffff
call sub_40cdb4
lea edi [ eax - 0x1 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jbe r-xdata
cmp edi ebx
jg r-xdata
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40cdb4
mov esi eax
mov edi ebx
test edi edi
jns r-xdata
mov esi ebx
sub esi edi
mov eax ebx
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
js r-xdata
mov ecx [ ebp + 0xc ]
push esi
call sub_44ad14
mov ecx [ ebp - 0x4 ]
push esi
add ecx edi
push ecx
push eax
call sub_41faa0
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_464476
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov [ esp + 0xc ] esi
call sub_44be47
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
call sub_44be8a
mov edi eax
test edi edi
jne r-xdata
push 0x2
pop ecx
cmp [ edx + 0x8 ] ecx
jb r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov eax [ esi ]
push edi
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
xor esi esi
inc esi
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
push 0x2
mov esi eax
pop ecx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor esi esi
inc esi
cmp esi 0x4
jle r-xdata
cmp esi 0x1
jl r-xdata
mov eax edi
cdq
idiv ecx
test edx edx
je r-xdata
cmp esi 0x3
jne r-xdata
cmp esi ecx
je r-xdata
cmp esi 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov edx [ esp + 0xc ]
push 0x0
mov eax [ edx ]
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edx
jmp r-xdata
push edi
lea ecx [ esp + 0x24 ]
call sub_44a65e
push edi
push ecx
push ebx
lea ecx [ esp + 0x2c ]
call sub_41f2d0
push edi
lea ecx [ esp + 0x14 ]
call sub_407b6e
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x24 ]
push eax
cmp esi 0x1
jne r-xdata
cmp esi 0x4
je r-xdata
call sub_44d7e4
jmp r-xdata
call sub_446765
call sub_40c610
jmp r-xdata
cmp esi ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
call sub_407bef
lea ecx [ esp + 0x10 ]
call sub_405cd3
lea ecx [ esp + 0x20 ]
call sub_405cd3
push edi
call sub_42010a
pop ecx
mov edx eax
xor ecx ecx
mov [ esp + 0xc ] edx
test edi edi
jle r-xdata
mov eax edi
cdq
sub eax edx
mov esi eax
sar esi 0x1
push esi
lea ecx [ esp + 0x24 ]
call sub_407b6e
lea ecx [ esp + 0x20 ]
push esi
push 0x0
push ebx
call sub_4080ea
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_407bef
mov eax edi
cdq
sub eax edx
mov esi eax
sar esi 0x1
push esi
lea ecx [ esp + 0x24 ]
call sub_407b6e
lea ecx [ esp + 0x20 ]
push esi
mov esi [ esp + 0x10 ]
push 0x0
push esi
call sub_4080ea
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_407bef
push esi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
mov esi edx
sub esi ebx
lea ecx [ esp + 0x20 ]
call sub_405cd3
jmp r-xdata
mov al [ ebx + 0x1 ]
mov [ esi + ebx ] al
mov al [ ebx ]
mov [ edx + ecx + 0x1 ] al
add ecx 0x2
lea ebx [ ebx + 0x2 ]
cmp ecx edi
jl r-xdata
sub_464642
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x8 ]
inc [ eax ]
mov [ esp + 0x14 ] eax
call sub_446963
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_407bef
lea ecx [ esp + 0x8 ]
call sub_405cd3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4646a3
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ edi + 0x4 ]
mov ebx [ esi + 0x8 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
xor eax eax
cmp [ edi + 0x8 ] 0x3
jb r-xdata
push eax
push esi
mov ecx ebx
call sub_41dfb6
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
test eax eax
js r-xdata
xor eax eax
cmp eax 0x3
jle r-xdata
push esi
mov ecx ebx
call sub_40b933
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_46471f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov ebx [ ebp + 0x8 ]
push 0x5
mov edi [ ebx + 0x4 ]
mov ecx [ edi ]
call sub_40d2c0
test al al
je r-xdata
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
xor esi esi
inc esi
cmp [ ebx + 0x8 ] 0x2
jbe r-xdata
mov ecx [ edi ]
push esi
call sub_40218e
mov ecx [ edi + 0x8 ]
call sub_40cdb4
jmp r-xdata
mov edx [ ebx + 0x4 ]
push esi
mov ecx [ edx ]
call sub_40218e
cmp edi eax
jbe r-xdata
mov ecx [ ebx + 0x4 ]
push esi
mov ecx [ ecx ]
call sub_40218e
mov edi eax
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ ebx + 0x8 ] esi
jbe r-xdata
mov ecx [ edx ]
push esi
call sub_40218e
mov edi eax
xor esi esi
mov ecx [ edx + 0x4 ]
call sub_40cdb4
mov esi eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
cmp [ ebx + 0x8 ] 0x3
jbe r-xdata
cmp esi edi
ja r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
jmp r-xdata
mov eax edi
sub eax esi
mov [ ebp - 0x8 ] eax
inc eax
push eax
call sub_42010a
pop ecx
xor ecx ecx
mov [ ebp - 0x4 ] eax
cmp esi edi
jae r-xdata
cmp eax 0x2
je r-xdata
mov [ ebp + 0x8 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x1
mov [ ecx + eax ] 0x0
mov ecx eax
jne r-xdata
sub eax esi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x1c ]
call sub_40d3d2
jmp r-xdata
call sub_448993
or edx 0xffffffff
call sub_448553
jmp r-xdata
mov eax [ ebx + 0x4 ]
push esi
push 0x1
push 0x0
push [ eax ]
call sub_4114a0
add esp 0x10
mov ecx eax
call sub_40cdb4
mov ecx [ ebp - 0xc ]
mov [ ecx + esi ] al
inc esi
cmp esi edi
jb r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
cmp esi edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov esi eax
push esi
call sub_40ca8e
push [ ebp - 0x4 ]
call j_sub_4228ca#2
push esi
call j_sub_4228ca#2
pop ecx
pop ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
push esi
push 0x1
push 0x0
push [ eax ]
call sub_4114a0
add esp 0x10
mov ecx eax
call sub_40cdb4
push eax
lea ecx [ ebp - 0x1c ]
call sub_40bd2f
inc esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_407bef
lea ecx [ ebp - 0x1c ]
call sub_405cd3
jmp r-xdata
sub_4648bb
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x18 ] 0x0
or eax 0xffffffff
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
mov ecx esi
mov [ ebp - 0xc ] 0x1
xor ebx ebx
call sub_4084a6
mov eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x8 ]
dec eax
dec eax
je r-xdata
push [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
push [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
push [ eax + 0x4 ]
mov ecx esi
push [ ebp - 0xc ]
push ebx
push [ eax ]
call sub_45267a
mov ebx eax
jmp r-xdata
dec eax
je r-xdata
cmp ebx [ esi + 0x4 ]
mov esi [ ebp + 0xc ]
mov ecx esi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov ebx eax
test ebx ebx
js r-xdata
dec eax
je r-xdata
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
lea eax [ ebx + 0x1 ]
mov [ esi ] eax
call sub_412570
xor eax eax
inc eax
and [ esi ] 0x0
mov [ esi + 0xc ] eax
jmp r-xdata
xor ebx ebx
cmp ebx 0x3
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] ebx
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
dec eax
mov [ ebp - 0x8 ] eax
js r-xdata
dec eax
jne r-xdata
mov ebx [ ebp - 0x18 ]
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
sub_4649f1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call sub_4222cd
pop ecx
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_464a51
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ IsCharAlphaNumericW@IAT ]
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_464ab1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ IsCharAlphaW@IAT ]
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_464b11
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call sub_4222df
pop ecx
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_464b71
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
push [ eax ]
call sub_465683
mov esi [ ebp + 0xc ]
mov ecx esi
movzx edi al
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_464ba1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
push [ eax ]
call sub_46577d
mov esi [ ebp + 0xc ]
mov ecx esi
movzx edi al
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_464bd1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ IsCharLowerW@IAT ]
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_464c31
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx eax
call sub_41dd62
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_464c91
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ IsCharUpperW@IAT ]
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_464cf1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call sub_422301
pop ecx
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_464d51
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
call sub_40d3d2
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov edi eax
test edi edi
js r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
cmp edi esi
jle r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push edi
push 0x0
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f40
mov edi esi
sub_464dc5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax + 0x4 ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_464dfa
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
inc [ eax ]
mov [ ebp - 0x4 ] eax
call sub_40b8a7
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharLowerBuffW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
xor eax eax
pop esi
leave
retn 0x8
sub_464e5b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x24 ] ebx
call sub_40d3d2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov edi [ esi + 0x8 ]
lea ecx [ esp + 0x28 ]
push [ edi + 0x4 ]
call sub_407b6e
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0xc ] eax
call sub_40d16a
mov ecx [ esp + 0xc ]
test al al
je r-xdata
call sub_4084a6
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
call sub_40cdb4
mov esi eax
dec esi
js r-xdata
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x4
jb r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov ecx [ ecx + 0x4 ]
add ecx esi
cmp ecx [ edi + 0x4 ]
ja r-xdata
xor eax eax
cmp [ esi + 0x8 ] 0x5
mov [ esp + 0xc ] eax
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov ebx eax
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea ecx [ esp + 0x38 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push 0x0
push edi
lea ecx [ esp + 0x34 ]
call sub_407f40
mov ebx [ esp + 0x10 ]
push ebx
lea ecx [ esp + 0x2c ]
call sub_407b4b
mov ecx [ ebx + 0x4 ]
mov eax [ edi + 0x4 ]
sub eax ecx
sub eax esi
push eax
lea eax [ ecx + esi ]
push eax
push edi
lea ecx [ esp + 0x44 ]
call sub_407f40
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407b4b
jmp r-xdata
test ebx ebx
jns r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40cdb4
mov [ esp + 0xc ] eax
test eax eax
js r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x28 ]
push eax
call sub_407bef
xor esi esi
push 0x7fffffff
push 0xffffffff
push [ esp + 0x1c ]
mov ecx edi
push ebx
push eax
push [ esp + 0x30 ]
call sub_45267a
mov esi eax
test esi esi
jns r-xdata
xor eax eax
mov [ esp + 0xc ] eax
cmp eax 0x3
jle r-xdata
mov eax [ esp + 0x20 ]
sub esi eax
push esi
push eax
mov ecx [ esp + 0x20 ]
sub eax ecx
push eax
push ecx
push edi
lea ecx [ esp + 0x44 ]
call sub_407f40
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407b4b
push [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
call sub_407b4b
mov eax [ esp + 0x18 ]
add esi [ esp + 0x14 ]
inc eax
mov [ esp + 0x18 ] eax
test ebx ebx
je r-xdata
push esi
push 0x0
push edi
lea ecx [ esp + 0x34 ]
call sub_407f40
mov ebx esi
neg ebx
xor esi esi
jmp r-xdata
push 0xffffffff
push esi
push [ esp + 0x1c ]
mov ecx edi
push 0x1
push [ esp + 0x1c ]
mov [ esp + 0x34 ] esi
push [ esp + 0x30 ]
call sub_45267a
mov esi eax
cmp esi [ edi + 0x4 ]
je r-xdata
cmp eax ebx
jne r-xdata
xor eax eax
mov [ esp + 0x18 ] eax
neg ebx
jmp r-xdata
mov eax [ edi + 0x4 ]
sub eax esi
push eax
push esi
jmp r-xdata
push edi
lea ecx [ esp + 0x44 ]
call sub_407f40
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407b4b
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
push 0x0
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_407ba9
sub_4650cd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x80
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
lea ecx [ esp + 0x20 ]
push [ esi + 0x4 ]
call sub_407b6e
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
lea ecx [ esp + 0x40 ]
call sub_407d70
push r--data
lea ecx [ esp + 0x34 ]
call sub_40caee
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_405be9
lea ecx [ esp + 0x30 ]
call sub_405cd3
push esi
lea ecx [ esp + 0x44 ]
call sub_407e36
xor esi esi
lea ecx [ esp + 0x30 ]
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
call sub_40d3d2
mov [ esp + 0xc ] esi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
cmp eax 0x1
jne r-xdata
mov esi [ esp + 0x18 ]
dec esi
js r-xdata
lea eax [ esp + 0x30 ]
push eax
push esi
lea ecx [ esp + 0x48 ]
call sub_442d53
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_405b47
jmp r-xdata
push esi
lea ecx [ esp + 0x24 ]
call sub_40c935
lea ecx [ esp + 0x20 ]
call sub_46580c
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_405cd3
lea ecx [ esp + 0x10 ]
call sub_407da8
lea ecx [ esp + 0x40 ]
call sub_405cbb
mov edi [ esp + 0x14 ]
push 0x1
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_41de96
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_407bef
lea ecx [ esp + 0x20 ]
call sub_405cd3
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push [ edi + esi * 4 ]
lea ecx [ esp + 0x24 ]
call sub_407b4b
dec esi
jns r-xdata
sub_46520a
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
push edi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
mov edi [ eax + 0x4 ]
call sub_40d3d2
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov ebx eax
test ebx ebx
js r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
cmp ebx edi
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push ebx
sub edi ebx
push edi
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f40
mov ebx edi
sub_465282
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x8 ]
inc [ eax ]
mov [ esp + 0x14 ] eax
call sub_448498
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_407bef
lea ecx [ esp + 0x8 ]
call sub_405cd3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4652e3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
push r--data
call sub_40ca8e
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
cmp [ edi + 0x8 ] 0x2
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
jbe r-xdata
mov ebx [ eax + 0x4 ]
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov ebx [ eax + 0x4 ]
mov eax [ esp + 0xc ]
mov ecx esi
call sub_40cdb4
mov ebx eax
mov eax [ esp + 0xc ]
jmp r-xdata
xor esi esi
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
cmp ebx [ eax + 0x4 ]
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jne r-xdata
mov ecx esi
call sub_40cdb4
mov esi eax
jmp r-xdata
sub ebx esi
push ebx
lea ecx [ esp + 0x24 ]
call sub_407b6e
push ebx
push esi
push [ esp + 0x14 ]
lea ecx [ esp + 0x2c ]
call sub_407f40
cmp [ edi + 0x8 ] 0x3
jbe r-xdata
inc ebx
cmp esi ebx
ja r-xdata
xor esi esi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40cdb4
mov esi eax
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_40a6d4
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x24 ]
push eax
cmp esi 0x1
jne r-xdata
cmp esi 0x2
je r-xdata
cmp esi 0x1
je r-xdata
call sub_4466f8
call sub_45ae79
jmp r-xdata
push ebx
push 0x1
push [ ebp + 0xc ]
call sub_403320
xor esi esi
add esp 0xc
mov [ esp + 0xc ] esi
test ebx ebx
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_405cd3
push esi
push 0x1
push 0x0
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x10
lea ecx [ esp + 0x10 ]
push esi
mov edi eax
call sub_464399
movzx esi [ eax ]
mov ecx edi
call sub_412570
mov [ edi ] esi
mov esi [ esp + 0xc ]
inc esi
mov [ edi + 0xc ] 0x1
mov [ esp + 0xc ] esi
cmp esi ebx
jb r-xdata
mov ebx [ esp + 0x14 ]
push ebx
push 0x1
push [ ebp + 0xc ]
call sub_403320
xor esi esi
add esp 0xc
mov [ esp + 0xc ] esi
test ebx ebx
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_405cd3
push esi
push 0x1
push 0x0
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x10
lea ecx [ esp + 0x20 ]
push esi
mov edi eax
call sub_40a4f6
movzx esi [ eax ]
mov ecx edi
call sub_412570
mov [ edi ] esi
mov esi [ esp + 0xc ]
inc esi
mov [ edi + 0xc ] 0x1
mov [ esp + 0xc ] esi
cmp esi ebx
jb r-xdata
jmp r-xdata
sub_4654ac
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
push edi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
jb r-xdata
mov ecx [ ebp + 0xc ]
push eax
call sub_44ad14
jmp r-xdata
xor esi esi
inc esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov esi eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
xor esi esi
inc esi
cmp esi 0x4
jle r-xdata
cmp esi 0x1
jl r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40a6d4
lea eax [ ebp - 0x10 ]
push eax
push edi
cmp esi 0x1
jne r-xdata
cmp esi 0x4
je r-xdata
cmp esi 0x1
je r-xdata
call sub_4466f8
call sub_45ae79
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp esi 0x2
jne r-xdata
push [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
call sub_44ad14
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push eax
call sub_41faa0
add esp 0xc
lea ecx [ ebp - 0x10 ]
call sub_405cd3
lea ebx [ eax + eax ]
push ebx
call sub_44ad14
mov ecx [ edi ]
xor edx edx
mov [ ebp + 0xc ] eax
test ebx ebx
je r-xdata
lea esi [ eax + eax ]
push esi
call sub_44ad14
push esi
push [ edi ]
push eax
call sub_41faa0
add esp 0xc
jmp r-xdata
mov esi eax
sub esi ecx
mov edi eax
mov al [ ecx + 0x1 ]
mov [ esi + ecx ] al
mov al [ ecx ]
mov [ edi + edx + 0x1 ] al
add edx 0x2
lea ecx [ ecx + 0x2 ]
cmp edx ebx
jb r-xdata
jmp r-xdata
sub_4655ab
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
push edi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov edi [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
test eax eax
jns r-xdata
cmp eax edi
jle r-xdata
xor eax eax
sub edi eax
push edi
lea ecx [ ebp - 0x10 ]
call sub_407b6e
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push edi
push 0x0
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407f40
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov eax edi
sub_465622
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
inc [ eax ]
mov [ ebp - 0x4 ] eax
call sub_40b8a7
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407bef
lea ecx [ ebp - 0x10 ]
call sub_405cd3
xor eax eax
pop esi
leave
retn 0x8
sub_465683
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor ebx ebx
mov esi [ eax ]
inc ebx
mov edi ebx
test esi esi
je r-xdata
xor al al
xor eax eax
cmp [ esi ] ax
je r-xdata
push r--data
push esi
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
cmp [ esi ] ax
je r-xdata
mov ebx eax
push 0x2e
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
movzx eax [ esi ]
cmp eax 0x2b
je r-xdata
dec eax
je r-xdata
add esi 0x2
cmp eax 0x2d
je r-xdata
movzx eax [ esi ]
push eax
call sub_4222df
pop ecx
push 0x2e
pop ecx
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax edi
dec eax
je r-xdata
cmp edi 0x4
je r-xdata
cmp eax ecx
je r-xdata
cmp [ esi ] cx
jne r-xdata
add esi 0x2
jmp r-xdata
add esi 0x2
push 0x4
jmp r-xdata
dec eax
jne r-xdata
mov al bl
jmp r-xdata
push 0x3
jmp r-xdata
add eax 0xffffffd0
cmp eax 0x9
jbe r-xdata
xor eax eax
cmp [ esi ] ax
jne r-xdata
pop edi
movzx eax [ esi ]
push eax
call sub_4222df
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x2e
add esi 0x2
pop ecx
jmp r-xdata
sub_46577d
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
xor edi edi
mov esi [ eax ]
inc edi
test esi esi
je r-xdata
xor al al
xor ebx ebx
cmp [ esi ] bx
je r-xdata
push r--data
push esi
call sub_422203
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_422203
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ esi ] bx
jne r-xdata
mov eax edi
dec eax
je r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ esi ]
cmp eax 0x2b
je r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
add esi 0x2
cmp eax 0x2d
je r-xdata
movzx eax [ esi ]
push eax
call sub_422952
pop ecx
test eax eax
je r-xdata
add eax 0xffffffd0
cmp eax 0x9
ja r-xdata
add esi 0x2
jmp r-xdata
jmp r-xdata
push 0x2
pop edi
sub_46580c
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
retn
mov edx [ ecx ]
push esi
lea esi [ eax - 0x1 ]
lea esi [ edx + esi * 2 ]
jmp r-xdata
cmp esi edx
ja r-xdata
movzx ecx [ edx ]
mov ax [ esi ]
mov [ edx ] ax
add edx 0x2
mov [ esi ] cx
sub esi 0x2
pop esi
sub_46585e
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_40d3d2
cmp [ rw-data ] 0x1
je r-xdata
and [ ebp - 0x14 ] 0x0
push r--data
lea ecx [ ebp - 0x10 ]
call sub_407e53
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
call sub_4456dc
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
call sub_405cd3
xor eax eax
pop esi
leave
retn 0x8
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
cmp [ rw-data ] 0x1
jne r-xdata
sub_4658d9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax ]
call sub_40cdb4
push eax
mov ecx rw-data
call sub_445a25
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_465913
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov eax [ eax + 0x4 ]
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_445c80
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx esi
call sub_412570
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
sub_465960
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_445b75
test eax eax
je r-xdata
xor eax eax
leave
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
call j_sub_4228ca#2
pop ecx
pop esi
sub_4659aa
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi ecx
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_445b75
test eax eax
je r-xdata
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40ca8e
push [ ebp + 0x8 ]
call j_sub_4228ca#2
pop ecx
jmp r-xdata
xor eax eax
pop esi
leave
retn 0x8
sub_465a0a
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov [ ebp - 0x4 ] ecx
xor edi edi
push 0xe
mov ecx esi
mov [ ebp - 0x8 ] edi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x1c ] eax
inc [ eax ]
lea ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x28 ]
and ebx 0xfffffffd
call sub_405cd3
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0xc ] eax
inc [ eax ]
test bl 0x2
je r-xdata
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_41cf79
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_405cd3
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_445f91
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] edi
xor esi esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor eax eax
inc eax
push edi
mov [ esi + 0xc ] eax
mov [ esi ] edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405cd3
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
sub_465b15
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_40cdb4
push eax
push r--data
mov ecx esi
call sub_40cdb4
push eax
call sub_445d65
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_465b5a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push 0xffffffff
mov ecx [ eax ]
mov eax [ edi + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_445d65
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_465ba4
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x9
cmp [ ecx + 0x8 ] 0x0
pop eax
jbe r-xdata
mov [ rw-data ] eax
xor eax eax
pop ebp
retn 0x8
mov eax [ ecx + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
test eax eax
js r-xdata
push 0x9
pop eax
cmp eax 0x7f
jle r-xdata
sub_465bd4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x8 ]
and [ rw-data ] 0x0
push r--data
mov ecx rw-data
call sub_407e53
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx rw-data
call sub_40c935
pop esi
mov ecx rw-data
call sub_403598
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov ecx eax
call sub_447b84
mov [ rw-data ] eax
sub_465c42
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
push ebx
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi ecx
push 0xe
mov ecx esi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
push 0x2
pop ebx
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
inc [ eax ]
lea ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x34 ]
xor ebx ebx
push eax
inc ebx
call sub_44afce
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x24 ]
and ebx 0xfffffffd
call sub_405cd3
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_41cf79
test eax eax
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405cd3
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_40cdb4
push eax
call sub_446304
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] edi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cd3
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_465d45
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x8 ]
and [ rw-data ] 0x0
push r--data
mov ecx rw-data
call sub_407e53
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx rw-data
call sub_40c935
pop esi
mov ecx rw-data
call sub_44632e
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40cdb4
mov ecx eax
call sub_447b84
mov [ rw-data ] eax
sub_465db3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
push ecx
call sub_446387
pop ebp
retn 0x8
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov ecx eax
sub_465dd8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov edx ecx
je r-xdata
mov eax [ edx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx edx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
push r--data
mov ecx rw-data
call sub_407e53
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push 0x80
push 0x0
push [ esi + 0x8 ]
mov ecx rw-data
call sub_407f40
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx rw-data
call sub_4038e4
jmp r-xdata
sub_465e61
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
and [ esp + 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
or esi 0xffffffff
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_403bcf
mov [ esp + 0x10 ] eax
or esi 0xffffffff
cmp edi 0x2
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40cdb4
mov esi eax
cmp edi 0x3
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40cdb4
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x18 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40cdb4
jmp r-xdata
push eax
push [ esp + 0x18 ]
push esi
push ebx
push edx
dec ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov ebx [ esp + 0x10 ]
xor edx edx
sub ecx edx
je r-xdata
push ebx
call j_sub_4228ca#2
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esp + 0x1c ]
push eax
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
mov ecx edi
call sub_40cdb4
test eax eax
jne r-xdata
push edx
push [ esp + 0x18 ]
push esi
push ebx
push 0x1
jmp r-xdata
mov ecx rw-data
call sub_4454e0
mov ecx edi
mov esi eax
call sub_412570
mov [ edi ] esi
mov [ edi + 0xc ] 0x1
sub_465f56
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x4 ]
push edi
push [ eax ]
mov edi ecx
lea ecx [ edi + 0x1d8 ]
call sub_40d89e
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ edi + 0x1e8 ]
call sub_40c935
xor ebx ebx
inc ebx
push ebx
mov ecx edi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ edi + 0x1f8 ]
and [ esp + 0x18 ] 0x0
mov esi [ eax ]
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
push [ eax + 0x8 ]
call sub_4113a0
push 0x7
lea ecx [ esp + 0x14 ]
call sub_40d2c0
lea ecx [ esp + 0x10 ]
test al al
je r-xdata
xor al al
jmp r-xdata
push 0x4
call sub_40d2c0
test al al
jne r-xdata
call sub_44be63
push eax
lea ecx [ edi + 0x31c ]
call sub_43e0c5
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esp + 0x10 ]
call sub_405372
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_40d16a
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_412570
mov al bl
lea ecx [ esp + 0x10 ]
call sub_40d16a
lea ecx [ esp + 0x10 ]
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_40d3d2
lea eax [ esp + 0x20 ]
push eax
push esi
lea ecx [ edi + 0x31c ]
call sub_43d7d6
test al al
jne r-xdata
xor bl bl
jmp r-xdata
call sub_4084a6
push [ esp + 0x18 ]
lea ecx [ edi + 0x31c ]
push esi
call sub_43d978
call sub_40cdb4
push eax
push esi
lea ecx [ edi + 0x31c ]
call sub_43dcf3
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_405cd3
jmp r-xdata
push esi
lea ecx [ edi + 0x31c ]
call sub_43e0c5
mov bl al
sub_46609e
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push esi
mov [ ebp - 0xc ] eax
call sub_465f56
test al al
jne r-xdata
push ebx
mov ebx [ esi + 0x8 ]
push edi
xor edi edi
or eax 0xffffffff
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] eax
cmp ebx 0x7
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
cmp ebx 0x6
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40cdb4
mov [ ebp + 0x8 ] eax
xor eax eax
pop esi
leave
retn 0x8
cmp ebx 0x5
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov [ ebp - 0x4 ] eax
mov eax edi
cmp ebx 0x4
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
mov [ ebp - 0x8 ] eax
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx + 0xc ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_447d1c
xor edi edi
dec eax
je r-xdata
push 0x2
pop edi
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
mov esi [ ebp - 0xc ]
push [ ebp - 0x4 ]
mov ecx [ esi + 0x31c ]
push [ ebp - 0x8 ]
push edi
call sub_43c145
mov ecx [ esi + 0x110 ]
call sub_448355
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] edi
jmp r-xdata
pop edi
pop ebx
sub_466189
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
and [ esp + 0x2c ] 0x0
and [ esp + 0x34 ] 0x0
push ebx
push esi
xor esi esi
mov ebx ecx
inc esi
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x44 ] esi
call sub_40d3d2
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_412570
and [ edi ] 0x0
mov [ edi + 0xc ] esi
mov esi [ ebp + 0x8 ]
push esi
mov ecx ebx
call sub_465f56
test al al
jne r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_40ca8e
jmp r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
jmp r-xdata
cmp [ esi + 0x8 ] 0x5
jb r-xdata
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea ecx [ esp + 0x38 ]
call sub_412570
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x38 ]
push eax
mov ecx esi
call sub_41baef
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x18 ]
inc [ eax ]
mov [ esp + 0x24 ] eax
call sub_40b8a7
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
mov esi [ ebx + 0x31c ]
mov edx r--data
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
call sub_41f885
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov ecx esi
call sub_43e401
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov ecx esi
call sub_43e3f3
jmp r-xdata
call sub_412570
and [ edi ] 0x0
mov [ edi + 0xc ] 0x1
jmp r-xdata
call sub_412570
xor eax eax
inc eax
mov [ edi + 0xc ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push 0xffffffff
jmp r-xdata
mov ecx edi
test al al
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_405cd3
mov [ edi ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push 0x1
mov ecx esi
call sub_43cde6
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call sub_43ce8a
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push 0x1
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push 0x0
jmp r-xdata
test al al
jne r-xdata
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx [ esp + 0x18 ]
call sub_43c473
jmp r-xdata
mov ecx esi
call sub_43c239
jmp r-xdata
mov ecx edi
call sub_412570
mov eax [ esp + 0x10 ]
mov [ edi + 0xc ] 0x1
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
push eax
mov ecx esi
call sub_43c4f6
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x8 ]
call sub_43c577
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
push eax
mov ecx esi
call sub_43c7e6
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
lea eax [ esp + 0x28 ]
push eax
mov ecx esi
call sub_43c600
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx [ esp + 0x18 ]
call sub_43c6fd
jmp r-xdata
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov ecx esi
call sub_43c12c
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
mov ecx edi
call sub_407bef
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push 0x1
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push 0x0
mov ecx esi
call sub_43c0fd
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
lea eax [ esp + 0x28 ]
push eax
mov ecx esi
call sub_43c39d
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call sub_43c37e
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call sub_43c2ed
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call sub_43c265
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx [ esp + 0x18 ]
call sub_43c44d
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x28 ]
mov eax [ eax + 0x4 ]
push ecx
mov ecx [ eax + 0x10 ]
call sub_40cdb4
push eax
mov ecx esi
call sub_43c30d
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
push eax
mov ecx esi
call sub_43cd02
sub_466628
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_465f56
test al al
jne r-xdata
mov ecx [ esi + 0x31c ]
push 0x0
call sub_43e181
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_466664
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_465f56
test al al
jne r-xdata
mov ecx [ esi + 0x31c ]
push 0x1
call sub_43e181
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4666a0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_465f56
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov ecx [ esi + 0x31c ]
call sub_43cd27
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4666dc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x154
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
push [ ebp + 0x8 ]
mov ecx esi
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
lea ecx [ esp + 0x18 ]
call sub_4016f2
lea ecx [ esp + 0x8 ]
call sub_40d3d2
lea eax [ esp + 0x8 ]
push eax
mov eax [ esi + 0x1f8 ]
lea ecx [ esp + 0x1c ]
push [ eax ]
call sub_43d7d6
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_407bef
lea ecx [ esp + 0x8 ]
call sub_405cd3
lea ecx [ esp + 0x18 ]
call sub_404208
push 0x0
jns r-xdata
push 0x1
neg eax
push eax
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
jmp r-xdata
sub_466778
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_465f56
test al al
jne r-xdata
mov eax [ esi + 0x31c ]
mov esi [ ebp + 0xc ]
push edi
mov edi [ eax ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
jmp r-xdata
mov [ esi + 0xc ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4667cd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ebx ecx
mov [ esp + 0x10 ] ebx
call sub_465f56
test al al
jne r-xdata
mov ecx [ ebx + 0x31c ]
xor edi edi
inc edi
push edi
lea eax [ esp + 0x14 ]
push eax
call sub_43e278
mov esi [ ebp + 0xc ]
cmp al 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
xor edi edi
inc edi
jmp r-xdata
mov ecx esi
call sub_412570
push 0x4
push edi
push esi
call sub_403320
mov eax [ esp + 0x1c ]
xor ebx ebx
push ebx
mov [ esp + 0x30 ] eax
push edi
lea eax [ esp + 0x34 ]
push eax
push esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] edi
call sub_412320
add esp 0x1c
lea ecx [ esp + 0x20 ]
call sub_412570
mov eax [ esp + 0x14 ]
push edi
mov [ esp + 0x24 ] eax
push edi
lea eax [ esp + 0x28 ]
push eax
push esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] edi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_412570
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
push 0x2
mov [ esp + 0x24 ] eax
push edi
lea eax [ esp + 0x28 ]
push eax
push esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] edi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_412570
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
push 0x3
mov [ esp + 0x24 ] eax
push edi
lea eax [ esp + 0x28 ]
push eax
push esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] edi
call sub_412320
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_412570
jmp r-xdata
mov edx [ esp + 0xc ]
xor ebx ebx
mov [ esi + 0xc ] edi
mov [ esi ] ebx
mov eax [ edx ]
push ebx
mov ecx [ eax + 0x4 ]
push edi
add ecx edx
call sub_44d7e4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_466902
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
push [ ebp + 0x8 ]
mov ecx esi
call sub_465f56
test al al
jne r-xdata
lea ecx [ esp + 0x8 ]
call sub_40d3d2
mov ecx [ esi + 0x31c ]
lea eax [ esp + 0x8 ]
push eax
call sub_43e2e8
test al al
jne r-xdata
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_407bef
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x8 ]
call sub_405cd3
sub_466989
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_465f56
test al al
jne r-xdata
mov ecx [ esi + 0x31c ]
push 0x0
call sub_43e431
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4669c5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ esp + 0x10 ] ebx
call sub_465f56
test al al
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_40d3d2
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x10 ]
inc [ eax ]
mov [ esp + 0x1c ] eax
call sub_40b8a7
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call [ CharUpperBuffW@IAT ]
push r--data
lea ecx [ esp + 0x34 ]
call sub_41d6b4
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
cmp [ edi + 0x8 ] 0x6
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x30 ]
push eax
mov ecx edi
call sub_41baef
mov ebx [ ebx + 0x31c ]
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
push 0x0
push 0x0
push 0x1004
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov ecx ebx
call sub_43cb3f
jmp r-xdata
push [ ebx ]
call [ SendMessageW@IAT ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x20 ]
mov esi [ eax + 0x10 ]
push ecx
mov ecx [ eax + 0x14 ]
call sub_40cdb4
push eax
mov ecx esi
call sub_40cdb4
push eax
mov ecx ebx
call sub_43cb61
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
push 0x0
push 0x0
push 0x1032
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_407bef
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_412570
lea ecx [ esp + 0x10 ]
call sub_405cd3
lea ecx [ esp + 0x20 ]
call sub_405cd3
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
push eax
mov ecx ebx
call sub_43cc07
mov esi [ ebp + 0xc ]
mov ecx esi
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
push 0xffffffff
push 0xffffffff
jmp r-xdata
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
push 0xffffffff
push 0xffffffff
jmp r-xdata
push 0x1
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
mov ecx [ edi + 0x4 ]
mov esi eax
mov ecx [ ecx + 0x14 ]
call sub_40cdb4
test eax eax
jne r-xdata
push 0x0
mov ecx ebx
call sub_43cc25
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov ecx ebx
call sub_43ccb6
jmp r-xdata
push eax
push esi
mov eax esi
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
mov ecx [ edi + 0x4 ]
mov esi eax
mov ecx [ ecx + 0x14 ]
call sub_40cdb4
test eax eax
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
test eax eax
lea eax [ esp + 0x20 ]
mov ecx ebx
push eax
jne r-xdata
push eax
push esi
mov eax esi
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov edi [ eax + 0x14 ]
mov ecx esi
call sub_4084a6
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_40cdb4
push eax
push esi
mov ecx ebx
call sub_43c98d
push 0x1
push 0x0
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov edx [ esp + 0xc ]
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx ebx
call sub_43c8cd
jmp r-xdata
call sub_43ca6d
sub_466d40
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
mov ebx ecx
push esi
mov [ ebp - 0x4 ] ebx
call sub_465f56
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov ecx [ ebx + 0x31c ]
push 0x1
lea eax [ ebp - 0x14 ]
push eax
call sub_43e278
test al al
je r-xdata
cmp edi 0x6
jae r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40cdb4
mov ebx eax
mov ebx [ ebp - 0xc ]
sub ebx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40cdb4
mov edi eax
mov edi [ ebp - 0x8 ]
sub edi [ ebp - 0x10 ]
jmp r-xdata
cmp edi 0x7
jae r-xdata
mov ecx [ ebp + 0xc ]
call sub_40cdb4
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
push 0x29
mov eax [ ecx + 0xc ]
mov ecx eax
mov [ ebp + 0xc ] eax
call sub_41d5f6
test al al
je r-xdata
mov ecx esi
call sub_40cdb4
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
push 0x29
mov esi [ ecx + 0x10 ]
mov ecx esi
mov [ ebp + 0xc ] eax
call sub_41d5f6
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov ecx [ ebp - 0x4 ]
push edi
mov ecx [ ecx + 0x31c ]
push ebx
push eax
push [ ebp + 0xc ]
call sub_43e40f
jmp r-xdata
sub_466e27
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push esi
mov ebx ecx
call sub_465f56
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x5
push edi
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax [ ebx + 0x31c ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
push edi
push [ esi + 0x8 ]
lea ecx [ ebx + 0x88 ]
call sub_443abb
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x31c ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
push edi
push [ esi + 0x8 ]
lea ecx [ ebx + 0x88 ]
call sub_443c7f
jmp r-xdata
pop edi
sub_466eba
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
mov [ ebp - 0x4 ] 0x0
call sub_465f56
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x4
jbe r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
push [ ebp - 0x4 ]
mov ecx [ edi + 0x31c ]
push [ esi + 0x8 ]
call sub_401a85
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40cdb4
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
leave
retn 0x8
mov [ ebp - 0x4 ] 0x1
sub_466f2a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_465f56
test al al
jne r-xdata
mov ecx [ esi + 0x31c ]
push 0x1
call sub_43e431
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_466f67
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ esp + 0x18 ] ebx
call sub_465f56
test al al
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_40d3d2
mov eax [ edi + 0x4 ]
mov [ esp + 0x13 ] 0x0
mov esi [ eax + 0xc ]
mov ecx esi
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x18 ]
inc [ eax ]
mov [ esp + 0x24 ] eax
call sub_40b8a7
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
push r--data
lea ecx [ esp + 0x3c ]
call sub_41d6b4
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
cmp [ edi + 0x8 ] 0x6
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x38 ]
push eax
mov ecx edi
call sub_41baef
mov ebx [ ebx + 0x31c ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
push 0x0
push 0x0
push 0x1105
push [ ebx ]
call [ SendMessageW@IAT ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push 0x1
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_412570
lea ecx [ esp + 0x18 ]
call sub_405cd3
lea ecx [ esp + 0x28 ]
call sub_405cd3
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push 0x0
jmp r-xdata
push [ esi + 0x8 ]
mov ecx ebx
call sub_43ceb5
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx ebx
call sub_43cf2a
movzx edi al
jmp r-xdata
push [ esi + 0x8 ]
mov ecx ebx
call sub_43cf40
jmp r-xdata
test al al
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push 0x1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
mov edx [ esp + 0x14 ]
push 0x0
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx ebx
call sub_43d1c5
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_41e3ee
movzx eax al
push eax
lea eax [ esp + 0x2c ]
push eax
mov ecx ebx
call sub_43d451
mov edi eax
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
lea eax [ esp + 0x28 ]
push eax
push [ esi + 0x8 ]
mov ecx ebx
call sub_43d4a7
jmp r-xdata
mov al [ esp + 0x13 ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx ebx
call sub_43d5a0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ esp + 0x13 ] al
lea eax [ esp + 0x28 ]
push eax
call sub_407bef
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_41f885
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
mov ecx ebx
call sub_43d5ce
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_4084a6
push 0x0
sub_46728b
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x98 ] 0x0
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
call sub_405372
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push edx
mov ecx esi
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ esi + 0x1f8 ]
mov eax [ eax ]
mov [ esi + 0x98 ] eax
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
sub_4672fc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x8 ]
mov esi ecx
xor ecx ecx
inc ecx
push edi
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x3c ] ecx
mov [ esp + 0x2c ] ecx
push r--data
lea ecx [ esp + 0x34 ]
mov edi eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x2c ] eax
call sub_40ca8e
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
push r--data
lea ecx [ esp + 0x24 ]
call sub_40ca8e
mov eax [ ebx + 0x4 ]
lea ecx [ esp + 0x10 ]
push [ eax ]
call sub_41baef
cmp [ esp + 0xc ] 0x2
lea ecx [ esp + 0x10 ]
jb r-xdata
lea eax [ esp + 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x4 ]
jmp r-xdata
cmp [ esp + 0xc ] 0x3
jne r-xdata
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
jmp r-xdata
call sub_41baef
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_41baef
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call sub_465f56
test al al
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_40d3d2
mov ecx [ esi + 0x31c ]
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_43cd4f
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
lea edi [ eax - 0x1 ]
lea ecx [ esp + 0x20 ]
call sub_412570
lea ecx [ esp + 0x10 ]
call sub_4404c9
lea ecx [ esp + 0x30 ]
call sub_412570
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
push 0x1
add ecx esi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x40 ]
push eax
call sub_407bef
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_405cd3
sub_46744c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9c
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
mov esi [ ebx + 0x8 ]
push edi
mov edi ecx
mov [ esp + 0x14 ] esi
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x24 ] al
mov [ esp + 0x28 ] al
mov [ esp + 0x1c ] al
cmp esi 0x4
jb r-xdata
cmp esi 0x5
jb r-xdata
mov eax [ ebx + 0x4 ]
push 0x29
mov eax [ eax + 0xc ]
mov ecx eax
mov [ esp + 0x1c ] eax
call sub_41d5f6
test al al
jne r-xdata
cmp esi 0x6
jb r-xdata
mov eax [ ebx + 0x4 ]
push 0x29
mov eax [ eax + 0x10 ]
mov ecx eax
mov [ esp + 0x1c ] eax
call sub_41d5f6
test al al
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_4084a6
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x20 ] eax
cmp [ esp + 0x28 ] 0x0
mov [ esp + 0x50 ] 0x30
mov [ esp + 0x54 ] 0x1a0
je r-xdata
mov ecx [ ebx + 0x4 ]
push 0x29
mov esi [ ecx + 0x14 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_40cdb4
mov [ esp + 0x2c ] eax
mov eax [ ebx + 0x4 ]
and [ esp + 0x58 ] 0x0
and [ esp + 0x70 ] 0x0
and [ esp + 0x5c ] 0x0
mov esi [ eax ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x74 ] eax
xor eax eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] eax
lea eax [ esp + 0xc ]
push eax
call [ GetCursorPos@IAT ]
add [ esp + 0xc ] 0x10
add [ esp + 0x10 ] 0x10
lea eax [ esp + 0x30 ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov esi [ esp + 0x14 ]
cmp esi 0x2
jb r-xdata
mov [ esp + 0x54 ] 0x1a2
mov ecx esi
call sub_40cdb4
mov ecx [ ebx + 0x4 ]
and eax 0xffffff01
mov ecx [ ecx + 0x14 ]
mov [ esp + 0x24 ] eax
call sub_40cdb4
mov ecx [ ebx + 0x4 ]
shr al 0x1
mov ecx [ ecx + 0x14 ]
and eax 0xffffff01
mov [ esp + 0x28 ] eax
call sub_40cdb4
shr al 0x2
and eax 0xffffff01
mov [ esp + 0x1c ] eax
cmp esi 0x3
jb r-xdata
mov eax [ ebx + 0x4 ]
push 0x29
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x18 ] eax
call sub_41d5f6
test al al
jne r-xdata
mov ebx [ esp + 0x24 ]
push 0xfffffff0
push [ edi + 0xe8 ]
call [ GetWindowLongW@IAT ]
test bl bl
je r-xdata
mov eax [ ebx + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_41d5f6
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
call sub_40cdb4
mov [ esp + 0xc ] eax
test al 0x40
je r-xdata
test al 0x40
je r-xdata
mov ecx esi
call sub_40cdb4
mov [ esp + 0x10 ] eax
xor esi esi
push [ edi + 0xe8 ]
call [ DestroyWindow@IAT ]
xor esi esi
mov [ edi + 0xe8 ] esi
jmp r-xdata
mov ebx [ SendMessageW@IAT ]
lea ecx [ esp + 0x50 ]
push ecx
push esi
push 0x439
push eax
test bl bl
je r-xdata
mov eax [ edi + 0xe8 ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
xor esi esi
push esi
push esi
push 0x41d
push [ edi + 0xe8 ]
call ebx
jmp r-xdata
push 0x3
push 0x43
jmp r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
push 0xd8f0d8f0
push esi
push 0x412
push [ edi + 0xe8 ]
call ebx
lea eax [ esp + 0x50 ]
push eax
push 0x1
push 0x411
push [ edi + 0xe8 ]
call ebx
push [ edi + 0xe8 ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
call ebx
push [ esp + 0x20 ]
push [ esp + 0x30 ]
push 0x421
push [ edi + 0xe8 ]
call ebx
test eax eax
je r-xdata
pop eax
push esi
push esi
push esi
push esi
mov ecx 0x80000000
push ecx
push ecx
push ecx
push ecx
push eax
push esi
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov ebx [ SendMessageW@IAT ]
lea ecx [ esp + 0x50 ]
push ecx
push esi
push 0x432
push eax
mov [ edi + 0xe8 ] eax
call ebx
push [ esp + 0x38 ]
push esi
push 0x418
push [ edi + 0xe8 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
lea eax [ esp + 0x40 ]
push eax
push [ edi + 0xe8 ]
call [ GetWindowRect@IAT ]
mov esi [ esp + 0x48 ]
sub esi [ esp + 0x40 ]
mov eax [ esp + 0x4c ]
sub eax [ esp + 0x44 ]
push 0x2
push [ esp + 0x14 ]
inc esi
push [ esp + 0x14 ]
inc eax
mov [ esp + 0x20 ] eax
call [ MonitorFromPoint@IAT ]
lea ecx [ esp + 0x80 ]
push ecx
push eax
mov [ esp + 0x88 ] 0x28
call [ GetMonitorInfoW@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0xc ]
cmp edx [ esp + 0x30 ]
jge r-xdata
lea eax [ esp + 0x84 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call [ CopyRect@IAT ]
mov eax [ esp + 0x38 ]
sub eax esi
cmp edx eax
jle r-xdata
mov edx [ esp + 0x30 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x34 ]
jge r-xdata
mov edx eax
mov [ esp + 0xc ] edx
mov ecx [ esp + 0x3c ]
sub ecx [ esp + 0x14 ]
cmp eax ecx
jle r-xdata
mov eax [ esp + 0x34 ]
movzx ecx ax
movzx eax dx
shl ecx 0x10
or ecx eax
push ecx
push 0x0
push 0x412
push [ edi + 0xe8 ]
call ebx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ecx
jmp r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
sub_4677fc
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ebx ecx
call sub_4019ee
xor edi edi
inc edi
push edi
mov ecx ebx
call sub_401dce
test eax eax
jg r-xdata
mov eax [ ebx + 0x1f8 ]
mov esi [ eax ]
call [ GetForegroundWindow@IAT ]
cmp esi eax
jne r-xdata
jns r-xdata
mov eax [ ebx + 0x1f8 ]
push [ eax ]
call sub_41f78e
mov esi [ ebp + 0xc ]
mov [ esp + 0xc ] eax
mov ecx esi
test eax eax
jne r-xdata
mov ecx [ ebx + 0x314 ]
call sub_448355
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] edi
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
mov eax [ ebx + 0x1f8 ]
mov edi [ eax ]
call sub_412570
mov [ esi + 0xc ] 0x7
mov [ esi ] edi
mov eax [ ebx ]
push 0x0
mov ecx [ eax + 0x4 ]
push [ esp + 0x10 ]
add ecx ebx
call sub_407ba9
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] edi
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x314 ]
call sub_448355
sub_4678c6
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
mov ecx esi
call sub_468a48
test eax eax
jg r-xdata
push edi
call [ GetForegroundWindow@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi eax
call sub_412570
mov [ esi ] edi
mov [ esi + 0xc ] 0x7
pop edi
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46792c
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov ecx [ esi + 0x1f8 ]
call sub_43e170
mov ecx [ esi + 0x314 ]
call sub_448355
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46798d
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
sub_4679d6
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_4019ee
xor ebx ebx
inc ebx
push ebx
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ esi + 0x1f8 ]
push [ eax ]
call sub_40193b
test al al
je r-xdata
jns r-xdata
mov ebx [ edi + 0x8 ]
mov [ esp + 0xc ] 0x4
cmp ebx 0x2
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
jmp r-xdata
cmp ebx 0x3
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov [ esp + 0xc ] eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx 0x1f4
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40cdb4
mov ebx eax
jmp r-xdata
lea edi [ ecx - 0x1 ]
mov ecx [ esp + 0xc ]
lea ecx [ ecx * 2 - 0x2 ]
cmp ecx 0x1
jle r-xdata
mov eax [ esi + 0x1f8 ]
push 0x1
push [ eax ]
call [ FlashWindow@IAT ]
mov ecx ebx
call sub_448355
dec edi
jne r-xdata
sub_467aa2
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov edi [ GetForegroundWindow@IAT ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call edi
mov ebx eax
mov dl 0x1
mov ecx ebx
call sub_4469c9
lea eax [ ebp - 0xc ]
push eax
call [ GetCaretPos@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
call [ ClientToScreen@IAT ]
call edi
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x10c ]
call sub_456b19
mov eax [ ebp - 0x14 ]
sub [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x8 ] eax
xor esi esi
push 0x2
inc esi
push esi
push [ ebp + 0xc ]
call sub_403320
mov eax [ ebp - 0xc ]
xor edi edi
push edi
mov [ ebp - 0x24 ] eax
push esi
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] esi
call sub_412320
add esp 0x1c
lea ecx [ ebp - 0x24 ]
call sub_412570
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
xor eax eax
inc eax
push eax
push eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] edi
call sub_412320
add esp 0x10
lea ecx [ ebp - 0x24 ]
call sub_412570
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov edx [ ebp - 0x4 ]
xor eax eax
xor edi edi
inc eax
push edi
mov [ esi + 0xc ] eax
mov [ esi ] edi
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_44d7e4
jmp r-xdata
xor dl dl
mov ecx ebx
call sub_4469c9
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
sub_467b93
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
lea ecx [ esp + 0x8 ]
call sub_40d3d2
mov ecx [ esi + 0x1f8 ]
lea edx [ esp + 0x8 ]
mov ecx [ ecx ]
call sub_44765d
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_407bef
lea ecx [ esp + 0x8 ]
call sub_405cd3
push 0x0
jns r-xdata
push 0x1
neg eax
push eax
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
jmp r-xdata
sub_467c13
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_412570
and [ edi ] 0x0
xor ebx ebx
inc ebx
push ebx
mov ecx esi
mov [ edi + 0xc ] ebx
call sub_401dce
test eax eax
jg r-xdata
mov eax [ esi + 0x1f8 ]
lea ecx [ esp + 0x20 ]
push ecx
push [ eax ]
call [ GetClientRect@IAT ]
test eax eax
je r-xdata
push 0x0
jns r-xdata
push 0x0
push 0x2
push ebx
push edi
call sub_403320
mov eax [ esp + 0x34 ]
sub eax [ esp + 0x2c ]
add esp 0xc
xor esi esi
push esi
mov [ esp + 0x14 ] eax
push ebx
lea eax [ esp + 0x18 ]
push eax
push edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push ebx
mov [ esp + 0x14 ] eax
push ebx
lea eax [ esp + 0x18 ]
push eax
push edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_412570
jmp r-xdata
push ebx
neg eax
push eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
sub_467cf3
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ esi + 0x1f8 ]
mov esi [ ebp + 0xc ]
push edi
mov edi [ eax ]
mov ecx esi
call sub_412570
mov [ esi ] edi
pop edi
push 0x0
jns r-xdata
push 0x1
neg eax
push eax
jmp r-xdata
mov [ esi + 0xc ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
jmp r-xdata
sub_467d58
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
xor ebx ebx
inc ebx
push ebx
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov ecx [ esi + 0x1f8 ]
xor edi edi
push edi
lea eax [ esp + 0x14 ]
push eax
call sub_43e278
mov esi [ ebp + 0xc ]
push 0x4
push ebx
push esi
call sub_403320
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esp + 0x20 ] eax
push edi
push ebx
lea eax [ esp + 0x28 ]
push eax
push esi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_412570
mov eax [ esp + 0x14 ]
push ebx
mov [ esp + 0x24 ] eax
push ebx
lea eax [ esp + 0x28 ]
push eax
push esi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_412570
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
push 0x2
mov [ esp + 0x24 ] eax
push ebx
lea eax [ esp + 0x28 ]
push eax
push esi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_412570
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
push 0x3
mov [ esp + 0x24 ] eax
push ebx
lea eax [ esp + 0x28 ]
push eax
push esi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call sub_412320
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_412570
jns r-xdata
xor edi edi
push edi
push ebx
xor edi edi
push edi
neg eax
push eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] edi
jmp r-xdata
sub_467e86
push ebp
mov ebp esp
push ecx
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x1f8 ]
push [ eax ]
call [ GetWindowThreadProcessId@IAT ]
fild [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
test eax eax
jns r-xdata
jns r-xdata
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_412570
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
fadd [ r--data ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
or [ esi ] 0xffffffff
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
xor eax eax
pop esi
leave
retn 0x8
sub_467f0e
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor ebx ebx
inc ebx
mov esi ecx
mov edi ebx
call sub_4019ee
push ebx
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ esi + 0x1f8 ]
mov esi [ eax ]
push esi
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push 0x0
jns r-xdata
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push 0x3
pop edi
push ebx
neg eax
push eax
jmp r-xdata
call [ GetForegroundWindow@IAT ]
cmp eax esi
jne r-xdata
or edi 0x4
pop edi
mov [ esi + 0xc ] ebx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
jmp r-xdata
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
or edi 0x8
push esi
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
or edi 0x10
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi ] edi
or edi 0x20
sub_467fb9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ esi + 0x1f8 ]
push [ eax ]
call sub_40193b
test al al
jne r-xdata
jns r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x8 ]
call sub_40d3d2
mov ecx [ esi + 0x1f8 ]
mov dl [ esi + 0x2fc ]
mov ecx [ ecx ]
lea eax [ esp + 0x8 ]
push eax
call sub_447ae0
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_407bef
lea ecx [ esp + 0x8 ]
call sub_405cd3
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
sub_46804e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
lea ecx [ esp + 0x8 ]
call sub_40d3d2
mov ecx [ esi + 0x1f8 ]
lea eax [ esp + 0x8 ]
push eax
call sub_43e2e8
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_407bef
lea ecx [ esp + 0x8 ]
call sub_405cd3
jns r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_40ca8e
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4680c9
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov ecx [ esi + 0x1f8 ]
mov ecx [ ecx ]
call sub_4484f4
mov ecx [ esi + 0x314 ]
call sub_448355
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46812c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
push 0x10000
mov ebx ecx
call sub_42010a
pop ecx
push eax
lea ecx [ esp + 0x1c ]
call sub_404bce
mov eax [ ebx + 0x2f4 ]
lea ecx [ ebx + 0x1d8 ]
push r--data
mov [ esp + 0x14 ] eax
call sub_40ca8e
lea ecx [ ebx + 0x1e8 ]
push r--data
call sub_407e53
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ ebx + 0x1d8 ]
call sub_407bef
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov [ ebx + 0x2f4 ] 0x4
jmp r-xdata
xor esi esi
push esi
mov ecx ebx
call sub_401dce
test eax eax
jns r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4084a6
push [ esi + 0x8 ]
lea ecx [ ebx + 0x1e8 ]
call sub_40c935
mov edi [ ebx + 0x308 ]
mov eax [ esp + 0x10 ]
mov [ ebx + 0x2f4 ] eax
push 0x2
lea eax [ edi + 0x1 ]
push eax
push 0x2
push [ ebp + 0xc ]
mov [ esp + 0x24 ] edi
call sub_403320
push esi
push esi
push 0x2
push esi
push [ ebp + 0xc ]
call sub_4114a0
mov esi eax
add esp 0x24
mov ecx esi
call sub_412570
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] edi
mov esi eax
mov [ esp + 0x10 ] eax
cmp edi eax
jl r-xdata
neg eax
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_404fd2
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x304 ]
push 0x7fff
push [ esp + 0x1c ]
mov eax [ eax + esi * 4 - 0x4 ]
push [ eax ]
call [ GetWindowTextW@IAT ]
xor edi edi
push edi
push esi
push 0x2
push edi
push [ ebp + 0xc ]
call sub_4114a0
add esp 0x14
lea ecx [ esp + 0x18 ]
push ecx
mov ecx eax
call sub_44a6be
push 0x1
push esi
push 0x2
push edi
push [ ebp + 0xc ]
call sub_4114a0
mov ecx [ ebx + 0x304 ]
mov edi eax
mov ecx [ ecx + esi * 4 - 0x4 ]
add esp 0x14
mov esi [ ecx ]
mov ecx edi
call sub_412570
mov [ edi ] esi
mov esi [ esp + 0x10 ]
inc esi
mov [ edi + 0xc ] 0x7
mov [ esp + 0x10 ] esi
cmp esi [ esp + 0x14 ]
jle r-xdata
sub_4682db
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x8 ]
push 0x10000
mov ebx ecx
mov [ ebp - 0x10 ] eax
call sub_42010a
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call sub_404bce
xor edi edi
push esi
mov ecx ebx
mov [ ebp - 0x14 ] edi
call sub_4019ee
push 0x1
mov ecx ebx
call sub_401dce
test eax eax
jg r-xdata
mov eax [ ebx + 0x1f8 ]
mov eax [ eax ]
push eax
mov [ ebp - 0x1c ] eax
call [ GetMenu@IAT ]
mov esi eax
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
jns r-xdata
push 0x3
pop edi
mov [ ebp - 0xc ] edi
cmp [ ebp - 0x10 ] edi
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
neg eax
push edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_44d7e4
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov dl 0x1
mov ecx esi
call sub_4469c9
push 0x0
push [ ebp - 0x14 ]
push 0x111
push esi
call [ PostMessageW@IAT ]
xor dl dl
mov ecx esi
call sub_4469c9
mov ecx [ ebx + 0x314 ]
call sub_448355
push esi
call [ GetMenuItemCount@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_404fd2
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
dec ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] ecx
mov edi [ ebp - 0xc ]
push [ ebp - 0x4 ]
cmp edi [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebp - 0x18 ]
ja r-xdata
push [ ebp - 0x8 ]
call [ GetSubMenu@IAT ]
mov esi eax
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
mov esi [ ebp - 0x8 ]
push esi
call [ GetMenuItemID@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
inc edi
mov [ ebp - 0xc ] edi
cmp edi [ ebp - 0x10 ]
jbe r-xdata
push 0x400
push 0x7fff
push [ ebp - 0x24 ]
push eax
push esi
call [ GetMenuStringW@IAT ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi * 4 - 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
mov esi [ ebp - 0xc ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + esi * 4 - 0x4 ]
mov ecx esi
call sub_4084a6
mov eax [ esi + 0x8 ]
push edi
mov esi [ eax ]
call sub_4218fb
push eax
push [ ebp - 0x24 ]
push esi
call sub_422315
add esp 0x10
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_468495
push esi
push 0x0
push r--data
mov esi ecx
call [ FindWindowW@IAT ]
push 0x0
push 0x197
push 0x111
push eax
call [ PostMessageW@IAT ]
mov ecx [ esi + 0x314 ]
call sub_448355
xor eax eax
pop esi
retn 0x8
sub_4684c9
push esi
push 0x0
push 0x1a0
push 0x111
push 0x0
push r--data
mov esi ecx
call [ FindWindowW@IAT ]
push eax
call [ PostMessageW@IAT ]
mov ecx [ esi + 0x314 ]
call sub_448355
xor eax eax
pop esi
retn 0x8
sub_4684fd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov ebx [ edi + 0x8 ]
mov esi ecx
mov [ esp + 0x18 ] ebx
call sub_4019ee
push 0x1
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ esi + 0x1f8 ]
push 0xfffffff0
push [ eax ]
call [ GetWindowLongW@IAT ]
mov ecx [ esi + 0x1f8 ]
test eax 0x40000000
lea eax [ esp + 0x20 ]
je r-xdata
jns r-xdata
push 0x0
push 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
mov ebx [ esp + 0x28 ]
sub ebx [ esp + 0x20 ]
mov eax [ edi + 0x4 ]
push 0x29
mov ebx [ eax + 0x10 ]
mov ecx ebx
call sub_41d5f6
test al al
jne r-xdata
push eax
call sub_43e278
cmp ebx 0x5
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ esp + 0x2c ]
sub edi [ esp + 0x24 ]
mov eax [ edi + 0x4 ]
push 0x29
mov edi [ eax + 0x14 ]
mov ecx edi
call sub_41d5f6
test al al
jne r-xdata
mov ecx ebx
call sub_40cdb4
mov ebx eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
call sub_40cdb4
mov eax [ esp + 0x20 ]
jmp r-xdata
mov ecx edi
call sub_40cdb4
mov edi eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x6
jb r-xdata
mov ecx [ esp + 0x1c ]
call sub_40cdb4
mov eax [ esp + 0x24 ]
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0xc ]
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_41d5f6
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_41d5f6
test al al
je r-xdata
push edi
push ebx
push [ esp + 0x14 ]
push [ esp + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x18 ]
call sub_40cdb4
mov [ esp + 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0x14 ] 0x7
mov [ esp + 0xc ] eax
jb r-xdata
test eax eax
jle r-xdata
push 0xa
pop eax
mov [ esp + 0x1c ] eax
cmp eax 0x64
jle r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x18 ]
push 0x1
push eax
call sub_448190
add esp 0x10
test al al
je r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x10 ] edx
jne r-xdata
mov eax [ esi + 0x1f8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] 0x7
mov [ esi ] edi
mov ecx [ esi + 0x1f8 ]
push edi
push ebx
push [ esp + 0x1c ]
push [ esp + 0x24 ]
call sub_43e40f
push 0x32
pop ecx
call sub_448355
mov eax [ esp + 0x1c ]
jmp r-xdata
push edi
push ebx
push ecx
push edx
jmp r-xdata
mov ecx [ esi + 0x1f8 ]
call sub_43e40f
sub_468706
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_4019ee
xor ebx ebx
inc ebx
push ebx
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ esi + 0x1f8 ]
push [ eax ]
call sub_40193b
test al al
je r-xdata
xor edi edi
test eax eax
jns r-xdata
mov eax [ esi + 0x1f8 ]
mov esi [ eax ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
xor edi edi
push 0x13
push edi
push edi
push edi
push edi
cmp eax ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
mov [ esi + 0xc ] ebx
mov [ esi ] edi
jmp r-xdata
neg eax
push edi
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
push 0xfffffffe
push 0xffffffff
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push esi
call [ SetWindowPos@IAT ]
sub_4687a5
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_4019ee
xor ebx ebx
inc ebx
push ebx
mov ecx esi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
cmp eax 0x40
jne r-xdata
jns r-xdata
cmp eax 0x41
jne r-xdata
push ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_44d7e4
push eax
mov eax [ esi + 0x1f8 ]
push [ eax ]
call [ ShowWindow@IAT ]
mov ecx [ esi + 0x314 ]
call sub_448355
push 0x0
mov ecx [ esi + 0x1f8 ]
call sub_43e181
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_468834
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov edi ecx
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
mov bl al
push esi
mov ecx edi
mov [ ebp + 0x8 ] bl
call sub_4019ee
push 0x1
mov ecx edi
call sub_401dce
test eax eax
jg r-xdata
mov eax [ edi + 0x1f8 ]
push 0xffffffec
mov esi [ eax ]
push esi
call [ GetWindowLongW@IAT ]
mov ecx 0x80000
cmp bl 0xff
jb r-xdata
jns r-xdata
or eax ecx
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
push 0x2
push [ ebp + 0x8 ]
push 0x0
push esi
call [ SetLayeredWindowAttributes@IAT ]
test ecx eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_412570
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
xor eax ecx
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4688e8
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_468aa7
push ecx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi ]
mov [ ebp + 0x8 ] 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_402f0e
push 0x0
mov ecx esi
mov [ esi + 0xfc ] 0x3
call sub_40e1f0
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
xor eax eax
pop esi
pop ebp
retn 0x8
sub_468940
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_468aa7
push ecx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi ]
mov [ ebp + 0x8 ] 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_402f0e
push 0x0
mov ecx esi
mov [ esi + 0xfc ] 0x5
call sub_40e1f0
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
xor eax eax
pop esi
pop ebp
retn 0x8
sub_468998
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_468aa7
push ecx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi ]
mov [ ebp + 0x8 ] 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_402f0e
push 0x0
mov ecx esi
mov [ esi + 0xfc ] 0x4
call sub_40e1f0
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4689f0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_468aa7
push ecx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi ]
mov [ ebp + 0x8 ] 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_402f0e
push 0x0
mov ecx esi
mov [ esi + 0xfc ] 0x6
call sub_40e1f0
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_407be1
mov ecx [ ebp + 0xc ]
push eax
call sub_40d89e
xor eax eax
pop esi
pop ebp
retn 0x8
sub_468a48
push ebx
push esi
push edi
push 0x0
mov edi ecx
call sub_401dce
mov esi eax
test esi esi
jg r-xdata
call [ GetForegroundWindow@IAT ]
mov esi [ edi + 0x308 ]
xor edx edx
inc edx
mov ebx eax
cmp esi edx
jl r-xdata
jns r-xdata
xor eax eax
mov ecx [ edi + 0x304 ]
mov eax esi
jmp r-xdata
mov eax [ edi ]
mov ecx esi
neg ecx
push 0x0
push ecx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_44d7e4
xor eax eax
inc eax
jmp r-xdata
inc edx
add ecx 0x4
cmp edx esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ecx ]
cmp [ eax ] ebx
je r-xdata
sub_468aa7
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_4019ee
cmp [ edi + 0x8 ] 0x3
jne r-xdata
and [ esi + 0x310 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40cdb4
imul eax eax 0x3e8
mov [ esi + 0x310 ] eax
jmp r-xdata
call [ timeGetTime@IAT ]
pop edi
mov [ esi + 0x318 ] eax
pop esi
pop ebp
retn 0x4
sub_468aef
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0x14
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_45f6af
mov edi eax
sub_468b20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi ]
mov edi ecx
mov [ edi ] eax
lea eax [ esi + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_40c935
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_468b88
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
push ecx
call sub_468ba4
sub_468bbc
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
mov eax [ edi + 0x1c4 ]
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
mov ecx ebx
call sub_40cf2c
test al al
je r-xdata
push [ ebp + 0x18 ]
and [ edi + 0x1c4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push eax
call sub_422626
pop ecx
push eax
mov ecx ebx
call sub_468bbc
pop edi
pop ebx
leave
retn 0x14
push esi
push 0x24
call sub_42010a
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
lea ecx [ esi + 0x4 ]
call sub_40d3d2
jmp r-xdata
mov ecx [ ebx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov [ ebp + 0xc ] esi
mov eax [ ecx + eax * 4 ]
lea ecx [ esi + 0x4 ]
mov eax [ eax ]
add eax 0x14
push eax
call sub_40c935
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ edi ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebx + 0x2c ]
call sub_446437
pop esi
sub_468c6b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x24
mov [ ebp - 0x8 ] ecx
call sub_42010a
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
xor ebx ebx
lea ecx [ ebx + 0x4 ]
call sub_40d3d2
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax edi
shl eax 0x4
add eax 0x15c
add eax esi
push eax
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x4 ] ebx
call sub_40c935
mov ecx [ ebp - 0x8 ]
mov [ ebx ] edi
mov eax [ esi ]
mov [ ebx + 0x14 ] eax
and [ ebx + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x20 ] eax
lea eax [ ebp - 0x4 ]
push eax
add ecx 0x2c
call sub_446437
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_468cdb
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
cmp [ ebx + 0x44 ] 0x0
mov eax [ ebx ]
push edi
mov [ ebp + 0xc ] eax
je r-xdata
push 0x0
call [ GetDC@IAT ]
mov esi eax
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
xor esi esi
push esi
mov edi eax
call [ ReleaseDC@IAT ]
imul edi [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push [ ecx ]
mov ecx [ ebp + 0x1c ]
push esi
push [ ebp + 0x20 ]
mov eax ecx
push esi
push 0x4
push 0x1
and eax 0x8
push eax
mov eax ecx
and eax 0x4
push eax
and ecx 0x2
push ecx
mov eax edi
cdq
mov ecx 0xfffffd30
idiv ecx
push [ ebp + 0x18 ]
push esi
push esi
push esi
push eax
call [ CreateFontW@IAT ]
mov esi [ ebp + 0xc ]
push 0x1
mov edi eax
push edi
push 0x30
push esi
call [ SendMessageW@IAT ]
cmp [ ebx + 0x90 ] 0x1
mov al [ ebp + 0x24 ]
jne r-xdata
push [ ebx + 0x44 ]
call [ DeleteObject@IAT ]
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
test al al
je r-xdata
push 0x1
push ebx
push [ ebp + 0x8 ]
mov [ ebx + 0x44 ] edi
call sub_46ddee
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
test al al
je r-xdata
movsx eax [ ebx + 0x8e ]
push 0x0
push eax
movsx eax [ ebx + 0x8c ]
push eax
movsx eax [ ebx + 0x8a ]
push eax
movsx eax [ ebx + 0x88 ]
push eax
push [ ebx ]
call [ MoveWindow@IAT ]
mov al [ ebp + 0x24 ]
push 0x0
push 0x0
push 0x142
push esi
call [ SendMessageW@IAT ]
sub_468dd5
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ eax + ebx * 4 ]
push 0x0
mov eax [ eax ]
push 0x0
push 0xf0
push [ eax ]
mov edi ebx
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
cmp ebx 0x3
jl r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
inc edi
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
cmp esi [ rw-data ]
jle r-xdata
cmp [ eax + 0x90 ] 0x1a
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
dec esi
mov ebx edi
cmp edi esi
jg r-xdata
push 0xfffffff0
push [ eax ]
call [ GetWindowLongW@IAT ]
test eax 0x20000
jne r-xdata
cmp [ eax + 0x90 ] 0x1a
jne r-xdata
cmp [ ebp + 0xc ] 0x1
mov eax [ rw-data ]
pop esi
jne r-xdata
mov eax [ rw-data ]
push 0x0
mov eax [ eax + ebx * 4 ]
push 0x0
mov eax [ eax ]
push 0xf1
push [ eax ]
call [ SendMessageW@IAT ]
inc ebx
cmp ebx esi
jle r-xdata
push esi
lea esi [ ebx + 0x1 ]
jmp r-xdata
dec edi
cmp edi 0x3
jge r-xdata
push 0xfffffff0
push [ eax ]
call [ GetWindowLongW@IAT ]
test eax 0x20000
jne r-xdata
mov eax [ eax + edi * 4 ]
push 0xfffffff0
mov eax [ eax ]
push [ eax ]
call [ GetWindowLongW@IAT ]
or eax 0x10000
push eax
mov eax [ rw-data ]
push 0xfffffff0
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
push [ eax ]
call [ SetWindowLongW@IAT ]
mov ecx [ ebp + 0x8 ]
push 0x0
mov eax [ eax + ecx * 4 ]
push 0x1
mov eax [ eax ]
push 0xf1
push [ eax ]
call [ SendMessageW@IAT ]
jmp r-xdata
inc esi
sub_468eef
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x10
jge r-xdata
push 0x2
pop eax
mov ecx [ ebp + 0x20 ]
push esi
mov esi 0x96
cmp ecx 0xffffffff
jne r-xdata
or eax 0x2
mov edx [ ebp + 0x24 ]
cmp edx 0xffffffff
jne r-xdata
mov ecx esi
cmp [ ebp + 0x30 ] 0x0
jge r-xdata
mov edx esi
push ebx
push edi
mov edi [ ebp + 0x14 ]
xor ebx ebx
cmp [ edi ] bx
je r-xdata
xor al al
jmp r-xdata
xor al al
push ebx
push ecx
push [ ebp + 0x10 ]
push edx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push ebx
push r--data
push ebx
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x2c
push edi
push ebx
mov ebx [ SendMessageW@IAT ]
push 0x467
push eax
call ebx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push edi
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
mov eax 0x300
mov [ esi + 0x86 ] ax
push [ ebp + 0x30 ]
push eax
push 0x467
push [ esi ]
call ebx
test eax eax
jne r-xdata
pop edi
pop ebx
push [ esi ]
call [ DestroyWindow@IAT ]
sub_468fb5
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov esi [ ebp + 0x28 ]
mov ebx [ ebp + 0x2c ]
mov edx [ ebp + 0x20 ]
inc esi
neg esi
sbb esi esi
and esi [ ebp + 0x28 ]
inc ebx
neg ebx
sbb ebx ebx
and ebx [ ebp + 0x2c ]
mov eax 0x96
cmp edx 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0x24 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x28
mov edi [ ebp + 0xc ]
mov ax [ ebp + 0x18 ]
mov [ edi + 0x88 ] ax
mov ax [ ebp + 0x1c ]
mov [ edi + 0x8a ] ax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8c ] dx
mov [ edi + 0x8e ] cx
cmp [ eax + 0x1cc ] 0x0
jne r-xdata
mov ecx eax
mov ecx [ eax + 0x1cc ]
push edi
push edi
push [ ebp + 0x14 ]
call sub_43ef2d
cmp [ edi ] 0x0
mov [ edi + 0x80 ] eax
je r-xdata
push 0x1c
call sub_42010a
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + edx * 4 ]
mov ecx [ ecx ]
push [ ecx ]
mov ecx eax
call sub_43ed56
mov ecx eax
jmp r-xdata
or esi 0x50010000
push esi
mov esi [ SetWindowLongW@IAT ]
push 0xfffffff0
push [ edi ]
call esi
or ebx 0x10000
push ebx
push 0xffffffec
push [ edi ]
call esi
mov al 0x1
mov eax 0x300
mov [ edi + 0x86 ] ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1cc ] ecx
sub_4690be
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
xor bl bl
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x28 ]
push esi
push edi
or eax 0x10000
push eax
call sub_46e0fb
test al 0x1
je r-xdata
mov ecx [ ebp + 0x2c ]
cmp ecx 0xffffffff
jne r-xdata
inc bl
xor eax 0x1
push 0x1
push ecx
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push r--data
push ecx
push edi
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx 0x100
test bl bl
je r-xdata
xor al al
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push 0x401
push [ edi ]
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
mov al 0x1
mov ecx 0x300
mov [ esi + 0x86 ] cx
sub_469158
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
test al 0x7
jne r-xdata
push 0x3
pop eax
push esi
or eax 0x10000
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
push 0x1
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
or eax 0x3
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x4c ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ecx 0x200
mov [ esi + 0x86 ] cx
pop esi
pop ebp
retn 0x28
sub_4691dc
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
push edi
or edi 0xffffffff
cmp eax edi
jne r-xdata
or eax 0x10000
push eax
call sub_46e0fb
mov edx [ ebp + 0x2c ]
mov esi eax
mov eax 0x200
cmp edx edi
jne r-xdata
mov eax 0x200042
mov ecx [ ebp + 0x20 ]
cmp ecx edi
jne r-xdata
mov edx eax
mov eax [ ebp + 0x24 ]
cmp eax edi
jne r-xdata
mov ecx 0xc8
push 0x1
push ecx
push [ ebp + 0x10 ]
xor ebx ebx
push eax
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push ebx
push r--data
push edx
push [ ebp + 0x8 ]
call sub_41c619
mov edi [ ebp + 0xc ]
mov ecx eax
mov [ edi ] ecx
test ecx ecx
jne r-xdata
mov eax 0x96
mov eax [ ebp + 0x14 ]
cmp [ eax ] bx
je r-xdata
xor al al
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ SendMessageW@IAT ]
push eax
push ebx
push 0x143
push ecx
call esi
push ebx
push ebx
push 0x14e
push [ edi ]
call esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
mov al 0x1
mov ecx 0x200
mov [ edi + 0x86 ] cx
sub_469293
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xffffffff
push esi
push edi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x14 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x1a0 ] 0x0
jne r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov esi [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ ebp + 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
mov al [ ecx + 0x90 ]
cmp al 0xe
je r-xdata
mov [ edi + 0x92 ] 0x0
mov al 0x1
jmp r-xdata
call [ CreatePopupMenu@IAT ]
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] eax
mov [ edi + 0xc ] eax
cmp [ esi + 0x1a0 ] 0x0
jne r-xdata
cmp al 0xf
je r-xdata
pop edi
pop esi
leave
retn 0x10
cmp al 0x2
je r-xdata
cmp al 0x3
je r-xdata
cmp [ ecx + 0xc ] 0x0
jne r-xdata
call [ CreatePopupMenu@IAT ]
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ edi + 0xc ] eax
mov [ ecx + 0x1a4 ] eax
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
mov eax [ edi + 0xc ]
mov [ ecx + 0xc ] eax
cmp [ edi + 0xc ] 0x0
je r-xdata
sub_46936b
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
sub esp 0x14
push ebx
push esi
or esi 0xffffffff
push edi
cmp eax esi
jne r-xdata
or eax 0x10000
push eax
call sub_46e0fb
mov edx [ ebp + 0x2c ]
mov ebx eax
mov edi 0x200
cmp edx esi
jne r-xdata
push 0x4
pop eax
mov eax [ ebp + 0x20 ]
cmp eax esi
jne r-xdata
mov edx edi
mov ecx [ ebp + 0x24 ]
cmp ecx esi
jne r-xdata
mov eax 0xc8
push 0x1
push ecx
push [ ebp + 0x10 ]
push ecx
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push 0x0
push r--data
push edx
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
push 0x14
pop ecx
mov ecx [ ebp + 0x14 ]
shr bl 0x3
not bl
and bl 0x1
mov al bl
push 0x1
lea edx [ ebp - 0x10 ]
push eax
call sub_4486ae
pop ecx
pop ecx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x1002
push [ esi ]
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov [ esi + 0x86 ] di
pop edi
pop esi
pop ebx
leave
retn 0x28
sub_469424
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
test eax 0x800
je r-xdata
mov eax 0x3010c0
or eax 0x10004
or eax 0x4
jmp r-xdata
mov ecx [ ebp + 0x20 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax 0x200
push eax
call sub_46e0fb
mov esi eax
mov eax [ ebp + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x24 ]
cmp edx 0xffffffff
jne r-xdata
mov ecx 0xc8
xor ebx ebx
inc ebx
push ebx
push ecx
push [ ebp + 0x10 ]
push edx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push r--data
push eax
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov edx 0x96
push eax
call [ GetWindowTextLengthW@IAT ]
push eax
push eax
push 0xb1
push [ esi ]
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al bl
mov [ esi + 0x86 ] bx
pop esi
pop ebx
pop ebp
retn 0x28
sub_4694d3
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x28 ]
push ebx
push esi
or eax 0x20007
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
mov edx [ ebp + 0x20 ]
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
mov esi eax
cmp edx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax 0xffffffff
jne r-xdata
mov edx 0xc8
xor ebx ebx
inc ebx
push ebx
push ecx
push [ ebp + 0x10 ]
push eax
push edx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax 0x96
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x4c ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al bl
mov [ esi + 0x86 ] bx
pop esi
pop ebx
pop ebp
retn 0x28
sub_469567
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
push edi
cmp eax 0xffffffff
jne r-xdata
or eax 0x10003
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
mov ebx [ ebp + 0x20 ]
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
cmp ebx 0xffffffff
jne r-xdata
mov eax 0x100
mov edi [ ebp + 0x24 ]
cmp edi 0xffffffff
jne r-xdata
push 0x20
pop ebx
xor edx edx
push edx
push ecx
push [ ebp + 0x10 ]
push edx
push edx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push edx
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
je r-xdata
push 0x20
pop edi
xor bl bl
mov [ esi + 0x8c ] bx
mov [ esi + 0x8e ] di
mov edi [ ebp + 0x14 ]
xor ebx ebx
xor edx edx
inc ebx
cmp [ edi ] dx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x88 ] ax
mov eax [ ebp + 0x1c ]
sub esp 0x10
mov [ esi + 0x8a ] ax
mov ecx esp
lea eax [ ebp + 0x30 ]
push eax
mov [ ecx + 0x8 ] edx
call sub_4113a0
push edi
push esi
call sub_46e305
test al al
jne r-xdata
lea ecx [ ebp + 0x30 ]
call sub_412570
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn 0x38
mov eax 0x300
mov [ esi + 0x86 ] ax
jmp r-xdata
movsx eax [ esi + 0x8e ]
push ebx
push eax
movsx eax [ esi + 0x8c ]
push eax
movsx eax [ esi + 0x8a ]
push eax
movsx eax [ esi + 0x88 ]
push eax
push [ esi ]
call [ MoveWindow@IAT ]
push [ esi ]
call [ DestroyWindow@IAT ]
sub_469674
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
test eax 0x800
je r-xdata
mov eax 0x80
or eax 0x10000
and eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp + 0x20 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax ebx
push eax
call sub_46e0fb
mov esi eax
mov eax [ ebp + 0x2c ]
mov ebx 0x200
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x24 ]
cmp edx 0xffffffff
jne r-xdata
mov ecx 0xc8
push 0x1
push ecx
push [ ebp + 0x10 ]
push edx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push r--data
push eax
push [ ebp + 0x8 ]
call sub_41c619
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
push 0x14
pop edx
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov [ ecx + 0x86 ] bx
pop esi
pop ebx
pop ebp
retn 0x28
sub_46970b
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
sub esp 0x10
inc eax
neg eax
push ebx
sbb eax eax
and eax [ ebp + 0x28 ]
push esi
push edi
or eax 0x100
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
inc ecx
neg ecx
mov ebx eax
sbb ecx ecx
and ecx [ ebp + 0x2c ]
mov edi [ ebp + 0x8 ]
xor eax eax
inc eax
push eax
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push r--data
push ecx
push edi
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
test bl 0x10
je r-xdata
xor al al
jmp r-xdata
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x4c ] eax
xor eax eax
inc eax
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ edi + 0x60 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ edi + 0x64 ] eax
pop edi
pop esi
pop ebx
leave
retn 0x28
mov [ esi + 0x86 ] ax
sub_4697b2
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
or esi 0xffffffff
push edi
cmp eax esi
jne r-xdata
or eax 0x10001
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
cmp ecx esi
jne r-xdata
mov eax 0xa00002
mov edi [ ebp + 0x20 ]
cmp edi esi
jne r-xdata
mov ecx 0x200
mov ebx [ ebp + 0x24 ]
cmp ebx esi
jne r-xdata
mov edi 0xc8
xor edx edx
inc edx
push edx
push ecx
push [ ebp + 0x10 ]
xor esi esi
push ebx
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push esi
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_41c619
mov edx eax
mov eax [ ebp + 0xc ]
mov [ eax ] edx
test edx edx
jne r-xdata
mov ebx 0x96
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] si
je r-xdata
xor al al
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ecx
push esi
mov esi [ SendMessageW@IAT ]
push 0x180
push edx
call esi
mov eax [ ebp + 0xc ]
push 0x0
push 0x0
push 0x186
push [ eax ]
call esi
mov eax [ ebp + 0xc ]
xor esi esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
push esi
push ebx
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ eax ]
call [ MoveWindow@IAT ]
xor eax eax
inc eax
xor ecx ecx
inc ecx
mov [ eax + 0x86 ] cx
sub_469882
push ebp
mov ebp esp
mov eax 0x202c
call sub_430650
mov eax [ ebp + 0x28 ]
push ebx
push esi
or esi 0xffffffff
push edi
mov edi esi
mov [ ebp - 0x1 ] 0x0
cmp eax esi
jne r-xdata
or eax 0x10001
push eax
call sub_46e0fb
mov ebx [ ebp + 0x2c ]
mov edx eax
cmp ebx esi
jne r-xdata
push 0xc
pop eax
xor eax eax
inc eax
test bl 0x10
je r-xdata
mov ebx 0x220
mov eax [ ebp + 0x20 ]
cmp eax esi
jne r-xdata
mov [ ebp - 0x1 ] al
xor ebx 0x10
mov ecx [ ebp + 0x24 ]
cmp ecx esi
jne r-xdata
mov eax 0x96
push 0x0
push ecx
push [ ebp + 0x10 ]
push ecx
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edx
push r--data
push r--data
push ebx
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx 0x96
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ebx
xor ebx ebx
push ebx
push 0x1036
push [ esi ]
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x188 ] ebx
je r-xdata
push 0x10
push 0x10
push 0x1036
push eax
call [ SendMessageW@IAT ]
or ebx 0x10
pop edi
pop esi
pop ebx
leave
retn 0x28
lea eax [ ebp - 0x2028 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x20 ] ebx
mov ebx [ SendMessageW@IAT ]
mov [ ebp - 0x24 ] 0xf
mov [ ebp + 0x8 ] eax
push 0x13
push ebx
push ebx
push ebx
push ebx
push ebx
push [ esi ]
call [ SetWindowPos@IAT ]
or ecx 0xffffffff
xor eax eax
mov [ esi + 0x94 ] di
mov [ esi + 0x96 ] cx
inc eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x2028 ]
push eax
call sub_4218fb
mov [ ebp + 0x28 ] eax
lea eax [ ebp - 0x2028 ]
mov [ esp ] r--data
push eax
call sub_421914
pop ecx
pop ecx
lea eax [ ebp - 0x2028 ]
push eax
push 0x0
push 0x1057
push [ esi ]
call ebx
mov ecx 0x96
mov [ ebp - 0x1c ] eax
cmp eax ecx
jle r-xdata
mov [ esi + 0x86 ] ax
mov eax [ ebp + 0x28 ]
xor ecx ecx
mov [ ebp + eax * 2 - 0x2028 ] cx
lea eax [ ebp - 0x24 ]
push eax
inc edi
push edi
push 0x1061
push [ esi ]
mov [ ebp - 0x10 ] edi
call ebx
jmp r-xdata
mov [ ebp - 0x1c ] ecx
push rw-data
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2028 ]
push eax
call sub_46d71e
test al al
je r-xdata
sub_469a23
push ebp
mov ebp esp
mov eax 0x2048
call sub_430650
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ebx [ SendMessageW@IAT ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov edi [ eax ]
mov [ esi + 0x34 ] edi
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x93 ]
mov [ esi + 0x93 ] al
xor eax eax
push eax
push eax
push 0x1200
push eax
push eax
push 0x101f
push edi
call ebx
push eax
call ebx
mov edx [ ebp - 0x4 ]
mov [ esi + 0x94 ] ax
mov ecx [ rw-data ]
push 0xfffffff0
mov ecx [ ecx + edx * 4 ]
push edi
mov ecx [ ecx ]
mov [ ebp - 0x8 ] eax
mov [ ecx + 0x94 ] ax
call [ GetWindowLongW@IAT ]
push 0x34
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_421970
add esp 0xc
push 0x0
push 0x0
push 0x1004
push edi
call ebx
mov ecx [ ebp + 0x14 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x88 ] dx
mov [ ebp + 0x14 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x28 ] 0xfffffffe
mov ecx [ ecx + eax * 4 ]
xor esi esi
mov eax [ ecx ]
inc esi
mov eax [ eax + 0x9c ]
mov [ ebp + 0x18 ] esi
cmp eax 0xffffffff
jle r-xdata
xor al al
jmp r-xdata
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x2048 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x24 ] eax
push rw-data
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x2048 ]
push eax
mov [ ebp - 0x40 ] edx
call sub_46d71e
lea eax [ ebp - 0x44 ]
push eax
push 0x0
push 0x104d
push edi
call ebx
mov [ ebp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x28 ] eax
pop edi
pop esi
pop ebx
leave
retn 0x14
push rw-data
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x2048 ]
push eax
call sub_46d71e
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x93 ] 0xff
je r-xdata
mov [ ebp - 0x3c ] esi
cmp esi [ ebp - 0x8 ]
jge r-xdata
mov al 0x1
mov ecx [ rw-data ]
mov eax [ ebp - 0x4 ]
push 0x1
mov ecx [ ecx + eax * 4 ]
push [ ecx ]
push [ ebp - 0x10 ]
call sub_46ddee
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x10 ]
push 0x1008
push edi
call ebx
jmp r-xdata
cmp [ ebp - 0x2048 ] 0x0
je r-xdata
test [ ebp - 0xc ] 0x1
je r-xdata
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x10 ]
push 0x1074
push edi
call ebx
test eax eax
je r-xdata
inc esi
mov [ ebp + 0x18 ] esi
jmp r-xdata
lea eax [ ebp - 0x2048 ]
push eax
push 0x0
push 0x1057
push edi
call ebx
lea esi [ eax + 0xc ]
mov eax 0x96
cmp esi eax
jle r-xdata
push 0x0
push [ ebp + 0x18 ]
push 0x101d
push edi
call ebx
cmp eax esi
jg r-xdata
mov esi eax
mov esi [ ebp + 0x18 ]
movzx eax si
mov esi [ ebp + 0x18 ]
push eax
push esi
push 0x101e
push edi
call ebx
jmp r-xdata
sub_469c50
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push 0x2c
lea eax [ ebp - 0x30 ]
push 0x0
push eax
mov [ ebp - 0x34 ] 0x30
call sub_421970
add esp 0xc
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x14 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x19c ]
test ecx ecx
jne r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
mov esi [ eax ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
mov edi [ ebp + 0xc ]
add edi 0xc
mov [ edi ] ecx
jmp r-xdata
call [ CreateMenu@IAT ]
push eax
push [ esi ]
mov [ esi + 0x19c ] eax
call [ SetMenu@IAT ]
mov ecx [ esi + 0x19c ]
mov [ esi + 0x1a4 ] ecx
mov edi [ ebp + 0xc ]
add edi 0xc
mov [ edi ] edx
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0xc
je r-xdata
call [ CreatePopupMenu@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
push 0x0
push [ ebp + 0x14 ]
mov [ ebp - 0x30 ] 0x4
push edx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x34 ]
push eax
push 0x1
push [ ebp + 0x1c ]
mov [ ebp - 0x30 ] 0x16
push [ edi ]
mov [ ebp - 0x20 ] ebx
call [ InsertMenuItemW@IAT ]
cmp [ esi + 0x3a ] 0x0
jne r-xdata
push [ edi ]
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ edi ] eax
mov [ esi + 0x1a4 ] ebx
mov al 0x1
jmp r-xdata
push [ esi ]
call [ DrawMenuBar@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x18
sub_469d97
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
push 0x2c
xor ebx ebx
lea eax [ ebp - 0x34 ]
push ebx
push eax
mov [ ebp - 0x38 ] 0x30
call sub_421970
add esp 0xc
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x14 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x1a4 ] ebx
je r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov edi [ eax ]
cmp [ edi + 0x1a4 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x19c ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x34 ] 0x13
mov [ ebp - 0x30 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0xe
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] bx
je r-xdata
mov [ ebp - 0x30 ] 0x200
cmp [ esi + 0xc ] ebx
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
push ebx
push [ ebp + 0x14 ]
mov [ ebp - 0x34 ] 0x4
push [ esi + 0xc ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x30 ] 0x800
mov [ ebp - 0x14 ] eax
jmp r-xdata
push [ esi + 0xc ]
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x88 ] bx
cmp [ edi + 0x3a ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x38 ]
push eax
push 0x1
push ebx
push [ esi + 0xc ]
call [ InsertMenuItemW@IAT ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
push [ edi ]
call [ DrawMenuBar@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x1c
sub_469ee3
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
sub esp 0x24
inc eax
neg eax
push ebx
sbb eax eax
and eax [ ebp + 0x28 ]
push esi
push edi
or eax 0x10000
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
cmp ecx 0xffffffff
jne r-xdata
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
inc esi
push 0x1
neg esi
sbb esi esi
and esi [ ebp + 0x20 ]
push ecx
push [ ebp + 0x10 ]
inc edi
neg edi
sbb edi edi
and edi [ ebp + 0x24 ]
push edi
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push 0x0
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_41c619
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
test eax eax
jne r-xdata
mov ecx 0x200
test esi esi
mov esi [ SendMessageW@IAT ]
je r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x1009
push eax
call esi
push 0x4
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x0
push [ ebx ]
call [ SetWindowPos@IAT ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x28
mov al 0x1
mov ecx 0x300
mov [ ebx + 0x86 ] cx
mov ecx [ ebp + 0x14 ]
push 0x1
push 0x1
lea edx [ ebp - 0x20 ]
call sub_4486ae
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x1002
push [ ebx ]
call esi
cmp [ rw-data ] 0x0
jne r-xdata
sub_469fc4
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
push edi
or eax 0xe
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
inc ecx
mov ebx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
xor esi esi
push esi
push ecx
push [ ebp + 0x10 ]
push esi
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push esi
push r--data
push ecx
push ebx
call sub_41c619
mov edi [ ebp + 0xc ]
mov [ edi ] eax
test eax eax
je r-xdata
mov eax 0x100
xor al al
cmp [ ebp + 0x20 ] 0xffffffff
mov eax 0x96
jne r-xdata
cmp [ ebp + 0x24 ] 0xffffffff
jne r-xdata
mov [ ebp + 0x20 ] eax
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp + 0x24 ] eax
lea eax [ ebp + 0x24 ]
push eax
lea eax [ ebp + 0x20 ]
push eax
push [ ebp + 0x14 ]
push edi
call sub_46e541
test eax eax
je r-xdata
mov eax 0x300
mov [ edi + 0x86 ] ax
push [ edi ]
call [ DestroyWindow@IAT ]
push esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ edi ]
call [ MoveWindow@IAT ]
push esi
call [ CreateCompatibleDC@IAT ]
push 0x0
push 0x0
push 0x173
push [ edi ]
mov esi eax
call [ SendMessageW@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
push 0x0
push 0x0
push esi
call [ GetPixel@IAT ]
push esi
mov edi eax
call [ DeleteDC@IAT ]
push 0xffffffec
push [ ebx ]
call [ GetWindowLongW@IAT ]
test eax 0x80000
je r-xdata
mov al 0x1
jmp r-xdata
push 0x1
push 0x0
push edi
push [ ebx ]
call [ SetLayeredWindowAttributes@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
sub_46a0d6
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
inc eax
neg eax
push esi
sbb eax eax
and eax [ ebp + 0x28 ]
push edi
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
xor esi esi
push esi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push esi
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_41c619
mov edi [ ebp + 0xc ]
mov [ edi ] eax
test eax eax
jne r-xdata
push ebx
mov ebx 0xff000000
push ebx
push esi
mov esi [ SendMessageW@IAT ]
push 0x2001
push eax
call esi
push ebx
xor ebx ebx
push ebx
push 0x409
push [ edi ]
call esi
push ebx
push ebx
push 0x402
push [ edi ]
call esi
push 0x640000
push ebx
push 0x401
push [ edi ]
call esi
push ebx
inc ebx
push ebx
push 0x404
push [ edi ]
call esi
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al bl
pop ebx
mov [ edi + 0x86 ] bx
pop edi
pop esi
pop ebp
retn 0x28
sub_46a189
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x28 ]
or eax 0x9
push eax
call sub_46e0fb
mov edx [ ebp + 0x8 ]
mov ecx eax
cmp [ edx + 0x69 ] 0x0
jne r-xdata
mov eax [ ebp + 0x2c ]
push esi
push 0x1
push ecx
push [ ebp + 0x10 ]
inc eax
push [ ebp + 0x24 ]
neg eax
push [ ebp + 0x20 ]
sbb eax eax
push [ ebp + 0x1c ]
and eax [ ebp + 0x2c ]
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x14 ]
push r--data
push eax
push edx
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
or ecx 0x10000
mov [ edx + 0x69 ] 0x1
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x4c ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ecx 0x200
mov [ esi + 0x86 ] cx
pop esi
pop ebp
retn 0x28
sub_46a217
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
xor ecx ecx
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
push edi
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
xor edi edi
push edi
push ecx
push [ ebp + 0x10 ]
mov ebx eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push edi
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_41c619
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
push edi
push edi
mov edi [ SendMessageW@IAT ]
push 0x405
push eax
call edi
test bl 0x1
je r-xdata
xor al al
jmp r-xdata
xor eax eax
inc eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x640000
push 0x0
push 0x406
push [ esi ]
call edi
push 0x0
push 0xa
push 0x414
push [ esi ]
call edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
mov [ esi + 0x86 ] ax
sub_46a2b9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x188 ] 0x0
je r-xdata
mov eax [ ebp + 0x28 ]
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x28 ]
push ebx
or eax 0x4014000
push eax
call sub_46e0fb
mov ecx [ ebp + 0x2c ]
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
mov edx eax
mov eax [ ebp + 0x20 ]
mov ebx 0x96
cmp eax 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
push edi
mov edi [ ebp + 0x24 ]
cmp edi 0xffffffff
jne r-xdata
mov eax ebx
mov [ ebp + 0x20 ] eax
pop esi
pop ebp
retn 0x28
push 0x1
push ecx
push [ ebp + 0x10 ]
push edi
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edx
push r--data
push r--data
push ecx
push esi
call sub_41c619
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
test eax eax
jne r-xdata
mov edi ebx
push 0x20
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0xffffffff
push eax
call [ SetWindowPos@IAT ]
mov eax [ ebx ]
or [ esi + 0x18c ] 0xffffffff
or [ esi + 0x190 ] 0xffffffff
and [ esi + 0x194 ] 0x0
mov [ esi + 0x188 ] eax
mov [ esi + 0x198 ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ecx 0x300
mov [ ebx + 0x86 ] cx
pop edi
pop ebx
sub_46a395
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x188 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
push ebx
xor ebx ebx
cmp [ eax ] bx
je r-xdata
xor al al
jmp r-xdata
mov eax [ esi + 0x194 ]
cmp [ esi + 0x38 ] bl
je r-xdata
inc [ esi + 0x18c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x18c ]
mov [ ebp - 0x1c ] 0x9
push 0x133e
push ecx
call [ SendMessageW@IAT ]
mov ecx [ esi + 0x18c ]
mov [ esi + 0x190 ] ecx
mov ecx [ ebp + 0xc ]
or edx 0xffffffff
mov [ esi + 0x198 ] 0x1
mov [ ecx + 0x88 ] dx
mov al 0x1
jmp r-xdata
pop esi
leave
retn 0x10
push eax
push esi
mov ecx rw-data
call sub_46e1a7
mov [ esi + 0x198 ] bl
cmp [ esi + 0x38 ] bl
je r-xdata
mov eax [ esi + 0x190 ]
or [ esi + 0x190 ] 0xffffffff
pop ebx
xor al al
push 0x1
push ebx
push [ esi ]
call [ InvalidateRect@IAT ]
sub_46a44d
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
xor bl bl
push edi
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_46e0fb
mov ecx eax
xor eax eax
mov edx 0x100
inc eax
test edx ecx
je r-xdata
push 0x37
pop eax
mov eax [ ebp + 0x2c ]
mov esi [ ebp + 0x20 ]
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x2c ]
mov edi 0x96
cmp esi 0xffffffff
jne r-xdata
xor ecx edx
mov bl al
mov edx [ ebp + 0x24 ]
cmp edx 0xffffffff
jne r-xdata
mov esi edi
push 0x0
push ecx
push [ ebp + 0x10 ]
push edx
push esi
push [ ebp + 0x1c ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push ecx
push r--data
push r--data
push eax
push esi
call sub_41c619
mov edi [ ebp + 0xc ]
mov [ edi ] eax
test eax eax
jne r-xdata
mov edx edi
xor ecx ecx
cmp [ esi + 0x188 ] ecx
je r-xdata
xor al al
jmp r-xdata
mov eax [ edi ]
mov [ esi + 0x1ac ] eax
test bl bl
je r-xdata
push 0x13
push ecx
push ecx
push ecx
push ecx
push ecx
push eax
call [ SetWindowPos@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
cmp [ esi + 0x38 ] 0x0
je r-xdata
push 0xfffffff0
push [ edi ]
mov [ edi + 0x90 ] 0x10
call [ GetWindowLongW@IAT ]
or eax 0x100
push eax
push 0xfffffff0
push [ edi ]
call [ SetWindowLongW@IAT ]
or [ esi + 0x1b4 ] 0xffffffff
or [ esi + 0x1b8 ] 0xffffffff
xor eax eax
inc eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esi + 0x1c ]
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp + 0x2c ]
push eax
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_40cf2c
push [ ebp + 0x28 ]
push [ ebp + 0x2c ]
call sub_41acd1
cmp ebx 0xffffffff
je r-xdata
mov [ edi + 0x86 ] ax
push ebx
push [ ebp + 0x2c ]
call sub_41acd1
sub_46a578
push ebp
mov ebp esp
sub esp 0x78
lea eax [ ebp - 0xc ]
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
xor ecx ecx
mov ebx [ eax ]
cmp [ ebx + 0x1ac ] ecx
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebx + 0x1b4 ]
mov [ ebp - 0x34 ] 0x5
test eax eax
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
mov [ ebp - 0x34 ] 0x27
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
cmp [ ebx + 0x1b8 ] ecx
jl r-xdata
mov eax [ ebx + 0x1b8 ]
test eax eax
js r-xdata
mov [ ebp - 0x18 ] eax
test eax eax
js r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x10 ]
push 0xa
mov [ ebp - 0x10 ] eax
pop ecx
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x6c ]
[ edi ] [ esi ]
mov eax [ ebx + 0x1b0 ]
mov [ ebp - 0x70 ] 0xffff0001
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov dl [ eax + 0x90 ]
cmp dl 0x10
jne r-xdata
mov [ ebp - 0x70 ] eax
mov ecx [ eax + 0x34 ]
mov ecx [ eax ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] 0xffff0000
jmp r-xdata
mov [ ebp + 0x18 ] ecx
cmp dl 0x10
jne r-xdata
mov esi [ SendMessageW@IAT ]
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x74 ]
push eax
push 0x0
push 0x1132
push ecx
call esi
push 0x0
push 0x0
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x18 ]
push 0x1105
push eax
mov [ edi + 0x34 ] eax
call esi
mov [ edi + 0x88 ] ax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x1b0 ] eax
mov al 0x1
sub_46a698
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
test al 0xc
jne r-xdata
push 0x4
pop eax
push ebx
push esi
push edi
or eax 0x2
push eax
call sub_46e0fb
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ecx
push [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push eax
push ebx
push r--data
push ebx
push esi
call sub_41c619
mov edi eax
test edi edi
je r-xdata
or eax 0x4
xor al al
push [ ebp + 0x14 ]
call sub_422d13
pop ecx
call sub_471de0
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp + 0x18 ]
push ecx
push eax
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
push edi
call [ DestroyWindow@IAT ]
mov ecx [ ebp + 0x18 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov eax [ esi ]
cmp eax [ ecx ]
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x3
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ SendMessageW@IAT ]
mov [ ecx ] edi
mov eax [ rw-data ]
push ebx
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
mov eax [ eax ]
push eax
push 0x469
push edi
mov [ ecx + 0x34 ] eax
call esi
push 0x80017fff
push ebx
push 0x465
push edi
call esi
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_46a773
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push [ ebp + 0x10 ]
mov eax [ eax + ecx * 4 ]
push [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ SendMessageW@IAT ]
xor eax eax
jmp r-xdata
leave
retn 0x10
sub_46a7b7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push sub_46e769
push 0xfffffffc
push [ esi ]
call [ SetWindowLongW@IAT ]
mov [ esi + 0x8 ] eax
sub_46a7e0
push ebp
mov ebp esp
sub esp 0x38
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ eax + ecx * 4 ]
mov ecx [ edx ]
movzx eax [ ecx + 0x90 ]
cmp eax 0x10
jg r-xdata
xor al al
jmp r-xdata
cmp eax 0x11
je r-xdata
je r-xdata
leave
retn 0x8
mov ecx [ ecx + 0x10 ]
jle r-xdata
mov ecx [ ecx ]
jmp r-xdata
test eax eax
js r-xdata
cmp eax 0x13
jle r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
cmp eax 0xa
jle r-xdata
cmp eax 0x15
jle r-xdata
cmp eax 0xc
je r-xdata
cmp eax 0x1c
jg r-xdata
mov ecx [ ecx + 0xc ]
jmp r-xdata
cmp eax 0xe
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x38 ] 0x30
mov [ ebp - 0x34 ] 0x4
push [ ecx + 0xc ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] eax
jmp r-xdata
mov al 0x1
sub_46a88f
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x13
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ eax + 0x92 ]
movsx eax [ eax + 0x96 ]
jmp r-xdata
leave
retn 0x4
sub_46a8dc
push ebp
mov ebp esp
sub esp 0xc8
lea eax [ ebp - 0x8 ]
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x78 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ebx [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
or [ ebx ] 0xffffffff
mov ecx [ eax ]
xor edi edi
movzx eax [ ecx + 0x90 ]
mov esi [ ecx ]
mov [ ebp - 0x8 ] ecx
mov [ ebp + 0xc ] esi
cmp eax 0x11
jg r-xdata
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
jmp r-xdata
cmp eax 0x12
je r-xdata
je r-xdata
xor eax eax
xor edi edi
push edi
push edi
push 0x400
cmp eax 0x13
je r-xdata
mov eax [ ecx + 0x10 ]
push 0xfffffff0
push [ ecx + 0x34 ]
xor edi edi
mov [ ebp - 0x2c ] eax
mov [ ebx ] edi
call [ GetWindowLongW@IAT ]
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x30 ] 0x8
mov [ ebp - 0x24 ] 0xf000
je r-xdata
cmp eax 0xa
jg r-xdata
push 0x2
push 0xffffffff
push 0x100c
push esi
mov esi [ SendMessageW@IAT ]
call esi
push 0x34
mov [ ebx ] eax
xor edi edi
lea eax [ ebp - 0x64 ]
push edi
push eax
call sub_421970
mov eax [ ebx ]
add esp 0xc
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x64 ]
push eax
push edi
push 0x104b
push [ ebp + 0xc ]
mov [ ebp - 0x64 ] 0x4
call esi
neg eax
sbb eax eax
and eax [ ebp - 0x44 ]
jmp r-xdata
cmp eax 0x14
je r-xdata
mov esi [ ebp - 0x8 ]
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x113e
push [ esi + 0x34 ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x2000
call sub_42010a
mov esi [ ebp - 0x8 ]
pop ecx
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x113e
push [ esi + 0x34 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
je r-xdata
mov [ ebx ] eax
or [ ebx ] 0xffffffff
push 0xffffffec
push [ ecx + 0x34 ]
call [ GetWindowLongW@IAT ]
push 0x34
mov [ ebp + 0xc ] eax
xor edi edi
lea eax [ ebp - 0x64 ]
push edi
push eax
call sub_421970
mov eax [ ebp + 0x8 ]
mov esi [ ebp - 0x8 ]
add esp 0xc
mov [ ebp - 0x88 ] eax
lea eax [ ebp - 0x90 ]
push eax
push 0xffffffff
push 0x1053
push [ esi + 0x34 ]
mov [ ebp - 0x90 ] 0x1
call [ SendMessageW@IAT ]
mov [ ebp - 0x60 ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0x15
je r-xdata
mov ecx [ ebp - 0x28 ]
mov edx 0x100
test [ ebp + 0x8 ] edx
je r-xdata
mov [ ebp - 0x1c ] 0xfff
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] 0x1
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
and [ ebx ] edi
jmp r-xdata
cmp eax 0xd
jle r-xdata
xor edi edi
push edi
push edi
mov edi [ SendMessageW@IAT ]
push 0x130b
push esi
call edi
cmp [ ebp + 0x10 ] 0x0
mov [ ebx ] eax
je r-xdata
sub eax edi
je r-xdata
test [ ebp + 0xc ] 0x4
je r-xdata
lea esi [ ecx + 0x70 ]
push 0x4
mov ecx esi
mov [ ebp + 0x10 ] esi
call sub_40d2c0
mov ecx esi
test al al
je r-xdata
cmp eax 0x18
jle r-xdata
test cl 0x2
je r-xdata
mov eax ecx
shr eax 0xc
dec eax
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
mov [ ebx ] eax
push ebx
mov eax ebx
jmp r-xdata
push edi
push edi
push 0xe
push esi
call [ SendMessageW@IAT ]
lea edi [ eax + 0x1 ]
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push edi
mov esi eax
push esi
push [ ebp + 0xc ]
call [ GetWindowTextW@IAT ]
jmp r-xdata
cmp eax 0xf
jle r-xdata
lea ecx [ ebp - 0x94 ]
push ecx
push eax
push 0x133c
push esi
mov [ ebp - 0x94 ] 0x8
call edi
mov eax [ ebp - 0x7c ]
jmp r-xdata
push edi
push edi
push 0x147
push esi
call [ SendMessageW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
dec eax
je r-xdata
push 0x2000
call sub_42010a
mov ebx eax
pop ecx
mov edx ebx
xor ecx ecx
cmp cx [ esi + 0x94 ]
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4c ] 0xfff
mov eax edi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_40cdb4
jmp r-xdata
call sub_4084a6
mov eax [ esi + 0x8 ]
xor ecx ecx
mov eax [ eax + 0x4 ]
push 0x2
inc eax
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov ecx esi
mov edi eax
call sub_4084a6
mov ecx [ esi + 0x8 ]
mov ebx [ ebp + 0x10 ]
mov esi [ ecx + 0x4 ]
mov ecx ebx
call sub_4084a6
mov edx [ ebx + 0x8 ]
lea ecx [ esi + 0x1 ]
mov edx [ edx ]
push ecx
mov ecx edi
call sub_403b1e
pop ecx
mov eax edi
jmp r-xdata
cmp eax 0x1a
jle r-xdata
test cl 0x20
je r-xdata
or [ ebx ] edx
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax esi
jmp r-xdata
push [ ecx + 0xc ]
call [ IsMenu@IAT ]
test eax eax
je r-xdata
cmp eax 0x10
jne r-xdata
push edi
mov edi [ SendMessageW@IAT ]
push ebx
push 0x149
push esi
call edi
xor ecx ecx
push 0x2
inc eax
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov esi eax
push esi
push ebx
push 0x148
jmp r-xdata
push edi
push edi
push 0x188
push esi
call [ SendMessageW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub eax 0x7
jne r-xdata
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x64 ]
push eax
push edi
push 0x104b
push [ esi + 0x34 ]
mov [ ebp - 0x50 ] edx
jl r-xdata
lea eax [ ebp - 0x64 ]
push eax
push edi
push 0x104b
push [ esi + 0x34 ]
mov [ ebp - 0x64 ] 0x8
mov [ ebp - 0x54 ] 0xf000
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] 0x0
push edi
push edi
je r-xdata
cmp eax 0x1c
jne r-xdata
test cl 0x10
je r-xdata
or [ ebx ] 0x400
push 0x208
call sub_42010a
cmp [ ebp + 0x10 ] 0x0
mov esi [ ebp - 0x8 ]
mov edi eax
pop ecx
lea eax [ ebp - 0xc4 ]
mov [ ebp + 0xc ] edi
mov [ ebp - 0xc4 ] 0x30
push eax
je r-xdata
xor edi edi
push edi
push 0x9
push 0x110a
push esi
mov [ ebx ] edi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call edi
push edi
mov edi [ SendMessageW@IAT ]
push ebx
push 0x18a
push esi
call edi
xor ecx ecx
push 0x2
inc eax
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
mov esi eax
push esi
push ebx
push 0x189
push edi
push edi
push 0x408
jmp r-xdata
call [ SendMessageW@IAT ]
push [ ebp + 0x10 ]
call sub_4218fb
pop ecx
mov ecx 0xffe
sub ecx eax
mov [ ebp - 0x4c ] ecx
test ecx ecx
jle r-xdata
call [ SendMessageW@IAT ]
jmp r-xdata
mov eax [ ebp - 0x58 ]
shr eax 0xc
dec eax
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
jmp r-xdata
push 0xf0
push esi
call [ SendMessageW@IAT ]
mov [ ebx ] eax
test eax eax
jne r-xdata
push 0xe
push esi
call [ SendMessageW@IAT ]
lea esi [ eax + 0x1 ]
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push esi
push eax
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
call [ GetWindowTextW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
xor edi edi
push edi
push 0x1001
push esi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
or [ ebx ] 0x200
jmp r-xdata
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0xc0 ] 0x1
push [ esi + 0xc ]
call [ GetMenuItemInfoW@IAT ]
push edi
test eax eax
je r-xdata
mov [ ebp - 0xa0 ] edi
xor edi edi
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0xc0 ] 0x10
push [ esi + 0xc ]
mov [ ebp - 0x9c ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] 0x4
je r-xdata
push esi
call [ SendMessageW@IAT ]
push ebx
call sub_4218fb
pop ecx
lea ecx [ ebx + eax * 2 ]
mov ax [ rw-data ]
mov [ ecx ] ax
xor eax eax
push ecx
mov [ ecx + 0x2 ] ax
call [ CharNextW@IAT ]
movsx ecx [ esi + 0x94 ]
mov edx eax
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
inc eax
cmp eax ecx
mov [ ebx ] 0x4
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov [ ebx ] edi
jmp r-xdata
mov [ ebx ] edi
jmp r-xdata
push 0x16
call sub_42010a
movzx ecx [ ebp - 0x6e ]
push ecx
movzx ecx [ ebp - 0x72 ]
push ecx
movzx ecx [ ebp - 0x74 ]
push ecx
mov esi eax
push r--data
push esi
call [ wsprintfW@IAT ]
add esp 0x18
jmp r-xdata
call j_sub_4228ca#2
pop ecx
jmp r-xdata
call j_sub_4228ca#2
pop ecx
mov ecx [ ebp - 0xb8 ]
mov al cl
and al 0x3
movsx eax al
neg eax
sbb eax eax
and eax 0x40
add eax 0x40
mov [ ebx ] ecx
test ecx 0x8080
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ ebx ] edi
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x113e
push esi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x2000
call sub_42010a
pop ecx
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x113e
push esi
test cl 0x8
je r-xdata
or eax 0x100
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0x4
or eax 0x1
jmp r-xdata
or eax 0x200
jmp r-xdata
test ecx 0x1000
je r-xdata
sub_46afee
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
xor esi esi
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x14 ]
sub eax esi
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
dec eax
je r-xdata
leave
retn 0x24
push [ ebp + 0x28 ]
push [ ebp + 0x10 ]
jmp r-xdata
dec eax
jne r-xdata
push [ ebp + 0xc ]
push ecx
call [ SendMessageW@IAT ]
mov esi eax
mov eax esi
pop esi
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ SendMessageW@IAT ]
mov edx [ ebp + 0x18 ]
mov ecx [ ebp - 0x18 ]
mov [ edx ] ecx
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
mov [ edx ] ecx
mov edx [ ebp + 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x24 ]
mov esi eax
mov eax [ ebp - 0xc ]
mov [ ecx ] eax
jmp r-xdata
sub_46b086
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov eax [ rw-data ]
push esi
mov esi [ ebp - 0x4 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x90 ] 0x13
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
add ecx 0x24
call sub_40c935
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
mov al [ ebp + 0x10 ]
mov [ ecx + 0x98 ] al
xor eax eax
inc eax
xor eax eax
jmp r-xdata
leave
retn 0xc
pop esi
sub_46b0e9
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
xor esi esi
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x90 ] 0x15
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
add ecx 0x70
call sub_40d89e
push 0x0
push [ ebp + 0x8 ]
call sub_46de72
movzx esi al
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_412570
mov eax esi
pop esi
leave
retn 0x14
sub_46b14a
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x8 ]
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
lea ecx [ ebp + 0xc ]
mov edi [ eax ]
mov esi [ edi ]
mov bl [ edi + 0x90 ]
mov [ ebp - 0x8 ] esi
mov [ ebp + 0xb ] bl
call sub_41a63d
cmp [ edi + 0x48 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
movzx eax bl
mov ebx [ ebp + 0xc ]
cmp eax 0x12
jg r-xdata
push [ edi + 0x48 ]
call sub_46cf4e
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp eax 0x13
je r-xdata
je r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx 0xfffffffe
je r-xdata
cmp eax 0x14
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
jl r-xdata
test eax eax
je r-xdata
mov eax 0xfe000000
cmp ebx eax
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
js r-xdata
cmp eax 0x17
je r-xdata
push 0x1
push eax
mov [ edi + 0x48 ] eax
call sub_41b650
test [ edi + 0x92 ] 0x20
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jns r-xdata
jle r-xdata
push ebx
push 0x0
push 0x1001
push esi
mov esi [ SendMessageW@IAT ]
call esi
push ebx
push 0x0
push 0x1026
push [ ebp - 0x8 ]
call esi
push 0x1
push eax
mov [ edi + 0x48 ] eax
call sub_41b650
jmp r-xdata
push 0x1
push eax
mov [ edi + 0x48 ] eax
call sub_41b650
push 0x1
push 0x0
push [ edi + 0x34 ]
call [ InvalidateRect@IAT ]
jmp r-xdata
push 0x1
push ebx
mov [ edi + 0x48 ] ebx
call sub_41b650
jmp r-xdata
cmp eax 0x18
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ShowWindow@IAT ]
push 0x0
push [ edi ]
call esi
push 0x5
push [ edi ]
call esi
push [ edi ]
call [ SetFocus@IAT ]
jmp r-xdata
jmp r-xdata
cmp eax 0x4
jle r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xb ] 0x8
jne r-xdata
push 0x1
push edi
push [ ebp - 0x4 ]
call sub_46ddee
test ebx ebx
js r-xdata
jle r-xdata
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
or eax 0xb
push eax
push 0xfffffff0
push esi
call [ SetWindowLongW@IAT ]
cmp eax 0x1b
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp eax 0x10
je r-xdata
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x2001
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp eax 0x11
jne r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x111d
jmp r-xdata
push esi
call [ SendMessageW@IAT ]
jmp r-xdata
sub_46b354
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x8 ]
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
lea ecx [ ebp + 0xc ]
mov edi [ eax ]
mov esi [ edi ]
mov bl [ edi + 0x90 ]
call sub_41a63d
movzx eax bl
cmp eax 0x13
jg r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x14
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0xc ]
push 0x1
push 0x0
push [ edi + 0x34 ]
mov [ edi + 0x4c ] eax
call [ InvalidateRect@IAT ]
cmp eax 0x17
je r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x1024
test eax eax
js r-xdata
xor eax eax
inc eax
cmp bl 0x8
je r-xdata
mov eax [ ebp + 0xc ]
push 0x1
push edi
push [ ebp + 0x8 ]
mov [ edi + 0x4c ] eax
call sub_46ddee
jmp r-xdata
cmp eax 0x18
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x4
jle r-xdata
or eax 0xffffffff
jmp r-xdata
cmp bl 0x4
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
or eax 0xb
push eax
push 0xfffffff0
push esi
call [ SetWindowLongW@IAT ]
jle r-xdata
cmp eax 0x8
je r-xdata
cmp bl 0x1a
je r-xdata
cmp eax 0x1b
jle r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x409
jmp r-xdata
cmp eax 0x10
je r-xdata
cmp bl 0x19
jne r-xdata
jmp r-xdata
push esi
call [ SendMessageW@IAT ]
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x111e
jmp r-xdata
cmp eax 0x11
jne r-xdata
sub_46b48d
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov ax [ ebp + 0xc ]
push ecx
mov [ ecx + 0x84 ] ax
call sub_46a7b7
xor eax eax
inc eax
xor eax eax
jmp r-xdata
leave
retn 0x8
sub_46b4d4
push ebp
mov ebp esp
mov eax 0x2110
call sub_430650
push ebx
push esi
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
xor esi esi
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x1c ]
mov edx [ eax ]
mov eax [ rw-data ]
mov [ ebp - 0x8 ] edx
mov eax [ eax + ecx * 4 ]
mov ebx [ eax ]
mov al [ ebx + 0x90 ]
mov edi [ ebx ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x18 ] 0x143
mov [ ebp - 0x10 ] 0x158
mov [ ebp - 0xc ] 0x14e
mov [ ebp - 0x14 ] 0x14b
cmp al 0x1
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp [ ebp + 0xc ] esi
je r-xdata
movzx eax [ eax + lookup_table_46ba44 ]
jmp [ eax * 4 + jump_table_46ba10 ]
mov [ ebp - 0x18 ] 0x180
mov [ ebp - 0x10 ] 0x1a2
mov [ ebp - 0xc ] 0x186
mov [ ebp - 0x14 ] 0x184
jmp r-xdata
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0xc ]
push edi
call [ SetWindowTextW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
push esi
push [ ebp + 0xc ]
call sub_422d13
pop ecx
call sub_471de0
push eax
push 0x402
push [ ebp + 0xc ]
call sub_422d13
pop ecx
call sub_471de0
push eax
push 0x1
push 0x405
jmp r-xdata
push [ ebp + 0xc ]
call sub_422d13
pop ecx
call sub_471de0
mov [ ebx + 0x4c ] eax
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x1
push 0x1
lea edx [ ebp - 0x2c ]
call sub_4486ae
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push esi
push 0x1002
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebx + 0x34 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x108 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xfc ] eax
lea eax [ ebp - 0x10c ]
push eax
push esi
push 0x113f
push [ ebx + 0x34 ]
mov [ ebp - 0x10c ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xd8 ] eax
lea eax [ ebp - 0xe4 ]
push eax
movzx eax [ ebx + 0x93 ]
push eax
push 0x133d
push [ edx + 0x188 ]
xor edi edi
inc edi
mov [ ebp - 0xe4 ] edi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x208
call sub_42010a
pop ecx
mov edi eax
lea eax [ ebp - 0xb0 ]
push eax
push esi
push [ ebp + 0x8 ]
mov [ ebp - 0xb0 ] 0x30
push [ ebx + 0xc ]
mov [ ebp - 0xac ] 0x10
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x88 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
cmp al 0x3
jbe r-xdata
mov eax [ ebp - 0x8 ]
push 0x1
push ebx
push eax
call sub_46ddee
push eax
push 0xffffffff
push [ ebp - 0x10 ]
push edi
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
inc eax
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
push [ ebp + 0xc ]
push edi
call [ SetWindowTextW@IAT ]
push 0xf423f
push 0xf4240
push 0xb1
push edi
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c4 ] 0xffffffff
jmp r-xdata
cmp [ ecx ] si
je r-xdata
jmp r-xdata
push 0x20
lea eax [ ebp - 0x80 ]
push esi
push eax
call sub_421970
add esp 0xc
mov [ ebp + 0xc ] ebx
push 0x34
lea eax [ ebp - 0x60 ]
push esi
push eax
call sub_421970
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0xc0 ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0xffffffff
push 0x1053
push ebx
mov [ ebp - 0xc8 ] 0x1
call [ SendMessageW@IAT ]
mov [ ebp - 0x5c ] eax
cmp eax 0xffffffff
je r-xdata
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ ebx + 0x93 ] 0xff
je r-xdata
push edi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
test [ ebp - 0xa8 ] 0x800
jne r-xdata
movzx eax al
cmp eax 0x1c
ja r-xdata
cmp [ ecx ] si
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
movzx ecx [ eax ]
cmp cx [ rw-data ]
je r-xdata
push esi
push eax
push [ ebp - 0xc ]
push edi
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x8 ]
push 0x1
push ebx
push eax
call sub_46ddee
jmp r-xdata
push [ ebp + 0xc ]
push 0x1
push 0xc2
jmp r-xdata
push ebx
call sub_4218fb
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x210c ] 0x0
lea eax [ ebp - 0x210c ]
mov [ ebp - 0x80 ] 0x4
mov [ ebp - 0x74 ] eax
je r-xdata
mov [ ebp + 0xc ] edi
mov eax [ ebp - 0x8 ]
push edi
push esi
push [ eax ]
call [ InvalidateRect@IAT ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0xb0 ]
push eax
push esi
push [ ebp + 0x8 ]
push [ ebx + 0xc ]
call [ SetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push eax
call [ CharNextW@IAT ]
mov ebx [ SendMessageW@IAT ]
push esi
push esi
push [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
jmp r-xdata
test cx cx
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x80 ]
push eax
push esi
push 0x1060
jmp r-xdata
push ebx
call sub_4218fb
mov ax [ ebx + eax * 2 - 0x2 ]
pop ecx
cmp ax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
lea eax [ ebp - 0x80 ]
push eax
push esi
push 0x1060
push edi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push edi
call sub_4218fb
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x210c ] 0x0
lea eax [ ebp - 0x210c ]
mov [ ebp - 0x60 ] 0x1
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x58 ] esi
je r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
call [ DrawMenuBar@IAT ]
push edi
call j_sub_4228ca#2
pop ecx
jmp r-xdata
push edi
call ebx
jmp r-xdata
mov ebx [ SendMessageW@IAT ]
push edi
push rw-data
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x210c ]
push eax
call sub_46d71e
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] esi
push 0x1074
push ebx
jmp r-xdata
push edi
call sub_4218fb
mov ax [ edi + eax * 2 - 0x2 ]
pop ecx
cmp ax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x5c ]
push 0x1074
push ebx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push rw-data
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x210c ]
push eax
call sub_46d71e
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x210c ]
push eax
push esi
push [ ebp - 0x18 ]
push rw-data
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x210c ]
push eax
call sub_46d71e
test al al
je r-xdata
push eax
push 0xffffffff
push [ ebp - 0x10 ]
push edi
call ebx
cmp eax 0xffffffff
je r-xdata
push esi
push eax
push [ ebp - 0xc ]
push edi
call ebx
jmp r-xdata
sub_46ba61
push ebp
mov ebp esp
sub esp 0x14
lea ecx [ ebp - 0x14 ]
push esi
push edi
push [ ebp + 0x10 ]
call sub_40caee
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
xor edi edi
mov ecx [ ebp + 0x10 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
mov esi [ eax ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
test [ eax + 0x91 ] 0x1
jne r-xdata
fld [ ebp + 0x1c ]
fld [ r--data ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fmul [ r--data ]
call sub_471de0
mov eax [ esi + 0x7c ]
fstp st0
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov ebx [ esi + 0x80 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
cmp ebx 0xffffffff
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
mov [ ebp + 0x14 ] eax
xor edi edi
inc edi
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x14 ]
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
push esi
call sub_468cdb
pop ebx
jmp r-xdata
lea eax [ esi + 0x6c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_40c935
lea ecx [ ebp - 0x14 ]
call sub_405cd3
mov eax edi
pop edi
pop esi
leave
retn 0x1c
sub_46bb3e
push ebp
mov ebp esp
sub esp 0xa8
push ebx
push esi
push edi
lea ecx [ ebp + 0x14 ]
call sub_40cdb4
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
xor edi edi
test al al
je r-xdata
mov esi edi
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ eax ]
mov esi [ ebx ]
mov dl [ ebx + 0x90 ]
mov [ ebp - 0xc ] esi
mov [ ebp + 0xb ] dl
call sub_447b84
mov [ ebp - 0x10 ] eax
movzx ecx dl
xor eax eax
inc eax
cmp ecx 0x11
jg r-xdata
cmp ecx 0x13
jl r-xdata
cmp ecx 0x10
jge r-xdata
cmp ecx 0x14
jle r-xdata
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
sub ecx 0x6
je r-xdata
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
test eax eax
jg r-xdata
lea eax [ ecx - 0x18 ]
cmp eax 0x2
ja r-xdata
cmp [ ebp + 0xb ] 0x10
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x30 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
push ebx
call sub_46e541
test eax eax
je r-xdata
dec ecx
je r-xdata
cmp [ ebp + 0xb ] 0x13
jne r-xdata
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
cmp [ ebp - 0x1c ] edi
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test al al
jns r-xdata
mov esi [ ebx + 0x34 ]
push esi
mov ecx rw-data
call sub_41b155
mov ebx [ ebp - 0x14 ]
mov [ ebp + 0xc ] ebx
mov edx [ rw-data ]
mov eax [ ebp - 0x14 ]
push 0x3
pop ebx
mov [ ebp + 0xc ] edx
jmp r-xdata
xor esi esi
inc esi
push esi
push ebx
push [ ebp - 0x20 ]
call sub_46ddee
jmp r-xdata
sub esp 0x10
mov ecx esp
lea eax [ ebp + 0x14 ]
push eax
mov [ ecx + 0x8 ] edi
call sub_4113a0
push [ ebp + 0xc ]
push ebx
call sub_46e305
test al al
je r-xdata
sub ecx 0x4
jne r-xdata
mov esi [ ebx + 0x34 ]
push esi
mov ecx rw-data
mov [ ebp - 0xc ] esi
call sub_41b155
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x48 ]
push eax
push 0xffffffff
push 0x1053
push esi
mov [ ebp - 0x48 ] 0x1
call [ SendMessageW@IAT ]
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x14 ]
push edi
push edi
push 0x1004
push esi
mov [ ebp + 0xc ] eax
mov [ ebp - 0x14 ] edi
call [ SendMessageW@IAT ]
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
push 0x2010
push edi
push edi
push edi
push [ ebp + 0xc ]
push edi
call [ LoadImageW@IAT ]
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push 0xffffffff
push eax
call [ ImageList_ReplaceIcon@IAT ]
cmp [ ebp + 0xb ] 0x10
mov ecx eax
mov [ ebp - 0xc ] ecx
jne r-xdata
inc eax
push eax
push eax
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp - 0xc ]
push eax
mov ecx [ ecx + edx * 4 ]
push edi
mov ecx [ ecx ]
push 0x1109
push esi
mov [ ebp - 0x18 ] eax
mov [ ecx + 0x40 ] eax
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
mov eax [ ecx + 0x40 ]
test eax eax
jne r-xdata
lea ecx [ ebp + 0x14 ]
call sub_412570
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x1c
push edi
push ebx
push [ ebp - 0x20 ]
call sub_46ddee
jmp r-xdata
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ecx + eax * 4 ]
mov eax [ ecx ]
mov ecx [ eax + 0x38 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x18 ] ecx
mov [ ebp + 0x10 ] eax
test ecx ecx
jne r-xdata
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
cmp [ ebp + 0xb ] 0x18
jne r-xdata
push eax
push edi
push 0xf7
push esi
call [ SendMessageW@IAT ]
cmp [ ebx + 0x64 ] edi
je r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test [ ebp + 0x10 ] 0x2
mov eax [ ebp - 0x20 ]
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ GetClientRect@IAT ]
push edi
push edi
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ RedrawWindow@IAT ]
xor esi esi
inc esi
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx rw-data
mov eax [ eax + 0x188 ]
push eax
mov [ ebp + 0xc ] eax
call sub_41b155
mov ecx [ rw-data ]
mov [ ebp + 0x10 ] eax
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
mov esi [ ecx + 0x40 ]
test esi esi
jne r-xdata
test eax eax
jne r-xdata
push 0x1
push edi
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0xc ]
push eax
mov ecx [ ecx + edx * 4 ]
push 0x1
mov ecx [ ecx ]
push 0x1003
push esi
mov [ ebp - 0x18 ] eax
mov [ ecx + 0x38 ] eax
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0x10 ] edi
mov edi [ DestroyIcon@IAT ]
je r-xdata
push 0x2010
xor edi edi
push edi
push edi
push 0x1
push [ ebp + 0xc ]
push edi
call [ LoadImageW@IAT ]
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
cmp [ ebx + 0x68 ] edi
je r-xdata
push [ ebx + 0x64 ]
call [ DeleteObject@IAT ]
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
mov [ eax + 0x1b4 ] ecx
mov edi [ ebp + 0xc ]
xor eax eax
inc eax
push eax
push eax
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov esi eax
mov eax [ ebp + 0x10 ]
push esi
mov ecx [ ecx + eax * 4 ]
push edi
mov ecx [ ecx ]
mov edi [ ebp + 0xc ]
push 0x1303
push edi
mov [ ecx + 0x40 ] esi
call [ SendMessageW@IAT ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
push 0x1
push edi
push 0x21
push 0x20
push 0x20
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0xc ]
push eax
mov ecx [ ecx + edx * 4 ]
push edi
mov ecx [ ecx ]
push 0x1003
push esi
mov [ ebp + 0x10 ] eax
mov [ ecx + 0x3c ] eax
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
push [ ebp - 0x8 ]
jmp r-xdata
push eax
push 0x1
push 0xf7
push esi
call [ SendMessageW@IAT ]
cmp [ ebx + 0x64 ] edi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0x64 ] eax
mov [ ebx + 0x68 ] edi
jmp r-xdata
push [ ebx + 0x68 ]
call [ DestroyIcon@IAT ]
inc ebx
mov edx [ ebp - 0x20 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ eax + 0x1b8 ] ecx
jmp r-xdata
push [ ebp - 0x8 ]
call [ DestroyIcon@IAT ]
jmp r-xdata
jmp r-xdata
push [ ebp - 0x8 ]
mov esi [ DestroyIcon@IAT ]
call esi
push [ ebp - 0x1c ]
call esi
test eax eax
je r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push [ ebx + 0x64 ]
call [ DeleteObject@IAT ]
mov [ ebp + 0xc ] eax
call edi
push [ ebp + 0xc ]
push 0x1
push 0xf7
push esi
call [ SendMessageW@IAT ]
cmp [ ebx + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x68 ] edi
je r-xdata
push [ ebx + 0x64 ]
call [ DeleteObject@IAT ]
cmp [ ecx + 0x90 ] 0x11
jne r-xdata
push [ ebp - 0x8 ]
movsx eax [ ebx + 0x88 ]
push eax
push esi
call [ ImageList_ReplaceIcon@IAT ]
movzx ecx [ ebx + 0x93 ]
mov esi eax
lea eax [ ebp - 0x4c ]
push eax
push ecx
push 0x133d
push edi
mov [ ebp - 0x4c ] 0x2
mov [ ebp - 0x38 ] esi
call [ SendMessageW@IAT ]
mov [ ebx + 0x88 ] si
jmp r-xdata
push [ ebp - 0x8 ]
mov esi [ ImageList_ReplaceIcon@IAT ]
push 0xffffffff
push ecx
call esi
push [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
push 0xffffffff
push [ ebp + 0x10 ]
call esi
cmp [ ebp + 0xb ] 0x13
jne r-xdata
and [ ebx + 0x64 ] 0x0
push [ ebx + 0x68 ]
call edi
mov [ ebx + 0x64 ] edi
jmp r-xdata
push [ ebx + 0x68 ]
call [ DestroyIcon@IAT ]
cmp [ ecx + 0x34 ] esi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov ebx [ SendMessageW@IAT ]
mov ecx eax
mov [ ebp + 0x10 ] ecx
cmp eax edx
jg r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0x9c ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0x74 ]
push eax
push edi
push 0x113e
push esi
mov [ ebp - 0x74 ] 0x32
call [ SendMessageW@IAT ]
test [ ebp + 0x10 ] 0x2
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0xc ]
je r-xdata
push edx
push eax
push 0x1015
push esi
call ebx
lea eax [ ebp - 0xa8 ]
push eax
push edi
push 0x104b
push esi
mov [ ebp - 0xa8 ] 0x2
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0xa0 ] edi
call ebx
cmp [ ebp - 0x8c ] 0xfffffffe
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
mov ecx eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0xa8 ]
push eax
push edi
push 0x104c
push esi
call ebx
cmp [ ebp + 0xb ] 0x14
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
push edi
push 0x113f
push esi
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x58 ] ecx
call [ SendMessageW@IAT ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
inc ecx
mov [ ebp + 0x10 ] ecx
cmp ecx [ ebp - 0x10 ]
jle r-xdata
sub_46c1ee
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov esi [ eax ]
movzx eax [ eax + 0x90 ]
dec eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
dec eax
je r-xdata
leave
retn 0xc
xor eax eax
inc eax
push 0x0
push [ ebp + 0xc ]
push 0x194
cmp [ ebp + 0xc ] 0x0
jle r-xdata
dec eax
je r-xdata
push 0x0
push [ ebp + 0xc ]
push 0xc5
jmp r-xdata
push 0xffffffff
push 0x0
push 0xb1
push esi
call [ SendMessageW@IAT ]
sub eax 0xf
je r-xdata
push esi
call [ SendMessageW@IAT ]
movzx ecx [ ebp + 0xc ]
movzx eax [ ebp + 0x10 ]
shl ecx 0x10
or ecx eax
push ecx
push 0x1
push 0x406
jmp r-xdata
sub eax 0x4
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push 0x46f
jmp r-xdata
xor eax eax
jmp r-xdata
pop esi
sub_46c2a6
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
add ecx 0x14
call sub_40c935
xor eax eax
inc eax
xor eax eax
jmp r-xdata
leave
retn 0x8
sub_46c2e7
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push ebx
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0xc ]
mov ebx [ eax ]
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
push edi
mov esi [ eax ]
mov edi [ ebp + 0x14 ]
or eax 0xffffffff
mov [ ebp - 0xc ] esi
cmp [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ ebp + 0x8 ] eax
call [ GetWindowRect@IAT ]
mov edx [ ebp - 0x1c ]
cmp edi 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] eax
jne r-xdata
leave
retn 0x14
cmp [ ebp + 0x18 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
jne r-xdata
mov edi [ ebp - 0x14 ]
sub edi edx
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebx ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
call [ ScreenToClient@IAT ]
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax ecx
mov [ ebp + 0x18 ] eax
cmp [ ebp + 0x18 ] eax
je r-xdata
mov edx [ ebp + 0x10 ]
cmp edx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
pop edi
xor eax eax
pop esi
inc eax
pop ebx
mov ecx [ ebp + 0x18 ]
mov [ ebx + 0x58 ] eax
mov [ ebx + 0x5c ] edx
mov [ ebx + 0x60 ] edi
mov [ ebx + 0x64 ] ecx
movsx eax [ esi + 0x88 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp - 0x4 ]
push 0x1
push ecx
push edi
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MoveWindow@IAT ]
push 0x1
push esi
push ebx
call sub_41c697
cmp [ esi + 0x90 ] 0x3
jne r-xdata
movsx eax [ esi + 0x8a ]
cmp eax edx
jne r-xdata
push 0x1
push esi
push ebx
call sub_46ddee
mov edx [ rw-data ]
push 0x3
pop edi
cmp edx edi
jl r-xdata
movsx eax [ esi + 0x8c ]
cmp eax edi
jne r-xdata
mov esi [ ebp + 0x8 ]
movsx eax [ esi + 0x8e ]
cmp eax ecx
je r-xdata
inc edi
cmp edi edx
jle r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov esi [ ebp - 0xc ]
cmp [ ecx + 0x90 ] 0x16
jne r-xdata
cmp [ ecx + 0x34 ] esi
jne r-xdata
push 0x0
push esi
push 0x469
push [ ecx ]
call [ SendMessageW@IAT ]
mov edx [ rw-data ]
sub_46c467
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov edx [ rw-data ]
push ebx
push esi
push edi
mov edi [ ebp - 0x4 ]
xor ebx ebx
mov eax [ edx + edi * 4 ]
mov esi [ eax ]
cmp [ esi + 0x86 ] bx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0x400
jl r-xdata
leave
retn 0x8
pop edi
pop esi
pop ebx
test ecx ecx
jns r-xdata
lea eax [ ecx - 0x1 ]
cmp eax 0x3fe
ja r-xdata
mov ecx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x3a ] bl
jne r-xdata
mov [ esi + 0x86 ] cx
mov edx [ rw-data ]
xor eax eax
inc eax
mov eax [ edx + edi * 4 ]
push ebx
push [ eax ]
push ecx
call sub_41c697
sub_46c4f9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xac
lea eax [ esp + 0x4 ]
push ebx
push esi
push edi
push eax
lea eax [ esp + 0x28 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + edx * 4 ]
mov ebx [ ebp + 0xc ]
mov eax [ eax ]
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
xor esi esi
mov eax [ eax + ecx * 4 ]
mov [ esp + 0x14 ] esi
mov edi [ eax ]
mov eax [ edi ]
mov [ esp + 0x1c ] eax
mov al [ edi + 0x90 ]
mov [ esp + 0x1b ] al
test ebx ebx
jns r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
and eax 0x100
mov [ esp + 0x28 ] eax
je r-xdata
mov ebx esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test ebx 0x800
je r-xdata
push ecx
push edx
call sub_41acd1
mov [ esp + 0x14 ] 0x1
movzx eax [ esp + 0x1b ]
mov ecx 0x1000
cmp eax 0x14
jg r-xdata
push 0x13
push esi
push esi
push esi
push esi
push esi
push [ esp + 0x34 ]
call [ SetWindowPos@IAT ]
mov [ esp + 0x14 ] 0x1
sub eax 0x16
je r-xdata
je r-xdata
push 0x3
pop ecx
cmp [ rw-data ] ecx
jl r-xdata
dec eax
dec eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edi [ edi + 0x34 ]
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x2c ]
push eax
push 0xffffffff
push 0x1053
push edi
mov [ esp + 0x3c ] 0x1
call [ SendMessageW@IAT ]
or ecx 0xffffffff
mov [ esp + 0x24 ] eax
cmp eax ecx
je r-xdata
cmp eax 0x9
je r-xdata
and ebx 0x10f8
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov edx [ eax ]
test edx edx
je r-xdata
test ebx 0x200
je r-xdata
dec eax
je r-xdata
push 0xffffffec
push edi
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] esi
mov [ esp + 0x64 ] 0x8
call [ GetWindowLongW@IAT ]
test al 0x4
je r-xdata
mov eax ebx
and eax 0x7
sub eax esi
je r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esp + 0x14 ]
mov eax esi
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x10 ] eax
test bl bl
jns r-xdata
inc ecx
cmp ecx [ rw-data ]
jle r-xdata
mov esi [ esp + 0x20 ]
mov eax [ edx + 0x4 ]
cmp eax [ esi + 0x4 ]
push 0x0
pop esi
jne r-xdata
mov eax [ esp + 0x20 ]
push esi
push [ esp + 0x14 ]
push 0x401
push [ eax ]
call [ SendMessageW@IAT ]
call [ GetFocus@IAT ]
cmp eax [ edi ]
jne r-xdata
mov eax ebx
and eax 0x7
je r-xdata
dec eax
jne r-xdata
test ebx 0x2100
je r-xdata
test bl 0x5
je r-xdata
push esi
push esi
push 0x466
dec eax
je r-xdata
test bl 0x10
je r-xdata
cmp eax 0xc
je r-xdata
test bl 0x40
je r-xdata
push esi
push [ esp + 0x20 ]
mov eax 0xc0
mov [ esp + 0x18 ] eax
call [ EnableWindow@IAT ]
jmp r-xdata
cmp [ edx + 0x90 ] 0x3
jne r-xdata
mov [ esp + 0x14 ] 0x1
jmp r-xdata
push [ esp + 0x10 ]
push [ esp + 0x28 ]
call sub_41acd1
jmp r-xdata
push esi
and eax 0x3
push eax
push 0xf1
mov eax ebx
and eax 0x7
je r-xdata
mov eax esi
jmp r-xdata
cmp [ esp + 0x28 ] 0x0
je r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
and eax 0xfffff000
add eax 0x2000
mov [ esp + 0x68 ] eax
lea eax [ esp + 0x5c ]
push eax
push esi
push 0x104c
push edi
mov [ esp + 0x7c ] 0xf000
call [ SendMessageW@IAT ]
mov esi eax
jmp r-xdata
push 0xffff0000
push 0xffffffff
push 0x465
jmp r-xdata
push esi
push esi
push 0x467
jmp r-xdata
mov edx [ esp + 0x20 ]
movzx ecx [ edi + 0x93 ]
cmp [ edx + 0x198 ] 0x0
je r-xdata
cmp eax 0xd
jle r-xdata
mov eax [ esp + 0x10 ]
mov edx ebx
and edx 0x20
je r-xdata
push 0x1
push [ esp + 0x20 ]
mov eax 0xc0
mov [ esp + 0x18 ] eax
call [ EnableWindow@IAT ]
mov eax [ edx ]
cmp eax [ edi + 0x34 ]
je r-xdata
and eax 0x3
push eax
push [ esp + 0x14 ]
call sub_468dd5
mov eax [ esp + 0x68 ]
or eax 0xffffffff
jmp r-xdata
push [ esp + 0x28 ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push [ esp + 0x28 ]
push ecx
push edx
mov ecx rw-data
call sub_46e1a7
movzx eax [ edi + 0x93 ]
mov ecx [ esp + 0x20 ]
mov [ ecx + 0x194 ] eax
jmp r-xdata
mov eax [ edx + 0x194 ]
mov [ edx + 0x190 ] eax
cmp eax 0xf
jle r-xdata
mov ecx ebx
and ecx 0x10
mov [ esp + 0x24 ] ecx
je r-xdata
add eax 0x30
mov al [ edi + 0x92 ]
test bl al
jne r-xdata
and ebx 0x2000
neg ebx
sbb ebx ebx
not ebx
and ebx eax
lea eax [ esp + 0x5c ]
push eax
push [ esp + 0x28 ]
mov [ esp + 0x70 ] ebx
push 0x102b
push edi
mov [ esp + 0x7c ] 0x3
call [ SendMessageW@IAT ]
mov esi eax
lea eax [ esp + 0x2c ]
push eax
push esi
push [ esp + 0x18 ]
mov [ esp + 0x38 ] 0x30
push [ edi + 0xc ]
mov [ esp + 0x40 ] 0x1
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
cmp eax 0x11
jne r-xdata
mov ecx 0x1008
test bl 0x8
je r-xdata
add eax 0x30
test al 0x10
je r-xdata
test bl 0x20
jne r-xdata
mov eax [ edi + 0x10 ]
mov [ esp + 0x94 ] eax
mov al bl
and al 0x1
movsx eax al
neg eax
sbb eax eax
and eax ecx
add eax ecx
mov [ esp + 0x90 ] 0x8
mov [ esp + 0x9c ] 0xf010
mov [ esp + 0x98 ] eax
test ebx 0x200
je r-xdata
test ebx 0x1000
je r-xdata
add eax ecx
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
movsx eax [ ecx + 0x8e ]
push eax
movsx eax [ ecx + 0x8c ]
push eax
movsx eax [ ecx + 0x8a ]
push eax
movsx eax [ ecx + 0x88 ]
push eax
push [ ecx ]
call [ MoveWindow@IAT ]
push esi
push [ edi + 0x34 ]
push 0x469
push [ esp + 0x28 ]
call [ SendMessageW@IAT ]
test bl bl
jns r-xdata
lea eax [ esp + 0x90 ]
push eax
push esi
push 0x113f
push [ edi + 0x34 ]
call [ SendMessageW@IAT ]
test ebx 0x400
je r-xdata
or eax 0x10
mov [ esp + 0x98 ] eax
not al
and al [ edi + 0x92 ]
or al bl
mov [ edi + 0x92 ] al
mov al [ edi + 0x93 ]
cmp al 0xff
je r-xdata
add eax ecx
mov eax esi
push 0x3
pop eax
jmp r-xdata
cmp [ esp + 0x28 ] esi
je r-xdata
push [ edi + 0x10 ]
push 0x2
push 0x1102
push [ edi + 0x34 ]
call [ SendMessageW@IAT ]
mov ebx [ ShowWindow@IAT ]
test edx edx
je r-xdata
mov ecx [ esp + 0x20 ]
movzx eax al
mov ecx [ ecx + 0x190 ]
cmp eax ecx
je r-xdata
cmp [ esp + 0x28 ] esi
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
push [ edi + 0x34 ]
mov ecx rw-data
call sub_41b155
push eax
push [ esp + 0x28 ]
call sub_41acd1
push [ edi + 0x10 ]
push 0x9
push 0x110b
push [ edi + 0x34 ]
jmp r-xdata
mov esi [ esp + 0x1c ]
push esi
mov esi [ esp + 0x20 ]
push esi
call ebx
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
test [ esp + 0x38 ] 0x8
je r-xdata
or eax 0x80
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x1
push edi
push [ esp + 0x28 ]
call sub_46ddee
push 0x4
push esi
call ebx
cmp [ esp + 0x1b ] 0x1a
jne r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x2c ]
push eax
push esi
push [ esp + 0x18 ]
push [ edi + 0xc ]
call [ SetMenuItemInfoW@IAT ]
test ebx 0x200
je r-xdata
test bl 0x4
jne r-xdata
test [ edi + 0x92 ] 0x40
je r-xdata
lea eax [ esp + 0x2c ]
push eax
push esi
push [ esp + 0x18 ]
push [ edi + 0xc ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push esi
push [ esp + 0x14 ]
jmp r-xdata
or eax 0x8
push 0x1
push esi
call [ EnableWindow@IAT ]
mov eax [ esp + 0x20 ]
push [ eax ]
call [ DrawMenuBar@IAT ]
jmp r-xdata
test [ esp + 0x38 ] 0x1000
je r-xdata
push [ edi + 0xc ]
call [ SetMenuDefaultItem@IAT ]
push esi
or ecx 0xffffffff
push ecx
sub_46cb07
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
push ebx
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ ebp + 0xc ]
mov ecx [ SendMessageW@IAT ]
push edi
mov edi [ eax ]
mov ebx [ edi ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp esi 0xffffffff
je r-xdata
movzx eax [ edi + 0x90 ]
dec eax
dec eax
je r-xdata
leave
retn 0xc
mov al [ edi + 0x93 ]
mov ecx [ ebp + 0x8 ]
cmp al 0xff
je r-xdata
push esi
push 0xffffffec
push ebx
call [ SetWindowLongW@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x13
jne r-xdata
or esi 0x4
dec eax
je r-xdata
push 0x1
push edi
push ecx
call sub_46ddee
movzx eax al
cmp eax [ ecx + 0x190 ]
je r-xdata
push esi
push 0x0
push 0x1036
push ebx
call [ SendMessageW@IAT ]
mov [ ebp - 0x4 ] eax
or esi 0x10000
push 0x0
push 0x1
jmp r-xdata
push 0x0
test esi 0x800
je r-xdata
sub eax 0x3
je r-xdata
push 0x27
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ edi ]
call [ SetWindowPos@IAT ]
cmp al 0x3
je r-xdata
push 0x0
push ebx
call [ ShowWindow@IAT ]
jmp r-xdata
push 0xcf
push ebx
call ecx
or esi 0xe
jmp r-xdata
dec eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ edi + 0x90 ]
cmp al 0x2
je r-xdata
or esi 0x50000000
push esi
push 0xfffffff0
push ebx
call [ SetWindowLongW@IAT ]
mov [ ebp - 0x4 ] eax
or esi 0x3
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
setne al
or esi 0x4000000
jmp r-xdata
sub eax 0xc
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
sub_46cc68
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
lea eax [ esp + 0x4 ]
push ebx
push esi
push edi
push eax
lea eax [ esp + 0x18 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
xor eax eax
mov ecx [ esp + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x10 ]
mov ebx [ eax ]
mov eax [ rw-data ]
mov [ esp + 0x14 ] ebx
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
mov al [ esi + 0x90 ]
cmp al 0xe
je r-xdata
cmp al 0xf
je r-xdata
cmp al 0xc
je r-xdata
cmp al 0x9
je r-xdata
cmp al 0x14
je r-xdata
cmp al 0x11
je r-xdata
cmp al 0x1d
je r-xdata
cmp al 0x1b
je r-xdata
cmp al 0x15
je r-xdata
push 0x2c
xor edi edi
lea eax [ esp + 0x30 ]
push edi
push eax
call sub_421970
movzx eax [ ebp + 0x1c ]
mov edx [ rw-data ]
add esp 0xc
neg eax
sbb eax eax
and eax 0x2
or eax 0x11
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] 0x30
mov eax [ esi ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x48 ] edx
mov eax [ esi ]
mov [ esp + 0x34 ] eax
mov eax [ ebp + 0xc ]
mov [ esp + 0x4c ] eax
cmp [ esi + 0x90 ] 0xb
jne r-xdata
cmp [ esi + 0x50 ] edi
je r-xdata
push [ ebx + 0x188 ]
mov ecx rw-data
call sub_41b155
mov ecx [ rw-data ]
mov edi eax
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
cmp [ ecx + 0x50 ] 0x0
je r-xdata
movzx eax [ ebp + 0x18 ]
push edi
push edx
push edi
push [ esi ]
mov ecx 0x80000000
push ecx
push ecx
neg eax
push ecx
sbb eax eax
push ecx
and eax 0x40
or eax 0x80000013
push eax
push edi
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x50 ]
call [ DestroyWindow@IAT ]
mov edx [ rw-data ]
mov eax [ ebx + 0x188 ]
mov edi [ esi + 0x50 ]
mov ebx [ SendMessageW@IAT ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x34 ] eax
test edi edi
jne r-xdata
cmp [ ecx + 0x58 ] 0x0
je r-xdata
mov ebx [ SendMessageW@IAT ]
lea eax [ esp + 0x28 ]
push eax
push 0x0
push 0x432
push edi
call ebx
push [ ebp + 0xc ]
lea ecx [ esi + 0x54 ]
mov [ esi + 0x50 ] edi
call sub_407e53
lea eax [ esp + 0x18 ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
push [ esp + 0x20 ]
push 0x0
push 0x418
push edi
call ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push 0x0
push 0x433
push edi
call ebx
mov ecx [ esp + 0x14 ]
movzx eax [ ebp + 0x18 ]
push 0x0
push [ rw-data ]
neg eax
push 0x0
push [ ecx + 0x188 ]
mov ecx 0x80000000
push ecx
push ecx
push ecx
sbb eax eax
push ecx
and eax 0x40
or eax 0x80000013
push eax
push 0x0
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ ecx + 0x50 ]
call [ DestroyWindow@IAT ]
mov eax [ rw-data ]
push r--data
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
and [ eax + 0x50 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
add ecx 0x54
call sub_407e53
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push 0x421
push edi
call ebx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ esi + 0x50 ] edi
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
push 0x0
push 0x432
push edi
call ebx
push [ ebp + 0xc ]
lea ecx [ esi + 0x54 ]
call sub_407e53
sub_46cefc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
cmp [ esi + 0x1cc ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_43f195
push [ ebx + 0x84 ]
lea eax [ ebx + 0x70 ]
push eax
push esi
call sub_43f144
test eax eax
jne r-xdata
and [ edi ] 0x0
pop edi
mov ecx [ esi + 0x1cc ]
test ecx ecx
je r-xdata
and [ esi + 0x1cc ] 0x0
push ecx
call sub_468b73
sub_46cf4e
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
mov [ ebp - 0x8 ] eax
push edi
lea eax [ ebp - 0x8 ]
xor esi esi
push eax
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
call sub_41cbfe
mov edi [ ebp + 0x8 ]
pop edi
mov eax esi
pop esi
leave
retn 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp [ ecx ] edi
je r-xdata
dec [ ecx + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x4 ] esi
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_468b5a
jmp r-xdata
xor esi esi
inc esi
push [ eax + 0x8 ]
call [ DeleteObject@IAT ]
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
call sub_46e6e9
push ecx
mov eax esp
lea ecx [ ebp - 0x4 ]
mov [ eax ] esi
call sub_402e2a
test al al
je r-xdata
sub_46cfc5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x10
ja r-xdata
push 0x7f00
jmp [ eax * 4 + jump_table_46d051 ]
push 0x7f89
jmp r-xdata
push 0x7f8a
jmp r-xdata
push 0x7f03
jmp r-xdata
push 0x7f8b
jmp r-xdata
push 0x7f01
jmp r-xdata
push 0x7f88
jmp r-xdata
push 0x7f86
jmp r-xdata
push 0x7f83
jmp r-xdata
push 0x7f85
jmp r-xdata
push 0x7f82
jmp r-xdata
push 0x7f84
jmp r-xdata
push 0x7f04
jmp r-xdata
push 0x7f02
jmp r-xdata
push 0x0
jmp r-xdata
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
sub_46d095
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov ebx [ esi + 0x18 ]
mov ecx eax
and ecx 0x10
mov [ esp + 0x14 ] ecx
mov ecx eax
and eax 0x1
and ecx 0x6
mov [ esp + 0x1c ] eax
mov eax [ GetSysColor@IAT ]
mov [ esp + 0x24 ] ecx
test ecx ecx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46d385
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp [ edi + 0x4c ] 0xffffffff
jne r-xdata
push 0xe
call eax
push eax
push ebx
call [ SetTextColor@IAT ]
mov edi [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ edi + 0x4c ]
push 0x12
call eax
push eax
jmp r-xdata
cmp [ edi + 0x48 ] 0xffffffff
mov [ esp + 0x20 ] eax
jne r-xdata
push [ edi + 0x48 ]
call [ CreateSolidBrush@IAT ]
mov [ esp + 0xc ] eax
mov eax [ edi + 0x48 ]
push 0xf
call [ GetSysColorBrush@IAT ]
push 0xf
mov [ esp + 0x10 ] eax
call [ GetSysColor@IAT ]
jmp r-xdata
push ebx
call [ SetTextColor@IAT ]
cmp [ esp + 0x14 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
push 0x10
call [ GetSysColor@IAT ]
push eax
call [ CreateSolidBrush@IAT ]
mov esi eax
push esi
lea eax [ esp + 0x34 ]
push eax
push ebx
call [ FrameRect@IAT ]
push esi
call [ DeleteObject@IAT ]
jmp r-xdata
push eax
push ebx
call [ SetBkColor@IAT ]
push [ esp + 0xc ]
mov [ esp + 0x30 ] eax
push ebx
call [ SelectObject@IAT ]
cmp [ esp + 0x1c ] 0x0
mov [ esp + 0x28 ] eax
lea eax [ esi + 0x1c ]
mov esi eax
lea edi [ esp + 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x18 ] eax
movsd [ edi ] [ esi ]
je r-xdata
push 0x10
push 0x4
lea eax [ esp + 0x38 ]
push eax
push ebx
call [ DrawFrameControl@IAT ]
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
mov esi [ esp + 0x18 ]
lea edi [ esp + 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ esp + 0x1c ]
lea eax [ esp + 0x30 ]
test esi esi
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
push 0xfffffffe
push 0xfffffffe
push eax
call [ InflateRect@IAT ]
jmp r-xdata
push 0xfffffffe
push 0xfffffffe
push 0xfffffffd
push 0xfffffffd
jmp r-xdata
push [ esp + 0xc ]
lea eax [ esp + 0x34 ]
push eax
push ebx
call [ FillRect@IAT ]
push 0x2
pop eax
test esi esi
jne r-xdata
add [ esp + 0x30 ] eax
add [ esp + 0x34 ] eax
cmp [ esp + 0x24 ] esi
je r-xdata
push eax
call [ InflateRect@IAT ]
dec [ esp + 0x30 ]
dec [ esp + 0x34 ]
test eax 0x100
jne r-xdata
add edi 0x20
mov [ esp + 0x10 ] edi
mov esi [ ebp + 0xc ]
push 0xfffffff0
push [ esi ]
mov edi 0x104
mov [ esp + 0x18 ] edi
call [ GetWindowLongW@IAT ]
test eax 0x2000
jne r-xdata
push 0x0
push 0x0
push 0xe
push [ esi ]
call [ SendMessageW@IAT ]
lea esi [ eax + 0x1 ]
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push esi
push eax
mov [ esp + 0x24 ] eax
mov eax [ ebp + 0xc ]
push [ eax ]
call [ GetWindowTextW@IAT ]
push edi
lea eax [ esp + 0x34 ]
push eax
push 0xffffffff
push [ esp + 0x28 ]
push ebx
call [ DrawTextW@IAT ]
cmp [ esp + 0x24 ] 0x0
je r-xdata
or edi 0x1
mov [ esp + 0x10 ] edi
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov esi [ esp + 0x18 ]
lea edi [ esp + 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ esp + 0x30 ]
inc [ esp + 0x34 ]
push 0x11
call [ GetSysColor@IAT ]
push eax
push ebx
call [ SetTextColor@IAT ]
push [ esp + 0x10 ]
lea eax [ esp + 0x34 ]
push eax
push 0xffffffff
push [ esp + 0x28 ]
push ebx
call [ DrawTextW@IAT ]
push [ esp + 0x1c ]
call j_sub_4228ca#2
pop ecx
push [ esp + 0x28 ]
push ebx
call [ SelectObject@IAT ]
push [ esp + 0xc ]
call [ DeleteObject@IAT ]
push [ esp + 0x20 ]
push ebx
call [ SetTextColor@IAT ]
push [ esp + 0x2c ]
push ebx
call [ SetBkColor@IAT ]
xor eax eax
inc eax
mov esi [ esp + 0x18 ]
lea edi [ esp + 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
movsd [ edi ] [ esi ]
call [ CreateSolidBrush@IAT ]
mov esi eax
push esi
lea eax [ esp + 0x34 ]
push eax
push ebx
call [ FrameRect@IAT ]
push esi
call [ DeleteObject@IAT ]
push 0xfffffffc
push 0xfffffffc
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
lea eax [ esp + 0x30 ]
push eax
push ebx
call [ DrawFocusRect@IAT ]
sub_46d385
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x18 ]
push esi
mov esi [ eax + 0x10 ]
mov ecx esi
and ecx 0x10
and esi 0x6
push edi
mov edi [ GetSysColor@IAT ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4c ]
cmp eax 0xffffffff
jne r-xdata
push 0xe
jmp r-xdata
push eax
push ebx
call [ SetTextColor@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x48 ]
cmp eax 0xffffffff
jne r-xdata
push 0x12
call edi
push eax
call [ CreateSolidBrush@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x48 ]
push 0xf
call [ GetSysColorBrush@IAT ]
push 0xf
mov [ ebp - 0x4 ] eax
call edi
jmp r-xdata
mov eax 0x743c00
push 0x11
call edi
jmp r-xdata
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
test eax 0x100
jne r-xdata
add edi 0x20
mov [ ebp + 0x8 ] edi
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
mov esi [ SelectObject@IAT ]
push eax
push ebx
mov [ ebp - 0x20 ] eax
call esi
push [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
push ebx
call [ SetBkColor@IAT ]
push [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
push ebx
call esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0x1c
mov esi eax
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xffffffff
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x34 ]
push eax
movsd [ edi ] [ esi ]
call [ InflateRect@IAT ]
push 0x5
push 0x5
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0x34 ]
push ebx
call [ RoundRect@IAT ]
mov esi [ ebp + 0xc ]
push 0xfffffff0
push [ esi ]
mov edi 0x104
mov [ ebp + 0x8 ] edi
call [ GetWindowLongW@IAT ]
test eax 0x2000
jne r-xdata
push 0x0
push 0x0
push 0xe
push [ esi ]
call [ SendMessageW@IAT ]
lea edi [ eax + 0x1 ]
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_42010a
pop ecx
push edi
push eax
push [ esi ]
mov [ ebp + 0xc ] eax
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
or edi 0x1
mov [ ebp + 0x8 ] edi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov esi [ ebp - 0xc ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xfffffffd
movsd [ edi ] [ esi ]
push 0xfffffffd
lea eax [ ebp - 0x34 ]
push eax
movsd [ edi ] [ esi ]
call [ InflateRect@IAT ]
lea eax [ ebp - 0x34 ]
push eax
push ebx
call [ DrawFocusRect@IAT ]
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x34 ]
push eax
push 0xffffffff
push esi
push ebx
call [ DrawTextW@IAT ]
push esi
call j_sub_4228ca#2
mov edi [ SelectObject@IAT ]
pop ecx
push [ ebp - 0x18 ]
push ebx
call edi
push [ ebp - 0x4 ]
mov esi [ DeleteObject@IAT ]
call esi
push [ ebp - 0x1c ]
push ebx
call edi
push [ ebp - 0x20 ]
call esi
push [ ebp - 0x8 ]
push ebx
call [ SetTextColor@IAT ]
push [ ebp - 0x24 ]
push ebx
call [ SetBkColor@IAT ]
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn 0x8
push 0x11
call [ GetSysColor@IAT ]
push eax
push ebx
call [ SetTextColor@IAT ]
sub_46d578
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov esi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
sub esi [ ebp - 0xc ]
imul esi eax
mov eax [ rw-data ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
xor eax eax
pop edi
inc eax
pop esi
leave
retn 0x8
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp esi [ rw-data ]
jg r-xdata
push edi
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push edi
call [ GetDlgCtrlID@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] esi
sub_46d5ee
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
or eax 0xffffffff
mov ecx [ ebx ]
push esi
push edi
or edi eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] edi
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
push [ eax ]
call [ ClientToScreen@IAT ]
mov eax [ rw-data ]
xor esi esi
mov [ ebp - 0x10 ] eax
test eax eax
jle r-xdata
push 0x0
call [ MessageBeep@IAT ]
or eax 0xffffffff
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
mov [ ebp + 0x8 ] edx
test edx edx
je r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
push 0x3
pop edi
cmp [ rw-data ] edi
jl r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
js r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov edi [ ebp - 0xc ]
test edi edi
js r-xdata
inc edi
cmp edi [ rw-data ]
jle r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ ebx ] edi
jmp r-xdata
test [ ecx + 0x92 ] 0x20
jne r-xdata
mov al [ ecx + 0x93 ]
cmp al 0xff
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx ]
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
movzx eax al
cmp eax [ edx + 0x190 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebx ] esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov ecx esi
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebx ] esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x8
jne r-xdata
mov eax edi
jmp r-xdata
mov [ ebx ] ecx
mov [ ebp - 0x8 ] edi
jmp r-xdata
sub_46d71e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
push [ ebx ]
call sub_423132
pop ecx
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
push [ ebx ]
call sub_4218fb
pop ecx
mov edi eax
mov edi eax
sub edi [ ebx ]
sar edi 0x1
jmp r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebx ]
push esi
call sub_422c1d
add esp 0xc
xor eax eax
mov [ esi + edi * 2 ] ax
pop esi
cmp [ ebp + 0xc ] eax
je r-xdata
xor al al
jmp r-xdata
cmp edi 0xffe
jle r-xdata
lea eax [ edi + edi ]
add [ ebx ] eax
test edi edi
setne al
inc edi
pop edi
pop ebx
pop ebp
retn 0xc
sub_46d784
push esi
push edi
call [ GetForegroundWindow@IAT ]
mov esi eax
call [ GetFocus@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx rw-data
push esi
mov ecx ebx
call sub_41af7d
cmp eax 0xffffffff
je r-xdata
pop ebx
mov edx [ rw-data ]
push edi
mov eax [ edx + eax * 4 ]
mov ecx ebx
mov esi [ eax ]
call sub_41b155
mov edx eax
cmp edx 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + edx * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov [ esi + 0x1c ] edx
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x90 ] 0x2
jne r-xdata
lea eax [ esi + 0x1c0 ]
push eax
lea eax [ esi + 0x1bc ]
push eax
push 0xb0
push [ ecx ]
call [ SendMessageW@IAT ]
sub_46d80a
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
push [ eax ]
call [ DestroyWindow@IAT ]
xor eax eax
inc eax
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
pop ebp
retn 0x4
sub_46d852
push ebp
mov ebp esp
mov ecx [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0xffffffff
jne r-xdata
push edi
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
test edi edi
jne r-xdata
xor al al
jmp r-xdata
push 0xffffffff
push esi
mov ecx rw-data
call sub_41b736
mov ecx [ esi + 0x174 ]
mov eax [ ebp + 0xc ]
push 0x0
mov [ eax ] ecx
mov ecx [ esi + 0x178 ]
mov eax [ ebp + 0x10 ]
push sub_46d56f
mov [ eax ] ecx
mov ecx [ esi + 0x17c ]
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ esi + 0x180 ]
mov eax [ ebp + 0x18 ]
and [ rw-data ] 0x0
mov [ rw-data ] 0x7fffffff
mov [ eax ] ecx
mov eax [ esi + 0x16c ]
mov [ rw-data ] eax
mov eax [ esi + 0x170 ]
mov [ rw-data ] eax
push [ esi ]
call [ EnumChildWindows@IAT ]
mov edi [ ebp + 0x1c ]
mov eax [ rw-data ]
or [ edi ] 0xffffffff
test eax eax
je r-xdata
call [ GetActiveWindow@IAT ]
cmp [ esi ] eax
je r-xdata
pop edi
pop ebp
retn 0x18
and [ edi ] 0x0
cmp eax [ esi ]
je r-xdata
xor al al
jmp r-xdata
push eax
mov ecx rw-data
call sub_41b155
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
pop esi
mov al 0x1
sub_46d93b
push ebp
mov ebp esp
push edi
lea edi [ ecx + 0x2c ]
cmp [ edi ] 0x0
je r-xdata
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0x30 ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ eax ]
push esi
call sub_468b20
mov ecx edi
call sub_446417
test esi esi
je r-xdata
xor al al
cmp [ rw-data ] 0x0
jne r-xdata
and [ rw-data ] 0x0
mov al 0x1
pop esi
jmp r-xdata
push ecx
mov ecx esi
call sub_468ba4
push 0xa
mov eax [ rw-data ]
cmp eax 0x64
jge r-xdata
pop edi
pop ebp
retn 0x4
inc eax
mov [ rw-data ] eax
push 0x0
jmp r-xdata
call [ Sleep@IAT ]
sub_46d9a7
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
push edi
mov eax [ eax + ecx * 4 ]
push 0xfffffff0
mov eax [ eax ]
mov edi [ eax ]
push edi
call [ GetWindowLongW@IAT ]
mov ecx [ ebp + 0x8 ]
push 0xffffffec
push edi
mov [ ecx ] eax
call [ GetWindowLongW@IAT ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
xor eax eax
inc eax
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
pop ebp
retn 0xc
sub_46da07
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ esi ]
cmp [ eax ] edi
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40d3d2
push esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edi
call sub_40c935
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
call sub_46e691
lea ecx [ ebp - 0x14 ]
call sub_405cd3
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_468b5a
mov esi [ ebp - 0x4 ]
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
mov ecx [ esi ]
push eax
add ecx 0x4
call sub_40c935
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
call sub_46e729
jmp r-xdata
push ecx
mov eax esp
lea ecx [ ebp - 0x4 ]
and [ eax ] 0x0
call sub_402e2a
test al al
je r-xdata
xor eax eax
inc eax
sub_46daaa
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
pop ebp
retn 0xc
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
pop esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateAcceleratorTableW@IAT ]
mov [ esi + 0x18 ] eax
call [ GetForegroundWindow@IAT ]
cmp [ esi ] eax
jne r-xdata
push [ esi + 0x18 ]
call [ DestroyAcceleratorTable@IAT ]
and [ esi + 0x18 ] 0x0
or [ rw-data ] 0xffffffff
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_46db30
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x5c ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
mov [ ecx + 0x60 ] eax
pop ebp
retn 0x14
xor eax eax
inc eax
mov [ ecx + 0x64 ] eax
sub_46db90
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
pop ebp
retn 0xc
mov eax [ rw-data ]
push 0x0
mov eax [ eax + ecx * 4 ]
push 0x0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
push 0x20
push [ ecx ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x14 ] eax
call [ PostMessageW@IAT ]
cmp ecx 0xffffffff
je r-xdata
sub_46dbe3
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
fld [ ebp + 0x1c ]
mov eax [ rw-data ]
fld [ r--data ]
push esi
mov eax [ eax + ecx * 4 ]
fucomp st1
mov esi [ eax ]
fnstsw ax
test ah 0x44
jpo r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
fstp st0
fmul [ r--data ]
call sub_471de0
mov [ esi + 0x7c ] eax
jmp r-xdata
pop ebp
retn 0x1c
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x80 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
push [ ebp + 0xc ]
lea ecx [ esi + 0x6c ]
call sub_40c935
mov eax [ ebp + 0x14 ]
mov [ esi + 0x88 ] eax
xor eax eax
inc eax
pop esi
mov [ esi + 0x84 ] eax
sub_46dc79
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_41af7d
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
push ebx
mov eax [ eax + ecx * 4 ]
push esi
push edi
mov edi [ eax ]
push 0xfffffff0
mov eax [ edi ]
push eax
mov [ ebp + 0x10 ] eax
call [ GetWindowLongW@IAT ]
mov esi [ ebp + 0x8 ]
mov ebx eax
mov eax 0xc00000
and ebx eax
sub ebx eax
neg ebx
sbb ebx ebx
inc ebx
cmp esi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push esi
push 0xfffffff0
push [ ebp + 0x10 ]
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
pop ebp
retn 0xc
cmp [ edi + 0x38 ] 0x0
je r-xdata
push [ ebp + 0xc ]
push 0xffffffec
push [ ebp + 0x10 ]
call [ SetWindowLongW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
mov eax 0xc00000
and esi eax
sub esi eax
neg esi
sbb esi esi
inc esi
cmp ebx esi
je r-xdata
pop edi
pop esi
pop ebx
push 0x47
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp + 0x10 ]
call [ SetWindowPos@IAT ]
push 0x4
call [ GetSystemMetrics@IAT ]
test esi esi
je r-xdata
sub [ edi + 0x48 ] eax
add [ edi + 0x48 ] eax
jmp r-xdata
sub_46dd52
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
push esi
push edi
cmp ecx 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov esi [ eax ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov edi rw-data
mov ecx edi
call sub_41af7d
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax esi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
mov ecx edi
call sub_40cf2c
test al al
je r-xdata
pop edi
pop esi
leave
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0xb
jne r-xdata
mov [ edx + 0x198 ] 0x1
movzx ecx [ eax + 0x93 ]
mov [ edx + 0x190 ] ecx
sub_46ddee
push ebp
mov ebp esp
sub esp 0x20
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x39 ] 0x0
jne r-xdata
pop edi
leave
retn 0xc
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push [ eax ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ edi ]
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ edi ]
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0xc ]
push [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ edi ]
call [ InvalidateRect@IAT ]
sub_46de72
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
pop ebx
leave
retn 0x8
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov edx [ ebp - 0x10 ]
mov eax [ eax + ecx * 4 ]
push esi
mov esi [ eax ]
mov eax [ rw-data ]
push edi
mov eax [ eax + edx * 4 ]
mov edi [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov cl [ eax + 0x90 ]
mov [ ebp - 0x1 ] cl
cmp edi 0x6
jne r-xdata
cmp edi 0x4
jne r-xdata
cmp cl 0x18
je r-xdata
cmp edi 0x3
jne r-xdata
cmp cl 0x1
je r-xdata
mov ecx [ esi + 0x1cc ]
mov [ esi + 0x1c ] edx
test ecx ecx
je r-xdata
cmp edi 0x100
jne r-xdata
test cl cl
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push eax
call sub_43f2f2
mov edx [ ebp - 0x10 ]
cmp cl 0x2
je r-xdata
xor al al
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x93 ]
cmp al 0xff
je r-xdata
cmp cl 0x3
jne r-xdata
pop edi
pop esi
push 0x0
push esi
mov ecx rw-data
call sub_41b736
movzx eax [ ebp - 0x1 ]
mov edx [ esi + 0x174 ]
mov ecx [ esi + 0x178 ]
mov [ ebp + 0xc ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0xb ] 0x0
cmp eax 0x1c
ja r-xdata
movzx eax al
cmp eax [ esi + 0x190 ]
je r-xdata
mov bl [ ebp + 0xb ]
movzx eax [ eax + lookup_table_46e0de ]
jmp [ eax * 4 + jump_table_46e0be ]
mov al bl
push 0x0
push 0x0
push 0x41c
push [ eax + 0x50 ]
call [ SendMessageW@IAT ]
cmp edi 0x1
push ecx
push edx
test edi edi
je r-xdata
push ebx
push [ esi ]
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
push 0xffffffec
push [ eax ]
call [ GetWindowLongW@IAT ]
test eax 0x100000
je r-xdata
test edi edi
jmp r-xdata
push edi
push esi
mov ecx rw-data
call sub_46e1a7
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
cmp edi 0x300
jne r-xdata
push [ ebp - 0xc ]
push [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
push 0x0
push 0x2
push 0xa1
push [ esi ]
call [ SendMessageW@IAT ]
jne r-xdata
cmp edi 0x200
jne r-xdata
mov edi [ esi + 0x1c4 ]
test edi edi
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx rw-data
push [ eax ]
push esi
push ebx
call sub_468bbc
mov bl 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x90 ] 0x2
jne r-xdata
mov [ esi + 0x1c4 ] ebx
cmp edi ebx
je r-xdata
mov eax [ esi + 0x1c4 ]
test eax eax
jle r-xdata
lea eax [ esi + 0x1c0 ]
push eax
lea eax [ esi + 0x1bc ]
push eax
push 0xb0
push [ ecx ]
call [ SendMessageW@IAT ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
and [ esi + 0x1c4 ] 0x0
push ecx
push edx
push [ eax ]
mov ecx rw-data
push esi
push edi
call sub_468bbc
cmp eax ebx
jne r-xdata
push [ ebp - 0xc ]
and [ esi + 0x1c4 ] 0x0
push edx
push [ ecx ]
mov ecx rw-data
push esi
push eax
call sub_468bbc
jmp r-xdata
sub_46e0fb
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
push ebx
mov eax [ eax + ecx * 4 ]
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x20000
push edi
mov edi [ eax ]
test ebx esi
je r-xdata
cmp [ edi + 0x68 ] 0x0
jne r-xdata
push 0x0
mov ecx rw-data
call sub_41aaff
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x68 ] 0x1
or esi ebx
sub_46e13e
push ebp
mov ebp esp
push ebx
push esi
push 0x44
push 0x0
mov ebx rw-data
push ebx
call sub_421970
push 0x10
push 0x0
mov esi rw-data
push esi
call sub_421970
add esp 0x18
xor eax eax
push esi
push ebx
inc eax
mov [ rw-data ] eax
mov [ rw-data ] ax
xor eax eax
push eax
push eax
push 0x20
push eax
push eax
push eax
push [ ebp + 0x8 ]
mov [ rw-data ] 0x44
push eax
call [ CreateProcessW@IAT ]
pop esi
pop ebx
test eax eax
je r-xdata
pop ebp
retn 0x4
push [ rw-data ]
call [ CloseHandle@IAT ]
sub_46e1a7
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov edx [ ebx + 0x4 ]
push edi
push 0x3
mov edi ecx
mov [ ebp + 0x8 ] edx
pop esi
cmp [ ebx + 0x190 ] eax
je r-xdata
cmp [ edi + 0x84 ] esi
jl r-xdata
cmp [ edi + 0x84 ] esi
jl r-xdata
push 0x0
push eax
push 0x130c
push [ ebx + 0x188 ]
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ edi + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov [ ebx + 0x190 ] eax
mov eax [ edi + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
inc esi
cmp esi [ edi + 0x84 ]
jle r-xdata
cmp [ ecx + 0x4 ] edx
jne r-xdata
inc esi
cmp esi [ edi + 0x84 ]
jle r-xdata
cmp [ ecx + 0x4 ] edx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ ecx + 0x90 ] 0xb
je r-xdata
mov eax [ ebp + 0xc ]
push 0x3
pop esi
mov dl [ ecx + 0x90 ]
cmp dl 0xb
je r-xdata
movzx eax [ ecx + 0x93 ]
cmp eax [ ebx + 0x190 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov dh [ ecx + 0x93 ]
movzx eax dh
cmp eax [ ebx + 0x190 ]
je r-xdata
test [ ecx + 0x92 ] 0x20
jne r-xdata
push 0x0
push [ ecx ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x74 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x40
je r-xdata
cmp [ ebx + 0x198 ] 0x0
je r-xdata
push 0x0
push [ ecx ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x74 ]
push 0x4
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
push [ eax ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x74 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x40
je r-xdata
cmp [ eax + 0x90 ] 0x1a
jne r-xdata
cmp dh 0xff
je r-xdata
cmp [ eax + 0x90 ] 0x1a
jne r-xdata
push 0x0
push [ eax ]
call [ EnableWindow@IAT ]
cmp dl 0xa
je r-xdata
push 0x1
push [ eax ]
call [ EnableWindow@IAT ]
sub_46e305
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
lea ecx [ ebp + 0x10 ]
call sub_40cdb4
mov ebx [ ebp + 0xc ]
push ebx
mov esi eax
mov [ ebp - 0x8 ] 0x0
call sub_4218fb
mov edi [ ebp + 0x8 ]
pop ecx
cmp eax 0x4
jbe r-xdata
movsx eax [ edi + 0x8e ]
push 0x2010
push eax
movsx eax [ edi + 0x8c ]
push eax
push 0x1
push ebx
push 0x0
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
push r--data
push ebx
call sub_4218fb
add eax 0xfffffffc
pop ecx
lea eax [ ebx + eax * 2 ]
push eax
call sub_421bc7
neg eax
sbb al al
pop ecx
inc al
pop ecx
push r--data
push ebx
mov [ ebp - 0x8 ] eax
call sub_4218fb
add eax 0xfffffffc
pop ecx
lea ecx [ ebx + eax * 2 ]
push ecx
call sub_421bc7
neg eax
sbb al al
pop ecx
inc al
pop ecx
push r--data
push ebx
mov [ ebp + 0xc ] eax
call sub_4218fb
add eax 0xfffffffc
pop ecx
lea ecx [ ebx + eax * 2 ]
push ecx
call sub_421bc7
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x68 ] 0x0
je r-xdata
lea ecx [ ebp + 0x10 ]
call sub_40d16a
test al al
je r-xdata
push 0x32
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ SendMessageW@IAT ]
push 0x0
push eax
mov [ edi + 0x68 ] eax
mov edi [ edi ]
push 0x170
push edi
call esi
push 0x1
push 0x172
push 0x64
push edi
call esi
cmp [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
setne bl
call sub_412570
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x18
push [ edi + 0x68 ]
call [ DestroyIcon@IAT ]
test esi esi
jle r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x4
lea ecx [ ebp + 0x10 ]
call sub_40d2c0
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jns r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test esi esi
jle r-xdata
lea ecx [ ebp + 0x10 ]
call sub_4084a6
mov eax [ ebp + 0x18 ]
push 0x0
mov ecx [ eax ]
movsx eax [ edi + 0x8e ]
push eax
movsx eax [ edi + 0x8c ]
push eax
push 0x1
push ecx
push [ ebp + 0xc ]
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp [ edi + 0x8c ] 0x10
push 0x1
lea eax [ ebp - 0x4 ]
jle r-xdata
or eax 0xffffffff
sub eax esi
mov esi eax
test esi esi
mov eax [ ebp - 0x4 ]
movsx eax [ edi + 0x8e ]
push 0x0
push eax
movsx eax [ edi + 0x8c ]
push eax
movzx eax si
push 0x1
push eax
push [ ebp + 0xc ]
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push [ ebp + 0xc ]
call [ FreeLibrary@IAT ]
jmp r-xdata
push eax
movsx eax [ edi + 0x8e ]
push eax
movsx eax [ edi + 0x8c ]
push eax
movzx eax si
push 0x1
push eax
jmp r-xdata
push eax
push 0x0
push 0x0
push eax
jmp r-xdata
lea ecx [ ebp + 0x10 ]
call sub_4084a6
mov eax [ ebp + 0x18 ]
push 0x0
mov ecx [ eax ]
movsx eax [ edi + 0x8e ]
push eax
movsx eax [ edi + 0x8c ]
push eax
push 0x1
push ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
push esi
push ebx
call [ ExtractIconExW@IAT ]
sub_46e541
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x24
push ebx
push esi
push edi
xor edi edi
cmp [ eax ] di
je r-xdata
mov eax edi
mov [ ebp + 0xc ] eax
push edi
push edi
push 0x3
push edi
push edi
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push eax
push edi
mov [ esi + 0x64 ] eax
mov esi [ esi ]
push 0x172
push esi
call [ SendMessageW@IAT ]
mov eax esi
push [ esi + 0x64 ]
call [ DeleteObject@IAT ]
mov eax [ ebp + 0xc ]
push 0x0
push edi
call [ GetFileSize@IAT ]
mov esi eax
push esi
push 0x2
call [ GlobalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
call [ GlobalLock@IAT ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push esi
push eax
push edi
call [ ReadFile@IAT ]
push ebx
mov esi eax
call [ GlobalUnlock@IAT ]
push edi
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
call [ CreateStreamOnHGlobal@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push r--data
xor edi edi
push edi
push edi
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
call [ OleLoadPicture@IAT ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push ebx
call [ GlobalFree@IAT ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp + 0xc ]
push edx
push ecx
call [ eax + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
push 0x18
push [ ebp + 0xc ]
call [ GetObjectW@IAT ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
cmp [ edx ] edi
jne r-xdata
push 0x2000
push [ ecx ]
push [ edx ]
push edi
push [ ebp + 0xc ]
call [ CopyImage@IAT ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ecx ] edi
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
mov [ ecx ] eax
sub_46e691
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
call sub_42010a
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_468aef
mov edi eax
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_468aef
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_46e6e9
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_402b56
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_46e729
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_468b88
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_46e772
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41b155
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0x20
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
je r-xdata
pop ebp
jmp [ DefDlgProcW@IAT ]
mov ecx [ ebp + 0x14 ]
mov eax ecx
shr eax 0x10
push eax
movzx eax cx
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_46e7d3
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x8 ]
call [ CallWindowProcW@IAT ]
jmp r-xdata
pop ebp
retn 0x10
sub_46e7d3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41b155
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov edx [ eax ]
mov eax [ rw-data ]
mov ecx [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
movzx eax [ edx + 0x84 ]
cmp ax 0xffff
je r-xdata
push [ eax + 0x10 ]
movzx ecx [ ebp + 0x14 ]
movzx eax [ ebp + 0x10 ]
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x20
push [ ebp + 0x8 ]
call [ edx + 0x8 ]
cwde
push eax
jmp r-xdata
pop ebp
retn 0x10
call sub_46cfc5
xor eax eax
inc eax
jmp r-xdata
sub_46e83c
push ebp
mov ebp esp
test [ ebp + 0x1c ] 0x2
je r-xdata
pop ebp
retn 0x18
push esi
mov esi [ ebp + 0x8 ]
push 0x1
push 0x2
push 0xffffffff
push 0x0
push esi
call sub_41b58b
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ MoveToEx@IAT ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
call [ LineTo@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push esi
call [ StrokePath@IAT ]
pop esi
push esi
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
sub_46e896
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
push 0xffffffff
push [ ebp + 0x8 ]
call sub_41b517
pop esi
leave
retn 0x8
push ebx
push edi
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
lea eax [ esi + 0x14 ]
lea ebx [ esi + 0x10 ]
mov [ ebp + 0xc ] eax
xor edi edi
cmp [ esi + 0xc ] edi
jle r-xdata
pop edi
pop ebx
inc edi
add eax 0x8
add ebx 0x8
mov [ ebp + 0xc ] eax
cmp edi [ esi + 0xc ]
jl r-xdata
cmp [ ebp - 0x14 ] 0x7
jbe r-xdata
mov ecx [ eax ]
mov edx [ ebx ]
mov [ ebp - 0xc ] ecx
mov cl [ esi + edi + 0x810 ]
cmp cl 0x2
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
jb r-xdata
push ecx
push [ ebp - 0xc ]
push edx
push [ ebp + 0x8 ]
call sub_46e9c8
mov al [ esi + edi + 0x810 ]
and al 0xfe
cmp al 0x4
jne r-xdata
cmp [ ebp - 0x14 ] 0x14
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
add [ ebp + 0xc ] 0x8
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_46e83c
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ eax ]
push [ ebx + 0x8 ]
push [ ebp + 0x8 ]
call sub_46e9c8
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x8 ]
mov edx [ eax ]
push edx
add eax 0x8
push ecx
push [ eax ]
add ebx 0x10
mov [ ebp - 0x8 ] ecx
push [ ebx ]
mov [ ebp - 0x10 ] edx
push [ ebp + 0x8 ]
add edi 0x2
mov [ ebp + 0xc ] eax
call sub_46e83c
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ eax ]
push [ ebx ]
push [ ebp + 0x8 ]
call sub_46e9c8
jmp r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub_46e9c8
push ebp
mov ebp esp
test [ ebp + 0x14 ] 0x1
je r-xdata
pop ebp
retn 0x10
push ebx
push esi
push 0x1
xor ebx ebx
push ebx
push 0xffffffff
push ebx
push [ ebp + 0x8 ]
call sub_41b58b
mov esi [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
lea eax [ esi - 0x2 ]
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
push ebx
lea eax [ esi + 0x3 ]
mov esi [ LineTo@IAT ]
push eax
push [ ebp + 0x8 ]
call esi
push 0x0
lea eax [ ebx - 0x2 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
lea eax [ ebx + 0x3 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp [ rw-data ] 0x0
pop esi
pop ebx
je r-xdata
push [ ebp + 0x8 ]
call [ StrokePath@IAT ]
push [ ebp + 0x8 ]
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
sub_46ea4e
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi rw-data
mov ecx esi
call sub_41af7d
mov edx [ rw-data ]
push 0x1
mov eax [ edx + eax * 4 ]
mov ecx esi
push [ eax ]
call sub_41b736
movzx ecx [ ebp + 0x14 ]
movzx eax [ ebp + 0x10 ]
shl ecx 0x10
pop esi
or ecx eax
cmp [ ebp + 0x1c ] 0x0
push ecx
push [ ebp + 0x18 ]
je r-xdata
push 0x204
push 0x201
jmp r-xdata
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x18
sub_46eaa6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x38
push ebx
push edi
push [ ebp + 0x8 ]
mov ebx rw-data
mov ecx ebx
call sub_41af7d
mov ecx [ rw-data ]
mov [ esp + 0xc ] eax
mov eax [ ecx + eax * 4 ]
push 0x1
push [ eax ]
mov ecx ebx
call sub_41b736
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
je r-xdata
movzx ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0x14 ]
push 0x205
jmp r-xdata
movzx ecx bx
movzx eax di
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0x14 ]
push 0x202
push 0x0
call [ ImageList_DragLeave@IAT ]
call [ ImageList_EndDrag@IAT ]
call [ ReleaseCapture@IAT ]
push ebx
push edi
lea eax [ esp + 0x14 ]
push eax
call sub_46d5ee
mov edx eax
mov [ esp + 0x10 ] edx
cmp edx 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp edx [ rw-data ]
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x8
je r-xdata
and [ rw-data ] 0x0
mov eax [ eax ]
mov [ esp + 0xc ] eax
push 0x0
lea eax [ esp + 0x18 ]
push eax
push [ rw-data ]
call sub_46a8dc
push 0x0
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x1c ]
call sub_46a8dc
mov ecx [ rw-data ]
mov edx eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] edx
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
mov cl [ ecx + 0x90 ]
cmp cl 0x2
je r-xdata
push edx
push [ esp + 0x10 ]
call [ SetWindowTextW@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push [ esp + 0x18 ]
call [ SendMessageW@IAT ]
mov edx [ esp + 0x14 ]
cmp cl 0x3
jne r-xdata
push edx
call j_sub_4228ca#2
and [ esp + 0x24 ] 0x0
and [ esp + 0x2c ] 0x0
pop ecx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x2c ] 0x1
call sub_412570
mov eax [ esp + 0x10 ]
push r--data
lea ecx [ esp + 0x34 ]
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x24 ] eax
call sub_40caee
push 0x2
push 0x1
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_40d380
lea ecx [ esp + 0x30 ]
call sub_405cd3
push r--data
lea ecx [ esp + 0x24 ]
call sub_40ca8e
push r--data
lea ecx [ esp + 0x34 ]
call sub_40caee
push 0x2
push 0x1
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_40d380
lea ecx [ esp + 0x30 ]
call sub_405cd3
push 0x0
push 0x0
push [ esp + 0x20 ]
mov ecx rw-data
push 0xfffffff3
call sub_468c6b
lea ecx [ esp + 0x20 ]
call sub_412570
sub_46ecbc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov ecx [ rw-data ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + eax * 4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
mov [ esp + 0x1c ] ebx
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edi [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
xor esi esi
mov [ esp + 0x14 ] edi
test edi edi
jne r-xdata
call [ GetFocus@IAT ]
push eax
mov [ esp + 0x24 ] eax
call [ GetDlgCtrlID@IAT ]
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push edi
call sub_46a7e0
push [ ebx + 0x1c4 ]
call sub_422626
pop ecx
cmp edi eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0xf060
push 0x112
cmp edi 0x1
jne r-xdata
test ecx ecx
jne r-xdata
xor esi esi
mov [ ebx + 0x1c4 ] esi
cmp [ ebp + 0x14 ] esi
jne r-xdata
push ecx
mov ecx rw-data
call sub_41b155
mov ebx eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0xc ] ebx
cmp ebx 0xffffffff
je r-xdata
test ecx ecx
jne r-xdata
mov ebx eax
mov [ esp + 0x18 ] ebx
jmp r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
movzx ecx di
movzx eax ax
shl ecx 0x10
or ecx eax
push ecx
push 0x111
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x24 ]
push eax
push ebx
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
mov ebx eax
mov edi esi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edi
jmp r-xdata
movzx eax di
push esi
push eax
push 0x111
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0xc ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0xf
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x1c4 ]
test ecx ecx
je r-xdata
push [ ebp + 0x8 ]
call [ PostMessageW@IAT ]
jmp r-xdata
push edi
push ebx
call sub_46de72
test al al
jne r-xdata
push 0x208
call sub_42010a
pop ecx
mov ecx [ rw-data ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0xc ]
push 0x2c
mov ecx [ ecx + eax * 4 ]
push esi
mov ecx [ ecx ]
mov eax [ ecx + 0xc ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x34 ]
push eax
mov [ esp + 0x34 ] 0x30
call sub_421970
mov eax [ esp + 0x28 ]
add esp 0xc
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x28 ]
push eax
push esi
push ebx
push [ esp + 0x18 ]
mov [ esp + 0x3c ] 0x10
mov [ esp + 0x60 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push esi
push ecx
mov [ eax + 0x1c4 ] esi
call sub_46de72
jmp r-xdata
push [ esp + 0x1c ]
call j_sub_4228ca#2
pop ecx
test [ esp + 0x30 ] 0x200
je r-xdata
push [ esp + 0xc ]
call [ GetMenuItemCount@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jle r-xdata
or eax 0xffffffff
push esi
push [ esp + 0x10 ]
call [ GetMenuItemID@IAT ]
cmp eax ebx
je r-xdata
mov eax esi
dec esi
mov [ esp + 0x20 ] eax
js r-xdata
inc esi
cmp esi [ esp + 0x10 ]
jl r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ esi + 0x1 ]
lea esi [ eax + 0x1 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x4c ] edx
cmp esi [ esp + 0x10 ]
jge r-xdata
mov edi [ esp + 0xc ]
jmp r-xdata
push 0x400
push eax
lea eax [ esi - 0x1 ]
push eax
push ecx
push [ esp + 0x1c ]
call [ CheckMenuRadioItem@IAT ]
mov edi [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
dec esi
jns r-xdata
test [ esp + 0x30 ] 0x200
je r-xdata
cmp eax ebx
jne r-xdata
inc esi
cmp esi ebx
jl r-xdata
test [ esp + 0x30 ] 0x200
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push 0x1
push esi
push edi
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x20 ]
lea eax [ esp + 0x28 ]
push eax
push 0x1
push esi
push edi
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
sub_46efa8
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi rw-data
push edi
mov ecx esi
call sub_41af7d
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov ebx [ eax ]
cmp [ ebp + 0xc ] edi
jne r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_41b155
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
xor esi esi
cmp [ ebx + 0x1a0 ] esi
je r-xdata
movzx ecx [ ebp + 0x14 ]
movzx eax [ ebp + 0x10 ]
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x7b
push edi
call [ DefDlgProcW@IAT ]
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
mov eax [ ecx ]
mov cl [ eax + 0x90 ]
cmp cl 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
push esi
push edi
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push esi
push [ ebx + 0x1a0 ]
cmp cl 0xf
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp cl 0x13
je r-xdata
cmp cl 0x10
je r-xdata
xor esi esi
cmp [ eax + 0xc ] esi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push [ ebx ]
mov eax [ eax + ecx * 4 ]
push [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x8 ]
push esi
push [ eax + 0xc ]
jmp r-xdata
call [ TrackPopupMenuEx@IAT ]
jmp r-xdata
sub_46f0a1
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov edi rw-data
mov ecx edi
call sub_41af7d
mov edx [ rw-data ]
mov esi [ ebp + 0xc ]
mov eax [ edx + eax * 4 ]
cmp [ esi ] 0x4
mov ebx [ eax ]
jne r-xdata
push esi
push [ esi + 0x4 ]
push 0x2b
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
push [ esi + 0x14 ]
mov ecx edi
call sub_41b155
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov ecx [ ecx + edi * 4 ]
push [ ecx ]
push esi
call sub_46d095
test [ esi + 0x10 ] 0x10
je r-xdata
and [ ebx + 0x1c4 ] 0x0
jmp r-xdata
push 0x0
push edi
push 0x401
push [ ebx ]
call [ SendMessageW@IAT ]
jmp r-xdata
sub_46f122
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x25c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x48 ]
push eax
push esi
call [ DragQueryPoint@IAT ]
push [ esp + 0x4c ]
lea eax [ esp + 0x14 ]
push [ esp + 0x4c ]
push eax
call sub_46d5ee
mov edx [ esp + 0x10 ]
mov ecx [ rw-data ]
mov ebx eax
mov ecx [ ecx + edx * 4 ]
mov eax [ ecx ]
mov [ esp + 0x38 ] eax
cmp ebx 0xffffffff
je r-xdata
push 0x0
push esi
push 0x233
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x8
je r-xdata
mov eax [ eax ]
lea ecx [ esp + 0x50 ]
push ecx
lea ecx [ esp + 0x44 ]
push ecx
push 0xb0
xor edi edi
push eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] edi
call [ SendMessageW@IAT ]
push edi
push edi
push 0xffffffff
push esi
call [ DragQueryFileW@IAT ]
mov [ esp + 0x44 ] eax
test eax eax
jle r-xdata
push [ esp + 0x14 ]
push [ esp + 0x44 ]
push 0xb1
push [ esp + 0x1c ]
call [ SendMessageW@IAT ]
push esi
call [ DragFinish@IAT ]
xor edi edi
xor esi esi
inc edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
call sub_412570
push r--data
lea ecx [ esp + 0x2c ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x1c ] ebx
call sub_40caee
push 0x2
push edi
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call sub_40d380
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea ecx [ esp + 0x18 ]
call sub_412570
or [ esp + 0x18 ] 0xffffffff
push r--data
lea ecx [ esp + 0x2c ]
mov [ esp + 0x28 ] edi
call sub_40caee
push 0x2
push edi
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call sub_40d380
lea ecx [ esp + 0x28 ]
call sub_405cd3
lea eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_40ca8e
push r--data
lea ecx [ esp + 0x2c ]
call sub_40caee
push 0x2
push edi
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call sub_40d380
lea ecx [ esp + 0x28 ]
call sub_405cd3
push esi
push esi
push [ esp + 0x40 ]
mov ecx rw-data
push 0xfffffff3
call sub_468c6b
lea ecx [ esp + 0x18 ]
call sub_412570
jmp r-xdata
dec eax
mov [ esp + 0x3c ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x58 ]
push eax
push 0x1
push 0xc2
push [ esp + 0x1c ]
call [ SendMessageW@IAT ]
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x58 ]
push eax
push 0xb0
push [ esp + 0x1c ]
call [ SendMessageW@IAT ]
push [ esp + 0x14 ]
push [ esp + 0x18 ]
push 0xb1
push [ esp + 0x1c ]
call [ SendMessageW@IAT ]
inc edi
cmp edi [ esp + 0x44 ]
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x2
lea eax [ esp + 0x58 ]
jne r-xdata
push 0x104
lea eax [ esp + 0x5c ]
push eax
push edi
push esi
call [ DragQueryFileW@IAT ]
cmp edi [ esp + 0x3c ]
jge r-xdata
push r--data
push r--data
jmp r-xdata
push eax
call sub_421914
pop ecx
pop ecx
sub_46f37c
push ebp
mov ebp esp
push [ ebp + 0x18 ]
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x14 ]
mov eax [ eax + ecx * 4 ]
push 0x211
mov eax [ eax ]
push [ ebp + 0x10 ]
mov [ eax + 0x1a8 ] 0x0
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x14
sub_46f3ab
push ebp
mov ebp esp
push [ ebp + 0x18 ]
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x14 ]
mov eax [ eax + ecx * 4 ]
push 0x212
mov eax [ eax ]
push [ ebp + 0x10 ]
mov [ eax + 0x1a8 ] 0x1
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x14
sub_46f3da
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
cmp [ esi + 0x184 ] 0x0
je r-xdata
push [ ebp + 0x18 ]
mov [ esi + 0x184 ] 0x0
push [ ebp + 0x14 ]
push 0x232
push [ ebp + 0x10 ]
call [ DefDlgProcW@IAT ]
pop esi
pop ebp
retn 0x14
push 0x0
push 0x0
push esi
push 0xfffffff4
mov ecx rw-data
call sub_468c6b
sub_46f425
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x53
push [ ebp + 0x10 ]
call [ DefDlgProcW@IAT ]
push [ eax + 0x28 ]
call sub_46e13e
jmp r-xdata
pop ebp
retn 0x14
sub_46f45a
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
je r-xdata
movzx ecx si
movzx eax di
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0x14 ]
push 0x200
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop edi
pop esi
leave
retn 0x10
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] esi
call [ ClientToScreen@IAT ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call [ ImageList_DragMove@IAT ]
sub_46f4b2
push ebp
mov ebp esp
sub esp 0x1c
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov edi [ eax ]
lea eax [ ebp - 0x1c ]
push eax
push [ edi ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
sub eax [ edi + 0x3c ]
sub edx [ edi + 0x40 ]
cmp [ edi + 0xc ] 0x80000000
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edx
jne r-xdata
add [ edi + 0x3c ] eax
add [ edi + 0x40 ] edx
pop edi
leave
retn 0xc
push ebx
push esi
mov esi [ rw-data ]
xor ecx ecx
mov [ ebp - 0xc ] esi
mov ebx ecx
test esi esi
je r-xdata
pop esi
pop ebx
cmp ecx [ rw-data ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov edx [ eax ]
test edx edx
je r-xdata
inc ebx
cmp ebx esi
jb r-xdata
mov eax [ edx + 0x8 ]
inc ecx
mov [ ebp - 0x8 ] ecx
cmp eax [ edi ]
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ edx ]
call [ GetWindowRect@IAT ]
mov esi [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
push 0x1
sub eax ecx
add ecx [ ebp + 0x8 ]
sub edx esi
add esi [ ebp - 0x4 ]
push edx
push eax
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] esi
mov eax [ eax + ebx * 4 ]
push esi
mov eax [ eax ]
push ecx
push [ eax ]
call [ MoveWindow@IAT ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
sub_46f594
push ebp
mov ebp esp
push 0xffffffec
push [ ebp + 0x8 ]
call [ GetWindowLongW@IAT ]
test eax 0x10000
je r-xdata
movzx ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl ecx 0x10
or ecx eax
push ecx
push 0x0
push 0x84
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
push 0x2
pop eax
jmp r-xdata
pop ebp
retn 0xc
sub_46f5d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa4
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ebx rw-data
mov ecx ebx
call sub_41af7d
mov ecx [ rw-data ]
mov edi [ ebp + 0x10 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + eax * 4 ]
mov ecx 0xfffffe6e
mov esi [ eax ]
mov eax [ edi + 0x8 ]
mov [ esp + 0x3c ] esi
cmp eax ecx
ja r-xdata
cmp eax 0xfffffff0
ja r-xdata
je r-xdata
cmp eax 0xfffffff4
je r-xdata
je r-xdata
mov esi [ SendMessageW@IAT ]
xor ebx ebx
push ebx
push 0x9
push 0x110a
push [ edi ]
call esi
test eax eax
je r-xdata
mov ecx 0xfffffdd9
cmp eax ecx
ja r-xdata
push [ edi ]
mov ecx ebx
call sub_41b155
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffb
je r-xdata
call [ ReleaseCapture@IAT ]
jmp r-xdata
cmp eax 0xfffffec0
je r-xdata
push edi
push [ ebp + 0xc ]
push 0x4e
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x54 ]
push eax
push ebx
push 0x113e
push [ edi ]
mov [ esp + 0x64 ] 0x4
call esi
test eax eax
je r-xdata
cmp eax 0xfffffdda
je r-xdata
je r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov al [ ecx + 0x90 ]
cmp al 0x10
je r-xdata
push 0x1
push esi
mov esi rw-data
xor ebx ebx
mov ecx esi
mov [ esp + 0x1f ] bl
call sub_41b736
lea eax [ esp + 0x18 ]
push eax
call [ GetCursorPos@IAT ]
lea eax [ esp + 0x18 ]
push eax
push [ edi ]
call [ ScreenToClient@IAT ]
push [ edi ]
mov ecx esi
call sub_41b155
mov esi eax
mov [ esp + 0x10 ] esi
cmp esi 0xffffffff
jne r-xdata
cmp eax 0xfffffffe
jne r-xdata
push 0x1
push 0x0
push [ edi ]
call [ InvalidateRect@IAT ]
jmp r-xdata
cmp eax 0xfffffed4
je r-xdata
mov eax [ edi + 0x34 ]
cmp eax [ edi + 0x5c ]
je r-xdata
mov ebx [ GetKeyState@IAT ]
push 0x11
call ebx
test ax ax
jns r-xdata
cmp eax 0xfffffdee
je r-xdata
xor ebx ebx
push ebx
push ebx
push 0x130b
push [ edi ]
call [ SendMessageW@IAT ]
cmp eax 0xfffffd09
je r-xdata
mov eax [ edi + 0xc ]
dec eax
je r-xdata
cmp al 0x13
jne r-xdata
mov eax [ rw-data ]
mov [ esp + 0x20 ] esi
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
mov al [ eax + 0x90 ]
cmp al 0x10
je r-xdata
push [ edi ]
call [ GetParent@IAT ]
push eax
mov ecx rw-data
call sub_41b155
mov esi eax
mov [ esp + 0x10 ] esi
cmp esi 0xffffffff
je r-xdata
push 0x1
push esi
mov ecx ebx
call sub_41b736
lea eax [ esp + 0x18 ]
push eax
call [ GetCursorPos@IAT ]
lea eax [ esp + 0x18 ]
push eax
push [ edi ]
call [ ScreenToClient@IAT ]
push [ edi ]
mov ecx ebx
call sub_41b155
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffff93
je r-xdata
cmp [ edi + 0xc ] 0x1000
je r-xdata
push 0x9
call ebx
test ax ax
jns r-xdata
cmp [ esi + 0x188 ] 0x0
je r-xdata
cmp eax 0xfffffe3d
je r-xdata
push [ edi + 0x4 ]
cmp [ esi + 0x199 ] 0x0
mov [ esi + 0x19a ] 0x1
jne r-xdata
cmp eax 0xfffffd0e
je r-xdata
push 0x20
pop eax
jmp r-xdata
sub eax 0x10000
jne r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x28 ]
push eax
push ebx
push 0x1111
push [ edi ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
cmp al 0x13
jne r-xdata
mov [ esp + 0x17 ] 0x1
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov al [ eax + 0x90 ]
cmp al 0x10
jb r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push [ rw-data ]
call [ ImageList_SetDragCursorImage@IAT ]
push 0xfffffff0
push 0xfffffff8
push ebx
push [ rw-data ]
call [ ImageList_BeginDrag@IAT ]
push [ ebp + 0x8 ]
call [ SetCapture@IAT ]
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0x28 ]
mov [ rw-data ] eax
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] 0x1
call sub_412570
mov eax [ ebp + 0xc ]
xor esi esi
inc esi
push r--data
lea ecx [ esp + 0x44 ]
mov [ esp + 0x38 ] esi
mov [ esp + 0x2c ] eax
call sub_40caee
push 0x2
push esi
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_40d380
lea ecx [ esp + 0x40 ]
call sub_405cd3
lea esi [ edi + 0x20 ]
push esi
push [ edi ]
call [ ClientToScreen@IAT ]
push [ edi + 0x24 ]
push [ esi ]
push ebx
call [ ImageList_DragEnter@IAT ]
lea ecx [ esp + 0x28 ]
call sub_412570
jmp r-xdata
cmp eax 0xffffff94
jne r-xdata
cmp [ edi + 0xc ] 0x1
jmp r-xdata
xor ebx ebx
push ebx
push ebx
push 0x130b
push [ edi ]
call [ SendMessageW@IAT ]
push 0x10
mov esi eax
call [ GetKeyState@IAT ]
test ax ax
jns r-xdata
mov edx [ rw-data ]
push 0x3
pop ecx
cmp edx ecx
jl r-xdata
cmp eax 0xfffffe64
jne r-xdata
mov [ esi + 0x19a ] 0x0
push [ edi + 0x8 ]
jmp r-xdata
mov [ esi + 0x199 ] 0x1
jmp r-xdata
cmp eax 0xfffffd0f
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor bl bl
cmp [ ecx + 0x48 ] 0xfe000000
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ edi ]
call [ ClientToScreen@IAT ]
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x54 ]
push eax
push ebx
push 0x113e
push [ edi ]
mov [ esp + 0x64 ] 0x4
call [ SendMessageW@IAT ]
test [ esp + 0x30 ] 0x46
je r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x40 ]
push eax
push ebx
push 0x1012
push [ edi ]
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
jle r-xdata
cmp al 0x11
jbe r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x28 ]
push eax
push esi
mov ecx ebx
call sub_40cf2c
test al al
je r-xdata
je r-xdata
inc esi
dec esi
jmp r-xdata
mov esi [ rw-data ]
mov esi [ edi ]
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x100
je r-xdata
cmp [ esi + 0x19a ] 0x1
jne r-xdata
cmp eax 0xfffffd16
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x28 ]
push eax
push [ edi + 0x2c ]
mov ecx rw-data
call sub_40cf2c
test al al
jne r-xdata
inc bl
mov eax [ esp + 0x3c ]
push ebx
push [ eax ]
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push 0x80
push ecx
call [ TrackPopupMenuEx@IAT ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x28 ]
push eax
push [ esp + 0x80 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ edi ]
call [ ClientToScreen@IAT ]
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ esp + 0x17 ] bl
jne r-xdata
mov eax [ esp + 0x18 ]
mov esi [ SendMessageW@IAT ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x28 ]
push eax
xor ebx ebx
push ebx
push 0x1111
push [ edi ]
call esi
test eax eax
je r-xdata
cmp al 0x13
jne r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
xor ebx ebx
mov eax [ eax + ecx * 4 ]
push ebx
mov ecx [ eax ]
mov ax [ edi + 0x10 ]
mov [ ecx + 0x96 ] ax
push [ edi + 0x4 ]
call sub_46de72
mov edx [ rw-data ]
mov ecx [ esp + 0x10 ]
mov eax [ edx + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x28 ] ebx
jbe r-xdata
push ebx
push [ esp + 0x7c ]
jmp r-xdata
push esi
inc ecx
cmp ecx edx
jle r-xdata
movzx eax [ eax + 0x93 ]
cmp eax [ edi + 0x4 ]
je r-xdata
cmp [ edi + 0xc ] 0x20
jne r-xdata
xor ebx ebx
mov [ esi + 0x199 ] bx
jmp r-xdata
push eax
push [ edi + 0x4 ]
call sub_46de72
push eax
jmp r-xdata
mov eax [ rw-data ]
mov esi [ esp + 0x10 ]
push 0xfffffff0
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
push [ eax + 0x34 ]
call [ GetWindowLongW@IAT ]
test eax 0x8000000
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
mov esi [ esp + 0x20 ]
mov esi [ esp + 0x10 ]
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] ebx
jne r-xdata
mov eax [ esp + 0x3c ]
push ebx
push [ eax ]
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push ebx
push ecx
call [ TrackPopupMenuEx@IAT ]
jmp r-xdata
mov [ esp + 0x80 ] eax
lea eax [ esp + 0x7c ]
push eax
push ebx
push 0x104b
push [ edi ]
mov [ esp + 0x8c ] 0x4
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x54 ]
push eax
push ebx
push 0x113e
push [ edi ]
mov [ esp + 0x64 ] 0xc
mov [ esp + 0x70 ] 0xf000
call esi
test [ esp + 0x30 ] 0x46
je r-xdata
mov eax [ esp + 0x18 ]
mov esi [ SendMessageW@IAT ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x40 ]
push eax
xor ebx ebx
push ebx
push 0x1012
push [ edi ]
call esi
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] esi
mov eax [ edx + ecx * 4 ]
mov ecx rw-data
mov eax [ eax ]
add eax 0x24
push eax
call sub_40c935
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
push sub_46de69
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x98 ]
mov [ rw-data ] al
push [ edi + 0x10 ]
push 0x1030
push [ edi ]
call [ SendMessageW@IAT ]
jmp r-xdata
call sub_46de72
jmp r-xdata
mov eax [ esi + ecx * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp ecx edx
jg r-xdata
xor ebx ebx
push ebx
push 0x9
push 0x110a
push esi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
test [ edi + 0x28 ] 0x11
mov ecx [ rw-data ]
je r-xdata
test [ esp + 0x48 ] 0xe
je r-xdata
push ebx
push 0x9
mov ebx 0x110b
push ebx
push [ edi ]
call esi
push [ esp + 0x34 ]
push 0x9
push ebx
push [ edi ]
call esi
jmp r-xdata
mov [ esp + 0x80 ] eax
lea eax [ esp + 0x7c ]
push eax
push ebx
push 0x104b
push [ edi ]
mov [ esp + 0x8c ] 0x4
call esi
test [ esp + 0x48 ] 0xe
je r-xdata
mov eax [ esi + ecx * 4 ]
push 0x4f
mov eax [ eax ]
push [ eax + 0x54 ]
lea eax [ edi + 0x10 ]
push eax
call sub_422c1d
add esp 0xc
xor eax eax
mov [ edi + 0xae ] ax
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x54 ]
push eax
push ebx
push 0x113e
push esi
mov [ esp + 0x64 ] 0x4
call [ SendMessageW@IAT ]
test eax eax
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
mov eax [ eax + 0x4c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x14
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x28 ]
push eax
push [ esp + 0xa4 ]
mov ecx rw-data
call sub_40cf2c
test al al
je r-xdata
push ebx
push [ esp + 0xa0 ]
jmp r-xdata
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
test eax eax
js r-xdata
mov [ edi + 0x30 ] eax
mov ecx [ rw-data ]
mov esi [ esp + 0x20 ]
mov esi [ esp + 0x10 ]
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
test bl bl
je r-xdata
cmp [ eax + 0xc ] ebx
jne r-xdata
mov [ edi + 0x34 ] eax
jmp r-xdata
test [ edi + 0x24 ] 0x1
je r-xdata
sub_46fe80
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
mov ecx rw-data
call sub_41b155
mov esi [ ebp + 0x10 ]
mov edx eax
cmp edx 0xffffffff
je r-xdata
movzx ecx [ ebp + 0x14 ]
push [ ebp + 0xc ]
movzx eax si
shl ecx 0x10
or ecx eax
cmp [ ebp + 0x18 ] 0x0
push ecx
je r-xdata
mov edi [ rw-data ]
cmp esi 0x8
jne r-xdata
push 0x115
push 0x114
jmp r-xdata
cmp esi 0x4
jne r-xdata
mov ecx [ edi + edx * 4 ]
mov eax [ ecx ]
cmp [ eax + 0x90 ] 0x12
je r-xdata
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
mov eax [ edi + edx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x16
jne r-xdata
push esi
push edx
call sub_46de72
test al al
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x14
sub_46ff04
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ ebp + 0xc ]
jne r-xdata
movzx ecx [ ebp + 0x14 ]
movzx eax [ ebp + 0x10 ]
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x20
push esi
call [ DefDlgProcW@IAT ]
push esi
mov ecx rw-data
call sub_41af7d
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov edi [ eax ]
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push esi
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
push [ edi + 0x10 ]
call sub_46cfc5
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x10
sub_46ff91
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov ebx [ eax ]
mov [ ebp - 0xc ] ebx
cmp [ ebx + 0x19c ] 0x0
mov esi [ ebx + 0x44 ]
mov ecx [ ebx + 0x48 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test esi esi
jle r-xdata
push 0xf
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x4 ]
sub ecx eax
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x14 ]
movzx ecx cx
movzx eax dx
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x5
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
test ecx ecx
jle r-xdata
test edx edx
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
push edi
push 0x3
pop edi
mov [ ebp + 0x8 ] edi
cmp [ rw-data ] edi
jl r-xdata
push 0x1
push 0x0
push [ ebx ]
call [ InvalidateRect@IAT ]
mov [ ebx + 0x184 ] 0x1
pop edi
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov edi [ eax ]
test edi edi
je r-xdata
pop esi
pop ebx
leave
retn 0x10
mov edi [ ebp + 0x8 ]
inc edi
mov [ ebp + 0x8 ] edi
cmp edi [ rw-data ]
jle r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
movsx eax [ edi + 0x88 ]
mov [ ebp - 0x10 ] eax
imul eax edx
cdq
idiv esi
mov esi eax
movsx eax [ edi + 0x8a ]
imul eax [ ebp + 0x14 ]
cdq
idiv ecx
mov ecx eax
movsx eax [ edi + 0x8c ]
imul eax [ ebp + 0x10 ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
movsx eax [ edi + 0x8e ]
imul eax [ ebp + 0x14 ]
cdq
idiv [ ebp - 0x4 ]
movzx edx [ edi + 0x86 ]
mov ebx eax
test dx dx
je r-xdata
push 0x0
push ebx
push [ ebp + 0xc ]
push ecx
push esi
push [ edi ]
call [ MoveWindow@IAT ]
mov al [ edi + 0x90 ]
test al al
jne r-xdata
test edx 0x100
je r-xdata
cmp al 0x16
jne r-xdata
push 0xffff
push 0x0
push 0x142
push [ edi ]
call [ SendMessageW@IAT ]
test edx 0x200
je r-xdata
movsx eax [ edi + 0x8c ]
mov [ ebp + 0xc ] eax
test dl 0x6
jne r-xdata
mov ebx [ ebp - 0xc ]
test [ edi + 0x92 ] 0x20
jne r-xdata
mov eax edx
and eax 0x2
je r-xdata
movsx ebx [ edi + 0x8e ]
test dl 0x60
jne r-xdata
mov eax [ ebp + 0x10 ]
test dl 0x8
je r-xdata
push 0x0
push [ edi + 0x34 ]
push 0x469
push [ edi ]
call [ SendMessageW@IAT ]
mov al [ edi + 0x93 ]
mov ebx [ ebp - 0xc ]
cmp al 0xff
je r-xdata
test dl 0x4
je r-xdata
movsx esi [ edi + 0x88 ]
mov eax [ ebp + 0x14 ]
test dl dl
jns r-xdata
cdq
sub eax edx
sar eax 0x1
cmp esi eax
jle r-xdata
sub eax [ ebp - 0x8 ]
cdq
sub eax edx
mov esi eax
movsx eax [ edi + 0x88 ]
sar esi 0x1
add esi eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
movzx eax al
cmp eax [ ebx + 0x190 ]
je r-xdata
mov eax edx
and eax 0x20
je r-xdata
test ax ax
je r-xdata
cdq
sub eax edx
sar eax 0x1
cmp ecx eax
jle r-xdata
sub eax [ ebp - 0x4 ]
cdq
sub eax edx
mov ecx eax
movsx eax [ edi + 0x8a ]
sar ecx 0x1
add ecx eax
jmp r-xdata
movzx edx [ edi + 0x86 ]
movsx edx [ edi + 0x88 ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0x10 ]
sub eax edx
sub eax [ ebp + 0xc ]
imul eax esi
cdq
idiv [ ebp - 0x8 ]
sub esi eax
sub esi [ ebp + 0xc ]
push 0x0
push [ edi ]
call [ ShowWindow@IAT ]
jmp r-xdata
test dl 0x40
je r-xdata
movsx ecx [ edi + 0x8a ]
movsx esi [ edi + 0x8c ]
sub esi [ ebp + 0xc ]
movsx eax [ edi + 0x88 ]
sub esi [ ebp - 0x8 ]
add esi eax
add esi [ ebp + 0x10 ]
movsx eax [ edi + 0x8c ]
sub eax esi
sub eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
add eax [ ebp + 0x10 ]
mov [ ebp + 0xc ] eax
jmp r-xdata
movzx edx [ edi + 0x86 ]
movsx edx [ edi + 0x8a ]
mov eax [ ebp - 0x4 ]
sub eax edx
sub eax ebx
imul eax [ ebp + 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
sub ecx eax
sub ecx ebx
test ax ax
movsx eax [ edi + 0x8a ]
je r-xdata
movsx ecx [ edi + 0x8e ]
sub ecx ebx
sub ecx [ ebp - 0x4 ]
add ecx eax
add ecx [ ebp + 0x14 ]
movsx ebx [ edi + 0x8e ]
sub ebx ecx
sub ebx [ ebp - 0x4 ]
add ebx eax
add ebx [ ebp + 0x14 ]
jmp r-xdata
sub_4702aa
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi rw-data
mov ecx esi
call sub_41af7d
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov edx [ eax ]
mov eax [ ebp + 0xc ]
and eax 0xfff0
sub eax 0xf000
je r-xdata
mov [ edx + 0x184 ] 0x1
sub eax 0x20
je r-xdata
push 0x0
push 0x0
push edx
push 0xfffffffc
mov ecx esi
call sub_468c6b
call sub_46d784
sub eax 0x10
je r-xdata
pop esi
pop ebp
retn 0x10
jmp r-xdata
push 0x0
push 0x0
push edx
push 0xfffffffa
jmp r-xdata
sub eax 0x30
je r-xdata
movzx ecx [ ebp + 0x14 ]
movzx eax [ ebp + 0x10 ]
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x112
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
mov ecx esi
call sub_468c6b
jmp r-xdata
push 0x0
push 0x0
push edx
push 0xfffffffd
mov ecx esi
call sub_468c6b
jmp r-xdata
sub eax 0xc0
jne r-xdata
test [ rw-data ] 0x1
jne r-xdata
push eax
push eax
push edx
push 0xfffffffb
sub_47035d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
movzx esi [ ecx ]
push edi
mov edi edx
test si si
je r-xdata
xor eax eax
mov ebx 0x8f
mov [ ebp - 0x4 ] 0x10
mov [ ebp - 0x8 ] 0xf
cmp si 0x76
jne r-xdata
movzx eax [ ecx + 0x2 ]
jmp r-xdata
cmp si 0x7f
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
lea ecx [ ecx + eax * 2 ]
movzx eax [ ecx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax 0x84
cmp si ax
je r-xdata
mov eax ecx
jmp r-xdata
add ecx 0x4
jmp r-xdata
cmp si 0x6c
jne r-xdata
movzx eax si
movzx eax [ eax + r--data ]
add eax 0xfffffffc
cmp si ax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx esi [ ecx ]
test si si
jne r-xdata
mov eax 0x85
cmp si ax
je r-xdata
movzx edx si
cmp edx ebx
jg r-xdata
mov eax edx
sub eax 0x91
je r-xdata
je r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
dec eax
dec eax
je r-xdata
cmp edx 0x55
jl r-xdata
cmp edx 0x1d
jl r-xdata
dec eax
dec eax
jne r-xdata
movzx eax [ edx + r--data ]
lea ecx [ ecx + eax * 2 ]
test edi edi
je r-xdata
cmp edx 0x5a
jle r-xdata
cmp edx 0x1e
jle r-xdata
movzx eax [ ecx + 0x2 ]
push 0x10
pop esi
cmp ax si
je r-xdata
cmp edx 0x5d
jle r-xdata
mov ax [ ecx - 0x2 ]
mov edx 0xfc00
and ax dx
mov edx 0xd800
cmp ax dx
jne r-xdata
lea eax [ edx - 0x21 ]
cmp eax 0x19
ja r-xdata
add ecx 0x4
jmp r-xdata
push 0xf
pop esi
cmp ax si
movzx eax [ ecx + 0x4 ]
cmp ax [ ebp - 0x4 ]
je r-xdata
cmp edx 0x60
jle r-xdata
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x8 ]
jmp r-xdata
cmp edx 0x61
jne r-xdata
jne r-xdata
sub_4704aa
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov eax [ esi ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn
push edi
lea esi [ esi + edi * 4 ]
add esi 0x4
mov eax [ esi ]
cmp eax 0xffffffff
jb r-xdata
lea edx [ esi + 0x4 ]
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edi edi
cmp eax [ ebp + 0x14 ]
je r-xdata
pop edi
cmp [ edx ] ecx
je r-xdata
inc edi
lea edx [ edx + 0x4 ]
inc ecx
push [ esi + edi * 4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4076f5
add esp 0x10
add ebx eax
sub_47050a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ esi ]
shr edi 0xb
and edi 0x1
xor ebx ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
mov edx [ esi ]
cmp edx 0xffffffff
jb r-xdata
dec eax
push eax
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4076f5
add esp 0x10
mov ebx eax
jmp r-xdata
lea eax [ edx + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
lea ecx [ esi + 0x4 ]
cmp [ ecx ] eax
je r-xdata
mov esi ecx
mov eax [ esi ]
inc eax
lea eax [ esi + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ eax ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec eax
push eax
mov eax [ esi ]
inc eax
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4076f5
mov esi [ ebp + 0x10 ]
add esp 0x10
add ebx eax
mov eax edi
neg eax
sbb eax eax
and eax 0x110000
sub_470597
push ebp
mov ebp esp
push esi
lea esi [ edx - 0x1 ]
mov eax ecx
cdq
push edi
mov edi 0x80
idiv edi
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
cmp esi 0x8
ja r-xdata
xor eax eax
jmp [ esi * 4 + jump_table_47070b ]
mov al [ eax * 8 + r--data ]
cmp al 0x9
je r-xdata
movzx ecx [ eax * 8 + r--data ]
mov eax [ ebp + 0x8 ]
xor edx edx
cmp eax [ ecx * 4 + r--data ]
sete dl
movzx eax [ eax * 8 + r--data ]
movzx eax [ eax * 8 + r--data ]
jmp r-xdata
movzx eax [ eax * 8 + r--data ]
xor edx edx
mov eax [ eax * 4 + r--data ]
inc edx
cmp eax edx
je r-xdata
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
movzx eax [ eax * 8 + r--data ]
xor edx edx
mov eax [ eax * 4 + r--data ]
inc edx
cmp eax edx
je r-xdata
movzx eax [ eax * 8 + r--data ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x5
je r-xdata
sete al
jmp r-xdata
xor eax eax
cmp ecx [ ebp + 0xc ]
xor ecx ecx
cmp [ ebp + 0x8 ] eax
sete cl
jmp r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
jmp r-xdata
cmp eax 0x3
cmp ecx 0x9
je r-xdata
cmp ecx 0x9
je r-xdata
cmp eax 0x3
je r-xdata
mov edx [ eax ]
cmp ecx edx
jae r-xdata
pop edi
pop esi
pop ebp
retn
cmp al 0x8
xor edx edx
jmp r-xdata
cmp ecx 0xa
cmp ecx 0xa
je r-xdata
cmp ecx 0x5f
jmp r-xdata
lea eax [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx 0xc
je r-xdata
cmp ecx 0xb
jmp r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp ecx 0xd
jmp r-xdata
je r-xdata
je r-xdata
sub_47072f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
mov edi r--data
xor esi esi
mov al 0x5
mov al [ esi + r--data ]
inc edi
add edi ebx
inc esi
test al al
jne r-xdata
push edx
mov edx edi
call sub_41ee64
pop ecx
test eax eax
je r-xdata
movzx ebx al
cmp edx ebx
jne r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
sub_47077a
push ebx
push esi
mov esi ecx
add esi 0x4
movzx ebx [ esi - 0x2 ]
movzx eax [ esi ]
push edi
mov edi edx
test ax ax
je r-xdata
xor eax eax
push 0x5d
pop edx
cmp ax dx
je r-xdata
cmp [ esi + 0x2 ] dx
jne r-xdata
cmp ax bx
jne r-xdata
add esi 0x2
jmp r-xdata
cmp ax 0x5b
jne r-xdata
cmp [ esi + 0x2 ] dx
je r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
movzx eax [ esi + 0x2 ]
cmp eax 0x3a
je r-xdata
xor eax eax
mov [ edi ] esi
inc eax
jmp r-xdata
cmp ax 0x5c
jne r-xdata
mov edx edi
mov ecx esi
call sub_47077a
test eax eax
jne r-xdata
cmp eax 0x2e
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x5d
pop edx
cmp eax 0x3d
jne r-xdata
sub_4707f5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ebx edx
mov edi ecx
jmp r-xdata
test esi esi
jne r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx edi
jb r-xdata
xor eax eax
inc eax
push [ ebp + 0x10 ]
mov edx ebx
push [ ebp + 0xc ]
call sub_470830
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ esi ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_470830
push ebp
mov ebp esp
push ecx
push ecx
movzx eax [ ecx ]
push ebx
movzx eax [ eax + r--data ]
mov ebx edx
push esi
xor edx edx
push edi
lea ecx [ ecx + eax * 2 ]
inc edx
mov [ ebp - 0x4 ] ebx
call sub_40785a
mov esi eax
cmp esi ebx
jae r-xdata
xor eax eax
inc eax
mov [ ebp - 0x8 ] 0x81
cmp edi 0x6f
jne r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] cx
je r-xdata
mov eax 0x8c
cmp di ax
je r-xdata
mov ebx [ ebp + 0xc ]
mov edx [ ebx + 0x10 ]
cmp edx [ ebx + 0x24 ]
jae r-xdata
movzx edi [ esi ]
jmp r-xdata
movzx eax [ edi + r--data ]
lea esi [ esi + eax * 2 ]
inc eax
cmp di ax
je r-xdata
movzx ecx [ esi + 0x2 ]
mov eax [ ebx + 0x14 ]
lea ebx [ eax + ecx * 2 ]
xor eax eax
cmp [ ebx + 0x2 ] ax
je r-xdata
mov ecx esi
sub ecx [ ebx + 0x14 ]
add ecx 0x2
sar ecx 0x1
movzx eax di
xor edx edx
movzx eax [ eax + r--data ]
inc edx
lea ecx [ esi + eax * 2 ]
call sub_40785a
mov esi eax
cmp esi ebx
jb r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] cx
je r-xdata
jmp r-xdata
mov eax 0x9b
cmp di ax
je r-xdata
push [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx ebx
call sub_470830
pop ecx
pop ecx
test eax eax
jne r-xdata
add edx 0x2
cmp edx [ ebx + 0x24 ]
jb r-xdata
movzx edi [ esi ]
push 0x71
xor edx edx
pop ecx
cmp edi 0x77
jne r-xdata
add eax 0xfffffff3
cmp di ax
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx eax [ ebx + 0x2 ]
push 0x71
lea ebx [ ebx + eax * 2 ]
pop eax
cmp [ ebx ] ax
je r-xdata
movzx eax [ edx ]
cmp eax ecx
je r-xdata
mov eax 0x82
cmp di ax
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] cx
je r-xdata
inc eax
cmp di ax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
jmp r-xdata
mov eax 0x84
cmp di ax
je r-xdata
inc eax
cmp di ax
je r-xdata
cmp edi 0x7d
je r-xdata
movzx eax [ esi + 0x2 ]
test ax ax
je r-xdata
cmp edi 0x7e
je r-xdata
cmp di [ ebp - 0x8 ]
jne r-xdata
cmp edi 0x7f
je r-xdata
mov edi edx
lea eax [ esi + eax * 2 ]
cmp [ eax ] cx
je r-xdata
mov eax 0x80
cmp di ax
je r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] cx
je r-xdata
push [ ebp + 0xc ]
mov edx ebx
push [ ebp + 0x8 ]
mov ecx esi
call sub_470830
pop ecx
pop ecx
push 0x71
pop ecx
test eax eax
je r-xdata
mov esi eax
jmp r-xdata
cmp edi 0x7b
je r-xdata
test edi edi
jne r-xdata
test edi edi
je r-xdata
inc edi
cmp edi 0x7c
je r-xdata
jmp r-xdata
inc eax
cmp di ax
je r-xdata
lea eax [ edi - 0x6 ]
cmp eax 0x8f
ja r-xdata
movzx eax [ eax + lookup_table_470b6c ]
jmp [ eax * 4 + jump_table_470b44 ]
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
mov ecx esi
jmp r-xdata
lea ecx [ esi + 0x22 ]
movzx eax [ esi + 0x2 ]
push 0x10
pop ecx
cmp ax cx
je r-xdata
movzx eax [ esi + 0x4 ]
push 0x10
pop edx
cmp ax dx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
movzx eax [ ecx ]
cmp eax 0x62
jl r-xdata
cmp eax 0x63
jle r-xdata
add esi 0x4
jmp r-xdata
push 0xf
pop ecx
cmp ax cx
push 0xf
pop edx
cmp ax dx
jmp r-xdata
mov ax [ esi + 0x2 ]
mov edx 0xfc00
and ax dx
mov edx 0xd800
cmp ax dx
mov ax [ esi + 0x4 ]
mov ecx 0xfc00
and ax cx
mov ecx 0xd800
cmp ax cx
jmp r-xdata
cmp eax 0x65
jle r-xdata
jne r-xdata
add esi 0x2
jmp r-xdata
jne r-xdata
cmp eax 0x67
jle r-xdata
cmp eax 0x69
jg r-xdata
cmp [ ecx + 0x2 ] dx
ja r-xdata
jmp r-xdata
sub_470bfc
push ebx
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x34 ]
mov eax 0x32000
lea edi [ ecx + ecx ]
cmp edi eax
jle r-xdata
cmp ecx eax
jge r-xdata
mov edi eax
push 0x48
mov eax edi
sub eax ecx
cmp eax 0x64
jl r-xdata
lea eax [ edi + edi ]
push eax
call [ rw-data ]
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x34 ]
add eax eax
push eax
push [ esi + 0x10 ]
push ebx
call sub_41faa0
mov eax [ esi + 0x24 ]
sub eax [ esi + 0x10 ]
add esp 0xc
sar eax 0x1
cmp [ esi + 0x34 ] 0x800
lea eax [ ebx + eax * 2 ]
mov [ esi + 0x24 ] eax
jle r-xdata
push 0x15
jmp r-xdata
mov [ esi + 0x10 ] ebx
mov [ esi + 0x34 ] edi
xor eax eax
jmp r-xdata
push [ esi + 0x10 ]
call [ rw-data ]
pop ecx
pop eax
pop edi
pop esi
pop ebx
retn
sub_470c78
mov edx r--data
jmp r-xdata
test ecx ecx
jg r-xdata
mov al [ edx ]
inc edx
test al al
jne r-xdata
mov eax edx
retn
cmp [ edx ] al
je r-xdata
mov eax r--data
retn
dec ecx
sub_470c98
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
or ebx 0xffffffff
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ebx
lea esi [ ecx + 0x4 ]
push 0xfffffffc
movzx eax [ eax + lookup_table_470eb8 ]
jmp [ eax * 4 + jump_table_470e7c ]
push [ ebp + 0xc ]
xor eax eax
push [ ebp + 0x8 ]
cmp edx 0x7f
mov edx [ ebp - 0x8 ]
sete al
lea ecx [ esi + eax * 2 ]
call sub_470c98
pop ecx
pop ecx
test eax eax
js r-xdata
test ebx ebx
jns r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x71
pop ebx
movzx eax [ esi + 0x2 ]
movzx ecx [ ecx + r--data ]
add ecx eax
lea esi [ esi + ecx * 2 ]
jmp r-xdata
movzx eax [ ecx + r--data ]
jmp r-xdata
inc edi
add esi 0x4
movzx eax [ esi + 0x2 ]
add edi eax
add esi 0x6
jmp r-xdata
movzx eax [ esi + 0x2 ]
add edi eax
movzx eax [ esi + 0x4 ]
cmp eax 0x10
je r-xdata
add esi 0x4
inc edi
jmp r-xdata
cmp edx 0x6c
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xfffffffe
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x71
add edi eax
pop ebx
cmp ebx edi
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx ecx [ esi + 0x2 ]
mov eax [ eax + 0x14 ]
push 0x71
lea ecx [ eax + ecx * 2 ]
mov edx ecx
pop ebx
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] bx
je r-xdata
movzx eax [ esi ]
mov ebx [ ebp - 0x4 ]
movzx eax [ eax + r--data ]
movzx ecx [ esi ]
mov edx ecx
mov eax edx
cmp eax 0x9b
ja r-xdata
lea esi [ esi + eax * 2 ]
jmp r-xdata
mov ax [ esi - 0x2 ]
mov ecx 0xfc00
and ax cx
mov ecx 0xd800
cmp ax cx
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
add esi 0x4
jmp r-xdata
cmp eax 0xf
jne r-xdata
add esi 0x2
jmp r-xdata
add esi 0x22
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
pop eax
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] bx
je r-xdata
mov ebx [ ebp - 0x4 ]
push 0x71
pop eax
cmp cx ax
jne r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] bx
je r-xdata
mov ebx [ ebp - 0x4 ]
cmp esi edx
jbe r-xdata
add esi 0x6
jmp r-xdata
inc edi
jmp r-xdata
cmp eax 0x67
jle r-xdata
movzx eax [ esi ]
cmp eax 0x62
jl r-xdata
mov eax ebx
jmp r-xdata
add esi 0x4
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ edx + 0x2 ]
push [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_470c98
pop ecx
pop ecx
test eax eax
js r-xdata
cmp esi ecx
jb r-xdata
cmp eax 0x69
jg r-xdata
xor edi edi
add edi eax
jmp r-xdata
movzx eax [ esi + 0x2 ]
cmp ax [ esi + 0x4 ]
jne r-xdata
add esi 0x4
jmp r-xdata
add edi eax
sub_470f54
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push esi
mov esi ecx
push edi
mov eax [ esi + 0x18 ]
mov edi edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
mov edx esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push edi
call sub_470f9f
add esp 0x14
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov dx [ ecx ]
add ecx 0x2
mov [ ebp - 0x4 ] ecx
test dx dx
je r-xdata
pop edi
pop esi
leave
retn
sub_470f9f
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x29
mov eax ecx
mov edi edx
mov esi [ eax ]
mov edx [ ebp + 0x18 ]
pop ecx
mov [ ebp - 0x28 ] eax
mov eax [ edx ]
push 0x2
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] eax
xor eax eax
pop ebx
push 0x28
mov [ ebp - 0x10 ] eax
pop eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1c ] 0x23
mov [ ebp - 0x20 ] 0x7c
mov [ ebp - 0x24 ] eax
cmp [ esi ] ax
jne r-xdata
cmp esi [ edi + 0x1c ]
jae r-xdata
movzx eax [ esi + 0x2 ]
cmp eax 0x2a
jne r-xdata
mov eax [ ebp - 0x28 ]
mov [ eax ] esi
mov [ ebp - 0x20 ] 0x5c
mov [ ebp - 0x18 ] 0x51
mov [ ebp - 0x18 ] 0x3f
cmp ax [ ebp - 0x18 ]
je r-xdata
add esi 0x4
jmp r-xdata
cmp eax 0x5b
jne r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
lea ecx [ esi + 0x4 ]
movzx eax [ ecx ]
cmp ax [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0xc ]
inc eax
cmp [ ebp + 0x8 ] 0x0
mov [ edx ] eax
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp esi [ edi + 0x1c ]
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0x5c
pop edx
xor eax eax
push 0x45
mov edi eax
pop ebx
push 0x51
pop ecx
cmp ax cx
jne r-xdata
cmp ax [ ebp - 0x1c ]
jne r-xdata
add esi 0x6
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
add esi 0x2
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ esi ] cx
je r-xdata
jmp r-xdata
cmp ax [ ebp - 0x24 ]
jne r-xdata
cmp ax [ ebp - 0x1c ]
je r-xdata
test edi edi
jne r-xdata
lea ecx [ esi + 0x4 ]
cmp [ ecx ] bx
jne r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
cmp esi [ edi + 0x1c ]
jae r-xdata
push 0x5c
pop edx
push 0x28
pop esi
cmp ax si
mov esi ecx
mov [ ebp - 0x4 ] esi
jne r-xdata
add esi 0x6
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
push 0x29
pop ecx
pop edi
pop esi
pop ebx
leave
retn
add esi ebx
cmp ax cx
je r-xdata
push edx
push [ ebp + 0x14 ]
mov edx edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_470f9f
add esp 0x14
test eax eax
jg r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
mov edi [ ebp - 0x8 ]
push 0x5d
pop ecx
push 0x2
pop ebx
cmp [ esi + 0x2 ] cx
jne r-xdata
cmp eax 0x5e
jne r-xdata
push 0x3
mov edx r--data
call sub_41ee64
pop ecx
push 0x5c
pop edx
test eax eax
jne r-xdata
mov esi ecx
jmp r-xdata
mov edx [ ebp + 0x18 ]
push 0x29
pop ecx
jmp r-xdata
cmp ax dx
jne r-xdata
cmp [ esi ] 0x50
jne r-xdata
mov eax [ ebp - 0x18 ]
push 0x29
pop ecx
cmp [ esi + 0x2 ] ax
je r-xdata
push 0x29
pop ecx
push 0x2
pop ebx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x7c
pop ecx
cmp ax cx
jne r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
cmp [ edi + 0x68 ] 0x0
je r-xdata
jmp r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
cmp ax cx
jne r-xdata
test [ edi + 0x50 ] 0x2000000
jne r-xdata
inc edi
add esi 0x2
add esi 0x8
jmp r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ esi ]
cmp ax [ ebp - 0x20 ]
jne r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
xor eax eax
cmp [ esi ] ax
je r-xdata
movzx eax [ esi ]
push 0x3c
pop ecx
cmp ax cx
jne r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ edx ] eax
jge r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
cmp [ esi ] ax
je r-xdata
mov edi [ edi + 0x6c ]
mov ecx [ ebp - 0x8 ]
lea eax [ edi + edi ]
mov ecx [ ecx + 0x1c ]
sub ecx eax
cmp esi ecx
ja r-xdata
cmp esi [ edi + 0x1c ]
jae r-xdata
test ax ax
je r-xdata
jmp r-xdata
add esi ebx
jmp r-xdata
movzx eax [ esi + 0x2 ]
cmp ax dx
jne r-xdata
add esi ebx
push 0x45
pop eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] ax
jne r-xdata
cmp eax 0x27
jne r-xdata
movzx ecx [ esi + 0x2 ]
cmp ecx 0x21
je r-xdata
cmp ax cx
je r-xdata
cmp ax cx
je r-xdata
jmp r-xdata
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
cmp [ edx ] eax
jle r-xdata
jmp r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp dx [ eax + 0x70 ]
jne r-xdata
add esi ebx
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] esi
je r-xdata
push [ ebp + 0x14 ]
mov edx [ edi + 0x68 ]
lea eax [ edi + 0x6c ]
push eax
push [ edi + 0x1c ]
mov ecx esi
call sub_4080a0
add esp 0xc
test eax eax
jne r-xdata
or eax 0xffffffff
cmp ax dx
jne r-xdata
jmp r-xdata
mov edi [ ebp - 0xc ]
inc edi
cmp [ ebp + 0x8 ] 0x0
mov [ edx ] edi
jne r-xdata
cmp ecx 0x3d
jne r-xdata
xor eax eax
cmp [ esi ] ax
je r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
movzx edx [ esi ]
test dx dx
jne r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov edi eax
jmp r-xdata
cmp edi 0x1
je r-xdata
mov eax [ edi + 0x6c ]
lea esi [ esi + eax * 2 ]
add esi 0xfffffffe
mov [ ebp - 0x4 ] esi
jmp r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
push 0x3c
add esi ebx
pop ecx
mov [ ebp - 0x4 ] esi
cmp ax cx
jne r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov edi eax
mov edi [ ebp - 0x8 ]
mov ax [ esi + 0x2 ]
cmp ax [ edi + 0x72 ]
je r-xdata
cmp ax [ ebp - 0x18 ]
jne r-xdata
mov edx esi
movzx ecx ax
jmp r-xdata
push 0x3e
pop eax
mov eax edi
jmp r-xdata
jmp r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
movzx eax [ esi ]
cmp eax ecx
jne r-xdata
cmp ax dx
jne r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ esi ] ax
je r-xdata
mov edx [ ebp + 0x18 ]
mov edi [ ebp - 0x8 ]
mov eax esi
sub eax edx
sar eax 0x1
cmp [ ebp + 0xc ] eax
jne r-xdata
add esi ebx
push 0x45
pop eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] ax
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_47191e
pop ecx
test eax eax
je r-xdata
sub_4713fa
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
mov esi [ ebx ]
mov edi edx
cmp esi edi
ja r-xdata
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x80
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx ] ecx
jmp r-xdata
mov ecx [ ecx * 8 + r--data ]
add ecx esi
cmp ecx esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi edi
ja r-xdata
inc esi
cmp esi edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax esi
cdq
mov ecx 0x80
idiv ecx
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx ecx [ eax * 2 + r--data ]
movzx eax [ ecx * 8 + r--data ]
test eax eax
jne r-xdata
inc ecx
inc esi
cmp esi edi
jbe r-xdata
mov eax esi
cdq
idiv [ ebp - 0x4 ]
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax esi
cmp eax ecx
jne r-xdata
mov eax [ ebp + 0xc ]
dec ecx
mov [ eax ] ecx
mov [ ebx ] esi
xor eax eax
jmp r-xdata
sub_4714aa
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
mov esi [ ecx ]
add esi 0x2
push edi
movzx eax [ esi ]
mov [ ebp - 0x8 ] ecx
test ax ax
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ecx ] esi
mov [ eax ] 0x2e
xor ebx ebx
mov [ edx ] ebx
cmp eax 0x7b
jne r-xdata
mov [ ebp - 0x48 ] ax
xor eax eax
mov [ ebp - 0x46 ] ax
cmp [ esi + 0x2 ] 0x5e
jne r-xdata
mov ecx [ ebp + 0x8 ]
imul edi edi 0x6
movzx edx [ edi + r--data ]
mov [ ecx ] edx
movzx edx [ edi + r--data ]
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] edx
inc eax
jmp r-xdata
jle r-xdata
mov eax ebx
mov [ edx ] 0x1
add esi 0x2
pop edi
pop esi
pop ebx
leave
retn
mov eax edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
lea ebx [ edi + 0x1 ]
jmp r-xdata
cmp edx 0x7d
je r-xdata
lea edi [ eax + ebx ]
sar edi 0x1
mov eax edi
imul eax eax 0x6
lea ecx [ ebp - 0x48 ]
movzx edx [ eax + r--data ]
add edx r--data
call sub_4718bf
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x2f
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
jmp r-xdata
cmp ebx eax
jl r-xdata
xor edx edx
mov [ ebp + eax * 2 - 0x48 ] dx
jmp r-xdata
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x1f
jl r-xdata
xor eax eax
mov eax 0x92
mov [ ecx ] esi
mov [ ebp - 0x4 ] eax
add esi 0x2
movzx edx [ esi ]
test dx dx
je r-xdata
sub_471591
movzx eax [ ecx ]
push ebx
push esi
push edi
push 0x30
pop edx
cmp ax dx
jb r-xdata
xor eax eax
push 0x39
pop edi
cmp ax di
ja r-xdata
push 0x2
pop esi
jmp r-xdata
add ecx esi
movzx eax [ ecx ]
cmp ax dx
jae r-xdata
cmp ax di
ja r-xdata
movzx eax [ ecx ]
push 0x7d
pop ebx
cmp ax bx
jne r-xdata
add ecx esi
cmp eax 0x2c
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx eax [ ecx ]
cmp ax bx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ax dx
jb r-xdata
cmp ax di
jbe r-xdata
add ecx esi
movzx eax [ ecx ]
cmp ax dx
jae r-xdata
cmp ax di
ja r-xdata
xor eax eax
cmp [ ecx ] bx
sete al
jmp r-xdata
sub_471603
push ebp
mov ebp esp
push ecx
movzx eax [ ecx ]
push ebx
push esi
push edi
push 0x30
pop ebx
xor edi edi
or esi 0xffffffff
mov [ ebp - 0x4 ] 0x39
cmp ax bx
jb r-xdata
push 0x7d
pop ebx
cmp [ ecx ] bx
jne r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add ecx 0x2
movzx eax [ ecx ]
cmp ax bx
je r-xdata
mov esi edi
test edi edi
js r-xdata
imul edi edi 0xa
movzx eax ax
add eax 0xffffffd0
add ecx 0x2
add edi eax
movzx eax [ ecx ]
cmp ax bx
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] edi
mov [ eax ] esi
push 0x30
pop ebx
xor esi esi
cmp ax bx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x5
jmp r-xdata
cmp edi 0xffff
jle r-xdata
cmp esi edi
jge r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
pop edi
pop esi
mov eax ecx
pop ebx
leave
retn
mov eax [ ebp + 0xc ]
mov [ eax ] 0x4
jmp r-xdata
test esi esi
js r-xdata
imul esi esi 0xa
movzx eax ax
add eax 0xffffffd0
add ecx 0x2
add esi eax
movzx eax [ ecx ]
cmp ax bx
jae r-xdata
cmp esi 0xffff
jg r-xdata
sub_4716b8
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov eax [ ebx + 0xc ]
mov esi edx
mov ecx [ eax + ecx * 4 ]
mov eax [ ebx + 0x78 ]
mov edx [ ebp + 0x8 ]
push edi
mov [ ebp - 0x8 ] esi
lea edi [ eax + ecx * 2 ]
test edx edx
jns r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
test edx edx
jle r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub esi [ ebp - 0x8 ]
sar esi 0x1
mov eax esi
mov ebx [ ebx + 0x7c ]
test edx edx
jle r-xdata
lea eax [ edi + edx * 2 ]
mov [ ebp + 0x8 ] eax
cmp edi eax
jae r-xdata
push 0xfffffffe
pop eax
jmp r-xdata
mov cx [ edi ]
mov ax [ esi ]
add esi 0x2
add edi 0x2
cmp cx ax
jne r-xdata
sub edi esi
mov eax [ ebx + 0x7c ]
mov [ ebp - 0x4 ] eax
test edx edx
jg r-xdata
movzx eax [ edi + esi ]
movzx ecx [ esi ]
mov [ ebp + 0x8 ] eax
cmp eax 0xff
ja r-xdata
movzx ecx [ esi ]
mov eax ecx
and eax 0xfc00
add esi 0x2
cmp eax 0xd800
jne r-xdata
dec edx
cmp esi ebx
jae r-xdata
cmp ecx 0xff
ja r-xdata
mov eax [ ebx + 0x3c ]
mov ebx [ ebp + 0x8 ]
movzx ebx [ eax + ebx ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ebp + 0xc ]
movzx ebx [ edi ]
mov eax ebx
and eax 0xfc00
add edi 0x2
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
and ecx edx
shl ecx 0xa
and eax edx
or ecx eax
add ecx 0x10000
add esi 0x2
cmp [ ebp + 0x8 ] ecx
jne r-xdata
mov eax [ ebx + 0x3c ]
movzx ecx [ eax + ecx ]
mov eax ebx
cdq
mov [ ebp + 0xc ] 0x80
idiv [ ebp + 0xc ]
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx edx [ eax * 2 + r--data ]
cmp ecx ebx
je r-xdata
movzx eax [ edi ]
and ebx edx
shl ebx 0xa
and eax edx
or ebx eax
add ebx 0x10000
add edi 0x2
add esi 0x2
test edx edx
jg r-xdata
cmp edi [ ebp + 0x8 ]
jae r-xdata
mov eax [ edx * 8 + r--data ]
add eax ebx
cmp ecx eax
je r-xdata
dec edx
cmp esi [ ebx + 0x7c ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
movzx eax [ edx * 8 + r--data ]
lea eax [ eax * 4 + r--data ]
mov edx 0x3ff
cmp esi eax
jae r-xdata
add eax 0x4
cmp ecx edx
jne r-xdata
mov edx [ eax ]
cmp ecx edx
jb r-xdata
sub_471851
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] ecx
test eax eax
js r-xdata
push 0xfffffff9
cmp eax [ ebp + 0x8 ]
jge r-xdata
add eax eax
mov [ ebp + 0xc ] eax
mov esi [ ebx + eax * 4 + 0x4 ]
sub esi [ ebx + eax * 4 ]
lea eax [ esi * 2 + 0x2 ]
push eax
call [ rw-data ]
mov edi eax
pop ecx
test edi edi
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esi + esi ]
mov ecx [ ebx + ecx * 4 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + ecx * 2 ]
push ecx
push edi
call sub_41faa0
mov ecx [ ebp + 0x10 ]
add esp 0xc
xor eax eax
mov [ edi + esi * 2 ] ax
mov [ ecx ] edi
mov eax esi
jmp r-xdata
push 0xfffffffa
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
pop eax
sub_4718bf
push esi
mov esi eax
movzx eax [ edx ]
add ecx 0x2
inc edx
cmp si ax
je r-xdata
cmp [ edx ] al
je r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
sbb eax eax
neg eax
pop esi
lea eax [ eax * 2 - 0x1 ]
retn
xor eax eax
pop esi
retn
sub_4718ee
sub ecx edx
push esi
movzx esi [ edx ]
add edx 0x2
cmp ax si
je r-xdata
cmp [ edx ] ax
je r-xdata
movzx eax [ ecx + edx ]
test ax ax
jne r-xdata
cmp si ax
sbb eax eax
neg eax
pop esi
lea eax [ eax * 2 - 0x1 ]
retn
xor eax eax
pop esi
retn
sub_47191e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
je r-xdata
xor eax eax
sub ecx edx
sbb eax eax
neg eax
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn
movzx esi [ ecx + edx ]
movzx edi [ edx ]
dec eax
lea edx [ edx + 0x2 ]
cmp di si
jne r-xdata
sub_471953
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x2
mov esi ecx
pop edi
sub esi edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx ecx [ esi ]
mov ax [ esi ]
mov ebx 0xfc00
and ax bx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp ecx 0xa
je r-xdata
cmp ecx 0xa
je r-xdata
movzx ecx [ esi ]
mov eax ecx
and eax ebx
cmp eax 0xd800
jne r-xdata
sub esi edi
xor edx edx
cmp esi [ ebp + 0x8 ]
jbe r-xdata
jbe r-xdata
cmp ecx 0xd
je r-xdata
cmp edx edi
jne r-xdata
movzx eax [ esi + 0x2 ]
mov ebx 0x3ff
and ecx ebx
and eax ebx
shl ecx 0xa
or ecx eax
add ecx 0x10000
jmp r-xdata
lea edi [ edx + 0x1 ]
cmp [ esi - 0x2 ] 0xd
je r-xdata
xor eax eax
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0xd
jbe r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
inc edx
mov [ ecx ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
lea eax [ edx + 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
mov [ eax ] edx
cmp ecx 0x85
je r-xdata
mov eax edx
jmp r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax edx
ja r-xdata
sub_471a0c
cmp ecx 0xffff
ja r-xdata
sub ecx 0x10000
mov eax ecx
shr eax 0xa
or eax 0xd800
and ecx 0x3ff
mov [ edx ] ax
or ecx 0xdc00
push 0x2
mov [ edx + 0x2 ] cx
pop eax
retn
xor eax eax
mov [ edx ] cx
inc eax
retn
sub_471a42
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x2
pop edi
test edx edx
jns r-xdata
mov esi ecx
jmp r-xdata
xor eax eax
mov edx ecx
cmp [ ecx ] ax
je r-xdata
test edx edx
jg r-xdata
sub edx ecx
sar edx 0x1
add edx edi
cmp [ edx ] ax
jne r-xdata
movzx ebx [ esi ]
mov eax ebx
and eax 0xf800
dec edx
cmp eax 0xd800
jne r-xdata
xor eax eax
add esi edi
test ebx 0x400
jne r-xdata
push 0x3
pop edi
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor edi edi
inc edi
jmp r-xdata
add esi edi
mov ebx 0xfc00
mov ax [ esi ]
and ax bx
mov ebx 0xdc00
dec edx
cmp ax bx
jne r-xdata
sub esi ecx
mov ecx [ ebp + 0x8 ]
sar esi 0x1
mov [ ecx ] esi
mov eax edi
jmp r-xdata
sub_471abf
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi edx
push edi
movzx eax [ esi ]
xor edx edx
movzx edi al
inc edx
mov ebx ecx
and edi edx
mov [ ebp - 0x8 ] eax
cmp ebx 0x100
jae r-xdata
push 0x2
pop edx
add esi edx
and al dl
je r-xdata
test al 0x2
je r-xdata
movzx ecx [ esi ]
mov [ ebp - 0x8 ] ecx
test cx cx
je r-xdata
add esi 0x20
and ecx 0x7
shl edx cl
mov eax ebx
shr eax 0x3
test [ eax + esi + 0x2 ] dl
je r-xdata
mov eax edi
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x8 ]
xor eax eax
test edi edi
sete al
jmp r-xdata
cmp cx dx
jne r-xdata
movzx ecx [ esi ]
add esi edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
mov [ ebp - 0xc ] 0x80
idiv [ ebp - 0xc ]
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx edx [ esi ]
movzx eax [ eax * 2 + r--data ]
cmp edx 0xa
ja r-xdata
movzx ecx [ esi ]
add esi edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp ebx ecx
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
xor eax eax
jmp r-xdata
jmp [ edx * 4 + jump_table_471daf ]
movzx edx [ esi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
jmp r-xdata
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi edx
push 0x3
pop eax
cmp cx ax
jmp r-xdata
mov al [ eax * 8 + r--data ]
cmp al 0x9
je r-xdata
movzx eax [ eax * 8 + r--data ]
movzx ecx [ esi + 0x2 ]
sub ecx [ eax * 4 + r--data ]
neg ecx
sbb ecx ecx
inc ecx
jmp r-xdata
movzx eax [ eax * 8 + r--data ]
movzx eax [ eax * 8 + r--data ]
jmp r-xdata
movzx eax [ eax * 8 + r--data ]
xor edx edx
mov eax [ eax * 4 + r--data ]
inc edx
cmp eax edx
je r-xdata
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
je r-xdata
movzx eax [ eax * 8 + r--data ]
xor edx edx
mov eax [ eax * 4 + r--data ]
inc edx
cmp eax edx
je r-xdata
cmp ebx 0xa0
jae r-xdata
push 0x2
pop edx
cmp ebx edx
jbe r-xdata
movzx edx [ esi ]
mov eax edx
and eax 0xfc00
add esi 0x2
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add esi edx
movzx ecx [ esi ]
mov [ ebp - 0x8 ] ecx
test cx cx
jne r-xdata
je r-xdata
xor eax eax
lea edx [ eax + 0x1 ]
cmp al 0x5
je r-xdata
push 0x3
xor eax eax
pop edx
cmp [ ebp - 0x8 ] dx
sete al
cmp ecx eax
xor ecx ecx
cmp [ esi + 0x2 ] ax
sete cl
jmp r-xdata
xor eax eax
cmp cx [ ebp - 0x4 ]
sete al
cmp edx eax
jmp r-xdata
cmp eax 0x3
cmp ebx 0x9
je r-xdata
cmp ebx 0x9
je r-xdata
cmp eax 0x3
je r-xdata
mov ecx 0x7ff
lea eax [ ebx - 0xd800 ]
cmp ecx eax
sbb ecx ecx
neg ecx
cmp ebx 0x24
je r-xdata
xor eax eax
inc eax
add esi edx
cmp cx ax
jne r-xdata
jmp r-xdata
cmp ebx ecx
jb r-xdata
movzx eax [ esi ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
add edx 0x10000
jmp r-xdata
add esi 0x4
cmp al 0x8
jmp r-xdata
cmp ebx 0xa
cmp ebx 0xa
je r-xdata
cmp ebx 0x5f
jmp r-xdata
cmp ebx 0x40
je r-xdata
add esi 0x2
xor edx edx
jmp r-xdata
cmp ebx 0xc
je r-xdata
cmp ebx 0xb
jmp r-xdata
je r-xdata
cmp ebx 0x60
jmp r-xdata
cmp ebx 0xd
jmp r-xdata
je r-xdata
je r-xdata
sub_471dfc
cmp [ rw-data ] 0x0
je sub_471e16
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_471e16
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_48c31b
adc al 0x7c
dec eax
add [ ebp - 0x3ffb784 ] ah
jl r-xdata
add cl dh
test [ eax ] cl
retn 0x487e
add [ edx + 0x7d ] bh
dec eax
add cl dl
jge r-xdata
add [ ebx - 0x43ffb781 ] dl
jg r-xdata
add [ edi + 0x7e ] cl
dec eax
add [ eax - 0x40ffb78a ] ch
ja r-xdata
add [ esi + edx * 4 - 0x68c1ffb8 ] dh
add [ ebx ] bl
mov [ 0xffffffffa31b0048 ] eax
dec eax
add [ ebx ] bl
mov [ 0x7fe50048 ] eax
dec eax
add [ ebx ] ah
js r-xdata
add [ esi - 0x68 ] dl
dec eax
add ah ah
cwde
dec eax
add [ esi - 0x67 ] ch
dec eax
add al ch
nop
dec eax
add [ esi + 0x44004893 ] ch
xchg esp eax
dec eax
add [ ebx ] bl
mov [ 0xffffffffa31b0048 ] eax
dec eax
add [ ecx - 0x6c ] ch
dec eax
add [ ebx ] ch
xchg ebp eax
dec eax
add [ ebx ] ch
xchg ebp eax
dec eax
add [ edi ] al
xchg esi eax
dec eax
add [ edi ] al
xchg esi eax
dec eax
add [ 0x4e00489e ] al
sahf
dec eax
add [ edx - 0x1cffb762 ] bl
sahf
dec eax
add [ edi ] ch
lahf
dec eax
add [ eax - 0x61 ] bh
dec eax
add [ edx + ebx * 4 ] cl
dec eax
add [ ebx + ebx * 4 + 0x48 ] cl
add [ ebx + ebx * 4 + 0x48 ] cl
add [ ebx ] bl
mov [ 0xffffffffa31b0048 ] eax
dec eax
add [ ebp + 0x2a00489b ] ch
pushfd
dec eax
add dh cl
pushfd
dec eax
add [ esi - 0x63 ] bl
dec eax
add [ eax - 0x50ffb763 ] bh
lodsb [ esi ]
dec eax
add [ esi ] dh
lodsd [ esi ]
dec eax
add [ esi ] ch
scasb [ edi ]
dec eax
add [ ebx ] dl
scasd [ edi ]
dec eax
add cl dh
scasd [ edi ]
dec eax
add bh cl
mov al 0x48
add cl cl
mov cl 0x48
add al dl
mov dl 0x48
add ah bl
mov bl 0x48
add bl bl
mov ah 0x48
add al al
mov ch 0x48
add [ eax - 0x49ffb746 ] bl
mov edx 0xbad40048
dec eax
add dl dh
mov edx 0xbb100048
dec eax
add [ esi ] ch
mov ebx 0x9ceb0048
inc eax
add al bh
pushfd
inc eax
add al bh
pushfd
inc eax
add [ ebx ] bl
mov [ 0xffffffffa31b0048 ] eax
dec eax
add [ eax + edi * 4 - 0x46f4ffb8 ] ch
dec eax
add [ edi + 0x230048b9 ] dl
mov edx 0xba650048
dec eax
add [ edi - 0x42 ] ah
dec eax
add [ edx - 0x62ffb742 ] al
mov esi 0xbeb40048
dec eax
add bh cl
mov esi 0xbee60048
dec eax
add [ esp + edi * 4 ] ch
dec eax
add bh bh
mov esi 0xbeff0048
dec eax
add [ ebx ] bl
mov [ 0xffffffffa31b0048 ] eax
dec eax
add [ ebx - 0x44 ] bh
dec eax
add dl bl
mov esp 0xbd660048
dec eax
add dl dh
mov ebp 0xbe340048
dec eax
add [ ebp + 0x1f850fc9 ] al
enter 0xfff7 0x81
[ ecx ]
cld
add [ ebp + 0x51004880 ] al
or [ eax ] r-xdata
mov [ edx - 0x7a94ffb8 ] eax
add ch ah
jg r-xdata
add [ ebx ] bl
mov [ 0xffffffffa31b0048 ] eax
dec eax
add [ eax + edi * 2 + 0x48 ] cl
add [ eax ] dl
jns r-xdata
xchg [ eax ] ecx
sub ecx [ eax - 0x7714ffb8 ]
dec eax
add [ ebx + 0x7b004889 ] ch
mov cl [ eax ]
pop esp
mov ecx [ eax ]
inc edx
mov [ eax ] cs
sbb ecx [ ebp - 0x720cffb8 ]
dec eax
add [ ecx + 0x6b004882 ] cl
test [ eax ] ecx
or eax 0x68004886
add dl bh
jns r-xdata
dec eax
add [ ebx - 0x7b ] ch
add ah dl
jpe r-xdata
add [ 0x68004886 ] cl
add [ ebx + 0x7b ] bh
dec eax
add dh bh
or [ eax ] 0x65
or [ eax ] 0xffffffc4
or [ eax ] 0x2b
test [ eax ] cl
mov al [ eax + ecx * 2 + 0x4884f100 ]
add dl al
jle r-xdata
dec eax
add ah cl
xchg edi eax
dec eax
add [ ebx ] bl
lea ecx [ eax ]
lea ecx [ eax ]
mov ah 0x96
dec eax
add [ esi ] bh
xchg edi eax
sub_4010cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and [ ecx ] 0x0
mov [ ecx + 0x4 ] eax
test eax eax
js r-xdata
and [ ecx + 0x4 ] 0x0
jmp r-xdata
mov eax ecx
pop ebp
retn 0x4
sub_40115d
mov ecx rw-data
call sub_40123e
push [ rw-data ]
mov ecx rw-data
call sub_4011ca
push [ rw-data ]
mov ecx rw-data
call sub_4011ca
retn
sub_4016db
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
call sub_401867
mov eax esi
pop esi
retn
sub_4017e0
push esi
mov esi ecx
call sub_4017fc
lea ecx [ esi + 0x34 ]
call sub_4017fc
lea ecx [ esi + 0x68 ]
call sub_40d3d2
mov eax esi
pop esi
retn
sub_40181b
push 0x10
lea eax [ ecx + 0x4 ]
pop edx
and [ eax ] 0x0
lea eax [ eax + 0x8 ]
dec edx
jne r-xdata
mov eax ecx
retn
sub_40182d
xor eax eax
mov [ ecx ] r--data
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] ax
mov eax ecx
retn
sub_4018cf
push esi
mov esi ecx
and [ esi + 0x8 ] 0x0
and [ esi + 0x10 ] 0x0
lea ecx [ esi + 0x18 ]
mov [ esi + 0x14 ] 0x1
call sub_40d3d2
lea ecx [ esi + 0x38 ]
call sub_40d3d2
mov eax esi
pop esi
retn
sub_4018f5
push esi
mov esi ecx
call sub_40190a
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_40190a
push esi
mov esi ecx
lea ecx [ esi + 0x38 ]
call sub_405cd3
lea ecx [ esi + 0x18 ]
call sub_405cd3
lea ecx [ esi + 0x8 ]
pop esi
jmp sub_412570
sub_402835
cmp [ ecx + 0x9 ] 0x0
mov eax [ ecx + 0x4 ]
jne r-xdata
mov eax [ eax + 0x4 ]
retn
retn
sub_4029c2
push ebp
mov ebp esp
pop ebp
jmp sub_4029cb
sub_402b56
push esi
mov esi ecx
push [ esi ]
call j_sub_4228ca#2
push esi
call j_sub_4228ca#2
pop ecx
pop ecx
mov eax esi
pop esi
retn 0x4
sub_402db5
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
call sub_412570
mov ecx esi
call sub_412570
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_402dd4
push esi
mov esi ecx
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_40307a
push esi
lea esi [ ecx + 0x4b4 ]
mov ecx esi
call sub_4045a7
mov [ esi ] r--data
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_403097
sub_403282
push esi
mov esi ecx
lea ecx [ esi - 0x88 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x88 ] r--data
call sub_40325d
lea ecx [ esi - 0x78 ]
call sub_403db0
lea ecx [ esi - 0x84 ]
pop esi
jmp sub_4032b4
sub_403d82
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x10
pop eax
jmp r-xdata
add eax 0xf
and eax 0xfffffff0
pop ebp
retn 0x4
sub_403db0
push esi
mov esi ecx
lea ecx [ esi + 0x68 ]
call sub_405cd3
lea ecx [ esi + 0x34 ]
call sub_404809
mov ecx esi
pop esi
jmp sub_404809
sub_403eb3
push esi
mov esi ecx
call sub_403ec5
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_403ef0
push esi
mov esi ecx
call sub_403eb3
test al al
je r-xdata
mov eax sub_43f544
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_403f08
push esi
mov esi ecx
call sub_403f20
test al al
je r-xdata
mov eax sub_43f544
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_403f20
push esi
mov esi ecx
call sub_403f32
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_404ad3
push esi
mov esi ecx
call sub_405c97
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_404ae8
xor edx edx
xor eax eax
inc eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x28 ] edx
mov eax ecx
retn
sub_404dd9
test [ ecx + 0x28 ] 0x2000
je r-xdata
retn
mov eax [ ecx + 0x30 ]
cdq
push 0x0
push edx
push eax
call sub_404ee9
sub_405080
push esi
mov esi ecx
call sub_4050a3
lea ecx [ esi + 0x18 ]
call sub_40d3d2
mov ecx esi
call sub_4050ec
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
mov eax esi
pop esi
retn
sub_4050a3
push esi
mov esi ecx
push 0x10000
and [ esi ] 0x0
call sub_42010a
pop ecx
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_4050ec
mov eax esi
pop esi
retn
sub_40522f
call sub_405372
test al al
je r-xdata
xor eax eax
retn
mov ecx edx
call sub_405372
test al al
je r-xdata
xor eax eax
inc eax
retn
sub_40524a
call sub_405372
test al al
jne r-xdata
xor eax eax
inc eax
retn
mov ecx edx
call sub_405372
test al al
jne r-xdata
xor eax eax
retn
sub_405c97
push esi
mov esi ecx
lea ecx [ esi + 0x70 ]
call sub_412570
lea ecx [ esi + 0x54 ]
call sub_405cd3
lea ecx [ esi + 0x24 ]
call sub_405cd3
lea ecx [ esi + 0x14 ]
pop esi
jmp sub_405cd3
sub_405cbb
push esi
mov esi ecx
call sub_405cf6
lea ecx [ esi + 0x14 ]
call sub_405cd3
mov ecx esi
pop esi
jmp sub_405cd3
sub_40784a
xor edx edx
mov eax edx
jmp r-xdata
cmp [ ecx ] dx
jne r-xdata
lea ecx [ ecx + 0x2 ]
inc eax
retn
sub_407f2f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc eax
cmp [ ecx + 0x8 ] eax
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_40a0a6
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
jmp sub_4228ca
sub_40a0b1
push ebp
mov ebp esp
pop ebp
jmp sub_4245ec
sub_40c91c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x8
pop eax
jmp r-xdata
add eax 0x7
and eax 0xfffffff8
pop ebp
retn 0x4
sub_40f6c4
test al 0xf5
inc eax
add [ esi ] ah
lahf
inc edi
add ah cl
int3
sub_40fa34
leave
stc
inc eax
add [ eax ] cl
retn
sub_40fa3a
inc edi
add ah cl
int3
sub_412317
add al [ edx ]
add al [ eax ]
add al [ eax ]
add [ ecx ] al
int3
sub_41ac85
xor eax eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx ] r--data
mov eax ecx
retn
sub_41ad5c
push ebp
mov ebp esp
pop ebp
jmp sub_41ad65
sub_41b9f3
push esi
mov esi ecx
call sub_41ba08
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_41bf48
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1b
call sub_41bf5c
pop ebp
retn 0x8
sub_41cbfe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
mov eax [ eax ]
mov [ ecx ] eax
sub_41cff8
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_40d3d2
lea ecx [ esi + 0x18 ]
call sub_40d3d2
mov eax esi
pop esi
retn
sub_41dd84
call sub_41dd92
xor ecx ecx
cmp eax 0xffffffff
setne al
retn
sub_41df71
cmp [ ecx + 0x4 ] 0x2
jne r-xdata
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
mov eax [ eax + 0x10 ]
je r-xdata
mov eax [ ecx ]
retn
mov eax [ eax + 0x10 ]
retn
sub_41dfb6
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
push [ ecx + 0x4 ]
push [ ecx ]
call sub_41dfd2
pop ebp
retn 0x8
sub_41e078
cmp [ ecx + 0x4 ] 0x1
je r-xdata
mov eax [ ecx ]
retn
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0x10 ]
retn
retn
sub_41e3cc
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x5
jne r-xdata
pop esi
retn
call sub_4143a0
push [ esi ]
call j_sub_4228ca#2
and [ esi ] 0x0
pop ecx
mov [ esi + 0xc ] 0x1
sub_41e437
push esi
mov esi ecx
call sub_41e694
test al al
je r-xdata
mov eax sub_43f544
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_41e694
push esi
mov esi ecx
call sub_41e6a6
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_41e6d1
push esi
mov esi ecx
call sub_41e6e3
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_41e70e
push esi
mov esi ecx
call sub_41e6d1
test al al
je r-xdata
mov eax sub_43f3ee
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_41e74b
mov eax [ rw-data ]
test al 0x1
jne r-xdata
mov eax rw-data
retn
or eax 0x1
push sub_471f4a
mov [ rw-data ] eax
call sub_421b2a
pop ecx
sub_41ebde
mov eax [ rw-data ]
test al 0x1
je r-xdata
or eax 0x1
mov ecx rw-data
mov [ rw-data ] eax
call sub_41ec02
jmp r-xdata
fld [ rw-data ]
retn
sub_41ee93
call sub_4141fc
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_41f03e
push esi
mov esi ecx
call sub_41f0b5
sub eax [ esi + 0x10 ]
sbb edx [ esi + 0x14 ]
pop esi
retn
sub_41f04e
push ebp
mov ebp esp
test [ ecx + 0x2c ] 0x3
jne r-xdata
pop ebp
jmp sub_4464e4
test [ ecx + 0x2c ] 0x4
jne r-xdata
pop ebp
jmp sub_446679
pop ebp
jmp sub_41f06f
sub_41f5b1
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_41f5c2
sub_41f5c2
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
call sub_405cd3
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_41f62c
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_402dd4
sub_41f63d
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov [ rw-data ] al
mov eax rw-data
retn
sub_41f819
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx rw-data
jmp sub_405cd3
push eax
call [ DestroyIcon@IAT ]
sub_41f902
push esi
mov esi ecx
lea ecx [ esi + 0x18 ]
call sub_405cd3
lea ecx [ esi + 0x8 ]
call sub_405cd3
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_41f924
mov eax [ esp + 0x4 ]
retn 0x4
sub_41fa89
push ebp
mov ebp esp
pop ebp
jmp sub_42010a
sub_4200e4
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4273a8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4200ff
mov [ ecx ] r--data
jmp sub_4273cb
j_sub_4228ca
jmp j_sub_4228ca#2
sub_421a6e
call sub_421ed9
retn
sub_421b2a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_421a34
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_421d65
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_421d33
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_421d97
push 0x1
push 0x1
push 0x0
call sub_421ee2
add esp 0xc
retn
sub_421da6
push 0x1
push 0x0
push 0x0
call sub_421ee2
add esp 0xc
retn
sub_421e46
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_421ee2
add esp 0xc
pop ebp
retn
sub_421ed0
push 0x8
call sub_428984
pop ecx
retn
sub_421ed9
push 0x8
call sub_428ae8
pop ecx
retn
sub_421ffc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_428ae8
pop ecx
sub_422011
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_421ee2
add esp 0xc
pop ebp
retn
sub_422080
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42224a
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_429a77
add esp 0xc
pop ebp
retn
sub_42225e
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_429791
add esp 0xc
pop ebp
retn
sub_4222a8
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_422272
pop ecx
pop ecx
pop ebp
retn
sub_4222cd
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_4222f0
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_429aa1
pop ecx
pop ecx
pop ebp
retn
sub_422301
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_429aa1
pop ecx
pop ecx
pop ebp
retn
sub_422bff
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_42aab9
add esp 0x18
pop ebp
retn
sub_422d00
call sub_425a99
add eax 0x20
push eax
push 0x1
call sub_425b48
pop ecx
pop ecx
retn
sub_422d9d
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422db5
add esp 0x10
pop ebp
retn
sub_422ef0
push 0xc
push r--data
call sub_427750
call sub_42869d
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_422f31
sub_422f25
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_421e46
int3
sub_4234d5
push esi
call sub_42ba40
pop ecx
retn
sub_4237b4
push esi
call sub_425b0e
pop ecx
retn
sub_4238c6
push edi
call sub_425b0e
pop ecx
retn
sub_423978
push 0x1
call sub_4239d6
pop ecx
retn
sub_4239ce
push esi
call sub_425b0e
pop ecx
retn
sub_423a7e
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_425b48
pop ecx
pop ecx
retn
sub_423ab1
push 0x1
call sub_428ae8
pop ecx
retn
sub_423b6c
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_423aba
pop ecx
pop ecx
pop ebp
retn
sub_424200
push esi
call sub_425b0e
pop ecx
retn
sub_4242e3
push esi
call sub_425b0e
pop ecx
retn
sub_4244ae
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4244c9
add esp 0x14
pop ebp
retn
sub_424552
push esi
call sub_425b0e
pop ecx
retn
sub_424794
push esi
call sub_425b0e
pop ecx
retn
sub_424b55
push esi
call sub_425b0e
pop ecx
retn
sub_424bfc
push 0xc
push r--data
call sub_427750
call sub_42869d
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
pop ecx
call sub_424c3d
sub_424c31
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_421e46
int3
sub_4252ef
lea edx [ esp + 0x4 ]
call sub_42ef25
sub_42541f
lea edx [ esp + 0x4 ]
call sub_42ef25
sub_42554f
lea edx [ esp + 0x4 ]
call sub_42ef25
sub_4255f0
mov edx r--data
jmp sub_4309bb
sub_4255fa
mov edx r--data
jmp sub_430940
sub_425604
fxch st1
fprem
fwait
fnstsw ax
fwait
sahf
jpe r-xdata
fstp st1
retn
sub_425620
sub esp 0xc
fst [ esp ]
call sub_42ef68
call sub_42563d
add esp 0xc
retn
sub_425634
lea edx [ esp + 0x4 ]
call sub_42ef25
sub_425a72
call sub_423978
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_4228ca
and [ rw-data ] 0x0
pop ecx
retn
call sub_432666
sub_426a63
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426904
add esp 0x18
pop ebp
retn
sub_426b93
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_42b545
pop ecx
pop ecx
retn
sub_426ba7
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_421d97
push esi
call sub_421e46
sub_426bc1
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_427795
retn
sub_426bd0
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_428eb2
push 0xff
call sub_421d65
call sub_428e52
_start
call sub_433b93
jmp sub_426a80
sub_42738d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x0
mov eax ecx
pop ebp
retn 0x8
sub_4273cb
mov [ ecx ] r--data
jmp sub_42746c
sub_42746c
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_4228ca
pop ecx
sub_427488
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_4274f0
push ecx
mov [ ecx ] r--data
call sub_433cd5
pop ecx
retn
sub_427795
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_427a68
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_427dd3
push 0xc
call sub_428ae8
pop ecx
retn
sub_427e27
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_428187
pop ecx
mov [ rw-data ] 0x1
sub_42817e
push 0xd
call sub_428ae8
pop ecx
retn
sub_4282ff
push 0xd
call sub_428ae8
pop ecx
retn
sub_42852a
mov eax [ rw-data ]
retn
sub_428652
push 0xd
call sub_428ae8
pop ecx
retn
sub_42865e
push 0xc
call sub_428ae8
pop ecx
retn
sub_42869d
push esi
call sub_4286b5
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push 0x10
call sub_421d7b
sub_4287c5
push 0xd
call sub_428ae8
pop ecx
retn
sub_4287ce
push 0xc
call sub_428ae8
pop ecx
retn
sub_42884d
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_4289b8
push eax
call sub_428b1b
or [ rw-data ] 0xffffffff
pop ecx
sub_42893b
push 0xc
call sub_428ae8
pop ecx
retn
sub_428aaa
push 0xa
call sub_428ae8
pop ecx
retn
sub_428ae8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_428afd
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_428b1b
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_428b3a
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_428e19
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_428e27
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_428e3c
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_429149
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_4291b1
push esi
xor esi esi
push [ esi + rw-data ]
call [ rw-data ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_4291d0
push 0x8
push r--data
call sub_427750
call sub_42869d
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4348bb
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_4291f0
xor eax eax
inc eax
retn
sub_429204
push sub_4291d0
call [ rw-data ]
mov [ rw-data ] eax
retn
sub_429215
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_429222
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42922f
push [ rw-data ]
call [ rw-data ]
retn
sub_42923c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4293d3
test ebx ebx
je r-xdata
retn
push 0x0
call sub_428ae8
pop ecx
sub_429791
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4295b5
add esp 0x10
pop ebp
retn
sub_42a937
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_42b4bf
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_43454c
retn
sub_42b4ce
push ebp
mov ebp esp
call sub_42b4e5
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_43660d
sub_42b4e5
mov eax sub_435b81
mov [ rw-data ] eax
mov [ rw-data ] sub_436461
mov [ rw-data ] sub_4364f0
mov [ rw-data ] sub_436548
mov [ rw-data ] sub_4365cb
mov [ rw-data ] eax
mov [ rw-data ] sub_435ba2
mov [ rw-data ] sub_436508
mov [ rw-data ] sub_436472
mov [ rw-data ] sub_436559
retn
sub_42b723
push 0xa
call sub_428ae8
pop ecx
retn
sub_42b800
push 0xa
call sub_428ae8
pop ecx
retn
sub_42b8c8
push 0xb
call sub_428ae8
pop ecx
retn
sub_42bd0b
push 0xb
call sub_428ae8
pop ecx
retn
sub_42bdcd
push esi
call sub_42ba40
pop ecx
retn
sub_42d357
push edi
call sub_42ba40
pop ecx
retn
sub_42de53
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_42de9a
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_42df28
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_42df36
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_42df50
push ebp
mov ebp esp
sub esp 0x10
and esp 0xfffffff0
fxch st1
fstp [ esp ]
fstp [ esp + 0x8 ]
call sub_42df69
leave
retn
j_sub_42edbb
jmp sub_42edbb
sub_42eb18
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_42eb44
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_42eb54
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_42eb59
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_42ee56
fyl2x
retn
sub_42eb5d
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_42ee56
fyl2x
retn
j_sub_42edbb#2
jmp sub_42edbb
sub_42eba9
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_42ebdf
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_42ebf1
or cl cl
jne r-xdata
jmp sub_42edb6
fstp st0
fld [ r--data ]
retn
sub_42eda8
fxch st1
fstp st0
retn
sub_42edb6
fstp st0
fldz
retn
sub_42edbb
fstp st0
fstp st0
fld1
retn
sub_42edc2
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x7
retn
sub_42eded
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_42ee56
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_42ee69
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_42ee73
or cl cl
je r-xdata
retn
fchs
sub_42eee0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_42eef5
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_42ef0c
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_42ef68
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_42f387
push 0x1
call sub_428ae8
pop ecx
retn
sub_42f706
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_42f630
add esp 0xc
pop ebp
retn 0x4
sub_42f739
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_4372b5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_42f76b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_42f630
add esp 0xc
pop ebp
retn 0x8
sub_42f823
push esi
call sub_42ba40
pop ecx
retn
sub_42fb95
push esi
call sub_42ba40
pop ecx
retn
sub_430448
push esi
call sub_42ba40
pop ecx
retn
sub_4305b5
push edi
call sub_42ba40
pop ecx
retn
sub_430680
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_43069e
leave
retn
sub_430698
movlpd xmm0 [ esp + 0x4 ]
sub_4309fc
and [ ebp - 0x2c8 ] 0xfe
sub_430bc0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_430bde
leave
retn
sub_430bd8
movlpd xmm0 [ esp + 0x4 ]
sub_430e30
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm7 [ esp ]
call sub_430e4e
leave
retn
sub_430e48
movq xmm7 [ esp + 0x4 ]
sub_431120
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_43113e
leave
retn
sub_431138
movlpd xmm0 [ esp + 0x4 ]
sub_431680
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_43169e
leave
retn
sub_431698
movlpd xmm0 [ esp + 0x4 ]
sub_431c00
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_431c1e
leave
retn
sub_431c18
movlpd xmm0 [ esp + 0x4 ]
j_sub_431e60
jmp sub_431e60
sub_431e60
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_431e7e
leave
retn
sub_431e78
movlpd xmm0 [ esp + 0x4 ]
sub_432010
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_43202e
leave
retn
sub_432028
movlpd xmm0 [ esp + 0x4 ]
sub_4326fa
push 0x1
call sub_428ae8
pop ecx
retn
sub_432709
mov eax rw-data
retn
sub_432715
mov eax rw-data
retn
sub_432a09
push 0x6
call sub_428ae8
pop ecx
retn
sub_432a4f
push 0x6
call sub_428ae8
pop ecx
retn
sub_432ece
push 0x7
call sub_428ae8
pop ecx
retn
sub_4337c6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_430650
sub_43381d
push sub_4337dc
call sub_428e19
pop ecx
xor eax eax
retn
sub_433b46
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_433d3d
push 0xe
call sub_428ae8
pop ecx
retn
sub_4344e9
call sub_42869d
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_427d60
sub_4348b2
push 0x2
call sub_421d7b
sub_434c1a
mov ecx [ rw-data ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
retn
sub_434ea7
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434db4
add esp 0x10
pop ebp
retn
sub_435f82
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4360ef
add esp 0x18
pop ebp
retn
sub_436461
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_436472
pop ecx
pop ecx
pop ebp
retn
sub_4364f0
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436508
add esp 0x10
pop ebp
retn
sub_436548
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_436559
pop ecx
pop ecx
pop ebp
retn
sub_436797
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436675
add esp 0x14
pop ebp
retn
sub_4367b2
xor eax eax
retn
sub_4368be
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
leave
retn
sub_437179
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_436961
add esp 0x18
pop ebp
retn
sub_437289
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4371c0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4372d4
call eax
retn
sub_4372d7
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_437c90
add esp 0xc
pop ebp
retn
sub_437cba
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_437cd1
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_437f31
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437f49
add esp 0x10
pop ebp
retn
sub_439c5d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_439c72
add esp 0xc
pop ebp
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_43a215
push esi
mov esi ecx
push esi
call [ VariantInit@IAT ]
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
mov eax esi
pop esi
retn
sub_43a22b
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn
sub_43a23f
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
push [ ebp + 0x8 ]
push esi
call [ VariantCopy@IAT ]
pop esi
pop ebp
retn 0x4
sub_43a56f
push esi
mov esi ecx
call sub_4492b3
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_43a584
push esi
mov esi ecx
call sub_43a543
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_43a599
push esi
mov esi ecx
call sub_444e09
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_43a5ee
mov eax 0x80004001
retn 0xc
sub_43a65c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80070057
and [ eax ] 0x0
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_43a676
mov eax 0x80004001
retn 0x14
j_sub_43a71b
jmp sub_43a71b
sub_43a761
push ebp
mov ebp esp
mov ecx [ ecx ]
xor eax eax
cmp ecx [ ebp + 0x8 ]
sete al
pop ebp
retn 0x4
sub_43a772
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43a761
xor ecx ecx
test al al
sete cl
mov al cl
pop ebp
retn 0x4
sub_43a83b
xor eax eax
cmp ecx 0x8007000e
sete al
lea ecx [ eax - 0x1 ]
and ecx 0x6
add ecx 0xc0000017
jmp sub_43b2c3
sub_43b2c3
push 0x0
push 0x0
push 0x1
push ecx
call [ RaiseException@IAT ]
retn
sub_43b35d
push 0x10
push r--data
push r--data
push 0x0
call [ MessageBoxW@IAT ]
push 0x1
call sub_422011
int3
sub_43b850
test ecx ecx
je r-xdata
retn
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_43bc90
push ebp
mov ebp esp
call sub_43b9b8
test al al
je r-xdata
pop ebp
jmp sub_43bca8
pop ebp
jmp sub_43b9f1
sub_43c12c
push 0x0
push 0x0
push 0xf0
push [ ecx ]
call [ SendMessageW@IAT ]
dec eax
neg eax
sbb al al
inc al
retn
sub_43c37e
push ebp
mov ebp esp
push 0x0
push 0x0
push 0xba
push [ ecx ]
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_43c44d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
push 0x1
push 0xc2
push [ ecx ]
call [ SendMessageW@IAT ]
mov al 0x1
pop ebp
retn 0x4
sub_43c46a
xor eax eax
cmp [ ecx + 0x4 ] eax
sete al
retn
sub_43cc07
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
push 0x102c
push [ ecx ]
call [ SendMessageW@IAT ]
test eax eax
setne al
pop ebp
retn 0x4
sub_43cf2a
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
call sub_43d0d4
test eax eax
setne al
pop ecx
pop ebp
retn 0x4
sub_43d614
call sub_41f885
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_43d8ba
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
pop ebp
jmp sub_43d8c6
sub_43dd46
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
pop ebp
jmp sub_43dd52
sub_43e170
push 0x0
push 0x0
push 0x10
push [ ecx ]
call [ PostMessageW@IAT ]
mov al 0x1
retn
sub_43e181
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x1
jmp r-xdata
push [ ecx ]
call [ EnableWindow@IAT ]
mov al 0x1
pop ebp
retn 0x4
sub_43e259
push ebp
mov ebp esp
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongW@IAT ]
test eax eax
jns r-xdata
pop ebp
jmp [ GetParent@IAT ]
xor eax eax
pop ebp
retn 0x4
sub_43e3f3
push [ ecx ]
call [ IsWindowEnabled@IAT ]
test eax eax
setne al
retn
sub_43e401
push [ ecx ]
call [ IsWindowVisible@IAT ]
test eax eax
setne al
retn
sub_43e431
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x4
jmp r-xdata
push [ ecx ]
call [ ShowWindow@IAT ]
mov al 0x1
pop ebp
retn 0x4
sub_43e69d
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
pop ebp
jmp sub_43e6a9
sub_43e9b5
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
pop ebp
jmp sub_43e9c1
sub_43ea82
mov [ ecx ] r--data
add ecx 0x4
jmp sub_403097
sub_43ea90
push esi
mov esi ecx
push [ esi ]
call sub_4011ca
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_43eacf
or eax 0xffffffff
retn 0x4
sub_43ee37
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov [ esi ] r--data
test edx edx
je r-xdata
pop esi
retn
mov eax [ edx ]
push edx
call [ eax + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_43ee53
push esi
mov esi ecx
call sub_43f009
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_43ee68
push esi
mov esi ecx
call sub_43ee37
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_43ef7a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_43ef8b
xor eax eax
inc eax
retn 0x4
sub_43f1bc
xor eax eax
inc eax
retn 0x8
sub_43f22d
mov eax 0x80020006
retn 0x18
sub_43f235
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
and [ eax ] 0x0
mov eax 0x80004001
pop ebp
retn 0x10
sub_43f247
mov eax 0x80070057
retn 0x10
sub_43f24f
mov eax 0x80070057
retn 0x8
sub_43f257
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn 0x8
sub_43f3ee
xor eax eax
retn 0x8
sub_43f544
xor eax eax
retn 0x4
sub_43f549
retn 0xc
sub_43f54c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3c ] 0x1
xor eax eax
pop ebp
retn 0x4
sub_43f55f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3c ] 0x0
xor eax eax
pop ebp
retn 0x4
sub_43f616
retn 0x8
sub_43f619
retn 0x4
sub_43f63e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3d ] 0x1
xor eax eax
pop ebp
retn 0x4
sub_43f651
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3d ] 0x0
xor eax eax
pop ebp
retn 0x8
sub_43f684
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ MkParseDisplayName@IAT ]
pop ebp
retn 0x14
sub_43f69d
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ ecx + 0x8 ]
call sub_43f3f3
pop ebp
retn 0xc
sub_43f6b5
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
call sub_43f3f3
pop ebp
retn 0xc
sub_43f6cd
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
call sub_43f4c5
pop ebp
retn 0xc
sub_43f6e5
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
dec eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_43f6f6
mov eax 0x80004001
retn 0x8
sub_43f78c
mov eax 0x80004005
retn 0x8
sub_43f794
mov eax 0x80004001
retn 0x4
sub_43f79c
mov eax 0x80004001
retn 0x10
sub_43f7a4
xor eax eax
inc eax
retn 0xc
sub_43f82d
push ebp
mov ebp esp
push 0x0
push sub_43fcce
push [ ebp + 0xc ]
mov [ rw-data ] ecx
push 0x3e8
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
and [ rw-data ] 0x0
pop ebp
retn 0x8
sub_43f87b
push esi
mov esi ecx
push r--data
lea ecx [ esi + 0x34 ]
call sub_407e53
push 0x2
push [ esi + 0x54 ]
call [ EndDialog@IAT ]
pop esi
retn
sub_43fcce
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
jmp sub_43fce6
xor eax eax
pop ebp
retn 0x10
sub_43fe03
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43fde5
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x10 ]
jmp r-xdata
pop ebp
retn 0x4
sub_44009f
push esi
mov esi ecx
mov [ esi ] r--data
call sub_440312
push [ esi + 0x4 ]
call j_sub_4228ca#2
pop ecx
pop esi
retn
sub_440125
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_440144
push esi
mov esi ecx
call sub_4400b8
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_440159
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_440213
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
mov eax 0x80004001
mov eax 0x80070057
jmp r-xdata
pop ebp
retn 0x10
sub_4403cc
xor eax eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx ] r--data
mov eax ecx
retn
sub_4405c6
push esi
mov esi ecx
call sub_4404c9
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_440619
push esi
mov esi ecx
call sub_4404fb
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_44062e
push esi
mov esi ecx
call sub_414430
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_440643
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_4411c5
push esi
mov esi ecx
call sub_441357
test al al
je r-xdata
mov eax sub_44121e
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_4411dd
push esi
mov esi ecx
call sub_441369
test al al
je r-xdata
mov eax sub_441223
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_4411f5
push esi
mov esi ecx
call sub_441199
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_44120a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x38
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_44121e
xor eax eax
retn 0xc
sub_441223
xor eax eax
retn 0x14
sub_441357
push esi
mov esi ecx
call sub_44137b
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_441369
push esi
mov esi ecx
call sub_4413a6
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_4416b3
push esi
mov esi ecx
call sub_441622
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_442f46
push esi
mov esi ecx
call sub_44a46f
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_4434e5
xor edx edx
mov [ ecx + 0x1 ] edx
mov [ ecx + 0x5 ] dx
xor eax eax
mov [ ecx + 0x6 ] eax
mov [ ecx ] 0xff
mov [ ecx + 0x4 ] dx
mov [ ecx + 0xa ] dl
mov eax ecx
retn
sub_443535
xor eax eax
cmp [ ecx + 0x20 ] eax
je r-xdata
cmp [ ecx ] eax
jge r-xdata
push 0x2
pop eax
push [ ecx ]
push eax
jmp r-xdata
call sub_4449d1
retn
sub_44354e
xor eax eax
cmp [ ecx + 0x20 ] eax
je r-xdata
cmp [ ecx + 0x4 ] eax
jge r-xdata
push 0x2
pop eax
push [ ecx + 0x4 ]
push eax
jmp r-xdata
call sub_4449d1
retn
sub_4445dc
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_444342
push [ ebp + 0x8 ]
mov ecx esi
call sub_444497
pop esi
pop ebp
retn 0x4
sub_444c4e
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422d9d
add esp 0xc
pop ebp
retn
sub_444e3d
push esi
mov esi ecx
push [ esi ]
call sub_43fdab
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_44542e
add ecx 0x4
jmp sub_405cd3
sub_4465ac
push [ ecx ]
call [ FlushFileBuffers@IAT ]
test eax eax
setne al
retn
sub_446623
xor eax eax
cmp [ ecx + 0x8 ] eax
je r-xdata
retn
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
jmp sub_4466bf
sub_44689f
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446852
sub eax [ ebp + 0xc ]
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x8
sub_446f4b
mov ecx [ ecx ]
call sub_41dd92
xor ecx ecx
cmp eax 0xffffffff
setne al
retn
sub_448a7c
cmp [ ecx + 0x9 ] 0x0
mov eax [ ecx + 0x4 ]
je r-xdata
retn
mov eax [ eax + 0x8 ]
sub_448b39
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
call sub_40d3d2
mov eax esi
pop esi
retn
sub_448b48
add ecx 0xc
jmp sub_405cd3
sub_4492f4
push ebp
mov ebp esp
push ecx
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_449310
pop ecx
pop ebp
retn 0xc
sub_449ce3
push esi
mov esi ecx
call sub_449d09
lea ecx [ esi + 0x8 ]
call sub_449cce
lea ecx [ esi + 0x10 ]
call sub_449cce
lea ecx [ esi + 0x18 ]
call sub_449cce
and [ esi + 0x4 ] 0x0
pop esi
retn
sub_449d09
push esi
mov esi ecx
lea ecx [ esi + 0x1c ]
call sub_449cce
lea ecx [ esi + 0xc ]
call sub_449cce
lea ecx [ esi + 0x14 ]
pop esi
jmp sub_449cce
sub_449d53
call sub_449d5f
neg eax
sbb eax eax
neg eax
retn
sub_44a032
call sub_449d5f
movzx eax al
shr eax 0x2
and eax 0x1
retn
sub_44a0a2
movzx eax [ ecx ]
shr eax 0x3
and eax 0x1
retn
sub_44a0ac
xor eax eax
test [ ecx ] 0x4
je r-xdata
retn
cmp [ ecx + 0x10 ] eax
je r-xdata
inc eax
sub_44a102
lea eax [ ecx + 0x18 ]
push eax
lea eax [ ecx + 0x1c ]
push eax
push ecx
push ecx
call sub_449f31
retn
sub_44a112
xor eax eax
test [ ecx ] 0x1
je r-xdata
retn
cmp [ ecx + 0x18 ] eax
je r-xdata
inc eax
sub_44a149
call sub_449d5f
movzx eax al
shr eax 0x1
and eax 0x1
retn
sub_44a1a9
xor eax eax
test [ ecx ] 0x2
je r-xdata
retn
cmp [ ecx + 0x8 ] eax
je r-xdata
inc eax
sub_44a2dc
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x1f4
call sub_44a1b7
jmp r-xdata
pop ebp
retn 0x4
sub_44a3d2
push esi
mov esi ecx
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x24 ]
pop esi
test ecx ecx
jne sub_44a31d
call sub_44a31d
retn
sub_44a592
movzx eax [ ecx + 0x8 ]
cmp ax 0x20
jl r-xdata
xor al al
retn
cmp ax 0x2f
jg r-xdata
mov al 0x1
retn
sub_44a5a8
movzx eax [ ecx + 0x8 ]
cmp ax 0x10
jl r-xdata
xor al al
retn
cmp ax 0x1f
jg r-xdata
mov al 0x1
retn
sub_44a5be
movzx eax [ ecx + 0x8 ]
test ax ax
js r-xdata
xor al al
retn
cmp ax 0xf
jg r-xdata
mov al 0x1
retn
sub_44a7a2
call sub_405372
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_44a860
mov eax edx
mov edx ecx
mov ecx eax
call sub_4141fc
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_44aa9c
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_405cd3
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_44afbf
cmp [ ecx + 0xc ] 0xd
jne r-xdata
xor eax eax
retn
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
retn
sub_44b00a
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
pop esi
retn
push ecx
call sub_401926
and [ esi + 0x8 ] 0x0
sub_44be39
cmp [ ecx + 0xc ] 0xa
jne r-xdata
xor eax eax
retn
mov eax [ ecx ]
mov eax [ eax ]
retn
sub_44be47
push esi
mov esi ecx
cmp [ esi + 0xc ] 0xb
je r-xdata
mov ecx esi
call sub_44b00a
mov eax [ esi ]
pop esi
mov eax [ eax + 0x4 ]
retn
call sub_44ae06
sub_44d26d
push ebp
mov ebp esp
mov eax [ ecx ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
sub_44d286
sub ecx [ ecx - 0x4 ]
jmp sub_44d2cd
sub_44d28e
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
call sub_412570
lea ecx [ esi + 0x10 ]
call sub_412570
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_44d2f2
push esi
mov esi ecx
call sub_449b29
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_44d323
push esi
mov esi ecx
call sub_407da8
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_44d7a4
sub ecx [ ecx - 0x4 ]
jmp sub_41ba98
sub_44d7ac
sub ecx [ ecx - 0x4 ]
jmp sub_44d7b4
sub_450652
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x1
push [ eax + 0x8 ]
push [ ebp + 0xc ]
push eax
call sub_451bfa
pop ebp
retn 0x8
sub_4508c1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push [ eax + 0x8 ]
push [ ebp + 0xc ]
push eax
call sub_451bfa
pop ebp
retn 0x8
sub_451080
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4522e5
pop ebp
retn 0x8
sub_451094
push ebp
mov ebp esp
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4522e5
pop ebp
retn 0x8
sub_45281a
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x9
call sub_41bf5c
pop ebp
retn 0x8
sub_45282e
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x18
call sub_41bf5c
pop ebp
retn 0x8
sub_452842
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x19
call sub_41bf5c
pop ebp
retn 0x8
sub_452856
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_41bf5c
pop ebp
retn 0x8
sub_45286a
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xc
call sub_41bf5c
pop ebp
retn 0x8
sub_45287e
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x5
call sub_41bf5c
pop ebp
retn 0x8
sub_452892
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x15
call sub_41bf5c
pop ebp
retn 0x8
sub_4528a6
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x2
call sub_41bf5c
pop ebp
retn 0x8
sub_4528ba
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x4
call sub_41bf5c
pop ebp
retn 0x8
sub_4528ce
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x7
call sub_41bf5c
pop ebp
retn 0x8
sub_4528e2
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x3
call sub_41bf5c
pop ebp
retn 0x8
sub_4528f6
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x17
call sub_41bf5c
pop ebp
retn 0x8
sub_45290a
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1
call sub_41bf5c
pop ebp
retn 0x8
sub_45291e
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x13
call sub_41bf5c
pop ebp
retn 0x8
sub_452932
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x14
call sub_41bf5c
pop ebp
retn 0x8
sub_452946
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xe
call sub_41bf5c
pop ebp
retn 0x8
sub_45295a
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xf
call sub_41bf5c
pop ebp
retn 0x8
sub_45296e
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1c
call sub_41bf5c
pop ebp
retn 0x8
sub_452982
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1d
call sub_41bf5c
pop ebp
retn 0x8
sub_452996
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x6
call sub_41bf5c
pop ebp
retn 0x8
sub_4529aa
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x8
call sub_41bf5c
pop ebp
retn 0x8
sub_4529be
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1a
call sub_41bf5c
pop ebp
retn 0x8
sub_4529d2
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x12
call sub_41bf5c
pop ebp
retn 0x8
sub_4529e6
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xa
call sub_41bf5c
pop ebp
retn 0x8
sub_4529fa
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xb
call sub_41bf5c
pop ebp
retn 0x8
sub_452a0e
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x10
call sub_41bf5c
pop ebp
retn 0x8
sub_452a22
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x11
call sub_41bf5c
pop ebp
retn 0x8
sub_452a36
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x16
call sub_41bf5c
pop ebp
retn 0x8
sub_45469c
xor eax eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx ] r--data
mov eax ecx
retn
sub_4547be
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4559e0
push [ esi + 0x4 ]
call j_sub_4228ca#2
pop ecx
pop esi
retn
sub_454847
push esi
lea esi [ ecx + 0x88 ]
mov ecx esi
call sub_403282
mov [ esi ] r--data
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_403097
sub_454883
push esi
mov esi ecx
call sub_4547d7
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_4548d9
test ecx ecx
jne r-xdata
push ecx
call sub_42010a
pop ecx
retn
xor eax eax
retn
sub_454b0c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
add ecx 0x44
call sub_455755
xor eax eax
pop ebp
retn 0x8
sub_454d74
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
add ecx 0x10
call sub_455755
xor eax eax
pop ebp
retn 0x8
sub_45550c
push ebp
mov ebp esp
cmp [ ecx + 0x30 ] 0x0
je r-xdata
pop ebp
jmp sub_455521
pop ebp
jmp sub_4555da
sub_455692
cmp [ ecx ] 0x0
je r-xdata
xor eax eax
retn
push [ ecx ]
call [ SetEvent@IAT ]
neg eax
sbb eax eax
neg eax
retn
sub_4559b1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_454b20
pop ebp
retn
sub_455c6f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_40d89e
mov ecx [ ebp + 0xc ]
call sub_44ae06
xor eax eax
pop ebp
retn 0x8
sub_456865
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
mov ecx eax
call sub_44bf7c
xor eax eax
pop ebp
retn 0x8
sub_456a1c
push esi
mov esi ecx
lea ecx [ esi + 0x44 ]
call sub_405cd3
lea ecx [ esi + 0x34 ]
call sub_405cd3
lea ecx [ esi + 0x24 ]
pop esi
jmp sub_405cd3
sub_45707a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40cdb4
test eax eax
setne [ rw-data ]
xor eax eax
pop ebp
retn 0x8
sub_458d07
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x1
push [ eax + 0x8 ]
push eax
call sub_45a3f7
pop ebp
retn 0x8
sub_458d1c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push [ eax + 0x8 ]
push eax
call sub_45a3f7
pop ebp
retn 0x8
sub_458fae
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push [ eax + 0x8 ]
push eax
call sub_45a750
pop ebp
retn 0x8
sub_458fc3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x2
push [ eax + 0x8 ]
push eax
call sub_45a750
pop ebp
retn 0x8
sub_459fbe
push ebp
mov ebp esp
lea eax [ ecx + 0x5 ]
push eax
lea eax [ ecx + 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_459f5a
pop ebp
retn 0x4
sub_459fd5
push ebp
mov ebp esp
lea eax [ ecx + 0x3 ]
push eax
lea eax [ ecx + 0x2 ]
push eax
push [ ebp + 0x8 ]
call sub_459f5a
pop ebp
retn 0x4
sub_45aede
push esi
mov esi ecx
call sub_45bf43
test al al
je r-xdata
mov eax sub_44121e
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_45bf43
push esi
mov esi ecx
call sub_45bf55
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_45ea97
cmp [ ecx + 0x9 ] 0x0
mov eax [ ecx + 0x4 ]
je r-xdata
retn
mov eax [ eax + 0x10 ]
sub_45eaa4
push esi
mov esi ecx
call sub_45eba7
test al al
je r-xdata
mov eax sub_43f3ee
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_45eb74
push esi
push 0x0
mov esi ecx
call sub_4240da
mov [ esi ] eax
pop ecx
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
retn
sub_45eba7
push esi
mov esi ecx
call sub_45ebb9
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_45f703
xor eax eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx ] r--data
mov eax ecx
retn
sub_45f717
push esi
mov esi ecx
mov [ esi ] r--data
call sub_402982
push [ esi + 0x4 ]
call j_sub_4228ca#2
pop ecx
pop esi
retn
sub_45f730
push esi
mov esi ecx
mov [ esi ] r--data
call sub_462852
push [ esi + 0x4 ]
call j_sub_4228ca#2
pop ecx
pop esi
retn
sub_45f749
push esi
mov esi ecx
call sub_4620e4
test al al
je r-xdata
mov eax sub_43f544
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_460a19
push ebp
mov ebp esp
pop ebp
jmp sub_460a22
sub_460bfa
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_45f79f
pop ebp
retn 0x8
sub_460c0e
push ebp
mov ebp esp
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_45f79f
pop ebp
retn 0x8
sub_461f19
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push 0x0
call sub_4623c5
pop ebp
retn 0x8
sub_461f2f
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1
push 0x0
call sub_4623c5
pop ebp
retn 0x8
sub_461ffd
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x8 ]
push eax
push 0x0
call sub_462121
pop ebp
retn 0x8
sub_4620e4
push esi
mov esi ecx
call sub_4620f6
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_4629ed
push esi
mov esi ecx
call sub_463aba
test al al
je r-xdata
mov eax sub_462a05
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_462a05
xor eax eax
retn 0x10
sub_463aba
push esi
mov esi ecx
call sub_463acc
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_463fa4
push ebp
mov ebp esp
push sub_44a032
push sub_44a041
push sub_449ffa
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4641f9
pop ebp
retn 0x8
sub_46416a
push ebp
mov ebp esp
push sub_44a149
push sub_44a157
push sub_44a120
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4641f9
pop ebp
retn 0x8
sub_465836
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_465e61
pop ebp
retn 0x8
sub_46584a
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1
call sub_465e61
pop ebp
retn 0x8
sub_468b5a
push ebp
mov ebp esp
mov eax [ ecx ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop ebp
retn 0x4
mov eax [ eax + 0x4 ]
mov [ ecx ] eax
sub_468b73
push esi
mov esi ecx
call sub_43edea
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_468ba4
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_405cd3
push esi
call j_sub_4228ca#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_46d56f
push ebp
mov ebp esp
pop ebp
jmp sub_46d578
sub_46de69
push ebp
mov ebp esp
pop ebp
jmp sub_454132
sub_46e769
push ebp
mov ebp esp
pop ebp
jmp sub_46e772
sub_46f084
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_41af7d
push [ ebp + 0xc ]
push eax
call sub_41ad1f
pop ebp
retn 0x10
sub_471de0
cmp [ rw-data ] 0x0
je sub_471e16
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_471e8b
call sub_41e44f
push j_sub_41f5b1
call sub_421b2a
pop ecx
retn
sub_471e9c
call sub_41e726
push j_sub_41f62c
call sub_421b2a
pop ecx
retn
sub_471ead
push j_sub_41f8b2
call sub_421b2a
pop ecx
retn
sub_471eb9
call sub_41f396
push j_sub_41f819
call sub_421b2a
pop ecx
retn
sub_471eca
call sub_41be17
push j_sub_402941
call sub_421b2a
pop ecx
retn
sub_471edb
push ecx
call sub_40131c
push sub_471f5f
call sub_421b2a
pop ecx
retn
sub_471eed
mov eax [ rw-data ]
push ecx
mov eax [ eax + 0x4 ]
add eax rw-data
push eax
call sub_41e975
push j_sub_402c0d
call sub_421b2a
pop ecx
retn
sub_471f0d
call sub_41ab25
push j_sub_404825
call sub_421b2a
pop ecx
retn
sub_471f1e
call sub_41f63d
push j_sub_40115d
call sub_421b2a
pop ecx
retn
sub_471f2f
mov ecx rw-data
call sub_40d3d2
push sub_471fab
call sub_421b2a
pop ecx
retn
j_sub_41f5b1
jmp sub_41f5b1
sub_471f4a
retn
j_sub_41f62c
jmp sub_41f62c
j_sub_41f8b2
jmp sub_41f8b2
j_sub_41f819
jmp sub_41f819
j_sub_402941
jmp sub_402941
sub_471f5f
push esi
mov esi rw-data
mov ecx esi
call sub_4045a7
mov ecx esi
pop esi
jmp sub_43ea82
j_sub_402c0d
jmp sub_402c0d
j_sub_404825
jmp sub_404825
j_sub_40115d
jmp sub_40115d
sub_471f83
mov ecx rw-data
jmp sub_405cd3
sub_471f8d
mov ecx rw-data
jmp sub_414430
sub_471f97
mov ecx rw-data
jmp sub_414430
sub_471fa1
mov ecx rw-data
jmp sub_414430
sub_471fab
mov ecx rw-data
jmp sub_405cd3
sub_471fb5
mov ecx rw-data
jmp sub_405cd3
sub_471fbf
mov ecx rw-data
jmp sub_414430
sub_4756c0
setne al
retn
