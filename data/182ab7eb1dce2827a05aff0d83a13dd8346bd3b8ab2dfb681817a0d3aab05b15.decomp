sub_401000
push ebp
mov ebp esp
sub esp 0x10
push edi
push ebx
call sub_421e20
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
shr [ ebp - 0x4 ] 0x1
pop ecx
mov edi eax
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x2710
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
sub [ ebp - 0xc ] edi
mov edx edi
lea ecx [ esi + ebx - 0x1 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov dl [ edi ]
cmp dl [ esi ]
je r-xdata
mov al [ ecx ]
xor [ edx ] al
mov eax [ ebp - 0xc ]
mov al [ eax + edx ]
xor al [ ecx ]
mov [ edx ] al
jmp r-xdata
mov eax esi
pop edi
leave
retn
mov ecx esi
sub edi esi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
dec ecx
inc edx
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ecx ] dl
inc ecx
mov dl [ edi + ecx ]
cmp dl [ ecx ]
jne r-xdata
sub_401074
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp - 0x5c ] eax
xor esi esi
call sub_421ed1
mov [ ebp + esi * 4 - 0x44 ] eax
inc esi
cmp esi 0x10
jl r-xdata
mov edi 0x22334455
mov [ ebp - 0x54 ] 0x11223344
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] 0x33445566
mov [ ebp - 0x48 ] 0x44556677
mov [ ebp - 0x58 ] 0x64
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
mov eax ecx
xor eax edx
and eax edi
xor eax ecx
add eax [ ebp - 0x44 ]
lea eax [ eax + esi - 0x28955b88 ]
rol eax 0x7
add eax edi
mov esi edx
xor esi edi
and esi eax
xor esi edx
add esi [ ebp - 0x40 ]
lea ecx [ esi + ecx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov esi eax
xor esi edi
and esi ecx
xor esi edi
add esi [ ebp - 0x3c ]
lea edx [ esi + edx + 0x242070db ]
ror edx 0xf
add edx ecx
mov esi ecx
xor esi eax
and esi edx
xor esi eax
add esi [ ebp - 0x38 ]
lea esi [ esi + edi - 0x3e423112 ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0xa83f051 ]
rol eax 0x7
add eax esi
mov edi edx
xor edi esi
and edi eax
xor edi edx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0x2c ]
lea edx [ edi + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x28 ]
lea esi [ edi + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x24 ]
lea eax [ edi + eax + 0x698098d8 ]
rol eax 0x7
mov edi edx
xor edi esi
add eax esi
and edi eax
xor edi edx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0x1c ]
lea edx [ edi + edx - 0xa44f ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x14 ]
lea eax [ edi + eax + 0x6b901122 ]
rol eax 0x7
add eax esi
mov edi edx
xor edi esi
and edi eax
xor edi edx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x8 ]
lea esi [ edi + esi + 0x49b40821 ]
ror esi 0xa
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x40 ]
lea eax [ edi + eax - 0x9e1da9e ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x2c ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x18 ]
lea edx [ edi + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x44 ]
lea esi [ edi + esi - 0x16493856 ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x30 ]
lea eax [ edi + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x1c ]
lea ecx [ edi + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x34 ]
lea esi [ edi + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x20 ]
lea eax [ edi + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0xc ]
lea ecx [ edi + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x38 ]
lea edx [ edi + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x24 ]
lea esi [ edi + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x10 ]
lea eax [ edi + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x3c ]
lea ecx [ edi + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x28 ]
lea edx [ edi + edx + 0x676f02d9 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
mov ebx edi
and ebx eax
xor ebx ecx
add ebx [ ebp - 0x14 ]
lea esi [ ebx + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
xor edi esi
add edi [ ebp - 0x30 ]
lea eax [ edi + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x24 ]
lea ecx [ edi + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov edi ecx
xor edi esi
xor edi eax
add edi [ ebp - 0x18 ]
mov ebx ecx
lea edi [ edi + edx + 0x6d9d6122 ]
rol edi 0x10
add edi ecx
xor ebx edi
mov edx ebx
xor edx eax
add edx [ ebp - 0xc ]
lea edx [ edx + esi - 0x21ac7f4 ]
ror edx 0x9
add edx edi
xor ebx edx
add ebx [ ebp - 0x40 ]
mov esi edi
lea eax [ ebx + eax - 0x5b4115bc ]
xor esi edx
rol eax 0x4
add eax edx
xor esi eax
add esi [ ebp - 0x34 ]
lea esi [ esi + ecx + 0x4bdecfa9 ]
rol esi 0xb
add esi eax
mov ecx esi
xor ecx edx
xor ecx eax
add ecx [ ebp - 0x28 ]
mov ebx esi
lea edi [ ecx + edi - 0x944b4a0 ]
rol edi 0x10
add edi esi
xor ebx edi
mov ecx ebx
xor ecx eax
add ecx [ ebp - 0x1c ]
lea ecx [ ecx + edx - 0x41404390 ]
ror ecx 0x9
add ecx edi
xor ebx ecx
add ebx [ ebp - 0x10 ]
mov edx edi
lea eax [ ebx + eax + 0x289b7ec6 ]
rol eax 0x4
xor edx ecx
add eax ecx
xor edx eax
add edx [ ebp - 0x44 ]
lea edx [ edx + esi - 0x155ed806 ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0x38 ]
lea esi [ esi + edi - 0x2b10cf7b ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
mov ebx edi
xor ebx eax
add ebx [ ebp - 0x2c ]
lea ecx [ ebx + ecx + 0x4881d05 ]
ror ecx 0x9
add ecx esi
xor edi ecx
add edi [ ebp - 0x20 ]
lea eax [ edi + eax - 0x262b2fc7 ]
rol eax 0x4
add eax ecx
mov edi esi
xor edi ecx
xor edi eax
add edi [ ebp - 0x14 ]
lea edx [ edi + edx - 0x1924661b ]
rol edx 0xb
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi [ ebp - 0x8 ]
lea esi [ edi + esi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x3c ]
lea ecx [ edi + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x44 ]
lea eax [ edi + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x28 ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0xc ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x36c5fc7 ]
ror ecx 0xb
mov edi edx
not edi
add ecx esi
or edi ecx
xor edi esi
add edi [ ebp - 0x14 ]
lea eax [ edi + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x38 ]
lea edx [ edi + edx - 0x70f3336e ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x24 ]
lea eax [ edi + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x1d31920 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x2c ]
lea esi [ edi + esi - 0x5cfebcec ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx + 0x4e0811a1 ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0x8ac817e ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x18 ]
lea edx [ edi + edx - 0x42c50dcb ]
rol edx 0xa
mov edi ecx
not edi
add edx eax
or edi edx
xor edi eax
add edi [ ebp - 0x3c ]
lea esi [ edi + esi + 0x2ad7d2bb ]
rol esi 0xf
add [ ebp - 0x54 ] eax
add [ ebp - 0x48 ] edx
add esi edx
add [ ebp - 0x4c ] esi
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx - 0x14792c6f ]
mov edi [ ebp - 0x50 ]
ror ecx 0xb
add ecx esi
add edi ecx
dec [ ebp - 0x58 ]
mov [ ebp - 0x50 ] edi
jne r-xdata
mov ebx [ ebp - 0x60 ]
lea esi [ ebx + 0x40 ]
push esi
call sub_421e20
mov edi eax
push 0x40
lea eax [ ebp - 0x44 ]
push eax
push edi
call sub_421710
add esp 0x10
xor eax eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] esi
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov ecx eax
and ecx 0x8000000f
jns r-xdata
mov cl [ ebp + ecx - 0x54 ]
mov edx [ ebp + 0x8 ]
xor cl [ eax + edx ]
inc eax
mov [ edi + eax + 0x3f ] cl
cmp eax ebx
jb r-xdata
dec ecx
or ecx 0xfffffff0
inc ecx
sub_4016de
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x48 ] eax
xor ebx ebx
inc ebx
cmp ebx 0x2a
jl r-xdata
cmp eax ebx
jge r-xdata
lea edi [ ebp + ebx - 0x44 ]
call sub_421ed1
cdq
push 0x2a
pop ecx
idiv ecx
xor eax eax
mov [ edi ] dl
test ebx ebx
je r-xdata
push 0x2a
mov eax esi
pop ecx
xor edx edx
div ecx
mov ebx [ ebp - 0x48 ]
mov [ ebp - 0x8 ] esi
sub esi edx
add esi 0x6a
push esi
mov [ ebx ] esi
call sub_421e20
mov edi eax
push 0x40
lea eax [ ebp - 0x44 ]
push eax
push edi
call sub_421710
add esp 0x10
xor ecx ecx
add esi 0xffffffc0
je r-xdata
mov cl [ ebp + eax - 0x44 ]
cmp cl [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov esi [ ebx ]
add esi 0xffffffc0
inc eax
jmp r-xdata
call sub_421ed1
cdq
push 0x2a
pop ecx
idiv ecx
xor eax eax
mov [ edi ] dl
jmp r-xdata
mov eax ecx
cdq
push 0x2a
pop ebx
idiv ebx
movzx eax [ ebp + edx - 0x44 ]
sub eax edx
mov edx [ ebp + 0x8 ]
add eax ecx
mov al [ eax + edx ]
mov [ edi + ecx + 0x40 ] al
inc ecx
cmp ecx esi
jb r-xdata
sub_4017a2
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ rw-data ]
push 0x2a
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_421710
mov eax [ ebp - 0x48 ]
mov ebx [ esi + 0x3c ]
push edi
mov [ eax ] ebx
call sub_421e20
add esp 0x10
xor ecx ecx
add edi 0xffffffc0
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x50 ] edi
je r-xdata
xor eax eax
pop edi
test ebx ebx
pop ebx
je r-xdata
mov eax ecx
cdq
push 0x2a
pop edi
idiv edi
movzx eax [ ebp + edx - 0x44 ]
sub eax edx
add eax [ ebp - 0x4c ]
mov dl [ esi + ecx + 0x40 ]
mov [ eax + ecx + 0x40 ] dl
inc ecx
cmp ecx [ ebp - 0x50 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_4216fe
leave
retn
mov ecx [ ebp - 0x4c ]
mov cl [ ecx + eax + 0x40 ]
mov [ esi + eax ] cl
mov ecx [ ebp - 0x48 ]
inc eax
cmp eax [ ecx ]
jb r-xdata
sub_401832
push ebp
mov ebp esp
push esi
mov esi eax
push edi
push esi
push [ ebp + 0xc ]
call sub_421710
mov eax [ ebp + 0x8 ]
sub eax edi
push eax
lea eax [ esi + edi ]
push eax
push esi
call sub_421a80
push edi
push [ ebp + 0xc ]
sub esi edi
add esi [ ebp + 0x8 ]
push esi
call sub_421710
add esp 0x24
pop esi
pop ebp
retn
sub_401867
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
mov [ eax ] edi
call sub_42025a
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
push eax
call sub_421710
push edi
call sub_42025a
xor esi esi
inc esi
add esp 0x14
mov [ ebp - 0x8 ] eax
cmp edi esi
jbe r-xdata
push [ ebp - 0x8 ]
call sub_421eb4
mov eax [ ebp - 0x14 ]
pop ecx
pop edi
pop esi
leave
retn
push ebx
jmp r-xdata
lea ebx [ esi + 0x1 ]
mov [ ebp - 0x1c ] ebx
imul ebx esi
mov eax edi
xor edx edx
div ebx
mov edi eax
mov [ ebp - 0x10 ] edx
test edi edi
je r-xdata
cmp [ ebp - 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] ebx
sub [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] edi
mov esi [ ebp - 0x1c ]
cmp esi [ ebp + 0xc ]
jb r-xdata
imul edi ebx
add edi [ ebp - 0x14 ]
push esi
push edi
push [ ebp - 0x8 ]
call sub_421710
mov eax [ ebp - 0x10 ]
sub eax esi
push eax
lea eax [ edi + esi ]
push eax
push edi
call sub_421a80
push esi
push [ ebp - 0x8 ]
sub edi esi
add edi [ ebp - 0x10 ]
push edi
call sub_421710
add esp 0x24
push esi
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_421710
mov eax [ ebp - 0x4 ]
push [ ebp - 0xc ]
lea ecx [ eax + esi ]
push ecx
push eax
call sub_421a80
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
push esi
push [ ebp - 0x8 ]
push eax
call sub_421710
add [ ebp - 0x4 ] ebx
add esp 0x24
dec [ ebp - 0x18 ]
jne r-xdata
mov edi [ ebp + 0xc ]
pop ebx
sub_401956
push ebp
mov ebp esp
xor edx edx
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov eax edi
pop ebp
retn
mov cl [ edx + edi ]
mov al cl
and al 0xf
shl al 0x4
shr cl 0x4
add al cl
mov [ edx + edi ] al
inc edx
cmp edx esi
jb r-xdata
sub_40199a
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi eax
mov eax [ esi ]
push edi
xor ebx ebx
xor edi edi
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
push eax
call sub_421e20
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0xc ] ebx
jbe r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x1
pop edi
pop esi
pop ebx
leave
retn
mov cl [ edi + esi + 0x4 ]
xor eax eax
mov eax [ ebp - 0x4 ]
push 0x7
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
inc [ ebp - 0x4 ]
cmp eax 0xffffffff
je r-xdata
inc eax
cmp eax 0x10
jl r-xdata
mov al [ edi + esi + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + ebx ] al
inc ebx
inc edi
inc [ ebp - 0x4 ]
jmp r-xdata
mov dl [ edi + esi + 0x5 ]
shl al 0x4
xor ecx ecx
cmp [ eax + r--data ] cl
je r-xdata
or eax 0xffffffff
cmp edi [ ebp - 0xc ]
jb r-xdata
add edi 0x2
inc [ ebp - 0x4 ]
cmp ecx 0xffffffff
je r-xdata
inc ecx
cmp ecx 0x10
jl r-xdata
test edi edi
je r-xdata
add cl al
mov eax [ ebp - 0x8 ]
mov [ eax + ebx ] cl
inc ebx
cmp [ ecx + r--data ] dl
je r-xdata
or ecx 0xffffffff
sub_401a5a
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ rw-data ]
push esi
mov esi [ GetTickCount@IAT ]
call esi
mov [ ebp - 0x14 ] eax
call esi
and [ ebp - 0x10 ] 0x0
mov ecx eax
sub ecx [ ebp - 0x14 ]
cmp ecx 0x64
jae r-xdata
mov ecx [ ebp - 0x10 ]
imul ecx ecx 0x5
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ecx
fild [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
fild [ ebp - 0x1c ]
jns r-xdata
mov [ ebp - 0x4 ] ebx
shr [ ebp - 0x4 ] 0x1
fdiv [ r--data ]
fdivp st1
call sub_44eb70
inc eax
test eax eax
jle r-xdata
fadd [ r--data ]
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x2710
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax edi
sub eax edx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
lea ecx [ edi + ebx - 0x1 ]
mov [ ebp - 0x18 ] eax
pop esi
mov eax edi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
shr [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov edx [ ebp - 0xc ]
mov cl [ edx ]
cmp cl [ edi ]
je r-xdata
mov al [ ecx ]
xor [ edx ] al
mov eax [ ebp - 0x1c ]
mov al [ eax + edx ]
xor al [ ecx ]
mov [ edx ] al
jmp r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x2710
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] edi
sub [ ebp - 0x14 ] esi
mov edx esi
lea ecx [ edi + ebx - 0x1 ]
mov [ ebp - 0x18 ] eax
call esi
mov ecx eax
sub ecx [ ebp - 0x14 ]
cmp ecx 0x64
jb r-xdata
mov eax edi
sub edx edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
dec ecx
inc edx
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov dl [ esi ]
cmp dl [ edi ]
je r-xdata
mov al [ ecx ]
xor [ edx ] al
mov eax [ ebp - 0x14 ]
mov al [ eax + edx ]
xor al [ ecx ]
mov [ edx ] al
jmp r-xdata
inc [ ebp - 0x10 ]
push ebx
call sub_421e20
and [ ebp - 0x8 ] 0x0
pop ecx
mov [ ebp - 0xc ] eax
mov [ eax ] cl
inc eax
mov cl [ edx + eax ]
cmp cl [ eax ]
jne r-xdata
push 0x1e
call [ Sleep@IAT ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax esi
mov ecx edi
sub eax edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
dec ecx
inc edx
dec [ ebp - 0x18 ]
jne r-xdata
push ebx
call sub_421e20
and [ ebp - 0x8 ] 0x0
pop ecx
mov esi eax
mov [ ecx ] dl
inc ecx
mov dl [ eax + ecx ]
cmp dl [ ecx ]
jne r-xdata
sub_401baf
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0xd4 ] eax
push ebx
push esi
push edi
mov [ ebp - 0x4 ] rw-data
mov eax [ rw-data ]
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x50 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x40 ] eax
call GetTickCount
mov [ ebp - 0x44 ] eax
call GetTickCount
mov [ ebp - 0x48 ] eax
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x58 ] 0x5
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x124 ] eax
and [ ebp - 0x120 ] 0x0
fild [ ebp - 0x124 ]
fmul [ r--data ]
fdiv [ r--data ]
fstp [ ebp - 0x64 ]
mov eax [ ebp - 0x54 ]
imul eax eax 0x5
mov [ ebp - 0x128 ] eax
fild [ ebp - 0x128 ]
fdiv [ ebp - 0x64 ]
call sub_44eb70
inc eax
mov [ ebp - 0x4c ] eax
and [ ebp - 0x6c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x54 ] eax
and [ ebp - 0x68 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x6c ]
cmp eax [ ebp - 0x4c ]
jge r-xdata
cmp [ ebp - 0x68 ] 0x1
jge r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0x9d ] 0x0
and [ ebp - 0x98 ] 0x0
and [ ebp - 0xac ] 0x0
mov eax [ ebp - 0xc4 ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0xc4 ]
mov eax [ eax ]
mov [ ebp - 0x9c ] eax
cmp [ ebp - 0x9c ] 0x0
jne r-xdata
and [ ebp - 0x70 ] 0x0
jmp r-xdata
call GetTickCount
mov [ ebp - 0x48 ] eax
jmp r-xdata
push [ ebp - 0x94 ]
call sub_421e20
pop ecx
mov [ ebp - 0x7c ] eax
and [ ebp - 0x78 ] 0x0
and [ ebp - 0x74 ] 0x0
mov eax [ ebp - 0xc4 ]
add eax 0x4
mov [ ebp - 0xc4 ] eax
push [ ebp - 0x9c ]
call sub_421e20
pop ecx
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x70 ] 0x1
jge r-xdata
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x44 ]
cmp eax 0x64
jae r-xdata
and [ ebp - 0x78 ] 0x0
and [ ebp - 0x80 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x98 ]
mov [ rw-data ] eax
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xac ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x11c ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xd0 ] 0x40
and [ ebp - 0xcc ] 0x0
jmp r-xdata
push 0x1e
call [ Sleep@IAT ]
jmp r-xdata
push [ ebp - 0x94 ]
call sub_421e20
pop ecx
mov [ ebp - 0x8c ] eax
and [ ebp - 0x88 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x78 ]
mov ecx [ ebp - 0x7c ]
add ecx [ ebp - 0x78 ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0x78 ]
inc eax
mov [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x94 ]
shr eax 0x1
cmp [ ebp - 0x80 ] eax
jae r-xdata
cmp [ ebp - 0xcc ] 0x2a
jge r-xdata
mov eax [ ebp - 0xc4 ]
add eax [ ebp - 0xac ]
mov al [ eax ]
mov [ ebp - 0xb5 ] al
and [ ebp - 0xb4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xac ]
inc eax
cdq
push 0x7
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ ebp - 0x6c ]
inc eax
mov [ ebp - 0x6c ] eax
and [ ebp - 0x88 ] 0x0
and [ ebp - 0x90 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x68 ]
inc eax
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x7c ]
add eax [ ebp - 0x78 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x78 ]
movzx ecx [ ecx ]
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x74 ]
inc eax
mov [ ebp - 0x74 ] eax
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x28 ] eax
push [ ebp - 0x11c ]
call sub_421e20
pop ecx
mov [ ebp - 0x118 ] eax
and [ ebp - 0xcc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc8 ]
add eax [ ebp - 0xcc ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xcc ]
mov cl [ ecx ]
mov [ eax ] cl
jmp r-xdata
cmp [ ebp - 0xb4 ] 0x10
jge r-xdata
mov eax [ ebp - 0xa8 ]
add eax [ ebp - 0x98 ]
mov ecx [ ebp - 0xc4 ]
add ecx [ ebp - 0xac ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0x98 ]
inc eax
mov [ ebp - 0x98 ] eax
mov eax [ ebp - 0xac ]
inc eax
mov [ ebp - 0xac ] eax
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x8c ]
add ecx [ ebp - 0x88 ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0x88 ]
inc eax
mov [ ebp - 0x88 ] eax
jmp r-xdata
mov eax [ ebp - 0x94 ]
shr eax 0x1
cmp [ ebp - 0x90 ] eax
jae r-xdata
cmp [ ebp - 0x74 ] 0x2710
jge r-xdata
mov eax [ ebp - 0x7c ]
add eax [ ebp - 0x80 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x94 ]
sub ecx [ ebp - 0x80 ]
mov edx [ ebp - 0x40 ]
movzx ecx [ edx + ecx - 0x1 ]
xor eax ecx
mov ecx [ ebp - 0x7c ]
add ecx [ ebp - 0x80 ]
mov [ ecx ] al
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x80 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x94 ]
sub ecx [ ebp - 0x80 ]
mov edx [ ebp - 0x40 ]
movzx ecx [ edx + ecx - 0x1 ]
xor eax ecx
mov ecx [ ebp - 0x7c ]
add ecx [ ebp - 0x80 ]
mov [ ecx ] al
jmp r-xdata
mov eax [ ebp - 0x11c ]
sub eax [ ebp - 0xd0 ]
cmp [ ebp - 0xcc ] eax
jae r-xdata
mov eax [ ebp - 0xcc ]
inc eax
mov [ ebp - 0xcc ] eax
or [ ebp - 0xb0 ] 0xffffffff
mov eax [ ebp - 0xb4 ]
movzx eax [ eax + r--data ]
movzx ecx [ ebp - 0xb5 ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0xac ]
cmp eax [ ebp - 0x9c ]
jae r-xdata
mov eax [ ebp - 0x70 ]
inc eax
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x8c ]
add eax [ ebp - 0x88 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x88 ]
movzx ecx [ ecx ]
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x84 ]
inc eax
mov [ ebp - 0x84 ] eax
jmp r-xdata
cmp [ ebp - 0x84 ] 0x0
jne r-xdata
mov eax [ ebp - 0x80 ]
inc eax
mov [ ebp - 0x80 ] eax
jmp r-xdata
and [ ebp - 0xcc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xcc ]
add ecx [ ebp - 0xd0 ]
mov eax [ ebp - 0xcc ]
cdq
push 0x2a
pop esi
idiv esi
mov esi [ ebp - 0xcc ]
sub esi edx
mov eax [ ebp - 0xcc ]
cdq
push 0x2a
pop edi
idiv edi
mov eax [ ebp - 0xc8 ]
movzx eax [ eax + edx ]
add esi [ ebp - 0xd0 ]
add eax esi
mov edx [ ebp - 0x118 ]
mov esi [ ebp - 0x4 ]
mov cl [ esi + ecx ]
mov [ edx + eax ] cl
jmp r-xdata
movzx eax [ ebp - 0x9d ]
add eax [ ebp - 0xb0 ]
mov [ ebp - 0x9d ] al
mov al [ ebp - 0x9d ]
shl al 0x4
mov [ ebp - 0x9d ] al
mov eax [ ebp - 0xc4 ]
add eax [ ebp - 0xac ]
mov al [ eax ]
mov [ ebp - 0xbd ] al
and [ ebp - 0xbc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov [ ebp - 0xb0 ] eax
jmp r-xdata
cmp [ ebp - 0x84 ] 0x2710
jge r-xdata
mov eax [ ebp - 0x8c ]
add eax [ ebp - 0x90 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x94 ]
sub ecx [ ebp - 0x90 ]
mov edx [ ebp - 0x40 ]
movzx ecx [ edx + ecx - 0x1 ]
xor eax ecx
mov ecx [ ebp - 0x8c ]
add ecx [ ebp - 0x90 ]
mov [ ecx ] al
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x90 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x94 ]
sub ecx [ ebp - 0x90 ]
mov edx [ ebp - 0x40 ]
movzx ecx [ edx + ecx - 0x1 ]
xor eax ecx
mov ecx [ ebp - 0x8c ]
add ecx [ ebp - 0x90 ]
mov [ ecx ] al
jmp r-xdata
mov eax [ ebp - 0xcc ]
cmp eax [ ebp - 0x28 ]
jae r-xdata
mov eax [ ebp - 0xcc ]
inc eax
mov [ ebp - 0xcc ] eax
cmp [ ebp - 0xbc ] 0x10
jge r-xdata
mov eax [ ebp - 0xb4 ]
inc eax
mov [ ebp - 0xb4 ] eax
mov eax [ ebp - 0xac ]
inc eax
mov [ ebp - 0xac ] eax
cmp [ ebp - 0xb0 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x90 ]
inc eax
mov [ ebp - 0x90 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x3c ] 0x4
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
call sub_420100
pop ecx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
lea eax [ ecx + eax + 0x4 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x24 ] eax
push 0x40
push 0x1000
push [ ebp - 0x10 ]
push 0x0
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x34 ] eax
push 0x0
call [ GetModuleHandleW@IAT ]
cdq
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] edx
lea eax [ ebp - 0xc ]
push eax
push 0x40
mov eax [ ebp - 0x24 ]
push [ eax + 0x10 ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x14 ]
call [ VirtualProtect@IAT ]
mov eax [ LoadLibraryA@IAT ]
cdq
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x12c ] eax
mov eax [ ebp - 0x12c ]
mov ecx [ ebp - 0x12c ]
mov eax [ eax + 0x14 ]
or eax [ ecx + 0x18 ]
jne r-xdata
mov eax [ ebp - 0xcc ]
add eax [ ebp - 0xd0 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xcc ]
mov edx [ ebp - 0x118 ]
mov al [ edx + eax ]
mov [ ecx ] al
jmp r-xdata
or [ ebp - 0xb0 ] 0xffffffff
mov eax [ ebp - 0xbc ]
movzx eax [ eax + r--data ]
movzx ecx [ ebp - 0xbd ]
cmp eax ecx
jne r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp - 0x34 ]
call sub_421710
add esp 0xc
call sub_406880
jmp r-xdata
mov eax [ ebp - 0xcc ]
inc eax
mov [ ebp - 0xcc ] eax
movzx eax [ ebp - 0x9d ]
add eax [ ebp - 0xb0 ]
mov [ ebp - 0x9d ] al
mov eax [ ebp - 0xa8 ]
add eax [ ebp - 0x98 ]
mov cl [ ebp - 0x9d ]
mov [ eax ] cl
mov eax [ ebp - 0x98 ]
inc eax
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x9d ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xbc ]
mov [ ebp - 0xb0 ] eax
jmp r-xdata
mov eax [ GetProcAddress@IAT ]
cdq
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] 0xfeebdaed
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] 0xfeebdaed
mov eax [ ebp - 0x34 ]
add eax 0xf
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x38 ]
mov [ eax ] ecx
mov eax [ ebp - 0x24 ]
mov [ eax + 0x18 ] 0xfeebdaed
mov esi [ rw-data ]
mov esp [ rw-data ]
mov eax [ ebp - 0x30 ]
mov ebp [ rw-data ]
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx [ rw-data ]
jmp eax
mov eax [ ebp - 0xbc ]
inc eax
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0xac ]
inc eax
mov [ ebp - 0xac ] eax
cmp [ ebp - 0xb0 ] 0xffffffff
jne r-xdata
sub_4023b6
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
lea eax [ rw-data ]
mov [ eax ] ebp
lea esi [ rw-data ]
mov [ eax ] esi
lea eax [ rw-data ]
mov [ eax ] ecx
lea edi [ rw-data ]
mov [ eax ] edi
push eax
lea eax [ rw-data ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rw-data ]
mov [ eax ] edx
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_40247d
call sub_401baf
mov esi [ LoadStringA@IAT ]
push 0x64
push rw-data
push 0x67
push edi
call esi
push 0x64
push rw-data
push 0x6d
push edi
call esi
push [ ebp + 0x14 ]
mov eax edi
call sub_4024ee
pop ecx
push 0x6d
push edi
call [ LoadAcceleratorsA@IAT ]
mov esi [ GetMessageA@IAT ]
mov ebx eax
xor edi edi
jmp r-xdata
push edi
push edi
push edi
lea eax [ ebp - 0x1c ]
push eax
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp - 0x1c ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
sub_40247d
push ebp
mov ebp esp
sub esp 0x30
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0x0
push esi
mov esi [ LoadIconA@IAT ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_40253f
mov [ ebp - 0x1c ] eax
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x18 ] eax
call [ LoadCursorA@IAT ]
push 0x6c
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rw-data
call esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
call [ RegisterClassExA@IAT ]
pop esi
leave
retn
sub_4024ee
push ebp
mov ebp esp
push esi
push edi
xor esi esi
push esi
push eax
push esi
push esi
push esi
mov [ rw-data ] eax
mov eax 0x80000000
push eax
push esi
push eax
push 0xcf0000
push rw-data
push rw-data
push esi
call [ CreateWindowExA@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
push [ ebp + 0x8 ]
push edi
call [ ShowWindow@IAT ]
push edi
call [ UpdateWindow@IAT ]
xor eax eax
inc eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40253f
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
dec eax
dec eax
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
sub eax 0xd
je r-xdata
lea eax [ ebp - 0x44 ]
push eax
push esi
call [ BeginPaint@IAT ]
lea eax [ ebp - 0x44 ]
push eax
push esi
call [ EndPaint@IAT ]
jmp r-xdata
sub eax 0x102
je r-xdata
xor eax eax
movzx eax [ ebp + 0x10 ]
sub eax 0x68
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
push 0x0
push sub_4025e3
push esi
push 0x67
push [ rw-data ]
call [ DialogBoxParamA@IAT ]
jmp r-xdata
dec eax
je r-xdata
push esi
call [ DefWindowProcA@IAT ]
jmp r-xdata
push esi
call [ DestroyWindow@IAT ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x111
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4216fe
leave
retn 0x10
sub_4025e3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
xor eax eax
inc eax
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
pop ebp
retn 0x10
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
cmp [ ebp + 0x10 ] 0x2
je r-xdata
sub_402620
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4223bd
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_402650
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] r--data
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_422335
mov ecx [ ebp - 0x8 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4026a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402680
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4026f0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov al [ edx ]
mov [ ebp - 0x9 ] al
add [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_4027e0
push ebp
mov ebp esp
push ecx
call sub_402810
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] eax
je r-xdata
call sub_402810
neg eax
sbb eax eax
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_402880
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4223bd
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4028b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4028e0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_402900
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_406bb0
push eax
mov ecx [ ebp - 0x4 ]
call sub_402880
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_402930
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402960
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_402980
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4223bd
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4029b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4029e0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_402a00
push ebp
mov ebp esp
push 0xffffffff
push sub_454954
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x1c ] ecx
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_420df3
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x4
call sub_406c10
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1c ]
add ecx 0xc
call sub_406c10
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x1c ]
add ecx 0x14
call sub_406c10
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x1c ]
add ecx 0x1c
call sub_406c10
mov [ ebp - 0x4 ] 0x4
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_42090e
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ ebp - 0x18 ]
call sub_402980
push r--data
lea eax [ ebp - 0x18 ]
push eax
call sub_425ceb
sub_402ad0
push ebp
mov ebp esp
push 0xffffffff
push sub_454894
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x10 ]
push eax
call sub_42089b
add esp 0x4
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
call sub_406c30
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x14
call sub_406c30
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_406c30
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_406c30
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_420e1b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_402b70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x24 ] ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_421211
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_402bc0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
call sub_4202ec
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_402c20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4224c5
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_402c70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_420df3
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_420e1b
mov edx [ rw-data ]
add edx 0x1
mov [ rw-data ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
sub_402cc0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_420df3
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_420e1b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
add edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
sub_402d00
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_420df3
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
neg eax
sbb eax eax
not eax
and eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x4 ]
call sub_420e1b
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4 ] 0xffffffff
jae r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
sub eax 0x1
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x4 ] eax
sub_402da0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_402dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_402cc0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_402e00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_420a1c
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
call sub_42075d
mov ecx eax
call sub_402cc0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_402e30
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov ecx [ ecx ]
call sub_402d00
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
push 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx ]
call eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub_402ea0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx + 0xc ]
jae r-xdata
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
movzx edx [ ecx + 0x14 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
call sub_42075d
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0xc ]
jae r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub_402f30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402d80
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_402f60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402da0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_403000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402fb0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_403030
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402da0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_403080
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403060
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4030b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
call eax
mov esp ebp
pop ebp
retn 0x4
sub_4030d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_403030
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_403210
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_403110
push ebp
mov ebp esp
push 0xffffffff
push sub_45533b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x3c ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push 0x18
call sub_423fd3
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x44 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_402e80
push eax
lea ecx [ ebp - 0x38 ]
call sub_402a00
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x3c ]
or ecx 0x1
mov [ ebp - 0x3c ] ecx
push 0x0
mov edx [ ebp - 0x40 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4030d0
mov [ ebp - 0x44 ] eax
jmp r-xdata
and [ ebp - 0x3c ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
call sub_402ad0
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx ] edx
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
sub_4031e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_403250
mov ecx [ ebp - 0x4 ]
call sub_403060
mov esp ebp
pop ebp
retn
sub_403210
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402b70
mov ecx [ ebp - 0x14 ]
add ecx 0x8
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov esp ebp
pop ebp
retn 0x4
sub_403250
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
call sub_4229cf
add esp 0x4
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
call sub_421eb4
add esp 0x4
sub_4032a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
movzx ecx [ ebp + 0x8 ]
push ecx
call sub_421104
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_4032d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ecx
call sub_421104
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
sub_403310
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
movzx ecx [ ebp + 0x8 ]
push ecx
call sub_421271
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_403340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ecx
call sub_421271
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
sub_403390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
call sub_421710
add esp 0xc
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn 0xc
sub_4033d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
call sub_421710
add esp 0xc
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn 0x10
sub_403400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4031e0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_403430
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_403480
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402980
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
mov ecx [ ebp + 0xc ]
mov [ edx + 0x10 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4034c0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_4034d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403500
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_403520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ecx ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_403480
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_403550
push ebp
mov ebp esp
sub esp 0x58
mov [ ebp - 0x58 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0x17
mov ecx [ ebp - 0x58 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
mov ecx [ edx + 0xc ]
and ecx [ eax + 0x10 ]
jne r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x58 ]
mov edx [ eax + 0xc ]
and edx [ ecx + 0x10 ]
and edx 0x4
je r-xdata
push 0x0
push 0x0
call sub_425ceb
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
mov ecx [ edx + 0xc ]
and ecx [ eax + 0x10 ]
and ecx 0x2
je r-xdata
push 0x1
lea eax [ ebp - 0x1c ]
push eax
call sub_403460
add esp 0x8
push eax
push r--data
lea ecx [ ebp - 0x14 ]
call sub_403520
push r--data
lea ecx [ ebp - 0x14 ]
push ecx
call sub_425ceb
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x54 ]
push ecx
call sub_403460
add esp 0x8
push eax
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403520
push r--data
lea edx [ ebp - 0x4c ]
push edx
call sub_425ceb
push 0x1
lea edx [ ebp - 0x38 ]
push edx
call sub_403460
add esp 0x8
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403520
push r--data
lea eax [ ebp - 0x30 ]
push eax
call sub_425ceb
jmp r-xdata
sub_4036a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403660
and eax 0x6
neg eax
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn
sub_403720
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x8 ] ecx
mov edx [ eax + 0x24 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_403760
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402dd0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_403780
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4205e0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_4037c0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x30 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x14 ] 0x201
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] 0x6
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x20 ] 0x0
mov [ edx + 0x24 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x28 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x2c ] 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_403640
push 0x4
call sub_423fd3
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_402e00
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x30 ] eax
mov esp ebp
pop ebp
retn
sub_403870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4038a0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4038c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4038f0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4038f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402c20
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov ecx [ edx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov [ edx + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_403930
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403780
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_403980
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
call sub_42311e
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov al 0x1
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4039b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
movsx ecx [ ebp + 0x8 ]
push ecx
call sub_42212c
add esp 0x8
xor edx edx
cmp eax 0xffffffff
setne dl
mov al dl
pop ebp
retn
sub_4039d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
push edx
call sub_422ca1
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov al cl
pop ebp
retn
sub_403a10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_407540
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403a90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403a70
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_403ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_454840
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x10 ]
call sub_407540
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
add ecx 0x4
call sub_4075a0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
call sub_407580
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_407560
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
mov eax [ edx + 0x14 ]
call eax
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_407580
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_407560
sub_403ba0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403bf0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
push 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax ]
call edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_403c30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
dec ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
call edx
mov ecx [ ebp - 0x4 ]
call sub_403c60
sub_403c60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
or ecx 0xffffffff
[ eax ] ecx
dec ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
call edx
sub_403c90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403bd0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_403ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
call sub_403c30
sub_403d00
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0x4
sub_403d60
push ebp
mov ebp esp
push 0xffffffff
push sub_455308
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x30 ] ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_406a90
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x30 ]
call sub_402900
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_406b10
mov edx [ ebp - 0x30 ]
mov [ edx ] r--data
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_403df0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402900
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_403e20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403e50
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_403eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_4552d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x30 ] ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_406a90
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x30 ]
call sub_402900
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_406b10
mov edx [ ebp - 0x30 ]
mov [ edx ] r--data
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_403f40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403f70
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_403fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_4552a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x30 ] ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_406a90
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x30 ]
call sub_402900
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_406b10
mov edx [ ebp - 0x30 ]
mov [ edx ] r--data
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_404060
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404090
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4040f0
push ebp
mov ebp esp
push 0xffffffff
push sub_455af0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x3c ] ecx
movzx eax [ ebp + 0x10 ]
push eax
movzx ecx [ ebp + 0xc ]
push ecx
movzx edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x3c ]
call sub_407700
movzx eax [ ebp + 0xc ]
push eax
movzx ecx [ ebp + 0x8 ]
push ecx
call sub_410040
add esp 0x8
movzx esi ax
lea ecx [ ebp + 0x10 ]
call sub_403e90
movzx edx ax
cmp esi edx
jge r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0xc
push r--data
lea ecx [ ebp - 0x2c ]
call sub_406a90
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x44 ]
push ecx
lea ecx [ ebp - 0x38 ]
call sub_403df0
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4c ]
push eax
call sub_4100c0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_403e50
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_406b10
sub_4041d0
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
call sub_407660
add esp 0x8
mov edx [ eax ]
push edx
mov ecx [ ebp - 0x28 ]
call sub_407740
cmp [ ebp + 0x8 ] 0x3
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
push ecx
mov ecx esp
push 0x1
call sub_403e70
push ecx
mov ecx esp
push 0x1
call sub_4040b0
push ecx
mov ecx esp
push 0x578
call sub_403f90
lea ecx [ ebp - 0x8 ]
call sub_4040f0
mov eax [ eax ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
mov eax [ ebp - 0x28 ]
mov esp ebp
pop ebp
retn 0x4
push ecx
mov ecx esp
push 0x1f
call sub_403e70
push ecx
mov ecx esp
push 0xc
call sub_4040b0
push ecx
mov ecx esp
push 0x270f
call sub_403f90
lea ecx [ ebp - 0x18 ]
call sub_4040f0
mov edx [ eax ]
mov eax [ ebp - 0x28 ]
mov [ eax ] edx
sub_4042a0
push ebp
mov ebp esp
push 0xffffffff
push sub_455278
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_404280
add esp 0x4
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x18 ]
call sub_402980
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x20 ]
push edx
call sub_410150
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_4029e0
sub_404330
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_407760
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x14
sub_404380
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_407870
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_4043a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_407890
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_4043f0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_404360
push eax
push 0x0
lea ecx [ ebp - 0xc ]
call sub_4041d0
push eax
mov ecx [ ebp - 0x10 ]
call sub_407890
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_404490
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
call sub_4078e0
movzx eax al
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
call sub_404450
add esp 0x4
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_407930
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_407900
mov ecx eax
call sub_4077f0
add eax 0x1
adc edx 0x0
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_404500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_404540
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_404530
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ edx ]
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_404590
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402980
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
mov ecx [ ebp + 0xc ]
mov [ edx + 0x10 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x14
call sub_406a60
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_4045d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x14
call sub_406b10
mov ecx [ ebp - 0x4 ]
call sub_4029e0
mov esp ebp
pop ebp
retn
sub_404600
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4045d0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_404630
push ebp
mov ebp esp
push 0xffffffff
push sub_455248
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x38 ]
add ecx 0x14
call sub_406bf0
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
call sub_422352
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
push ecx
mov ecx [ ebp - 0x38 ]
add ecx 0x14
call sub_406b30
mov ecx [ ebp - 0x38 ]
add ecx 0x14
call sub_406bf0
movzx edx al
test edx edx
jne r-xdata
mov ecx [ ebp - 0x38 ]
add ecx 0x14
call sub_406bb0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x38 ]
add ecx 0xc
call sub_404540
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x44 ]
push edx
mov ecx [ ebp - 0x38 ]
add ecx 0x14
call sub_406b50
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_406b10
jmp r-xdata
push r--data
mov ecx [ ebp - 0x38 ]
add ecx 0x14
call sub_406b70
sub_404750
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_44d750
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x8 ]
call sub_404500
mov edx [ eax + 0x4 ]
push edx
mov eax [ eax ]
push eax
mov ecx [ ebp - 0xc ]
call sub_404590
mov ecx [ ebp - 0xc ]
mov [ ecx ] r--data
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
sub_4047b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404790
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4047e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_404750
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_404810
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404750
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_404860
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404840
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_404890
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
push 0xb
mov ecx [ ebp - 0x4 ]
call sub_404750
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4048c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404750
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_404910
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4048f0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_404940
push ebp
mov ebp esp
push 0xffffffff
push sub_455d08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
call [ CreateEventA@IAT ]
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x40 ]
call sub_404890
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4c ]
push eax
call sub_410210
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4048f0
sub_4049d0
push ebp
mov ebp esp
push 0xffffffff
push sub_455cd8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
call [ CreateSemaphoreA@IAT ]
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x40 ]
call sub_404890
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4c ]
push eax
call sub_410210
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4048f0
sub_404a60
push ebp
mov ebp esp
push ecx
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
call [ CreateSemaphoreA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_404a80
push ebp
mov ebp esp
push 0xffffffff
push sub_455ca8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
call [ GetCurrentProcess@IAT ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] 0x2
mov [ ebp - 0x44 ] 0x0
push 0x2
push 0x0
push 0x0
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x50 ]
push eax
call [ DuplicateHandle@IAT ]
test eax eax
setne cl
mov [ ebp - 0x45 ] cl
movzx edx [ ebp - 0x45 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x40 ]
call sub_404890
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x58 ]
push ecx
call sub_410210
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4048f0
sub_404b40
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ ReleaseSemaphore@IAT ]
test eax eax
jne r-xdata
pop ebp
retn
push 0x105
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_404b70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
push 0x113
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_404be0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404b70
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404c90
push ebp
mov ebp esp
push 0xffffffff
push sub_455218
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x1c ]
call sub_402650
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x24 ]
push edx
call sub_4102c0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_402680
sub_404d20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
pop ebp
retn
push 0x49
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_404d70
push ebp
mov ebp esp
push 0xffffffff
push sub_455d9c
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] 0x0
push 0xffffffff
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_404bc0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0xc ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_407970
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x20 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x24
call sub_407a00
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x34
call sub_407a50
mov [ ebp - 0x4 ] 0x3
push 0x0
push 0x1
call sub_404940
add esp 0x8
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_404bc0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x48 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_404e60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
dec ecx
jne r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_410350
add esp 0x4
sub_404e90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44c530
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_404f00
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_404f20
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_404f20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0xffffffff
mov [ ecx + 0xc ] 0xffffffff
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x18
call sub_4043f0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404fb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1f
mov eax [ ebp - 0x4 ]
push eax
call sub_404c70
add esp 0x8
movzx eax al
neg eax
sbb eax eax
add eax 0x1
mov esp ebp
pop ebp
retn
sub_404fe0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_404fb0
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_405090
mov ecx [ ebp - 0x4 ]
and ecx 0x80000000
je r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x5 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_405210
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_405120
mov edx [ ebp - 0x4 ]
and edx 0x80000000
neg edx
sbb edx edx
add edx 0x1
mov [ ebp - 0x5 ] dl
movzx eax [ ebp - 0x5 ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x80
je r-xdata
push 0xffffffff
mov edx [ ebp - 0xc ]
push edx
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x55
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_405090
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
or ecx 0x80000000
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
jmp r-xdata
movzx edx [ ebp - 0x5 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
[ edx ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0x80000000
setne dl
mov [ ebp - 0x5 ] dl
movzx eax [ ebp - 0x5 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_405120
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0x7fffffff
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
or ecx 0x40000000
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
sub edx 0x1
or edx 0x80000000
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xbfffffff
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ ecx ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0x80000000
je r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_4051b0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x80000000
mov eax 0x80000000
mov ecx [ ebp - 0xc ]
[ ecx ] eax
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
and edx 0x40000000
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x80000000
jle r-xdata
push 0x1e
mov eax [ ebp - 0xc ]
push eax
call sub_404c70
add esp 0x8
movzx ecx al
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
call sub_405210
push eax
call [ SetEvent@IAT ]
sub_405210
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
add eax 0x4
push eax
call sub_404f80
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push 0x0
push 0x0
call sub_404940
add esp 0x8
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add edx 0x4
xor eax eax
[ edx ] ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
call [ CloseHandle@IAT ]
mov eax [ ebp - 0xc ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_405290
push ebp
mov ebp esp
push 0xffffffff
push sub_455c78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x44 ]
call sub_44bb80
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x40 ]
call sub_404890
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x4c ]
push edx
call sub_410210
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4048f0
sub_405320
push ebp
mov ebp esp
push 0xffffffff
push sub_454ce8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_449da0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_407b20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_405380
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
sete al
mov esp ebp
pop ebp
retn 0x4
sub_4053a0
push ebp
mov ebp esp
push 0xffffffff
push sub_455c48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4c ] ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x4c ]
call sub_449cf0
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_447ce0
add esp 0x4
mov ecx eax
call sub_405380
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x4c ]
call sub_44cd80
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
push r--data
push 0x24
lea ecx [ ebp - 0x40 ]
call sub_4048c0
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x54 ]
push ecx
call sub_410210
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4048f0
sub_405450
push ebp
mov ebp esp
push 0xffffffff
push sub_455f78
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
push 0x7fffffff
push 0x0
call sub_4049d0
add esp 0x8
push eax
mov ecx [ ebp - 0x10 ]
call sub_404bc0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_404c10
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_404bc0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_405520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404c00
push eax
call [ ReleaseSemaphore@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_405550
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call sub_404f60
add esp 0x4
push eax
mov ecx [ ebp - 0x4 ]
call sub_405520
mov esp ebp
pop ebp
retn
sub_4055a0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
sub esp 0x20
mov ecx 0x8
lea esi [ ebp + 0x8 ]
mov edi esp
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
call sub_404c00
push eax
call sub_44c940
add esp 0x24
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x20
sub_4055e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x4
call sub_404c00
push eax
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x102
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x0
sete al
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x64
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_405650
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
add eax 0x10
or ecx 0xffffffff
[ eax ] ecx
dec ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_4056a0
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_4056a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4056d0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4056f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
sub ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
call sub_404fa0
add esp 0x8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
call sub_404c00
push eax
call [ ReleaseSemaphore@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_405730
push ebp
mov ebp esp
push 0xffffffff
push sub_455fd4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_407f00
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x24 ]
add ecx 0x20
call sub_404c30
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
add edx 0x1
push edx
mov eax [ ebp - 0x24 ]
add eax 0x8
push eax
call sub_404fa0
add esp 0x8
mov ecx [ ebp - 0x24 ]
add ecx 0x10
call sub_407cc0
movzx ecx al
test ecx ecx
jne r-xdata
push 0x7fffffff
push 0x0
call sub_4049d0
add esp 0x8
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x20
call sub_404be0
mov ecx [ ebp - 0x24 ]
add ecx 0x20
call sub_404c30
movzx edx al
test edx edx
je r-xdata
push 0x14
call sub_423fd3
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x10
call sub_407ce0
mov ecx eax
call sub_407c30
mov ecx eax
call sub_405580
movzx edx al
test edx edx
je r-xdata
push 0xae
push r--data
push r--data
call sub_42338b
add esp 0xc
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x24 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x1c ]
call sub_405450
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x10
call sub_407ce0
mov ecx eax
call sub_407c30
mov ecx eax
call sub_4054e0
mov ecx [ ebp - 0x24 ]
add ecx 0x10
call sub_407ce0
push eax
mov ecx [ ebp + 0x8 ]
call sub_407b90
mov eax [ ebp - 0x20 ]
or eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_407f30
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x1
push 0x1
mov edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_407b50
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x10
call sub_407d10
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_407bf0
mov edx [ ebp - 0x20 ]
or edx 0x1
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_407bc0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_407f30
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_405930
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_407c30
mov ecx eax
call sub_405500
mov ecx [ ebp - 0x4 ]
call sub_407bc0
mov esp ebp
pop ebp
retn
sub_405980
push ebp
mov ebp esp
push 0xffffffff
push sub_455f48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
add eax 0x8
push eax
call sub_404f60
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_407f00
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x1c ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4056f0
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x10
call sub_407c60
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x10
call sub_407c90
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_407f30
jmp r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x14 ]
call sub_407f90
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x10
call sub_407eb0
push 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x20
call sub_404be0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_407f30
lea ecx [ ebp - 0x14 ]
call sub_407f50
mov ecx eax
call sub_407c30
mov ecx eax
call sub_405550
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_407f70
sub_405a90
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
mov [ ebp - 0x24 ] ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_404f00
add esp 0xffffffe4
mov ecx 0x8
mov esi eax
mov edi esp
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_410370
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_405af0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
shr eax 0x18
and eax 0x7f
je r-xdata
mov ecx [ ebp + 0x8 ]
shr ecx 0xb
and ecx 0x7ff
jne r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ ReleaseSemaphore@IAT ]
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
shr eax 0xb
and eax 0x7ff
mov ecx [ ebp + 0x8 ]
shr ecx 0x18
and ecx 0x7f
neg ecx
sbb ecx ecx
neg ecx
add eax ecx
push eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ ReleaseSemaphore@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
shr edx 0x18
and edx 0x7f
je r-xdata
push 0x46
push r--data
push r--data
call sub_42338b
add esp 0xc
mov esp ebp
pop ebp
retn 0x4
push 0x4b
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_405b90
push ebp
mov ebp esp
push 0xffffffff
push sub_455d40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x78 ] ecx
push 0x7fffffff
push 0x0
call sub_4049d0
add esp 0x8
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x4 ] eax
push 0x7fffffff
push 0x0
call sub_404a60
add esp 0x8
mov edx [ ebp - 0x78 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x78 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x7fffffff
push 0x0
call sub_404a60
add esp 0x8
mov edx [ ebp - 0x78 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x78 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
push 0x7fffffff
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_404b40
add esp 0x8
lea ecx [ ebp - 0x40 ]
call sub_404890
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x80 ]
push ecx
call sub_410210
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4048f0
mov [ ebp - 0x74 ] 0x0
mov ecx [ ebp - 0x78 ]
mov edx [ ebp - 0x74 ]
mov [ ecx ] edx
mov eax [ ebp - 0x78 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
push 0x7fffffff
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_404b40
add esp 0x8
push 0x7fffffff
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_404b40
add esp 0x8
lea ecx [ ebp - 0x70 ]
call sub_404890
mov [ ebp - 0x84 ] eax
mov edx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x88 ]
push eax
call sub_410210
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_4048f0
sub_405ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ CloseHandle@IAT ]
mov esp ebp
pop ebp
retn
sub_405d20
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_404470
add esp 0x4
push eax
mov ecx [ ebp - 0xc ]
call sub_405d60
movzx ecx al
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x89
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_405d60
push ebp
mov ebp esp
push 0xffffffff
push sub_455f10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x8c ] ecx
mov edx [ ebp - 0x7c ]
shr edx 0xb
and edx 0x7ff
add edx 0x1
and edx 0x7ff
shl edx 0xb
mov eax [ ebp - 0x7c ]
and eax 0xffc007ff
or eax edx
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x7c ]
shr ecx 0xb
and ecx 0x7ff
jne r-xdata
mov ecx [ ebp - 0x7c ]
shr ecx 0x1f
and ecx 0x1
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x40 ]
call sub_4047e0
mov [ ebp - 0x90 ] eax
mov edx [ ebp - 0x90 ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x94 ]
push eax
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_404840
mov ecx [ ebp - 0x7c ]
and ecx 0x7ff
add ecx 0x1
and ecx 0x7ff
mov edx [ ebp - 0x7c ]
and edx 0xfffff800
or edx ecx
mov [ ebp - 0x7c ] edx
mov eax [ ebp - 0x7c ]
and eax 0x7ff
jne r-xdata
mov eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x7c ]
push ecx
mov edx [ ebp - 0x8c ]
push edx
lea eax [ ebp - 0x80 ]
push eax
mov ecx [ ebp - 0x8c ]
call sub_410480
lea ecx [ ebp - 0x78 ]
push ecx
lea edx [ ebp - 0x80 ]
push edx
call sub_405ad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
lea ecx [ ebp - 0x70 ]
call sub_4047e0
mov [ ebp - 0x98 ] eax
mov ecx [ ebp - 0x98 ]
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x9c ]
push edx
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_404840
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x78 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x7c ] edx
mov eax [ ebp - 0x7c ]
shr eax 0x16
and eax 0x1
jne r-xdata
mov edx [ ebp - 0x78 ]
shr edx 0x16
and edx 0x1
mov eax [ ebp - 0x78 ]
shr eax 0x1f
and eax 0x1
or edx eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404490
add esp 0x4
push eax
mov edx [ ebp - 0x8c ]
mov eax [ edx + 0x4 ]
push eax
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x102
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x84 ]
shr edx 0x16
and edx 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
push 0xe0
push r--data
push r--data
call sub_42338b
add esp 0xc
mov ecx [ ebp - 0x84 ]
shr ecx 0xb
and ecx 0x7ff
je r-xdata
mov eax [ ebp - 0x84 ]
shr eax 0x1f
and eax 0x1
je r-xdata
mov eax [ ebp - 0x8c ]
mov ecx [ eax ]
mov [ ebp - 0x78 ] ecx
jmp r-xdata
mov edx [ ebp - 0x84 ]
shr edx 0xb
and edx 0x7ff
sub edx 0x1
and edx 0x7ff
shl edx 0xb
mov eax [ ebp - 0x84 ]
and eax 0xffc007ff
or eax edx
mov [ ebp - 0x84 ] eax
mov ecx [ ebp - 0x84 ]
and ecx 0x7ff
add ecx 0x1
and ecx 0x7ff
mov edx [ ebp - 0x84 ]
and edx 0xfffff800
or edx ecx
mov [ ebp - 0x84 ] edx
mov eax [ ebp - 0x84 ]
and eax 0x7ff
jne r-xdata
mov ecx [ ebp - 0x78 ]
push ecx
mov edx [ ebp - 0x84 ]
push edx
mov eax [ ebp - 0x8c ]
push eax
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x8c ]
call sub_410480
lea edx [ ebp - 0x78 ]
push edx
lea eax [ ebp - 0x88 ]
push eax
call sub_405ad0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x78 ]
shr eax 0x16
and eax 0x1
mov ecx [ ebp - 0x78 ]
shr ecx 0x1f
and ecx 0x1
or eax ecx
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_406070
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_410480
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
call sub_405ad0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0xc ]
shr edx 0x17
and edx 0x1
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
movzx edx [ ebp - 0x5 ]
test edx edx
je r-xdata
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0x7f
je r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff7fffff
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
or ecx __dos_header
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
and eax 0x7ff
sub eax 0x1
and eax 0x7ff
mov ecx [ ebp - 0xc ]
and ecx 0xfffff800
or ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
and edx 0x7ff
sete al
mov [ ebp - 0x5 ] al
movzx ecx [ ebp - 0x5 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0x17
and eax 0x1
je r-xdata
mov eax [ ebp - 0xc ]
and eax 0xffc007ff
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0x7f
sub eax 0x1
and eax 0x7f
shl eax 0x18
mov ecx [ ebp - 0xc ]
and ecx 0x80ffffff
or ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
and edx 0x7fffffff
mov [ ebp - 0xc ] edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_405af0
push 0x0
push 0x1
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xc ]
push edx
call [ ReleaseSemaphore@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
push 0x173
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_4061b0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_404470
add esp 0x4
push eax
mov ecx [ ebp - 0xc ]
call sub_4061f0
movzx ecx al
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x183
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_4061f0
push ebp
mov ebp esp
push 0xffffffff
push sub_455ed8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x64 ] ecx
mov edx [ ebp - 0x50 ]
shr edx 0x18
and edx 0x7f
add edx 0x1
and edx 0x7f
shl edx 0x18
mov eax [ ebp - 0x50 ]
and eax 0x80ffffff
or eax edx
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
shr ecx 0x18
and ecx 0x7f
jne r-xdata
mov ecx [ ebp - 0x50 ]
shr ecx 0x16
and ecx 0x1
je r-xdata
mov ecx [ ebp - 0x50 ]
or ecx 0x80000000
mov [ ebp - 0x50 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x40 ]
call sub_4047e0
mov [ ebp - 0x68 ] eax
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x6c ]
push eax
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_404840
mov edx [ ebp - 0x50 ]
or edx __dos_header
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp - 0x64 ]
call sub_410480
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
call sub_405ad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x4c ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0x50 ]
and eax 0x7ff
jne r-xdata
mov edx [ ebp - 0x4c ]
and edx 0x7ff
jne r-xdata
mov [ ebp - 0x41 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404490
add esp 0x4
push eax
push 0x1
mov edx [ ebp - 0x64 ]
add edx 0x4
push edx
push 0x2
call [ WaitForMultipleObjects@IAT ]
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x48 ] 0x102
jne r-xdata
mov eax [ ebp - 0x4c ]
shr eax 0x16
and eax 0x1
jne r-xdata
cmp [ ebp - 0x48 ] 0x2
jb r-xdata
mov [ ebp - 0x55 ] 0x0
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x5c ]
and ecx 0x7ff
jne r-xdata
mov al 0x1
jmp r-xdata
jmp r-xdata
push 0x1fe
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ ebp - 0x5c ]
shr eax 0x18
and eax 0x7f
je r-xdata
mov edx [ ebp - 0x5c ]
shr edx 0x16
and edx 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x64 ]
mov ecx [ eax ]
mov [ ebp - 0x4c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x5c ]
shr ecx 0x18
and ecx 0x7f
sub ecx 0x1
and ecx 0x7f
shl ecx 0x18
mov edx [ ebp - 0x5c ]
and edx 0x80ffffff
or edx ecx
mov [ ebp - 0x5c ] edx
mov eax [ ebp - 0x5c ]
shr eax 0x18
and eax 0x7f
jne r-xdata
mov edx [ ebp - 0x5c ]
or edx __dos_header
mov [ ebp - 0x5c ] edx
mov eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x5c ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x64 ]
call sub_410480
movzx ecx [ ebp - 0x55 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x5c ]
and ecx 0x7fffffff
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x55 ] 0x1
lea edx [ ebp - 0x4c ]
push edx
lea eax [ ebp - 0x60 ]
push eax
call sub_405ad0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
push 0x1
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x4 ]
push eax
call [ ReleaseSemaphore@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
jmp r-xdata
push 0x1ef
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ ebp - 0x4c ]
and eax 0x7ff
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4c ]
shr ecx 0x16
and ecx 0x1
jne r-xdata
mov al 0x1
jmp r-xdata
sub_406480
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
and edx 0xffc007ff
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_410480
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
call sub_405ad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0x7f
sub edx 0x1
and edx 0x7f
shl edx 0x18
mov eax [ ebp - 0x8 ]
and eax 0x80ffffff
or eax edx
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
and ecx 0x7fffffff
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
and eax 0xffbfffff
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0x7f
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_405af0
mov esp ebp
pop ebp
retn
sub_406530
push ebp
mov ebp esp
push 0xffffffff
push sub_455ea8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_407fc0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_405b90
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_406590
push ebp
mov ebp esp
push 0xffffffff
push sub_4551f3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_408010
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_408040
jmp r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_4080b0
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0xc
call sub_405ce0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
call sub_407ff0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
call sub_408070
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_406720
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_408090
jmp r-xdata
sub_406660
push ebp
mov ebp esp
push 0xffffffff
push sub_456068
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x20 ]
add eax 0xc
push eax
lea ecx [ ebp - 0x14 ]
call sub_4080e0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_408010
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_408040
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4080b0
movzx ecx al
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_408110
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
call sub_408070
mov ecx [ eax ]
call sub_449d50
movzx edx al
test edx edx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_408070
mov ecx [ eax ]
call sub_4053a0
lea ecx [ ebp - 0x18 ]
call sub_408090
sub_406720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405320
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_406750
push ebp
mov ebp esp
push 0xffffffff
push sub_4560d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_408190
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x30 ]
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
mov [ edx + 0x30 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x34 ]
add edx 0x1
mov eax [ ebp - 0x20 ]
mov [ eax + 0x34 ] edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x2c ]
mov [ ecx + 0x30 ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x8
call sub_405980
mov [ ebp - 0x19 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4081c0
mov al [ ebp - 0x19 ]
jmp r-xdata
mov [ ebp - 0x1a ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4081c0
mov al [ ebp - 0x1a ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0x8
call sub_405a90
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_406830
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
call sub_406750
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2710
jae r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
push r--data
push rw-data
call sub_40fc40
add esp 0x8
mov ecx eax
call sub_406cc0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_406880
push ebp
mov ebp esp
push 0xffffffff
push sub_45611b
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x70
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
push 0xa8
call sub_423fd3
add esp 0x4
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov [ ebp - 0x78 ] 0x0
push 0x1
push 0x40
push 0x2
push r--data
mov ecx [ ebp - 0x4c ]
call sub_4081f0
mov [ ebp - 0x74 ] eax
mov ecx [ ebp - 0x74 ]
mov [ ebp - 0x78 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_406530
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x40 ] 0x0
jmp r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_402980
push r--data
lea ecx [ ebp - 0x5c ]
push ecx
call sub_425ceb
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_410560
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x3c ]
call sub_408f10
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x50 ]
add ecx [ edx + 0x4 ]
call sub_403680
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp - 0x40 ] 0x2
jae r-xdata
lea ecx [ ebp - 0x34 ]
call sub_406660
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x34 ]
call sub_406590
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
call sub_406a40
mov eax [ ebp - 0x68 ]
jmp r-xdata
push 0x0
push sub_406830
lea eax [ ebp - 0x64 ]
push eax
call sub_4105e0
add esp 0xc
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
lea ecx [ ebp - 0x34 ]
call sub_410610
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x40 ]
add edx 0x1
mov [ ebp - 0x40 ] edx
sub_4069d0
push sub_403960
mov eax [ ebp - 0x44 ]
mov edx [ eax ]
mov ecx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
call eax
push eax
push r--data
push rw-data
call sub_40fc40
add esp 0x8
push eax
call sub_40fc40
add esp 0x8
mov ecx eax
call sub_406ca0
mov [ ebp - 0x6c ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_406a60
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
mov [ ebp - 0x4 ] esp
call sub_409530
mov ecx [ ebp - 0x8 ]
call sub_409500
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_409420
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_406a90
push ebp
mov ebp esp
push 0xffffffff
push sub_4551b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
push ecx
mov ecx esp
mov [ ebp - 0x10 ] esp
call sub_409530
mov ecx [ ebp - 0x14 ]
call sub_409500
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_409420
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_409310
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_406b10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_409420
mov ecx [ ebp - 0x4 ]
call sub_409520
mov esp ebp
pop ebp
retn
sub_406c50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_406cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_455ac0
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x3c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_40aee0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_40b000
cmp eax 0xffffffff
je r-xdata
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x3c ]
add ecx [ edx + 0x4 ]
call sub_407000
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_40af90
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x3c ]
mov eax [ edx ]
mov ecx [ ebp - 0x3c ]
add ecx [ eax + 0x4 ]
call sub_403760
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x44 ]
push edx
call sub_4106f0
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_402e30
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
mov edx [ ebp - 0x3c ]
add edx [ ecx + 0x4 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
or edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x3c ]
add ecx [ edx + 0x4 ]
call sub_409660
movzx eax al
push eax
mov ecx [ ebp - 0x48 ]
push ecx
mov edx [ ebp - 0x3c ]
mov eax [ edx ]
mov ecx [ ebp - 0x3c ]
add ecx [ eax + 0x4 ]
call sub_407030
push eax
lea ecx [ ebp - 0x2c ]
call sub_40bab0
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_40b040
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x4c ]
call sub_40bad0
movzx ecx al
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
sub_406e50
push ebp
mov ebp esp
push 0xffffffff
push sub_455a88
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_40aee0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_40b000
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0x1
movzx edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov edx [ ebp - 0x2c ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_407030
mov ecx eax
call sub_4096c0
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
call sub_402810
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x4
mov [ ebp - 0x14 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x4
mov [ ebp - 0x14 ] ecx
push 0x0
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx ]
mov ecx [ ebp - 0x2c ]
add ecx [ eax + 0x4 ]
call sub_407000
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_40af90
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x0
sub_406f70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_4036a0
movzx eax al
test eax eax
jne r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x4 ]
call sub_407000
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
add ecx [ edx + 0x4 ]
call sub_407030
mov ecx eax
call sub_4096a0
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x4
mov [ ebp - 0x4 ] eax
sub_407000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_403660
or eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_409620
sub_407050
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov [ eax ] r--data
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_408fe0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x4
call sub_420ecc
mov esp ebp
pop ebp
retn
sub_407140
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov ecx [ ebp - 0xc ]
mov eax [ edx + 0x18 ]
call eax
mov [ ebp - 0x4 ] eax
call sub_402810
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_409850
push eax
call sub_4027b0
add esp 0x4
mov [ ebp - 0x10 ] eax
call sub_402810
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_4071a0
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ ebp - 0x1c ]
call sub_4098a0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
mov ecx [ ebp - 0x1c ]
mov eax [ edx + 0x1c ]
call eax
mov [ ebp - 0x14 ] eax
call sub_402810
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
jg r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
call sub_4027a0
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
adc edx 0x0
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ecx [ ebp + 0x10 ]
sbb ecx 0x0
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_409750
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_402730
add esp 0xc
mov eax [ ebp - 0x10 ]
add eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
adc edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
sbb ecx [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_4097b0
jmp r-xdata
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
sub_4072e0
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ ebp - 0x1c ]
call sub_409960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4027b0
add esp 0x4
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x1c ]
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0x14 ] eax
call sub_402810
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
adc eax 0x0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov edx [ ebp + 0x10 ]
sbb edx 0x0
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_409770
push eax
call sub_402730
add esp 0xc
mov eax [ ebp - 0x10 ]
add eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
adc edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
sbb ecx [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
sub_407420
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
mov ecx [ r--data ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40bae0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x14
sub_407450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
mov ecx [ r--data ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40bae0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x20
sub_407580
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_409990
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4075d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_409ac0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] ax
movzx edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_409ad0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_407600
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_409b40
mov ecx [ ebp - 0x4 ]
mov [ ecx ] ax
movzx edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_409b50
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_407630
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_409bc0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] ax
movzx edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_409bd0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_407660
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x4
ja r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409ca0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
jmp [ ecx * 4 + jump_table_4076e4 ]
mov edx [ ebp + 0x8 ]
push edx
call sub_409ca0
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_409c80
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409c60
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_409cc0
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_409ce0
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_407700
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
movzx eax [ ebp + 0x10 ]
push eax
movzx ecx [ ebp + 0xc ]
push ecx
movzx edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x6 ]
call sub_40ff40
push eax
call sub_40ff70
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0xc
sub_407760
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409d80
add esp 0x14
push edx
push eax
mov ecx [ ebp - 0x4 ]
call sub_409a00
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x14
sub_4077a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4077c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_409a20
add esp 0x8
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4077f0
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov [ ebp - 0x4 ] ecx
call sub_4077e0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov ecx [ ebp - 0x4 ]
call sub_409d50
mov esi eax
mov edi edx
call sub_4077e0
push 0x0
push 0x3e8
push edx
push eax
call sub_42b430
push edx
push eax
push edi
push esi
call sub_42b430
jl r-xdata
mov ecx [ ebp - 0x4 ]
call sub_409d50
mov esi eax
mov edi edx
call sub_4077e0
push edx
push eax
push 0x0
push 0x3e8
call sub_42b430
push edx
push eax
push edi
push esi
call sub_42b3f0
jmp r-xdata
cmp [ ebp - 0xc ] 0x3e8
jae r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_407870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_407890
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_409eb0
add esp 0x10
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_4078c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_409ee0
add esp 0x8
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_407900
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a030
add esp 0xc
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_407970
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_40a2c0
push eax
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40a220
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4079a0
push ebp
mov ebp esp
push 0xffffffff
push sub_455188
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_40a250
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_40a2a0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_407a00
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
mov [ ebp - 0x4 ] esp
call sub_40a390
mov ecx [ ebp - 0x8 ]
call sub_40a340
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_407a50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
mov [ ebp - 0x4 ] esp
call sub_40a460
mov ecx [ ebp - 0x8 ]
call sub_40a410
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_407a80
push ebp
mov ebp esp
push 0xffffffff
push sub_455158
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_40a3a0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_40a450
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_407ae0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_404e40
add esp 0x4
sub_407b20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_404e60
add esp 0x4
sub_407b50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_405630
add esp 0x4
sub_407b90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_405630
add esp 0x4
sub_407bc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_405650
add esp 0x4
sub_407bf0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_407c30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov esp ebp
pop ebp
retn
push 0xa2
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_407c60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40a580
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_407c90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40a580
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_407cc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax ]
xor eax eax
cmp edx [ ecx + 0x4 ]
sete al
mov esp ebp
pop ebp
retn
sub_407ce0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_407c90
mov ecx eax
call sub_40a5a0
mov ecx eax
call sub_407f50
mov esp ebp
pop ebp
retn
sub_407d10
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4107e0
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
call sub_40a4c0
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4107e0
add esp 0x4
mov ecx [ ebp - 0x8 ]
sub eax [ ecx ]
sar eax 0x2
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40a570
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
add edx 0xc
push edx
call sub_410810
add esp 0xc
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx 0x4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40a500
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40a570
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0xc
push eax
call sub_4107f0
add esp 0xc
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40a500
mov esp ebp
pop ebp
retn 0x4
sub_407e10
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40a470
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40a470
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
call sub_407f90
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_40a470
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_410830
add esp 0xc
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40a490
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] edx
sub_407eb0
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_407c90
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_407c60
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_407e10
mov esp ebp
pop ebp
retn
sub_407f00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
call sub_404fe0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_407f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40a600
movzx eax al
neg eax
sbb eax eax
add eax 0x1
mov esp ebp
pop ebp
retn 0x4
sub_407fc0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
mov [ ebp - 0x4 ] esp
call sub_40a700
mov ecx [ ebp - 0x8 ]
call sub_40a650
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_408010
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_40a6e0
add esp 0x4
mov eax [ eax ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40a730
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_408040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40a730
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_4080b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40a7a0
movzx eax al
neg eax
sbb eax eax
add eax 0x1
mov esp ebp
pop ebp
retn 0x4
sub_4080e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_40a7d0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_408110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a8b0
movzx eax al
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
call sub_406070
sub_408140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
call sub_4061b0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_408190
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_40a8d0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4081c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a9b0
movzx eax al
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
call sub_4051b0
sub_4081f0
push ebp
mov ebp esp
push 0xffffffff
push sub_455c22
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x14 ]
add edx 0x4
push edx
mov ecx [ ebp - 0x14 ]
call sub_409580
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx ] r--data
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x4
call sub_40a9d0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
or edx 0x2
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x4
call sub_40aa00
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x60
call sub_409680
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x2
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
add ecx [ edx + 0x4 ]
call sub_407000
sub_4082e0
push ebp
mov ebp esp
push 0xffffffff
push sub_45512b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax - 0x60 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ eax + edx - 0x60 ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
sub ecx 0x5c
call sub_408350
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
sub ecx 0x58
call sub_406c80
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_408350
push ebp
mov ebp esp
push 0xffffffff
push sub_4550f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x54 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
movzx eax [ edx + 0x50 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_40ae20
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_407050
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
call sub_40aac0
sub_4083d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x54 ]
push edx
call sub_422ae0
add esp 0x4
sub_408400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x54 ]
push edx
call sub_422b53
add esp 0x4
sub_408430
push ebp
mov ebp esp
push 0xffffffff
push sub_454cb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x20 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x6c ] ecx
call sub_402810
mov [ ebp - 0x44 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_4027c0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_409770
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4027e0
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x6c ]
cmp [ edx + 0x54 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
call sub_409770
mov esi eax
mov ecx [ ebp - 0x6c ]
call sub_4097f0
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x20 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x6c ]
call sub_40ae20
mov eax [ ebp - 0x6c ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
call sub_402810
jmp r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
call sub_4027a0
add esp 0x4
mov bl al
mov ecx [ ebp - 0x6c ]
call sub_409910
mov [ eax ] bl
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
lea ecx [ ebp + 0x8 ]
push ecx
call sub_4027a0
add esp 0x4
mov [ ebp - 0x15 ] al
push 0x0
push 0x8
lea ecx [ ebp - 0x3c ]
call sub_4090e0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x54 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_4027a0
add esp 0x4
movzx ecx al
push ecx
call sub_4039b0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
call sub_402810
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_406b10
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x74 ] 0x1
jle r-xdata
call sub_402810
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
lea ecx [ ebp - 0x50 ]
push ecx
lea ecx [ ebp - 0x3c ]
call sub_4093d0
mov ecx eax
call sub_40aec0
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x40 ] edx
je r-xdata
cmp [ ebp - 0x74 ] 0x3
je r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x49 ] 0x1
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x15 ]
cmp edx eax
je r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x40 ]
push edx
push 0x1
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_4093d0
mov ecx eax
call sub_40aec0
push eax
call sub_423d56
add esp 0x10
cmp [ ebp - 0x40 ] eax
je r-xdata
mov edx [ ebp - 0x6c ]
mov eax [ edx + 0x54 ]
push eax
movzx ecx [ ebp - 0x15 ]
push ecx
call sub_4039b0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_406b10
mov eax [ ebp - 0x5c ]
jmp r-xdata
call sub_402810
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_406b10
mov eax [ ebp - 0x58 ]
jmp r-xdata
call sub_402810
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x78 ] eax
jmp r-xdata
lea ecx [ ebp - 0x3c ]
call sub_406bd0
cmp eax 0x20
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_406b10
mov eax [ ebp - 0x64 ]
jmp r-xdata
call sub_402810
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_406b10
mov eax [ ebp - 0x60 ]
jmp r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x3c ]
call sub_409290
jmp r-xdata
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_4093d0
mov ecx eax
call sub_40aec0
mov esi eax
lea ecx [ ebp - 0x3c ]
call sub_406bd0
add esi eax
push esi
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x3c ]
call sub_4093d0
mov ecx eax
call sub_40aec0
push eax
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x15 ]
push ecx
mov edx [ ebp - 0x6c ]
add edx 0x4c
push edx
mov eax [ ebp - 0x6c ]
mov ecx [ eax + 0x44 ]
call sub_40bc00
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x0
jl r-xdata
sub_40871a
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_406b10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x20 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x4
sub_408750
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_409750
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x54 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
call sub_409730
mov esi eax
mov ecx [ ebp - 0x14 ]
call sub_409750
cmp esi eax
jae r-xdata
call sub_402810
jmp r-xdata
call sub_402810
mov [ ebp - 0xc ] eax
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
call sub_4027c0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
call sub_402810
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
call sub_4027c0
add esp 0x8
movzx edx al
test edx edx
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x44 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_409810
lea eax [ ebp + 0x8 ]
push eax
call sub_4027e0
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_409750
sub eax 0x1
push eax
call sub_4027b0
add esp 0x4
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call sub_4027c0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x14 ]
call sub_409750
mov edx [ ebp - 0x14 ]
add edx 0x48
cmp eax edx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4027a0
add esp 0x4
mov [ ebp - 0xd ] al
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x54 ]
push edx
lea eax [ ebp - 0xd ]
push eax
call sub_4039d0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
call sub_402810
lea eax [ ebp + 0x8 ]
push eax
call sub_4027a0
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x48 ] al
mov ecx [ ebp - 0x14 ]
call sub_40ae60
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_4088a0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_409750
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov ecx [ ebp - 0xc ]
mov eax [ edx + 0x1c ]
call eax
mov [ ebp - 0x4 ] eax
call sub_402810
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_409750
mov esi eax
mov ecx [ ebp - 0xc ]
call sub_409790
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov edx [ eax + 0x10 ]
call edx
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_409750
push eax
call sub_4027b0
add esp 0x4
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_408930
push ebp
mov ebp esp
push 0xffffffff
push sub_454c88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp - 0x6c ]
call sub_409750
test eax eax
je r-xdata
mov eax [ ebp - 0x6c ]
cmp [ eax + 0x54 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
call sub_409750
mov esi eax
mov ecx [ ebp - 0x6c ]
call sub_409790
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0x6c ]
call sub_40ae20
mov ecx [ ebp - 0x6c ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
call sub_402810
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_409850
push eax
call sub_4027b0
add esp 0x4
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_406a60
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xd ] 0x0
mov edx [ ebp - 0x6c ]
mov eax [ edx + 0x54 ]
push eax
lea ecx [ ebp - 0xd ]
push ecx
call sub_403980
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x44 ]
push eax
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_409290
lea ecx [ ebp - 0x40 ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x39 ]
push eax
lea ecx [ ebp - 0x38 ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
mov esi eax
lea ecx [ ebp - 0x30 ]
call sub_406bd0
add esi eax
push esi
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
push eax
mov ecx [ ebp - 0x6c ]
add ecx 0x4c
push ecx
mov edx [ ebp - 0x6c ]
mov ecx [ edx + 0x44 ]
call sub_40bbc0
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x0
jl r-xdata
call sub_402810
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_406b10
mov eax [ ebp - 0x48 ]
jmp r-xdata
call sub_402810
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xd ]
push eax
call sub_4027b0
add esp 0x4
mov [ ebp - 0x70 ] eax
jmp r-xdata
call sub_402810
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_406b10
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x74 ] 0x1
jle r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov eax [ ebp - 0x40 ]
lea ecx [ ebp - 0x39 ]
cmp eax ecx
je r-xdata
cmp [ ebp - 0x74 ] 0x3
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
mov ecx [ ebp - 0x38 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x30 ]
call sub_409340
jmp r-xdata
lea edx [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
mov esi eax
lea ecx [ ebp - 0x30 ]
call sub_406bd0
add esi eax
sub esi [ ebp - 0x38 ]
mov [ ebp - 0x34 ] esi
lea ecx [ ebp - 0x30 ]
call sub_406bd0
cmp eax 0x1
jae r-xdata
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x39 ]
push edx
call sub_4027b0
add esp 0x4
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_406b10
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
sub eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x34 ]
movsx ecx [ eax ]
push ecx
call sub_422ca1
add esp 0x8
jmp r-xdata
push 0x1
lea edx [ ebp - 0x60 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
push eax
push 0x1
lea eax [ ebp - 0x39 ]
push eax
call sub_423b8a
add esp 0x10
lea ecx [ ebp - 0x39 ]
push ecx
call sub_4027b0
add esp 0x4
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_406b10
mov eax [ ebp - 0x64 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x54 ]
push edx
call sub_42311e
add esp 0x4
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x34 ] 0x0
jle r-xdata
sub_408be8
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_406b10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_408c20
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_409750
mov ecx [ ebp - 0xc ]
add ecx 0x48
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x54 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov ecx [ r--data ]
push ecx
mov edx [ r--data ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40bae0
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_40abd0
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x44 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0xc ]
or ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ecx [ ebp + 0x10 ]
sbb ecx 0x0
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x54 ]
push eax
call sub_422eb9
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x54 ]
push eax
call sub_422d0a
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_40ae20
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40bb20
mov eax [ ebp + 0x8 ]
sub_408d00
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp + 0xc ]
call sub_40bb80
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
lea ecx [ ebp + 0xc ]
call sub_40bba0
mov ecx eax
mov esi edx
mov eax [ ebp - 0x8 ]
cdq
sub ecx eax
sbb esi edx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] esi
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x54 ] 0x0
je r-xdata
mov eax [ r--data ]
push eax
mov ecx [ r--data ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40bae0
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40abd0
movzx eax al
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x20
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x54 ]
push eax
call sub_4239f0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
or ecx [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x54 ]
push edx
call sub_422d0a
add esp 0x8
test eax eax
je r-xdata
push 0x1
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x54 ]
push edx
call sub_422eb9
add esp 0x10
test eax eax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_40bb60
mov edx [ ebp - 0x14 ]
mov [ edx + 0x4c ] eax
mov ecx [ ebp - 0x14 ]
call sub_40ae20
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40bb20
mov eax [ ebp + 0x8 ]
sub_408df0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0xc ]
or ecx [ ebp + 0x10 ]
jne r-xdata
push 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x54 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40ab30
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x54 ]
push eax
call sub_423a2b
add esp 0x10
test eax eax
je r-xdata
sub_408e60
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
call sub_402810
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov ecx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0x4 ] eax
call sub_402810
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x54 ]
push edx
call sub_4230c2
add esp 0x4
test eax eax
jge r-xdata
mov [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_408ee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_410890
add esp 0x4
push eax
mov ecx [ ebp - 0x4 ]
call sub_40ade0
mov esp ebp
pop ebp
retn 0x4
sub_408f10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov esp ebp
pop ebp
retn
push 0x28d
push r--data
push r--data
call sub_42338b
add esp 0xc
sub_408f40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
sub ecx 0x8
call sub_409080
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x8
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
sub ecx 0x8
push ecx
call sub_423b7f
add esp 0x4
sub_408f80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406fe0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_408fb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_407050
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_408fe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402e30
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_409010
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
sub ecx 0x60
call sub_4090b0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x60
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
sub ecx 0x60
push ecx
call sub_423b7f
add esp 0x4
sub_409050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_408350
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_409080
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_406c80
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_406fe0
mov esp ebp
pop ebp
retn
sub_4090b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_4082e0
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_406fe0
mov esp ebp
pop ebp
retn
sub_4090e0
push ebp
mov ebp esp
push 0xffffffff
push sub_454c58
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
push ecx
mov ecx esp
mov [ ebp - 0x10 ] esp
call sub_409530
mov ecx [ ebp - 0x14 ]
call sub_409500
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_409420
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40c040
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_409160
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_409400
push eax
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_409400
push eax
call sub_410980
add esp 0x8
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_409420
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x10
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_402750
add esp 0xc
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40bd70
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_409420
sub_409230
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bd90
mov esp ebp
pop ebp
retn 0x4
sub_409260
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4026f0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40be50
mov esp ebp
pop ebp
retn 0x4
sub_409290
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ r--data ]
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c290
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40c1f0
movzx edx al
test edx edx
je r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c160
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40c1b0
sub_409310
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4026f0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bfc0
mov esp ebp
pop ebp
retn 0x4
sub_409340
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c2b0
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4094a0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4094a0
add eax [ ebp + 0x8 ]
push eax
call sub_402750
add esp 0xc
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40c1b0
sub_4093d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4094a0
push eax
mov ecx [ ebp + 0x8 ]
call sub_40d330
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_409400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x18
push eax
mov ecx [ ebp + 0x8 ]
call sub_409540
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_409420
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
movzx eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x14 ] 0xf
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40c1b0
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x18
call sub_40c2d0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_402730
add esp 0xc
sub_4094a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4094d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_409500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x18
call sub_409540
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_409550
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_4229cf
add esp 0x4
sub_409580
push ebp
mov ebp esp
push 0xffffffff
push sub_455bcc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx ] r--data
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
add ecx [ eax + 0x4 ]
call sub_40c390
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x8
call sub_409680
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_409620
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x8 ]
or ecx 0x4
mov [ ebp - 0x8 ] ecx
jmp r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_403550
mov esp ebp
pop ebp
retn 0x8
sub_4096c0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_409960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4027b0
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0x14 ] eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
call sub_409910
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
push edx
call sub_4027b0
add esp 0x4
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn 0x4
sub_409790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
mov ecx [ ecx ]
add ecx [ eax ]
mov eax ecx
mov esp ebp
pop ebp
retn
sub_4097b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov edx [ ecx ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
add ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_4097f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
mov ecx [ ecx ]
add ecx [ eax ]
mov eax ecx
mov esp ebp
pop ebp
retn
sub_409810
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_409850
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov edx [ ecx ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4098a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
cmp [ ecx ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cdq
mov esp ebp
pop ebp
retn
sub_4098d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov edx [ ecx ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
mov ecx [ eax ]
add ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_409910
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov edx [ ecx ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_409960
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
cmp [ ecx ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cdq
mov esp ebp
pop ebp
retn
sub_409990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4099c0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40c5c0
mov esp ebp
pop ebp
retn 0x4
sub_4099c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ edx ]
mov eax [ edx + 0x10 ]
call eax
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
sub_409a00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_409a20
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x4
ja r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c630
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
jmp [ ecx * 4 + jump_table_409aa4 ]
mov edx [ ebp + 0x8 ]
push edx
call sub_40c630
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c610
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c5f0
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40c650
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c670
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_409ad0
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] ecx
movzx esi [ ebp + 0x8 ]
add esi 0x1
call sub_409ac0
movzx eax ax
add eax 0x1
cmp esi eax
jge r-xdata
movzx esi [ ebp + 0x8 ]
call sub_40c750
movzx ecx ax
cmp esi ecx
jle r-xdata
push 0x0
movzx ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
movzx eax [ edx ]
push eax
call sub_40c770
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
mov [ edx ] ax
push 0x1
movzx edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
movzx ecx [ eax ]
push ecx
call sub_40c770
add esp 0xc
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_409b50
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] ecx
movzx esi [ ebp + 0x8 ]
add esi 0x1
call sub_409b40
movzx eax ax
add eax 0x1
cmp esi eax
jge r-xdata
movzx esi [ ebp + 0x8 ]
call sub_40c7e0
movzx ecx ax
cmp esi ecx
jle r-xdata
push 0x0
movzx ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
movzx eax [ edx ]
push eax
call sub_40c800
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
mov [ edx ] ax
push 0x1
movzx edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
movzx ecx [ eax ]
push ecx
call sub_40c800
add esp 0xc
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_409bd0
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] ecx
movzx esi [ ebp + 0x8 ]
add esi 0x1
call sub_409bc0
movzx eax ax
add eax 0x1
cmp esi eax
jge r-xdata
movzx esi [ ebp + 0x8 ]
call sub_40c870
movzx ecx ax
cmp esi ecx
jle r-xdata
push 0x0
movzx ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
movzx eax [ edx ]
push eax
call sub_40c890
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
mov [ edx ] ax
push 0x1
movzx edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
movzx ecx [ eax ]
push ecx
call sub_40c890
add esp 0xc
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_409d50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
call sub_40ca70
add esp 0x8
mov esp ebp
pop ebp
retn
sub_409d80
push ebp
mov ebp esp
push esi
push edi
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4101e0
add esp 0x4
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4101e0
add esp 0x4
mov [ ebp + 0xc ] eax
mov edx [ ebp + 0x10 ]
push edx
call sub_4101e0
add esp 0x4
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
call sub_4109a0
add esp 0x8
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x18 ] edx
mov eax [ ebp + 0x8 ]
cdq
push 0x0
push 0xe10
push edx
push eax
call sub_42b3f0
mov esi eax
mov edi edx
mov eax [ ebp + 0xc ]
cdq
push 0x0
push 0x3c
push edx
push eax
call sub_42b3f0
add esi eax
adc edi edx
mov eax [ ebp + 0x10 ]
cdq
add esi eax
adc edi edx
call sub_409d70
push edx
push eax
push edi
push esi
call sub_42b3f0
add eax [ ebp + 0x14 ]
adc edx [ ebp + 0x18 ]
push 0xffffffff
push 0xffffffff
push edx
push eax
call sub_42b3f0
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0x18 ] 0x0
jg r-xdata
mov eax [ ebp + 0x8 ]
cdq
push 0x0
push 0xe10
push edx
push eax
call sub_42b3f0
mov esi eax
mov edi edx
mov eax [ ebp + 0xc ]
cdq
push 0x0
push 0x3c
push edx
push eax
call sub_42b3f0
add esi eax
adc edi edx
mov eax [ ebp + 0x10 ]
cdq
add esi eax
adc edi edx
call sub_409d70
push edx
push eax
push edi
push esi
call sub_42b3f0
add eax [ ebp + 0x14 ]
adc edx [ ebp + 0x18 ]
jl r-xdata
cmp [ ebp + 0x14 ] 0x0
jae r-xdata
sub_409e90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40ca90
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_409eb0
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
call sub_4109e0
add esp 0x4
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40caf0
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_409ee0
push ebp
mov ebp esp
sub esp 0x70
mov eax [ ebp + 0xc ]
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x4
ja r-xdata
push 0x0
lea ecx [ ebp - 0x68 ]
call sub_404360
push eax
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4041d0
push eax
mov ecx [ ebp + 0x8 ]
call sub_40caf0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x70 ]
jmp [ ecx * 4 + jump_table_40a010 ]
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_404360
push eax
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_4041d0
push eax
mov ecx [ ebp + 0x8 ]
call sub_40caf0
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0x2
lea ecx [ ebp - 0x20 ]
call sub_404360
push eax
push 0x2
lea ecx [ ebp - 0x24 ]
call sub_4041d0
push eax
mov ecx [ ebp + 0x8 ]
call sub_40caf0
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_404360
push eax
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_4041d0
push eax
mov ecx [ ebp + 0x8 ]
call sub_40caf0
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push 0x1
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x48 ]
call sub_404330
push eax
lea edx [ ebp - 0x8 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x18
lea ecx [ ebp - 0x40 ]
call sub_404330
mov ecx eax
call sub_40c9e0
lea eax [ ebp - 0x8 ]
push eax
push 0x4
lea ecx [ ebp - 0x4c ]
call sub_4041d0
push eax
mov ecx [ ebp + 0x8 ]
call sub_40caf0
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x58 ]
call sub_404330
push eax
push 0x3
lea ecx [ ebp - 0x5c ]
call sub_4041d0
push eax
mov ecx [ ebp + 0x8 ]
call sub_40caf0
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40a030
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
mov ecx [ ebp + 0xc ]
call sub_40cc20
movzx eax al
test eax eax
jne r-xdata
lea edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_40cc40
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_40cc40
mov ecx eax
call sub_4109f0
mov ecx eax
call sub_4075b0
push edx
push eax
call sub_40c6e0
add esp 0x8
push eax
mov ecx [ ebp + 0x8 ]
call sub_404360
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_40cc20
movzx ecx al
test ecx ecx
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
call sub_40cbc0
mov esi eax
mov edi edx
mov ecx [ ebp + 0x10 ]
call sub_40cbc0
sub esi eax
sbb edi edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_404330
mov eax [ ebp + 0x8 ]
sub_40a0e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4075b0
push edx
push eax
call sub_40c690
add esp 0x8
mov esp ebp
pop ebp
retn
sub_40a100
push ebp
mov ebp esp
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_404420
add esp 0x4
lea ecx [ ebp - 0x8 ]
push ecx
call sub_410b70
add esp 0x4
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
push 0x0
push 0xf4240
mov edx [ ebp - 0x3c ]
push edx
mov eax [ ebp - 0x40 ]
push eax
call sub_431430
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] edx
push 0x0
push 0xf4240
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x40 ]
push edx
call sub_44ec20
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
push ecx
call [ ebp + 0xc ]
add esp 0x8
mov [ ebp - 0x44 ] eax
push ecx
mov ecx esp
mov edx [ ebp - 0x44 ]
movzx eax [ edx + 0xc ]
push eax
call sub_403e70
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
push ecx
mov ecx esp
push edx
call sub_4040b0
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x14 ]
add ecx 0x76c
push ecx
mov edx esp
push ecx
mov ecx edx
call sub_403f90
lea ecx [ ebp - 0x50 ]
call sub_4040f0
call sub_409d70
push 0x0
push 0xf4240
push edx
push eax
call sub_42b430
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x4c ]
imul eax [ ebp - 0x48 ]
xor ecx ecx
push ecx
push eax
mov edx [ ebp - 0x44 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x8 ]
push ecx
lea ecx [ ebp - 0x38 ]
call sub_404330
sub esp 0x8
mov ecx esp
lea edx [ ebp - 0x38 ]
push edx
call sub_404430
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4043a0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_40a220
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
mov [ ebp - 0x4 ] esp
mov eax [ ebp + 0xc ]
push eax
call sub_40ce20
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40cd70
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40a250
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_40cc90
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_40cc60
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_40ccc0
mov esp ebp
pop ebp
retn
sub_40a2a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_40ce30
mov esp ebp
pop ebp
retn
sub_40a2d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_402860
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40ce50
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x8 ]
sub ecx [ eax ]
sar ecx 0x3
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_40ce90
sub_40a340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_40ce80
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40a3a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_402860
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40ceb0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x8 ]
sub ecx [ eax ]
sar ecx 0x3
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_40cef0
sub_40a410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_40cee0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40a470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40a580
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40a490
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_410bc0
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_40a4c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jae r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov al [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40a500
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_40d080
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
call sub_40d0a0
sub eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
call sub_40d060
cmp [ ebp - 0x4 ] eax
ja r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40d120
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40d0c0
push eax
mov ecx [ ebp - 0x8 ]
call sub_40cf10
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40a580
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40d180
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40a5a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x4 ]
call sub_40d160
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40a5e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx 0x4
mov edx [ ebp - 0x4 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a600
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40d1b0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
xor ecx ecx
cmp eax [ edx ]
sete cl
mov al cl
mov esp ebp
pop ebp
retn 0x4
sub_40a650
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
lea eax [ ebp + 0x8 ]
push eax
call sub_40d2e0
mov ecx [ ebp - 0x8 ]
call sub_40d2b0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
add ecx 0x8
call sub_40d2f0
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push ecx
call sub_40a6e0
add esp 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
push eax
call sub_40a6f0
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40a6c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_40a710
mov esp ebp
pop ebp
retn
sub_40a730
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40d310
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40a770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_40a6e0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ eax ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a7a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
sete al
mov esp ebp
pop ebp
retn 0x4
sub_40a7d0
push ebp
mov ebp esp
push 0xffffffff
push sub_456030
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x74 ] ecx
mov eax [ ebp - 0x74 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x74 ]
call sub_40a8b0
movzx eax al
test eax eax
je r-xdata
push r--data
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_404810
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x7c ]
push edx
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_404840
mov eax [ ebp - 0x74 ]
mov ecx [ eax ]
call sub_405d20
mov ecx [ ebp - 0x74 ]
mov [ ecx + 0x4 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
push r--data
push 0x24
lea ecx [ ebp - 0x70 ]
call sub_404810
mov [ ebp - 0x80 ] eax
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x84 ]
push edx
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_404840
sub_40a8d0
push ebp
mov ebp esp
push 0xffffffff
push sub_455e70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x74 ] ecx
mov eax [ ebp - 0x74 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x74 ]
call sub_40a9b0
movzx eax al
test eax eax
je r-xdata
push r--data
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_404810
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x7c ]
push edx
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_404840
mov eax [ ebp - 0x74 ]
mov ecx [ eax ]
call sub_404fe0
mov ecx [ ebp - 0x74 ]
mov [ ecx + 0x4 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
push r--data
push 0x24
lea ecx [ ebp - 0x70 ]
call sub_404810
mov [ ebp - 0x80 ] eax
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x84 ]
push edx
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_404840
sub_40a9d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40c400
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40ab30
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40aa00
push ebp
mov ebp esp
push 0xffffffff
push sub_454c28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x54 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4210e3
add esp 0xc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_40ab30
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_40c4a0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
push ecx
call sub_410890
add esp 0x4
push eax
mov ecx [ ebp - 0x18 ]
call sub_40ade0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_402e30
mov eax [ ebp - 0x18 ]
sub_40aac0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40abd0
movzx edx al
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x54 ]
push ecx
call sub_423f5f
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
push 0x2
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40ab30
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
sub_40ab30
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
xor eax eax
cmp [ ebp + 0xc ] 0x1
sete al
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x50 ] al
mov edx [ ebp - 0x14 ]
mov [ edx + 0x49 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_40c500
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x54 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ rw-data ]
mov [ ecx + 0x4c ] edx
mov eax [ ebp - 0x14 ]
mov [ eax + 0x44 ] 0x0
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x8
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40c570
sub_40abd0
push ebp
mov ebp esp
push 0xffffffff
push sub_4550c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x18 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ ecx + 0x49 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x8
call sub_402810
push eax
mov eax [ ebp - 0x58 ]
mov edx [ eax ]
mov ecx [ ebp - 0x58 ]
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0x3c ] eax
call sub_402810
mov [ ebp - 0x40 ] eax
lea ecx [ ebp - 0x3c ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x34 ]
call sub_4090e0
mov [ ebp - 0x4 ] 0x0
xor al al
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov [ eax + 0x49 ] 0x0
cmp [ ebp - 0x5c ] 0x1
je r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ ecx + 0x49 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
push 0x1
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
push eax
call sub_423d56
add esp 0x10
cmp [ ebp - 0x38 ] eax
je r-xdata
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x34 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
mov edx [ ebp - 0x14 ]
sub edx eax
mov [ ebp - 0x38 ] edx
je r-xdata
cmp [ ebp - 0x5c ] 0x3
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x52 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call sub_406b10
mov al [ ebp - 0x52 ]
jmp r-xdata
mov [ ebp - 0x51 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call sub_406b10
mov al [ ebp - 0x51 ]
jmp r-xdata
mov [ ebp - 0x53 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call sub_406b10
mov al [ ebp - 0x53 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x34 ]
call sub_409290
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call sub_406b10
mov al [ ebp - 0x54 ]
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
lea ecx [ ebp - 0x34 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
mov esi eax
lea ecx [ ebp - 0x34 ]
call sub_406bd0
add esi eax
push esi
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_4093d0
mov ecx eax
call sub_40aec0
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x4c
push ecx
mov edx [ ebp - 0x58 ]
mov ecx [ edx + 0x44 ]
call sub_40e0a0
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
sub_40ade0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_402f90
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x44 ] eax
mov ecx [ ebp - 0x4 ]
call sub_40c500
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x44 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40ae20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_409730
mov ecx [ ebp - 0x4 ]
add ecx 0x48
cmp eax ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x40 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c4c0
sub_40ae60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_409730
mov ecx [ ebp - 0x4 ]
add ecx 0x48
cmp eax ecx
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x49
push edx
mov eax [ ebp - 0x4 ]
add eax 0x48
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x48
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c4c0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_409730
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] eax
mov ecx [ ebp - 0x4 ]
call sub_409790
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] eax
sub_40aee0
push ebp
mov ebp esp
push 0xffffffff
push sub_455a58
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40d360
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_403680
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_403680
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_40c370
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40c370
mov ecx eax
call sub_406f70
sub_40af90
push ebp
mov ebp esp
push 0xffffffff
push sub_455a28
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
call j_sub_42774f
movzx eax al
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_40d3c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
call sub_40c2f0
sub_40b000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
neg eax
sbb eax eax
neg eax
sub eax 0x1
mov esp ebp
pop ebp
retn
sub_40b040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x1c ]
push eax
movzx ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
call eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x18
sub_40b080
push ebp
mov ebp esp
push 0xffffffff
push sub_455710
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x84 ] ecx
mov ecx [ ebp + 0x14 ]
call sub_4036c0
and eax 0x4000
jne r-xdata
lea ecx [ ebp - 0x70 ]
push ecx
mov ecx [ ebp + 0x14 ]
call sub_403760
mov [ ebp - 0x88 ] eax
mov edx [ ebp - 0x88 ]
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8c ]
push eax
call sub_410c00
add esp 0x4
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_402e30
lea ecx [ ebp - 0x6c ]
call sub_406a60
mov [ ebp - 0x4 ] 0x1
movzx ecx [ ebp + 0x1c ]
test ecx ecx
je r-xdata
movzx eax [ ebp + 0x1c ]
push eax
movzx ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x84 ]
mov edx [ eax ]
mov ecx [ ebp - 0x84 ]
mov eax [ edx + 0x1c ]
call eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edx [ ebp - 0x48 ]
push edx
mov ecx [ ebp - 0x4c ]
call sub_40e0d0
mov [ ebp - 0x98 ] eax
mov eax [ ebp - 0x98 ]
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x9c ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_409160
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x48 ]
call sub_406b10
lea edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0x4c ]
call sub_40e110
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x94 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_409160
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x2c ]
call sub_406b10
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x18
mov [ ebp - 0xa8 ] 0x0
jg r-xdata
mov ecx [ ebp + 0x14 ]
call sub_403700
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] edx
cmp [ ebp - 0xa0 ] 0x0
jl r-xdata
lea ecx [ ebp - 0x6c ]
call sub_406bd0
push eax
lea ecx [ ebp - 0x6c ]
call sub_406bb0
push eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x80 ]
push edx
mov eax [ ebp - 0x84 ]
push eax
call sub_40e000
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x10 ] edx
push 0x0
push 0x0
mov ecx [ ebp + 0x14 ]
call sub_403720
mov eax [ ebp - 0x50 ]
push eax
movzx ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x84 ]
push edx
call sub_40e050
add esp 0x18
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6c ]
call sub_406b10
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0x50 ]
push eax
movzx ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x78 ]
push ecx
mov edx [ ebp - 0x84 ]
push edx
call sub_40e050
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x50 ] 0x0
mov ecx [ ebp + 0x14 ]
call sub_403700
mov esi eax
lea ecx [ ebp - 0x6c ]
call sub_406bd0
cmp esi eax
jbe r-xdata
cmp [ ebp - 0xa4 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x14 ]
call sub_403700
mov esi eax
lea ecx [ ebp - 0x6c ]
call sub_406bd0
sub esi eax
mov [ ebp - 0xa8 ] esi
jmp r-xdata
mov edx [ ebp - 0xa8 ]
mov [ ebp - 0x50 ] edx
mov ecx [ ebp + 0x14 ]
call sub_4036c0
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_40b320
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x54 ] ecx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
call sub_4036c0
push eax
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp - 0x54 ]
push edx
call sub_40dbb0
add esp 0x10
push eax
push 0x40
lea eax [ ebp - 0x48 ]
push eax
call sub_4228b6
add esp 0x10
push eax
lea ecx [ ebp - 0x48 ]
push ecx
movzx edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x54 ]
push ecx
call sub_40dcb0
add esp 0x20
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x18
sub_40b3a0
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x54 ] ecx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
call sub_4036c0
push eax
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp - 0x54 ]
push edx
call sub_40dbb0
add esp 0x10
push eax
push 0x40
lea eax [ ebp - 0x48 ]
push eax
call sub_4228b6
add esp 0x10
push eax
lea ecx [ ebp - 0x48 ]
push ecx
movzx edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x54 ]
push ecx
call sub_40dcb0
add esp 0x20
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x18
sub_40b420
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x54 ] ecx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x14 ]
call sub_4036c0
push eax
push r--data
lea edx [ ebp - 0x50 ]
push edx
mov eax [ ebp - 0x54 ]
push eax
call sub_40dbb0
add esp 0x10
push eax
push 0x40
lea ecx [ ebp - 0x48 ]
push ecx
call sub_4228b6
add esp 0x14
push eax
lea edx [ ebp - 0x48 ]
push edx
movzx eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x54 ]
push edx
call sub_40dcb0
add esp 0x20
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x1c
sub_40b4b0
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x54 ] ecx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x14 ]
call sub_4036c0
push eax
push r--data
lea edx [ ebp - 0x50 ]
push edx
mov eax [ ebp - 0x54 ]
push eax
call sub_40dbb0
add esp 0x10
push eax
push 0x40
lea ecx [ ebp - 0x48 ]
push ecx
call sub_4228b6
add esp 0x14
push eax
lea edx [ ebp - 0x48 ]
push edx
movzx eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x54 ]
push edx
call sub_40dcb0
add esp 0x20
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x1c
sub_40b540
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x9c ] ecx
mov ecx [ ebp + 0x14 ]
call sub_4036e0
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] edx
cmp [ ebp - 0xa0 ] 0x0
jg r-xdata
mov ecx [ ebp + 0x14 ]
call sub_4036e0
mov [ ebp - 0xac ] eax
mov [ ebp - 0xa8 ] edx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xb0 ] edx
jg r-xdata
mov ecx [ ebp + 0x14 ]
call sub_4036c0
and eax 0x2000
jne r-xdata
cmp [ ebp - 0xa4 ] 0x0
ja r-xdata
sub esp 0x8
fld [ ebp + 0x1c ]
fstp [ esp ]
mov edx [ ebp - 0x94 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_4036c0
push eax
push 0x0
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x9c ]
push ecx
call sub_40d410
add esp 0x10
push eax
push 0x6c
lea edx [ ebp - 0x88 ]
push edx
call sub_4228b6
add esp 0x18
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0x88 ]
push eax
movzx ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x9c ]
push eax
call sub_40d4f0
add esp 0x2c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x1c
fld [ ebp + 0x1c ]
fmul [ r--data ]
fld [ ebp + 0x1c ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0xb0 ] 0x24
jmp r-xdata
cmp [ ebp - 0x10 ] 0x24
jbe r-xdata
mov [ ebp - 0xac ] 0x6
mov [ ebp - 0xa8 ] 0x0
jmp r-xdata
fldz
fcomp [ ebp + 0x1c ]
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x94 ]
cdq
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov eax [ ebp - 0xc ]
sbb eax edx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x14 ]
call sub_4036c0
and eax 0x3000
cmp eax 0x2000
jne r-xdata
mov eax [ ebp - 0xac ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xa8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov [ ebp - 0xb4 ] 0x0
mov [ ebp - 0xb4 ] 0x1
jmp r-xdata
jmp r-xdata
fld [ ebp + 0x1c ]
fchs
fstp [ ebp + 0x1c ]
mov cl [ ebp - 0xb4 ]
mov [ ebp - 0x95 ] cl
movzx edx [ ebp - 0x95 ]
test edx edx
je r-xdata
fld [ ebp + 0x1c ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
jne r-xdata
fld [ ebp + 0x1c ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp - 0x4 ] 0x1388
jae r-xdata
movzx ecx [ ebp - 0x95 ]
test ecx ecx
je r-xdata
jmp r-xdata
fld [ ebp + 0x1c ]
fdiv [ r--data ]
fstp [ ebp + 0x1c ]
jmp r-xdata
fld [ ebp + 0x1c ]
fchs
fstp [ ebp + 0x1c ]
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xa
mov [ ebp - 0x4 ] eax
jg r-xdata
fld [ r--data ]
fcomp [ ebp + 0x1c ]
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x1388
jae r-xdata
fld [ ebp + 0x1c ]
fmul [ r--data ]
fstp [ ebp + 0x1c ]
mov edx [ ebp - 0x10 ]
sub edx 0xa
mov eax [ ebp - 0xc ]
sbb eax 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0xa
mov [ ebp - 0x8 ] ecx
sub_40b7d0
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x9c ] ecx
mov ecx [ ebp + 0x14 ]
call sub_4036e0
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] edx
cmp [ ebp - 0xa0 ] 0x0
jg r-xdata
mov ecx [ ebp + 0x14 ]
call sub_4036e0
mov [ ebp - 0xac ] eax
mov [ ebp - 0xa8 ] edx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xb0 ] edx
jg r-xdata
mov ecx [ ebp + 0x14 ]
call sub_4036c0
and eax 0x2000
jne r-xdata
cmp [ ebp - 0xa4 ] 0x0
ja r-xdata
sub esp 0x8
fld [ ebp + 0x1c ]
fstp [ esp ]
mov edx [ ebp - 0x94 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_4036c0
push eax
push 0x4c
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x9c ]
push ecx
call sub_40d410
add esp 0x10
push eax
push 0x6c
lea edx [ ebp - 0x88 ]
push edx
call sub_4228b6
add esp 0x18
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0x88 ]
push eax
movzx ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x9c ]
push eax
call sub_40d4f0
add esp 0x2c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x1c
fldz
fcomp [ ebp + 0x1c ]
fnstsw ax
test ah 0x41
jne r-xdata
mov [ ebp - 0xb0 ] 0x24
jmp r-xdata
cmp [ ebp - 0x10 ] 0x24
jbe r-xdata
mov [ ebp - 0xac ] 0x6
mov [ ebp - 0xa8 ] 0x0
jmp r-xdata
mov [ ebp - 0xb4 ] 0x0
mov [ ebp - 0xb4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x94 ]
cdq
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov eax [ ebp - 0xc ]
sbb eax edx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x14 ]
call sub_4036c0
and eax 0x3000
cmp eax 0x2000
jne r-xdata
mov eax [ ebp - 0xac ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xa8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
jmp r-xdata
fld [ ebp + 0x1c ]
fchs
fstp [ ebp + 0x1c ]
mov cl [ ebp - 0xb4 ]
mov [ ebp - 0x95 ] cl
movzx edx [ ebp - 0x95 ]
test edx edx
je r-xdata
fld [ ebp + 0x1c ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
jne r-xdata
fld [ ebp + 0x1c ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp - 0x4 ] 0x1388
jae r-xdata
movzx ecx [ ebp - 0x95 ]
test ecx ecx
je r-xdata
jmp r-xdata
fld [ ebp + 0x1c ]
fdiv [ r--data ]
fstp [ ebp + 0x1c ]
jmp r-xdata
fld [ ebp + 0x1c ]
fchs
fstp [ ebp + 0x1c ]
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xa
mov [ ebp - 0x4 ] eax
jg r-xdata
fld [ r--data ]
fcomp [ ebp + 0x1c ]
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x1388
jae r-xdata
fld [ ebp + 0x1c ]
fmul [ r--data ]
fstp [ ebp + 0x1c ]
mov edx [ ebp - 0x10 ]
sub edx 0xa
mov eax [ ebp - 0xc ]
sbb eax 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0xa
mov [ ebp - 0x8 ] ecx
sub_40ba40
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4c ] ecx
mov eax [ ebp + 0x1c ]
push eax
push r--data
push 0x40
lea ecx [ ebp - 0x48 ]
push ecx
call sub_4228b6
add esp 0x10
push eax
lea edx [ ebp - 0x48 ]
push edx
movzx eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4c ]
push edx
call sub_40dcb0
add esp 0x20
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn 0x18
sub_40bab0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40bae0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ r--data ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40bb20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp + 0x10 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_40bba0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov ecx [ ebp - 0x4 ]
add eax [ ecx ]
adc edx [ ecx + 0x4 ]
mov esp ebp
pop ebp
retn
sub_40bbc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
call eax
mov esp ebp
pop ebp
retn 0x1c
sub_40bc00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
call eax
mov esp ebp
pop ebp
retn 0x1c
sub_40bc60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
mov [ edx ] eax
mov eax 0x3
mov esp ebp
pop ebp
retn 0x1c
sub_40bc90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
mov [ edx ] eax
mov eax 0x3
mov esp ebp
pop ebp
retn 0x1c
sub_40bce0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
mov edx [ ebp + 0x10 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x10
sub_40bd10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40b020
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_40bd40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40bc40
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_40bd90
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_406bd0
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_406bd0
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c2b0
mov edx [ ebp - 0x8 ]
mov eax [ r--data ]
sub eax [ edx + 0x10 ]
cmp eax [ ebp + 0x10 ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x10 ] ecx
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c290
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
add edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c1f0
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4094d0
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4094a0
mov ecx [ ebp - 0x8 ]
add eax [ ecx + 0x10 ]
push eax
call sub_402730
add esp 0xc
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40c1b0
sub_40be50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40e4b0
movzx ecx al
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ r--data ]
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0xc ]
ja r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_4094a0
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40bd90
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c290
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40c1f0
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4094a0
mov edx [ ebp - 0x8 ]
add eax [ edx + 0x10 ]
push eax
call sub_402730
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c1b0
sub_40bf00
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_406bd0
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_406bd0
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c2b0
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c1f0
movzx ecx al
test ecx ecx
je r-xdata
mov eax [ r--data ]
push eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_409340
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_409340
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4094d0
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4094a0
push eax
call sub_402730
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c1b0
sub_40bfc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40e4b0
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c1f0
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4094a0
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40bf00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4094a0
push eax
call sub_402730
add esp 0xc
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c1b0
mov esp ebp
pop ebp
retn 0x8
sub_40c040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c1f0
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40c290
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40c160
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c1b0
sub_40c0a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ r--data ]
sub eax [ edx + 0x10 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c2b0
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c290
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
add edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edx
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c1f0
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4094a0
add eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4094a0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
call sub_402750
add esp 0xc
movzx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c160
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40c1b0
sub_40c160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
movzx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4094a0
add eax [ ebp + 0x8 ]
push eax
call sub_402770
add esp 0xc
lea eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4094a0
add eax [ ebp + 0x8 ]
push eax
call sub_402790
add esp 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40c1b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_4094a0
add eax [ ebp + 0x8 ]
push eax
call sub_402790
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40c1f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e2e0
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40c290
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40e320
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x10
jae r-xdata
xor eax eax
cmp eax [ ebp + 0x8 ]
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn 0x8
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40c1b0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_409420
jmp r-xdata
sub_40c2f0
push ebp
mov ebp esp
push 0xffffffff
push sub_455a00
mov eax [ fs : 0x0 ]
push eax
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ebp - 0x14 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_4036c0
and eax 0x2
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_406f70
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4037c0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x38 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] 0x0
push 0x20
mov ecx [ ebp - 0x4 ]
call sub_40e4f0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] al
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x38 ] 0x0
jne r-xdata
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x4
mov ecx [ ebp - 0x4 ]
call sub_407000
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
push ecx
call sub_42058b
add esp 0x4
sub_40c400
push ebp
mov ebp esp
push 0xffffffff
push sub_454bfb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x4
call sub_420eb2
mov [ ebp - 0x4 ] 0x0
push 0x4
call sub_423fd3
add esp 0x4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_402e00
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x38 ] edx
mov ecx [ ebp - 0x14 ]
call sub_40c500
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40c4a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402dd0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40c4c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] edx
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0xc
sub_40c500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x4 ]
add edx 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x18
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x1c
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x24 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x28
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x2c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e570
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40c4c0
mov esp ebp
pop ebp
retn
sub_40c570
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x24 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x30 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x1c ]
mov [ ecx + 0x34 ] edx
mov esp ebp
pop ebp
retn 0x18
sub_40c5c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ edx ]
mov eax [ edx + 0xc ]
call eax
sub_40c690
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x8 ]
push eax
call sub_40c5f0
add esp 0x4
mov ecx eax
call sub_4075b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov al [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
sub_40c6e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40e600
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40e5b0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c690
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov eax 0x1
jmp r-xdata
pop ebp
retn
mov eax 0x5
mov eax 0x2
jmp r-xdata
sub_40c770
push ebp
mov ebp esp
push 0xffffffff
push sub_4559d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x18 ]
call sub_403d60
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
push ecx
call sub_4100c0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_403e50
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40c800
push ebp
mov ebp esp
push 0xffffffff
push sub_4559a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x18 ]
call sub_403eb0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
push ecx
call sub_410cf0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_403f70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40c890
push ebp
mov ebp esp
push 0xffffffff
push sub_455978
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x18 ]
call sub_403fd0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
push ecx
call sub_410d80
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_404090
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40c900
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x4 ]
push eax
call sub_409c80
add esp 0x4
mov ecx eax
call sub_409d00
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0xc ] 0x1
lea ecx [ ebp - 0x8 ]
push ecx
call sub_409c60
add esp 0x4
mov ecx eax
call sub_409d00
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov al [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40c950
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_409c80
add esp 0x4
mov ecx eax
call sub_409d00
xor ecx ecx
cmp [ ebp + 0x8 ] eax
sete cl
mov al cl
mov esp ebp
pop ebp
retn
sub_40c980
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_409c60
add esp 0x4
mov ecx eax
call sub_409d00
xor ecx ecx
cmp [ ebp + 0x8 ] eax
sete cl
mov al cl
mov esp ebp
pop ebp
retn
sub_40c9b0
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_409ca0
add esp 0x4
mov ecx eax
call sub_409d00
xor ecx ecx
cmp [ ebp + 0x8 ] eax
sete cl
mov al cl
mov esp ebp
pop ebp
retn
sub_40c9e0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4109f0
mov edx [ eax + 0x4 ]
push edx
mov eax [ eax ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_404380
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40ca20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_40e7b0
movzx eax al
test eax eax
je r-xdata
xor al al
mov ecx [ ebp - 0x4 ]
call sub_40e650
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40ca50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40ca90
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov ecx [ ebp + 0x8 ]
call sub_40cbc0
mov esi eax
mov edi edx
mov ecx [ ebp + 0xc ]
call sub_40cbc0
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov [ ebp - 0x14 ] 0x0
jl r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov al [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40caf0
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
mov [ ebp - 0x24 ] ecx
push 0x0
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_409a00
mov ecx [ ebp + 0x8 ]
call sub_409d30
movzx eax al
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40e790
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_40ca50
mov ecx eax
call sub_410e10
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x24 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_409d10
movzx ecx al
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x24 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
call sub_40ca20
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_404270
mov esi eax
xor edi edi
call sub_40cbe0
push edx
push eax
push edi
push esi
call sub_42b3f0
mov esi eax
mov edi edx
mov ecx [ ebp + 0xc ]
call sub_409d50
add esi eax
adc edi edx
push edi
push esi
lea ecx [ ebp - 0x20 ]
call sub_409a00
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov eax [ ebp - 0x1c ]
mov [ ecx + 0x4 ] eax
sub_40cbc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
call sub_40ca70
add esp 0x8
mov esp ebp
pop ebp
retn
sub_40cbe0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x8 ] 0x15180
mov [ ebp - 0x4 ] 0x0
call sub_409d70
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_42b3f0
mov esp ebp
pop ebp
retn
sub_40cc40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40cc60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40efb0
mov ecx [ eax ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40f340
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40cc90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40f340
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40ccc0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40cc60
push eax
lea ecx [ ebp + 0xc ]
call sub_40f390
movzx ecx al
test ecx ecx
je r-xdata
lea edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp + 0xc ]
call sub_40f3b0
movzx eax al
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_40cc90
push eax
lea ecx [ ebp + 0x10 ]
call sub_40f390
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40f340
mov eax [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp + 0xc ]
call sub_40f360
mov edx [ eax ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40e7c0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40ef50
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40cc60
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40cd70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
lea eax [ ebp + 0xc ]
push eax
call sub_40ce20
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40f020
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
add ecx 0xc
call sub_40f060
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_40f000
add esp 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x4 ]
mov [ eax ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
call sub_40efe0
add esp 0x4
mov [ eax ] 0x1
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40ce50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_410f80
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_40ceb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_410fc0
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_40cf10
push ebp
mov ebp esp
push 0xffffffff
push sub_455950
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
call sub_40d0a0
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x1c ]
call sub_40d060
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x1c ]
call sub_40d120
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0xc
call sub_40f080
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_411000
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x1c ]
call sub_40d080
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x1c ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c ]
call sub_402860
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x1c ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40a490
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ ecx + 0x8 ]
sub eax [ edx ]
sar eax 0x2
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0xc
call sub_40d140
sub_40cf9e
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0xc
call sub_40d140
push 0x0
push 0x0
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40d0c0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_40d060
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
call sub_40d0a0
mov ecx [ ebp - 0x4 ]
shr ecx 0x1
sub eax ecx
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0x1
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
sub_40d180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_402870
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40d1c0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push ecx
call sub_40a6e0
add esp 0x4
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push ecx
call sub_40a6e0
add esp 0x4
mov edx [ ebp - 0xc ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
push eax
call sub_40a6f0
add esp 0x4
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx ]
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40a6e0
add esp 0x4
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x8
push ecx
call sub_410870
add esp 0x8
push 0x1
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0xc ]
add ecx 0x8
call sub_40a710
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
sub_40d260
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40f0f0
mov ecx [ ebp - 0x4 ]
sub eax [ ecx + 0x4 ]
sub eax 0x1
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov esp ebp
pop ebp
retn 0x4
push r--data
call sub_420bb6
sub_40d2b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_411040
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x9
call sub_40d2e0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40d310
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40f110
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40d330
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40f140
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40d360
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax [ ecx + 0x4 ]
mov ecx eax
call sub_407030
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
add ecx [ eax + 0x4 ]
call sub_407030
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
call edx
sub_40d3c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx [ edx + 0x4 ]
call sub_407030
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
add ecx [ eax + 0x4 ]
call sub_407030
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
call edx
sub_40d410
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x25
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x14 ]
and eax 0x20
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0x10
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2b
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x2a
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
movsx ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x23
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x14 ]
and edx 0x3000
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x2000
jne r-xdata
mov edx [ ebp - 0x4 ]
mov al [ ebp + 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x3000
jne r-xdata
mov [ ebp - 0x9 ] 0x66
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1000
setne al
lea eax [ eax + eax + 0x65 ]
mov [ ebp - 0xa ] al
mov [ ebp - 0xa ] 0x61
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov al [ ebp - 0x9 ]
mov [ edx ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn
mov cl [ ebp - 0xa ]
mov [ ebp - 0x9 ] cl
sub_40d4f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4556c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x34 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx [ ebp + 0x18 ]
call sub_403760
mov [ ebp - 0xe4 ] eax
mov ecx [ ebp - 0xe4 ]
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0xe8 ]
push edx
call sub_410c00
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x80 ]
call sub_402e30
lea eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40f420
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
call sub_40f400
mov [ ebp - 0x25 ] al
lea ecx [ ebp - 0x6c ]
call sub_406a60
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x8 ]
add ecx 0x8
push ecx
push 0x0
push 0x30
call sub_4110b0
add esp 0xc
mov [ ebp - 0x15 ] al
mov edx [ ebp + 0x20 ]
movsx eax [ edx ]
cmp eax 0x2b
je r-xdata
mov [ ebp - 0xec ] 0x1
mov ecx [ ebp + 0x20 ]
movsx edx [ ecx ]
cmp edx 0x2d
je r-xdata
lea ecx [ ebp - 0x50 ]
call sub_406bb0
movsx edx [ eax ]
cmp edx 0x7f
je r-xdata
mov [ ebp + 0x2c ] 0x0
mov [ ebp - 0xec ] 0x0
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax [ ebp + 0x28 ]
add eax [ ebp + 0x2c ]
add eax [ ebp + 0x30 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0x18 ]
call sub_403700
mov [ ebp - 0xf4 ] eax
mov [ ebp - 0xf0 ] edx
cmp [ ebp - 0xf0 ] 0x0
jl r-xdata
lea ecx [ ebp - 0x50 ]
call sub_406bb0
movsx eax [ eax ]
test eax eax
jle r-xdata
mov eax [ ebp - 0xec ]
mov [ ebp - 0x24 ] eax
call sub_423326
mov ecx [ eax ]
mov dl [ ecx ]
mov [ ebp - 0x1c ] dl
mov [ ebp - 0x1b ] 0x65
mov [ ebp - 0x1a ] 0x0
mov eax [ ebp + 0x30 ]
push eax
push 0x65
mov ecx [ ebp + 0x20 ]
push ecx
call sub_422d70
add esp 0xc
mov [ ebp - 0x30 ] eax
mov edx [ ebp + 0x30 ]
push edx
movsx eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
call sub_422d70
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov [ ebp - 0xf8 ] 0x0
jg r-xdata
mov ecx [ ebp + 0x30 ]
push ecx
mov edx [ ebp + 0x20 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_40be50
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x100
jne r-xdata
cmp [ ebp - 0x10 ] 0x100
je r-xdata
mov ecx [ ebp + 0x18 ]
call sub_403700
cmp eax [ ebp - 0x2c ]
jbe r-xdata
cmp [ ebp - 0xf4 ] 0x0
jbe r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push 0x30
mov eax [ ebp + 0x2c ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_409290
jmp r-xdata
mov ecx [ ebp + 0x30 ]
push ecx
movsx edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x20 ]
push eax
call sub_422d70
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
jbe r-xdata
mov edx [ ebp - 0x2c ]
push edx
movzx eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x88 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40e050
add esp 0x18
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x18 ]
call sub_403700
sub eax [ ebp - 0x2c ]
mov [ ebp - 0xf8 ] eax
jmp r-xdata
push 0x30
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x30 ]
sub eax [ ebp + 0x20 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_40c0a0
push 0x30
mov ecx [ ebp + 0x24 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_409290
mov [ ebp + 0x24 ] 0x0
mov [ ebp + 0x2c ] 0x0
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov edx [ ebp + 0x30 ]
push edx
push 0x65
mov eax [ ebp + 0x20 ]
push eax
call sub_422d70
add esp 0xc
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp + 0x20 ]
add ecx 0x1
mov [ ebp - 0x78 ] ecx
movzx edx [ ebp - 0x25 ]
push edx
mov eax [ ebp - 0x78 ]
sub eax 0x1
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xa0 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f1e0
add esp 0x1c
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
mov eax [ ebp + 0x24 ]
push eax
movzx ecx [ ebp - 0x15 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40e050
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
push 0x1
mov ecx [ ebp - 0x14 ]
call sub_40f3e0
movzx eax al
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0xb0 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40e050
add esp 0x18
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x28 ]
push ecx
movzx edx [ ebp - 0x15 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0xb8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40e050
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
mov eax [ ebp + 0x20 ]
add eax [ ebp - 0x78 ]
mov [ ebp + 0x20 ] eax
mov ecx [ ebp + 0x30 ]
sub ecx [ ebp - 0x78 ]
mov [ ebp + 0x30 ] ecx
mov edx [ ebp - 0x2c ]
push edx
movzx eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40e050
add esp 0x18
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x2c ] 0x0
push 0x1
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x90 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f170
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
mov eax [ ebp + 0x20 ]
add eax 0x1
mov [ ebp + 0x20 ] eax
mov ecx [ ebp + 0x30 ]
sub ecx 0x1
mov [ ebp + 0x30 ] ecx
mov ecx [ ebp - 0xf8 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0x18 ]
call sub_4036c0
and eax 0x1c0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x40
je r-xdata
push 0x30
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp - 0x20 ]
sub eax [ ebp + 0x20 ]
add eax 0x1
push eax
lea ecx [ ebp - 0x6c ]
call sub_40c0a0
push 0x30
mov ecx [ ebp + 0x24 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx [ ebp + 0x20 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_40c0a0
mov [ ebp + 0x28 ] 0x0
push 0x30
mov ecx [ ebp + 0x24 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_409290
jmp r-xdata
movzx eax [ ebp - 0x25 ]
push eax
mov ecx [ ebp + 0x30 ]
push ecx
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40f1e0
add esp 0x1c
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
mov eax [ ebp + 0x2c ]
push eax
movzx ecx [ ebp - 0x15 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xe0 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40e050
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
push 0x0
push 0x0
mov ecx [ ebp + 0x18 ]
call sub_403720
mov eax [ ebp - 0x2c ]
push eax
movzx ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40e050
add esp 0x18
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x6c ]
call sub_406b10
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x50 ]
call sub_406b10
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x34 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp + 0x20 ]
add ecx 0x1
mov [ ebp - 0x7c ] ecx
movzx edx [ ebp - 0x25 ]
push edx
mov eax [ ebp - 0x7c ]
sub eax 0x1
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f1e0
add esp 0x1c
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
mov eax [ ebp + 0x2c ]
push eax
movzx ecx [ ebp - 0x15 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40e050
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
mov [ ebp + 0x2c ] 0x0
mov ecx [ ebp + 0x18 ]
call sub_4036c0
and eax 0x4
je r-xdata
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_406b90
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x2c ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_406bd0
mov [ ebp + 0x30 ] eax
mov eax [ ebp - 0x70 ]
movsx ecx [ eax ]
test ecx ecx
jle r-xdata
mov [ ebp + 0x24 ] 0x0
lea ecx [ ebp - 0x50 ]
call sub_406bb0
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_406b90
push eax
call sub_423dd0
add esp 0x8
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xfc ] r--data
mov [ ebp - 0xfc ] r--data
jmp r-xdata
mov edx [ ebp - 0x70 ]
movsx eax [ edx ]
mov ecx [ ebp - 0x74 ]
sub ecx [ ebp - 0x24 ]
cmp eax ecx
jae r-xdata
push 0x1
mov eax [ ebp - 0xfc ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0xd0 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40f170
add esp 0x18
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x20 ]
add ecx [ ebp - 0x7c ]
mov [ ebp + 0x20 ] ecx
mov edx [ ebp + 0x30 ]
sub edx [ ebp - 0x7c ]
mov [ ebp + 0x30 ] edx
mov edx [ ebp - 0x70 ]
movsx eax [ edx ]
mov ecx [ ebp - 0x74 ]
sub ecx eax
mov [ ebp - 0x74 ] ecx
push 0x0
push 0x1
mov edx [ ebp - 0x74 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_40c0a0
mov eax [ ebp - 0x70 ]
movsx ecx [ eax + 0x1 ]
test ecx ecx
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x70 ]
add edx 0x1
mov [ ebp - 0x70 ] edx
mov ecx [ ebp - 0x70 ]
movsx edx [ ecx ]
cmp edx 0x7f
je r-xdata
sub_40dbb0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x25
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x14 ]
and eax 0x20
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0x8
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2b
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
movsx ecx [ eax ]
cmp ecx 0x4c
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x23
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x49
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x36
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x34
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x800
je r-xdata
mov [ ebp - 0x9 ] 0x6f
jmp r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xe00
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x400
jne r-xdata
mov eax [ ebp + 0x14 ]
and eax 0x4
neg eax
sbb al al
and al 0xe0
add al 0x78
mov [ ebp - 0xa ] al
mov ecx [ ebp + 0x10 ]
mov dl [ ecx + 0x1 ]
mov [ ebp - 0xa ] dl
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov al [ ebp - 0x9 ]
mov [ edx ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn
mov cl [ ebp - 0xa ]
mov [ ebp - 0x9 ] cl
sub_40dcb0
push ebp
mov ebp esp
push 0xffffffff
push sub_455090
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x20 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp + 0x18 ]
call sub_403760
mov [ ebp - 0x6c ] eax
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x70 ]
push edx
call sub_410c00
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
call sub_402e30
lea eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40f420
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x20 ]
movsx edx [ ecx ]
cmp edx 0x2b
je r-xdata
mov [ ebp - 0x78 ] 0x1
mov eax [ ebp + 0x20 ]
movsx ecx [ eax ]
cmp ecx 0x2d
je r-xdata
mov ecx [ ebp + 0x18 ]
call sub_403700
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] edx
cmp [ ebp - 0x7c ] 0x0
jl r-xdata
lea ecx [ ebp - 0x3c ]
call sub_406bb0
movsx edx [ eax ]
test edx edx
jle r-xdata
mov edx [ ebp + 0x20 ]
movsx eax [ edx ]
cmp eax 0x30
jne r-xdata
mov [ ebp - 0x84 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x3c ]
call sub_406bb0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x74 ] 0x0
mov ecx [ ebp + 0x20 ]
movsx edx [ ecx + 0x1 ]
cmp edx 0x78
je r-xdata
cmp [ ebp - 0x10 ] 0x100
jne r-xdata
cmp [ ebp - 0x10 ] 0x100
je r-xdata
mov ecx [ ebp + 0x18 ]
call sub_403700
cmp eax [ ebp + 0x24 ]
jbe r-xdata
cmp [ ebp - 0x80 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x40 ]
movsx ecx [ eax ]
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x3c ]
call sub_406bb0
movsx ecx [ eax ]
cmp ecx 0x7f
je r-xdata
mov [ ebp - 0x74 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x20 ]
movsx ecx [ eax + 0x1 ]
cmp ecx 0x58
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40f400
movzx ecx al
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x68 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40f1e0
add esp 0x1c
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
push 0x0
push 0x0
mov ecx [ ebp + 0x18 ]
call sub_403720
mov ecx [ ebp - 0x1c ]
push ecx
movzx edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40e050
add esp 0x18
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_406b10
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x20 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x58 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40f170
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
mov eax [ ebp + 0x20 ]
add eax [ ebp - 0x18 ]
mov [ ebp + 0x20 ] eax
mov ecx [ ebp + 0x24 ]
sub ecx [ ebp - 0x18 ]
mov [ ebp + 0x24 ] ecx
mov edx [ ebp - 0x1c ]
push edx
movzx eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40e050
add esp 0x18
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x1c ]
push edx
movzx eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40e050
add esp 0x18
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x18 ]
call sub_403700
sub eax [ ebp + 0x24 ]
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov edx [ ebp - 0x40 ]
movsx eax [ edx ]
mov ecx [ ebp - 0x44 ]
sub ecx [ ebp - 0x18 ]
cmp eax ecx
jae r-xdata
mov edx [ ebp - 0x74 ]
mov [ ebp - 0x78 ] edx
jmp r-xdata
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
call sub_4036c0
and eax 0x1c0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x40
je r-xdata
mov edx [ ebp - 0x40 ]
movsx eax [ edx ]
mov ecx [ ebp - 0x44 ]
sub ecx eax
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x24 ]
add edx 0x1
sub edx [ ebp - 0x44 ]
push edx
mov eax [ ebp + 0x20 ]
add eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp + 0x24 ]
add ecx 0x1
sub ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x44 ]
mov eax [ ebp + 0x20 ]
lea ecx [ eax + edx + 0x1 ]
push ecx
call sub_4220d9
add esp 0x10
mov edx [ ebp + 0x20 ]
add edx [ ebp - 0x44 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x24 ]
add eax 0x1
mov [ ebp + 0x24 ] eax
mov ecx [ ebp - 0x40 ]
movsx edx [ ecx + 0x1 ]
test edx edx
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40 ]
add eax 0x1
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
movsx edx [ ecx ]
cmp edx 0x7f
je r-xdata
sub_40e000
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ecx ] edx
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0xc ]
pop ebp
retn
mov edx [ ebp + 0x18 ]
movzx eax [ edx ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_40f320
mov ecx eax
call sub_40f2c0
jmp r-xdata
mov eax [ ebp + 0x1c ]
sub eax 0x1
mov [ ebp + 0x1c ] eax
lea ecx [ ebp + 0x10 ]
call sub_40f330
mov ecx [ ebp + 0x18 ]
add ecx 0x1
mov [ ebp + 0x18 ] ecx
sub_40e050
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ edx ] eax
mov ecx [ ebp + 0x14 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0xc ]
pop ebp
retn
movzx ecx [ ebp + 0x18 ]
push ecx
lea ecx [ ebp + 0x10 ]
call sub_40f320
mov ecx eax
call sub_40f2c0
jmp r-xdata
mov eax [ ebp + 0x1c ]
sub eax 0x1
mov [ ebp + 0x1c ] eax
lea ecx [ ebp + 0x10 ]
call sub_40f330
sub_40e0a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
call eax
mov esp ebp
pop ebp
retn 0x10
sub_40e0d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
call eax
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e110
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
call eax
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_40f460
mov ecx [ ebp - 0x4 ]
call sub_402d80
mov esp ebp
pop ebp
retn
sub_40e1c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_406a90
mov edx [ ebp - 0x4 ]
or edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e200
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_406a90
mov edx [ ebp - 0x4 ]
or edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e240
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_406a90
mov edx [ ebp - 0x4 ]
or edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e150
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_40e2b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bf00
mov esp ebp
pop ebp
retn 0x4
sub_40e2e0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x18
call sub_40f4d0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
ja r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40e320
push ebp
mov ebp esp
push 0xffffffff
push sub_454bd0
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
or eax 0xf
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
call sub_40e2e0
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebp - 0x18 ]
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x14 ]
shr ecx 0x1
cmp ecx eax
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ edx + 0x14 ]
shr esi 0x1
mov ecx [ ebp - 0x1c ]
call sub_40e2e0
sub eax esi
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x14 ] eax
ja r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x18
call sub_40f4b0
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
call sub_40e2e0
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x14 ]
shr eax 0x1
mov ecx [ ebp - 0x1c ]
add eax [ ecx + 0x14 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_409420
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x14 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_40c1b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4094a0
push eax
mov edx [ ebp - 0x14 ]
push edx
call sub_402730
add esp 0xc
sub_40e3e3
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x18
call sub_40f4b0
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_40e4b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4094a0
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_4094a0
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x10 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov al 0x1
sub_40e4f0
push ebp
mov ebp esp
push 0xffffffff
push sub_455688
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_403760
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x20 ]
push edx
call sub_40fb50
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_402e30
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_4030b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_40e570
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0x8
sub_40e5b0
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x8 ]
push eax
call sub_40c610
add esp 0x4
mov ecx eax
call sub_4075b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov al [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
sub_40e600
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x8 ]
push eax
call sub_40c630
add esp 0x4
mov ecx eax
call sub_4075b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov al [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
sub_40e650
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40f500
movzx eax al
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
call sub_40f590
movzx ecx al
test ecx ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov al [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40e6c0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_409c80
add esp 0x4
mov ecx eax
call sub_409d00
mov ecx [ ebp - 0xc ]
cmp [ ecx ] eax
je r-xdata
mov [ ebp - 0x10 ] 0x1
lea edx [ ebp - 0x8 ]
push edx
call sub_409c60
add esp 0x4
mov ecx eax
call sub_409d00
mov ecx [ ebp - 0xc ]
cmp [ ecx ] eax
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov al [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_40e720
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_409ca0
add esp 0x4
mov ecx eax
call sub_409d00
mov ecx [ ebp - 0x8 ]
xor edx edx
cmp [ ecx ] eax
sete dl
mov al dl
mov esp ebp
pop ebp
retn
sub_40e750
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e6c0
movzx eax al
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
call sub_40e720
movzx ecx al
test ecx ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov al [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40e790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_409c40
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e7c0
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp + 0xc ]
call sub_40fa50
push eax
call sub_40efe0
add esp 0x4
movsx eax [ eax ]
test eax eax
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_40fa50
mov [ ebp - 0x4 ] eax
lea ecx [ ebp + 0xc ]
call sub_40fa30
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
push edx
call sub_40eff0
add esp 0x4
mov eax [ eax ]
push eax
call sub_40efe0
add esp 0x4
movsx ecx [ eax ]
test ecx ecx
je r-xdata
push r--data
call sub_420c03
mov ecx [ ebp - 0xc ]
push ecx
call sub_40f010
add esp 0x4
mov edx [ eax ]
push edx
call sub_40efe0
add esp 0x4
movsx eax [ eax ]
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_40fa50
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
push ecx
call sub_40eff0
add esp 0x4
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40eff0
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40eff0
add esp 0x4
mov esi eax
mov eax [ ebp - 0xc ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40f010
add esp 0x4
mov ecx [ ebp - 0xc ]
cmp ecx [ eax ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_40efe0
add esp 0x4
movsx eax [ eax ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_40efe0
add esp 0x4
movsx eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40f7d0
mov eax [ eax ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40f000
add esp 0x4
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov eax [ ebp - 0x10 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40f010
add esp 0x4
mov esi eax
mov eax [ ebp - 0xc ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40f000
add esp 0x4
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov ecx [ ebp - 0x14 ]
call sub_40f7d0
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
push edx
call sub_40eff0
add esp 0x4
mov eax [ eax ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40f7d0
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
cmp ecx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40f7d0
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x10 ]
push ecx
call sub_40eff0
add esp 0x4
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40efb0
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40f000
add esp 0x4
mov esi eax
mov eax [ ebp - 0xc ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40efd0
add esp 0x4
push eax
mov eax [ ebp - 0xc ]
push eax
call sub_40efd0
add esp 0x4
push eax
call sub_4110c0
add esp 0x8
mov ecx [ ebp - 0x14 ]
call sub_40f7b0
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40efe0
add esp 0x4
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40f920
add esp 0x4
push eax
call sub_411100
add esp 0x4
push eax
mov edx [ ebp - 0x14 ]
add edx 0xd
push edx
call sub_411110
add esp 0x8
push 0x1
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0xc
call sub_40ce30
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x8 ] 0x0
jbe r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40efe0
add esp 0x4
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40f970
add esp 0x4
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40f340
mov eax [ ebp + 0x8 ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x8 ]
sub eax 0x1
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp - 0x14 ]
call sub_40f7d0
mov edx [ ebp - 0x8 ]
cmp edx [ eax ]
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40efd0
add esp 0x4
movsx edx [ eax ]
cmp edx 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40f930
add esp 0x4
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40efb0
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
push eax
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov eax [ ebp - 0x8 ]
push eax
call sub_40efd0
add esp 0x4
movsx ecx [ eax ]
cmp ecx 0x1
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40f7b0
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_40eff0
add esp 0x4
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
push edx
call sub_40efd0
add esp 0x4
movsx eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x10 ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_40efd0
add esp 0x4
movsx edx [ eax ]
test edx edx
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_40efe0
add esp 0x4
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov edx [ ebp - 0x10 ]
push edx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40f7f0
mov ecx [ ebp - 0x10 ]
push ecx
call sub_40eff0
add esp 0x4
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0xc ]
push edx
call sub_40efe0
add esp 0x4
movsx eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov ecx [ ebp - 0x10 ]
push ecx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x0
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_40f680
mov eax [ ebp - 0x10 ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_40efd0
add esp 0x4
movsx edx [ eax ]
cmp edx 0x1
jne r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_40eff0
add esp 0x4
mov eax [ eax ]
push eax
call sub_40efd0
add esp 0x4
movsx ecx [ eax ]
cmp ecx 0x1
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_40eff0
add esp 0x4
mov eax [ eax ]
push eax
call sub_40efd0
add esp 0x4
movsx ecx [ eax ]
cmp ecx 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_40efd0
add esp 0x4
movsx edx [ eax ]
cmp edx 0x1
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_40f010
add esp 0x4
mov edx [ eax ]
push edx
call sub_40efd0
add esp 0x4
movsx eax [ eax ]
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
push eax
call sub_40efd0
add esp 0x4
movsx ecx [ eax ]
cmp ecx 0x1
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
push edx
call sub_40efd0
add esp 0x4
mov esi eax
mov eax [ ebp - 0xc ]
push eax
call sub_40efd0
add esp 0x4
mov cl [ esi ]
mov [ eax ] cl
mov edx [ ebp - 0x10 ]
push edx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov eax [ ebp - 0xc ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_40f7f0
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
push eax
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov ecx [ ebp - 0xc ]
push ecx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x0
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_40f680
mov eax [ ebp - 0x10 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
push eax
call sub_40efd0
add esp 0x4
mov [ eax ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
push ecx
call sub_40efd0
add esp 0x4
mov esi eax
mov edx [ ebp - 0xc ]
push edx
call sub_40efd0
add esp 0x4
mov cl [ esi ]
mov [ eax ] cl
mov edx [ ebp - 0x10 ]
push edx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov eax [ ebp - 0xc ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_40f680
jmp r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_40eff0
add esp 0x4
mov edx [ eax ]
push edx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x1
mov eax [ ebp - 0xc ]
push eax
call sub_40efd0
add esp 0x4
mov [ eax ] 0x0
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40f7f0
mov edx [ ebp - 0x10 ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
push edx
call sub_40efd0
add esp 0x4
mov [ eax ] 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_40ef50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40f7d0
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f5f0
mov ecx [ ebp - 0x4 ]
call sub_40f7d0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
call sub_40efb0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
call sub_40f7b0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
sub_40f020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40f9b0
lea edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_411130
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xd
call sub_40ce20
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40f0a0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x3fffffff
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40f110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_402870
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40f140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402870
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40f170
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0xc ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0x8
push edx
push 0x0
mov eax [ ebp + 0x18 ]
movzx ecx [ eax ]
push ecx
call sub_4110b0
add esp 0xc
movzx edx al
push edx
lea ecx [ ebp + 0x10 ]
call sub_40f320
mov ecx eax
call sub_40f2c0
jmp r-xdata
mov eax [ ebp + 0x1c ]
sub eax 0x1
mov [ ebp + 0x1c ] eax
lea ecx [ ebp + 0x10 ]
call sub_40f330
mov ecx [ ebp + 0x18 ]
add ecx 0x1
mov [ ebp + 0x18 ] ecx
sub_40f1e0
push ebp
mov ebp esp
sub esp 0x1c
jmp r-xdata
mov edx [ ebp + 0x1c ]
push edx
push 0x0
mov eax [ ebp + 0x18 ]
push eax
call sub_422d70
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0x18 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
movsx edx [ ebp + 0x20 ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40f170
add esp 0x18
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] edx
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0x18 ] eax
mov ecx [ ebp + 0x1c ]
sub ecx [ ebp - 0x8 ]
mov [ ebp + 0x1c ] ecx
jne r-xdata
jmp r-xdata
push 0x1
movzx eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40e050
add esp 0x18
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ecx ] edx
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x18 ]
add eax 0x1
mov [ ebp + 0x18 ] eax
mov ecx [ ebp + 0x1c ]
sub ecx 0x1
mov [ ebp + 0x1c ] ecx
sub_40f2c0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
movzx ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
mov ecx [ edx + 0x4 ]
call sub_4096c0
mov [ ebp - 0x4 ] eax
call sub_402810
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call sub_4027c0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_40f340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40fa10
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40f360
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_40fa30
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40f390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
sete al
mov esp ebp
pop ebp
retn 0x4
sub_40f3b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f390
movzx eax al
neg eax
sbb eax eax
add eax 0x1
mov esp ebp
pop ebp
retn 0x4
sub_40f420
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
call eax
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40f460
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_421eb4
add esp 0x4
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_421eb4
add esp 0x4
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
push edx
call sub_421eb4
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40f4d0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40f500
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_40c610
add esp 0x4
mov ecx eax
call sub_4075b0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
cmp eax [ ebp - 0x20 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40c5f0
add esp 0x4
mov ecx eax
call sub_4075b0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
cmp eax [ ebp - 0x2c ]
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp - 0x1c ]
je r-xdata
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp - 0x28 ]
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov al [ ebp - 0x30 ]
mov esp ebp
pop ebp
retn
sub_40f590
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_40c630
add esp 0x4
mov ecx eax
call sub_4075b0
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov al [ ebp - 0x1c ]
mov esp ebp
pop ebp
retn
sub_40f5f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40efe0
add esp 0x4
movsx eax [ eax ]
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40f010
add esp 0x4
mov edx [ eax ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40f5f0
mov eax [ ebp - 0x4 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f920
add esp 0x4
push eax
call sub_411100
add esp 0x4
push eax
mov eax [ ebp - 0x8 ]
add eax 0xd
push eax
call sub_411110
add esp 0x8
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0xc
call sub_40ce30
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
sub_40f680
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40eff0
add esp 0x4
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40eff0
add esp 0x4
mov eax [ eax ]
push eax
call sub_40efe0
add esp 0x4
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
call sub_40f7d0
mov edx [ ebp + 0x8 ]
cmp edx [ eax ]
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40eff0
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40f7d0
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40eff0
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40f7f0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40f010
add esp 0x4
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
push eax
call sub_40efe0
add esp 0x4
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
call sub_40f7d0
mov edx [ ebp + 0x8 ]
cmp edx [ eax ]
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40f7d0
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40f010
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f000
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40f930
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ eax ]
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40f010
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_40efe0
add esp 0x4
movsx edx [ eax ]
test edx edx
jne r-xdata
sub_40f970
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40eff0
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_40efe0
add esp 0x4
movsx edx [ eax ]
test edx edx
jne r-xdata
sub_40f9c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40f9e0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x3fffffff
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40fa10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40fa60
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40fa60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_402870
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40fa90
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push ecx
call sub_40efe0
add esp 0x4
movsx edx [ eax ]
test edx edx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push ecx
call sub_40f010
add esp 0x4
mov edx [ eax ]
push edx
call sub_40efe0
add esp 0x4
movsx eax [ eax ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
push eax
call sub_40f000
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40efe0
add esp 0x4
movsx eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
push edx
call sub_40f010
add esp 0x4
mov eax [ eax ]
push eax
call sub_40f970
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40f010
add esp 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
cmp ecx [ eax ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
jmp r-xdata
sub_40fb50
push ebp
mov ebp esp
push 0xffffffff
push sub_455658
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_420df3
mov [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_402c70
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402ea0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_403110
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_420e1b
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x1c ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
call sub_402cc0
mov ecx [ ebp - 0x20 ]
call sub_402d60
push r--data
lea ecx [ ebp - 0x2c ]
call sub_422424
push r--data
lea edx [ ebp - 0x2c ]
push edx
call sub_425ceb
jmp r-xdata
sub_40fc40
push ebp
mov ebp esp
push 0xffffffff
push sub_455b88
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_4026f0
add esp 0x4
xor ecx ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x4 ]
call sub_403700
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] edx
cmp [ ebp - 0x48 ] 0x0
jl r-xdata
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x58 ] 0x0
jg r-xdata
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x4 ]
call sub_4036c0
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x4
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_403700
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0x50 ]
cmp eax [ ebp - 0x1c ]
jl r-xdata
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_407000
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_40af90
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jg r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x4 ]
call sub_407030
mov ecx eax
call sub_412390
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x68 ]
cmp ecx [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x4 ]
call sub_403700
sub eax [ ebp - 0x20 ]
sbb edx [ ebp - 0x1c ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
mov ecx [ ebp - 0x54 ]
cmp ecx [ ebp - 0x20 ]
jbe r-xdata
push 0x0
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x4 ]
call sub_403720
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
or eax 0x4
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x64 ]
cmp edx [ ebp - 0x1c ]
je r-xdata
jg r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_40aee0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_40b000
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x24 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_409660
movzx eax al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_407030
mov ecx eax
call sub_4096c0
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x34 ] eax
call sub_402810
mov [ ebp - 0x38 ] eax
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jbe r-xdata
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x4
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_409660
movzx eax al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_407030
mov ecx eax
call sub_4096c0
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x3c ] eax
call sub_402810
mov [ ebp - 0x40 ] eax
lea ecx [ ebp - 0x3c ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
call sub_4027c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx 0x1
mov edx [ ebp - 0x24 ]
sbb edx 0x0
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x4
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx 0x1
mov edx [ ebp - 0x24 ]
sbb edx 0x0
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
sub_40ff40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0xc ]
mov [ edx + 0x2 ] ax
mov ecx [ ebp - 0x4 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + 0x4 ] dx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_40ff70
push ebp
mov ebp esp
sub esp 0x10
push esi
mov ecx [ ebp + 0x8 ]
add ecx 0x2
call sub_4040d0
movzx eax ax
mov ecx 0xe
sub ecx eax
mov eax ecx
cdq
mov ecx 0xc
idiv ecx
mov [ ebp - 0x8 ] ax
mov ecx [ ebp + 0x8 ]
call sub_403fb0
movzx edx ax
add edx 0x12c0
movzx eax [ ebp - 0x8 ]
sub edx eax
mov [ ebp - 0x4 ] dx
mov ecx [ ebp + 0x8 ]
add ecx 0x2
call sub_4040d0
movzx ecx ax
movzx edx [ ebp - 0x8 ]
imul edx edx 0xc
lea eax [ ecx + edx - 0x3 ]
mov [ ebp - 0x10 ] ax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
call sub_403e90
movzx ecx ax
movzx eax [ ebp - 0x10 ]
imul eax eax 0x99
add eax 0x2
cdq
mov esi 0x5
idiv esi
add ecx eax
movzx edx [ ebp - 0x4 ]
imul edx edx 0x16d
add ecx edx
movzx eax [ ebp - 0x4 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
add ecx eax
movzx eax [ ebp - 0x4 ]
cdq
mov esi 0x64
idiv esi
sub ecx eax
movzx eax [ ebp - 0x4 ]
cdq
mov esi 0x190
idiv esi
lea eax [ ecx + eax - 0x7d2d ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
pop esi
mov esp ebp
pop ebp
retn
sub_410040
push ebp
mov ebp esp
push ecx
lea ecx [ ebp + 0xc ]
call sub_4040d0
movzx eax ax
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x2
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x9
ja r-xdata
mov eax 0x1f
mov edx [ ebp - 0x4 ]
movzx eax [ edx + lookup_table_4100b4 ]
jmp [ eax * 4 + jump_table_4100a8 ]
movzx ecx [ ebp + 0x8 ]
push ecx
call sub_413ec0
add esp 0x4
movzx edx al
test edx edx
je r-xdata
mov eax 0x1e
jmp r-xdata
mov eax 0x1c
jmp r-xdata
mov eax 0x1d
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4100c0
push ebp
mov ebp esp
push 0xffffffff
push sub_455928
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_403b90
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_413f30
add esp 0x8
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x58 ]
push edx
call sub_413f60
add esp 0x8
push r--data
lea eax [ ebp - 0x58 ]
push eax
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_412790
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_410150
push ebp
mov ebp esp
push 0xffffffff
push sub_455058
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_403b90
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_413f90
add esp 0x8
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x58 ]
push edx
call sub_413fc0
add esp 0x8
push r--data
lea eax [ ebp - 0x58 ]
push eax
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_412910
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4101e0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
neg eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_410210
push ebp
mov ebp esp
push 0xffffffff
push sub_455b58
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_403b90
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
call sub_413ff0
add esp 0x8
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0xac ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0xa4 ]
push edx
call sub_414020
add esp 0x8
push r--data
lea eax [ ebp - 0xa4 ]
push eax
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x54 ]
call sub_412a90
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4102c0
push ebp
mov ebp esp
push 0xffffffff
push sub_455028
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_403b90
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_414050
add esp 0x8
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x58 ]
push edx
call sub_414080
add esp 0x8
push r--data
lea eax [ ebp - 0x58 ]
push eax
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_412c20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_410350
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
call eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404d20
add esp 0x4
pop ebp
retn
sub_410370
push ebp
mov ebp esp
push 0xffffffff
push sub_456000
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_412da0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x28 ]
call sub_405730
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_405910
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x20 ]
call sub_407bc0
lea ecx [ ebp - 0x14 ]
call sub_412dc0
mov [ ebp - 0x15 ] 0x0
mov dl [ ebp - 0x15 ]
mov [ ebp - 0x22 ] dl
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_405930
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_412de0
mov al [ ebp - 0x22 ]
sub esp 0x20
mov ecx 0x8
lea esi [ ebp + 0xc ]
mov edi esp
[ edi ] [ esi ]
lea ecx [ ebp - 0x1c ]
call sub_405960
mov ecx eax
call sub_4055a0
movzx ecx al
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405960
mov ecx eax
call sub_4055e0
mov [ ebp - 0x15 ] al
jmp r-xdata
mov [ ebp - 0x21 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_405930
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_412de0
mov al [ ebp - 0x21 ]
jmp r-xdata
movzx eax [ ebp - 0x15 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
sub_410480
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
[ edx ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x10
sub_4104b0
push ebp
mov ebp esp
push 0xffffffff
push sub_455b28
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_403b90
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
call sub_4140b0
add esp 0x8
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0xac ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0xa4 ]
push edx
call sub_4140e0
add esp 0x8
push r--data
lea eax [ ebp - 0xa4 ]
push eax
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x54 ]
call sub_412e00
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_410560
push ebp
mov ebp esp
push 0xffffffff
push sub_454bab
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_403cc0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x10 ]
add edx 0x4
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_414110
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_4105e0
push ebp
mov ebp esp
sub esp 0x8
push ecx
mov ecx esp
lea eax [ ebp + 0x10 ]
push eax
call sub_4124e0
lea ecx [ ebp - 0x4 ]
call sub_4124c0
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_412490
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_410610
push ebp
mov ebp esp
push 0xffffffff
push sub_4560ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x28 ]
add eax 0xc
push eax
lea ecx [ ebp - 0x10 ]
call sub_408140
mov [ ebp - 0x4 ] 0x0
push 0x4
call sub_423fd3
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_414160
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_412f90
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x14 ]
call sub_412ff0
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x28 ]
call sub_412430
lea ecx [ ebp - 0x14 ]
call sub_413000
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_412fb0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_408170
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_4106f0
push ebp
mov ebp esp
push 0xffffffff
push sub_454b78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_420df3
mov [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_402c70
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402ea0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_412500
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_420e1b
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x1c ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
call sub_402cc0
mov ecx [ ebp - 0x20 ]
call sub_402d60
push r--data
lea ecx [ ebp - 0x2c ]
call sub_422424
push r--data
lea edx [ ebp - 0x2c ]
push edx
call sub_425ceb
jmp r-xdata
sub_4107f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_4141e0
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4141f0
pop ebp
retn
sub_410810
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_414240
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_412410
pop ebp
retn
sub_410830
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_414250
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_414260
add esp 0x10
mov esp ebp
pop ebp
retn
sub_410890
push ebp
mov ebp esp
push 0xffffffff
push sub_454b48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_420df3
mov [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_402c70
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402ea0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_4125d0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_420e1b
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x1c ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
call sub_402cc0
mov ecx [ ebp - 0x20 ]
call sub_402d60
push r--data
lea ecx [ ebp - 0x2c ]
call sub_422424
push r--data
lea edx [ ebp - 0x2c ]
push edx
call sub_425ceb
jmp r-xdata
sub_410980
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4142a0
add esp 0x8
movzx eax al
neg eax
sbb eax eax
add eax 0x1
pop ebp
retn
sub_4109a0
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jl r-xdata
mov eax [ ebp + 0x8 ]
neg eax
mov ecx [ ebp + 0xc ]
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4109f0
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e650
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40f590
movzx edx al
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_40e650
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c630
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40f590
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_4075b0
mov ecx [ ebp - 0x4 ]
mov esi [ ecx ]
sub esi eax
mov eax [ ecx + 0x4 ]
sbb eax edx
push eax
push esi
mov ecx [ ebp + 0x8 ]
call sub_409a00
mov eax [ ebp + 0x8 ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ edx ]
push ecx
call sub_40c690
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ecx ]
push eax
call sub_40e5b0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_4075b0
push edx
push eax
call sub_40c690
add esp 0x8
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40f500
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_4075b0
push edx
push eax
call sub_40e5b0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c630
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_4075b0
push edx
push eax
call sub_40c690
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_4075b0
push edx
push eax
call sub_40e5b0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c610
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c5f0
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_410b70
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] 0xd53e8000
mov [ ebp - 0xc ] 0x19db1de
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax 0xd53e8000
mov ecx [ ebp - 0x4 ]
sbb ecx 0x19db1de
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xa
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_431430
mov esp ebp
pop ebp
retn
sub_410bc0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_414250
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4142b0
add esp 0x10
mov esp ebp
pop ebp
retn
sub_410c00
push ebp
mov ebp esp
push 0xffffffff
push sub_454b18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_420df3
mov [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_402c70
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402ea0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_4126a0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_420e1b
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x1c ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
call sub_402cc0
mov ecx [ ebp - 0x20 ]
call sub_402d60
push r--data
lea ecx [ ebp - 0x2c ]
call sub_422424
push r--data
lea edx [ ebp - 0x2c ]
push edx
call sub_425ceb
jmp r-xdata
sub_410cf0
push ebp
mov ebp esp
push 0xffffffff
push sub_4558f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_403b90
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_4142e0
add esp 0x8
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x58 ]
push edx
call sub_414310
add esp 0x8
push r--data
lea eax [ ebp - 0x58 ]
push eax
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_413030
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_410d80
push ebp
mov ebp esp
push 0xffffffff
push sub_4558c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_403b90
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_414340
add esp 0x8
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x58 ]
push edx
call sub_414370
add esp 0x8
push r--data
lea eax [ ebp - 0x58 ]
push eax
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_4131b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_410e10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e650
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40f590
movzx edx al
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_40e750
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c630
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40e720
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d00
xor ecx ecx
mov edx [ ebp - 0x4 ]
add eax [ edx ]
adc ecx [ edx + 0x4 ]
push ecx
push eax
mov ecx [ ebp + 0x8 ]
call sub_409a00
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ edx ]
push ecx
call sub_40c690
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ecx ]
push eax
call sub_40e5b0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d00
push eax
call sub_40c950
add esp 0x4
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40f500
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d00
push eax
call sub_40c980
add esp 0x4
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c630
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d00
push eax
call sub_40c980
add esp 0x4
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d00
push eax
call sub_40c950
add esp 0x4
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c5f0
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c610
add esp 0x4
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_410f80
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4143a0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4143b0
add esp 0x10
mov esp ebp
pop ebp
retn
sub_410fc0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4143e0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4143f0
add esp 0x10
mov esp ebp
pop ebp
retn
sub_411000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_414420
add esp 0x10
mov esp ebp
pop ebp
retn 0xc
sub_411050
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
cmp [ ebp + 0x8 ] 0x15555555
ja r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_402620
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_425ceb
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push eax
call sub_423fd3
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4110c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_414470
add esp 0x4
mov cl [ eax ]
mov [ ebp - 0x1 ] cl
mov edx [ ebp + 0xc ]
push edx
call sub_414470
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ eax ]
mov [ ecx ] dl
lea eax [ ebp - 0x1 ]
push eax
call sub_414470
add esp 0x4
mov ecx [ ebp + 0xc ]
mov dl [ eax ]
mov [ ecx ] dl
mov esp ebp
pop ebp
retn
sub_411140
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
cmp [ ebp + 0x8 ] 0x7ffffff
ja r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_402620
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_425ceb
mov eax [ ebp + 0x8 ]
shl eax 0x5
push eax
call sub_423fd3
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4111a0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
cmp [ ebp + 0x8 ] 0x3fffffff
ja r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_402620
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_425ceb
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
call sub_423fd3
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_411200
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
ja r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_402620
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_425ceb
mov eax [ ebp + 0x8 ]
push eax
call sub_423fd3
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_411260
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp + 0x8 ]
add ecx 0x4
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_4123c0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4112f0
push ebp
mov ebp esp
push 0xffffffff
push sub_454ffc
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4113e0
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x20 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_4112b0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_4113e0
push ebp
mov ebp esp
push 0xffffffff
push sub_454fb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_411470
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0xc
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_411260
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xc ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_411470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4114a0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4114a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4114d0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4114d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4224c5
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_411520
push ebp
mov ebp esp
push 0xffffffff
push sub_454aec
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411610
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x20 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_4112b0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_411610
push ebp
mov ebp esp
push 0xffffffff
push sub_454aa8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_402c20
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0xc
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_411260
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xc ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_4116c0
push ebp
mov ebp esp
push 0xffffffff
push sub_45562c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4117b0
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x30 ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x44 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx + 0x40 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov [ eax + 0x44 ] r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x44 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_4112b0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_4117b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4555e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_411840
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x30
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x30
call sub_411260
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x30 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_411840
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_411870
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_411870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4118a0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4118a0
push ebp
mov ebp esp
push 0xffffffff
push sub_454f88
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_402c20
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov ecx [ edx + 0x10 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0xc ] eax
mov [ edx + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x14
call sub_412310
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_411950
push ebp
mov ebp esp
push 0xffffffff
push sub_454a7c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411a40
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x20 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_4112b0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_411a40
push ebp
mov ebp esp
push 0xffffffff
push sub_454a38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_411ad0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0xc
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_411260
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xc ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_411ad0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4224c5
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_411b20
push ebp
mov ebp esp
push 0xffffffff
push sub_4555bc
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411c10
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x30 ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x44 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx + 0x40 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov [ eax + 0x44 ] r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x44 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_4112b0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_411c10
push ebp
mov ebp esp
push 0xffffffff
push sub_455578
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_411ca0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x30
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x30
call sub_411260
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x30 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_411ca0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_411870
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_411cf0
push ebp
mov ebp esp
push 0xffffffff
push sub_454f5c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411de0
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x20 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_4112b0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_411de0
push ebp
mov ebp esp
push 0xffffffff
push sub_454f18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_411e70
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0xc
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_411260
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xc ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_411e70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4114a0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_411ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_454eec
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411fb0
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x20 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_4112b0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_411fb0
push ebp
mov ebp esp
push 0xffffffff
push sub_454ea8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_412040
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0xc
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_411260
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xc ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_412040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4114a0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_412070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4112d0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4120a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412790
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4120d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_411500
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_412100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412910
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_412130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4116a0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_412160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412a90
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_412190
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_411930
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4121c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412c20
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4121f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_411b00
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_412220
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412e00
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_412250
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_411cd0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_412280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413030
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4122b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_411ea0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4122e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4131b0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_412310
push ebp
mov ebp esp
push 0xffffffff
push sub_454e78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
add eax 0x18
push ecx
mov ecx esp
mov [ ebp - 0x10 ] esp
push eax
call sub_409540
mov ecx [ ebp - 0x14 ]
call sub_409500
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_409420
push 0xffffffff
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40bf00
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_412390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
call eax
mov esp ebp
pop ebp
retn 0xc
sub_4123c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
call sub_40c5c0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_412410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_414490
add esp 0x8
mov esp ebp
pop ebp
retn 0x8
sub_412430
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_408040
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4144e0
add esp 0x4
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4144f0
mov esp ebp
pop ebp
retn 0x4
sub_412490
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_412500
push ebp
mov ebp esp
push 0xffffffff
push sub_454a0b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x3c ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push 0x10
call sub_423fd3
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x44 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_402e80
push eax
lea ecx [ ebp - 0x38 ]
call sub_402a00
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x3c ]
or ecx 0x1
mov [ ebp - 0x3c ] ecx
push 0x0
mov edx [ ebp - 0x40 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_413430
mov [ ebp - 0x44 ] eax
jmp r-xdata
and [ ebp - 0x3c ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
call sub_402ad0
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx ] edx
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
sub_4125d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4549db
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x3c ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push 0x8
call sub_423fd3
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x44 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_402e80
push eax
lea ecx [ ebp - 0x38 ]
call sub_402a00
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x3c ]
or ecx 0x1
mov [ ebp - 0x3c ] ecx
push 0x0
mov edx [ ebp - 0x40 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_413470
mov [ ebp - 0x44 ] eax
jmp r-xdata
and [ ebp - 0x3c ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
call sub_402ad0
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx ] edx
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
sub_4126a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4549b4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x3c ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push 0x18
call sub_423fd3
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_402e80
push eax
lea ecx [ ebp - 0x38 ]
call sub_402a00
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x3c ]
or edx 0x1
mov [ ebp - 0x3c ] edx
push 0x1
push 0x0
mov eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4134b0
mov [ ebp - 0x48 ] eax
jmp r-xdata
and [ ebp - 0x3c ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
call sub_402ad0
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ edx ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x3c ]
and ecx 0x1
je r-xdata
sub_412790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a50
mov ecx [ ebp - 0x4 ]
call sub_403e50
mov esp ebp
pop ebp
retn
sub_4127d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x1c ] edx
mov ecx [ ebp - 0x4 ]
call sub_412790
mov esp ebp
pop ebp
retn
sub_412830
push ebp
mov ebp esp
push 0xffffffff
push sub_45554b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
push 0x2c
call sub_423fd3
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x19 ] al
push 0x1
movzx ecx [ ebp - 0x19 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx 0x28
push edx
mov ecx [ ebp - 0x18 ]
call sub_413520
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx + 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4128e0
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x30 ] ecx
push 0x1
mov eax [ ebp - 0x30 ]
sub eax 0x28
push eax
lea ecx [ ebp - 0x2c ]
call sub_4112f0
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call sub_425ceb
mov esp ebp
pop ebp
retn
sub_412910
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a50
mov ecx [ ebp - 0x4 ]
call sub_4029e0
mov esp ebp
pop ebp
retn
sub_412950
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x1c ] edx
mov ecx [ ebp - 0x4 ]
call sub_412910
mov esp ebp
pop ebp
retn
sub_4129b0
push ebp
mov ebp esp
push 0xffffffff
push sub_454e4b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
push 0x2c
call sub_423fd3
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x19 ] al
push 0x1
movzx ecx [ ebp - 0x19 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx 0x28
push edx
mov ecx [ ebp - 0x18 ]
call sub_413630
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx + 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_412a60
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x30 ] ecx
push 0x1
mov eax [ ebp - 0x30 ]
sub eax 0x28
push eax
lea ecx [ ebp - 0x2c ]
call sub_411520
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call sub_425ceb
mov esp ebp
pop ebp
retn
sub_412a90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x30
call sub_403a50
mov ecx [ ebp - 0x4 ]
call sub_4048f0
mov esp ebp
pop ebp
retn
sub_412ad0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx + 0x44 ] r--data
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x40 ] edx
mov ecx [ ebp - 0x4 ]
call sub_412a90
mov esp ebp
pop ebp
retn
sub_412b30
push ebp
mov ebp esp
push 0xffffffff
push sub_45589b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
push 0x50
call sub_423fd3
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x19 ] al
push 0x1
movzx ecx [ ebp - 0x19 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx 0x4c
push edx
mov ecx [ ebp - 0x18 ]
call sub_413740
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx + 0x44 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_412be0
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5c ] ecx
push 0x1
mov eax [ ebp - 0x5c ]
sub eax 0x4c
push eax
lea ecx [ ebp - 0x58 ]
call sub_4116c0
push r--data
lea ecx [ ebp - 0x58 ]
push ecx
call sub_425ceb
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_412c20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a50
mov ecx [ ebp - 0x4 ]
call sub_402680
mov esp ebp
pop ebp
retn
sub_412c60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x1c ] edx
mov ecx [ ebp - 0x4 ]
call sub_412c20
mov esp ebp
pop ebp
retn
sub_412cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_454e1b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
push 0x2c
call sub_423fd3
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x19 ] al
push 0x1
movzx ecx [ ebp - 0x19 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx 0x28
push edx
mov ecx [ ebp - 0x18 ]
call sub_413850
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx + 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_412d70
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x30 ] ecx
push 0x1
mov eax [ ebp - 0x30 ]
sub eax 0x28
push eax
lea ecx [ ebp - 0x2c ]
call sub_411950
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call sub_425ceb
mov esp ebp
pop ebp
retn
sub_412da0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_412de0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
call sub_40a8d0
sub_412e00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x30
call sub_403a50
mov ecx [ ebp - 0x4 ]
call sub_404840
mov esp ebp
pop ebp
retn
sub_412e40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx + 0x44 ] r--data
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x40 ] edx
mov ecx [ ebp - 0x4 ]
call sub_412e00
mov esp ebp
pop ebp
retn
sub_412ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_45586b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
push 0x50
call sub_423fd3
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x19 ] al
push 0x1
movzx ecx [ ebp - 0x19 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx 0x4c
push edx
mov ecx [ ebp - 0x18 ]
call sub_413960
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx + 0x44 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_412f50
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5c ] ecx
push 0x1
mov eax [ ebp - 0x5c ]
sub eax 0x4c
push eax
lea ecx [ ebp - 0x58 ]
call sub_411b20
push r--data
lea ecx [ ebp - 0x58 ]
push ecx
call sub_425ceb
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_412fb0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_406720
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_413000
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_413030
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a50
mov ecx [ ebp - 0x4 ]
call sub_403f70
mov esp ebp
pop ebp
retn
sub_413070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x1c ] edx
mov ecx [ ebp - 0x4 ]
call sub_413030
mov esp ebp
pop ebp
retn
sub_4130d0
push ebp
mov ebp esp
push 0xffffffff
push sub_45551b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
push 0x2c
call sub_423fd3
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x19 ] al
push 0x1
movzx ecx [ ebp - 0x19 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx 0x28
push edx
mov ecx [ ebp - 0x18 ]
call sub_413a70
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx + 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_413180
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x30 ] ecx
push 0x1
mov eax [ ebp - 0x30 ]
sub eax 0x28
push eax
lea ecx [ ebp - 0x2c ]
call sub_411cf0
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call sub_425ceb
mov esp ebp
pop ebp
retn
sub_4131b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a50
mov ecx [ ebp - 0x4 ]
call sub_404090
mov esp ebp
pop ebp
retn
sub_4131f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x1c ] edx
mov ecx [ ebp - 0x4 ]
call sub_4131b0
mov esp ebp
pop ebp
retn
sub_413250
push ebp
mov ebp esp
push 0xffffffff
push sub_4554eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
push 0x2c
call sub_423fd3
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x19 ] al
push 0x1
movzx ecx [ ebp - 0x19 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx 0x28
push edx
mov ecx [ ebp - 0x18 ]
call sub_413b80
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx + 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_413300
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x30 ] ecx
push 0x1
mov eax [ ebp - 0x30 ]
sub eax 0x28
push eax
lea ecx [ ebp - 0x2c ]
call sub_411ec0
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call sub_425ceb
mov esp ebp
pop ebp
retn
sub_413330
push ebp
mov ebp esp
push 0xffffffff
push sub_455e30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x74 ] ecx
mov eax [ ebp - 0x74 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x74 ]
call sub_40a9b0
movzx eax al
test eax eax
jne r-xdata
push r--data
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_404810
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x7c ]
push edx
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_404840
mov eax [ ebp - 0x74 ]
mov ecx [ eax ]
call sub_4051b0
mov ecx [ ebp - 0x74 ]
mov [ ecx + 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
push r--data
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_404810
mov [ ebp - 0x80 ] eax
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x84 ]
push edx
call sub_4104b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_404840
sub_413430
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402da0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_413cb0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_413470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402f60
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_413ce0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_4134b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4548f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_402da0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
movzx edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_413cf0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_413520
push ebp
mov ebp esp
push 0xffffffff
push sub_4554c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4113e0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_413630
push ebp
mov ebp esp
push 0xffffffff
push sub_454df4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411610
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_413740
push ebp
mov ebp esp
push 0xffffffff
push sub_455844
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4117b0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x30 ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x44 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x40 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x44 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0x30
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x30
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_413850
push ebp
mov ebp esp
push 0xffffffff
push sub_454db4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411a40
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_413960
push ebp
mov ebp esp
push 0xffffffff
push sub_455804
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411c10
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x30 ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x44 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x40 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x44 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0x30
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x30
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_413a70
push ebp
mov ebp esp
push 0xffffffff
push sub_455484
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411de0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_413b80
push ebp
mov ebp esp
push 0xffffffff
push sub_455444
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411fb0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_413cb0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402bc0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov esp ebp
pop ebp
retn 0x4
sub_413cf0
push ebp
mov ebp esp
push 0xffffffff
push sub_4548d0
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x50
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_402bf0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x50 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x50 ]
mov [ edx + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x0
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x54 ] r--data
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402bc0
push eax
push 0x0
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
movzx ecx [ eax ]
push ecx
call sub_4110b0
add esp 0xc
mov edx [ ebp - 0x50 ]
mov [ edx + 0xc ] al
lea eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402bc0
push eax
push 0x0
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
movzx eax [ edx ]
push eax
call sub_4110b0
add esp 0xc
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xd ] al
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402bc0
push eax
push 0x0
mov ecx [ ebp - 0x54 ]
push ecx
call sub_414580
add esp 0xc
mov [ ebp - 0x58 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
mov [ edx + 0x8 ] eax
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402bc0
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_402c00
push eax
call sub_414580
add esp 0xc
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x5c ]
mov [ edx + 0x10 ] eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402bc0
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_402c10
push eax
call sub_414580
add esp 0xc
mov [ ebp - 0x60 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x60 ]
mov [ edx + 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402bc0
push eax
push 0x0
push 0x2e
call sub_4110b0
add esp 0xc
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xc ] al
lea edx [ ebp - 0x4c ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_402bc0
push eax
push 0x0
push 0x2c
call sub_4110b0
add esp 0xc
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xd ] al
sub_413ec0
push ebp
mov ebp esp
push ecx
lea ecx [ ebp + 0x8 ]
call sub_403fb0
movzx eax ax
and eax 0x80000003
jns r-xdata
test eax eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x8 ]
call sub_403fb0
movzx eax ax
cdq
mov ecx 0x64
idiv ecx
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call sub_403fb0
movzx eax ax
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_413f30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4146e0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_413f60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414720
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_413f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414830
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_413fc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414870
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_413ff0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414980
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4149c0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414ad0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414080
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414b10
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4140b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414c20
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4140e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414c60
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414110
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_415040
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_403d00
lea ecx [ ebp - 0x4 ]
call sub_403ce0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403d30
add esp 0xc
mov esp ebp
pop ebp
retn
sub_414160
push ebp
mov ebp esp
push 0xffffffff
push sub_455df8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_415100
add esp 0x8
push eax
lea ecx [ ebp - 0x14 ]
push ecx
call sub_415110
add esp 0x8
push eax
mov edx [ ebp - 0x18 ]
push edx
call sub_415140
add esp 0x8
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_405290
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_4141f0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x4
call sub_4026d0
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_4141e0
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
call sub_407b90
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov esp ebp
pop ebp
retn 0x8
sub_414260
push ebp
mov ebp esp
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp edx [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_415180
add esp 0x4
push eax
mov ecx [ ebp + 0x10 ]
call sub_4146a0
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x4
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp + 0x8 ] ecx
sub_4142b0
push ebp
mov ebp esp
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_415190
add esp 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp + 0x8 ] eax
sub_4142e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414d70
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414310
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414db0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414ec0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414370
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414f00
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4143b0
push ebp
mov ebp esp
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_4151b0
add esp 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp + 0x8 ] eax
sub_4143f0
push ebp
mov ebp esp
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_4151d0
add esp 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp + 0x8 ] eax
sub_414420
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_414250
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4151f0
add esp 0x4
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_415200
add esp 0x18
mov esp ebp
pop ebp
retn
sub_414490
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
push 0x4
call sub_4026d0
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp + 0xc ]
push edx
call sub_414240
add esp 0x4
push eax
mov ecx [ ebp - 0xc ]
call sub_407b90
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
sub_4144f0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea ecx [ ebp + 0x8 ]
call sub_40a7c0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push eax
call sub_4144e0
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40a6f0
add esp 0x4
mov edx [ eax ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4152d0
mov [ ebp - 0x4 ] eax
push 0x1
mov ecx [ ebp - 0xc ]
call sub_40d260
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40a6f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
push eax
call sub_40a6f0
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_40a6e0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
sub_414580
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov al [ edx ]
mov [ ebp - 0x19 ] al
add [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
call sub_42025a
add esp 0x4
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
sub_414610
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_414640
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_4146a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
call sub_407bf0
mov ecx eax
call sub_415010
lea ecx [ ebp - 0x4 ]
call sub_407bc0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_4146e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_411470
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a10
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_414720
push ebp
mov ebp esp
push 0xffffffff
push sub_455404
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4113e0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_414830
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402c20
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a10
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_414870
push ebp
mov ebp esp
push 0xffffffff
push sub_454d74
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411610
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_414980
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_411840
mov ecx [ ebp - 0x4 ]
add ecx 0x30
call sub_403a10
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4149c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4557c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4117b0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x30 ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x44 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x40 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x44 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0x30
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x30
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_414ad0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_411ad0
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a10
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_414b10
push ebp
mov ebp esp
push 0xffffffff
push sub_454d34
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411a40
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_414c20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_411ca0
mov ecx [ ebp - 0x4 ]
add ecx 0x30
call sub_403a10
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_414c60
push ebp
mov ebp esp
push 0xffffffff
push sub_455784
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411c10
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x30 ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x44 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x44 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x44 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x40 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x44 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0x30
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x30
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_414d70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_411e70
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a10
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_414db0
push ebp
mov ebp esp
push 0xffffffff
push sub_4553c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411de0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_414ec0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_412040
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_403a10
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_414f00
push ebp
mov ebp esp
push 0xffffffff
push sub_455384
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_411fb0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xc ] r--data
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx + 0x20 ] r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax + 0x1c ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x20 ] r--data
mov ecx [ ebp - 0x14 ]
add ecx 0x28
call sub_413c90
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0xc
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_403ac0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_415010
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0x4
sub_415040
push ebp
mov ebp esp
push 0xffffffff
push sub_4548b0
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x0
push 0x10
call sub_423fd3
add esp 0x4
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_415420
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
mov [ ecx ] edx
jmp r-xdata
sub_415110
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_415100
add esp 0x8
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_415140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
push 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_415590
add esp 0x8
push eax
call sub_4155a0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_407ae0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_415200
push ebp
mov ebp esp
push 0xffffffff
push sub_455740
mov eax [ fs : 0x0 ]
push eax
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
call sub_415670
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
add ecx 0x4
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp + 0x8 ] edx
sub_41526b
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp + 0x10 ]
je r-xdata
push 0x0
push 0x0
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
call sub_415190
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x4
mov [ ebp - 0x14 ] ecx
sub_4152d0
push ebp
mov ebp esp
push 0xffffffff
push sub_454970
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ecx
push 0x1
mov ecx [ ebp - 0x18 ]
add ecx 0x8
call sub_40d2f0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
push eax
call sub_40a6e0
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_40a6f0
add esp 0x4
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov edx [ ebp + 0x10 ]
push edx
call sub_4144e0
add esp 0x4
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_40d2a0
add esp 0x4
push eax
call sub_411030
add esp 0x4
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x9
push ecx
call sub_415690
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_415420
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403ba0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4154b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4154e0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_415500
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_403a00
xor eax eax
mov [ ebp - 0x2 ] al
push 0x0
lea ecx [ ebp - 0x1 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
movzx eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x4
call sub_4156e0
mov esp ebp
pop ebp
retn
sub_415540
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
push 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov edx [ ebp - 0x4 ]
add edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + ecx ]
mov ecx edx
mov edx [ eax ]
call edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4155a0
push ebp
mov ebp esp
push 0xffffffff
push sub_455dd1
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x54
call sub_404c90
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
push eax
push 0x54
call sub_4026d0
add esp 0x8
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_415820
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
jmp r-xdata
sub_415670
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_4158c0
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_415780
pop ebp
retn
sub_415690
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_4144e0
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4157d0
pop ebp
retn
sub_4156e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
call sub_4158d0
mov ecx [ eax ]
push ecx
push 0x0
mov edx [ ebp + 0xc ]
push edx
call sub_415860
add esp 0x8
mov eax [ eax ]
call eax
add esp 0x4
mov esp ebp
pop ebp
retn 0x10
sub_415720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404ee0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_415750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_407bc0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_415780
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x4
call sub_4026d0
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_4158c0
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
call sub_407bf0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov esp ebp
pop ebp
retn 0x8
sub_4157d0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x4
call sub_4026d0
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_4144e0
add esp 0x4
mov edx [ ebp - 0x8 ]
mov eax [ eax ]
mov [ edx ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov esp ebp
pop ebp
retn 0x8
sub_415820
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404d70
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_415590
add esp 0x8
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] edx
mov [ ecx + 0x50 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_415870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4158a0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_423b7f
add esp 0x4
sub_415b60
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi eax
mov eax 0x5e6ea9af
mul ebx
shr edx 0xb
imul edx edx 0x15b0
push edi
mov edi ecx
movzx ecx di
shr edi 0x10
sub ebx edx
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
lea eax [ esi + 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
pop edi
shl eax 0x10
pop esi
add eax ecx
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
cmp ebx 0x7
jbe r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
cmp edx ebx
jae r-xdata
mov eax 0x7
sub eax esi
mov [ ebp - 0x8 ] eax
mov eax 0x80078071
mul ecx
shr edx 0xf
imul edx edx 0xffff000f
add ecx edx
mov eax 0x80078071
mul edi
shr edx 0xf
imul edx edx 0xffff000f
add edi edx
sub [ ebp + 0x8 ] ebx
mov ebx 0x15b0
jne r-xdata
mov eax ebx
sub eax edx
cmp eax 0x2
jl r-xdata
movzx eax [ esi ]
add ecx eax
movzx eax [ esi + 0x1 ]
add edi ecx
add ecx eax
movzx eax [ esi + 0x2 ]
add edi ecx
add ecx eax
movzx eax [ esi + 0x3 ]
add edi ecx
add ecx eax
movzx eax [ esi + 0x4 ]
add edi ecx
add ecx eax
movzx eax [ esi + 0x5 ]
add edi ecx
add ecx eax
movzx eax [ esi + 0x6 ]
add edi ecx
add ecx eax
movzx eax [ esi + 0x7 ]
add edi ecx
add ecx eax
mov eax [ ebp - 0x8 ]
add esi 0x8
add eax esi
add edi ecx
add edx 0x8
cmp eax ebx
jb r-xdata
cmp edx ebx
jae r-xdata
mov eax ebx
sub eax edx
sub eax 0x2
shr eax 0x1
inc eax
lea edx [ edx + eax * 2 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
add edi eax
movzx eax [ esi ]
add ecx eax
add edi ecx
inc esi
movzx edx [ esi ]
add ecx edx
movzx edx [ esi + 0x1 ]
add [ ebp - 0x4 ] ecx
add ecx edx
add [ ebp - 0x8 ] ecx
add esi 0x2
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
sub_415ca0
push esi
mov esi ecx
not eax
test edx edx
je r-xdata
not eax
pop esi
retn
push edi
lea ebx [ ebx ]
mov cl [ esi ]
movzx ecx cl
mov edi ecx
xor edi eax
and edi 0xf
shr eax 0x4
xor eax [ edi * 4 + r--data ]
shr ecx 0x4
mov edi eax
and edi 0xf
xor ecx edi
shr eax 0x4
xor eax [ ecx * 4 + r--data ]
inc esi
dec edx
jne r-xdata
pop edi
sub_415d80
push esi
push edi
mov esi eax
xor edi edi
cmp esi edi
jne r-xdata
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x18 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x14 ] edi
cmp [ esi + 0x20 ] edi
jne r-xdata
lea eax [ edi - 0x2 ]
pop edi
pop esi
retn
cmp [ esi + 0x24 ] edi
jne r-xdata
mov [ esi + 0x20 ] sub_415d00
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x20 ]
push 0x4df40
push 0x1
push eax
call ecx
mov edx eax
add esp 0xc
cmp edx edi
jne r-xdata
mov [ esi + 0x24 ] sub_415d20
mov edi 0x7080
xor ecx ecx
xor eax eax
mov [ esi + 0x1c ] edx
call sub_41b080
test eax eax
je r-xdata
pop edi
mov eax 0xfffffffc
pop esi
retn
pop edi
xor eax eax
pop esi
retn
call sub_415f60
pop edi
mov eax 0xffffd8f0
pop esi
retn
sub_415e10
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax 0xfffffffe
retn
mov edx [ eax + 0x1c ]
cmp edx ecx
je r-xdata
cmp [ eax + 0x20 ] ecx
je r-xdata
cmp [ eax + 0x24 ] ecx
je r-xdata
mov [ eax + 0x14 ] ecx
mov [ eax + 0x8 ] ecx
push edi
mov edi [ edx + 0x8 ]
xor eax eax
call sub_41b080
xor eax eax
pop edi
retn
sub_415e50
push ebp
mov ebp esp
sub esp 0x8
push edi
xor edi edi
test esi esi
je r-xdata
mov eax 0xfffffffe
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ esi + 0xc ]
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
cmp [ ecx + 0x6c ] 0x1
jne r-xdata
lea eax [ edi - 0x5 ]
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
push 0x4
push eax
push ecx
lea eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
call sub_41ad10
mov ecx [ ebp - 0x4 ]
add [ esi ] ecx
sub [ esi + 0x4 ] ecx
add [ esi + 0x8 ] ecx
mov ecx [ esi + 0x1c ]
mov edx [ ecx + 0x18 ]
mov ecx [ ebp - 0x8 ]
add [ esi + 0xc ] ecx
sub [ esi + 0x10 ] ecx
add [ esi + 0x14 ] ecx
add esp 0xc
mov [ esi + 0x30 ] edx
pop ebx
test eax eax
js r-xdata
mov eax 0x1
pop edi
mov esp ebp
pop ebp
retn
mov edi 0xfffffffe
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov edi 0x1
cmp [ esi + 0x10 ] edi
je r-xdata
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x1c ]
push 0x4
push edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x8 ] ecx
push eax
lea eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
call sub_41ad10
mov ecx [ ebp - 0x4 ]
add [ esi ] ecx
sub [ esi + 0x4 ] ecx
add [ esi + 0x8 ] ecx
mov ecx [ esi + 0x1c ]
mov edx [ ecx + 0x18 ]
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x30 ] edx
add [ esi + 0xc ] ecx
sub [ esi + 0x10 ] ecx
add [ esi + 0x14 ] ecx
add esp 0xc
test eax eax
jns r-xdata
cmp eax 0x1
je r-xdata
sub_415f60
test esi esi
jne r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax 0xfffffffe
retn
xor eax eax
retn
mov ecx [ esi + 0x24 ]
push eax
mov eax [ esi + 0x28 ]
push eax
call ecx
add esp 0x8
mov [ esi + 0x1c ] 0x0
sub_415fb0
push ebp
mov ebp esp
sub esp 0x38
push esi
push 0x38
mov esi eax
lea eax [ ebp - 0x38 ]
push 0x0
push eax
call sub_4264e0
mov eax [ edi ]
mov ecx eax
or ecx esi
add esp 0xc
cmp ecx 0xffffffff
jbe r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x2c ] ecx
call sub_415d80
test eax eax
jne r-xdata
mov eax 0xffffd8f0
pop esi
mov esp ebp
pop ebp
retn
pop esi
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x38 ]
call sub_415e50
mov esi eax
cmp esi 0x1
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0x10 ]
push eax
push ecx
call [ ebp - 0x14 ]
add esp 0x8
mov eax 0xfffffffb
test esi esi
je r-xdata
mov edx [ ebp - 0x10 ]
push eax
push edx
call [ ebp - 0x14 ]
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_416070
mov eax 0x8421085
mul ecx
mov eax ecx
sub eax edx
shr eax 0x1
add eax edx
shr eax 0xe
lea edx [ ecx + eax * 4 ]
imul ecx ecx 0x6e
push esi
lea esi [ eax + edx + 0x85 ]
mov eax 0x51eb851f
mul ecx
shr edx 0x5
lea eax [ edx + 0x80 ]
cmp eax esi
ja r-xdata
pop esi
retn
mov eax esi
sub_4160b0
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x34 ] edi
cmp [ esi + 0x20 ] edi
jne r-xdata
lea eax [ edi - 0x2 ]
pop edi
retn
cmp [ esi + 0x24 ] edi
jne r-xdata
mov [ esi + 0x20 ] sub_415d00
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x20 ]
push 0xab08
push 0x1
push eax
call ecx
add esp 0xc
cmp eax edi
jne r-xdata
mov [ esi + 0x24 ] sub_415d20
mov [ eax ] edi
mov [ eax + 0x2af0 ] edi
mov [ eax + 0x2af4 ] edi
mov [ eax + 0x2afc ] edi
mov [ esi + 0x1c ] eax
mov [ eax + 0xab04 ] 0x1
mov [ eax + 0x2af8 ] 0x1
mov [ eax + 0x2b00 ] 0xf
xor eax eax
pop edi
retn
mov eax 0xfffffffc
pop edi
retn
sub_416150
push ebp
mov ebp esp
sub esp 0x14
mov ecx 0x8
push edi
mov [ ebp - 0xc ] ecx
test esi esi
je r-xdata
mov eax 0xfffffffe
pop edi
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
cmp [ edi + 0x2b00 ] 0x0
jle r-xdata
cmp [ edi + 0xab04 ] 0x0
mov eax [ esi + 0x4 ]
mov edx [ edi + 0x2af8 ]
mov [ ebp - 0x14 ] eax
mov [ edi + 0x2af8 ] 0x0
jge r-xdata
mov [ ebp - 0xc ] 0x9
mov ecx [ ebp - 0xc ]
or [ edi + 0x2afc ] 0x1
test edx edx
je r-xdata
mov eax 0xfffffffd
pop edi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x2af4 ]
push ebx
test eax eax
je r-xdata
mov edx [ esi ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x10 ]
or ecx 0x4
push ecx
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0xc ]
push eax
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edi
lea ecx [ ebp - 0x8 ]
call sub_4164b0
mov ecx [ ebp - 0x4 ]
add [ esi ] ecx
sub [ esi + 0x4 ] ecx
add [ esi + 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ edi + 0x1c ]
add [ esi + 0xc ] ecx
sub [ esi + 0x10 ] ecx
add [ esi + 0x14 ] ecx
add esp 0x14
mov [ edi + 0xab04 ] eax
mov [ esi + 0x30 ] edx
test eax eax
js r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edi + 0x2af0 ]
mov [ ebp - 0x4 ] edx
push ecx
mov edx 0x8000
sub edx eax
lea eax [ eax + edi + 0x2b04 ]
push eax
lea eax [ edi + 0x2b04 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x8 ] edx
mov edx [ esi ]
push edi
lea ecx [ ebp - 0x8 ]
call sub_4164b0
mov ebx [ esi + 0x10 ]
mov edx [ edi + 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ edi + 0xab04 ] eax
mov eax [ ebp - 0x4 ]
add [ esi ] eax
sub [ esi + 0x4 ] eax
add [ esi + 0x8 ] eax
mov eax [ ebp - 0x8 ]
add esp 0x14
mov [ esi + 0x30 ] edx
mov [ edi + 0x2af4 ] eax
cmp eax ebx
jae r-xdata
mov ebx [ esi + 0x10 ]
cmp eax ebx
jae r-xdata
je r-xdata
mov ecx [ edi + 0x2af0 ]
mov eax [ esi + 0xc ]
push ebx
lea edx [ ecx + edi + 0x2b04 ]
push edx
push eax
call sub_421710
mov ecx [ edi + 0x2af0 ]
mov eax [ esi + 0xc ]
sub [ esi + 0x10 ] ebx
sub [ edi + 0x2af4 ] ebx
add [ esi + 0x14 ] ebx
mov edx [ esi + 0x10 ]
add ecx ebx
and ecx 0x7fff
add eax ebx
mov [ edi + 0x2af0 ] ecx
mov ecx [ ebp - 0x10 ]
add esp 0xc
mov [ esi + 0xc ] eax
mov eax [ edi + 0x2af4 ]
test ecx ecx
js r-xdata
mov ebx eax
mov ecx [ edi + 0x2af0 ]
mov eax [ esi + 0xc ]
push ebx
lea edx [ ecx + edi + 0x2b04 ]
push edx
push eax
call sub_421710
mov ecx [ edi + 0x2af0 ]
mov eax [ esi + 0xc ]
sub [ edi + 0x2af4 ] ebx
sub [ esi + 0x10 ] ebx
add [ esi + 0x14 ] ebx
add eax ebx
add ecx ebx
and ecx 0x7fff
add esp 0xc
cmp [ edi + 0xab04 ] 0x0
mov [ esi + 0xc ] eax
mov eax [ edi + 0x2af4 ]
mov [ edi + 0x2af0 ] ecx
jne r-xdata
mov ebx eax
mov eax 0x1
pop edi
mov esp ebp
pop ebp
retn
mov [ edi + 0xab04 ] 0xffffffff
mov eax 0xfffffffb
pop edi
mov esp ebp
pop ebp
retn
pop ebx
mov eax 0xfffffffd
pop edi
mov esp ebp
pop ebp
retn
cmp ecx 0x1
jne r-xdata
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
pop ebx
mov eax 0x1
pop edi
mov esp ebp
pop ebp
retn
neg eax
sbb eax eax
and eax 0xfffffffa
pop ebx
inc eax
pop edi
mov esp ebp
pop ebp
retn
test edx edx
je r-xdata
pop ebx
mov eax 0xfffffffb
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_4163b0
test esi esi
jne r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax 0xfffffffe
retn
xor eax eax
retn
mov ecx [ esi + 0x24 ]
push eax
mov eax [ esi + 0x28 ]
push eax
call ecx
add esp 0x8
mov [ esi + 0x1c ] 0x0
sub_4163e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push esi
push 0x38
mov esi eax
lea eax [ esp + 0xc ]
push 0x0
push eax
call sub_4264e0
mov eax [ edi ]
mov ecx eax
or ecx esi
add esp 0xc
cmp ecx 0xffffffff
jbe r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ esp + 0xc ] esi
lea esi [ esp + 0x8 ]
mov [ esp + 0x8 ] edx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] eax
call sub_4160b0
test eax eax
jne r-xdata
mov eax 0xffffd8f0
pop esi
mov esp ebp
pop ebp
retn
pop esi
mov esp ebp
pop ebp
retn
call sub_416150
mov esi eax
cmp esi 0x1
je r-xdata
mov eax [ esp + 0x1c ]
mov [ edi ] eax
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x30 ]
push eax
push ecx
call [ esp + 0x34 ]
add esp 0x8
cmp esi 0xfffffffb
jne r-xdata
mov edx [ esp + 0x30 ]
push eax
push edx
call [ esp + 0x34 ]
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x2 ]
je r-xdata
sub_4164b0
push ebp
mov ebp esp
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0xd0 ] ecx
mov ecx [ ebx ]
add ecx edx
mov [ ebp - 0xa4 ] edx
mov [ ebp - 0x90 ] edx
mov edx [ ebp - 0xd0 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] ecx
mov ecx [ edx ]
lea edx [ ecx + edi ]
mov [ ebp - 0xc0 ] edx
mov edx [ ebp + 0x18 ]
and edx 0x4
mov [ ebp - 0x8c ] eax
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xc8 ] edi
mov [ ebp - 0x98 ] 0xffffffff
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0xa8 ] edx
je r-xdata
sub ecx esi
lea ecx [ ecx + edi - 0x1 ]
or ecx 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
mov [ ecx ] 0x0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov [ ebx ] 0x0
xor ecx ebp
mov eax 0xfffffffd
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp edi esi
jb r-xdata
lea edx [ ecx + 0x1 ]
mov [ ebp - 0xbc ] ecx
mov [ ebp - 0xac ] edx
test ecx edx
jne r-xdata
mov ecx [ eax + 0x20 ]
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x4 ]
mov ebx [ eax + 0x38 ]
mov [ ebp - 0xb0 ] ecx
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x94 ] edx
mov edx [ eax + 0x3c ]
mov eax [ eax ]
mov [ ebp - 0xb4 ] ecx
mov [ ebp - 0xc4 ] edx
cmp eax 0x35
ja r-xdata
mov eax [ ebp - 0x8c ]
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x94 ]
mov [ eax + 0x20 ] ecx
mov ecx [ ebp - 0xb4 ]
mov [ eax + 0x24 ] edx
mov edx [ ebp - 0xc4 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0xc8 ]
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0xd4 ]
mov [ eax + 0x3c ] edx
mov edx [ ebp - 0xd0 ]
mov [ eax + 0x38 ] ebx
mov eax [ ebp - 0x90 ]
sub eax [ ebp - 0xa4 ]
mov [ ecx ] eax
mov eax [ ebp - 0xa0 ]
sub eax esi
test [ ebp + 0x18 ] 0x9
mov [ edx ] eax
je r-xdata
movzx eax [ eax + lookup_table_417fa0 ]
jmp [ eax * 4 + jump_table_417f18 ]
mov eax [ ebp - 0x98 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x98 ] 0x0
jl r-xdata
mov eax [ ebp - 0x8c ]
xor esi esi
mov ecx 0x1
xor ebx ebx
mov [ eax + 0xc ] esi
mov [ eax + 0x8 ] esi
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0x94 ] esi
mov [ ebp - 0xb0 ] esi
mov [ eax + 0x1c ] ecx
mov [ eax + 0x10 ] ecx
test [ ebp + 0x18 ] cl
je r-xdata
mov eax [ ebp - 0xa4 ]
cmp eax [ ebp - 0x9c ]
jae r-xdata
mov eax [ ebp - 0xa4 ]
cmp eax [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0xffffffff
mov [ ecx ] 0x24
jmp r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov eax [ ebp - 0xa4 ]
cmp eax [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov eax [ ebp - 0xa0 ]
cmp eax [ ebp - 0xc0 ]
jae r-xdata
mov eax [ ebp - 0xa0 ]
cmp eax [ ebp - 0xc0 ]
jae r-xdata
mov eax [ ebp - 0xa0 ]
cmp eax [ ebp - 0xc0 ]
jae r-xdata
mov edx [ ebp - 0xc0 ]
cmp [ ebp - 0xa0 ] edx
jae r-xdata
mov edx [ ebp - 0x90 ]
mov ecx [ ebp - 0x9c ]
cmp edx ecx
jae r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0xffffffff
mov [ eax ] 0x27
jmp r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0xffffffff
mov [ edx ] 0x28
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0xffffffff
mov [ eax ] 0xa
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0xffffffff
mov [ eax ] 0x23
jmp r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0xffffffff
mov [ edx ] 0x11
jmp r-xdata
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0xffffffff
mov [ ecx ] 0x15
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x0
mov [ eax ] 0x22
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0xffffffff
mov [ eax ] 0x25
jmp r-xdata
mov ecx [ ebp - 0xa4 ]
jmp r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov ecx [ ebp - 0xa4 ]
mov edi eax
mov eax [ ebp - 0x8c ]
movzx ecx [ eax + 0x1c ]
movzx ebx [ eax + 0x1e ]
mov eax 0x5e6ea9af
mul edi
shr edx 0xb
imul edx edx 0x15b0
mov [ ebp - 0xac ] edi
sub edi edx
cmp [ ebp - 0xac ] 0x0
je r-xdata
cmp esi 0x3
jae r-xdata
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
movzx edx [ eax ]
mov ecx [ ebp - 0x8c ]
inc eax
mov [ ecx + 0x8 ] edx
mov [ ebp - 0x90 ] eax
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
movzx edx [ eax ]
mov ecx [ ebp - 0x8c ]
inc eax
mov [ ecx + 0xc ] edx
mov [ ebp - 0x90 ] eax
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x2
mov [ eax ] 0x35
jmp r-xdata
mov edi [ ebp - 0xc4 ]
mov ecx [ ebp + 0x10 ]
mov edx edi
sub edx [ ebp - 0xb0 ]
inc eax
and edx [ ebp - 0xbc ]
inc edi
mov dl [ edx + ecx ]
mov [ eax - 0x1 ] dl
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xc4 ] edi
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x2
mov [ ecx ] 0x18
jmp r-xdata
mov cl [ ebp - 0x94 ]
mov [ eax ] cl
inc eax
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x2
mov [ edx ] 0x34
jmp r-xdata
mov cl [ ebp - 0xb0 ]
mov [ eax ] cl
inc eax
dec [ ebp - 0x94 ]
mov ecx [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x2
mov [ eax ] 0x9
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov eax [ ebp - 0xc0 ]
sub eax [ ebp - 0xa0 ]
sub ecx edx
mov edx eax
cmp eax ecx
jb r-xdata
cmp ecx [ ebp - 0x9c ]
jae r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
jmp r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8c ]
shl ebx 0x10
add ecx ebx
cmp [ ebp - 0x98 ] 0x0
mov [ eax + 0x1c ] ecx
jne r-xdata
xor edx edx
cmp edi 0x7
jbe r-xdata
mov eax [ ebp - 0x8c ]
mov ecx ebx
and ecx 0x7
mov [ eax + 0x14 ] ecx
shr ebx 0x3
sub esi 0x3
shr ecx 0x1
mov [ eax + 0x18 ] ecx
jne r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] eax
jb r-xdata
mov eax ecx
movzx edx [ eax ]
mov ecx [ ebp - 0x8c ]
inc eax
mov [ ecx + 0x8 ] edx
mov [ ebp - 0x90 ] eax
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ eax + 0x8 ] 0x0
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ edx ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov eax [ ebp - 0x8c ]
mov [ eax + 0xc ] 0x0
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ edx ] 0x2
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov edi [ eax + 0x8 ]
mov ecx [ eax + 0xc ]
mov eax edi
shl eax 0x8
add eax ecx
xor edx edx
mov ecx 0x1f
div ecx
test edx edx
jne r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ edx ] 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ eax ] 0x5
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ ecx ] 0x6
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ edx ] 0x7
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov ecx [ ebp - 0x8c ]
inc [ ebp - 0x94 ]
mov [ ecx + eax + 0x2920 ] 0x0
mov eax ecx
jmp r-xdata
mov dl [ eax ]
mov ecx [ ebp - 0x94 ]
mov edi [ ebp - 0x8c ]
inc eax
inc [ ebp - 0x94 ]
mov [ ebp - 0x90 ] eax
mov [ edi + ecx + 0x2920 ] dl
mov eax edi
jmp r-xdata
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ ecx ] 0x33
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ ecx ] 0xb
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ edx ] 0xe
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ ecx ] 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ eax ] 0x12
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ ecx ] 0x17
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ eax ] 0x19
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ ecx ] 0x1a
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ edx ] 0x1b
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov eax [ ebp - 0x9c ]
mov edx [ ebp - 0x90 ]
sub eax edx
cmp eax 0x4
jl r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ ecx ] 0x26
jmp r-xdata
mov edi [ ebp - 0x94 ]
cmp edx edi
jae r-xdata
mov edx ecx
test [ ebp + 0x18 ] 0x2
jne r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ edx ] 0x29
jmp r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
inc ecx
mov [ ebp - 0x90 ] ecx
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ ecx ] 0x2a
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x8c ]
mov edx [ ecx + 0x10 ]
shl edx 0x8
or edx eax
inc [ ebp - 0x94 ]
mov [ ecx + 0x10 ] edx
test [ ebp + 0x18 ] 0x1
je r-xdata
xor eax eax
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xa8 ] eax
cmp edx edi
jae r-xdata
mov eax 0x7
sub eax esi
mov [ ebp - 0xc8 ] eax
cmp ecx 0x3
je r-xdata
mov edx esi
and edx 0x7
cmp esi edx
jae r-xdata
mov ecx [ ebp - 0x90 ]
mov eax ecx
movzx edx [ eax ]
mov ecx [ ebp - 0x8c ]
inc eax
mov [ ecx + 0xc ] edx
mov [ ebp - 0x90 ] eax
jmp r-xdata
mov [ ebp - 0x94 ] 0x1
mov edx [ ebp - 0x8c ]
test [ edx + 0xc ] 0x20
jne r-xdata
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi 0x3
jb r-xdata
mov ecx esi
shl eax cl
add esi 0x8
mov ecx esi
and ecx 0x7
or ebx eax
cmp esi ecx
jb r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] eax
jb r-xdata
mov eax [ ebp - 0x8c ]
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi 0x8
jb r-xdata
mov edx [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] edx
jb r-xdata
mov ecx [ ebp - 0x94 ]
mov eax [ ebp - 0x8c ]
mov [ eax + ecx + 0x2920 ] bl
shr ebx 0x8
sub esi 0x8
inc [ ebp - 0x94 ]
jmp r-xdata
cmp [ ebp - 0x94 ] 0x4
jae r-xdata
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi 0x8
jb r-xdata
mov ecx [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] ecx
jb r-xdata
movzx edx bl
shr ebx 0x8
mov [ ebp - 0xb0 ] edx
sub esi 0x8
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
mov eax [ ebp - 0x94 ]
movsx ecx [ eax + r--data ]
cmp esi ecx
jb r-xdata
mov edx [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] edx
jb r-xdata
mov eax [ ebp - 0x94 ]
mov edx [ ebp - 0x8c ]
mov edi 0x1
shl edi cl
dec edi
and edi ebx
mov [ edx + eax * 4 + 0x2c ] edi
movsx ecx [ eax + r--data ]
shr ebx cl
sub esi ecx
mov ecx [ eax * 4 + r--data ]
add [ edx + eax * 4 + 0x2c ] ecx
inc eax
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi 0x3
jb r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] eax
jb r-xdata
mov ecx [ ebp - 0x94 ]
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi 0xf
jb r-xdata
mov edi [ ebp - 0x8c ]
mov edx ebx
and edx 0x3ff
movsx eax [ edi + edx * 2 + 0x1ca0 ]
test eax eax
js r-xdata
mov edi [ ebp - 0x8c ]
jmp r-xdata
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi [ ebp - 0xb4 ]
jb r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] eax
jb r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp - 0xb0 ]
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi 0xf
jb r-xdata
mov eax [ ebp - 0x8c ]
mov edx ebx
and edx 0x3ff
movsx eax [ eax + edx * 2 + 0x160 ]
test eax eax
js r-xdata
jmp r-xdata
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi [ ebp - 0xb4 ]
jb r-xdata
mov ecx [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] ecx
jb r-xdata
mov ecx [ ebp - 0xb4 ]
mov eax 0x1
shl eax cl
sub esi ecx
dec eax
and eax ebx
shr ebx cl
add [ ebp - 0x94 ] eax
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi 0xf
jb r-xdata
mov ecx [ ebp - 0x8c ]
mov eax ebx
and eax 0x3ff
movsx eax [ ecx + eax * 2 + 0xf00 ]
test eax eax
js r-xdata
jmp r-xdata
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi [ ebp - 0xb4 ]
jb r-xdata
mov ecx [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] ecx
jb r-xdata
mov edx [ ebp - 0xb0 ]
cmp esi 0xf
jae r-xdata
mov ecx [ ebp - 0xc0 ]
sub ecx [ ebp - 0xa0 ]
cmp ecx 0x2
jl r-xdata
mov edx [ ebp - 0x8c ]
test [ edx + 0x14 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x90 ]
mov ecx [ ebp - 0xa0 ]
push edi
push eax
push ecx
call sub_421710
add [ ebp - 0x90 ] edi
add [ ebp - 0xa0 ] edi
add esp 0xc
sub [ ebp - 0x94 ] edi
jmp r-xdata
mov edi eax
cmp eax ecx
jb r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] 0x1
mov [ eax ] 0x20
jmp r-xdata
xor eax eax
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov ecx esi
shl eax cl
add esi 0x8
or ebx eax
cmp esi 0x8
jb r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] eax
jb r-xdata
movzx eax bl
shr ebx 0x8
sub esi 0x8
jmp r-xdata
test esi esi
je r-xdata
cmp ecx [ eax + 0x10 ]
je r-xdata
mov eax 0x80078071
mul ecx
shr edx 0xf
imul edx edx 0xffff000f
add ecx edx
mov eax 0x80078071
mul ebx
shr edx 0xf
imul edx edx 0xffff000f
add ebx edx
sub [ ebp - 0xac ] edi
mov edi 0x15b0
jne r-xdata
mov eax edi
sub eax edx
cmp eax 0x2
jl r-xdata
movzx eax [ esi ]
add ecx eax
movzx eax [ esi + 0x1 ]
add ebx ecx
add ecx eax
movzx eax [ esi + 0x2 ]
add ebx ecx
add ecx eax
movzx eax [ esi + 0x3 ]
add ebx ecx
add ecx eax
movzx eax [ esi + 0x4 ]
add ebx ecx
add ecx eax
movzx eax [ esi + 0x5 ]
add ebx ecx
add ecx eax
movzx eax [ esi + 0x6 ]
add ebx ecx
add ecx eax
movzx eax [ esi + 0x7 ]
add ebx ecx
add ecx eax
mov eax [ ebp - 0xc8 ]
add esi 0x8
add eax esi
add ebx ecx
add edx 0x8
cmp eax edi
jb r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx esi
and ecx 0x7
shr ebx cl
sub esi ecx
mov [ ebp - 0x94 ] 0x0
cmp [ ebp - 0x94 ] 0x0
je r-xdata
mov ecx edi
shr ecx 0x4
add ecx 0x8
mov eax 0x1
shl eax cl
cmp eax 0x8000
ja r-xdata
mov eax edi
and al 0xf
mov [ ebp - 0x94 ] 0x0
cmp al 0x8
je r-xdata
mov ecx [ ebp - 0x90 ]
movzx ecx [ eax + 0x2921 ]
movzx edx [ eax + 0x2920 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x2923 ]
movzx eax [ eax + 0x2922 ]
shl edx 0x8
or edx eax
xor edx 0xffff
mov [ ebp - 0x94 ] ecx
cmp ecx edx
jne r-xdata
test esi esi
je r-xdata
mov ecx [ ebp - 0x90 ]
mov ecx [ ebp - 0x90 ]
mov ecx [ ebp - 0x90 ]
cmp eax 0x3
jae r-xdata
mov ecx [ ebp - 0x90 ]
mov eax [ ebp - 0x8c ]
cmp ecx [ eax + 0x34 ]
jae r-xdata
cmp esi 0xa
jbe r-xdata
sar eax 0x9
test eax eax
je r-xdata
mov ecx ebx
and ecx 0x3ff
movsx eax [ edi + ecx * 2 + 0x1ca0 ]
test eax eax
js r-xdata
mov ecx [ ebp - 0x90 ]
xor eax eax
mov edx [ ebp - 0x8c ]
mov eax [ ebp - 0x94 ]
movzx eax [ edx + eax + 0x2923 ]
jmp r-xdata
cmp esi 0xa
jbe r-xdata
sar eax 0x9
test eax eax
je r-xdata
mov ecx [ ebp - 0x8c ]
mov eax ebx
and eax 0x3ff
movsx eax [ ecx + eax * 2 + 0x160 ]
test eax eax
js r-xdata
mov ecx [ ebp - 0x90 ]
mov ecx [ ebp - 0x8c ]
mov eax ebx
and eax 0x3ff
movsx eax [ ecx + eax * 2 + 0xf00 ]
test eax eax
js r-xdata
mov edx [ ebp - 0x9c ]
sub edx [ ebp - 0x90 ]
cmp edx 0x2
jge r-xdata
cmp esi 0xa
jbe r-xdata
sar eax 0x9
test eax eax
je r-xdata
mov ecx [ ebp - 0x90 ]
sub eax edx
and eax [ ebp - 0xbc ]
mov edx edi
add eax [ ebp + 0x10 ]
cmp edi eax
ja r-xdata
test [ ebp + 0x18 ] 0x4
jne r-xdata
cmp eax 0x2
jge r-xdata
cmp esi 0xf
jae r-xdata
test [ ebp + 0x18 ] 0x1
jne r-xdata
cmp [ ebp - 0x94 ] 0x0
je r-xdata
cmp esi 0x8
jae r-xdata
mov edi ecx
mov ecx esi
and ecx 0x7
shr ebx cl
sub esi ecx
mov [ ebp - 0x94 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x90 ]
mov ecx [ ebp - 0x90 ]
mov ecx [ ebp - 0x90 ]
jmp r-xdata
cmp esi 0x8
jae r-xdata
mov [ ebp - 0x98 ] 0xfffffffe
cmp edx edi
jae r-xdata
mov eax edi
sub eax edx
sub eax 0x2
shr eax 0x1
inc eax
lea edx [ edx + eax * 2 ]
mov [ ebp - 0xc8 ] edx
xor eax eax
mov [ ebp - 0x94 ] eax
mov ecx eax
mov eax 0x5050505
mov [ ecx + 0x2c ] 0x120
mov [ ecx + 0x30 ] 0x20
mov [ ecx + 0xde0 ] eax
mov [ ecx + 0xde4 ] eax
mov [ ecx + 0xde8 ] eax
mov [ ecx + 0xdec ] eax
mov [ ecx + 0xdf0 ] eax
push 0x90
lea edi [ ecx + 0x40 ]
mov [ ecx + 0xdf4 ] eax
push 0x8
mov [ ecx + 0xdf8 ] eax
push edi
mov [ ecx + 0xdfc ] eax
call sub_4264e0
push 0x70
add edi 0x90
push 0x9
push edi
call sub_4264e0
mov eax 0x7070707
mov [ edi + 0x70 ] eax
mov [ edi + 0x74 ] eax
mov [ edi + 0x78 ] eax
mov [ edi + 0x7c ] eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
mov eax 0x8080808
mov [ edi + 0x88 ] eax
add esp 0x18
mov [ edi + 0x8c ] eax
jmp r-xdata
mov eax 0x1
cmp [ ebp - 0xac ] eax
jb r-xdata
cmp [ ebp - 0xa8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] edx
jb r-xdata
cmp esi 0x8
jae r-xdata
mov edx [ ebp - 0x8c ]
push 0x120
add edx 0x1b80
push 0x0
push edx
call sub_4264e0
mov [ ebp - 0x94 ] 0x0
mov ecx [ ebp - 0x94 ]
add esp 0xc
movsx ecx [ eax + r--data ]
cmp esi ecx
jae r-xdata
mov [ eax + 0x34 ] 0x13
cmp esi 0x3
jae r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] eax
jb r-xdata
mov ecx 0xa
mov edi edi
cmp esi eax
jae r-xdata
mov edi 0xa
mov edi eax
sar edi 0x9
and eax 0x1ff
jmp r-xdata
mov edx [ edi + 0x30 ]
add edx [ edi + 0x2c ]
mov ecx [ ebp - 0x94 ]
cmp ecx edx
jae r-xdata
mov ecx [ ebp - 0x8c ]
mov edx [ ebp - 0x94 ]
push edi
push eax
lea eax [ ecx + edx + 0x2924 ]
push eax
call sub_4264e0
add esp 0xc
add [ ebp - 0x94 ] edi
mov edi [ ebp - 0x8c ]
jmp r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] eax
jb r-xdata
mov ecx 0xa
jmp r-xdata
cmp esi eax
jae r-xdata
mov ecx 0xa
mov ecx eax
sar ecx 0x9
and eax 0x1ff
jmp r-xdata
mov ecx 0xa
mov ecx eax
sar ecx 0x9
and eax 0x1ff
jmp r-xdata
mov eax [ ebp - 0x90 ]
movzx edx [ eax + 0x1 ]
movzx edi [ eax ]
lea ecx [ esi + 0x8 ]
shl edx cl
mov ecx esi
shl edi cl
add eax 0x2
mov [ ebp - 0x90 ] eax
or edx edi
or ebx edx
add esi 0x10
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x90 ] eax
jb r-xdata
mov ecx 0xa
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0x94 ]
add edx ecx
cmp edx [ ebp - 0xc0 ]
ja r-xdata
mov edx eax
mov eax [ ebp - 0x90 ]
movzx edx [ eax + 0x1 ]
movzx edi [ eax ]
lea ecx [ esi + 0x8 ]
shl edx cl
mov ecx esi
shl edi cl
add eax 0x2
mov [ ebp - 0x90 ] eax
or edx edi
or ebx edx
add esi 0x10
mov edx [ ebp - 0x8c ]
mov ecx ebx
and ecx 0x3ff
movsx eax [ edx + ecx * 2 + 0x160 ]
test eax eax
js r-xdata
movzx eax [ edx ]
mov ecx esi
shl eax cl
add edx 0x2
mov [ ebp - 0x90 ] edx
or ebx eax
add esi 0x10
mov edx esi
and edx 0x7
cmp esi edx
jae r-xdata
cmp [ ebp - 0x94 ] 0x4
jae r-xdata
cmp ecx [ ebp - 0x9c ]
jae r-xdata
mov edx [ ebp - 0xbc ]
add edx [ ebp - 0xa8 ]
add ebx edx
movzx eax [ esi ]
add ecx eax
add ebx ecx
inc esi
movzx edx [ esi ]
add ecx edx
movzx edx [ esi + 0x1 ]
add [ ebp - 0xbc ] ecx
add ecx edx
add [ ebp - 0xa8 ] ecx
add esi 0x2
dec eax
jne r-xdata
mov edx [ ebp - 0xc8 ]
mov eax [ ebp - 0x8c ]
mov eax [ eax + 0x18 ]
test eax eax
js r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x90 ]
mov ecx [ ebp - 0x8c ]
imul eax eax 0xda0
push 0x40
lea edx [ ebp - 0x88 ]
lea edi [ eax + ecx + 0x40 ]
push 0x0
push edx
mov [ ebp - 0x98 ] edi
call sub_4264e0
push 0x800
lea eax [ edi + 0x120 ]
push 0x0
push eax
call sub_4264e0
push 0x480
lea ecx [ edi + 0x920 ]
push 0x0
push ecx
call sub_4264e0
mov edx [ ebp - 0x8c ]
mov ecx [ edx + 0x18 ]
mov ecx [ edx + ecx * 4 + 0x2c ]
add esp 0x24
xor eax eax
mov [ ebp - 0xcc ] ecx
test ecx ecx
je r-xdata
movzx edx [ ecx + r--data ]
mov edi [ ebp - 0x8c ]
mov eax ebx
and eax 0x7
shr ebx 0x3
sub esi 0x3
inc ecx
mov [ edx + edi + 0x1b80 ] al
mov [ ebp - 0x94 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x90 ]
lea edx [ ecx + 0x1 ]
cmp esi edx
jae r-xdata
jmp r-xdata
mov ecx edi
mov edx ebx
shr edx cl
not eax
inc edi
and edx 0x1
add edx eax
mov eax [ ebp - 0x8c ]
movsx eax [ eax + edx * 2 + 0x24a0 ]
test eax eax
js r-xdata
mov ecx edi
mov edx eax
shr ebx cl
sub esi edi
mov [ ebp - 0xb0 ] edx
cmp eax 0x10
jae r-xdata
mov eax [ edi + 0x2c ]
mov edx [ edi + 0x30 ]
add edx eax
cmp edx ecx
jne r-xdata
cmp esi 0xf
jae r-xdata
mov ecx [ ebp - 0x90 ]
mov edx ebx
shr edx cl
not eax
inc ecx
and edx 0x1
add edx eax
mov eax [ ebp - 0x8c ]
movsx eax [ eax + edx * 2 + 0x960 ]
test eax eax
jns r-xdata
jmp r-xdata
mov edx ebx
shr edx cl
not eax
inc ecx
and edx 0x1
add edx eax
mov eax [ ebp - 0x8c ]
movsx eax [ eax + edx * 2 + 0x960 ]
test eax eax
js r-xdata
shr ebx cl
sub esi ecx
mov [ ebp - 0x94 ] eax
cmp eax 0x100
jae r-xdata
mov edx ebx
shr edx cl
not eax
inc ecx
and edx 0x1
add edx eax
mov eax [ ebp - 0x8c ]
movsx eax [ eax + edx * 2 + 0x1700 ]
test eax eax
js r-xdata
mov edx [ eax * 4 + r--data ]
shr ebx cl
sub esi ecx
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0xb4 ] ecx
mov [ ebp - 0xb0 ] edx
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x90 ]
lea edx [ ecx + 0x1 ]
cmp esi edx
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov ecx eax
dec eax
mov [ ebp - 0x94 ] eax
test ecx ecx
jne r-xdata
cmp ecx 0x9
jb r-xdata
mov ecx 0xa
jmp r-xdata
mov ecx eax
sar ecx 0x9
jmp r-xdata
or [ ebp - 0x94 ] eax
xor ecx ecx
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0xb8 ] ecx
mov [ ebp - 0xac ] ecx
mov eax 0x4
lea esp [ esp ]
mov ecx [ edx + 0x18 ]
mov edx [ edx + ecx * 4 + 0x2c ]
mov edx ebx
shr edx cl
not eax
inc ecx
and edx 0x1
add edx eax
movsx eax [ edi + edx * 2 + 0x24a0 ]
test eax eax
jns r-xdata
jne r-xdata
mov ecx [ ebp - 0x94 ]
mov edx [ ebp - 0x8c ]
mov [ edx + ecx + 0x2924 ] al
inc ecx
mov [ ebp - 0x94 ] ecx
mov edi edx
jmp r-xdata
mov edi [ ebp - 0x8c ]
push eax
lea eax [ edi + 0x2924 ]
push eax
lea ecx [ edi + 0x40 ]
push ecx
call sub_421710
mov edx [ edi + 0x30 ]
mov eax [ edi + 0x2c ]
push edx
lea ecx [ eax + edi + 0x2924 ]
push ecx
lea edx [ edi + 0xde0 ]
push edx
call sub_421710
add esp 0x18
mov ecx [ ebp - 0x9c ]
mov eax [ ebp - 0x90 ]
sub ecx eax
cmp ecx 0x2
jge r-xdata
lea edx [ ecx + 0x1 ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x94 ]
and eax 0x1ff
mov [ ebp - 0x94 ] eax
cmp eax 0x100
jne r-xdata
mov edi [ ebp - 0xa0 ]
mov eax edi
sub eax [ ebp + 0x10 ]
mov [ ebp - 0xc4 ] eax
cmp edx eax
jbe r-xdata
cmp esi ecx
jae r-xdata
mov edx ebx
shr edx cl
not eax
inc ecx
and edx 0x1
add edx eax
mov eax [ ebp - 0x8c ]
movsx eax [ eax + edx * 2 + 0x1700 ]
test eax eax
jns r-xdata
movzx edx [ eax ]
mov [ edi ] dl
movzx edx [ eax + 0x1 ]
mov [ edi + 0x1 ] dl
movzx edx [ eax + 0x2 ]
mov [ edi + 0x2 ] dl
sub ecx 0x3
add edi 0x3
add eax 0x3
cmp ecx 0x2
jg r-xdata
cmp ecx [ ebp - 0xb0 ]
ja r-xdata
mov edx ebx
shr edx cl
not eax
inc ecx
and edx 0x1
add edx eax
mov eax [ ebp - 0x8c ]
movsx eax [ eax + edx * 2 + 0x960 ]
test eax eax
js r-xdata
shr ebx cl
sub esi ecx
mov [ ebp - 0x94 ] eax
test eax 0x100
jne r-xdata
mov edx [ ebp + eax - 0x88 ]
add [ ebp - 0xa8 ] edx
add ecx edx
mov edx [ ebp + eax - 0x84 ]
add [ ebp - 0xac ] edx
add ecx ecx
mov [ ebp + eax - 0x44 ] ecx
add ecx edx
mov edx [ ebp + eax - 0x80 ]
add [ ebp - 0xb8 ] edx
add ecx ecx
mov [ ebp + eax - 0x40 ] ecx
add ecx edx
add ecx ecx
mov [ ebp + eax - 0x3c ] ecx
add eax 0xc
cmp eax 0x3c
jbe r-xdata
mov edx [ ebp - 0xac ]
add edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xa8 ]
add eax edx
cmp ecx 0x10000
je r-xdata
movzx ecx [ eax + edi ]
inc [ ebp + ecx * 4 - 0x88 ]
lea ecx [ ebp + ecx * 4 - 0x88 ]
inc eax
cmp eax edx
jb r-xdata
movsx ecx [ eax + r--data ]
mov [ ebp - 0xb4 ] ecx
cmp esi ecx
jae r-xdata
cmp [ ebp - 0x94 ] 0x0
je r-xdata
movzx edx [ eax + 0x1 ]
movzx eax [ eax ]
add [ ebp - 0x90 ] 0x2
lea ecx [ esi + 0x8 ]
shl edx cl
mov ecx esi
shl eax cl
or edx eax
or ebx edx
add esi 0x10
mov ecx [ eax * 4 + r--data ]
mov eax [ eax * 4 + r--data ]
mov [ ebp - 0xb4 ] ecx
mov [ ebp - 0x94 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xb4 ]
mov eax 0x1
shl eax cl
sub esi ecx
dec eax
and eax ebx
shr ebx cl
add edx eax
mov [ ebp - 0xb0 ] edx
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0xa0 ] edi
test ecx ecx
jle r-xdata
and ecx 0xfffffff8
add ecx eax
cmp esi 0xf
jae r-xdata
mov edi [ ebp - 0x8c ]
xor edx edx
mov [ ebp - 0xb8 ] 0xffffffff
mov [ ebp - 0xac ] edx
cmp [ ebp - 0xcc ] edx
jbe r-xdata
cmp eax 0x1
ja r-xdata
mov edi 0x1
shl edi cl
sub esi ecx
dec edi
and edi ebx
shr ebx cl
movsx ecx [ edx + r--data ]
add edi ecx
cmp edx 0x10
jne r-xdata
cmp esi 0xf
jae r-xdata
cmp esi ecx
jae r-xdata
mov cl [ eax ]
mov [ edi ] cl
mov ecx [ ebp - 0x94 ]
cmp ecx 0x1
jle r-xdata
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
add eax 0x8
add edi 0x8
cmp eax ecx
jb r-xdata
mov ecx [ ebp - 0x94 ]
and ecx 0x7
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0x94 ] ecx
cmp ecx 0x3
jae r-xdata
mov ecx [ ebp - 0x8c ]
mov eax ebx
and eax 0x3ff
movsx eax [ ecx + eax * 2 + 0x160 ]
test eax eax
js r-xdata
mov eax [ ebp - 0x90 ]
movzx edx [ eax ]
mov ecx esi
shl edx cl
add eax 0x2
mov [ ebp - 0x90 ] eax
or ebx edx
add esi 0x10
cmp [ edi + 0x18 ] 0x2
jne r-xdata
lea ecx [ ecx ]
add edi ecx
mov [ ebp - 0xa0 ] edi
jmp r-xdata
mov dl [ eax + 0x1 ]
mov [ edi + 0x1 ] dl
add edi ecx
mov [ ebp - 0xa0 ] edi
jmp r-xdata
mov ecx [ ebp - 0x94 ]
mov edi edi
test ecx ecx
je r-xdata
mov ecx 0xa
mov ecx eax
sar ecx 0x9
jmp r-xdata
dec [ edi + 0x18 ]
jmp r-xdata
mov [ ebp - 0x94 ] 0x0
mov eax [ edi + 0x18 ]
inc edx
mov [ ebp - 0xac ] edx
cmp edx [ edi + eax * 4 + 0x2c ]
jb r-xdata
mov edx [ ebp + ecx * 4 - 0x48 ]
lea edi [ edx + 0x1 ]
mov [ ebp + ecx * 4 - 0x48 ] edi
mov [ ebp - 0xa8 ] ecx
mov cl [ eax ]
mov [ edi ] cl
mov ecx [ ebp - 0x94 ]
cmp ecx 0x1
jbe r-xdata
mov edx ebx
shr edx cl
not eax
inc ecx
and edx 0x1
add edx eax
mov eax [ ebp - 0x8c ]
movsx eax [ eax + edx * 2 + 0x960 ]
test eax eax
js r-xdata
mov edi [ ebp - 0xa0 ]
shr ebx cl
sub esi ecx
mov cl [ ebp - 0x94 ]
mov [ edi ] cl
test eax 0x100
jne r-xdata
mov ecx [ ebp - 0x98 ]
movzx ecx [ edx + ecx ]
xor eax eax
test ecx ecx
je r-xdata
mov edi edx
and edi 0x1
add eax eax
or eax edi
mov edi [ ebp - 0xa8 ]
dec edi
shr edx 0x1
mov [ ebp - 0xa8 ] edi
test edi edi
jne r-xdata
cmp ecx 0xa
ja r-xdata
mov dl [ eax + 0x1 ]
mov [ edi + 0x1 ] dl
inc edi
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0x94 ] eax
mov [ edi + 0x1 ] al
add edi 0x2
mov [ ebp - 0xa0 ] edi
jmp r-xdata
mov edi [ ebp - 0x98 ]
mov edx eax
and edx 0x3ff
lea edx [ edi + edx * 2 + 0x120 ]
mov edi [ ebp - 0xb8 ]
mov [ ebp - 0xcc ] edx
movsx edx [ edx ]
test edx edx
jne r-xdata
mov edx [ ebp - 0xac ]
mov edi ecx
shl edi 0x9
or edi edx
movzx edi di
mov [ ebp - 0xcc ] edi
cmp eax 0x400
jae r-xdata
shr eax 0x9
cmp ecx 0xb
jbe r-xdata
mov edx [ ebp - 0xcc ]
mov [ edx ] di
mov edx edi
sub edi 0x2
mov [ ebp - 0xb8 ] edi
mov edi [ ebp - 0x8c ]
mov edx 0x1
shl edx cl
mov ecx [ ebp - 0x98 ]
lea ecx [ ecx + eax * 2 + 0x120 ]
jmp r-xdata
mov ecx [ ebp - 0x98 ]
shr eax 0x1
and eax 0x1
sub eax edx
mov edx [ ebp - 0xac ]
mov [ ecx + eax * 2 + 0x91e ] dx
add ecx 0xfffffff5
mov [ ebp - 0xa8 ] ecx
mov edi edi
mov di [ ebp - 0xcc ]
add eax edx
mov [ ecx ] di
lea ecx [ ecx + edx * 2 ]
cmp eax 0x400
jb r-xdata
movsx edx dx
mov [ ecx ] di
mov edx edi
sub edi 0x2
jmp r-xdata
mov edx [ ebp - 0xac ]
jmp r-xdata
shr eax 0x1
mov ecx eax
and ecx 0x1
sub edx ecx
mov ecx 0x48f
sub ecx edx
mov edx [ ebp - 0x98 ]
lea ecx [ edx + ecx * 2 ]
movzx edx [ ecx ]
test dx dx
jne r-xdata
mov [ ebp - 0xb8 ] edi
dec [ ebp - 0xa8 ]
jne r-xdata
sub_417fe0
push ebp
mov ebp esp
mov eax 0x2b0c
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
and eax 0xfffffffd
mov [ ebp - 0x2b08 ] ecx
push edi
xor edi edi
mov ecx eax
mov ebx edx
xor esi esi
or ecx 0x4
mov [ ebp - 0x2afc ] ebx
mov [ ebp - 0x2af8 ] edi
mov [ ebx ] edi
mov [ ebp - 0x2af4 ] edi
mov [ ebp - 0x2b0c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebx ]
sub edx edi
mov [ ebp - 0x2b04 ] edx
mov edx [ ebp - 0x2af8 ]
sub edx eax
mov [ ebp - 0x2b00 ] edx
test esi esi
je r-xdata
xor eax eax
add eax esi
jmp r-xdata
push esi
call sub_4229cf
mov [ ebx ] 0x0
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0x2b08 ]
push ecx
push eax
push esi
lea eax [ ebp - 0x2b04 ]
push eax
lea eax [ ebp - 0x2af4 ]
lea edx [ edx + edi ]
push eax
lea ecx [ ebp - 0x2b00 ]
call sub_4164b0
add esp 0x14
test eax eax
js r-xdata
mov ecx [ ebp - 0x2b00 ]
add edi [ ebp - 0x2b04 ]
add [ ebx ] ecx
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x2af8 ]
add ebx ebx
cmp ebx 0x80
jae r-xdata
push ebx
push esi
call sub_424f97
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x80
push esi
call sub_4229cf
mov edx [ ebp - 0x2afc ]
mov [ edx ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2b0c ]
mov [ ebp - 0x2af8 ] ebx
mov ebx [ ebp - 0x2afc ]
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_418120
push ebp
mov ebp esp
mov eax 0x2af4
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
and eax 0xfffffffd
or eax 0x4
push eax
push ecx
push ecx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x2af4 ]
push ecx
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x2af4 ] 0x0
call sub_4164b0
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_418190
push ebp
mov ebp esp
mov eax 0x2b18
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x2b18 ] eax
mov eax [ ebp + 0xc ]
push edi
xor ebx ebx
push 0x8000
mov [ ebp - 0x2b00 ] ecx
mov [ ebp - 0x2b0c ] edx
mov [ ebp - 0x2b04 ] eax
mov [ ebp - 0x2b10 ] ebx
call sub_421e20
mov edi eax
add esp 0x4
xor esi esi
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
and ecx 0xfffffff9
mov [ ebp - 0x2af4 ] ebx
mov [ ebp - 0x2b08 ] ecx
jmp r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2b00 ]
mov eax [ edx ]
sub eax esi
push ecx
mov [ ebp - 0x2afc ] eax
lea eax [ ebx + edi ]
push eax
mov edx 0x8000
sub edx ebx
push edi
lea eax [ ebp - 0x2afc ]
mov [ ebp - 0x2af8 ] edx
mov edx [ ebp - 0x2b18 ]
push eax
lea eax [ ebp - 0x2af4 ]
lea edx [ edx + esi ]
push eax
lea ecx [ ebp - 0x2af8 ]
call sub_4164b0
mov ecx [ ebp - 0x2af8 ]
add esi [ ebp - 0x2afc ]
add esp 0x14
mov [ ebp - 0x2b14 ] eax
test ecx ecx
je r-xdata
cmp eax 0x2
jne r-xdata
mov edx [ ebp - 0x2b04 ]
push edx
push ecx
lea eax [ ebx + edi ]
push eax
call [ ebp - 0x2b0c ]
add esp 0xc
test eax eax
je r-xdata
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
add ebx ecx
mov ecx [ ebp - 0x2b08 ]
and ebx 0x7fff
jmp r-xdata
mov ebx [ ebp - 0x2b10 ]
mov eax [ ebp - 0x2b14 ]
mov ecx [ ebp - 0x2af8 ]
push edi
call sub_4229cf
mov eax [ ebp - 0x2b00 ]
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
mov [ eax ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_4182e0
push ebp
mov ebp esp
sub esp 0xc14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x800
mov [ ebp - 0xc0c ] eax
lea eax [ ebp - 0x804 ]
push 0x0
push eax
mov esi ecx
mov ebx 0x2
call sub_4264e0
add esp 0xc
xor ecx ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x404 ]
movzx eax [ esi + ecx * 4 ]
mov edx eax
shr eax 0x8
and edx 0xff
inc [ ebp + edx * 4 - 0x804 ]
and eax 0xff
inc [ ebp + eax * 4 - 0x404 ]
lea edx [ ebp + edx * 4 - 0x804 ]
lea eax [ ebp + eax * 4 - 0x404 ]
inc ecx
cmp ecx edi
jb r-xdata
mov [ ebp - 0xc08 ] 0x0
test ebx ebx
je r-xdata
dec ebx
sub eax 0x400
cmp ebx 0x1
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x804 ]
lea ecx [ ebp - 0xc04 ]
mov eax edx
sub ecx eax
mov [ ebp - 0xc10 ] ecx
mov [ ebp - 0xc14 ] ebx
lea ecx [ ecx ]
cmp edi [ eax ]
jne r-xdata
mov [ ecx + edx ] eax
add eax [ edx ]
add edx 0x4
dec ebx
jne r-xdata
xor eax eax
test edi edi
je r-xdata
add [ ebp - 0xc08 ] 0x8
mov eax esi
mov esi [ ebp - 0xc0c ]
sub ecx 0x400
dec [ ebp - 0xc14 ]
mov [ ebp - 0xc0c ] eax
mov [ ebp - 0xc10 ] ecx
jne r-xdata
movzx ebx [ ebp - 0xc08 ]
nop
xor eax eax
mov ebx 0x100
movzx edi [ esi + eax * 4 ]
mov cl bl
mov ebx [ ebp - 0xc0c ]
shr edi cl
inc eax
and edi 0xff
mov ecx [ ebp + edi * 4 - 0xc04 ]
mov edi [ esi + eax * 4 - 0x4 ]
mov [ ebx + ecx * 4 ] edi
movzx ebx [ ebp - 0xc08 ]
movzx edi [ esi + eax * 4 - 0x4 ]
mov cl bl
shr edi cl
and edi 0xff
inc [ ebp + edi * 4 - 0xc04 ]
lea ecx [ ebp + edi * 4 - 0xc04 ]
mov edi [ ebp + 0x8 ]
cmp eax edi
jb r-xdata
mov ecx [ ebp - 0xc10 ]
sub_418460
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
test ebx ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x1
cmp ebx ecx
jne r-xdata
mov dx [ eax + 0x4 ]
add [ eax ] dx
push esi
push edi
lea edi [ ebx - 0x1 ]
xor edx edx
lea esi [ edx + 0x2 ]
mov [ ebp - 0x8 ] edi
cmp edi 0x1
jle r-xdata
mov [ eax ] cx
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
lea edi [ ebx - 0x2 ]
mov [ eax + edi * 4 ] cx
lea ecx [ ebx - 0x3 ]
test ecx ecx
js r-xdata
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x8 ]
mov edx 0x1
xor esi esi
movzx edx [ eax + ecx * 4 ]
mov dx [ eax + edx * 4 ]
inc dx
dec ecx
mov [ eax + ecx * 4 + 0x4 ] dx
jns r-xdata
cmp esi ebx
jge r-xdata
cmp edx esi
jle r-xdata
lea esp [ esp ]
mov di [ eax + edx * 4 ]
mov [ eax + ecx * 4 ] di
mov [ eax + edx * 4 ] cx
inc edx
movzx edi [ eax + esi * 4 ]
cmp [ eax + edx * 4 ] di
jb r-xdata
lea edx [ esi + esi ]
inc ecx
xor esi esi
test edx edx
jg r-xdata
sub edx esi
inc esi
dec [ ebp - 0x4 ]
jns r-xdata
mov di [ eax + edx * 4 ]
add [ eax + ecx * 4 ] di
mov [ eax + edx * 4 ] cx
inc edx
cmp edx ecx
jge r-xdata
mov [ eax + ecx * 4 ] di
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
pop edi
pop esi
mov [ eax + edi * 4 ] cx
dec edi
dec edx
jne r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ eax + ebx * 4 ]
cmp ebx ecx
jne r-xdata
mov di [ eax + esi * 4 ]
add [ eax + ecx * 4 ] di
inc esi
jmp r-xdata
mov di [ eax + edx * 4 ]
cmp di [ eax + esi * 4 ]
jb r-xdata
cmp esi ebx
jge r-xdata
inc ecx
cmp ecx [ ebp - 0x8 ]
jl r-xdata
sub_418560
push ebp
mov ebp esp
sub esp 0xc
push edi
xor edi edi
lea ecx [ esi + 0x1 ]
mov [ ebp - 0xc ] edi
cmp ecx 0x20
jg r-xdata
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
mov edx esi
cmp esi 0x2
jl r-xdata
mov edx [ eax + esi * 4 ]
test edx edx
jle r-xdata
mov edi [ eax + edx * 4 ]
mov ecx esi
sub ecx edx
shl edi cl
inc ecx
sub edx 0x2
add [ ebp - 0x8 ] edi
mov edi [ eax + edx * 4 + 0x4 ]
shl edi cl
add [ ebp - 0x4 ] edi
cmp edx 0x1
jg r-xdata
add edx [ eax + ecx * 4 ]
inc ecx
mov [ eax + esi * 4 ] edx
cmp ecx 0x20
jle r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x8 ]
mov edx 0x1
add edi ecx
mov ecx esi
shl edx cl
cmp edi edx
je r-xdata
mov edi [ eax + edx * 4 ]
mov ecx esi
sub ecx edx
shl edi cl
mov edi [ ebp - 0xc ]
pop edi
mov esp ebp
pop ebp
retn
push ebx
sub edi edx
dec edi
jne r-xdata
cmp [ eax + ecx * 4 ] 0x0
jne r-xdata
dec [ eax + esi * 4 ]
lea ecx [ esi - 0x1 ]
test ecx ecx
jle r-xdata
pop ebx
dec [ eax + ecx * 4 ]
add [ eax + ecx * 4 + 0x4 ] 0x2
lea ecx [ eax + ecx * 4 + 0x4 ]
dec ecx
test ecx ecx
jg r-xdata
jmp r-xdata
sub_418610
push ebp
mov ebp esp
sub esp 0xa1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x84
lea eax [ ebp - 0x88 ]
mov esi ecx
mov edi edx
push 0x0
push eax
mov [ ebp - 0xa10 ] esi
mov [ ebp - 0xa18 ] edi
call sub_4264e0
xor eax eax
add esp 0xc
cmp [ ebp + 0x10 ] eax
je r-xdata
lea edx [ edi + edi * 8 ]
shl edx 0x6
add esi edx
mov edx [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0xa14 ] esi
test edx edx
jle r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0xa0c ]
push eax
push ebx
lea ecx [ ebp - 0x58c ]
call sub_4182e0
add esp 0x8
mov ecx ebx
mov [ ebp - 0xa1c ] eax
call sub_418460
xor ecx ecx
test ebx ebx
jle r-xdata
movzx ecx [ esi + eax * 2 + 0x8192 ]
test cx cx
je r-xdata
mov edx [ ebp + 0xc ]
xor ecx ecx
mov [ ebp - 0x108 ] ecx
cmp edx 0x2
jl r-xdata
lea ecx [ edi + edi * 8 ]
shl ecx 0x5
lea edx [ ecx + esi + 0x8f12 ]
jmp r-xdata
cmp ebx 0x1
jle r-xdata
nop
inc eax
cmp eax edx
jl r-xdata
mov [ ebp + ebx * 4 - 0x58c ] cx
mov [ ebp + ebx * 4 - 0x58a ] ax
inc ebx
xor esi esi
test ebx ebx
jle r-xdata
xor eax eax
dec edx
movzx ecx [ edx + eax ]
inc [ ebp + ecx * 4 - 0x88 ]
lea ecx [ ebp + ecx * 4 - 0x88 ]
inc eax
cmp eax ebx
jl r-xdata
mov ecx [ ebp - 0xa10 ]
lea edi [ edi + edi * 8 ]
push 0x120
shl edi 0x5
lea edx [ edi + ecx + 0x8f12 ]
push 0x0
push edx
call sub_4264e0
mov eax [ ebp - 0xa14 ]
push 0x240
add eax 0x8852
push 0x0
push eax
call sub_4264e0
mov edx 0x1
add esp 0x18
cmp [ ebp + 0xc ] edx
jl r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x88 ]
call sub_418560
movzx edx [ eax + ecx * 4 ]
inc [ ebp + edx * 4 - 0x88 ]
lea edx [ ebp + edx * 4 - 0x88 ]
inc ecx
cmp ecx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0xa10 ]
lea edi [ edi + edi * 8 ]
shl edi 0x5
mov edi edi
mov esi [ ebp + eax - 0x84 ]
add esi ecx
lea ecx [ esi + esi ]
mov [ ebp + eax - 0x104 ] ecx
add eax 0x4
dec edx
jne r-xdata
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov edi [ ebp - 0xa18 ]
nop
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
mov eax [ ebp + edx * 4 - 0x10c ]
lea ebx [ eax + 0x1 ]
mov [ ebp + edx * 4 - 0x10c ] ebx
jle r-xdata
inc edx
cmp edx [ ebp + 0xc ]
jle r-xdata
mov eax [ ebp - 0xa1c ]
lea eax [ eax + ebx * 4 + 0x2 ]
sub ebx ecx
mov [ ebp - 0xa14 ] ebx
lea ecx [ ecx ]
lea eax [ edi + ebx + 0x8f12 ]
movzx edx [ eax + esi ]
xor ecx ecx
test edx edx
je r-xdata
mov ebx [ ebp - 0xa10 ]
lea edx [ edi + esi ]
mov [ ebx + edx * 2 + 0x8852 ] cx
mov ebx eax
and ebx 0x1
add ecx ecx
dec edx
or ecx ebx
shr eax 0x1
test edx edx
jg r-xdata
mov ecx [ ebp + edx * 4 - 0x88 ]
test ecx ecx
jle r-xdata
movzx esi [ eax - 0x4 ]
mov ebx [ ebp - 0xa10 ]
sub eax 0x4
dec ecx
add esi edi
mov [ esi + ebx + 0x8f12 ] dl
test ecx ecx
jg r-xdata
mov ebx [ ebp - 0xa14 ]
sub_418850
push ebp
mov ebp esp
sub esp 0x2a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
mov eax 0x1
push 0xf
push 0x120
xor edx edx
mov ecx esi
mov [ ebp - 0x298 ] 0xff
mov [ esi + 0x8392 ] ax
call sub_418610
push 0x0
push 0xf
push 0x20
mov edx 0x1
mov ecx esi
call sub_418610
add esp 0x18
mov eax 0x11e
mov [ ebp - 0x290 ] eax
mov eax 0x1e
nop
dec eax
cmp eax 0x101
jg r-xdata
push ebx
push edi
mov edi [ ebp - 0x290 ]
push edi
lea ecx [ esi + 0x8f12 ]
push ecx
lea edx [ ebp - 0x284 ]
push edx
mov [ ebp - 0x288 ] eax
call sub_421710
mov ebx [ ebp - 0x288 ]
push ebx
lea eax [ esi + 0x9032 ]
push eax
lea ecx [ ebp + edi - 0x284 ]
push ecx
call sub_421710
xor eax eax
mov [ esi + 0x8612 ] eax
mov [ esi + 0x8616 ] eax
mov [ esi + 0x861a ] eax
mov [ esi + 0x861e ] eax
mov [ esi + 0x8622 ] eax
mov [ esi + 0x8626 ] eax
lea ecx [ ebx + edi ]
mov [ esi + 0x862a ] eax
xor ebx ebx
mov [ esi + 0x862e ] eax
add esp 0x18
xor edi edi
mov [ esi + 0x8632 ] eax
mov [ ebp - 0x2a0 ] ecx
mov [ ebp - 0x28c ] ebx
mov [ esi + 0x8636 ] ax
mov [ ebp - 0x294 ] eax
cmp ecx eax
jbe r-xdata
dec eax
cmp eax 0x1
jg r-xdata
cmp [ esi + eax + 0x8f11 ] 0x0
jne r-xdata
push 0x0
push 0x7
push 0x13
mov edx 0x2
mov ecx esi
call sub_418610
mov ecx [ esi + 0x44 ]
mov edx 0x2
shl edx cl
lea eax [ ecx + 0x2 ]
add esp 0xc
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edx
mov edx 0xfffffff8
cmp eax 0x8
jb r-xdata
lea edx [ ebx + 0x1 ]
mov eax ebx
jmp r-xdata
cmp [ esi + eax + 0x9031 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x290 ]
add ebx 0xfffffeff
cmp ebx 0x1f
jbe r-xdata
lea ecx [ edx + 0x9 ]
lea ebx [ ebx ]
mov ecx [ ebp - 0x294 ]
mov cl [ ebp + ecx - 0x284 ]
mov [ ebp - 0x29c ] cl
test cl cl
jne r-xdata
mov ecx [ esi + 0x44 ]
shl ebx cl
lea eax [ ecx + 0x5 ]
mov edx 0x8
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] ebx
cmp eax edx
jb r-xdata
push 0x7bf
push r--data
push r--data
call sub_42338b
add esp 0xc
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] edx
cmp [ esi + 0x44 ] 0x8
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
add [ esi + 0x30 ] ecx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x288 ]
dec ebx
cmp ebx 0x1f
jbe r-xdata
lea ecx [ edx - 0x10 ]
nop
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
cmp cl [ ebp - 0x298 ]
je r-xdata
cmp eax 0x3
jae r-xdata
add eax edx
mov [ ebp - 0x28c ] eax
cmp eax 0x8a
jne r-xdata
cmp ebx 0x3
jae r-xdata
mov ecx [ esi + 0x44 ]
shl ebx cl
lea eax [ ecx + 0x5 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] ebx
cmp eax edx
jb r-xdata
push 0x7c0
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x8
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] ecx
cmp [ esi + 0x44 ] edx
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
inc [ esi + 0x30 ]
mov edx 0x1
add ebx edx
cmp ebx 0x6
jne r-xdata
test ebx ebx
je r-xdata
cmp eax 0xa
ja r-xdata
mov eax [ ebp - 0x28c ]
add [ esi + 0x8612 ] ax
push eax
lea ecx [ ebp + edi - 0x144 ]
push 0x0
push ecx
call sub_4264e0
add esp 0xc
add edi [ ebp - 0x28c ]
jmp r-xdata
mov cl [ ebp - 0x29c ]
mov [ ebp - 0x298 ] cl
mov ecx [ ebp - 0x294 ]
add ecx edx
mov [ ebp - 0x294 ] ecx
cmp ecx [ ebp - 0x2a0 ]
jb r-xdata
add [ esi + 0x8636 ] dx
mov [ ebp + edi - 0x144 ] 0x12
add edi edx
mov [ ebp + edi - 0x144 ] 0x7f
add edi edx
xor eax eax
mov [ ebp - 0x28c ] eax
jmp r-xdata
add [ esi + 0x8632 ] dx
mov [ ebp + edi - 0x144 ] 0x10
add edi edx
sub bl 0x3
mov [ ebp + edi - 0x144 ] bl
add edi edx
movzx edx [ ebp - 0x298 ]
mov ecx [ ebp - 0x298 ]
add [ esi + edx * 2 + 0x8612 ] bx
lea eax [ esi + edx * 2 + 0x8612 ]
push ebx
lea eax [ ebp + edi - 0x144 ]
push ecx
push eax
call sub_4264e0
mov eax [ ebp - 0x28c ]
add esp 0xc
add edi ebx
mov edx 0x1
jmp r-xdata
mov eax 0x12
mov ecx 0xfffffff8
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
add [ esi + 0x8632 ] dx
mov [ ebp + edi - 0x144 ] 0x10
add edi edx
mov [ ebp + edi - 0x144 ] 0x3
add edi edx
xor ebx ebx
mov edx 0x1
cmp ebx 0x3
jae r-xdata
add [ esi + 0x8636 ] dx
mov [ ebp + edi - 0x144 ] 0x12
sub al 0xb
add [ esi + 0x8634 ] dx
mov [ ebp + edi - 0x144 ] 0x11
sub al 0x3
jmp r-xdata
mov cl [ ebp - 0x29c ]
xor eax eax
mov [ ebp - 0x28c ] eax
test ebx ebx
je r-xdata
xor ebx ebx
inc eax
mov [ ebp - 0x288 ] 0x4
cmp eax 0x4
jl r-xdata
dec eax
jns r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov cl [ ebp - 0x29c ]
mov edx 0x1
add [ esi + 0x8632 ] dx
mov [ ebp + edi - 0x144 ] 0x10
add edi edx
sub bl 0x3
mov [ ebp + edi - 0x144 ] bl
add edi edx
xor ebx ebx
jmp r-xdata
movzx edx [ ebp - 0x298 ]
mov ecx [ ebp - 0x298 ]
add [ esi + edx * 2 + 0x8612 ] bx
lea eax [ esi + edx * 2 + 0x8612 ]
push ebx
lea eax [ ebp + edi - 0x144 ]
push ecx
push eax
call sub_4264e0
mov eax [ ebp - 0x28c ]
mov cl [ ebp - 0x29c ]
add esp 0xc
add edi ebx
mov edx 0x1
xor ebx ebx
jmp r-xdata
add edi edx
mov [ ebp + edi - 0x144 ] al
add edi edx
test eax eax
je r-xdata
cmp ebx 0x3
jae r-xdata
mov ebx [ ebp - 0x288 ]
add ebx 0xfffffffc
cmp ebx 0xf
jbe r-xdata
mov [ ebp - 0x288 ] eax
movzx ecx [ eax + rw-data ]
cmp [ ecx + esi + 0x9152 ] 0x0
jne r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] ecx
cmp [ esi + 0x44 ] edx
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
inc [ esi + 0x30 ]
movzx ecx cl
add [ esi + ecx * 2 + 0x8612 ] dx
lea ecx [ esi + ecx * 2 + 0x8612 ]
mov cl [ ebp - 0x29c ]
mov [ ebp + edi - 0x144 ] cl
add edi edx
jmp r-xdata
cmp eax 0x3
jae r-xdata
add [ esi + 0x8632 ] dx
mov [ ebp + edi - 0x144 ] 0x10
add edi edx
sub bl 0x3
mov [ ebp + edi - 0x144 ] bl
add edi edx
jmp r-xdata
movzx edx [ ebp - 0x29c ]
mov ecx [ ebp - 0x29c ]
add [ esi + edx * 2 + 0x8612 ] bx
lea eax [ esi + edx * 2 + 0x8612 ]
push ebx
lea eax [ ebp + edi - 0x144 ]
push ecx
push eax
call sub_4264e0
add esp 0xc
add edi ebx
jmp r-xdata
mov ecx [ esi + 0x44 ]
shl ebx cl
lea eax [ ecx + 0x4 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] ebx
cmp eax edx
jb r-xdata
push 0x7c3
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x8
cmp eax 0xa
ja r-xdata
mov ebx [ ebp - 0x28c ]
add [ esi + 0x8612 ] bx
push ebx
lea eax [ ebp + edi - 0x144 ]
push 0x0
push eax
call sub_4264e0
add esp 0xc
add edi ebx
jmp r-xdata
cmp [ ebp - 0x288 ] 0x0
mov [ ebp - 0x294 ] 0x0
jle r-xdata
mov ecx 0xfffffff8
lea esp [ esp ]
inc [ esi + 0x8636 ]
mov [ ebp + edi - 0x144 ] 0x12
sub al 0xb
inc [ esi + 0x8634 ]
mov [ ebp + edi - 0x144 ] 0x11
sub al 0x3
jmp r-xdata
xor eax eax
test edi edi
je r-xdata
mov edx [ ebp - 0x294 ]
lea esp [ esp ]
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] ecx
cmp [ esi + 0x44 ] edx
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
inc [ esi + 0x30 ]
mov [ ebp + edi - 0x143 ] al
add edi 0x2
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx [ esi + 0x44 ]
shl ebx cl
lea eax [ ecx + 0x3 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] ebx
cmp eax 0x8
jb r-xdata
push 0x7c4
push r--data
push r--data
call sub_42338b
mov edx [ ebp - 0x294 ]
add esp 0xc
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
movzx ecx [ ebp + eax - 0x144 ]
inc eax
mov [ ebp - 0x290 ] ecx
mov [ ebp - 0x288 ] eax
cmp ecx 0x13
jb r-xdata
inc edx
mov [ ebp - 0x294 ] edx
cmp edx [ ebp - 0x288 ]
jl r-xdata
mov ecx 0x8
lea esp [ esp ]
mov eax [ ebp - 0x290 ]
movzx ebx [ esi + eax * 2 + 0x8cd2 ]
movzx eax [ esi + eax + 0x9152 ]
mov edx 0x1
mov ecx eax
shl edx cl
mov [ ebp - 0x2a0 ] eax
dec edx
cmp ebx edx
jbe r-xdata
push 0x7c8
push r--data
push r--data
call sub_42338b
add esp 0xc
movzx eax [ edx + rw-data ]
movzx ebx [ eax + esi + 0x9152 ]
cmp ebx 0x7
jbe r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] ecx
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
inc [ esi + 0x30 ]
mov ecx [ esi + 0x44 ]
shl ebx cl
add eax ecx
mov edx 0x8
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] ebx
cmp eax edx
jb r-xdata
push 0x7c9
push r--data
push r--data
call sub_42338b
mov eax [ ebp - 0x2a0 ]
add esp 0xc
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
cmp [ ebp - 0x290 ] 0x10
jb r-xdata
lea ecx [ edx - 0x10 ]
cmp [ ebp - 0x288 ] edi
jb r-xdata
mov eax [ ebp - 0x288 ]
movzx ebx [ ebp + eax - 0x144 ]
inc eax
mov [ ebp - 0x288 ] eax
mov eax [ ebp - 0x290 ]
movsx eax [ eax + r--data ]
mov edx 0x1
mov ecx eax
shl edx cl
mov [ ebp - 0x2a0 ] eax
dec edx
cmp ebx edx
jbe r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] ecx
cmp [ esi + 0x44 ] edx
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
inc [ esi + 0x30 ]
mov eax [ ebp - 0x288 ]
mov ecx [ esi + 0x44 ]
shl ebx cl
add eax ecx
mov edx 0x8
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] ebx
cmp eax edx
jb r-xdata
push 0x7ca
push r--data
push r--data
call sub_42338b
mov eax [ ebp - 0x2a0 ]
add esp 0xc
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
lea ecx [ edx - 0x10 ]
lea esp [ esp ]
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] ecx
cmp [ esi + 0x44 ] edx
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
inc [ esi + 0x30 ]
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
sub_419030
push edi
push 0x90
lea edi [ esi + 0x8f12 ]
push 0x8
push edi
call sub_4264e0
push 0x70
add edi 0x90
push 0x9
push edi
call sub_4264e0
mov eax 0x7070707
mov [ edi + 0x70 ] eax
mov [ edi + 0x74 ] eax
mov [ edi + 0x78 ] eax
mov [ edi + 0x7c ] eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
mov eax 0x8080808
mov [ edi + 0x88 ] eax
mov [ edi + 0x8c ] eax
mov eax 0x5050505
mov [ esi + 0x9032 ] eax
mov [ esi + 0x9036 ] eax
mov [ esi + 0x903a ] eax
mov [ esi + 0x903e ] eax
mov edi 0x1
mov [ esi + 0x9042 ] eax
push edi
mov [ esi + 0x9046 ] eax
push 0xf
mov [ esi + 0x904a ] eax
push 0x120
xor edx edx
mov ecx esi
mov [ esi + 0x904e ] eax
call sub_418610
push edi
push 0xf
push 0x20
mov edx edi
mov ecx esi
call sub_418610
mov ecx [ esi + 0x44 ]
mov eax edi
shl eax cl
add esp 0x30
or [ esi + 0x48 ] eax
lea eax [ ecx + 0x2 ]
mov [ esi + 0x44 ] eax
cmp eax 0x8
jb r-xdata
pop edi
retn
lea ecx [ edi - 0x9 ]
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] ecx
cmp [ esi + 0x44 ] 0x8
jae r-xdata
mov dl [ esi + 0x48 ]
mov [ eax ] dl
add [ esi + 0x30 ] edi
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
sub_419120
push ebp
mov ebp esp
sub esp 0x10
lea eax [ esi + 0x9272 ]
push ebx
push edi
mov [ ebp - 0x4 ] 0x1
cmp eax [ esi + 0x28 ]
jae r-xdata
movzx ebx [ esi + 0x9012 ]
movzx edi [ esi + 0x8a52 ]
mov edx 0x1
mov ecx ebx
shl edx cl
dec edx
cmp edi edx
jbe r-xdata
jmp r-xdata
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + ebx ]
mov ecx 0x8
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax ecx
jb r-xdata
push 0x863
push r--data
push r--data
call sub_42338b
add esp 0xc
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
pop edi
sbb eax eax
neg eax
pop ebx
mov esp ebp
pop ebp
retn
lea edi [ ecx - 0x7 ]
lea esp [ esp ]
test [ ebp - 0x4 ] 0x1
je r-xdata
movzx ecx [ eax ]
or ecx 0x100
mov [ ebp - 0x4 ] ecx
inc eax
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] ecx
jae r-xdata
mov dl [ esi + 0x48 ]
mov [ eax ] dl
add [ esi + 0x30 ] edi
movzx ebx [ eax ]
inc eax
cmp [ ebx + esi + 0x8f12 ] 0x0
mov [ ebp - 0xc ] eax
jne r-xdata
movzx edi [ eax ]
movzx ecx [ eax + 0x2 ]
movzx edx [ eax + 0x1 ]
add eax 0x3
mov [ ebp - 0xc ] eax
movzx eax [ edi * 2 + r--data ]
shl ecx 0x8
or ecx edx
cmp [ eax + esi + 0x8f12 ] 0x0
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
movzx edi [ esi + ebx * 2 + 0x8852 ]
movzx ebx [ ebx + esi + 0x8f12 ]
mov edx 0x1
mov ecx ebx
shl edx cl
dec edx
cmp edi edx
jbe r-xdata
push 0x85e
push r--data
push r--data
call sub_42338b
add esp 0xc
movzx eax [ edi * 2 + r--data ]
movzx ebx [ eax + esi + 0x8f12 ]
movzx edi [ esi + eax * 2 + 0x8852 ]
mov edx 0x1
mov ecx ebx
shl edx cl
dec edx
cmp edi edx
jbe r-xdata
push 0x84b
push r--data
push r--data
call sub_42338b
add esp 0xc
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + ebx ]
mov ecx 0x8
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax ecx
jb r-xdata
push 0x85f
push r--data
push r--data
call sub_42338b
add esp 0xc
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + ebx ]
mov edx 0x8
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax edx
jb r-xdata
push 0x84c
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ ebp - 0xc ]
shr [ ebp - 0x4 ] 0x1
cmp eax [ esi + 0x28 ]
jb r-xdata
lea edi [ ecx - 0x7 ]
lea esp [ esp ]
mov eax [ ebp - 0x10 ]
movzx ebx [ eax + r--data ]
mov edi [ ebx * 4 + r--data ]
and edi eax
mov eax 0x1
mov ecx ebx
shl eax cl
dec eax
cmp edi eax
jbe r-xdata
lea esp [ esp ]
mov eax [ ebp - 0xc ]
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] ecx
jae r-xdata
mov dl [ esi + 0x48 ]
mov [ eax ] dl
add [ esi + 0x30 ] edi
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + ebx ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax edx
jb r-xdata
push 0x84d
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x8
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] edx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
inc [ esi + 0x30 ]
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax 0x200
jae r-xdata
lea esp [ esp ]
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
shr eax 0x8
movzx ecx [ eax + r--data ]
movzx ebx [ eax + r--data ]
mov [ ebp - 0x10 ] ecx
movzx ebx [ eax + r--data ]
mov edx eax
movzx eax [ edx + r--data ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] edx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
inc [ esi + 0x30 ]
movzx edi [ esi + ebx * 2 + 0x8a92 ]
movzx ebx [ ebx + esi + 0x9032 ]
mov edx 0x1
mov ecx ebx
shl edx cl
dec edx
cmp edi edx
jbe r-xdata
push 0x857
push r--data
push r--data
call sub_42338b
add esp 0xc
cmp [ ebx + esi + 0x9032 ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + ebx ]
mov edx 0x8
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax edx
jb r-xdata
push 0x858
push r--data
push r--data
call sub_42338b
add esp 0xc
mov ebx [ ebp - 0x10 ]
mov edi [ ebx * 4 + r--data ]
and edi [ ebp - 0x8 ]
mov eax 0x1
mov ecx ebx
shl eax cl
dec eax
cmp edi eax
jbe r-xdata
lea ecx [ ecx ]
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + ebx ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax edx
jb r-xdata
push 0x859
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x8
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] edx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
inc [ esi + 0x30 ]
lea ebx [ ebx ]
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] edx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
inc [ esi + 0x30 ]
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
jmp r-xdata
sub_4194f0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi eax
je r-xdata
call sub_418850
call sub_419120
pop esi
pop ebp
retn
call sub_419030
call sub_419120
pop esi
pop ebp
retn
sub_419520
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi eax
xor edi edi
test [ esi + 0x8 ] 0x80000
mov [ ebp - 0x8 ] edi
je r-xdata
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x1c ]
sub eax [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x1
cmp eax [ esi + 0x24 ]
jbe r-xdata
lea eax [ esi + 0x39272 ]
mov edx [ esi + 0x7c ]
mov ecx [ esi + 0x8c ]
mov eax [ edx ]
sub eax ecx
cmp eax 0x14ccc
jb r-xdata
cmp [ esi ] edi
jne r-xdata
mov cl [ esi + 0x38 ]
mov eax [ esi + 0x2c ]
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
shr [ eax ] cl
xor ecx ecx
mov ebx 0x8
cmp [ esi + 0x38 ] ebx
sete cl
sub [ esi + 0x28 ] ecx
test [ esi + 0x8 ] 0x1000
je r-xdata
push 0x87d
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ esi + 0x74 ]
add eax ecx
jmp r-xdata
mov edx 0x1
cmp [ esi + 0x64 ] edi
jne r-xdata
mov [ ebp - 0x10 ] eax
mov [ esi + 0x30 ] eax
add eax 0x14cbc
mov [ esi + 0x34 ] eax
cmp [ esi + 0x5c ] edi
je r-xdata
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + 0x1 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax ebx
jb r-xdata
push 0x889
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x1
mov ecx [ esi + 0x44 ]
mov edx 0x78
shl edx cl
lea eax [ ecx + 0x8 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edx
lea edx [ ebx - 0x7 ]
cmp eax ebx
jb r-xdata
cmp [ ebp - 0x4 ] 0x0
mov edx [ esi + 0x48 ]
mov edi [ esi + 0x30 ]
mov ebx [ esi + 0x44 ]
mov [ ebp - 0xc ] edx
jne r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov ecx [ esi + 0x44 ]
mov eax edx
shl eax cl
or [ esi + 0x48 ] eax
lea eax [ ecx + 0x8 ]
mov [ esi + 0x44 ] eax
cmp eax ebx
jb r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov edx [ esi + 0x1c ]
sub edx [ esi + 0x40 ]
cmp edx [ esi + 0x24 ]
ja r-xdata
test [ esi + 0x8 ] 0x40000
jne r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] ebx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
add [ esi + 0x30 ] edx
xor eax eax
cmp [ ebp + 0x8 ] 0x4
sete al
mov edi eax
cmp edi edx
jbe r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] ebx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
add [ esi + 0x30 ] edx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
mov ecx ebx
shl eax cl
mov [ esi + 0x30 ] edi
mov edx 0x1
or eax [ ebp - 0xc ]
mov [ esi + 0x48 ] eax
lea eax [ ebx + 0x2 ]
mov [ esi + 0x44 ] eax
cmp eax 0x8
jb r-xdata
call sub_419030
jmp r-xdata
cmp [ esi + 0x3c ] 0x30
jae r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] ebx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
add [ esi + 0x30 ] edx
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
mov [ esi + 0x30 ] edi
mov [ esi + 0x48 ] edx
mov [ esi + 0x44 ] ebx
call sub_419030
call sub_419120
mov ecx [ esi + 0x44 ]
test ecx ecx
je r-xdata
lea ecx [ edx - 0x9 ]
lea edi [ edx + 0x7 ]
call sub_419120
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
call sub_418850
jmp r-xdata
mov edx [ esi + 0x30 ]
cmp edx [ esi + 0x34 ]
jb r-xdata
mov ecx [ esi + 0x44 ]
cmp eax 0x4
jne r-xdata
mov ebx 0x2
mov edi 0x8
xor ebx ebx
shl ebx cl
mov eax edi
sub eax ecx
add eax ecx
or [ esi + 0x48 ] ebx
mov [ esi + 0x44 ] eax
cmp eax edi
jb r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] ecx
cmp [ esi + 0x44 ] edi
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
add [ esi + 0x30 ] edx
mov ecx [ esi + 0x30 ]
sub ecx edi
inc ecx
cmp ecx eax
jb r-xdata
push 0x240
lea eax [ esi + 0x8192 ]
push 0x0
push eax
call sub_4264e0
push 0x40
lea ecx [ esi + 0x83d2 ]
push 0x0
push ecx
call sub_4264e0
mov ecx [ esi + 0x3c ]
mov edi [ esi + 0x30 ]
add [ esi + 0x40 ] ecx
inc [ esi + 0x64 ]
lea eax [ esi + 0x9272 ]
mov [ esi + 0x2c ] eax
mov eax [ ebp - 0x10 ]
add esp 0x18
sub edi eax
lea edx [ esi + 0x9273 ]
mov [ esi + 0x28 ] edx
mov [ esi + 0x38 ] 0x8
mov [ esi + 0x3c ] 0x0
je r-xdata
push 0x8b4
push r--data
push r--data
call sub_42338b
add esp 0xc
xor edx edx
shl edx cl
lea eax [ ecx + 0x3 ]
mov [ ebp + 0x8 ] 0x0
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edx
mov edx 0x8
lea edi [ edx - 0x10 ]
cmp eax edx
jb r-xdata
test ecx ecx
je r-xdata
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + 0x10 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax 0x8
jb r-xdata
push 0x899
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov eax [ esi + 0x5c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi ] 0x0
je r-xdata
mov ecx [ esi + 0x44 ]
test ecx ecx
je r-xdata
lea ecx [ edx - 0x7 ]
mov edi edi
mov edx 0x1
mov ebx 0x8
xor edx edx
shl edx cl
mov eax ebx
sub eax ecx
add eax ecx
or [ esi + 0x48 ] edx
mov [ esi + 0x44 ] eax
lea edx [ ebx - 0x7 ]
cmp eax ebx
jb r-xdata
xor [ esi + 0x3c ] 0xffff
sub ebx edx
mov eax [ esi + 0x3c ]
jne r-xdata
lea ecx [ ecx ]
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] edi
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
add [ esi + 0x30 ] edx
lea ecx [ esi + 0x39272 ]
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x84 ]
sub edx [ esi + 0x70 ]
mov eax [ esi + 0x78 ]
mov [ eax ] edx
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
push ecx
lea edx [ esi + 0x39272 ]
push edi
push edx
call eax
add esp 0xc
test eax eax
jne r-xdata
mov ebx 0x2
xor ebx ebx
shl ebx cl
mov eax edx
sub eax ecx
add eax ecx
or [ esi + 0x48 ] ebx
mov [ esi + 0x44 ] eax
cmp eax edx
jb r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] edi
cmp [ esi + 0x44 ] edx
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
add [ esi + 0x30 ] ecx
mov ebx [ esi + 0x18 ]
mov [ ebp + 0x8 ] 0x4
lea ecx [ ecx ]
test [ esi + 0x8 ] 0x1000
je r-xdata
lea edi [ ebx - 0x10 ]
movzx edi [ esi + 0x3c ]
cmp edi 0xffff
jbe r-xdata
test eax eax
je r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] 0x8
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
add [ esi + 0x30 ] edx
add [ esi + 0x8c ] edi
mov edx [ esi + 0x7c ]
mov eax [ esi + 0x8c ]
mov ebx [ edx ]
sub ebx eax
cmp edi ebx
jae r-xdata
or eax 0xffffffff
pop edi
mov [ esi + 0x6c ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + 0x10 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax edx
jb r-xdata
push 0x8b0
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x8
mov ecx 0x1
lea esp [ esp ]
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + 0x8 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax 0x8
jb r-xdata
push 0x8ac
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x1
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] edi
cmp [ esi + 0x44 ] ebx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
add [ esi + 0x30 ] edx
lea edx [ ebx + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
push ebx
push ecx
mov ecx [ esi + 0x74 ]
add ecx eax
push ecx
call sub_421710
add [ esi + 0x8c ] ebx
add esp 0xc
sub edi ebx
je r-xdata
mov ebx edi
xor [ ebp + 0x8 ] 0xffff
dec ebx
jne r-xdata
jmp r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] edi
cmp [ esi + 0x44 ] edx
jae r-xdata
mov bl [ esi + 0x48 ]
mov [ eax ] bl
add [ esi + 0x30 ] ecx
shl ebx 0x8
sub [ ebp + 0x8 ] edx
jne r-xdata
lea esp [ esp ]
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
jmp r-xdata
mov eax [ esi + 0x40 ]
add eax ebx
and eax 0x7fff
movzx edi [ eax + esi + 0x90 ]
cmp edi 0xff
jbe r-xdata
mov [ esi + 0x5c ] edi
mov eax edi
pop edi
mov [ esi + 0x58 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx edi [ ebp + 0x8 ]
cmp edi 0xffff
jbe r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
mov edi ebx
shr edi 0x18
cmp edi 0xff
jbe r-xdata
jmp r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] 0x8
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
add [ esi + 0x30 ] edx
mov ecx [ esi + 0x44 ]
shl edi cl
lea eax [ ecx + 0x8 ]
mov [ esi + 0x44 ] eax
or [ esi + 0x48 ] edi
cmp eax edx
jb r-xdata
push 0x89d
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx 0x8
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] edx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
inc [ esi + 0x30 ]
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
inc ebx
cmp ebx [ esi + 0x3c ]
jb r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x34 ]
jae r-xdata
jmp r-xdata
shr [ esi + 0x48 ] 0x8
add [ esi + 0x44 ] 0xfffffff8
cmp [ esi + 0x44 ] edx
jae r-xdata
mov cl [ esi + 0x48 ]
mov [ eax ] cl
inc [ esi + 0x30 ]
sub_419b50
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
and esi 0x7fff
push edi
mov edi [ eax ]
cmp edi 0x20
sbb ecx ecx
cmp [ ebp + 0x14 ] 0x102
mov edx [ ebx + ecx * 4 + 0x10 ]
lea eax [ esi + ebx ]
lea ecx [ edi + esi ]
mov [ ebp - 0xc ] edx
movzx edx [ ecx + ebx + 0x8f ]
mov [ ebp - 0x8 ] eax
movzx eax [ eax + 0x90 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
jbe r-xdata
cmp [ ebp + 0x14 ] edi
jbe r-xdata
push 0x8df
push r--data
push r--data
call sub_42338b
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
dec [ ebp - 0xc ]
je r-xdata
movzx esi [ ebx + esi * 2 + 0x19272 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
sub ecx esi
movzx edi cx
cmp edi edx
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
and esi 0x7fff
lea eax [ eax + ebx + 0x8f ]
cmp [ eax + esi ] cx
je r-xdata
test edi edi
je r-xdata
movzx esi [ ebx + esi * 2 + 0x19272 ]
test esi esi
je r-xdata
mov dx [ ebp - 0x14 ]
cmp [ esi + ebx + 0x90 ] dx
lea ecx [ esi + ebx + 0x90 ]
jne r-xdata
mov edi [ ebp + 0xc ]
sub edi esi
movzx edi di
cmp edi edx
ja r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x90
mov edx 0x20
and esi 0x7fff
cmp [ eax + esi ] cx
je r-xdata
test edx edx
je r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
cmp bx [ ecx ]
jne r-xdata
movzx esi [ ebx + esi * 2 + 0x19272 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x14 ]
cmp eax 0x102
jb r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x90
mov ebx eax
mov al [ eax ]
sub ebx edx
xor edx edx
sar ebx 0x1
cmp al [ ecx ]
sete dl
lea eax [ edx + ebx * 2 ]
cmp eax [ ebp - 0x4 ]
jbe r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
cmp bx [ ecx ]
jne r-xdata
mov edi [ ebp + 0xc ]
sub edi esi
movzx edi di
cmp edi edx
ja r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov eax 0x102
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov [ ecx ] edi
mov ecx [ ebp + 0x14 ]
cmp ecx eax
jae r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
cmp bx [ ecx ]
jne r-xdata
and esi 0x7fff
cmp [ eax + esi ] cx
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec edx
jne r-xdata
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + eax + 0x8f ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
cmp eax ecx
je r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
cmp bx [ ecx ]
jne r-xdata
sub_419d50
push ebp
mov ebp esp
sub esp 0x2c
mov edx [ esi + 0x24 ]
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] edx
mov edx [ esi + 0x3c ]
mov [ ebp - 0x1c ] edx
mov edx [ esi + 0x38 ]
push ebx
push edi
mov edi [ esi + 0x28 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] edx
mov edx [ esi + 0x2c ]
and eax 0x7fff
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ esi + 0x88 ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
lea ebx [ ecx + edx ]
mov edx 0x1000
sub edx ecx
and ebx 0x7fff
cmp eax edx
jae r-xdata
cmp [ esi + 0x80 ] eax
je r-xdata
mov [ ebp - 0x20 ] edx
mov edx eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x1c ] edx
mov edx [ ebp - 0x8 ]
mov [ esi + 0x20 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x28 ] edi
pop edi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ecx
mov [ esi + 0x2c ] edx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax 0x8000
sub eax ecx
cmp eax [ ebp - 0x4 ]
jae r-xdata
jmp r-xdata
sub eax edx
add ecx edx
mov [ esi + 0x88 ] eax
mov [ ebp - 0x14 ] ecx
test edx edx
je r-xdata
cmp [ esi + 0x80 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax 0x8000
sub eax ebx
mov [ ebp - 0x28 ] eax
cmp eax edx
jb r-xdata
cmp ecx 0x4
jb r-xdata
cmp ecx 0x1000
jb r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ esi + 0x84 ]
push eax
push ecx
lea edx [ esi + ebx + 0x90 ]
push edx
call sub_421710
add esp 0xc
cmp ebx 0x101
jae r-xdata
mov [ ebp - 0x28 ] edx
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
add [ esi + 0x84 ] eax
add ebx eax
and ebx 0x7fff
sub [ ebp - 0x20 ] eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax 0x101
sub eax ebx
cmp ecx eax
jae r-xdata
lea ebx [ esi + 0x1926a ]
lea esp [ esp ]
mov edx [ ebp - 0x24 ]
mov ecx [ esi + edx + 0x90 ]
lea eax [ esi + edx + 0x90 ]
mov [ ebp - 0x2c ] eax
and ecx 0xffffff
mov eax ecx
shr eax 0x11
xor eax ecx
and eax 0xfff
movzx edx [ esi + eax * 2 + 0x29272 ]
mov [ ebp - 0x20 ] edx
mov edx [ ebp - 0x18 ]
mov [ esi + eax * 2 + 0x29272 ] dx
sub edx [ ebp - 0x20 ]
mov ebx 0x1
movzx eax dx
mov [ ebp - 0x28 ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
push eax
mov eax [ esi + 0x84 ]
push eax
lea ecx [ ebx + esi + 0x8090 ]
push ecx
call sub_421710
add esp 0xc
mov eax ecx
inc [ ebp - 0x18 ]
movzx edx al
inc [ esi + edx * 2 + 0x8192 ]
lea eax [ esi + edx * 2 + 0x8192 ]
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax 0x8000
jb r-xdata
mov [ ebp - 0x8 ] edi
inc edi
mov [ ebp - 0xc ] 0x8
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x8 ]
mov [ edi ] cl
movzx edx cl
inc edi
shr [ eax ] 0x1
lea eax [ esi + edx * 2 + 0x8192 ]
mov eax [ ebp - 0x20 ]
and eax 0x7fff
lea edx [ esi + eax + 0x90 ]
mov eax [ edx ]
and eax 0xffffff
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x24 ]
inc eax
and eax 0x7fff
dec ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x14 ] ecx
cmp edi ebx
jbe r-xdata
mov [ ebp - 0x4 ] 0x8000
mov eax [ ebp - 0x4 ]
add [ ebp - 0x1c ] ebx
add [ ebp - 0x18 ] ebx
add eax ebx
mov [ ebp - 0x4 ] eax
cmp eax 0x8000
jb r-xdata
mov [ ebp - 0x8 ] edi
inc edi
mov [ ebp - 0xc ] 0x8
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x2c ]
mov edi edx
lea edx [ ebx + 0x1f ]
lea esp [ esp ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x1c ] edx
mov edx [ ebp - 0x8 ]
mov [ esi + 0x20 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x38 ] eax
push 0x0
mov eax esi
mov [ esi + 0x3c ] ecx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edx
call sub_419520
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
lea edx [ ebx + ecx ]
and edx 0x7fff
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x14 ] ebx
jae r-xdata
mov [ ebp - 0x4 ] 0x8000
mov [ ebp - 0x20 ] edx
mov edx eax
sub edx [ ebp - 0x2c ]
mov al [ eax ]
xor ebx ebx
sar edx 0x1
cmp al [ edi ]
mov edi [ ebp - 0x28 ]
sete bl
cmp [ ebp - 0x20 ] 0x0
lea ebx [ ebx + edx * 2 ]
jne r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add edi 0x2
cmp bx [ edi ]
jne r-xdata
mov eax [ ebp - 0x24 ]
mov al [ esi + eax + 0x90 ]
mov edx [ ebp - 0x8 ]
inc [ ebp - 0x1c ]
mov [ edi ] al
shr [ edx ] 0x1
inc edi
dec [ ebp - 0xc ]
mov [ ebp - 0x10 ] edi
jne r-xdata
jmp r-xdata
xor edx edx
test eax eax
setns dl
pop edi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x3c ]
mov edi [ esi + 0x28 ]
mov edx [ esi + 0x2c ]
mov eax [ esi + 0x38 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
sub [ ebp - 0x14 ] ebx
lea eax [ esi + 0x1926a ]
cmp edi eax
jbe r-xdata
push 0x973
push r--data
push r--data
call sub_42338b
add esp 0xc
cmp ebx 0x3
jb r-xdata
mov ebx edi
neg ebx
sbb ebx ebx
and ebx 0x102
mov bx [ eax + 0x2 ]
add eax 0x2
add edi 0x2
cmp bx [ edi ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x4
jae r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x20 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x24 ] edx
mov edx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
push 0x0
mov eax esi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ecx
mov [ esi + 0x38 ] edx
call sub_419520
add esp 0x4
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ edi ] cl
movzx ecx cl
inc edi
shr [ eax ] 0x1
mov ebx 0x1
lea eax [ esi + ecx * 2 + 0x8192 ]
jmp r-xdata
jne r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add edi 0x2
cmp bx [ edi ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
xor ecx ecx
test eax eax
setns cl
pop edi
pop ebx
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x3c ]
mov edi [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x14 ]
cmp ebx eax
jb r-xdata
cmp edi 0x2000
jae r-xdata
dec edx
jne r-xdata
cmp ebx 0x3
jb r-xdata
mov ebx eax
mov bx [ eax + 0x2 ]
add eax 0x2
add edi 0x2
cmp bx [ edi ]
jne r-xdata
push 0x956
push r--data
push r--data
call sub_42338b
add esp 0xc
cmp edi 0x1
jb r-xdata
shr eax 0x8
movzx eax [ eax + r--data ]
and eax 0x1ff
movzx eax [ eax + r--data ]
jmp r-xdata
cmp edi 0x8000
jbe r-xdata
inc [ eax ]
dec [ ebp - 0xc ]
jne r-xdata
inc [ esi + eax * 2 + 0x83d2 ]
movzx eax [ ebx * 2 + r--data ]
lea eax [ esi + eax * 2 + 0x8192 ]
jmp r-xdata
dec edi
mov [ ebp - 0x28 ] edi
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
lea ecx [ ebx - 0x3 ]
mov [ edi ] cl
mov ecx [ ebp - 0x8 ]
mov [ edi + 0x1 ] ax
mov dl [ ecx ]
shr dl 0x1
add edi 0x3
or dl 0x80
mov [ ebp - 0x10 ] edi
mov [ ecx ] dl
cmp eax 0x200
jae r-xdata
sub_41a250
mov ecx [ eax + 0x28 ]
inc [ eax + 0x3c ]
mov [ ecx ] dl
inc [ eax + 0x28 ]
mov ecx [ eax + 0x2c ]
shr [ ecx ] 0x1
dec [ eax + 0x38 ]
jne r-xdata
movzx edx dl
inc [ eax + edx * 2 + 0x8192 ]
lea eax [ eax + edx * 2 + 0x8192 ]
retn
mov ecx [ eax + 0x28 ]
mov [ eax + 0x2c ] ecx
inc ecx
mov [ eax + 0x38 ] 0x8
mov [ eax + 0x28 ] ecx
sub_41a290
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov ebx eax
cmp ecx 0x3
jb r-xdata
push 0x9af
push r--data
push r--data
call sub_42338b
mov ecx [ ebp + 0x8 ]
add esp 0xc
cmp ebx 0x1
jb r-xdata
cmp ebx 0x200
jae r-xdata
mov edx [ esi + 0x28 ]
mov [ esi + 0x2c ] edx
inc edx
mov [ esi + 0x38 ] 0x8
mov [ esi + 0x28 ] edx
cmp ebx 0x8000
jbe r-xdata
and eax 0x7f
movzx eax [ eax + r--data ]
and ebx 0x1ff
movzx eax [ ebx + r--data ]
jmp r-xdata
mov edx [ esi + 0x28 ]
add [ esi + 0x3c ] ecx
lea eax [ ecx - 0x3 ]
mov [ edx ] al
mov eax [ esi + 0x28 ]
dec ebx
mov [ eax + 0x1 ] bl
mov edx [ esi + 0x28 ]
mov eax ebx
shr eax 0x8
mov [ edx + 0x2 ] al
add [ esi + 0x28 ] 0x3
push edi
mov edi [ esi + 0x2c ]
mov dl [ edi ]
shr dl 0x1
or dl 0x80
mov [ edi ] dl
dec [ esi + 0x38 ]
pop edi
jne r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax [ ecx * 2 + r--data ]
inc [ esi + eax * 2 + 0x8192 ]
lea esi [ esi + eax * 2 + 0x8192 ]
inc [ esi + eax * 2 + 0x83d2 ]
cmp ecx 0x3
jb r-xdata
sub_41a360
push ebp
mov ebp esp
sub esp 0x40
mov eax [ esi + 0x84 ]
mov ecx [ esi + 0x88 ]
mov edx [ esi + 0x80 ]
push ebx
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x34 ] edx
mov ebx [ esi + 0x20 ]
mov eax [ esi + 0x24 ]
add eax ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x34 ] edi
je r-xdata
test edi edi
je r-xdata
mov edi [ esi + 0x1c ]
add edi ebx
mov ecx edi
add edi 0xfffffffe
mov edx edi
and edx 0x7fff
movzx eax [ edx + esi + 0x90 ]
lea edx [ edi + 0x1 ]
and edx 0x7fff
movzx edx [ edx + esi + 0x90 ]
shl eax 0x5
xor eax edx
mov edx 0x102
sub edx ebx
mov ebx [ ebp - 0x10 ]
and ecx 0x7fff
cmp ebx edx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x88 ] edi
pop edi
mov [ esi + 0x84 ] ecx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x20 ] edi
je r-xdata
mov edx [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov eax 0x8000
sub eax edx
mov [ ebp - 0x20 ] edx
cmp eax ecx
jae r-xdata
lea esp [ esp ]
mov [ ebp - 0x30 ] edx
mov edx ebx
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov ebx ecx
mov [ ebp - 0x28 ] ecx
mov ebx eax
mov [ ebp - 0x28 ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov dl [ eax ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x1c ]
add eax ecx
and eax 0x7fff
dec edi
mov [ ebp - 0x10 ] edi
mov [ eax + esi + 0x90 ] dl
cmp eax 0x101
jae r-xdata
jmp r-xdata
add edx [ ebp - 0xc ]
mov ebx [ esi + 0x20 ]
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x30 ]
sub [ ebp - 0x10 ] edx
add ebx edx
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] ebx
cmp edx [ ebp - 0x2c ]
je r-xdata
mov eax [ esi + 0x50 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x8 ] 0x0
test eax eax
je r-xdata
cmp edx 0x102
jb r-xdata
cmp [ ebp - 0x34 ] 0x0
mov [ esi + 0x24 ] ebx
jne r-xdata
inc [ esi + 0x20 ]
mov ecx [ esi + 0x20 ]
mov eax [ esi + 0x24 ]
add eax ecx
cmp eax 0x3
jb r-xdata
mov [ eax + esi + 0x8090 ] dl
mov ebx [ ebp - 0xc ]
mov dl [ ebx ]
inc ebx
mov [ ebp - 0xc ] ebx
mov [ esi + ecx + 0x90 ] dl
cmp ecx 0x101
jae r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov edi [ ebp - 0x10 ]
test edi edi
jne r-xdata
mov eax [ esi + 0x1c ]
lea ecx [ ecx + eax - 0x3 ]
mov edi ecx
and edi 0x7fff
movzx ebx [ edi + esi + 0x90 ]
lea eax [ ecx + 0x1 ]
and eax 0x7fff
movzx eax [ eax + esi + 0x90 ]
shl ebx 0x5
xor eax ebx
movzx edx dl
shl eax 0x5
xor eax edx
and eax 0x7fff
mov dx [ esi + eax * 2 + 0x29272 ]
mov [ esi + edi * 2 + 0x19272 ] dx
mov [ esi + eax * 2 + 0x29272 ] cx
movzx edx dl
shl eax 0x5
xor eax edx
and eax 0x7fff
mov bx [ esi + eax * 2 + 0x29272 ]
mov edx edi
and edx 0x7fff
mov [ esi + edx * 2 + 0x19272 ] bx
mov edx [ ebp - 0xc ]
inc ecx
mov [ esi + eax * 2 + 0x29272 ] di
and ecx 0x7fff
inc edi
cmp edx [ ebp - 0x2c ]
jne r-xdata
mov [ ecx + esi + 0x8090 ] dl
and edi 0x7fff
cmp eax 0x20
sbb ecx ecx
mov ecx [ esi + ecx * 4 + 0x10 ]
mov [ ebp - 0x38 ] ecx
lea ecx [ esi + edi + 0x90 ]
movzx ecx [ ecx ]
lea ebx [ edi + eax ]
movzx ebx [ ebx + esi + 0x8f ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] ecx
cmp edx 0x102
jbe r-xdata
test ebx ebx
je r-xdata
mov edi [ esi + 0x1c ]
mov ecx edi
and ecx 0x7fff
mov [ ebp - 0x24 ] ecx
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x2c ] edi
test ecx 0x90000
je r-xdata
mov ecx [ esi + 0x20 ]
cmp ecx 0x102
jae r-xdata
jmp r-xdata
cmp edx eax
jbe r-xdata
push 0x8df
push r--data
push r--data
call sub_42338b
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
add esp 0xc
cmp eax 0x3
jne r-xdata
test ecx 0x80000
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx 0x2000
jae r-xdata
mov edx [ ebp - 0x24 ]
lea eax [ edx - 0x1 ]
and eax 0x7fff
mov cl [ eax + esi + 0x90 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x20 ] eax
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov edi [ ebp - 0x24 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov eax ecx
test [ esi + 0x8 ] 0x20000
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
lea edx [ edx + esi + 0x90 ]
movzx edi [ esi + edi * 2 + 0x19272 ]
test edi edi
je r-xdata
test ecx ecx
jne r-xdata
cmp eax edx
jbe r-xdata
mov edx [ esi + 0x50 ]
mov [ ebp - 0x40 ] edx
test edx edx
je r-xdata
cmp eax 0x5
ja r-xdata
mov edi [ ebp - 0x24 ]
cmp edi ecx
je r-xdata
mov [ ebp - 0x4 ] eax
cmp eax 0x3
jae r-xdata
inc eax
cmp eax [ esi + 0x20 ]
jb r-xdata
mov eax [ ebp - 0x2c ]
sub eax edi
movzx eax ax
mov [ ebp - 0x18 ] eax
cmp eax [ ebp - 0x28 ]
ja r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax edi
cmp edi 0x8100
jb r-xdata
mov ebx [ esi + 0x4c ]
cmp edx 0x3
jb r-xdata
mov edx [ esi + 0x28 ]
mov bl [ esi + 0x54 ]
mov edi 0x1
add [ esi + 0x3c ] edi
mov [ edx ] bl
add [ esi + 0x28 ] edi
mov edx [ esi + 0x2c ]
shr [ edx ] 0x1
dec [ esi + 0x38 ]
jne r-xdata
mov [ ebp - 0x8 ] 0x1
cmp [ edx + eax ] cl
jne r-xdata
mov eax [ ebp - 0x4 ]
and edi 0x7fff
lea eax [ edx + esi + 0x8f ]
cmp [ eax + edi ] bx
je r-xdata
cmp eax 0x3
jb r-xdata
test [ esi + 0x8 ] 0x10000
jne r-xdata
mov cl [ eax + esi + 0x90 ]
mov eax [ esi + 0x28 ]
mov edx 0x1
add [ esi + 0x3c ] edx
mov [ eax ] cl
add [ esi + 0x28 ] edx
mov eax [ esi + 0x2c ]
shr [ eax ] 0x1
dec [ esi + 0x38 ]
jne r-xdata
mov eax 0x8100
push 0x9af
push r--data
push r--data
call sub_42338b
mov edx [ ebp - 0x40 ]
add esp 0xc
cmp ebx 0x1
jb r-xdata
movzx edx bl
add [ esi + edx * 2 + 0x8192 ] di
lea edx [ esi + edx * 2 + 0x8192 ]
cmp eax 0x80
jb r-xdata
mov edx [ esi + 0x28 ]
mov [ esi + 0x2c ] edx
inc edx
mov [ esi + 0x38 ] 0x8
mov [ esi + 0x28 ] edx
mov ecx [ ebp - 0x18 ]
movzx edi [ esi + edi * 2 + 0x19272 ]
test edi edi
je r-xdata
push 0x9af
push r--data
push r--data
call sub_42338b
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add esp 0xc
cmp ecx 0x1
jb r-xdata
cmp eax 0x80
jae r-xdata
movzx ecx cl
add [ esi + ecx * 2 + 0x8192 ] dx
lea eax [ esi + ecx * 2 + 0x8192 ]
jmp r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0x2c ] eax
inc eax
mov [ esi + 0x38 ] 0x8
mov [ esi + 0x28 ] eax
cmp ebx 0x200
jae r-xdata
mov ecx [ esi + 0x28 ]
mov [ esi + 0x2c ] ecx
inc ecx
mov [ esi + 0x38 ] 0x8
mov [ esi + 0x28 ] ecx
cmp ebx 0x8000
jbe r-xdata
mov edx [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x3
jb r-xdata
mov ax [ esi + edi + 0x90 ]
lea ecx [ esi + edi + 0x90 ]
cmp ax [ ebp - 0x40 ]
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
sub ecx edi
movzx ecx cx
mov [ ebp - 0x18 ] ecx
cmp ecx edx
ja r-xdata
cmp ecx 0x200
jae r-xdata
mov edi [ esi + 0x28 ]
mov [ esi + 0x2c ] edi
inc edi
mov [ esi + 0x38 ] 0x8
mov [ esi + 0x28 ] edi
cmp ecx 0x8000
jbe r-xdata
mov edx edi
cmp edi 0x8100
jb r-xdata
mov eax [ ebp - 0x1c ]
add [ esi + 0x1c ] eax
cmp [ esi + 0x20 ] eax
jae r-xdata
and eax 0x7f
movzx eax [ eax + r--data ]
and ebx 0x1ff
movzx eax [ ebx + r--data ]
jmp r-xdata
mov ecx [ esi + 0x28 ]
add [ esi + 0x3c ] edx
lea eax [ edx - 0x3 ]
mov [ ecx ] al
mov eax [ esi + 0x28 ]
dec ebx
mov [ eax + 0x1 ] bl
mov ecx [ esi + 0x28 ]
mov eax ebx
shr eax 0x8
mov [ ecx + 0x2 ] al
add [ esi + 0x28 ] 0x3
mov edi [ esi + 0x2c ]
mov cl [ edi ]
shr cl 0x1
or cl 0x80
mov [ edi ] cl
dec [ esi + 0x38 ]
jne r-xdata
movzx edx [ edx + esi + 0x90 ]
mov [ esi + 0x54 ] edx
mov [ esi + 0x4c ] ecx
mov [ esi + 0x50 ] eax
jmp r-xdata
push 0x9af
push r--data
push r--data
call sub_42338b
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add esp 0xc
cmp ecx edi
jb r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x30 ]
lea eax [ esi + edx + 0x90 ]
mov edx 0x20
and edi 0x7fff
cmp [ eax + edi ] bx
je r-xdata
and edx 0x7f
movzx ecx [ edx + r--data ]
and ecx 0x1ff
movzx ecx [ ecx + r--data ]
jmp r-xdata
mov edi [ esi + 0x28 ]
add [ esi + 0x3c ] eax
lea edx [ eax - 0x3 ]
mov [ edi ] dl
mov edx [ esi + 0x28 ]
dec ecx
mov [ edx + 0x1 ] cl
mov edi [ esi + 0x28 ]
mov edx ecx
shr edx 0x8
mov [ edi + 0x2 ] dl
add [ esi + 0x28 ] 0x3
mov edi [ esi + 0x2c ]
mov bl [ edi ]
shr bl 0x1
or bl 0x80
mov [ edi ] bl
dec [ esi + 0x38 ]
jne r-xdata
mov edx 0x8100
mov eax [ ebp - 0x1c ]
sub [ esi + 0x20 ] eax
mov edx [ esi + 0x24 ]
add eax edx
cmp eax 0x8000
jb r-xdata
push 0xa25
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ esi + 0x50 ]
dec eax
mov [ esi + 0x50 ] 0x0
jmp r-xdata
movzx edx [ edx * 2 + r--data ]
inc [ esi + edx * 2 + 0x8192 ]
lea eax [ esi + edx * 2 + 0x8192 ]
inc [ esi + eax * 2 + 0x83d2 ]
cmp edx 0x3
jb r-xdata
cmp ecx 0x200
jae r-xdata
mov edi [ esi + 0x28 ]
mov [ esi + 0x2c ] edi
inc edi
mov [ esi + 0x38 ] 0x8
mov [ esi + 0x28 ] edi
cmp ecx 0x8000
jbe r-xdata
dec [ ebp - 0x38 ]
je r-xdata
test edx edx
je r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
cmp bx [ ecx ]
jne r-xdata
mov edx [ ebp - 0x14 ]
jmp r-xdata
movzx edi [ esi + edi * 2 + 0x19272 ]
test edi edi
je r-xdata
mov [ ebp - 0x1c ] eax
movzx ecx [ eax * 2 + r--data ]
inc [ esi + ecx * 2 + 0x8192 ]
lea ecx [ esi + ecx * 2 + 0x8192 ]
inc [ esi + ecx * 2 + 0x83d2 ]
cmp eax 0x3
jb r-xdata
mov [ esi + 0x24 ] eax
mov eax [ esi + 0x28 ]
lea ecx [ esi + 0x1926a ]
cmp eax ecx
ja r-xdata
mov eax 0x8000
and edx 0x7f
movzx ecx [ edx + r--data ]
and ecx 0x1ff
movzx ecx [ ecx + r--data ]
jmp r-xdata
mov edi [ esi + 0x28 ]
add [ esi + 0x3c ] eax
lea edx [ eax - 0x3 ]
mov [ edi ] dl
mov edx [ esi + 0x28 ]
dec ecx
mov [ edx + 0x1 ] cl
mov edi [ esi + 0x28 ]
mov edx ecx
shr edx 0x8
mov [ edi + 0x2 ] dl
add [ esi + 0x28 ] 0x3
mov edi [ esi + 0x2c ]
mov bl [ edi ]
shr bl 0x1
or bl 0x80
mov [ edi ] bl
dec [ esi + 0x38 ]
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
cmp eax 0x102
jae r-xdata
mov edx [ ebp - 0x30 ]
lea edx [ esi + edx + 0x90 ]
mov ebx eax
mov al [ eax ]
sub ebx edx
xor edx edx
sar ebx 0x1
cmp al [ ecx ]
sete dl
lea eax [ edx + ebx * 2 ]
mov edx [ ebp - 0x14 ]
cmp eax edx
jbe r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
cmp bx [ ecx ]
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx edi
movzx ecx cx
mov [ ebp - 0x18 ] ecx
cmp ecx edx
ja r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x88 ] eax
push 0x0
mov eax esi
mov [ esi + 0x84 ] edx
call sub_419520
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x3c ]
cmp ecx 0x7c00
jbe r-xdata
mov [ esi + 0x50 ] 0x0
jmp r-xdata
movzx ecx [ eax * 2 + r--data ]
inc [ esi + ecx * 2 + 0x8192 ]
lea ecx [ esi + ecx * 2 + 0x8192 ]
inc [ esi + ecx * 2 + 0x83d2 ]
cmp eax 0x3
jb r-xdata
mov [ ebp - 0x4 ] 0x102
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x20 ]
cmp ecx eax
jae r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
cmp bx [ ecx ]
jne r-xdata
and edi 0x7fff
cmp [ eax + edi ] bx
jne r-xdata
mov edi [ ebp - 0x10 ]
test edi edi
jne r-xdata
xor edx edx
test eax eax
setns dl
pop edi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
sub eax esi
imul eax eax 0x73
sub eax r-xdata
shr eax 0x7
cmp eax ecx
jae r-xdata
mov edx eax
mov [ ebp - 0x14 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
jmp r-xdata
dec edx
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ esi + 0x8 ] 0x80000
je r-xdata
mov eax [ ebp - 0x30 ]
lea ecx [ edx + eax ]
movzx ebx [ ecx + esi + 0x8f ]
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
mov bx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
cmp bx [ ecx ]
jne r-xdata
sub_41ac90
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
mov ecx [ esi + 0x84 ]
sub ecx [ esi + 0x70 ]
mov [ eax ] ecx
cmp [ esi + 0x60 ] 0x0
je r-xdata
mov eax [ eax ]
sub eax [ esi + 0x8c ]
push edi
mov edi [ esi + 0x5c ]
cmp eax edi
jae r-xdata
xor eax eax
retn
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov edx [ esi + 0x58 ]
mov ecx [ esi + 0x74 ]
add ecx [ esi + 0x8c ]
push edi
lea eax [ edx + esi + 0x39272 ]
push eax
push ecx
call sub_421710
add [ esi + 0x58 ] edi
sub [ esi + 0x5c ] edi
mov edx [ esi + 0x7c ]
add esp 0xc
add [ esi + 0x8c ] edi
mov eax [ esi + 0x8c ]
mov [ edx ] eax
pop edi
mov edi eax
mov eax 0x1
retn
sub_41ad10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi eax
mov eax [ ebp + 0xc ]
test esi esi
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x78 ] ecx
mov [ esi + 0x74 ] edx
mov [ esi + 0x7c ] edi
mov [ esi + 0x84 ] eax
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ecx ] esi
mov eax 0x1
test edi edi
jne r-xdata
mov [ esi + 0x88 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x8c ] 0x0
mov [ esi + 0x80 ] eax
test edx edx
jne r-xdata
pop edi
mov eax 0xfffffffe
pop esi
pop ebp
retn
mov [ edi ] 0x0
test ecx ecx
je r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
mov [ ecx ] 0x0
mov eax [ esi + 0x68 ]
mov ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
push ebx
xor ebx ebx
cmp [ esi ] ebx
setne bl
cmp ebx eax
je r-xdata
pop ebx
mov eax 0xfffffffe
pop edi
mov [ esi + 0x6c ] eax
pop esi
pop ebp
retn
mov [ edi ] 0x0
test ecx ecx
je r-xdata
cmp ebx 0x4
jne r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
xor ecx ecx
cmp ebx 0x4
sete cl
mov edi ecx
mov edx ecx
or edx eax
cmp [ esi + 0x5c ] 0x0
mov [ esi + 0x68 ] edx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_41ac90
pop ebx
pop edi
mov [ esi + 0x6c ] eax
pop esi
pop ebp
retn
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test edx edx
je r-xdata
mov ebx [ ebp + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx eax
and ecx 0xfff
cmp ecx 0x1
jne r-xdata
call sub_41a360
test eax eax
je r-xdata
test eax 0x4000
je r-xdata
mov eax [ esi + 0x6c ]
pop ebx
pop edi
pop esi
pop ebp
retn
test [ esi + 0x8 ] 0x3000
je r-xdata
test eax 0xb0000
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_419d50
test eax eax
jne r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov edx [ esi + 0x84 ]
mov ecx [ esi + 0x18 ]
sub edx eax
push edx
call sub_415b60
add esp 0x4
mov [ esi + 0x18 ] eax
cmp [ esi + 0x88 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
jne r-xdata
push ebx
mov eax esi
call sub_419520
add esp 0x4
test eax eax
js r-xdata
mov [ esi + 0x60 ] edi
cmp ebx 0x3
jne r-xdata
push 0x10000
lea eax [ esi + 0x29272 ]
push 0x0
push eax
call sub_4264e0
push 0x10000
lea ecx [ esi + 0x19272 ]
push 0x0
push ecx
call sub_4264e0
add esp 0x18
mov [ esi + 0x24 ] 0x0
sub_41aef0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
xor edx edx
cmp [ esi ] edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
mov [ esi + 0x70 ] ebx
mov [ esi + 0x78 ] eax
mov [ esi + 0x74 ] edx
mov [ esi + 0x7c ] edx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] ecx
mov [ esi + 0x8c ] edx
mov [ esi + 0x80 ] edi
cmp [ esi ] edx
je r-xdata
push 0xa86
push r--data
push r--data
call sub_42338b
add esp 0xc
xor edx edx
mov eax 0xfffffffe
mov [ esi + 0x6c ] eax
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x6c ] edx
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax edx
je r-xdata
cmp ecx edx
je r-xdata
cmp edi 0x4
jne r-xdata
xor ecx ecx
cmp edi 0x4
sete cl
mov [ ebp - 0x4 ] ecx
or ecx eax
mov [ esi + 0x68 ] ecx
cmp [ esi + 0x5c ] edx
jne r-xdata
cmp ebx edx
je r-xdata
call sub_41ac90
mov [ esi + 0x6c ] eax
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x60 ] edx
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx eax
and ecx 0xfff
cmp ecx 0x1
jne r-xdata
call sub_41a360
test eax eax
jne r-xdata
test eax 0x4000
je r-xdata
test [ esi + 0x8 ] 0x3000
je r-xdata
mov eax [ esi + 0x6c ]
pop esi
mov esp ebp
pop ebp
retn
test eax 0xb0000
jne r-xdata
test edi edi
je r-xdata
test ebx ebx
je r-xdata
call sub_419d50
test eax eax
jne r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov edx [ esi + 0x84 ]
mov ecx [ esi + 0x18 ]
sub edx ebx
push edx
mov eax ebx
call sub_415b60
add esp 0x4
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x6c ]
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x88 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
jne r-xdata
push edi
mov eax esi
call sub_419520
add esp 0x4
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x60 ] eax
cmp edi 0x3
jne r-xdata
push 0x10000
lea ecx [ esi + 0x29272 ]
push 0x0
push ecx
call sub_4264e0
push 0x10000
lea edx [ esi + 0x19272 ]
push 0x0
push edx
call sub_4264e0
add esp 0x18
mov [ esi + 0x24 ] 0x0
sub_41b080
push ebx
push esi
mov esi edx
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
mov ecx edi
and ecx 0xfff
add ecx 0x2
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
lea ecx [ edx + eax + 0x1 ]
mov [ esi + 0xc ] ecx
mov ecx edi
sar ecx 0x2
mov edx edi
shr edx 0xe
and ecx 0x3ff
and edx 0x1
add ecx 0x2
mov eax 0x55555556
mov [ esi + 0x14 ] edx
imul ecx
mov eax edx
shr eax 0x1f
lea ecx [ edx + eax + 0x1 ]
xor ebx ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] ecx
test edi 0x8000
jne r-xdata
lea eax [ esi + 0x9273 ]
push 0x240
mov [ esi + 0x28 ] eax
lea eax [ esi + 0x39272 ]
lea edx [ esi + 0x8192 ]
lea ecx [ esi + 0x9272 ]
push ebx
push edx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x58 ] ebx
mov [ esi + 0x2c ] ecx
mov [ esi + 0x38 ] 0x8
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x6c ] ebx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] ebx
mov [ esi + 0x8c ] ebx
call sub_4264e0
push 0x40
push ebx
add esi 0x83d2
push esi
call sub_4264e0
add esp 0x18
pop esi
xor eax eax
pop ebx
retn
push 0x10000
lea edx [ esi + 0x29272 ]
push ebx
push edx
call sub_4264e0
add esp 0xc
sub_41b1c0
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
mov eax sub_41b250
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push esi
push 0x4df40
call sub_421e20
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
xor eax eax
pop ebx
pop ebp
retn
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov eax sub_41b250
mov edx esi
call sub_41b080
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push esi
xor edi edi
call sub_4229cf
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
lea edi [ eax + 0x4 ]
mov eax esi
call sub_41aef0
add esp 0x4
cmp eax 0x1
jne r-xdata
push esi
mov edi eax
call sub_4229cf
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41b250
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ edi ]
add ebx [ ebp + 0xc ]
mov esi [ edi + 0x4 ]
cmp ebx esi
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi + 0x8 ]
mov edx [ ebp + 0x8 ]
add eax [ edi ]
push ecx
push edx
push eax
call sub_421710
add esp 0xc
mov [ edi ] ebx
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp [ edi + 0xc ] 0x0
jne r-xdata
add esi esi
cmp esi 0x80
jae r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
cmp ebx esi
ja r-xdata
mov esi 0x80
mov eax [ edi + 0x8 ]
push esi
push eax
call sub_424f97
add esp 0x8
test eax eax
je r-xdata
mov [ edi + 0x8 ] eax
mov [ edi + 0x4 ] esi
sub_41b2c0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
mov [ ebp - 0x4 ] 0x1
call sub_41b1c0
add esp 0xc
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41b310
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ebp + 0x10 ]
call sub_41b1c0
add esp 0xc
neg eax
sbb eax eax
and eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
mov esp ebp
pop ebp
retn
sub_41b360
push ebp
mov ebp esp
test ecx ecx
js r-xdata
mov eax 0x6
cmp ecx 0xa
jle r-xdata
test ecx ecx
jne r-xdata
or eax 0x1000
mov eax ecx
jmp r-xdata
mov eax 0xa
jmp r-xdata
pop ebp
retn
or eax 0x80000
xor edx edx
cmp ecx 0x3
setg dl
dec edx
and edx 0x4000
or edx [ eax * 4 + r--data ]
cmp [ ebp + 0x8 ] 0x0
mov eax edx
jle r-xdata
sub_41b3b0
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov esi edx
push 0x4df40
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x54 ] esi
call sub_421e20
mov ecx edi
imul ecx [ ebp + 0xc ]
mov ebx eax
add esp 0x4
xor eax eax
mov [ ebp - 0x58 ] ecx
mov [ esi ] 0x0
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
lea eax [ ecx + 0x1 ]
imul eax [ ebp + 0x10 ]
mov esi 0x1
mov [ ebp - 0x3c ] esi
cmp eax 0x40
jge r-xdata
add eax 0x39
push eax
mov [ ebp - 0x44 ] eax
call sub_421e20
add esp 0x4
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov eax 0x40
mov [ ebp - 0x38 ] 0x29
lea esp [ esp ]
push ebx
call sub_4229cf
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x38 ]
push esi
push edx
call sub_41b250
add esp 0xc
sub [ ebp - 0x38 ] esi
jne r-xdata
mov edi 0x1080
lea ecx [ ebp - 0x48 ]
mov eax sub_41b250
mov edx ebx
call sub_41b080
mov eax [ ebp + 0x10 ]
test eax eax
jle r-xdata
xor edi edi
xor eax eax
mov [ ebp - 0x34 ] eax
cmp [ ebx ] edi
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x34 ] eax
mov edi edi
lea ecx [ ebp - 0x34 ]
mov [ ebx + 0x70 ] edi
mov [ ebx + 0x78 ] ecx
mov [ ebx + 0x74 ] edi
mov [ ebx + 0x7c ] edi
mov [ ebx + 0x84 ] edi
mov [ ebx + 0x88 ] eax
mov [ ebx + 0x8c ] edi
mov [ ebx + 0x80 ] 0x4
cmp [ ebx ] edi
je r-xdata
push 0xa86
push r--data
push r--data
call sub_42338b
mov eax [ ebp - 0x34 ]
add esp 0xc
lea edx [ ebp - 0x38 ]
mov ecx edx
mov [ ebx + 0x70 ] edx
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x4c ]
mov [ ebx + 0x78 ] eax
mov [ ebx + 0x74 ] esi
mov [ ebx + 0x7c ] esi
mov [ ebx + 0x84 ] ecx
mov [ ebx + 0x88 ] edx
mov [ ebx + 0x8c ] esi
mov [ ebx + 0x80 ] esi
cmp [ ebx ] esi
je r-xdata
push 0xa86
push r--data
push r--data
call sub_42338b
add esp 0xc
mov [ ebx + 0x6c ] 0xfffffffe
jmp r-xdata
cmp [ ebx + 0x6c ] edi
jne r-xdata
mov [ ebx + 0x6c ] 0xfffffffe
cmp [ ebx + 0x6c ] esi
jne r-xdata
push ebx
call sub_4229cf
mov eax [ ebp - 0x40 ]
push eax
call sub_4229cf
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x50 ]
lea edx [ ebp - 0x4c ]
mov [ ebx + 0x70 ] ecx
mov [ ebx + 0x78 ] edx
mov [ ebx + 0x74 ] edi
mov [ ebx + 0x7c ] edi
mov [ ebx + 0x84 ] ecx
mov [ ebx + 0x88 ] eax
mov [ ebx + 0x8c ] edi
mov [ ebx + 0x80 ] edi
cmp [ ebx ] edi
je r-xdata
push 0xa86
push r--data
push r--data
call sub_42338b
mov eax [ ebp - 0x4c ]
add esp 0xc
cmp [ ebx + 0x68 ] esi
jne r-xdata
or [ ebx + 0x68 ] 0x1
cmp [ ebx + 0x5c ] edi
jne r-xdata
mov [ ebx + 0x6c ] 0xfffffffe
cmp [ ebx + 0x6c ] edi
jne r-xdata
cmp [ ebx + 0x5c ] esi
jne r-xdata
mov esi ebx
call sub_41ac90
mov [ ebx + 0x6c ] eax
jmp r-xdata
cmp [ ebx + 0x60 ] edi
jne r-xdata
xor esi esi
mov [ ebp - 0x4c ] 0x1
cmp [ ebx ] esi
jne r-xdata
cmp [ ebx + 0x68 ] edi
jne r-xdata
mov esi ebx
call sub_41ac90
mov [ ebx + 0x6c ] eax
jmp r-xdata
cmp [ ebx + 0x60 ] esi
jne r-xdata
cmp eax 0x1
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xfff
cmp edx 0x1
jne r-xdata
cmp eax edi
je r-xdata
mov eax [ ebp - 0x58 ]
xor edi edi
mov [ ebp - 0x4c ] eax
cmp [ ebx ] edi
jne r-xdata
mov eax [ ebx + 0x8 ]
mov ecx eax
and ecx 0xfff
cmp ecx 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x48 ]
mov esi [ ebp - 0x54 ]
mov edx ecx
sar edx 0x8
mov [ ebp - 0x1d ] cl
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1e ] dl
add eax 0xffffffd7
mov edx ecx
sar edx 0x8
mov [ esi ] eax
mov [ ebp - 0x19 ] cl
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x1a ] dl
mov dl [ ecx + r--data ]
mov ecx eax
mov [ ebp - 0x17 ] dl
mov edx eax
shr eax 0x8
mov [ ebp - 0xd ] al
mov al [ esi ]
shr ecx 0x18
shr edx 0x10
mov [ ebp - 0x20 ] di
mov [ ebp - 0x1c ] di
mov [ ebp - 0x16 ] edi
mov [ ebp - 0x12 ] di
mov [ ebp - 0xc ] al
mov [ ebp - 0x30 ] 0x474e5089
mov [ ebp - 0x2c ] 0xa1a0a0d
mov [ ebp - 0x28 ] 0xd000000
mov [ ebp - 0x24 ] 0x52444849
mov [ ebp - 0x18 ] 0x8
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xf ] cl
mov [ ebp - 0xe ] dl
mov [ ebp - 0xb ] 0x54414449
mov esi 0x11
lea edi [ ebp - 0x24 ]
or eax 0xffffffff
mov esi ebx
call sub_41a360
jmp r-xdata
test eax 0x4000
je r-xdata
cmp [ ebx + 0x5c ] edi
jne r-xdata
cmp ecx edi
je r-xdata
mov esi ebx
call sub_41a360
test eax 0x4000
je r-xdata
mov cl [ edi ]
movzx edx cl
mov ecx edx
xor ecx eax
and ecx 0xf
shr eax 0x4
xor eax [ ecx * 4 + r--data ]
shr edx 0x4
mov ecx eax
and ecx 0xf
xor edx ecx
shr eax 0x4
xor eax [ edx * 4 + r--data ]
inc edi
dec esi
jne r-xdata
mov edi [ ebp - 0x40 ]
not eax
mov edx eax
shl eax 0x8
shr edx 0x18
mov ecx eax
shr ecx 0x18
mov [ ebp - 0x13 ] dl
shl eax 0x8
mov [ ebp - 0x12 ] cl
mov edx eax
shr edx 0x18
shr eax 0x10
mov [ ebp - 0x11 ] dl
mov [ ebp - 0x10 ] al
mov ecx 0xa
lea esi [ ebp - 0x30 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx [ ebp - 0x48 ]
mov esi [ ebp - 0x44 ]
add ecx 0x10
mov [ ebp - 0x34 ] ecx
cmp ecx esi
jbe r-xdata
test eax eax
jne r-xdata
test eax 0xb0000
jne r-xdata
mov esi ebx
call sub_41ac90
mov [ ebx + 0x6c ] eax
jmp r-xdata
cmp [ ebx + 0x60 ] edi
jne r-xdata
test [ ebx + 0x8 ] 0x3000
je r-xdata
test eax 0xb0000
jne r-xdata
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x48 ]
mov edx [ r--data ]
mov [ eax ] edx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov edx [ r--data ]
mov [ eax + 0x8 ] edx
mov edx [ r--data ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x54 ]
mov esi [ edx ]
mov edi [ ebp - 0x40 ]
add esi 0x4
add edi 0x25
mov [ ebp - 0x48 ] ecx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
cmp [ ebx + 0x20 ] edi
jne r-xdata
mov eax [ ebx + 0x6c ]
mov esi ebx
call sub_419d50
mov eax [ ebp - 0x58 ]
add [ ebp - 0x50 ] eax
dec [ ebp - 0x34 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov ecx eax
and ecx 0xfff
cmp ecx 0x1
jne r-xdata
mov edx [ ebx + 0x84 ]
mov ecx [ ebx + 0x18 ]
lea eax [ ebp - 0x38 ]
sub edx eax
push edx
call sub_415b60
add esp 0x4
mov [ ebx + 0x18 ] eax
mov esi ebx
call sub_419d50
jmp r-xdata
or eax 0xffffffff
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x54 ]
push ebx
mov [ eax ] 0x0
call sub_4229cf
mov ecx [ ebp - 0x40 ]
push ecx
call sub_4229cf
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
lea esp [ esp ]
cmp [ ebx + 0x88 ] edi
jne r-xdata
mov esi ebx
call sub_41a360
test eax 0x4000
je r-xdata
test eax eax
je r-xdata
not eax
mov cl [ edi ]
movzx ecx cl
mov edx ecx
xor edx eax
and edx 0xf
shr eax 0x4
xor eax [ edx * 4 + r--data ]
shr ecx 0x4
mov edx eax
and edx 0xf
xor ecx edx
shr eax 0x4
xor eax [ ecx * 4 + r--data ]
inc edi
dec esi
jne r-xdata
mov esi [ ebp - 0x40 ]
mov edx eax
shr edx 0x18
mov [ ecx + esi - 0x10 ] dl
mov edx [ ebp - 0x48 ]
mov esi [ ebp - 0x40 ]
shl eax 0x8
mov ecx eax
shr ecx 0x18
mov [ edx + esi - 0xf ] cl
mov edx [ ebp - 0x48 ]
mov esi [ ebp - 0x40 ]
shl eax 0x8
mov ecx eax
shr ecx 0x18
mov [ edx + esi - 0xe ] cl
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x48 ]
shr eax 0x10
mov [ edx + ecx - 0xd ] al
mov eax [ ebp - 0x54 ]
add [ eax ] 0x39
push ebx
call sub_4229cf
mov eax [ ebp - 0x40 ]
add esp 0x4
cmp ecx esi
ja r-xdata
mov esi 0x80
cmp [ ebx + 0x5c ] edi
jne r-xdata
test [ ebx + 0x8 ] 0x3000
je r-xdata
test eax 0xb0000
jne r-xdata
mov ecx [ ebp - 0x34 ]
add esi esi
cmp esi 0x80
jae r-xdata
mov eax [ ebp - 0x40 ]
push esi
push eax
call sub_424f97
add esp 0x8
test eax eax
je r-xdata
push 0x4
mov eax ebx
call sub_419520
add esp 0x4
test eax eax
js r-xdata
mov eax [ ebp - 0x50 ]
cmp eax edi
je r-xdata
mov esi ebx
call sub_419d50
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] esi
mov [ ebx + 0x60 ] 0x1
mov edx [ ebx + 0x84 ]
mov ecx [ ebx + 0x18 ]
sub edx eax
push edx
call sub_415b60
add esp 0x4
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
sub_41b9f0
push ebp
mov ebp esp
push ecx
push eax
push ecx
lea edx [ ebp - 0x4 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_424a9a
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esp ebp
pop ebp
retn
sub_41ba10
push ebp
mov ebp esp
push ecx
push eax
push r--data
push ecx
lea edx [ ebp - 0x4 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_42518c
add esp 0x10
neg eax
sbb eax eax
not eax
and eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41ba50
mov ecx [ esi ]
mov edx [ eax + 0x28 ]
mov eax [ eax + 0x20 ]
push ecx
push edx
call eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
add esp 0x8
mov [ esi + 0xc ] eax
retn
sub_41ba70
push ebp
mov ebp esp
cmp [ edi + 0xc ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x8 ]
cmp eax ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax 0x1
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ edi ]
push esi
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x28 ]
mov eax [ eax + 0x24 ]
push ecx
push edx
call eax
add esp 0x10
test eax eax
jne r-xdata
mov esi 0x1
cmp eax 0x1
jb r-xdata
mov [ edi ] eax
mov [ edi + 0x8 ] esi
pop esi
pop ebp
retn
cmp esi ebx
jae r-xdata
mov esi eax
add esi esi
cmp esi ebx
jb r-xdata
sub_41baf0
push ebx
push edi
mov ebx ecx
mov edi edx
cmp ebx [ edi + 0x8 ]
jbe r-xdata
pop edi
mov eax 0x1
pop ebx
retn
push 0x1
push eax
call sub_41ba70
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop ebx
retn
sub_41bb20
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
cmp ebx [ edi + 0x8 ]
jbe r-xdata
mov [ edi + 0x4 ] ebx
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push eax
push ecx
call sub_41ba70
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
sub_41bb50
push ebp
mov ebp esp
push ebx
mov ebx [ edi + 0x4 ]
add ebx [ ebp + 0xc ]
push esi
cmp ebx [ edi + 0x8 ]
jbe r-xdata
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov esi [ edi + 0x8 ]
cmp esi ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
cmp esi 0x1
jae r-xdata
cmp esi ebx
jae r-xdata
mov esi 0x1
mov eax [ edi + 0xc ]
mov ecx [ edi ]
push esi
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x28 ]
mov eax [ eax + 0x24 ]
push ecx
push edx
call eax
add esp 0x10
test eax eax
je r-xdata
add esi esi
cmp esi ebx
jb r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov [ edi ] eax
mov [ edi + 0x8 ] esi
sub_41bbd0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push edi
mov edi [ esi + 0x4 ]
lea ebx [ edi + eax ]
mov [ ebp - 0x4 ] edi
cmp ebx [ esi + 0x8 ]
jbe r-xdata
mov eax [ esi + 0xc ]
mov edx [ ebp + 0xc ]
mov ecx eax
imul eax edi
imul ecx [ ebp + 0x10 ]
add eax [ esi ]
push ecx
push edx
push eax
mov [ esi + 0x4 ] ebx
call sub_421710
add esp 0xc
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edi 0x1
cmp eax 0x1
jb r-xdata
cmp edi ebx
jae r-xdata
mov edi eax
mov ecx [ esi + 0xc ]
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
push edi
push ecx
mov ecx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push ecx
call edx
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] edi
mov edi [ ebp - 0x4 ]
mov [ esi ] eax
add edi edi
cmp edi ebx
jb r-xdata
sub_41bc80
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax edx
sar eax 0x9
and eax 0x7f
add eax 0x50
mov [ ebp - 0x14 ] eax
mov eax edx
sar eax 0x5
and eax 0xf
dec eax
and edx 0x1f
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
mov edx ecx
mov eax ecx
and ecx 0x1f
add ecx ecx
sar edx 0xb
sar eax 0x5
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x28 ]
and edx 0x1f
and eax 0x3f
push ecx
mov [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x24 ] eax
call sub_4246b9
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x4
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_41bd10
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call sub_4246dd
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
shl ecx 0x6
add ecx [ ebp - 0x24 ]
sar edx 0x1
shl ecx 0x5
add ecx edx
mov [ esi ] cx
mov ecx [ ebp - 0x18 ]
add eax eax
lea edx [ ecx + eax * 8 + 0x301 ]
mov ecx [ ebp - 0x4 ]
shl edx 0x5
add edx [ ebp - 0x1c ]
xor ecx ebp
mov [ edi ] dx
call sub_4216fe
mov esp ebp
pop ebp
retn
xor edx edx
xor eax eax
mov [ edi ] dx
mov [ esi ] ax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_41bd90
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call sub_425286
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x60 ] edx
push ecx
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x5c ] eax
call sub_4246dd
add esp 0x8
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x14 ]
shl edx 0x6
add edx [ ebp - 0x24 ]
sar eax 0x1
shl edx 0x5
add edx eax
add ecx ecx
mov [ esi ] dx
mov edx [ ebp - 0x18 ]
lea eax [ edx + ecx * 8 + 0x301 ]
mov ecx [ ebp - 0x4 ]
shl eax 0x5
add eax [ ebp - 0x1c ]
xor ecx ebp
mov [ edi ] ax
mov eax 0x1
call sub_4216fe
mov esp ebp
pop ebp
retn
xor eax eax
xor ecx ecx
mov [ edi ] ax
mov [ esi ] cx
lea eax [ ecx + 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_41be40
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x18 ]
push ecx
push eax
mov [ ebp - 0x8 ] edx
call sub_424c9a
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
sbb eax eax
xor ecx ebp
inc eax
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_41be90
push edi
xor edi edi
cmp [ esi + 0x38 ] edi
jne r-xdata
xor eax eax
pop edi
retn
cmp [ esi + 0x14 ] edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
cmp [ esi + 0x20 ] edi
jne r-xdata
mov [ esi + 0x1c ] sub_415d00
cmp [ esi + 0x24 ] edi
jne r-xdata
mov [ esi + 0x20 ] sub_415d20
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x1c ]
push 0x40
push 0x1
push eax
mov [ esi + 0x14 ] 0x1
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
call ecx
add esp 0xc
mov [ esi + 0x38 ] eax
cmp eax edi
je r-xdata
mov [ esi + 0x24 ] sub_415d40
push 0x40
push edi
push eax
call sub_4264e0
mov edx [ esi + 0x38 ]
mov [ edx + 0xc ] 0x1
mov ecx [ esi + 0x38 ]
mov eax 0x4
mov [ ecx + 0x1c ] eax
mov edx [ esi + 0x38 ]
add esp 0xc
mov [ edx + 0x2c ] eax
mov eax 0x1
pop edi
retn
sub_41bf30
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov edx [ edx ]
mov eax [ ecx + eax * 4 ]
push ebx
movzx ebx [ eax + edx + 0x1c ]
push esi
mov esi [ ebp + 0xc ]
mov esi [ ecx + esi * 4 ]
add eax edx
add esi edx
push edi
movzx edi [ esi + 0x1c ]
xor dl dl
xor cl cl
add eax 0x2e
add esi 0x2e
mov [ ebp + 0x8 ] edi
cmp ebx edi
jae r-xdata
add edi eax
cmp eax edi
jae r-xdata
mov edi ebx
jne r-xdata
lea esp [ esp ]
cmp dl cl
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn
cmp ebx [ ebp + 0x8 ]
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn
movzx edx cl
cmp cl 0x5a
ja r-xdata
cmp dl cl
jne r-xdata
cmp cl 0x5a
ja r-xdata
movzx edx cl
add edx 0x20
jmp r-xdata
cmp eax edi
inc eax
inc esi
cmp eax edi
jb r-xdata
add cl 0x20
mov cl [ esi ]
cmp cl 0x41
jb r-xdata
mov cl [ eax ]
cmp cl 0x41
jb r-xdata
sub_41bfc0
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ eax + 0x38 ]
mov eax [ eax + 0x10 ]
push ebx
mov ebx [ ecx + 0x20 ]
mov [ ebp - 0xc ] ecx
lea ecx [ eax - 0x2 ]
push esi
sar ecx 0x1
push edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] ecx
js r-xdata
dec eax
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
lea esi [ ecx + ecx + 0x1 ]
mov [ ebp - 0x28 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
mov ecx [ ebx + eax * 4 ]
mov edi 0x1
mov [ ebx + eax * 4 ] edx
mov [ ebp - 0x14 ] 0x0
mov [ ebx ] ecx
cmp eax edi
jle r-xdata
dec ecx
sub esi 0x2
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x28 ] esi
test ecx ecx
jns r-xdata
mov edi edi
dec eax
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
lea ecx [ edi + 0x1 ]
cmp ecx eax
jge r-xdata
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] esi
cmp esi eax
jge r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x10 ]
mov edx [ eax ]
mov eax [ ebx + esi * 4 ]
mov esi [ ebx + esi * 4 + 0x4 ]
mov eax [ ecx + eax * 4 ]
mov esi [ ecx + esi * 4 ]
movzx edi [ eax + edx + 0x1c ]
add eax edx
add esi edx
movzx edx [ esi + 0x1c ]
xor cl cl
add eax 0x2e
add esi 0x2e
mov [ ebp - 0x1c ] edx
cmp edi edx
mov [ ebp - 0x1 ] 0x0
mov edx edi
jb r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x10 ]
mov edx [ eax ]
mov eax [ ebx + edi * 4 ]
mov esi [ ebx + edi * 4 + 0x4 ]
mov eax [ ecx + eax * 4 ]
mov esi [ ecx + esi * 4 ]
movzx ebx [ eax + edx + 0x1c ]
add eax edx
add esi edx
movzx edx [ esi + 0x1c ]
xor cl cl
add eax 0x2e
add esi 0x2e
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x1 ] 0x0
cmp ebx edx
jae r-xdata
add edi eax
cmp eax edi
jae r-xdata
mov edi [ ebp - 0x14 ]
add edx eax
mov [ ebp - 0x14 ] edx
cmp eax edx
jae r-xdata
mov edx [ ebp - 0x1c ]
add ebx eax
cmp eax ebx
jae r-xdata
mov ebx [ ebp - 0x18 ]
add edx eax
mov [ ebp - 0x28 ] edx
cmp eax edx
jae r-xdata
mov edx ebx
jne r-xdata
mov cl [ eax ]
cmp cl 0x41
jb r-xdata
mov dl [ ebp - 0x1 ]
mov edi edi
jne r-xdata
mov cl [ eax ]
cmp cl 0x41
jb r-xdata
jne r-xdata
mov cl [ eax ]
cmp cl 0x41
jb r-xdata
cmp dl cl
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jmp r-xdata
movzx edx cl
cmp cl 0x5a
ja r-xdata
cmp dl cl
cmp edi [ ebp - 0x1c ]
jmp r-xdata
movzx edx cl
cmp cl 0x5a
ja r-xdata
cmp dl cl
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] eax
jmp r-xdata
movzx edx cl
cmp cl 0x5a
ja r-xdata
cmp [ ebp - 0x1 ] cl
cmp ebx [ ebp - 0x2c ]
jmp r-xdata
movzx edx cl
cmp cl 0x5a
ja r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebx + eax * 4 ]
mov edx [ ebp - 0x18 ]
mov [ ebx + edx * 4 ] ecx
mov ecx [ ebp - 0x2c ]
lea esi [ eax + eax + 0x1 ]
mov [ ebx + eax * 4 ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] esi
cmp esi eax
jl r-xdata
sbb eax eax
neg eax
test eax eax
je r-xdata
cmp dl cl
jne r-xdata
cmp cl 0x5a
ja r-xdata
movzx edx cl
add edx 0x20
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov esi [ ebp - 0x8 ]
sbb eax eax
neg eax
test eax eax
je r-xdata
cmp dl cl
jne r-xdata
cmp cl 0x5a
ja r-xdata
movzx edx cl
add edx 0x20
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebx + edi * 4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x28 ]
mov [ ebx + ecx * 4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + edi * 4 ] edx
mov [ ebp - 0x14 ] edi
lea edi [ edi + edi + 0x1 ]
cmp edi eax
jl r-xdata
mov ebx [ ebp - 0x10 ]
sbb eax eax
neg eax
test eax eax
je r-xdata
cmp dl cl
jne r-xdata
cmp cl 0x5a
ja r-xdata
movzx edx cl
add edx 0x20
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ebx [ ebp - 0x10 ]
sbb eax eax
neg eax
test eax eax
je r-xdata
mov [ ebp - 0x1 ] dl
cmp dl cl
mov edx [ ebp - 0x28 ]
jne r-xdata
cmp cl 0x5a
ja r-xdata
movzx edx cl
add edx 0x20
jmp r-xdata
lea ecx [ esi + 0x1 ]
cmp ecx eax
jge r-xdata
jmp r-xdata
cmp eax edi
inc eax
inc esi
cmp eax edi
jb r-xdata
add cl 0x20
mov cl [ esi ]
cmp cl 0x41
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
add esi eax
mov eax [ ebx + ecx * 4 ]
mov ecx [ edx + 0x10 ]
mov edx [ edx ]
mov [ ebp - 0x8 ] esi
mov esi [ ebx + esi * 4 ]
mov esi [ ecx + esi * 4 ]
movzx edi [ esi + edx + 0x1c ]
mov [ ebp - 0x2c ] eax
mov eax [ ecx + eax * 4 ]
add eax edx
add esi edx
movzx edx [ eax + 0x1c ]
mov [ ebp - 0x14 ] edx
xor dl dl
xor cl cl
add eax 0x2e
add esi 0x2e
mov [ ebp - 0x1c ] edi
cmp [ ebp - 0x14 ] edi
jae r-xdata
cmp eax [ ebp - 0x14 ]
jne r-xdata
inc eax
inc esi
cmp eax [ ebp - 0x14 ]
jb r-xdata
add cl 0x20
mov cl [ esi ]
cmp cl 0x41
jb r-xdata
jmp r-xdata
cmp eax ebx
inc eax
inc esi
cmp eax ebx
jb r-xdata
add cl 0x20
mov cl [ esi ]
cmp cl 0x41
jb r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
add edi eax
mov eax [ ebx + ecx * 4 ]
mov ecx [ edx + 0x10 ]
mov edx [ edx ]
mov ebx [ ebx + edi * 4 ]
mov esi [ ecx + ebx * 4 ]
movzx ebx [ esi + edx + 0x1c ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + eax * 4 ]
add eax edx
add esi edx
movzx edx [ eax + 0x1c ]
mov [ ebp - 0x18 ] edx
xor dl dl
xor cl cl
add eax 0x2e
add esi 0x2e
mov [ ebp - 0x2c ] ebx
cmp [ ebp - 0x18 ] ebx
jae r-xdata
mov ebx [ ebp - 0x24 ]
cmp eax edx
inc eax
inc esi
cmp eax edx
jb r-xdata
add cl 0x20
mov cl [ esi ]
cmp cl 0x41
jb r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
mov cl [ eax ]
cmp cl 0x41
jb r-xdata
jmp r-xdata
sub_41c320
push ebp
mov ebp esp
mov eax 0x1018
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ esi ]
shr eax 0xb
not eax
and eax 0x1
mov [ ebp - 0x1014 ] eax
mov eax [ esi + 0x4 ]
test eax eax
ja r-xdata
push ebx
push edi
mov edi edx
sub edi 0x1000
mov ebx eax
jb r-xdata
xor edi edi
xor ebx ebx
jg r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp edx 0x16
jae r-xdata
sub edx edi
mov [ ebp - 0x1008 ] edx
ja r-xdata
mov ecx edx
sub ecx edi
sbb eax ebx
test eax eax
jb r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1008 ]
add eax 0xfffffffc
js r-xdata
mov [ ebp - 0x1008 ] 0x1000
jmp r-xdata
cmp ecx 0x1000
jbe r-xdata
mov ecx edi
or ecx ebx
je r-xdata
mov ecx 0x6054b50
mov eax [ ebp - 0x1008 ]
mov edx [ esi + 0x34 ]
push eax
mov eax [ esi + 0x2c ]
lea ecx [ ebp - 0x1004 ]
push ecx
push ebx
push edi
push edx
call eax
add esp 0x14
cmp eax [ ebp - 0x1008 ]
jne r-xdata
mov edx [ esi ]
mov eax [ esi + 0x4 ]
mov ecx edx
sub ecx edi
mov [ ebp - 0x1010 ] ecx
mov ecx eax
sbb ecx ebx
test ecx ecx
ja r-xdata
test eax eax
jns r-xdata
dec eax
jns r-xdata
jb r-xdata
mov ecx [ esi + 0x2c ]
push 0x16
lea edx [ ebp - 0x1004 ]
push edx
cdq
add eax edi
adc edx ebx
push edx
push eax
mov eax [ esi + 0x34 ]
push eax
call ecx
add esp 0x14
cmp eax 0x16
jne r-xdata
cmp [ ebp + eax - 0x1004 ] ecx
je r-xdata
jmp r-xdata
sub edi 0xffd
jmp r-xdata
cmp [ ebp - 0x1010 ] 0x10015
jae r-xdata
cmp [ ebp - 0x1004 ] 0x6054b50
jne r-xdata
sbb ebx 0x0
js r-xdata
movzx ebx [ ebp - 0xffa ]
movzx edx [ ebp - 0xffc ]
mov [ esi + 0x10 ] ebx
cmp ebx edx
jne r-xdata
movzx ecx [ ebp - 0xffe ]
movzx eax [ ebp - 0x1000 ]
mov edx ecx
or edx eax
mov [ ebp - 0x1018 ] eax
je r-xdata
mov edx [ ebp - 0xff8 ]
mov eax ebx
imul eax eax 0x2e
mov [ ebp - 0x1008 ] edx
cmp edx eax
jb r-xdata
cmp eax 0x1
jne r-xdata
mov edi [ ebp - 0xff4 ]
xor eax eax
mov ecx edx
add ecx edi
mov [ ebp - 0x100c ] 0x0
adc eax [ ebp - 0x100c ]
mov [ ebp - 0x1010 ] edi
cmp eax [ esi + 0x4 ]
jb r-xdata
cmp ecx eax
jne r-xdata
mov ecx [ ebp - 0x100c ]
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ecx
test ebx ebx
je r-xdata
ja r-xdata
cmp [ ebp - 0x1014 ] 0x0
je r-xdata
mov edi [ esi + 0x38 ]
cmp edx [ edi + 0x8 ]
jbe r-xdata
cmp ecx [ esi ]
ja r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov eax esi
call sub_41bfc0
mov ecx [ ebp - 0x1008 ]
mov [ edi + 0x4 ] ecx
mov ebx [ esi + 0x10 ]
mov edi [ esi + 0x38 ]
cmp ebx [ edi + 0x18 ]
jbe r-xdata
cmp [ edi + 0xc ] 0x0
mov ebx edx
jne r-xdata
cmp [ ebp - 0x1014 ] 0x0
mov [ edi + 0x14 ] ebx
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
mov edx ebx
cmp [ edi + 0x8 ] edx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov ecx [ esi + 0x38 ]
mov edx [ ecx ]
mov edi [ ebp - 0x1008 ]
mov ecx [ esi + 0x34 ]
push edi
push edx
mov edx [ esi + 0x2c ]
xor eax eax
push eax
mov eax [ ebp - 0x1010 ]
push eax
push ecx
call edx
add esp 0x14
cmp eax edi
jne r-xdata
mov ebx [ esi + 0x10 ]
mov edi [ esi + 0x38 ]
cmp ebx [ edi + 0x28 ]
jbe r-xdata
cmp [ edi + 0x18 ] ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ edi + 0xc ]
mov ecx [ edi ]
mov edx [ esi + 0x28 ]
push ebx
push eax
mov eax [ esi + 0x24 ]
push ecx
push edx
call eax
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0x38 ]
mov eax [ eax ]
mov edx edi
xor edi edi
mov [ ebp - 0x1008 ] edx
cmp [ esi + 0x10 ] edi
jbe r-xdata
mov [ edi + 0x24 ] ebx
cmp [ edi + 0x2c ] 0x0
jne r-xdata
mov edx [ edi + 0x1c ]
mov eax [ edi + 0x10 ]
mov ecx [ esi + 0x28 ]
push ebx
push edx
mov edx [ esi + 0x24 ]
push eax
push ecx
call edx
add esp 0x10
test eax eax
je r-xdata
mov [ edi ] eax
mov [ edi + 0x8 ] ebx
lea esp [ esp ]
cmp [ edi + 0x28 ] ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov [ edi + 0x10 ] eax
mov [ edi + 0x18 ] ebx
cmp [ eax ] 0x2014b50
jne r-xdata
mov eax [ edi + 0x2c ]
mov ecx [ edi + 0x20 ]
mov edx [ esi + 0x28 ]
push ebx
push eax
mov eax [ esi + 0x24 ]
push ecx
push edx
call eax
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esi + 0x38 ]
mov edx eax
sub edx [ ecx ]
cmp [ ebp - 0x1014 ] 0x0
mov ecx [ ecx + 0x10 ]
mov [ ecx + edi * 4 ] edx
je r-xdata
mov [ edi + 0x20 ] eax
mov [ edi + 0x28 ] ebx
cmp [ eax + 0xa ] 0x0
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x100c ] edx
jne r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ edx + 0x20 ]
mov [ ecx + edi * 4 ] edi
test ecx ecx
je r-xdata
cmp ecx edx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
test edx edx
je r-xdata
cmp edx 0xffffffff
je r-xdata
movzx ecx [ eax + 0x22 ]
cmp ecx [ ebp - 0x1018 ]
je r-xdata
mov edx [ eax + 0x2a ]
xor ecx ecx
xor ebx ebx
add edx [ ebp - 0x100c ]
adc ecx ebx
add edx 0x1e
adc ecx ebx
cmp ecx [ esi + 0x4 ]
ja r-xdata
cmp ecx 0x1
jne r-xdata
jb r-xdata
movzx ecx [ eax + 0x1e ]
movzx edx [ eax + 0x20 ]
add edx ecx
movzx ecx [ eax + 0x1c ]
lea ecx [ edx + ecx + 0x2e ]
mov edx [ ebp - 0x1008 ]
cmp ecx edx
ja r-xdata
cmp edx [ esi ]
ja r-xdata
sub edx ecx
inc edi
add eax ecx
mov [ ebp - 0x1008 ] edx
cmp edi [ esi + 0x10 ]
jb r-xdata
cmp edx 0x2e
jb r-xdata
sub_41c770
push ebp
mov ebp esp
push esi
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x2c ] 0x0
je r-xdata
call sub_41be90
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
call sub_41c320
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov edi esi
call sub_41de80
pop edi
sub_41c7c0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
push esi
push edi
mov edi [ ebp + 0xc ]
cmp edx eax
jb r-xdata
mov esi [ ebp + 0x18 ]
sub ecx edi
sbb eax edx
xor edx edx
cmp eax edx
ja r-xdata
ja r-xdata
mov eax [ ebx + 0x38 ]
mov ecx [ eax + 0x34 ]
mov edx [ ebp + 0x14 ]
push esi
add ecx edi
push ecx
push edx
call sub_421710
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
jb r-xdata
xor esi esi
jmp r-xdata
cmp edi ecx
jb r-xdata
mov esi ecx
cmp ecx esi
jae r-xdata
sub_41c820
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
call sub_41be90
test eax eax
je r-xdata
mov eax [ esi + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x2c ] sub_41c7c0
mov [ esi + 0x34 ] esi
mov [ eax + 0x34 ] ecx
mov eax [ ebp + 0xc ]
mov edx [ esi + 0x38 ]
push eax
mov [ edx + 0x38 ] edi
call sub_41c320
add esp 0x4
test eax eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov edi esi
call sub_41de80
sub_41c880
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x38 ]
mov ecx [ eax + 0x30 ]
push ecx
call sub_42439d
mov ecx [ ebp + 0x10 ]
add esp 0x4
test ecx ecx
jl r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0xc ]
jg r-xdata
cmp eax esi
jne r-xdata
test esi esi
jb r-xdata
mov edx [ edi + 0x38 ]
mov eax [ edx + 0x30 ]
push 0x0
push ecx
push esi
push eax
call sub_422eb9
add esp 0x10
test eax eax
jne r-xdata
cmp edx ecx
je r-xdata
mov ecx [ edi + 0x38 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
push edx
push eax
push 0x1
push ecx
call sub_424f7a
add esp 0x10
pop edi
pop esi
pop ebp
retn
sub_41c8f0
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
push r--data
mov esi ecx
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_424a9a
mov edi [ ebp - 0x4 ]
add esp 0xc
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push 0x2
push 0x0
push 0x0
push edi
call sub_422eb9
add esp 0x10
test eax eax
je r-xdata
push ebx
push edi
call sub_42439d
add esp 0x4
mov ebx eax
mov [ ebp - 0x8 ] edx
test esi esi
je r-xdata
push edi
call sub_423f5f
add esp 0x4
push edi
call sub_423f5f
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
call sub_41be90
test eax eax
jne r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ esi + 0x2c ] sub_41c880
mov [ esi + 0x34 ] esi
mov [ edx + 0x30 ] edi
push ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] eax
call sub_41c320
add esp 0x4
test eax eax
jne r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
mov edi esi
call sub_41de80
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_41c9c0
test eax eax
je r-xdata
xor eax eax
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp edx [ eax + 0x10 ]
jae r-xdata
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov ecx [ eax + 0x38 ]
mov eax [ ecx + 0x10 ]
mov eax [ eax + edx * 4 ]
add eax [ ecx ]
retn
sub_41c9f0
test eax eax
je r-xdata
xor eax eax
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp edx [ eax + 0x10 ]
jae r-xdata
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov ecx [ eax + 0x38 ]
mov eax [ ecx + 0x10 ]
mov eax [ eax + edx * 4 ]
add eax [ ecx ]
jne r-xdata
movzx eax [ eax + 0x8 ]
and eax 0x1
retn
sub_41ca20
test eax eax
je r-xdata
xor eax eax
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp edx [ eax + 0x10 ]
jae r-xdata
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov ecx [ eax + 0x38 ]
mov eax [ ecx + 0x10 ]
mov eax [ eax + edx * 4 ]
add eax [ ecx ]
jne r-xdata
movzx ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
movzx eax [ eax + 0x26 ]
shr eax 0x4
and eax 0x1
retn
cmp [ ecx + eax + 0x2d ] 0x2f
jne r-xdata
mov eax 0x1
retn
sub_41ca70
push ebx
xor ebx ebx
push edi
cmp ecx ebx
je r-xdata
pop edi
xor eax eax
pop ebx
retn
mov edx [ ecx + 0x38 ]
cmp edx ebx
je r-xdata
cmp eax [ ecx + 0x10 ]
jae r-xdata
cmp [ ecx + 0x14 ] 0x1
jne r-xdata
mov ecx edx
mov edi [ ecx + 0x10 ]
mov edi [ edi + eax * 4 ]
add edi [ ecx ]
cmp edi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ edx + 0x10 ]
mov edx [ ecx + eax * 4 ]
movzx ecx [ edi + 0x6 ]
mov [ esi ] eax
movzx eax [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
mov dx [ edi + 0x8 ]
mov [ esi + 0x8 ] ax
movzx eax [ edi + 0xa ]
mov [ esi + 0xa ] cx
movzx ecx [ edi + 0xc ]
mov [ esi + 0xc ] dx
movzx edx [ edi + 0xe ]
mov [ esi + 0xe ] ax
call sub_41bc80
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x18 ]
mov [ esi + 0x14 ] edx
mov edx [ edi + 0x14 ]
mov [ esi + 0x24 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] ebx
movzx ebx [ edi + 0x1c ]
mov [ esi + 0x18 ] ecx
movzx ecx [ edi + 0x24 ]
mov [ esi + 0x20 ] edx
mov edx [ edi + 0x26 ]
mov [ esi + 0x28 ] eax
mov eax [ edi + 0x2a ]
mov [ esi + 0x30 ] cx
mov [ esi + 0x34 ] edx
mov [ esi + 0x38 ] eax
cmp ebx 0x103
jb r-xdata
push ebx
lea ecx [ edi + 0x2e ]
push ecx
lea edx [ esi + 0x44 ]
push edx
call sub_421710
mov [ ebx + esi + 0x44 ] 0x0
movzx ebx [ edi + 0x20 ]
add esp 0xc
cmp ebx 0xff
jb r-xdata
mov ebx 0x103
movzx eax [ edi + 0x1c ]
movzx ecx [ edi + 0x1e ]
add ecx eax
push ebx
lea edx [ ecx + edi + 0x2e ]
push edx
lea eax [ esi + 0x148 ]
push eax
mov [ esi + 0x40 ] ebx
call sub_421710
add esp 0xc
pop edi
mov [ ebx + esi + 0x148 ] 0x0
mov eax 0x1
pop ebx
retn
mov ebx 0xff
sub_41cb90
test eax eax
je r-xdata
test edi edi
je r-xdata
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor eax eax
retn
mov [ ebx ] 0x0
cmp edx [ eax + 0x10 ]
jae r-xdata
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov ecx [ eax + 0x38 ]
mov eax [ ecx + 0x10 ]
mov eax [ eax + edx * 4 ]
add eax [ ecx ]
jne r-xdata
push esi
movzx esi [ eax + 0x1c ]
test edi edi
je r-xdata
lea eax [ esi + 0x1 ]
pop esi
retn
lea ecx [ edi - 0x1 ]
cmp esi ecx
jb r-xdata
push esi
add eax 0x2e
push eax
push ebx
call sub_421710
add esp 0xc
mov [ esi + ebx ] 0x0
mov esi ecx
sub_41cbf0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x100
push esi
push edi
mov esi eax
je r-xdata
push ebx
xor ebx ebx
test esi esi
je r-xdata
cmp esi 0x4
jb r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov edi ecx
sub edx ecx
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
movsx ecx al
cmp al 0x5a
jg r-xdata
xor eax eax
xor edx edx
test eax eax
sete dl
pop edi
pop esi
mov eax edx
pop ebp
retn
movzx edi [ ecx ]
movzx eax [ edx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
movsx eax al
cmp al 0x5a
jg r-xdata
movsx ecx al
add ecx 0x20
jmp r-xdata
sar eax 0x1f
or eax 0x1
xor edx edx
test eax eax
sete dl
pop edi
pop esi
mov eax edx
pop ebp
retn
cmp esi 0x1
jbe r-xdata
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
inc ebx
inc edi
cmp ebx esi
jb r-xdata
movsx eax al
add eax 0x20
jmp r-xdata
mov al [ edi ]
cmp al 0x41
jl r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
mov al [ edx + edi ]
cmp al 0x41
jl r-xdata
cmp ecx eax
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_41ccd0
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ ecx + edx * 4 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
movzx edi [ eax + 0x1c ]
xor dl dl
xor cl cl
add eax 0x2e
mov esi edi
cmp edi ebx
jb r-xdata
add esi eax
cmp eax esi
jae r-xdata
mov esi ebx
jne r-xdata
lea esp [ esp ]
pop edi
movzx ecx cl
movzx eax dl
pop esi
sub eax ecx
pop ebx
pop ebp
retn
sub edi ebx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
movzx edx cl
cmp cl 0x5a
ja r-xdata
cmp dl cl
jne r-xdata
cmp cl 0x5a
jg r-xdata
movzx edx cl
add edx 0x20
jmp r-xdata
cmp eax esi
inc [ ebp + 0xc ]
inc eax
cmp eax esi
jb r-xdata
add cl 0x20
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
cmp cl 0x41
jl r-xdata
mov cl [ eax ]
cmp cl 0x41
jb r-xdata
sub_41cd50
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi [ edx + 0x38 ]
mov eax [ edi + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi [ edx + 0x10 ]
dec esi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] esi
js r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x10 ]
mov edx [ edi ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] edx
jmp r-xdata
add esi [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
sar esi 0x1
mov ecx [ edx + esi * 4 ]
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ edx + ecx * 4 ]
add ecx [ ebp - 0x1c ]
xor bl bl
movzx edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
xor dl dl
add ecx 0x2e
cmp [ ebp - 0x4 ] eax
jae r-xdata
add eax ecx
cmp ecx eax
jae r-xdata
mov eax [ ebp - 0x4 ]
jne r-xdata
mov dl [ ecx ]
cmp dl 0x41
jb r-xdata
movzx eax dl
movzx ecx bl
sub ecx eax
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
jmp r-xdata
movzx ebx dl
cmp dl 0x5a
ja r-xdata
mov eax [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jns r-xdata
test ecx ecx
je r-xdata
cmp bl dl
jne r-xdata
cmp dl 0x5a
jg r-xdata
movzx ebx dl
add ebx 0x20
jmp r-xdata
dec esi
mov [ ebp - 0x8 ] esi
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ecx eax
inc ecx
inc edi
cmp ecx eax
jb r-xdata
add dl 0x20
mov dl [ edi ]
cmp dl 0x41
jl r-xdata
mov eax [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0xc ] ecx
jle r-xdata
sub_41ce50
push ebp
mov ebp esp
sub esp 0x14
push ebx
test edx edx
je r-xdata
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x38 ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
cmp [ edx + 0x14 ] 0x1
jne r-xdata
test [ ebp + 0xc ] 0x300
jne r-xdata
mov eax ebx
push esi
lea esi [ eax + 0x1 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov [ ebp - 0x10 ] eax
cmp eax 0xffff
jbe r-xdata
push ebx
call sub_41cd50
add esp 0x4
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edx + 0x10 ]
push edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] ecx
test ecx ecx
je r-xdata
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edx + 0x38 ]
mov edx [ ecx ]
mov ecx [ ecx + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
inc edx
add ecx 0x4
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
cmp edx [ ebp - 0x14 ]
jae r-xdata
test [ ebp + 0xc ] 0x200
je r-xdata
mov ebx [ ebp + 0x8 ]
jmp r-xdata
cmp edi eax
jne r-xdata
test edi edi
je r-xdata
mov ecx [ ecx ]
add ecx [ ebp - 0xc ]
movzx edi [ ecx + 0x1c ]
lea edx [ ecx + 0x2e ]
cmp edi eax
jb r-xdata
test [ ebp + 0xc ] 0x100
je r-xdata
lea esi [ edi - 0x1 ]
xor eax eax
test edi edi
je r-xdata
mov esi ebx
cmp edi 0x4
jb r-xdata
inc esi
add edx esi
sub edi esi
cmp cl 0x5c
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi edx
sub ebx edx
test edi edi
je r-xdata
mov ecx [ esi ]
cmp ecx [ edx ]
jne r-xdata
cmp cl 0x3a
je r-xdata
movsx edx cl
cmp cl 0x5a
jg r-xdata
xor ecx ecx
movzx ebx [ edx ]
movzx ecx [ esi ]
sub ecx ebx
jne r-xdata
sub edi 0x4
add edx 0x4
add esi 0x4
cmp edi 0x4
jae r-xdata
dec esi
jns r-xdata
movsx ecx cl
cmp cl 0x5a
jg r-xdata
movsx edx cl
add edx 0x20
jmp r-xdata
sar ecx 0x1f
or ecx 0x1
jmp r-xdata
cmp edi 0x1
jbe r-xdata
mov cl [ esi + edx ]
cmp cl 0x2f
je r-xdata
mov eax [ ebp - 0x10 ]
inc eax
inc esi
cmp eax edi
jb r-xdata
movsx ecx cl
add ecx 0x20
jmp r-xdata
mov cl [ esi ]
cmp cl 0x41
jl r-xdata
xor edx edx
test ecx ecx
sete dl
mov ecx edx
test ecx ecx
je r-xdata
movzx ecx [ esi + 0x1 ]
movzx ebx [ edx + 0x1 ]
sub ecx ebx
jne r-xdata
mov cl [ ebx + esi ]
cmp cl 0x41
jl r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edx ecx
jne r-xdata
cmp edi 0x2
jbe r-xdata
movzx ecx [ esi + 0x2 ]
movzx ebx [ edx + 0x2 ]
sub ecx ebx
jne r-xdata
cmp edi 0x3
jbe r-xdata
movzx ecx [ esi + 0x3 ]
movzx edx [ edx + 0x3 ]
sub ecx edx
sub_41d030
push ebp
mov ebp esp
mov eax 0x2d98
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
xor ecx ecx
push edi
mov edi edx
mov [ ebp - 0x2d8c ] edi
mov [ ebp - 0x2d78 ] eax
mov [ ebp - 0x2d80 ] ecx
mov [ ebp - 0x2d7c ] ecx
mov [ ebp - 0x2d88 ] ecx
mov [ ebp - 0x2d84 ] ecx
cmp [ ebp + 0xc ] ecx
je r-xdata
push esi
lea esi [ ebp - 0x26c ]
mov eax ebx
mov ecx edi
call sub_41ca70
test eax eax
je r-xdata
cmp eax ecx
jne r-xdata
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x24c ]
mov eax esi
or eax [ ebp - 0x248 ]
je r-xdata
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop esi
pop edi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
mov edx ebx
mov eax edi
call sub_41ca20
test eax eax
jne r-xdata
test [ ebp - 0x260 ] 0x21
jne r-xdata
mov ecx [ ebp + 0x10 ]
and ecx 0x400
mov [ ebp - 0x2d70 ] ecx
jne r-xdata
test ecx ecx
je r-xdata
mov ax [ ebp - 0x25e ]
test ax ax
je r-xdata
mov edx [ ebp - 0x244 ]
mov eax [ ebp - 0x240 ]
mov [ ebp - 0x2d64 ] edx
mov [ ebp - 0x2d60 ] eax
mov ecx [ ebp - 0x248 ]
mov [ ebp - 0x2d64 ] esi
mov [ ebp - 0x2d60 ] ecx
jmp r-xdata
cmp ax 0x8
jne r-xdata
mov eax [ ebp - 0x230 ]
mov ecx [ ebp - 0x234 ]
push 0x1e
lea edx [ ebp - 0x24 ]
push edx
mov edx [ edi + 0x34 ]
push eax
mov eax [ edi + 0x2c ]
push ecx
push edx
call eax
add esp 0x14
cmp eax 0x1e
jne r-xdata
jb r-xdata
xor eax eax
cmp eax [ ebp - 0x2d60 ]
ja r-xdata
cmp [ ebp - 0x24 ] 0x4034b50
jne r-xdata
mov ecx [ ebp - 0x2d64 ]
cmp [ ebp + 0xc ] ecx
jb r-xdata
movzx ecx [ ebp - 0xa ]
movzx edx [ ebp - 0x8 ]
lea eax [ ecx + edx + 0x1e ]
cdq
mov ebx eax
add ebx [ ebp - 0x234 ]
adc edx [ ebp - 0x230 ]
mov ecx ebx
add ecx esi
mov eax edx
adc eax [ ebp - 0x248 ]
mov [ ebp - 0x2d94 ] ebx
mov [ ebp - 0x2d90 ] edx
cmp eax [ edi + 0x4 ]
jb r-xdata
xor ecx ecx
cmp [ ebp - 0x2d70 ] ecx
jne r-xdata
ja r-xdata
mov esi [ ebp - 0x2d64 ]
mov ecx [ ebp - 0x2d78 ]
mov eax [ edi + 0x2c ]
push esi
push ecx
push edx
mov edx [ edi + 0x34 ]
push ebx
push edx
call eax
add esp 0x14
xor ecx ecx
cmp eax esi
jne r-xdata
cmp [ ebp - 0x25e ] cx
je r-xdata
cmp ecx [ edi ]
ja r-xdata
cmp ecx [ ebp - 0x2d60 ]
je r-xdata
mov eax [ edi + 0x38 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x2d5c ] ecx
cmp eax ecx
je r-xdata
cmp [ ebp - 0x2d70 ] ecx
jne r-xdata
mov eax [ ebp - 0x248 ]
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x24c ]
mov edi [ ebp - 0x248 ]
add eax ebx
mov [ ebp - 0x2d74 ] eax
xor eax eax
mov [ ebp - 0x2d64 ] ecx
mov edx edi
xor ecx ecx
mov [ ebp - 0x2d60 ] edx
mov [ ebp - 0x2d6c ] eax
mov [ ebp - 0x2d68 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x2d78 ]
xor eax eax
test ecx ecx
je r-xdata
mov [ ebp - 0x2d64 ] 0x10000
mov [ ebp - 0x2d60 ] ecx
jmp r-xdata
jb r-xdata
mov edx [ ebp - 0x244 ]
sub edx [ ebp - 0x2d80 ]
mov [ ebp - 0x2d70 ] edx
mov edx esi
or edx edi
jne r-xdata
cmp eax [ ebp - 0x254 ]
jne r-xdata
mov edx [ ebp - 0x244 ]
call sub_415ca0
mov eax [ ebp - 0x2d64 ]
mov ecx [ edi + 0x28 ]
mov edx [ edi + 0x1c ]
push eax
push 0x1
push ecx
call edx
add esp 0xc
mov [ ebp - 0x2d74 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d64 ] esi
mov [ ebp - 0x2d60 ] eax
cmp eax ecx
ja r-xdata
cmp esi 0x10000
jae r-xdata
or eax ecx
mov [ ebp - 0x2d98 ] esi
je r-xdata
mov edx [ ebp - 0x2d8c ]
mov edx [ edx + 0x38 ]
cmp [ edx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24c ]
mov ecx [ ebp - 0x248 ]
xor esi esi
xor edi edi
mov [ ebp - 0x2d6c ] eax
mov [ ebp - 0x2d68 ] ecx
cmp esi 0x7fffffff
ja r-xdata
xor eax eax
mov eax 0x2
jmp r-xdata
mov edi [ ebp - 0x2d60 ]
cmp edi ecx
ja r-xdata
test ebx ebx
jne r-xdata
mov ebx [ ebp - 0x2d94 ]
jmp r-xdata
mov ecx [ ebp - 0x2d80 ]
or eax 0x4
push eax
mov eax [ ebp - 0x2d78 ]
add ecx eax
push ecx
mov ecx [ ebp - 0x2d74 ]
push eax
lea edx [ ebp - 0x2d98 ]
push edx
mov edx [ ebp - 0x2d88 ]
lea eax [ ebp - 0x2d5c ]
lea edx [ edx + ecx ]
push eax
lea ecx [ ebp - 0x2d70 ]
call sub_4164b0
xor ecx ecx
mov ebx eax
mov eax [ ebp - 0x2d98 ]
add esp 0x14
sub esi eax
sbb edi ecx
add [ ebp - 0x2d88 ] eax
mov eax [ ebp - 0x2d80 ]
adc [ ebp - 0x2d84 ] ecx
add eax [ ebp - 0x2d70 ]
adc [ ebp - 0x2d7c ] ecx
mov [ ebp - 0x2d80 ] eax
cmp ebx 0x1
jne r-xdata
mov esi eax
mov edi ecx
jb r-xdata
mov eax [ ebp - 0x2d8c ]
mov edx [ eax + 0x38 ]
cmp [ edx + 0x34 ] 0x0
jne r-xdata
mov edx [ ebp - 0x244 ]
cmp eax edx
jne r-xdata
mov eax [ ebp - 0x2d6c ]
mov ecx [ ebp - 0x2d68 ]
jmp r-xdata
or ebx 0xffffffff
cmp ecx edi
jne r-xdata
mov esi [ ebp - 0x2d64 ]
jmp r-xdata
cmp [ ebp - 0x2d64 ] eax
jae r-xdata
pop esi
xor eax eax
test ebx ebx
pop edi
sete al
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2d74 ]
mov edx [ eax + 0x28 ]
mov eax [ eax + 0x20 ]
push ecx
push edx
call eax
add esp 0x8
mov ecx [ ebp - 0x2d7c ]
cmp ecx [ ebp - 0x240 ]
jne r-xdata
add ebx esi
adc [ ebp - 0x2d90 ] edi
sub [ ebp - 0x2d6c ] esi
mov eax [ ebp - 0x2d6c ]
mov [ ebp - 0x2d88 ] ecx
sbb [ ebp - 0x2d68 ] edi
mov [ ebp - 0x2d84 ] ecx
mov ecx [ ebp - 0x2d68 ]
mov [ ebp - 0x2d94 ] ebx
mov eax [ ebp - 0x2d74 ]
mov ecx [ ebp - 0x2d90 ]
push esi
push eax
mov eax [ ebp - 0x2d8c ]
mov edx [ eax + 0x34 ]
mov eax [ eax + 0x2c ]
push ecx
push ebx
push edx
call eax
add esp 0x14
xor ecx ecx
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x2d78 ]
xor eax eax
test ecx ecx
je r-xdata
cmp eax [ ebp - 0x254 ]
je r-xdata
call sub_415ca0
sub_41d510
push ebp
mov ebp esp
push esi
push eax
mov edx edi
call sub_41ce50
add esp 0x8
test eax eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
mov ecx eax
mov edx edi
call sub_41d030
add esp 0xc
pop ebp
retn
xor eax eax
pop ebp
retn
sub_41d560
push ebp
mov ebp esp
push esi
push eax
mov edx edi
call sub_41ce50
add esp 0x8
test eax eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
mov ecx eax
mov edx edi
call sub_41d030
add esp 0xc
pop ebp
retn
xor eax eax
pop ebp
retn
sub_41d590
push ebp
mov ebp esp
test esi esi
je r-xdata
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
test eax eax
jne r-xdata
mov [ ecx ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x10 ]
jae r-xdata
test [ ebp + 0x10 ] 0x400
push edi
je r-xdata
pop ebp
retn
cmp [ esi + 0x14 ] 0x1
jne r-xdata
mov edi [ eax + 0x18 ]
mov edi [ eax + 0x14 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov edx [ ecx + 0x10 ]
mov eax [ edx + eax * 4 ]
add eax [ ecx ]
jmp r-xdata
xor eax eax
pop edi
pop ebp
retn
cmp edi 0x7fffffff
jbe r-xdata
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x1c ]
push ebx
push edi
push 0x1
push eax
call ecx
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edx
push edi
push ebx
mov edx esi
call sub_41d030
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x20 ]
push ebx
push eax
call ecx
add esp 0x8
mov eax ebx
pop ebx
pop edi
pop ebp
retn
mov [ eax ] edi
sub_41d650
push esi
mov esi ecx
push edi
push eax
mov edx esi
call sub_41ce50
add esp 0x8
test eax eax
jns r-xdata
push edi
push ebx
push eax
call sub_41d590
add esp 0xc
pop esi
retn
test ebx ebx
je r-xdata
xor eax eax
pop esi
retn
mov [ ebx ] 0x0
sub_41d680
push ebp
mov ebp esp
mov eax 0x2db0
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x2d9c ] eax
xor eax eax
push edi
mov edi edx
mov [ ebp - 0x2da0 ] ecx
mov [ ebp - 0x2d60 ] eax
mov [ ebp - 0x2d6c ] eax
mov [ ebp - 0x2da8 ] eax
mov [ ebp - 0x2da4 ] eax
mov [ ebp - 0x2d74 ] eax
mov [ ebp - 0x2d70 ] eax
mov [ ebp - 0x2d90 ] eax
lea esi [ ebp - 0x26c ]
mov eax edi
mov ecx ebx
mov [ ebp - 0x2d84 ] ebx
call sub_41ca70
test eax eax
jne r-xdata
mov edx [ ebp - 0x24c ]
or edx [ ebp - 0x248 ]
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov edx edi
mov eax ebx
call sub_41ca20
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
test [ ebp - 0x260 ] 0x21
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x400
mov [ ebp - 0x2d98 ] eax
mov ax [ ebp - 0x25e ]
jne r-xdata
mov edi [ ebp - 0x230 ]
mov esi [ ebp - 0x234 ]
mov ecx [ ebx + 0x34 ]
mov edx [ ebx + 0x2c ]
push 0x1e
lea eax [ ebp - 0x24 ]
push eax
push edi
push esi
push ecx
call edx
add esp 0x14
cmp eax 0x1e
jne r-xdata
test ax ax
je r-xdata
cmp [ ebp - 0x24 ] 0x4034b50
jne r-xdata
cmp ax 0x8
jne r-xdata
movzx ecx [ ebp - 0x8 ]
movzx eax [ ebp - 0xa ]
lea eax [ eax + ecx + 0x1e ]
mov ecx [ ebp - 0x248 ]
cdq
add eax esi
mov esi [ ebp - 0x24c ]
adc edx edi
mov [ ebp - 0x2d80 ] eax
add eax esi
mov [ ebp - 0x2d7c ] edx
adc edx ecx
cmp edx [ ebx + 0x4 ]
jb r-xdata
mov edx [ ebx + 0x38 ]
mov eax [ edx + 0x34 ]
test eax eax
je r-xdata
ja r-xdata
test ecx ecx
ja r-xdata
add eax [ ebp - 0x2d80 ]
mov ecx [ ebp - 0x24c ]
mov [ ebp - 0x2d78 ] eax
mov eax [ ebp - 0x248 ]
mov esi ecx
mov edi eax
mov [ ebp - 0x2d8c ] ecx
mov [ ebp - 0x2d88 ] eax
mov [ ebp - 0x2d68 ] 0x0
mov [ ebp - 0x2d64 ] 0x0
jmp r-xdata
cmp eax [ ebx ]
ja r-xdata
mov eax 0x10000
mov [ ebp - 0x2d88 ] 0x0
jb r-xdata
cmp [ ebp - 0x2d98 ] 0x0
jne r-xdata
mov edx [ ebp - 0x248 ]
mov ecx [ ebp - 0x24c ]
xor esi esi
xor edi edi
mov [ ebp - 0x2d68 ] ecx
mov [ ebp - 0x2d64 ] edx
mov eax edx
mov eax esi
mov [ ebp - 0x2d88 ] ecx
jmp r-xdata
cmp esi 0x10000
jae r-xdata
mov edx [ ebx + 0x38 ]
cmp [ edx + 0x34 ] 0x0
je r-xdata
cmp [ ebp - 0x25e ] 0x0
je r-xdata
mov edx [ ebx + 0x28 ]
push eax
mov [ ebp - 0x2d8c ] eax
mov eax [ ebx + 0x1c ]
push 0x1
push edx
call eax
add esp 0xc
mov [ ebp - 0x2d78 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2d68 ]
or edx [ ebp - 0x2d64 ]
je r-xdata
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x1c ]
push 0x8000
push 0x1
push eax
mov [ ebp - 0x2d5c ] 0x0
call ecx
add esp 0xc
mov [ ebp - 0x2d90 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x2d98 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2d88 ]
mov eax [ ebp - 0x2d64 ]
cmp edi eax
ja r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov eax [ ebp - 0x2d74 ]
mov edx [ ebp - 0x2d90 ]
and eax 0x7fff
lea ecx [ eax + edx ]
mov edx 0x8000
sub edx eax
mov eax esi
or eax edi
mov [ ebp - 0x2d94 ] ecx
mov [ ebp - 0x2db0 ] edx
jne r-xdata
mov [ ebp - 0x2d60 ] 0xffffffff
jmp r-xdata
mov edx [ ebx + 0x38 ]
cmp [ edx + 0x34 ] 0x0
jne r-xdata
mov edx [ ebp - 0x2d74 ]
cmp edx [ ebp - 0x244 ]
jne r-xdata
mov esi [ ebp - 0x2d68 ]
mov edi eax
jb r-xdata
mov esi [ ebp - 0x24c ]
mov edi [ ebp - 0x2d78 ]
push esi
push edi
push eax
push eax
mov eax [ ebp - 0x2da0 ]
push eax
call [ ebp - 0x2d9c ]
add esp 0x14
xor ecx ecx
cmp eax esi
jne r-xdata
mov edx [ ebp - 0x2d68 ]
or edx [ ebp - 0x2d64 ]
mov [ ebp - 0x2dac ] esi
je r-xdata
mov ebx [ ebp - 0x2d84 ]
mov ecx [ ebx + 0x38 ]
cmp [ ecx + 0x34 ] eax
jne r-xdata
mov eax [ ebp - 0x2d90 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2d78 ]
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x20 ]
push eax
push ecx
call edx
add esp 0x8
mov [ ebp - 0x2d60 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x2d70 ]
cmp eax [ ebp - 0x240 ]
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp - 0x2d8c ]
jmp r-xdata
mov ecx [ ebp - 0x2d8c ]
cmp ecx [ ebp - 0x2d68 ]
jae r-xdata
mov ecx [ ebp - 0x248 ]
mov [ ebp - 0x2d60 ] 0xffffffff
mov [ ebp - 0x2d74 ] esi
mov [ ebp - 0x2d70 ] ecx
jmp r-xdata
cmp ecx [ ebp - 0x248 ]
je r-xdata
xor eax eax
mov eax 0x2
jmp r-xdata
mov edi [ ebp - 0x2d88 ]
mov eax [ ebp - 0x2d64 ]
cmp edi eax
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x2d60 ] eax
pop edi
sete al
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x28 ]
push eax
call ecx
add esp 0x8
mov ecx [ ebp - 0x2d6c ]
cmp ecx [ ebp - 0x254 ]
je r-xdata
cmp [ ebp - 0x2d98 ] ecx
jne r-xdata
mov edx [ ebp - 0x2d78 ]
mov eax [ ebp - 0x2d7c ]
mov ecx [ ebp - 0x2d80 ]
push esi
push edx
mov edx [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x2c ]
push ecx
push edx
call eax
add esp 0x14
xor ecx ecx
cmp eax esi
jne r-xdata
cmp [ ebp - 0x2d60 ] 0x0
jne r-xdata
cmp [ ebp - 0x2d98 ] ecx
jne r-xdata
cmp [ ebp - 0x2d60 ] 0x1
je r-xdata
mov edx [ ebp - 0x2d94 ]
mov eax [ ebp - 0x2d70 ]
mov ecx [ ebp - 0x2d74 ]
push ebx
push edx
mov edx [ ebp - 0x2da0 ]
push eax
push ecx
push edx
call [ ebp - 0x2d9c ]
add esp 0x14
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x2d90 ]
mov ebx [ ebp - 0x2da8 ]
push eax
mov eax [ ebp - 0x2d94 ]
push eax
mov eax [ ebp - 0x2d78 ]
push ecx
lea edx [ ebp - 0x2dac ]
push edx
lea ecx [ ebp - 0x2d5c ]
push ecx
lea edx [ ebx + eax ]
lea ecx [ ebp - 0x2db0 ]
call sub_4164b0
xor ecx ecx
add esp 0x14
mov [ ebp - 0x2d60 ] eax
mov eax [ ebp - 0x2dac ]
sub esi eax
sbb edi ecx
add ebx eax
adc [ ebp - 0x2da4 ] ecx
mov [ ebp - 0x2da8 ] ebx
mov ebx [ ebp - 0x2db0 ]
test ebx ebx
je r-xdata
mov esi [ ebp - 0x2d68 ]
mov edi eax
jb r-xdata
mov ecx [ ebp - 0x2d78 ]
mov edx [ ebp - 0x2d70 ]
mov eax [ ebp - 0x2d74 ]
push esi
push ecx
mov ecx [ ebp - 0x2da0 ]
push edx
push eax
push ecx
call [ ebp - 0x2d9c ]
add esp 0x14
xor ecx ecx
cmp eax esi
jne r-xdata
cmp [ ebp - 0x2d78 ] ecx
jne r-xdata
mov ebx [ ebp - 0x2d84 ]
mov ebx [ ebp - 0x2d84 ]
mov ecx [ ebp - 0x248 ]
mov [ ebp - 0x2d74 ] esi
mov [ ebp - 0x2d70 ] ecx
jmp r-xdata
test edi edi
jne r-xdata
cmp [ ebp - 0x2d60 ] 0x2
je r-xdata
mov [ ebp - 0x2d60 ] 0xffffffff
cmp [ ebp - 0x2d94 ] 0x0
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp - 0x2d8c ]
jmp r-xdata
mov edx [ ebp - 0x2d8c ]
cmp edx [ ebp - 0x2d68 ]
jae r-xdata
cmp ecx edi
jne r-xdata
mov ecx [ ebp - 0x2d78 ]
mov eax [ ebp - 0x2d6c ]
mov edx esi
call sub_415ca0
mov [ ebp - 0x2d6c ] eax
mov [ ebp - 0x2d6c ] ecx
jmp r-xdata
mov edx esi
mov ecx edi
xor eax eax
call sub_415ca0
mov [ ebp - 0x2d6c ] eax
mov [ ebp - 0x2d6c ] ecx
mov ecx [ ebp - 0x248 ]
mov [ ebp - 0x2d74 ] esi
mov [ ebp - 0x2d70 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x2d94 ]
mov eax [ ebp - 0x2d6c ]
mov edx ebx
call sub_415ca0
mov [ ebp - 0x2d6c ] eax
mov [ ebp - 0x2d6c ] 0x0
jmp r-xdata
add [ ebp - 0x2d80 ] esi
adc [ ebp - 0x2d7c ] edi
sub [ ebp - 0x2d68 ] esi
sbb [ ebp - 0x2d64 ] edi
xor eax eax
mov [ ebp - 0x2da8 ] eax
mov [ ebp - 0x2da4 ] eax
mov eax [ ebp - 0x2d78 ]
mov ecx [ ebp - 0x2d7c ]
mov edx [ ebp - 0x2d80 ]
push esi
push eax
mov eax [ ebx + 0x34 ]
push ecx
mov ecx [ ebx + 0x2c ]
push edx
push eax
call ecx
add esp 0x14
xor ecx ecx
cmp eax esi
jne r-xdata
add [ ebp - 0x2d80 ] esi
mov eax [ ebp - 0x2d68 ]
mov ecx [ ebp - 0x2d64 ]
adc [ ebp - 0x2d7c ] edi
add [ ebp - 0x2d74 ] esi
adc [ ebp - 0x2d70 ] edi
sub eax esi
sbb ecx edi
mov [ ebp - 0x2d68 ] eax
or eax ecx
mov [ ebp - 0x2d64 ] ecx
jne r-xdata
jb r-xdata
add [ ebp - 0x2d74 ] ebx
mov eax [ ebp - 0x2d70 ]
adc eax 0x0
mov [ ebp - 0x2d70 ] eax
cmp eax [ ebp - 0x240 ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x2d74 ]
cmp eax [ ebp - 0x244 ]
ja r-xdata
sub_41dd60
push ebp
mov ebp esp
push esi
push eax
mov edx edi
call sub_41ce50
add esp 0x8
test eax eax
jns r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
mov ecx [ ebp + 0xc ]
push edi
mov edx eax
call sub_41d680
add esp 0xc
pop ebp
retn
xor eax eax
pop ebp
retn
sub_41dd90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
push ecx
push 0x1
push edx
call sub_423d56
add esp 0x10
pop ebp
retn
sub_41ddb0
push ebp
mov ebp esp
sub esp 0x254
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x250 ] eax
push edi
lea esi [ ebp - 0x24c ]
mov eax ebx
mov edi ecx
call sub_41ca70
test eax eax
jne r-xdata
mov ecx [ ebp - 0x250 ]
push r--data
push ecx
lea edx [ ebp - 0x254 ]
push edx
mov [ ebp - 0x254 ] 0x0
call sub_424a9a
mov ecx [ ebp - 0x254 ]
add esp 0xc
mov esi ecx
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
push sub_41dd90
push edi
mov edx ebx
call sub_41d680
push esi
mov edi eax
call sub_423f5f
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_4216fe
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x238 ]
mov ecx [ ebp - 0x23c ]
push eax
push ecx
push eax
push ecx
mov ecx [ ebp - 0x250 ]
push ecx
call sub_41be40
add esp 0x14
sub_41de80
push esi
test edi edi
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edi + 0x38 ]
test esi esi
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x1
jne r-xdata
mov edx [ edi + 0x28 ]
mov [ edi + 0x38 ] 0x0
mov ecx [ esi ]
push ecx
push edx
call eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov ecx [ edi + 0x28 ]
mov edx [ edi + 0x20 ]
push eax
push ecx
call edx
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov eax [ esi + 0x20 ]
mov ecx [ edi + 0x28 ]
mov edx [ edi + 0x20 ]
push eax
push ecx
call edx
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x30 ]
add esp 0x18
test eax eax
je r-xdata
mov eax [ edi + 0x28 ]
mov ecx [ edi + 0x20 ]
push esi
push eax
call ecx
add esp 0x8
mov [ edi + 0x14 ] 0x0
mov eax 0x1
pop esi
retn
push eax
call sub_423f5f
add esp 0x4
mov [ esi + 0x30 ] 0x0
sub_41df40
push ebp
mov ebp esp
push esi
push eax
mov edx edi
call sub_41ce50
add esp 0x8
test eax eax
jns r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push ecx
mov ebx eax
mov ecx edi
call sub_41ddb0
add esp 0x8
pop ebx
pop ebp
retn
xor eax eax
pop ebp
retn
sub_41dfa0
push ebp
mov ebp esp
test esi esi
je r-xdata
xor eax eax
pop ebp
retn
cmp [ esi + 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
lea ecx [ eax - 0x1 ]
test eax ecx
jne r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov [ esi + 0x1c ] sub_415d00
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov [ esi + 0x20 ] sub_415d20
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x28 ]
mov eax [ ebp + 0xc ]
push 0x40
mov [ esi ] edx
mov edx [ esi + 0x1c ]
push 0x1
push ecx
mov [ esi + 0x14 ] 0x2
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
call edx
add esp 0xc
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov [ esi + 0x24 ] sub_415d40
push 0x40
push 0x0
push eax
call sub_4264e0
mov eax [ esi + 0x38 ]
mov [ eax + 0xc ] 0x1
mov ecx [ esi + 0x38 ]
mov eax 0x4
mov [ ecx + 0x1c ] eax
mov edx [ esi + 0x38 ]
mov [ edx + 0x2c ] eax
add esp 0xc
mov eax 0x1
pop ebp
retn
sub_41e080
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
add ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ eax + 0x38 ]
mov esi [ edi + 0x38 ]
mov eax 0x0
adc eax [ ebp + 0x10 ]
xor edx edx
cmp eax edx
jb r-xdata
mov ebx esi
mov eax edx
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
ja r-xdata
mov ebx ecx
jmp r-xdata
cmp ecx esi
jbe r-xdata
jb r-xdata
cmp [ ebp + 0x18 ] edx
je r-xdata
mov esi [ edi + 0x3c ]
xor ecx ecx
cmp eax ecx
jb r-xdata
cmp ebx 0x7fffffff
ja r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ edi + 0x34 ]
mov edx [ ebp + 0x14 ]
add eax [ ebp + 0xc ]
push ecx
push edx
push eax
call sub_421710
mov eax [ ebp + 0x18 ]
add esp 0xc
mov [ edi + 0x38 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
ja r-xdata
cmp esi 0x40
jae r-xdata
cmp ebx esi
jbe r-xdata
xor ecx ecx
cmp ecx eax
ja r-xdata
mov esi 0x40
mov ecx [ edi + 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x28 ]
mov eax [ eax + 0x24 ]
push esi
push 0x1
push ecx
push edx
call eax
add esp 0x10
test eax eax
je r-xdata
jb r-xdata
mov [ edi + 0x34 ] eax
mov [ edi + 0x3c ] esi
xor ecx ecx
add esi esi
cmp ecx eax
jb r-xdata
cmp esi ebx
jae r-xdata
ja r-xdata
cmp esi ebx
jb r-xdata
sub_41e150
push esi
push edi
mov esi ecx
push 0x0
push ebx
mov edi eax
mov [ esi + 0x30 ] sub_41e080
mov [ esi + 0x34 ] esi
call sub_41dfa0
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
cmp edi ebx
ja r-xdata
test edi edi
je r-xdata
mov edi ebx
pop edi
mov eax 0x1
pop esi
retn
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x1c ]
push edi
push 0x1
push eax
call ecx
mov edx [ esi + 0x38 ]
add esp 0xc
mov [ edx + 0x34 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x38 ]
mov [ eax + 0x3c ] edi
mov edi esi
call sub_41fe20
sub_41e1b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x38 ]
mov ecx [ eax + 0x30 ]
push ecx
call sub_42439d
mov ecx [ ebp + 0x10 ]
add esp 0x4
test ecx ecx
jl r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0xc ]
jg r-xdata
cmp eax esi
jne r-xdata
test esi esi
jb r-xdata
mov edx [ edi + 0x38 ]
mov eax [ edx + 0x30 ]
push 0x0
push ecx
push esi
push eax
call sub_422eb9
add esp 0x10
test eax eax
jne r-xdata
cmp edx ecx
je r-xdata
mov ecx [ edi + 0x38 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
push edx
push eax
push 0x1
push ecx
call sub_423d56
add esp 0x10
pop edi
pop esi
pop ebp
retn
sub_41e220
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
push 0x0
push 0x0
mov edi edx
mov [ esi + 0x30 ] sub_41e1b0
mov [ esi + 0x34 ] esi
call sub_41dfa0
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
push r--data
lea eax [ ebp - 0x8 ]
push edi
push eax
mov [ ebp - 0x8 ] 0x0
call sub_424a9a
mov eax [ ebp - 0x8 ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x38 ]
mov [ ecx + 0x30 ] eax
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x1
pop esi
call sub_4216fe
mov esp ebp
pop ebp
retn
mov edi esi
call sub_41fe20
sub_41e2b0
push esi
push edi
mov edi eax
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov esi [ edi + 0x38 ]
test esi esi
je r-xdata
cmp [ edi + 0x14 ] 0x1
jne r-xdata
cmp [ edi + 0x10 ] 0xffff
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x4 ]
add edx 0x4c
adc eax 0x0
test eax eax
ja r-xdata
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
cmp edx 0xffffffff
ja r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
cmp [ edi + 0x34 ] edi
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ edi + 0x34 ] edi
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
mov [ edi + 0x14 ] 0x2
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
pop edi
mov eax 0x1
pop esi
retn
mov eax [ esi + 0x38 ]
mov [ esi + 0x3c ] eax
mov [ edi + 0x30 ] sub_41e080
jmp r-xdata
mov [ edi + 0x30 ] sub_41e1b0
mov eax [ esi + 0x30 ]
call sub_41ba10
mov [ esi + 0x30 ] eax
test eax eax
jne r-xdata
call sub_41de80
sub_41e360
push ebp
mov ebp esp
push eax
push 0x0
push 0x0
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
call sub_41ea80
add esp 0x14
pop ebp
retn
sub_41e380
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0xc ]
push edi
push ecx
mov ecx [ esi + 0x8 ]
push edx
mov edx [ eax + 0x34 ]
mov eax [ eax + 0x30 ]
push ecx
push edx
call eax
add esp 0x14
cmp eax edi
je r-xdata
mov eax edi
cdq
add [ esi + 0x8 ] eax
pop edi
adc [ esi + 0xc ] edx
add [ esi + 0x10 ] eax
mov eax 0x1
adc [ esi + 0x14 ] edx
pop esi
pop ebp
retn
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_41e3d0
push ebp
mov ebp esp
push ebx
mov ebx ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax ] 0x4034b50
movzx ecx bx
neg ecx
sbb ecx ecx
and ecx 0x14
mov [ eax + 0x4 ] cl
shr ecx 0x8
mov [ eax + 0x5 ] cl
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x6 ] 0x0
mov [ eax + 0x8 ] bl
shr ebx 0x8
mov [ eax + 0x9 ] bl
mov [ eax + 0xa ] cl
shr ecx 0x8
mov [ eax + 0xb ] cl
mov ecx [ ebp + 0x20 ]
mov [ eax + 0xc ] cl
shr ecx 0x8
mov [ eax + 0xd ] cl
mov [ eax + 0xe ] dl
mov ecx edx
shr ecx 0x8
mov [ eax + 0xf ] cl
mov ecx edx
shr ecx 0x10
mov [ eax + 0x10 ] cl
shr edx 0x18
mov [ eax + 0x11 ] dl
mov edx [ ebp + 0x14 ]
mov [ eax + 0x12 ] dl
mov ecx edx
shr ecx 0x8
mov [ eax + 0x13 ] cl
mov ecx edx
shr ecx 0x10
mov [ eax + 0x14 ] cl
shr edx 0x18
mov [ eax + 0x15 ] dl
mov edx [ ebp + 0xc ]
mov ecx edx
shr ecx 0x8
mov [ eax + 0x17 ] cl
mov [ eax + 0x16 ] dl
mov ecx edx
shr ecx 0x10
mov [ eax + 0x18 ] cl
mov ecx [ ebp + 0x8 ]
shr edx 0x18
mov [ eax + 0x19 ] dl
mov [ eax + 0x1a ] cl
shr ecx 0x8
mov [ eax + 0x1b ] cl
mov [ eax + 0x1c ] 0x0
mov eax 0x1
pop ebx
pop ebp
retn
sub_41e4a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x38 ]
push 0x2e
push 0x0
push esi
call sub_4264e0
mov ecx [ ebp + 0x24 ]
mov [ esi ] 0x2014b50
movzx eax cx
add esp 0xc
neg eax
sbb eax eax
and eax 0x14
mov [ esi + 0x6 ] al
shr eax 0x8
mov [ esi + 0x7 ] al
mov eax [ ebp + 0x28 ]
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xa ] cl
shr ecx 0x8
mov [ esi + 0xb ] cl
mov [ esi + 0xc ] al
shr eax 0x8
mov [ esi + 0xd ] al
mov eax [ ebp + 0x2c ]
mov [ esi + 0xe ] al
shr eax 0x8
mov [ esi + 0xf ] al
mov eax [ ebp + 0x20 ]
mov [ esi + 0x10 ] al
mov ecx eax
mov edx eax
shr eax 0x18
mov [ esi + 0x13 ] al
mov eax [ ebp + 0x18 ]
shr ecx 0x8
mov [ esi + 0x11 ] cl
mov ecx eax
shr edx 0x10
mov [ esi + 0x12 ] dl
mov [ esi + 0x14 ] al
mov edx eax
shr eax 0x18
mov [ esi + 0x17 ] al
mov eax [ ebp + 0x10 ]
shr ecx 0x8
mov [ esi + 0x15 ] cl
mov ecx eax
shr edx 0x10
mov [ esi + 0x16 ] dl
mov [ esi + 0x18 ] al
mov edx eax
shr eax 0x18
mov [ esi + 0x1b ] al
mov eax [ ebp + 0x8 ]
shr ecx 0x8
mov [ esi + 0x19 ] cl
shr edx 0x10
mov [ esi + 0x1a ] dl
mov [ esi + 0x1c ] al
shr eax 0x8
mov [ esi + 0x1d ] al
mov eax [ ebp + 0xc ]
mov [ esi + 0x1e ] 0x0
mov [ esi + 0x20 ] al
shr eax 0x8
mov [ esi + 0x21 ] al
mov eax ebx
shr eax 0x8
mov [ esi + 0x27 ] al
mov eax [ ebp + 0x30 ]
mov [ esi + 0x26 ] bl
mov ecx ebx
shr ecx 0x10
shr ebx 0x18
mov edx eax
mov [ esi + 0x28 ] cl
mov [ esi + 0x29 ] bl
shr edx 0x8
mov [ esi + 0x2a ] al
mov [ esi + 0x2b ] dl
mov ecx eax
shr ecx 0x10
shr eax 0x18
mov [ esi + 0x2d ] al
mov [ esi + 0x2c ] cl
mov eax 0x1
pop ebx
pop ebp
retn
sub_41e5b0
push ebp
mov ebp esp
sub esp 0x40
cmp [ ebp + 0x40 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0x38 ]
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jb r-xdata
movzx eax [ ebp + 0x18 ]
movzx ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
cdq
mov [ ebp - 0x4 ] ecx
mov esi eax
mov eax [ ebp - 0x4 ]
mov ecx edx
cdq
add esi eax
adc ecx edx
xor edx edx
add esi ebx
adc ecx edx
add esi 0x2e
adc ecx edx
test ecx ecx
ja r-xdata
cmp [ ebp + 0x3c ] 0xffffffff
ja r-xdata
jb r-xdata
mov eax [ ebp + 0x44 ]
mov ecx [ ebp + 0x40 ]
mov edx [ ebp + 0x3c ]
push eax
mov eax [ ebp + 0x38 ]
push ecx
mov ecx [ ebp + 0x34 ]
push edx
mov edx [ ebp + 0x30 ]
push eax
mov eax [ ebp + 0x2c ]
push ecx
mov ecx [ ebp + 0x28 ]
push edx
mov edx [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
lea esi [ ebp - 0x40 ]
call sub_41e4a0
add esp 0x34
test eax eax
je r-xdata
cmp esi 0xffffffff
ja r-xdata
mov esi [ edi + 0x4 ]
lea ebx [ esi + 0x2e ]
mov [ ebp + 0x40 ] esi
cmp ebx [ edi + 0x8 ]
jbe r-xdata
mov eax [ edi + 0xc ]
mov ecx eax
imul eax esi
add eax [ edi ]
imul ecx ecx 0x2e
push ecx
lea edx [ ebp - 0x40 ]
push edx
push eax
mov [ edi + 0x4 ] ebx
call sub_421710
mov esi [ edi + 0x4 ]
mov ebx [ ebp - 0x4 ]
add ebx esi
add esp 0xc
mov [ ebp + 0x40 ] esi
cmp ebx [ edi + 0x8 ]
jbe r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0xc ]
mov ecx eax
imul eax esi
imul ecx [ ebp - 0x4 ]
add eax [ edi ]
push ecx
push edx
push eax
mov [ edi + 0x4 ] ebx
call sub_421710
mov esi [ edi + 0x4 ]
add esp 0xc
mov [ ebp + 0x40 ] esi
cmp esi [ edi + 0x8 ]
jbe r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
cmp eax ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov ebx [ ebp - 0x8 ]
add ebx esi
mov [ edi + 0x4 ] esi
cmp ebx [ edi + 0x8 ]
jbe r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
cmp eax ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov esi 0x1
cmp eax 0x1
jb r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x14 ]
mov ecx eax
imul eax esi
imul ecx [ ebp - 0x8 ]
add eax [ edi ]
push ecx
push edx
push eax
mov [ edi + 0x4 ] ebx
call sub_421710
mov esi [ edi + 0x14 ]
lea ebx [ esi + 0x1 ]
add esp 0xc
mov [ ebp + 0x40 ] esi
cmp ebx [ edi + 0x18 ]
jbe r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
cmp eax esi
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov esi 0x1
cmp eax 0x1
jb r-xdata
cmp esi ebx
jae r-xdata
mov esi eax
mov eax [ edi + 0x1c ]
push eax
imul eax esi
add eax [ edi + 0x10 ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
mov [ edi + 0x14 ] ebx
call sub_421710
add esp 0xc
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x1c ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
cmp eax ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov esi 0x1
cmp eax 0x1
jb r-xdata
cmp esi ebx
jae r-xdata
mov esi eax
mov ecx [ edi + 0xc ]
mov edx [ edi ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
mov ecx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push ecx
call edx
add esp 0x10
test eax eax
je r-xdata
add esi esi
cmp esi ebx
jb r-xdata
mov eax [ edi + 0x18 ]
cmp eax ebx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov esi 0x1
cmp eax 0x1
jb r-xdata
mov eax [ ebp + 0x40 ]
cmp esi eax
jae r-xdata
mov esi eax
mov ecx [ edi + 0xc ]
mov edx [ edi ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
mov ecx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push ecx
call edx
add esp 0x10
test eax eax
je r-xdata
nop
mov esi [ ebp - 0x10 ]
cmp esi [ edi + 0x8 ]
jbe r-xdata
mov [ edi + 0x8 ] esi
mov esi [ ebp + 0x40 ]
mov [ edi ] eax
mov esi 0x1
cmp eax 0x1
jb r-xdata
cmp esi ebx
jae r-xdata
mov esi eax
mov eax [ edi + 0xc ]
mov ecx [ edi ]
push esi
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x28 ]
mov eax [ eax + 0x24 ]
push ecx
push edx
call eax
add esp 0x10
test eax eax
je r-xdata
mov edi edi
mov [ edi + 0x8 ] esi
mov esi [ ebp + 0x40 ]
mov [ edi ] eax
add esi esi
cmp esi ebx
jb r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0xc ] 0x0
jne r-xdata
cmp esi ebx
jae r-xdata
mov esi eax
mov edx [ edi + 0xc ]
mov eax [ edi ]
push esi
push edx
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov edx [ eax + 0x24 ]
push ecx
call edx
add esp 0x10
test eax eax
je r-xdata
mov edi edi
mov [ edi + 0x8 ] esi
mov esi [ ebp + 0x40 ]
mov [ edi ] eax
add esi esi
cmp esi eax
jb r-xdata
cmp [ edi + 0x8 ] esi
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ edi + 0x1c ]
mov ecx [ edi + 0x10 ]
push esi
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x28 ]
mov eax [ eax + 0x24 ]
push ecx
push edx
call eax
add esp 0x10
test eax eax
je r-xdata
mov edi edi
mov [ edi + 0x8 ] esi
mov esi [ ebp + 0x40 ]
mov [ edi ] eax
add esi esi
cmp esi ebx
jb r-xdata
mov edx [ edi + 0xc ]
mov eax [ edi ]
push esi
push edx
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov edx [ eax + 0x24 ]
push ecx
call edx
add esp 0x10
test eax eax
je r-xdata
mov [ edi + 0x18 ] esi
mov esi [ ebp + 0x40 ]
mov [ edi + 0x10 ] eax
add esi esi
cmp esi ebx
jb r-xdata
mov [ edi ] eax
mov [ edi + 0x8 ] esi
sub_41e970
mov al [ ecx ]
cmp al 0x2f
jne r-xdata
test al al
je r-xdata
xor eax eax
retn
mov eax 0x1
retn
lea ecx [ ecx ]
cmp al 0x3a
je r-xdata
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
cmp al 0x5c
je r-xdata
sub_41e9a0
cmp [ edx + 0x18 ] 0x0
jne r-xdata
mov eax [ edx + 0x18 ]
lea ecx [ eax - 0x1 ]
push esi
mov esi ecx
and esi [ edx ]
sub eax esi
and eax ecx
pop esi
retn
xor eax eax
retn
sub_41e9c0
push ebp
mov ebp esp
mov eax 0x1008
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x1008 ] eax
mov eax 0x1000
cmp edi 0x1000
ja r-xdata
push eax
lea ecx [ ebp - 0x1004 ]
push 0x0
push ecx
call sub_4264e0
add esp 0xc
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0xc ]
lea ecx [ ecx ]
mov eax [ ebp + 0x10 ]
push esi
lea edx [ ebp - 0x1004 ]
push edx
push eax
mov eax [ ebp - 0x1008 ]
mov ecx [ eax + 0x34 ]
mov edx [ eax + 0x30 ]
push ebx
push ecx
call edx
add esp 0x14
cmp eax esi
jne r-xdata
mov esi edi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
add ebx esi
adc [ ebp + 0x10 ] 0x0
sub edi esi
jne r-xdata
mov esi 0x1000
cmp edi 0x1000
ja r-xdata
sub_41ea80
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor esi esi
mov ebx edx
mov edx [ ebx + 0x4 ]
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebx ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x2c ] esi
cmp edi esi
jge r-xdata
mov edx edi
and edx 0xf
mov [ ebp - 0x80 ] edx
je r-xdata
mov edi 0x6
mov [ ebp + 0x18 ] edi
mov [ ebp - 0x60 ] 0x1
mov [ ebp - 0x60 ] esi
test edi 0x400
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x14 ] 0x2
jne r-xdata
mov eax [ ebx + 0x38 ]
mov [ ebp - 0x28 ] eax
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x44 ]
cmp ecx esi
je r-xdata
cmp ecx esi
je r-xdata
cmp [ ebp + 0x14 ] si
je r-xdata
cmp [ ebx + 0x10 ] 0xffff
je r-xdata
cmp [ ebp + 0x10 ] esi
je r-xdata
cmp edx 0xa
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
call sub_41e970
test eax eax
je r-xdata
lea ecx [ ebp - 0x6c ]
push ecx
call sub_425044
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0x6c ]
push edx
push eax
lea edi [ ebp - 0x64 ]
lea esi [ ebp - 0x5c ]
call sub_41bd10
mov eax [ ebp - 0x44 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov [ ebp - 0x40 ] esi
cmp esi 0xffff
ja r-xdata
mov edx ebx
call sub_41e9a0
cmp [ ebx + 0x10 ] 0xffff
mov [ ebp - 0x68 ] eax
je r-xdata
movzx ecx [ ebp + 0x14 ]
xor edi edi
mov eax ecx
cdq
add eax esi
adc edx edi
add eax [ ebp - 0x68 ]
adc edx edi
add eax [ ebx ]
adc edx [ ebx + 0x4 ]
add eax 0x4c
adc edx edi
test edx edx
ja r-xdata
jb r-xdata
test esi esi
je r-xdata
cmp eax 0xffffffff
ja r-xdata
mov edi [ ebp - 0x28 ]
mov eax [ edi + 0x4 ]
add eax ecx
lea esi [ eax + esi + 0x2e ]
mov [ ebp - 0x28 ] esi
cmp esi [ edi + 0x8 ]
jbe r-xdata
mov edx [ ebp - 0x44 ]
cmp [ edx + esi - 0x1 ] 0x2f
jne r-xdata
mov esi [ edi + 0x14 ]
inc esi
mov [ ebp - 0x28 ] esi
cmp esi [ edi + 0x18 ]
jbe r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x70 ] 0x10
cmp [ ebp + 0xc ] edi
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
cmp eax esi
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov esi [ ebp - 0x30 ]
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x68 ]
push esi
add ecx 0x1e
push edi
push ebx
mov [ ebp - 0x28 ] ecx
call sub_41e9c0
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x18 ]
cmp eax esi
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov esi 0x1
cmp eax 0x1
jb r-xdata
mov edx [ ebp - 0x68 ]
add [ ebp - 0x3c ] edx
mov eax 0x0
adc [ ebp - 0x38 ] eax
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x20 ]
push edx
push eax
call ecx
mov eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x1c ]
push 0x4df40
push 0x1
push eax
call ecx
add esp 0xc
mov [ ebp - 0x2c ] eax
test eax eax
je r-xdata
mov esi 0x1
cmp eax 0x1
jb r-xdata
mov eax [ ebp - 0x28 ]
cmp esi eax
jae r-xdata
mov esi eax
add edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x44 ]
mov edx [ ebx + 0x34 ]
adc esi 0x0
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x40 ]
push eax
mov eax [ ebx + 0x30 ]
push ecx
push esi
push edi
push edx
call eax
add esp 0x14
cmp eax [ ebp - 0x40 ]
je r-xdata
dec eax
and eax [ ebp - 0x3c ]
xor ecx ecx
and ecx [ ebp - 0x38 ]
or eax ecx
je r-xdata
mov eax [ ebp - 0x28 ]
cmp esi eax
jae r-xdata
mov esi eax
mov ecx [ edi + 0xc ]
mov edx [ edi ]
mov eax [ ebx + 0x28 ]
push esi
push ecx
mov ecx [ ebx + 0x24 ]
push edx
push eax
call ecx
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
add edi [ ebp - 0x40 ]
mov eax 0x0
adc esi eax
mov eax [ ebp + 0x18 ]
and eax 0x400
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x28 ] eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebx + 0x28 ]
mov eax [ ebx + 0x20 ]
push ecx
push edx
call eax
jmp r-xdata
push 0x10ec
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edx [ edi + 0x1c ]
mov eax [ edi + 0x10 ]
mov ecx [ ebx + 0x28 ]
push esi
push edx
mov edx [ ebx + 0x24 ]
push eax
push ecx
call edx
add esp 0x10
test eax eax
je r-xdata
lea ebx [ ebx ]
mov [ edi ] eax
mov [ edi + 0x8 ] esi
add esi esi
cmp esi eax
jb r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
add esp 0x8
mov [ edi + 0x10 ] eax
mov [ edi + 0x18 ] esi
add esi esi
cmp esi eax
jb r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4c ]
mov ecx [ ebx + 0x34 ]
push edx
mov edx [ ebx + 0x30 ]
push eax
push esi
push edi
push ecx
call edx
add esp 0x14
cmp eax [ ebp + 0xc ]
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4c ]
xor eax eax
call sub_415ca0
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
mov esi [ ebp - 0x7c ]
mov edi [ ebp - 0x78 ]
mov ecx [ ebp - 0x80 ]
xor eax eax
push 0xfffffff1
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x90 ] edi
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] eax
call sub_41b360
mov edx [ ebp - 0x2c ]
mov edi eax
add esp 0x4
lea ecx [ ebp - 0x98 ]
mov eax sub_41e380
call sub_41b080
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
xor edi edi
add [ ebp - 0x34 ] esi
adc [ ebp - 0x30 ] edi
cmp [ ebp - 0x28 ] edi
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x20 ]
push eax
push ecx
call edx
jmp r-xdata
cmp ecx 0x3
jbe r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] eax
ja r-xdata
jb r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x2c ]
mov edi 0x4
call sub_41aef0
mov ebx [ ebp - 0x74 ]
add esp 0x4
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x20 ]
push eax
push ecx
call edx
add esp 0x8
test edi edi
ja r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
ja r-xdata
cmp esi 0xffffffff
ja r-xdata
mov ecx [ ebp - 0x90 ]
mov edx [ ebp - 0x8c ]
mov esi [ ebp - 0x88 ]
mov edi [ ebp - 0x84 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
jb r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push ecx
mov ecx [ ebp - 0x40 ]
push edi
push esi
push edx
mov edx [ ebp - 0x48 ]
push eax
push ecx
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x24 ]
call sub_41e3d0
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x34 ] 0xffffffff
ja r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x3c ]
push 0x1e
lea edx [ ebp - 0x24 ]
push edx
mov edx [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x30 ]
push ecx
push edx
call eax
add esp 0x14
cmp eax 0x1e
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x3c ]
push ecx
mov ecx [ ebp - 0x64 ]
push edx
mov edx [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x50 ]
push ecx
mov ecx [ ebp - 0x48 ]
push edx
mov edx [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edi
push esi
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x40 ]
push ecx
mov ecx [ ebp - 0x44 ]
push edx
push eax
push ecx
push ebx
call sub_41e5b0
add esp 0x40
test eax eax
je r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
pop edi
mov eax 0x1
add [ ebx + 0x10 ] eax
pop esi
mov [ ebx ] edx
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
sub_41f020
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx ]
mov [ ebp - 0x6c ] ecx
xor ecx ecx
push edi
mov edi [ ebx + 0x4 ]
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x58 ] ecx
cmp eax ecx
jge r-xdata
mov edx eax
and edx 0xf
mov [ ebp - 0x60 ] edx
cmp [ ebx + 0x38 ] ecx
je r-xdata
mov eax 0x6
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x14 ] 0x2
jne r-xdata
mov edx [ ebp - 0x6c ]
cmp edx ecx
je r-xdata
cmp [ ebp + 0x10 ] cx
je r-xdata
cmp [ ebp - 0x60 ] 0xa
ja r-xdata
cmp [ ebp + 0xc ] ecx
je r-xdata
test eax 0x400
jne r-xdata
mov ecx edx
call sub_41e970
test eax eax
je r-xdata
mov eax edx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov [ ebp - 0x70 ] eax
cmp eax 0xffff
ja r-xdata
mov edx ebx
call sub_41e9a0
cmp [ ebx + 0x10 ] 0xffff
mov [ ebp - 0x3c ] eax
je r-xdata
movzx eax [ ebp + 0x10 ]
cdq
add eax [ ebp - 0x70 ]
mov ecx 0x0
adc edx ecx
add eax [ ebp - 0x3c ]
adc edx ecx
add eax esi
adc edx edi
add eax 0x4c
adc edx ecx
test edx edx
ja r-xdata
jb r-xdata
mov eax [ ebp - 0x28 ]
push eax
lea edi [ ebp - 0x68 ]
lea esi [ ebp - 0x74 ]
call sub_41bd90
add esp 0x4
test eax eax
je r-xdata
cmp eax 0xffffffff
ja r-xdata
mov ecx [ ebp - 0x28 ]
mov eax r--data
call sub_41b9f0
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_422eb9
push esi
call sub_42439d
push 0x0
push 0x0
mov edi edx
push 0x0
push esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] edi
call sub_422eb9
add esp 0x24
test edi edi
jne r-xdata
push esi
mov eax [ ebp - 0x54 ]
cmp eax 0xffffffff
jbe r-xdata
test edi edi
ja r-xdata
mov edx [ ebp - 0x2c ]
mov edi [ ebp - 0x30 ]
mov ecx [ ebp - 0x3c ]
push edx
add ecx 0x1e
push edi
push ebx
mov [ ebp - 0x34 ] ecx
call sub_41e9c0
add esp 0xc
test eax eax
je r-xdata
jb r-xdata
mov eax [ ebp - 0x3c ]
add [ ebp - 0x4c ] eax
mov eax 0x0
adc [ ebp - 0x48 ] eax
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
mov [ ebp - 0x60 ] 0x0
cmp eax 0x3
ja r-xdata
add edi [ ebp - 0x34 ]
mov esi [ ebp - 0x70 ]
adc [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x2c ]
xor eax eax
push esi
push ecx
mov ecx [ ebx + 0x30 ]
push edx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x34 ]
push edi
push eax
call ecx
add esp 0x14
cmp eax esi
je r-xdata
dec eax
and eax [ ebp - 0x4c ]
xor ecx ecx
and ecx [ ebp - 0x48 ]
or eax ecx
je r-xdata
mov ecx [ ebp - 0x50 ]
add edi esi
mov eax 0x0
adc [ ebp - 0x2c ] eax
mov eax [ ebp - 0x54 ]
mov edx eax
or edx ecx
mov [ ebp - 0x30 ] edi
je r-xdata
mov edx [ ebp - 0x28 ]
push edx
jmp r-xdata
push 0x1173
push r--data
push r--data
call sub_42338b
add esp 0xc
mov edi [ ebp - 0x58 ]
push 0x10000
mov [ ebp - 0x38 ] eax
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebx + 0x1c ]
push 0x1
push eax
call ecx
mov esi eax
add esp 0xc
test esi esi
je r-xdata
call sub_423f5f
add esp 0x4
jb r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
ja r-xdata
cmp [ ebp - 0x5c ] 0xffffffff
ja r-xdata
mov eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x1c ]
push 0x4df40
push 0x1
push eax
mov [ ebp - 0x40 ] 0x0
call ecx
xor ecx ecx
add esp 0xc
mov [ ebp - 0x3c ] eax
cmp eax ecx
je r-xdata
jmp r-xdata
jb r-xdata
mov edx [ ebx + 0x28 ]
mov eax [ ebx + 0x20 ]
push esi
push edx
call eax
mov ecx [ ebp - 0x28 ]
push ecx
call sub_423f5f
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x78 ] ecx
mov ecx [ ebp - 0x60 ]
push 0xfffffff1
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x84 ] edi
mov [ ebp - 0x80 ] edx
call sub_41b360
mov edx [ ebp - 0x3c ]
mov edi eax
add esp 0x4
lea ecx [ ebp - 0x8c ]
mov eax sub_41e380
call sub_41b080
test eax eax
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jb r-xdata
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x5c ]
push edx
mov edx [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x54 ]
push edi
push ecx
mov ecx [ ebp - 0x40 ]
push edx
mov edx [ ebp - 0x44 ]
push eax
push esi
lea eax [ ebp - 0x24 ]
call sub_41e3d0
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x30 ] 0xffffffff
ja r-xdata
cmp [ ebp - 0x34 ] 0x0
ja r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x20 ]
push eax
push ecx
call edx
mov eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x20 ]
push esi
push eax
call ecx
mov edx [ ebp - 0x28 ]
push edx
call sub_423f5f
add esp 0x14
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
ja r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
push 0x1e
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebx + 0x34 ]
push edx
mov edx [ ebx + 0x30 ]
push eax
push ecx
call edx
add esp 0x14
cmp eax 0x1e
jne r-xdata
mov edi 0x10000
jb r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x30 ]
mov eax [ ebx + 0x34 ]
push edi
push esi
push ecx
mov ecx [ ebx + 0x30 ]
push edx
push eax
call ecx
add esp 0x14
cmp eax edi
jne r-xdata
mov edi 0x10000
jmp r-xdata
cmp [ ebp - 0x38 ] 0x10000
jbe r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x68 ]
push 0x0
push eax
mov eax [ ebp - 0x74 ]
push ecx
mov ecx [ ebp - 0x40 ]
push edx
mov edx [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x5c ]
push ecx
mov ecx [ ebp - 0x50 ]
push edx
mov edx [ ebp - 0x54 ]
push edi
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp - 0x6c ]
push eax
push ecx
push esi
push edx
push ebx
call sub_41e5b0
add esp 0x40
test eax eax
je r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebx + 0x28 ]
mov eax [ ebx + 0x20 ]
push ecx
push edx
call eax
add esp 0x8
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov edx edi
mov ecx esi
call sub_415ca0
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x38 ]
sub eax edi
sbb ecx 0x0
mov [ ebp - 0x38 ] eax
or eax ecx
mov [ ebp - 0x34 ] ecx
je r-xdata
mov edi [ ebp - 0x38 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x10000
jae r-xdata
mov eax [ ebp - 0x44 ]
mov edx edi
mov ecx esi
call sub_415ca0
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x44 ] eax
xor eax eax
sub ecx edi
sbb [ ebp - 0x34 ] eax
add [ ebp - 0x30 ] edi
mov [ ebp - 0x38 ] ecx
adc [ ebp - 0x2c ] eax
or ecx [ ebp - 0x34 ]
jne r-xdata
mov eax [ ebp - 0x28 ]
push eax
push edi
push 0x1
push esi
call sub_424f7a
add esp 0x10
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
mov [ ebx ] ecx
mov ecx [ ebp - 0x4 ]
pop edi
mov eax 0x1
add [ ebx + 0x10 ] eax
pop esi
mov [ ebx + 0x4 ] edx
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x78 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x40 ] 0x8
mov edi edx
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x20 ]
push esi
push ecx
call edx
mov eax [ ebp - 0x28 ]
push eax
call sub_423f5f
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov eax 0x4
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
push eax
push edi
push 0x1
push esi
call sub_424f7a
add esp 0x10
cmp eax edi
jne r-xdata
mov edx [ ebp - 0x54 ]
mov edi [ ebp - 0x50 ]
mov [ ebp - 0x5c ] edx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
push ecx
call sub_423f5f
add esp 0x4
test edi edi
ja r-xdata
mov [ ebp - 0x40 ] 0x1
test eax eax
jne r-xdata
push edi
mov edi eax
mov eax [ ebp - 0x3c ]
mov ebx esi
call sub_41aef0
mov ebx [ ebp - 0x64 ]
add esp 0x4
cmp eax 0x1
je r-xdata
mov edx [ ebx + 0x28 ]
mov eax [ ebx + 0x20 ]
push esi
push edx
call eax
mov esi [ ebp - 0x70 ]
add esp 0x8
jmp r-xdata
jmp r-xdata
sub_41f5d0
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
test ebx ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x38 ]
mov [ ebp - 0x34 ] ecx
test ecx ecx
je r-xdata
cmp [ ebx + 0x14 ] 0x2
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp edx [ eax + 0x10 ]
jae r-xdata
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov ecx [ eax + 0x38 ]
mov eax [ ecx + 0x10 ]
mov eax [ eax + edx * 4 ]
add eax [ ecx ]
mov [ ebp - 0x50 ] eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
cmp [ ebx + 0x10 ] 0xffff
push esi
mov [ ebp - 0x2c ] eax
push edi
je r-xdata
mov edx [ ebx ]
lea ecx [ eax - 0x1 ]
and edx ecx
sub eax edx
and eax ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_4216fe
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
xor edx edx
mov ecx esi
add ecx eax
mov eax edi
adc eax edx
add ecx 0x4c
adc eax edx
test eax eax
ja r-xdata
jb r-xdata
mov eax [ ebp - 0x50 ]
mov eax [ eax + 0x2a ]
push 0x1e
xor ecx ecx
lea edx [ ebp - 0x24 ]
push edx
push ecx
push eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x2c ]
mov [ ebp - 0x40 ] ecx
mov ecx [ eax + 0x34 ]
push ecx
call edx
add esp 0x14
cmp eax 0x1e
jne r-xdata
cmp ecx 0xffffffff
ja r-xdata
cmp [ ebp - 0x24 ] 0x4034b50
jne r-xdata
add [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x2c ]
push edi
adc [ ebp - 0x40 ] 0x0
push esi
push ebx
call sub_41e9c0
add esp 0xc
test eax eax
je r-xdata
add esi [ ebp - 0x2c ]
mov eax 0x0
adc edi eax
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] edi
test eax eax
je r-xdata
mov ecx [ ebx + 0x34 ]
mov edx [ ebx + 0x30 ]
push 0x1e
lea eax [ ebp - 0x24 ]
push eax
push edi
push esi
push ecx
call edx
add esp 0x14
cmp eax 0x1e
jne r-xdata
dec eax
xor ecx ecx
and eax esi
and ecx edi
or eax ecx
je r-xdata
movzx ecx [ ebp - 0x8 ]
add esi eax
movzx eax [ ebp - 0xa ]
mov edx 0x0
adc edi edx
add eax ecx
mov ecx [ ebp - 0x50 ]
mov ecx [ ecx + 0x14 ]
add ecx eax
xor eax eax
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
cmp eax edx
ja r-xdata
push 0x1212
push r--data
push r--data
call sub_42338b
add esp 0xc
mov ecx 0x10000
mov [ ebp - 0x38 ] edx
jmp r-xdata
jb r-xdata
mov edx [ ebx + 0x28 ]
mov eax [ ebx + 0x1c ]
push ecx
push 0x1
push edx
call eax
add esp 0xc
mov [ ebp - 0x38 ] eax
test eax eax
je r-xdata
mov ecx 0x10
mov [ ebp - 0x38 ] edx
jmp r-xdata
cmp ecx 0x10000
ja r-xdata
mov ecx [ ebp - 0x30 ]
or ecx [ ebp - 0x2c ]
je r-xdata
cmp eax edx
ja r-xdata
test [ ebp - 0x1e ] 0x8
je r-xdata
lea ebx [ ebx ]
mov [ ebp - 0x38 ] eax
jb r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x20 ]
push eax
push ecx
call edx
add esp 0x8
test edi edi
jne r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x44 ]
push 0x10
push edx
push eax
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x34 ]
mov eax [ eax + 0x2c ]
push ecx
push edx
call eax
mov ecx [ ebp - 0x38 ]
add esp 0x14
cmp eax 0x10
je r-xdata
mov esi [ ebp - 0x30 ]
ja r-xdata
cmp ecx 0x10
jae r-xdata
cmp esi 0xffffffff
ja r-xdata
mov edx [ ebx + 0x30 ]
xor eax eax
cmp [ ecx ] 0x8074b50
sete al
add eax 0x3
add eax eax
add eax eax
push eax
push ecx
mov ecx [ ebx + 0x34 ]
push edi
push esi
push ecx
mov [ ebp - 0x2c ] eax
call edx
add esp 0x14
cmp eax [ ebp - 0x2c ]
je r-xdata
mov edx [ ebx + 0x28 ]
mov eax [ ebx + 0x20 ]
push ecx
push edx
call eax
add esp 0x8
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x38 ]
mov eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x20 ]
push edx
push eax
mov [ ebp - 0x48 ] edi
call ecx
add esp 0x8
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x4c ]
xor eax eax
add [ ebp - 0x44 ] esi
push esi
push ecx
adc [ ebp - 0x40 ] eax
mov eax [ ebx + 0x34 ]
mov ecx [ ebx + 0x30 ]
push edi
push edx
push eax
call ecx
add esp 0x14
cmp eax esi
jne r-xdata
mov esi 0x10000
jmp r-xdata
cmp [ ebp - 0x30 ] 0x10000
jbe r-xdata
mov esi [ ebp - 0x50 ]
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x58 ]
mov ecx 0xb
lea edi [ ebp - 0x88 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx eax
shr ecx 0x8
mov [ ebp - 0x5d ] cl
mov ecx eax
lea edi [ edx + 0x2e ]
mov [ ebp - 0x38 ] edx
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x5e ] al
shr ecx 0x10
shr eax 0x18
mov [ ebp - 0x5c ] cl
mov [ ebp - 0x5b ] al
cmp edi [ edx + 0x8 ]
jbe r-xdata
add esi [ ebp - 0x2c ]
adc edi 0x0
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] edi
mov eax [ ebp - 0x38 ]
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x20 ]
push eax
push ecx
call edx
add esp 0x8
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
add [ ebp - 0x4c ] esi
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
mov eax 0x0
adc edi eax
sub ecx esi
sbb edx eax
mov [ ebp - 0x30 ] ecx
or ecx edx
mov [ ebp - 0x2c ] edx
jne r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x44 ]
push esi
push edx
push eax
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x34 ]
mov eax [ eax + 0x2c ]
push ecx
push edx
call eax
add esp 0x14
cmp eax esi
jne r-xdata
mov esi [ ebp - 0x34 ]
mov eax [ esi + 0xc ]
mov ecx eax
imul eax [ ebp - 0x38 ]
add eax [ esi ]
imul ecx ecx 0x2e
push ecx
lea edx [ ebp - 0x88 ]
push edx
push eax
mov [ esi + 0x4 ] edi
call sub_421710
mov eax [ ebp - 0x50 ]
movzx edi [ eax + 0x20 ]
movzx ecx [ eax + 0x1e ]
movzx edx [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
add edi ecx
add edi edx
mov [ ebp - 0x34 ] eax
add eax edi
add esp 0xc
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
cmp eax [ esi + 0x8 ]
jbe r-xdata
mov eax edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jb r-xdata
mov esi [ ebp - 0x4c ]
mov [ ebp - 0x48 ] edi
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0x28 ]
mov edx eax
imul eax [ ebp - 0x34 ]
add eax [ esi ]
imul edx edi
mov [ esi + 0x4 ] ecx
mov ecx [ ebp - 0x50 ]
push edx
add ecx 0x2e
push ecx
push eax
call sub_421710
add esp 0xc
cmp [ esi + 0x4 ] 0xffffffff
ja r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov esi [ ecx + 0x8 ]
cmp esi edi
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ ebp - 0x38 ]
mov edi [ esi + 0x14 ]
mov [ ebp - 0x2c ] eax
lea eax [ edi + 0x1 ]
mov [ ebp - 0x28 ] edi
cmp eax [ esi + 0x18 ]
jbe r-xdata
mov ecx [ esi + 0x8 ]
cmp ecx eax
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
mov eax [ ebp - 0x28 ]
add esp 0xc
cmp esi 0x1
jae r-xdata
lea eax [ edi + 0x1 ]
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x1c ]
push eax
imul eax edi
add eax [ esi + 0x10 ]
lea edx [ ebp - 0x2c ]
push edx
push eax
call sub_421710
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x48 ]
add esp 0xc
mov eax 0x1
add [ ebx + 0x10 ] eax
pop edi
mov [ ebx ] ecx
mov [ ebx + 0x4 ] edx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov edi 0x1
cmp ecx 0x1
jb r-xdata
cmp esi edi
jae r-xdata
mov esi 0x1
mov eax [ esi + 0x18 ]
lea ecx [ edi + 0x1 ]
cmp eax ecx
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
mov eax [ ebp - 0x28 ]
cmp edi eax
jae r-xdata
mov edi ecx
mov eax ecx
mov edx [ eax + 0xc ]
mov eax [ eax ]
mov ecx [ ebx + 0x28 ]
push esi
push edx
mov edx [ ebx + 0x24 ]
push eax
push ecx
call edx
add esp 0x10
test eax eax
je r-xdata
lea ebx [ ebx ]
mov edi 0x1
cmp eax 0x1
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi ]
mov edx [ ebx + 0x28 ]
push edi
push eax
mov eax [ ebx + 0x24 ]
push ecx
push edx
call eax
add esp 0x10
test eax eax
je r-xdata
add edi edi
cmp edi eax
jb r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ecx ] eax
mov [ ecx + 0x8 ] esi
add esi esi
cmp esi edi
jb r-xdata
mov eax [ ebp - 0x28 ]
inc eax
cmp edi eax
jae r-xdata
mov edi eax
mov edi [ ebp - 0x38 ]
cmp edi [ esi + 0x8 ]
jbe r-xdata
mov [ esi + 0x8 ] edi
mov edi [ ebp - 0x2c ]
mov [ esi ] eax
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x28 ]
push edi
push ecx
mov ecx [ ebx + 0x24 ]
push edx
push eax
call ecx
add esp 0x10
test eax eax
je r-xdata
lea esp [ esp ]
mov [ esi + 0x4 ] edi
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ ebp - 0x38 ]
cmp edi [ esi + 0x8 ]
jbe r-xdata
mov [ esi + 0x18 ] edi
mov edi [ ebp - 0x28 ]
mov [ esi + 0x10 ] eax
add edi edi
cmp edi eax
jb r-xdata
cmp [ esi + 0x8 ] edi
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi ]
mov ecx [ ebx + 0x28 ]
push edi
push edx
mov edx [ ebx + 0x24 ]
push eax
push ecx
call edx
jmp r-xdata
cmp [ esi + 0x8 ] edi
jae r-xdata
push 0xbb6
push r--data
push r--data
call sub_42338b
add esp 0xc
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi ]
mov edx [ ebx + 0x28 ]
push edi
push eax
mov eax [ ebx + 0x24 ]
push ecx
push edx
call eax
mov [ esi ] eax
mov [ esi + 0x8 ] edi
sub_41fc10
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
xor edi edi
cmp esi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_4216fe
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x38 ]
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
cmp [ esi + 0x14 ] 0x2
jne r-xdata
cmp [ esi + 0x10 ] 0xffff
ja r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
add ecx edx
adc eax edi
add ecx 0x16
adc eax edi
cmp eax edi
ja r-xdata
jb r-xdata
push ebx
xor ecx ecx
xor ebx ebx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x2c ] edi
cmp [ esi + 0x10 ] ecx
je r-xdata
cmp ecx 0xffffffff
ja r-xdata
movzx edi [ esi + 0x10 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] ax
mov eax edi
mov [ ebp - 0x14 ] al
shr eax 0x8
mov [ ebp - 0x13 ] al
mov eax edi
mov [ ebp - 0x12 ] al
shr eax 0x8
mov [ ebp - 0x11 ] al
mov edx ebx
shr edx 0x8
mov eax ebx
shr eax 0x10
mov [ ebp - 0xf ] dl
mov [ ebp - 0xe ] al
mov edx ecx
mov eax ecx
mov [ ebp - 0xc ] cl
shr ecx 0x18
shr edx 0x8
mov [ ebp - 0x9 ] cl
push 0x16
mov [ ebp - 0xb ] dl
mov edx [ esi + 0x4 ]
shr eax 0x10
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ esi + 0x34 ]
push edx
mov edx [ esi + 0x30 ]
mov [ ebp - 0xa ] al
mov eax [ esi ]
mov [ ebp - 0x10 ] bl
push eax
shr ebx 0x18
push ecx
mov [ ebp - 0x1c ] 0x6054b50
mov [ ebp - 0xd ] bl
call edx
add esp 0x14
cmp eax 0x16
jne r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov ebx edx
mov edx [ ebp - 0x20 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
mov edx [ edx ]
push ebx
push edx
push ecx
mov ecx [ esi + 0x30 ]
push eax
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0x34 ]
push eax
call ecx
add esp 0x14
xor ecx ecx
cmp eax ebx
jne r-xdata
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
cmp ecx edi
jne r-xdata
add [ esi ] 0x16
pop ebx
mov [ esi + 0x14 ] 0x3
adc [ esi + 0x4 ] 0x0
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
push eax
call sub_4230c2
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
add [ esi ] ebx
mov ecx [ ebp - 0x28 ]
adc [ esi + 0x4 ] edi
sub_41fdb0
push ebp
mov ebp esp
push esi
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x38 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
cmp [ esi + 0x30 ] sub_41e080
jne r-xdata
call sub_41fc10
test eax eax
je r-xdata
mov eax [ esi + 0x38 ]
mov ecx [ eax + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ esi + 0x38 ]
mov ecx [ eax + 0x38 ]
mov [ ebx ] ecx
mov edx [ esi + 0x38 ]
mov [ edx + 0x34 ] 0x0
mov eax [ esi + 0x38 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ esi + 0x38 ]
mov [ ecx + 0x38 ] 0x0
mov eax 0x1
pop esi
pop ebp
retn
sub_41fe20
push ebx
xor ebx ebx
push esi
cmp edi ebx
je r-xdata
pop esi
xor eax eax
pop ebx
retn
mov esi [ edi + 0x38 ]
cmp esi ebx
je r-xdata
cmp [ edi + 0x1c ] ebx
je r-xdata
mov eax [ edi + 0x20 ]
cmp eax ebx
je r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x2
je r-xdata
mov edx [ edi + 0x28 ]
mov [ edi + 0x38 ] ebx
mov ecx [ esi ]
push ecx
push edx
call eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov ecx [ edi + 0x28 ]
mov edx [ edi + 0x20 ]
push eax
push ecx
call edx
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov eax [ esi + 0x20 ]
mov ecx [ edi + 0x28 ]
mov edx [ edi + 0x20 ]
push eax
push ecx
call edx
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x30 ]
add esp 0x18
cmp eax ebx
je r-xdata
cmp ecx 0x3
jne r-xdata
cmp [ edi + 0x30 ] sub_41e080
jne r-xdata
push eax
call sub_423f5f
add esp 0x4
mov [ esi + 0x30 ] ebx
mov edx [ edi + 0x28 ]
mov eax [ edi + 0x20 ]
push esi
push edx
call eax
add esp 0x8
pop esi
mov [ edi + 0x14 ] ebx
mov eax 0x1
pop ebx
retn
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
mov ecx [ edi + 0x20 ]
push eax
mov eax [ edi + 0x28 ]
push eax
call ecx
add esp 0x8
mov [ esi + 0x34 ] ebx
sub_41ff00
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x40
mov esi edx
lea edx [ ebp - 0x80 ]
push 0x0
push edx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] 0x0
call sub_4264e0
add esp 0xc
test esi esi
jns r-xdata
mov edx [ ebp - 0x38 ]
test edx edx
je r-xdata
mov esi 0x6
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax esi
and eax 0xf
cmp al 0xa
ja r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov ecx edi
call sub_41e970
test eax eax
je r-xdata
lea ecx [ ebp - 0x34 ]
push ecx
push edx
call sub_425286
add esp 0x8
lea ecx [ ebp - 0x80 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x38 ]
mov edx esi
or edx 0x800
push edx
call sub_41c8f0
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebp - 0x38 ]
call sub_41e220
test eax eax
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ ebp - 0x80 ]
call sub_41e2b0
test eax eax
jne r-xdata
mov [ ebp - 0x3c ] 0x1
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x14 ]
push esi
push eax
push ecx
push edx
push edi
mov ecx ebx
lea edx [ ebp - 0x80 ]
call sub_41ea80
add esp 0x14
lea esi [ ebp - 0x80 ]
mov ebx eax
call sub_41fc10
test eax eax
jne r-xdata
lea edi [ ebp - 0x80 ]
call sub_41de80
lea edi [ ebp - 0x80 ]
call sub_41fe20
test eax eax
jne r-xdata
xor ebx ebx
test ebx ebx
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_42498c
add esp 0x4
sub_420070
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov esi eax
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ edi ] ebx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0x40
lea eax [ ebp - 0x40 ]
push 0x0
push eax
call sub_4264e0
mov eax [ ebp + 0x8 ]
mov ecx esi
or ecx 0x800
push ecx
lea ecx [ ebp - 0x40 ]
call sub_41c8f0
add esp 0x10
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
push esi
push edx
lea edx [ ebp - 0x40 ]
call sub_41ce50
add esp 0x8
test eax eax
js r-xdata
lea edi [ ebp - 0x40 ]
call sub_41de80
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
push eax
lea esi [ ebp - 0x40 ]
call sub_41d590
add esp 0xc
mov ebx eax
sub_420100
push ebp
mov ebp esp
push ecx
push esi
lea esi [ eax - 0x4 ]
push edi
mov edi ecx
mov eax [ edi + esi ]
push esi
mov [ ebx ] eax
call sub_423fd3
push esi
push edi
push eax
mov [ ebp - 0x4 ] eax
call sub_421710
mov ecx [ ebx ]
push ecx
call sub_423fd3
mov edx [ ebp + 0x8 ]
push edi
mov [ edx ] eax
push eax
mov eax esi
lea edi [ ebp + 0x8 ]
call sub_4163e0
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
mov [ ebx ] eax
call sub_423b7f
add esp 0x20
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_420160
push ebp
mov ebp esp
sub esp 0x8
push edi
push esi
mov edi eax
call sub_423fd3
push esi
push edi
push eax
mov [ ebp - 0x8 ] eax
call sub_421710
mov eax esi
shr eax 0x1
lea eax [ eax + esi + 0x4 ]
push eax
mov [ ebx ] eax
call sub_423fd3
mov ecx [ ebp + 0x8 ]
push edi
mov [ ecx ] eax
push eax
mov eax esi
lea edi [ ebp - 0x4 ]
call sub_415fb0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ebx ] eax
mov ecx [ edx ]
mov edx [ ebp - 0x8 ]
mov [ eax + ecx ] esi
add [ ebx ] 0x4
push edx
call sub_423b7f
add esp 0x20
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_420265
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_425c2c
mov esi [ eax + 0x8 ]
call sub_425be0
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_4213c5
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_425bc4
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_42571f
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_42032e
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_420374
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_4203a9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_420374
leave
retn 0x8
sub_4203ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_420467
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_420489
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_4204ab
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_4204cd
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_4262e6
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_406a90
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_4204f0
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_4262e6
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_406a90
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_420520
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_420547
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_420520
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_423b7f
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_423b7f
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_42058b
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x2
lea ecx [ ebp - 0x4 ]
call sub_420df3
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ eax + 0x8 ]
mov [ ecx * 4 + rw-data ] eax
mov eax [ eax + 0x8 ]
inc [ eax + rw-data ]
lea ecx [ ebp - 0x4 ]
call sub_420e1b
leave
retn
cmp ecx eax
je r-xdata
mov ecx [ eax + 0x8 ]
inc ecx
mov [ eax + 0x8 ] ecx
cmp ecx 0x8
jb r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
test ecx ecx
je r-xdata
sub_4205e0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_420547
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_402e30
push esi
call sub_423b7f
pop ecx
sub_420630
mov edx [ rw-data ]
push esi
mov esi rw-data
mov eax ecx
mov [ rw-data ] esi
test edx edx
je r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + edx + 0x3c ] esi
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov esi [ rw-data ]
mov [ ecx + edx + 0x3c ] esi
pop esi
retn
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov esi [ rw-data ]
mov [ ecx + edx + 0x3c ] esi
sub_4206c5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4206b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_4206e6
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_423fd3
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_420710
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_402d00
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_420731
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_420df3
push rw-data
call sub_420710
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_420e1b
leave
retn
sub_420763
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_420731
mov [ rw-data ] 0x1
call sub_421626
pop ecx
sub_42078d
push 0x4
mov eax sub_453c28
call sub_4261b4
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_420df3
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_4229cf
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_420e1b
call sub_42628c
retn
mov ecx [ eax ]
call sub_402d00
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_4207ff
push 0x4
mov eax sub_453c4b
call sub_4261b4
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_420df3
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_4206b0
push esi
call sub_423b7f
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_420e1b
call sub_42628c
retn
sub_42084d
push 0x4
mov eax sub_453c6e
call sub_4261b4
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_420df3
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_4206b0
push esi
call sub_423b7f
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_420e1b
call sub_42628c
retn
sub_42089b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_42733e
pop ecx
pop ecx
sub_4208b6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
and [ esi ] 0x0
test edi edi
je r-xdata
push eax
call sub_4229cf
pop ecx
cmp [ edi ] 0x0
mov eax edi
je r-xdata
sub eax edi
push ebx
lea ebx [ eax + 0x1 ]
push ebx
call sub_421e20
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
pop ebx
push ebx
push edi
push eax
call sub_421710
add esp 0xc
sub_42090e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_42733e
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_4208b6
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_42733e
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_4208b6
pop esi
pop ebp
retn
sub_42095b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_4208b6
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420979
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_4208b6
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4209b8
push 0x4
mov eax sub_453c9c
call sub_4261b4
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_42078d
mov eax [ esi + 0x18 ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
call sub_42628c
retn
push eax
call sub_4229cf
pop ecx
sub_4209fb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4209b8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_420a1c
push 0x4
mov eax sub_453cbf
call sub_4261b4
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_42628c
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_420df3
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_420e1b
push 0x20
call sub_423fd3
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_420763
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_4208b6
mov ecx esi
mov [ rw-data ] esi
call sub_402cc0
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_420979
mov esi eax
sub_420ab6
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_420a1c
push 0x20
call sub_423fd3
pop ecx
test eax eax
je r-xdata
xor eax eax
push 0x1
mov ecx eax
call sub_420979
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn
sub_420ae7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4223bd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420b10
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4223bd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420b39
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4223bd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420b5d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4223bd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420b86
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4223bd
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_425ceb
int3
sub_420bb6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4223bd
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_425ceb
int3
sub_420c03
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4223bd
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_425ceb
int3
sub_420c33
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4223bd
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_425ceb
int3
sub_420c63
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4223bd
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_425ceb
int3
sub_420c93
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_422419
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_420cb4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_422419
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_420cd5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_422419
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_420d30
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_4216be
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_420d61
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_4216ce
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_420d8a
push rw-data
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_4216be
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_420db3
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_4216ce
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_420df3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_4216de
pop ecx
sub_420e3e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and eax 0x3
mov [ ecx ] eax
imul eax eax 0x18
add eax rw-data
push eax
call sub_4216de
pop ecx
pop ebp
retn
sub_420eb2
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_423fd3
push eax
mov [ esi ] eax
call sub_4216be
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_420ef5
mov edi edi
push ebp
mov ebp esp
push 0x18
call sub_423fd3
mov ecx [ ebp + 0x8 ]
push eax
mov [ ecx ] eax
call sub_4216be
pop ecx
pop ecx
pop ebp
retn
sub_420f10
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_4216ce
push [ esi ]
call sub_423b7f
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_420f93
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor eax eax
mov ebx ecx
mov edx ecx
and ebx 0x4
and edx 0x80
inc eax
push esi
test cl 0x40
je r-xdata
test cl 0x8
je r-xdata
or ecx eax
and ecx 0xffffff3b
xor esi esi
or ecx 0x2
cmp [ esi * 4 + r--data ] 0x0
jne r-xdata
mov eax [ esi * 4 + r--data ]
inc esi
test eax eax
jne r-xdata
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
cmp eax ecx
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_420f55
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test cl 0xa
je r-xdata
pop esi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x8 ]
call sub_420f55
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_428880
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_423f5f
pop ecx
jmp r-xdata
sub_42103b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor eax eax
mov ebx ecx
mov edx ecx
and ebx 0x4
and edx 0x80
inc eax
push esi
test cl 0x40
je r-xdata
test cl 0x8
je r-xdata
or ecx eax
and ecx 0xffffff3b
xor esi esi
or ecx 0x2
cmp [ esi * 4 + r--data ] 0x0
jne r-xdata
mov eax [ esi * 4 + r--data ]
inc esi
test eax eax
jne r-xdata
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
cmp eax ecx
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_420f74
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test cl 0xa
je r-xdata
pop esi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x8 ]
call sub_420f74
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_428880
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_423f5f
pop ecx
jmp r-xdata
sub_421104
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_425c2c
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_425be0
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_428c1b
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_428d1b
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_428bcf
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_421211
mov edi edi
push ebp
mov ebp esp
push esi
call sub_425c2c
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_425be0
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_429301
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_428c1b
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_428c1b
push eax
push [ esi + 0x8 ]
call sub_421710
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_421271
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_425c2c
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_425be0
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_428c1b
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_428d9a
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_428bcf
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_421383
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_429633
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_42723e
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_4216fe
leave
retn
sub_4213c5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_4292bc
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_421383
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_426613
push esi
call sub_4229cf
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_4229cf
pop ecx
mov [ esi + 0x4 ] ebx
sub_421462
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_426613
push esi
call sub_4229cf
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4214b3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_425c2c
mov esi [ eax + 0x8 ]
call sub_425be0
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_4213c5
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_425bc4
pop ecx
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_428c1b
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_425bc4
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_425bc4
pop ecx
cmp eax 0x1
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_42571f
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_425bc4
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_425bc4
pop ecx
jmp r-xdata
jmp r-xdata
sub_421626
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_429652
sub_421683
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x2
pop edi
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
pop ebp
retn
push 0x1
push esi
call [ InterlockedExchange@IAT ]
test eax eax
jne r-xdata
cmp eax edi
jne r-xdata
call [ ebp + 0xc ]
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
sub_421710
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_421794 ]
jmp [ ecx * 4 + jump_table_421814 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421880 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_421a1c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_421920 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421a1c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_421880 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_421a1c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421880 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421880 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421880 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421a1c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421a1c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421a1c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_421a80
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_421b04 ]
jmp [ ecx * 4 + jump_table_421b84 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421bf0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_421d8c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_421c90 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421d8c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_421bf0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_421d8c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421bf0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421bf0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421bf0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421d8c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421d8c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421d8c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_421de1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_429dfc
push 0x1e
call sub_429c4d
push 0xff
call sub_4298ea
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_421e20
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_429ec9
pop ecx
call sub_42571f
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_429dfc
push 0x1e
call sub_429c4d
push 0xff
call sub_4298ea
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_42571f
mov [ eax ] esi
push ebx
call sub_429ec9
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_42571f
mov [ eax ] esi
sub_421f62
push 0x58
push r--data
call sub_42ad20
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_429e35
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_42a2a1
test eax eax
jne r-xdata
push 0x1c
call sub_421ef2
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_42acca
mov [ ebp - 0x4 ] esi
call sub_42aa32
test eax eax
jns r-xdata
push 0x10
call sub_421ef2
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_42a99b
mov [ rw-data ] eax
call sub_42a8e0
test eax eax
jns r-xdata
push 0x1b
call sub_429c09
call sub_42a65b
test eax eax
jns r-xdata
push 0x8
call sub_429c09
push 0x1
call sub_4299e8
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_429c09
call sub_42a5fc
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_429c09
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_429beb
jmp sub_4220bf
push eax
call sub_429bbf
push ecx
push eax
push esi
push __dos_header
call sub_4023b6
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_4220d9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_421a80
add esp 0xc
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_42212c
push 0xc
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_42b35f
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_42ad65
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422220
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_42b1fb
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_422228
push 0xc
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_42b35f
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_42ad65
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42231c
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_42b1fb
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_42235f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_425c60
lea esi [ eax + 0x1 ]
push esi
call sub_421e20
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_42b385
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_4223bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_42235f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4223e4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_42239f
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_42235f
jmp r-xdata
sub_422424
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4223bd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42244d
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4223bd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42249e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_42239f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_4224c5
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_4223e4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4224ea
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_42239f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_42252e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_42239f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_422572
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_42239f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_4225b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_4264e0
mov eax [ ebp + 0xc ]
add esp 0xc
test eax eax
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
jg r-xdata
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x0
push 0x1e13380
push eax
push ecx
call sub_42b430
lea ecx [ eax + 0x46 ]
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_42b3f0
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_42b3f0
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_42b430
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_42b3f0
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_42b430
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_42b430
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_42b3f0
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_42b430
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi ] edi
pop edi
mov [ esi + 0x20 ] ebx
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_4227ef
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42b61a
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_4225b6
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_422816
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_42b76d
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42b1fb
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_4228b6
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c5fe
add esp 0x14
pop ebp
retn
sub_4228d4
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c5fe
add esp 0x14
pop ebp
retn
sub_4228f3
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c692
add esp 0x18
pop ebp
retn
sub_422914
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x1c ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c692
add esp 0x18
pop ebp
retn
sub_422936
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c7c7
add esp 0x14
pop ebp
retn
sub_422954
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c7c7
add esp 0x14
pop ebp
retn
sub_4229cf
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_42571f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4256dd
pop ecx
mov [ esi ] eax
pop esi
sub_422a0f
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_429301
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_429301
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_422ae0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_42ca1f
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_422b21
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_42ca1f
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_422b53
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_42c92e
pop ecx
pop ebp
retn
sub_422b8f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_42c92e
pop ecx
pop ebp
retn
sub_422bbe
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_42b35f
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_42ca52
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_422ca1
push 0xc
push r--data
call sub_42ad20
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422bbe
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422d00
mov eax [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
call sub_42ad65
retn
sub_422d0a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
push [ ebp + 0x8 ]
call sub_42439d
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
sub_422d70
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_422e1d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_42571f
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_422f38
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_424053
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42b35f
pop ecx
push eax
call sub_42cb20
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_422eb9
push 0xc
push r--data
call sub_42ad20
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422e1d
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422f2e
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_42ad65
retn
cmp esi 0x2
jne r-xdata
sub_422f38
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_42b35f
pop ecx
push eax
call sub_42d307
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_422fa0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_422f38
pop ecx
test eax eax
je r-xdata
push esi
call sub_422fe8
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_42b35f
push eax
call sub_42d3db
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_422fe8
push 0x14
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4230b9
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_42ad65
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_422b21
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_42308a
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_422fa0
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_422fa0
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_4230c2
push 0xc
push r--data
call sub_42ad20
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_422fa0
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42310b
mov eax [ ebp - 0x1c ]
push esi
call sub_422fe8
pop ecx
jmp r-xdata
call sub_42ad65
retn
sub_42311e
push 0xc
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_42b35f
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_42ad65
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42320a
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_42d4b4
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_423212
push 0xc
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_42b35f
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_42ad65
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4232fe
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_42d4b4
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_423306
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_42d4b4
pop ecx
pop ebp
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
pop ebp
retn
sub_42334c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42b146
sub_42336d
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42da2e
add esp 0x14
pop ebp
retn
sub_42338b
mov edi edi
push ebp
mov ebp esp
sub esp 0x658
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x654 ] eax
mov eax [ ebp + 0xc ]
push edi
push 0x3
mov [ ebp - 0x64c ] eax
call sub_42e8f9
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
xor edi edi
mov esi rw-data
cmp ebx 0xffffffff
je r-xdata
push 0x3
call sub_42e8f9
pop ecx
test eax eax
jne r-xdata
call sub_422a09
test [ eax + 0x4c ] 0x10c
jne r-xdata
cmp ebx edi
je r-xdata
push r--data
mov esi 0x21c
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e896
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x64c ]
push [ ebp - 0x654 ]
push esi
call sub_422a09
add eax 0x40
push eax
call sub_42dc51
call sub_422a09
add eax 0x40
push eax
call sub_4230c2
add esp 0x18
push edi
push 0x4
push edi
call sub_422a09
add eax 0x40
push eax
call sub_423a2b
add esp 0x10
push [ ebp + 0x10 ]
lea eax [ ebp - 0x43c ]
push [ ebp - 0x64c ]
push [ ebp - 0x654 ]
push esi
push 0x21c
push eax
call sub_42336d
add esp 0x18
test eax eax
js r-xdata
xor edi edi
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push ebx
call [ GetFileType@IAT ]
cmp eax 0x2
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_42b146
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
xor edi edi
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0x658 ]
push eax
lea eax [ ebp - 0x43c ]
push eax
call sub_42e806
pop ecx
push eax
lea eax [ ebp - 0x43c ]
push eax
push ebx
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
push ebx
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
push eax
call sub_42e806
lea ebx [ ebp + eax * 2 - 0x6aa ]
lea ecx [ ebp - 0x648 ]
mov eax ebx
sub eax ecx
push 0x3
push [ rw-data ]
sar eax 0x1
mov ecx 0x105
sub ecx eax
push ecx
push ebx
call sub_42e739
add esp 0x14
test eax eax
jne r-xdata
mov [ ebp - 0x440 ] ax
push 0x104
lea eax [ ebp - 0x648 ]
push eax
push edi
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
call sub_429652
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
lea ebx [ ebp - 0x648 ]
mov eax ebx
push eax
call sub_42e806
add eax 0xb
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
lea eax [ ebp - 0x648 ]
push 0x105
push eax
call sub_42e896
add esp 0xc
test eax eax
je r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push [ ebp - 0x64c ]
call sub_42e806
add eax 0x8
pop ecx
push [ ebp - 0x64c ]
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
call sub_42e806
mov edx [ ebp - 0x64c ]
mov ebx eax
movzx eax [ edx + ebx * 2 - 0x2 ]
pop ecx
mov [ ebp - 0x650 ] 0x1
cmp eax 0x5c
je r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax [ ebp - 0x650 ]
mov [ ebp - 0x658 ] eax
cmp eax 0x23
jbe r-xdata
mov ecx eax
lea eax [ edx + ebx * 2 - 0x2 ]
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
jae r-xdata
cmp [ ebp - 0x650 ] 0x11
jae r-xdata
cmp [ ebp - 0x650 ] ebx
jae r-xdata
lea eax [ ebp - 0x43c ]
push 0xa
push eax
call sub_42e806
pop ecx
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0x43c ]
push eax
call sub_42e806
pop ecx
lea eax [ ebp + eax * 2 - 0x43c ]
push eax
push [ ebp + 0x10 ]
call sub_42e4a5
add esp 0x10
test eax eax
jne r-xdata
push 0x20
push [ ebp - 0x64c ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e663
add esp 0x10
test eax eax
jne r-xdata
shr [ ebp - 0x650 ] 0x1
push 0x31
pop eax
sub eax [ ebp - 0x650 ]
push eax
push [ ebp - 0x64c ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e663
add esp 0x10
test eax eax
jne r-xdata
cmp eax 0x23
push 0x31
pop eax
sub eax [ ebp - 0x650 ]
push eax
push [ ebp - 0x64c ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e663
add esp 0x10
test eax eax
jne r-xdata
inc [ ebp - 0x650 ]
sub eax 0x2
movzx edx [ eax ]
mov ecx edx
cmp edx 0x5c
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
cmp cx 0x2f
je r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x658 ]
mov eax [ ebp - 0x64c ]
push 0x7
lea eax [ eax + ecx * 2 ]
push eax
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e663
add esp 0x10
test eax eax
jne r-xdata
sub ebx [ ebp - 0x650 ]
mov eax [ ebp - 0x64c ]
lea eax [ eax + ebx * 2 ]
jmp r-xdata
mov eax [ ebp - 0x64c ]
mov ecx [ ebp - 0x658 ]
lea eax [ eax + ecx * 2 ]
push [ ebp - 0x654 ]
call sub_42e806
mov ebx eax
lea eax [ ebp - 0x43c ]
push eax
call sub_42e806
lea eax [ ebx + eax + 0xb0 ]
pop ecx
cmp eax esi
pop ecx
lea eax [ ebp - 0x43c ]
jbe r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push eax
push [ ebp - 0x654 ]
jmp r-xdata
push eax
call sub_42e806
mov ecx 0x169
sub ecx eax
push ecx
push [ ebp - 0x654 ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e663
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x64c ]
lea eax [ eax + ebx * 2 - 0xe ]
jmp r-xdata
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push 0x12012
lea eax [ ebp - 0x43c ]
push r--data
push eax
call sub_42e25a
add esp 0xc
cmp eax 0x3
jne r-xdata
cmp eax 0x4
jne r-xdata
push 0x16
call sub_42e0b7
pop ecx
push 0x3
call sub_429bd5
cmp eax 0x5
jne r-xdata
int3
call sub_429652
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
sub_4239f0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_422eb9
add esp 0x10
pop ebp
retn
sub_423a2b
push 0xc
push r--data
call sub_42ad20
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x4
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_42ad65
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp ebx 0x40
jne r-xdata
cmp ebx 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_422f38
push esi
call sub_42e947
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test bl 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_4292bc
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423b17
mov eax [ ebp - 0x1c ]
sub_423b4b
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax esi
pop esi
pop ebp
retn
sub_423b8a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4264e0
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_421710
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_423bff
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_42b1fb
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_422f38
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_42b35f
pop ecx
push eax
call sub_42d307
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_421710
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_423d56
push 0xc
push r--data
call sub_42ad20
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423bff
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423dc6
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
call sub_42ad65
retn
sub_423dd0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_423e3a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_423e2a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_423e79
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_42eea0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_423e99
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_42eea0
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_423eba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_42eea0
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_423ef2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_422f38
push esi
mov edi eax
call sub_42e947
push esi
call sub_42b35f
push eax
call sub_42efc4
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_4229cf
and [ esi + 0x1c ] 0x0
pop ecx
sub_423f5f
push 0xc
push r--data
call sub_42ad20
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
push esi
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_423ef2
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423fcb
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_42ad65
retn
mov eax [ ebp - 0x1c ]
sub_423fd3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_421e20
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_429ec9
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_4224c5
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_425ceb
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_422335
push sub_456621
mov [ rw-data ] esi
call sub_4264c6
pop ecx
sub_424053
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42b35f
mov ebx eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] ebx
cmp [ esi + 0x4 ] eax
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_42cb20
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0xc ]
mov edi ecx
sub edi [ esi + 0x8 ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_42cb20
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add esp 0x10
mov edi edx
cmp esi [ eax + ebx + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
test [ eax + 0x4 ] 0x80
lea edi [ edx + ecx ]
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + ebx + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_42cb20
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_42cb20
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_42cb20
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_42439d
push 0x10
push r--data
call sub_42ad20
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_424053
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424400
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_42ad65
retn
sub_42440a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x44 ] ebx
cmp edi ebx
jne r-xdata
mov eax [ edi + 0x14 ]
cdq
mov ecx eax
mov eax edx
mov [ ebp - 0x30 ] ecx
add ecx 0xffffffbb
mov [ ebp - 0x2c ] eax
adc eax 0xffffffff
push esi
cmp eax ebx
ja r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_42571f
or edx 0xffffffff
mov [ eax ] 0x16
mov eax edx
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov eax [ edi + 0x10 ]
cmp eax ebx
jl r-xdata
cmp ecx 0x408
ja r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov ecx edx
cdq
add [ ebp - 0x30 ] eax
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x2c ] edx
cmp ecx ebx
jge r-xdata
cmp eax 0xb
jle r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
add ecx 0xffffffbb
adc eax 0xffffffff
cmp eax ebx
ja r-xdata
add ecx 0xc
add [ ebp - 0x30 ] 0xffffffff
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x2c ] 0xffffffff
mov esi [ edi + 0x10 ]
mov eax [ esi * 4 + rw-data ]
push ebx
push 0x4
push [ ebp - 0x2c ]
cdq
push [ ebp - 0x30 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] edx
call sub_430080
or eax edx
mov ebx 0x190
jne r-xdata
jb r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x2c ]
push 0x0
add eax 0x76c
push ebx
adc ecx 0x0
push ecx
push eax
call sub_430080
or eax edx
jne r-xdata
push 0x0
push 0x64
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
call sub_430080
or eax edx
jne r-xdata
cmp ecx 0x408
ja r-xdata
mov esi [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x2c ]
push 0x0
pop ecx
sub esi 0x1
sbb eax ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x30 ]
push ecx
add eax 0x12b
push ebx
adc edx ecx
push edx
push eax
mov [ ebp - 0x4c ] esi
call sub_42b430
mov ebx eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x34 ] edx
cdq
push 0x0
push 0x64
push [ ebp - 0x48 ]
add ebx eax
mov eax [ ebp - 0x34 ]
adc eax edx
push esi
mov [ ebp - 0x34 ] eax
call sub_42b430
push 0x0
push 0x4
push [ ebp - 0x48 ]
sub ebx eax
mov eax [ ebp - 0x34 ]
sbb eax edx
push esi
mov [ ebp - 0x34 ] eax
call sub_42b430
push 0x0
push 0x16d
push [ ebp - 0x2c ]
add ebx eax
mov eax [ ebp - 0x34 ]
push [ ebp - 0x30 ]
adc eax edx
mov [ ebp - 0x34 ] eax
call sub_42b3f0
add ebx eax
mov eax [ ebp - 0x34 ]
adc eax edx
add ebx [ ebp - 0x3c ]
push 0x0
adc eax [ ebp - 0x38 ]
pop esi
push esi
sub ebx 0x63df
push 0x18
sbb eax esi
push eax
push ebx
call sub_42b3f0
mov ecx eax
mov eax [ edi + 0x8 ]
mov ebx edx
cdq
push esi
add eax ecx
push 0x3c
adc edx ebx
push edx
push eax
call sub_42b3f0
mov ecx eax
mov eax [ edi + 0x4 ]
mov ebx edx
cdq
add eax ecx
push esi
adc edx ebx
push 0x3c
push edx
push eax
call sub_42b3f0
mov ecx eax
mov eax [ edi ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edx
cmp [ ebp + 0x8 ] esi
je r-xdata
cmp esi 0x1
jle r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_4225b6
call sub_42ffb0
lea eax [ ebp - 0x40 ]
push eax
call sub_42f798
pop ecx
test eax eax
jne r-xdata
add [ ebp - 0x3c ] 0x1
adc [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
push 0x9
pop ecx
lea esi [ ebp - 0x28 ]
[ edi ] [ esi ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42b146
lea eax [ ebp - 0x44 ]
push eax
call sub_42f7c5
pop ecx
test eax eax
jne r-xdata
pop esi
mov eax [ ebp - 0x44 ]
cdq
add [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
push eax
adc [ ebp - 0x2c ] edx
lea eax [ ebp - 0x28 ]
push eax
call sub_4246dd
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ edi + 0x20 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x40 ]
cdq
add [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
push eax
adc [ ebp - 0x2c ] edx
lea eax [ ebp - 0x28 ]
push eax
call sub_4246dd
jmp r-xdata
jge r-xdata
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] esi
jle r-xdata
sub_4246dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push ebx
push 0x24
push 0xff
push esi
call sub_4264e0
mov ebx [ ebp + 0xc ]
add esp 0xc
cmp ebx edi
jne r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
cmp eax edi
jg r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
jmp r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
mov eax esi
call sub_42ffb0
lea eax [ ebp - 0x8 ]
push eax
call sub_42f76b
pop ecx
test eax eax
jne r-xdata
jg r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
cmp ecx edi
jb r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_42b146
int3
lea eax [ ebp - 0xc ]
push eax
call sub_42f798
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x93406fff
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_42f7c5
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
test ecx ecx
jl r-xdata
push ebx
push esi
call sub_4225b6
pop ecx
pop ecx
test eax eax
jne r-xdata
jg r-xdata
pop ebx
cmp [ ebp - 0x8 ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub edi eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ecx
call sub_4225b6
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edi 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov edi eax
mov eax [ ebp - 0x4 ]
mov ebx edx
cdq
sub edi eax
sbb ebx edx
push esi
call sub_430037
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_42b430
mov edi eax
mov eax [ esi + 0x4 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_430080
mov [ esi + 0x4 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi ] eax
adc ebx 0xffffffff
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
mov [ esi + 0x20 ] 0x1
cdq
mov ecx eax
mov eax [ esi ]
mov [ ebp + 0x8 ] edx
cdq
mov edi eax
mov ebx edx
sub edi ecx
sbb ebx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_430037
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_42b430
mov edi eax
mov eax [ esi + 0x8 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_430080
mov [ esi + 0x8 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push ebx
push edi
call sub_430080
mov [ esi ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_4225b6
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x0
push 0x18
push ebx
push edi
call sub_42b430
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add edi 0xffffffe8
mov [ esi + 0x8 ] eax
adc ebx 0xffffffff
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
mov [ esi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ esi + 0x1c ] ecx
add ecx 0x16d
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xb
jmp r-xdata
mov eax [ esi + 0x18 ]
add eax ecx
push 0x7
cdq
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov [ esi + 0x18 ] edx
test ecx ecx
je r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_424965
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42b61a
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_4246dd
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_42498c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_425745
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_4249c7
push 0xc
push r--data
call sub_42ad20
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_42ad65
retn
call sub_4303c9
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_42571f
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_430132
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424a79
mov eax [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_430500
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_424a9a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4249c7
add esp 0xc
mov [ esi ] eax
test eax eax
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
call sub_42571f
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_424ae1
mov edi edi
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_4216fe
leave
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ ecx + eax + 0x4 ] 0x1
je r-xdata
test edi edi
jne r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4246dd
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_425044
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
pop ecx
mov [ ebp - 0x44 ] eax
lea edi [ ebp - 0x48 ]
mov eax [ ebp - 0x24 ]
add eax 0x76c
mov [ ebp - 0x14 ] ax
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x2c ]
mov [ ebp - 0xe ] ax
mov ax [ ebp - 0x30 ]
mov [ ebp - 0xc ] ax
mov ax [ ebp - 0x34 ]
mov [ ebp - 0xa ] ax
mov ax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] ax
xor eax eax
push ebx
push esi
mov esi [ SystemTimeToFileTime@IAT ]
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call esi
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
or eax 0xffffffff
mov ebx [ LocalFileTimeToFileTime@IAT ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x38 ]
push edi
push eax
call sub_4246dd
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x76c
mov [ ebp - 0x14 ] ax
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x2c ]
mov [ ebp - 0xe ] ax
mov ax [ ebp - 0x30 ]
mov [ ebp - 0xc ] ax
mov ax [ ebp - 0x34 ]
mov [ ebp - 0xa ] ax
mov ax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push 0x0
push [ ebp - 0x4c ]
call sub_430759
pop ecx
push eax
call [ SetFileTime@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebx
sub_424c9a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
push 0x40
push 0x8002
push [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
call sub_43140f
add esp 0x14
test eax eax
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424ae1
mov edi eax
pop ecx
pop ecx
cmp edi 0xffffffff
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_42571f
mov esi [ eax ]
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
call sub_42571f
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_42efc4
pop ecx
cmp edi 0xffffffff
jne r-xdata
sub_424d13
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
jbe r-xdata
test esi esi
je r-xdata
push ebx
push 0x0
push ecx
call sub_4264e0
add esp 0xc
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_42d4b4
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
js r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_42571f
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4264e0
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_42b35f
pop ecx
push eax
call sub_42f63f
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_423b8a
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_42b1b2
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_424eec
push 0xc
push r--data
call sub_42ad20
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424d13
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424f70
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_42ad65
retn
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4264e0
add esp 0xc
sub_424f97
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_421e20
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4229cf
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_429ec9
pop ecx
call sub_42571f
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_42571f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4256dd
pop ecx
mov [ esi ] eax
push esi
call sub_429ec9
pop ecx
test eax eax
je r-xdata
call sub_42571f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4256dd
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_425044
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_431430
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_425095
push 0xc
push r--data
call sub_42ad20
xor eax eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
mov [ edi ] ebx
xor eax eax
mov ecx [ ebp + 0xc ]
cmp ecx ebx
setne al
cmp eax ebx
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
setne al
cmp eax ebx
je r-xdata
call sub_42ad65
retn
xor eax eax
mov esi [ ebp + 0x14 ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
cmp [ ecx ] bl
jne r-xdata
mov [ ebp - 0x1c ] esi
push esi
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] ebx
test [ esi + 0xc ] 0x83
je r-xdata
call sub_42571f
mov [ eax ] 0x16
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x4 ] ebx
push esi
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_430132
add esp 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42515c
cmp [ edi ] ebx
je r-xdata
push esi
call sub_423ef2
pop ecx
call sub_42571f
mov eax [ eax ]
xor eax eax
jmp r-xdata
sub_425166
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x40
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_425095
mov eax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_4251ac
mov edi edi
push esi
call sub_425c60
pop ecx
cmp eax 0x5
jb r-xdata
xor eax eax
retn
mov al [ esi ]
cmp al 0x5c
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x5c
je r-xdata
cmp al 0x2f
jne r-xdata
mov al [ esi + 0x2 ]
cmp al 0x5c
je r-xdata
cmp al 0x2f
jne r-xdata
cmp al 0x2f
je r-xdata
lea eax [ esi + 0x3 ]
mov cl [ eax ]
xor dl dl
cmp cl dl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp [ eax ] dl
je r-xdata
cmp cl 0x2f
je r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
inc eax
mov cl [ eax ]
cmp cl dl
jne r-xdata
mov cl [ eax ]
cmp cl dl
je r-xdata
xor eax eax
inc eax
retn
cmp cl 0x5c
je r-xdata
cmp [ eax ] dl
je r-xdata
cmp cl 0x2f
je r-xdata
cmp [ eax + 0x1 ] dl
jne r-xdata
inc eax
mov cl [ eax ]
cmp cl dl
jne r-xdata
sub_425226
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_42571f
mov esi [ eax ]
call sub_42571f
push [ ebp + 0x10 ]
and [ eax ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431498
add esp 0xc
mov edi eax
call sub_42571f
test edi edi
je r-xdata
cmp [ eax ] 0x22
je r-xdata
mov [ eax ] esi
mov eax edi
jmp r-xdata
call sub_42571f
push 0x0
push [ ebp + 0xc ]
mov [ eax ] esi
push 0x0
call sub_431498
mov ecx [ ebp + 0x14 ]
add esp 0xc
mov [ ecx ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_425286
mov edi edi
push ebp
mov ebp esp
sub esp 0x26c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x26c ] ebx
cmp esi ebx
jne r-xdata
cmp edi ebx
je r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
push r--data
push esi
call sub_4323f1
pop ecx
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
cmp [ esi + 0x1 ] 0x3a
jne r-xdata
call sub_42571f
push 0x2
pop esi
mov [ eax ] esi
call sub_425732
mov [ eax ] esi
jmp r-xdata
call sub_432109
mov al [ esi ]
cmp al bl
je r-xdata
test [ ebp - 0x258 ] 0x400
je r-xdata
push r--data
push esi
mov [ ebp - 0x25c ] ebx
call sub_4323f1
pop ecx
pop ecx
test eax eax
je r-xdata
movsx eax al
push eax
call sub_432319
pop ecx
sub eax 0x60
jmp r-xdata
cmp [ esi + 0x2 ] bl
je r-xdata
cmp [ ebp - 0x244 ] ebx
jne r-xdata
cmp [ ebp - 0x234 ] 0xa000000c
jne r-xdata
lea eax [ ebp - 0x25c ]
push eax
push 0x104
lea eax [ ebp - 0x108 ]
push esi
push eax
call sub_425226
mov esi eax
add esp 0x10
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
mov [ ebp - 0x268 ] eax
lea eax [ ebp - 0x258 ]
push eax
push ebx
push esi
call [ FindFirstFileExA@IAT ]
mov [ ebp - 0x25c ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x244 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x240 ] ebx
jne r-xdata
or [ ebp - 0x25c ] 0xffffffff
push ebx
push 0x40
push ebx
lea eax [ ebp - 0x25c ]
push esi
push eax
call sub_43140f
add esp 0x14
test eax eax
jne r-xdata
cmp [ ebp - 0x25c ] ebx
je r-xdata
push esi
call sub_425c60
pop ecx
cmp eax 0x3
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_425745
pop ecx
push [ ebp - 0x25c ]
call [ FindClose@IAT ]
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x264 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x20 ] ebx
mov [ edi + 0x24 ] ebx
jmp r-xdata
cmp [ ebp - 0x25c ] 0xffffffff
je r-xdata
push [ ebp - 0x25c ]
call sub_4229cf
pop ecx
jmp r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x1
jbe r-xdata
call sub_4251ac
test eax eax
je r-xdata
movzx eax [ ebp - 0x10c ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x10e ]
push eax
movzx eax [ ebp - 0x110 ]
push eax
movzx eax [ ebp - 0x112 ]
push eax
movzx eax [ ebp - 0x116 ]
push eax
movzx eax [ ebp - 0x118 ]
push eax
call sub_431ea2
add esp 0x1c
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] edx
cmp [ ebp - 0x24c ] ebx
jne r-xdata
push edi
push [ ebp - 0x25c ]
call sub_431b50
push [ ebp - 0x25c ]
mov esi eax
call sub_42efc4
add esp 0xc
mov eax esi
jmp r-xdata
cmp [ ebp - 0x25c ] ebx
je r-xdata
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x24c ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x248 ] ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
push 0xffffffff
push ebx
push ebx
push ebx
push 0x1
push 0x1
push 0x7bc
mov [ ebp - 0x258 ] 0x10
mov [ ebp - 0x23c ] ebx
mov [ ebp - 0x238 ] ebx
mov [ ebp - 0x22c ] bl
call sub_431ea2
mov esi [ ebp - 0x260 ]
mov ecx edx
add esp 0x1c
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] edx
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] ecx
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] ecx
jmp r-xdata
push [ ebp - 0x25c ]
call sub_4229cf
pop ecx
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x264 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x18 ] eax
mov eax [ edi + 0x24 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
push esi
push [ ebp - 0x258 ]
call sub_43158f
mov [ edi + 0x6 ] ax
xor eax eax
inc eax
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x238 ]
pop ecx
pop ecx
mov [ edi + 0x14 ] eax
cmp [ ebp - 0x23c ] ebx
je r-xdata
movzx eax [ ebp - 0x10c ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x10e ]
push eax
movzx eax [ ebp - 0x110 ]
push eax
movzx eax [ ebp - 0x112 ]
push eax
movzx eax [ ebp - 0x116 ]
push eax
movzx eax [ ebp - 0x118 ]
push eax
call sub_431ea2
add esp 0x1c
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] edx
cmp [ ebp - 0x254 ] ebx
jne r-xdata
xor eax eax
mov [ edi + 0x4 ] ax
mov [ edi + 0xc ] ax
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x268 ]
dec eax
mov [ edi ] eax
mov [ edi + 0x10 ] eax
mov eax [ ebp - 0x26c ]
jmp r-xdata
or [ ebp - 0x26c ] 0xffffffff
mov [ edi + 0x14 ] ebx
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x254 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x250 ] ebx
jne r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x264 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x28 ] eax
mov eax [ edi + 0x24 ]
mov [ edi + 0x2c ] eax
jmp r-xdata
movzx eax [ ebp - 0x10c ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x10e ]
push eax
movzx eax [ ebp - 0x110 ]
push eax
movzx eax [ ebp - 0x112 ]
push eax
movzx eax [ ebp - 0x116 ]
push eax
movzx eax [ ebp - 0x118 ]
push eax
call sub_431ea2
add esp 0x1c
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] edx
push [ ebp - 0x25c ]
call [ FindClose@IAT ]
sub_4256dd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_425745
mov edi edi
push ebp
mov ebp esp
push esi
call sub_425732
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4256dd
pop ecx
mov esi eax
call sub_42571f
mov [ eax ] esi
pop esi
pop ebp
retn
sub_425768
mov edi edi
push ebp
mov ebp esp
call sub_42a065
test eax eax
jne r-xdata
call sub_42571f
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_425789
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_42571f
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_42b1b2
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4257ae
mov edi edi
push ebp
mov ebp esp
call sub_42a065
test eax eax
jne r-xdata
call sub_425732
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_4257cf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_425732
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_42b1b2
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4257f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_4292bc
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_429301
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_429301
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_429301
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_429301
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_42e978
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_4229cf
push [ ebp - 0x1c ]
call sub_4229cf
push [ ebp - 0x20 ]
call sub_4229cf
push [ ebp - 0x28 ]
call sub_4229cf
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_4229cf
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_4324ef
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_428bcf
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_428bcf
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_421710
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_421710
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_421710
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4229cf
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4229cf
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4229cf
push [ esi + 0xc0 ]
call sub_4229cf
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_425c60
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_425ceb
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_425d37
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_425d7e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_425dd2
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4285f4
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_425e08
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4285f4
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_425e3e
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4285f4
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_425e93
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4216fe
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_4285f4
add esp 0x20
pop esi
pop ebp
retn
sub_425ec6
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_425f9d
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_42a0de
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_425f9d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4216fe
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_4285f4
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_425ec6
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_425d7e
pop ebx
leave
retn
sub_42603c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_43257b
call sub_43257b
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_4260af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_42a0de
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_42a0de
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_4260db
mov edi edi
push ebp
mov ebp esp
call sub_42a0de
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_426102
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42a0de
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_42a0de
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_42a0de
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_43257b
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_426154
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_425e93
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_4325d0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_4261b4
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4261e7
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_42621d
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_426253
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4262be
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_43261c
mov esi [ eax ]
call sub_43261c
cmp esi [ eax ]
jl r-xdata
call sub_432622
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_4262e6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_42a065
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_4262be
push eax
push edi
push esi
call sub_42b385
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_429301
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_426350
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jbe r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
lea eax [ esi - 0x1 ]
push eax
push [ ebp + 0x10 ]
call sub_4262be
pop ecx
push eax
push esi
push [ ebp + 0x8 ]
call sub_432628
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn
push edi
push edi
push edi
push edi
push edi
call sub_42b146
int3
sub_4263a3
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_4326dd
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_42934d
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_42934d
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_426459
mov edi edi
push esi
push 0x4
push 0x20
call sub_429301
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_42648a
push 0xc
push r--data
call sub_42ad20
call sub_429902
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4263a3
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4264c0
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_4264e0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_432710
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_426566
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_42d5d6
pop ecx
pop edi
sub_42658c
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42a0de
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_426613
push 0x8
push r--data
call sub_42ad20
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42ad65
retn
push 0xd
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4266c0
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_4229cf
pop ecx
push 0xc
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_42d665
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4266cc
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4229cf
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_42d6fe
pop ecx
sub_4266e0
push 0xc
push r--data
call sub_42ad20
call sub_42a0de
mov edi eax
push 0x1
push 0x8
call sub_429301
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_42d896
call sub_433cfa
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_42d5d6
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42677a
push 0xd
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426786
mov eax esi
call sub_42571f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_42ad65
retn
sub_426797
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4341f9
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_4267d8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_4264e0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_423dd0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_432628
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_432628
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_42b146
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_423dd0
test eax eax
sub_4268f7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b385
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426797
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426797
add esp 0x14
sub_426962
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_4292bc
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_426797
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_426797
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_4229cf
pop ecx
push r--data
push ebx
push edi
call sub_4341f9
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_4229cf
pop ecx
push [ ebp - 0x10 ]
call sub_4229cf
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_4229cf
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_4229cf
pop ecx
sub_426ac7
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_42a0de
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_425c60
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_4267d8
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_434833
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_4268f7
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_421710
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_421710
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_432628
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
call sub_42b146
sub_426ce8
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_42a0de
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_426ac7
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_42eea0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_425c60
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_4292bc
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_421710
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_42b385
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_421710
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_4229cf
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_4324ef
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_4229cf
push [ ebx + 0x54 ]
call sub_4229cf
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_435f3e
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_427022
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_426962
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_426ce8
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_426ac7
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_426ce8
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_437492
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_425c60
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_423dd0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_432628
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42b146
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_426ce8
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_437560
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_42723e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_429301
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_429301
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_42571f
mov [ eax ] 0xc
push edi
push 0x220
call sub_429301
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_4229cf
mov eax [ esi ]
mov ecx rw-data
call sub_426566
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_427022
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_4229cf
push esi
call sub_4229cf
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_433e1a
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_42d665
push [ esi ]
call sub_42d6fe
push esi
call sub_4229cf
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_4229cf
push [ esi ]
call sub_42d665
push [ esi ]
call sub_42d6fe
push esi
call sub_4229cf
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_42733e
push 0x14
push r--data
call sub_42ad20
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_42a0de
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_42d896
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_429301
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4274ad
mov eax [ ebp - 0x20 ]
push 0xc
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_426566
and [ ebp - 0x4 ] 0x0
call sub_427470
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_427022
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_42ad65
retn
push ebx
call sub_42d665
push ebx
call sub_42d6fe
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_42d849
push ebx
call sub_42d665
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42747c
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_42d849
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_4274b2
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4223bd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4274db
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_422419
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_423b7f
pop ecx
sub_427502
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_427561
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_42a0de
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_42a0de
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_42a0de
and [ eax + 0x90 ] 0x0
jmp sub_43252f
sub_4275b0
push 0x10
push r--data
call sub_42ad20
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427672
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_42a0de
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_42ad65
retn
call sub_43257b
call sub_43257b
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_4325d0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_42768c
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_42a0de
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_4276d1
push 0x8
push r--data
call sub_42ad20
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_42ad65
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_425d69
mov [ ebp - 0x4 ] 0xfffffffe
sub_427726
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_427760
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_42a0de
and [ eax + 0x90 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_4260af
pop ecx
pop ecx
call sub_42a0de
mov eax [ eax + 0x88 ]
mov [ edi + 0x8 ] eax
call sub_42a0de
mov eax [ eax + 0x8c ]
mov [ edi + 0xc ] eax
call sub_42a0de
mov [ eax + 0x88 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_42a0de
dec [ eax + 0x90 ]
call sub_42a0de
cmp [ eax + 0x90 ] 0x0
pop edi
pop esi
jge r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_42a0de
mov esi [ eax + 0x88 ]
cmp eax 0x19930522
jne r-xdata
sub_427816
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_42a0de
inc [ eax + 0x90 ]
xor eax eax
inc eax
pop ebp
retn
cmp ecx 0x19930522
jne r-xdata
sub_427867
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
push esi
call sub_426102
cmp [ ebp + 0xc ] 0x0
pop ecx
mov edi 0xe06d7363
mov ebx 0x19930520
jne r-xdata
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_42a0de
mov ecx [ esi + 0x8 ]
mov [ eax + 0x88 ] ecx
call sub_42a0de
mov ecx [ esi + 0xc ]
pop edi
mov [ eax + 0x8c ] ecx
pop ebx
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_42a0de
mov eax [ eax + 0x88 ]
push [ eax + 0x18 ]
call sub_4260db
pop ecx
test eax eax
je r-xdata
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_42a0de
dec [ eax + 0x90 ]
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_42a0de
push [ eax + 0x88 ]
call sub_4276d1
pop ecx
pop ecx
call sub_42a0de
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_427a40
push 0x8
push r--data
call sub_42ad20
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
sub_427a7b
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_43257b
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_427502
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_427b3c
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ esi ] ebx
jle r-xdata
xor al al
mov eax [ esi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_423e79
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
inc edi
add ebx 0x10
cmp edi [ esi ]
jl r-xdata
pop edi
pop ebx
retn
sub_427b6c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
call sub_43257b
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_43257b
call sub_43257b
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x19930521
je r-xdata
test edi edi
jg r-xdata
cmp eax 0x19930522
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_423ede
push eax
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
dec edi
add esi 0x4
pop edi
pop esi
pop ebp
retn
sub_427bf2
push 0x2c
push r--data
call sub_42ad20
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_4260af
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_42a0de
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_42a0de
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_42a0de
mov [ eax + 0x88 ] esi
call sub_42a0de
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_426154
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_427d18
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_427c8b
mov esp [ ebp - 0x18 ]
call sub_42a0de
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_4275b0
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_427d18
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_427d18
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_426102
pop ecx
call sub_42a0de
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_42a0de
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_4260db
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_4276d1
pop ecx
pop ecx
sub_427d8e
push 0xc
push r--data
call sub_42ad20
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_4375a0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_4375a0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_43257b
push ebx
push esi
call sub_4375b2
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4375a0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4375a0
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_4375b2
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_4375b2
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_4375b2
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_421a80
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_4375c4
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_427726
pop ecx
pop ecx
push eax
push esi
call sub_421a80
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_42ad65
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_427726
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_427f0d
push 0x8
push r--data
call sub_42ad20
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_427726
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_425d70
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_427d8e
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_427726
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_425d77
jmp r-xdata
sub_427f9f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
leave
retn
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp eax 0xe06d7363
jne r-xdata
cmp eax 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_42a0de
inc [ eax + 0x90 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_42a0de
cmp [ eax + 0x88 ] 0x0
jne r-xdata
cmp eax 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
or ebx 0x80000000
mov [ ebp - 0xc ] edi
mov edi [ eax ]
mov [ ebp - 0x10 ] ebx
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_42a0de
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_42a0de
mov esi [ eax + 0x88 ]
mov eax [ ebx ]
push [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_427502
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_42a0de
inc [ eax + 0x90 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_427f0d
add esp 0x10
jmp r-xdata
sub_4280ed
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_427f0d
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_425d37
call sub_425d7e
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_4275b0
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_427bf2
add esp 0x28
test eax eax
je r-xdata
sub_42815b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_42a0de
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_42a0de
lea edi [ eax + 0x80 ]
call sub_429ef1
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_42603c
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_43257b
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_425ec6
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4280ed
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_428262
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_43257b
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_42a0de
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_43257b
call sub_43252f
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42815b
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_42a0de
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_42a0de
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_42a0de
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_4375a0
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_42603c
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_43257b
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_4276d1
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_42a0de
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_42a0de
mov edi [ eax + 0x94 ]
call sub_42a0de
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_427a7b
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_427a7b
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_423e79
test al al
jne r-xdata
call sub_43257b
cmp eax 0x19930522
jne r-xdata
call sub_42a0de
call sub_42a0de
call sub_42a0de
mov [ eax + 0x88 ] esi
call sub_42a0de
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_427502
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4276d1
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_4223bd
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_425ceb
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_4280ed
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_425d7e
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4275b0
add esp 0x10
push [ esi + 0x1c ]
call sub_427af1
sub_4285f4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_42a0de
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_428262
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4275b0
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4286da
push 0xc
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
cmp [ esi ] di
setne al
cmp eax edi
je r-xdata
call sub_42ad65
retn
call sub_4303c9
mov [ ebp + 0x8 ] eax
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp [ ebx ] di
jne r-xdata
call sub_42571f
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push ebx
call sub_4375d6
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42878e
mov eax [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_430500
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4287af
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4286da
add esp 0xc
mov [ esi ] eax
test eax eax
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
call sub_42571f
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4287f6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_422f38
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_4379d8
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42b35f
pop ecx
push eax
call sub_437904
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_428880
push 0xc
push r--data
call sub_42ad20
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4287f6
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4288f2
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_42ad65
retn
cmp esi 0x2
jne r-xdata
sub_428912
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4229cf
pop ecx
sub_428932
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_42a0de
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_42d896
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_433cfa
mov [ esi + 0x4 ] eax
sub_4289ca
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_4289e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_428912
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_421e20
pop ecx
cmp eax ebx
je r-xdata
call sub_437be0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_428912
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_421e20
pop ecx
cmp eax ebx
je r-xdata
call sub_437be0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_428bcf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4289e8
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_428c44
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_428c9a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428c44
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_428cca
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_428d1b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428cca
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_428d49
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_428d9a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428d49
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_428dc8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_428e19
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428dc8
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_428e47
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_428e9d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428e47
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_428ecd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_428f1e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428ecd
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_428f4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_428f9d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428f4c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_428fcb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_429021
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428fcb
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_429051
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4290a7
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_429051
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_4290d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_42912d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4290d7
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_42915d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4291ae
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42915d
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_4291fb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428c44
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_42921e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_428c9a
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_42923d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428fcb
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_429260
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_429021
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_429281
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rw-data ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_4292bc
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_421e20
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_429301
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437cf6
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_42934d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424f97
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_42939b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437d78
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4293ed
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_42571f
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_42571f
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_4294a7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_4293ed
pop ebp
retn
sub_4294d1
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_4293ed
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_429512
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_42571f
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_42571f
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_437df0
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_4295fe
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429512
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_429633
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429512
pop edi
pop ebp
retn
sub_429652
call sub_42de58
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_42e0b7
pop ecx
push 0x3
call sub_429bd5
int3
push 0x1
push 0x40000015
push 0x3
call sub_42afe9
add esp 0xc
sub_429685
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_4296a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_437e85
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_437e85
pop ecx
sub_4298bf
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_429914
mov edi edi
push esi
call sub_429ef1
mov esi eax
push esi
call sub_429e6d
push esi
call sub_42afda
push esi
call sub_42eb24
push esi
call sub_437e8d
push esi
call sub_42dd67
push esi
call sub_4325b3
add esp 0x18
pop esi
retn
sub_429947
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_429964
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_429988
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_4299b8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_4299e8
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_437f8c
push r--data
push r--data
call sub_429964
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_438040
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_42acf0
call sub_4264c6
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_438040
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_429a7f
push 0x20
push r--data
call sub_42ad20
push 0x8
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429baa
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_42ad65
retn
mov [ rw-data ] 0x1
push 0x8
call sub_42c92e
pop ecx
push [ ebp + 0x8 ]
call sub_4298ea
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_429ef1
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_429ef1
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_429c27
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_429c4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_429c27
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
push 0x3
call sub_42e8f9
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_42e8f9
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_42e896
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_425c60
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_42b146
push esi
call sub_42e806
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_42e896
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_42e806
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_42e739
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_42e821
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_42e25a
add esp 0xc
jmp r-xdata
sub_429dfc
push 0x3
call sub_42e8f9
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_429c4d
push 0xff
call sub_429c4d
pop ecx
pop ecx
push 0x3
call sub_42e8f9
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_429e7c
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_42ca1f
pop ecx
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rw-data ] eax
call sub_42c92e
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_429ec9
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_429f23
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_429f74
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_42c8d7
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_429fb1
push 0x8
push r--data
call sub_42ad20
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a053
push 0xc
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_42d5d6
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a05c
call sub_42ad65
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_42a065
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_429f23
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_429301
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_4229cf
pop ecx
xor esi esi
push 0x0
push esi
call sub_429fb1
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_42a0f8
push 0x8
push r--data
call sub_42ad20
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42ad65
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_4229cf
pop ecx
push 0xd
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_4229cf
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a212
push 0xc
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a21e
push esi
call sub_4229cf
pop ecx
push edi
call sub_42d665
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_4229cf
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_42d6fe
pop ecx
sub_42a227
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_42a0f8
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_42a2a1
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_429f74
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_429efa
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_429914
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_42c88d
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_429f74
mov edi [ DecodePointer@IAT ]
push sub_42a0f8
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_429301
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_429fb1
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_42a41c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_43252f
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_42a46c
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_42a492
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42a065
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_42a5dc
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_42a492
pop ecx
pop ecx
pop ebp
retn
sub_42a5fc
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_4341db
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_438308
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_42a65b
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_4341db
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_429301
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_425c60
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_425c60
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_4229cf
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_429301
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_4229cf
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
int3
add edi 0x4
sub_42a746
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_438308
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_438308
pop ecx
test eax eax
je r-xdata
call sub_438308
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_42a8e0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_4341db
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_42a746
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_4292bc
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_42a746
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_42a99b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_4292bc
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4229cf
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_42aa32
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_429301
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_429301
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_42ac77
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_4229cf
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_42acca
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_42acf0
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_42ad20
push sub_42adb0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_42adb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4216fe
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4216fe
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_43063b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4305f2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4216fe
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4216fe
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_430622
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_43063b
mov eax [ ebp + 0xc ]
push r--data
call sub_438040
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4216fe
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_430609
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4216fe
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_42af3f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_42afe9
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_4264e0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_437e85
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_437e85
pop ecx
sub_42b112
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax esi
pop esi
pop ebp
retn
sub_42b146
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_42afe9
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_42b185
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b146
int3
pop ebp
jmp eax
sub_42b1c2
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_42b185
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_42afe9
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_42b1fb
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_42b35f
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_42571f
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_422a09
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_42d307
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_4383b9
pop ecx
test eax eax
jne r-xdata
call sub_422a09
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_42d307
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_42ca52
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_42cb20
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_42b35f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
sub_42b385
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_42b3f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_42b430
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_42b4da
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push ebx
push 0x24
push 0xff
push esi
call sub_4264e0
mov ebx [ ebp + 0xc ]
add esp 0xc
test ebx ebx
jne r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
mov ecx [ ebx ]
cmp ecx 0xffff5740
jge r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
jmp r-xdata
pop esi
leave
retn
mov eax ecx
cdq
push edi
mov edi 0x7861f80
idiv edi
mov edx eax
imul edx edx 0xf879e080
add ecx edx
lea edx [ eax * 4 + 0x46 ]
mov eax 0x1e13380
cmp ecx eax
jl r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov eax esi
jmp r-xdata
mov eax ecx
mov [ esi + 0x14 ] edx
cdq
mov edi 0x15180
idiv edi
mov edi rw-data
mov [ esi + 0x1c ] eax
imul eax eax 0xfffeae80
add ecx eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub ecx eax
inc edx
cmp ecx eax
jl r-xdata
pop ebx
mov eax [ esi + 0x1c ]
xor edx edx
inc edx
cmp [ edi + 0x4 ] eax
jge r-xdata
mov edi rw-data
sub ecx eax
mov eax 0x1e28500
inc edx
cmp ecx eax
jl r-xdata
dec edx
mov [ esi + 0x10 ] edx
sub eax [ edi + edx * 4 ]
mov edi 0x15180
mov [ esi + 0xc ] eax
mov eax [ ebx ]
cdq
idiv edi
push 0x7
pop edi
push 0x3c
and [ esi + 0x20 ] 0x0
add eax 0x4
cdq
idiv edi
mov eax ecx
mov edi 0xe10
mov [ esi + 0x18 ] edx
cdq
idiv edi
pop edi
mov [ esi + 0x8 ] eax
imul eax eax 0xfffff1f0
add ecx eax
mov eax ecx
cdq
idiv edi
pop edi
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub ecx eax
mov [ esi ] ecx
xor eax eax
mov ebx eax
mov [ ebp - 0x4 ] 0x1
inc edx
sub ecx eax
jmp r-xdata
inc edx
cmp [ edi + edx * 4 ] ebx
jl r-xdata
mov ebx [ ebp + 0xc ]
sub_42b61a
mov edi edi
push esi
call sub_42a065
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
call sub_42571f
mov [ eax ] 0xc
xor eax eax
pop esi
retn
mov eax [ esi + 0x44 ]
pop esi
retn
push 0x24
call sub_4292bc
pop ecx
mov [ esi + 0x44 ] eax
test eax eax
je r-xdata
sub_42b651
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42b61a
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_42b4da
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_42b678
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_42b1fb
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_42b6ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_42b678
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_42b6d1
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_42b678
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_42b678
sub_42b76d
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_428932
call sub_42571f
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_42b35f
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_42c375
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
leave
retn
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_42b76d
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_42b1fb
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_42c413
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push edi
push 0x7
xor edx edx
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edx
[ edi ]
pop edi
cmp [ ebp + 0xc ] edx
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] edx
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
leave
retn
sub_42c4e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42b1fb
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_42c5ab
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_42b76d
call sub_42c4e1
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42c5d4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_42b76d
call sub_42c4e1
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42c5fe
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_42b1b2
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_439ff7
call sub_42c4e1
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_42571f
mov [ eax ] 0x22
sub_42c692
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ebx ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
call sub_42b1b2
call sub_42571f
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax ]
push edi
push esi
push sub_439ff7
call sub_42c4e1
add esp 0x18
mov [ esi + edi - 0x1 ] 0x0
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
inc ebx
push ebx
push esi
push sub_439ff7
call sub_42c4e1
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
jns r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_42571f
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] 0x0
cmp eax 0xfffffffe
jne r-xdata
call sub_42571f
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_42571f
mov [ eax ] edi
jmp r-xdata
call sub_42571f
mov [ eax ] 0x22
call sub_42571f
mov [ eax ] ebx
jmp r-xdata
sub_42c77e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c692
add esp 0x18
pop ebp
retn
sub_42c79e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_438c18
call sub_42c4e1
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42c7c7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_438c18
call sub_42c4e1
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42c7f1
push 0x10
push r--data
call sub_42ad20
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c884
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_423f5f
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4229cf
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_42c88d
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_42c8d7
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4229cf
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_42c95d
push 0xc
push r--data
call sub_42ad20
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_429dfc
push 0x1e
call sub_429c4d
push 0xff
call sub_4298ea
push 0x18
call sub_4292bc
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_42ad65
retn
push edi
call sub_4229cf
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4229cf
pop ecx
call sub_42571f
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ca16
mov eax [ ebp - 0x1c ]
sub_42ca1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_42c95d
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_429c09
sub_42ca52
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_4292bc
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_42ca9b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_430759
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_42571f
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_425745
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_42cb20
push 0x14
push r--data
call sub_42ad20
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_42ad65
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42ca9b
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42cc00
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_42cc0a
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_42f740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_425732
mov [ eax ] edi
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
push esi
call sub_4383b9
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_42ca9b
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_42a0de
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_42571f
mov [ eax ] 0x1c
call sub_425732
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_425745
pop ecx
jmp r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_425732
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_43879e
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_43ac2b
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_43adc9
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_43adc9
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_43ac2b
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_42d307
push 0x10
push r--data
call sub_42ad20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_42ad65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_42cc0a
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d3d3
mov eax [ ebp - 0x1c ]
sub_42d3db
push 0x10
push r--data
call sub_42ad20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_42ad65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_430759
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d4ac
mov eax [ ebp - 0x1c ]
call sub_425732
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_42d4b4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_42ca52
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_42b35f
pop ecx
push eax
call sub_42f63f
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_42b35f
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_42b35f
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_42b35f
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_42b35f
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_42d5d6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_42d665
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_42d6fe
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4229cf
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4229cf
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4229cf
push [ esi + 0xc0 ]
call sub_4229cf
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_432fc9
push [ esi + 0xd4 ]
call sub_4229cf
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4229cf
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4229cf
pop ecx
push [ esi + 0xb0 ]
call sub_4229cf
push [ esi + 0xbc ]
call sub_4229cf
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4229cf
push [ esi + 0xbc ]
call sub_433676
pop ecx
pop ecx
push eax
call sub_4229cf
pop ecx
push eax
call sub_4229cf
push [ esi + 0xbc ]
call sub_4333ed
pop ecx
pop ecx
sub_42d849
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_42d5d6
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_42d665
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_42d6fe
pop ecx
sub_42d896
push 0xc
push r--data
call sub_42ad20
call sub_42a0de
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_42d849
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d903
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_42a0de
mov esi [ eax + 0x6c ]
mov eax esi
call sub_42ad65
retn
push 0x20
call sub_429c09
sub_42d90f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42b1fb
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42b1fb
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_42da05
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43aea0
call sub_42d90f
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42da2e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43aea0
call sub_42d90f
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42da58
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_42b1b2
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_43bb25
call sub_42d90f
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_42571f
mov [ eax ] 0x22
sub_42daee
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ebx ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
call sub_42b1b2
call sub_42571f
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax ]
push edi
push esi
push sub_43bb25
call sub_42d90f
xor ecx ecx
add esp 0x18
mov [ esi + edi * 2 - 0x2 ] cx
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
inc ebx
push ebx
push esi
push sub_43bb25
call sub_42d90f
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
jns r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_42571f
cmp [ eax ] 0x22
jne r-xdata
xor ecx ecx
mov [ esi ] cx
cmp eax 0xfffffffe
jne r-xdata
call sub_42571f
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_42571f
mov [ eax ] edi
jmp r-xdata
call sub_42571f
mov [ eax ] 0x22
call sub_42571f
mov [ eax ] ebx
jmp r-xdata
sub_42dbde
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42daee
add esp 0x18
pop ebp
retn
sub_42dbfe
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43c8ed
call sub_42d90f
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42dc27
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43c8ed
call sub_42d90f
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42dc51
push 0xc
push r--data
call sub_42ad20
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] edi
setne al
cmp eax edi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] esi
push esi
call sub_422ae0
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_43dbc1
mov ebx eax
lea eax [ ebp + 0x10 ]
push eax
push edi
push [ ebp + 0xc ]
push esi
call sub_43aea0
mov [ ebp - 0x1c ] eax
push esi
push ebx
call sub_43dc5d
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42dcd3
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_42dd85
push 0x10
push r--data
call sub_42ad20
xor edi edi
push edi
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rw-data
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rw-data
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42de01
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_429ef1
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_42ad65
retn 0x4
sub_42de21
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_42de77
push 0x10
push r--data
call sub_42ad20
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_42dd85
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_425732
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e07c
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_42a065
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_42ad65
retn
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_42de21
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_4292bc
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_421710
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_42e0b7
push 0x20
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_42a065
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_42ad65
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_42de21
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_429bd5
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_42ca1f
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_429ef1
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e21e
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_42e25a
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_429ef1
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_42e3c6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] cx
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_42571f
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_42571f
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov edi ecx
push 0x2d
pop ecx
xor ebx ebx
mov [ esi ] cx
inc ebx
lea ecx [ esi + 0x2 ]
neg eax
add edx 0x30
add edx 0x57
jmp r-xdata
xor eax eax
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dx
add ecx 0x2
inc ebx
test eax eax
je r-xdata
mov [ ecx ] ax
sub ecx 0x2
mov [ esi ] ax
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
movzx eax [ ecx ]
mov dx [ edi ]
mov [ ecx ] dx
mov [ edi ] ax
sub ecx 0x2
add edi 0x2
cmp edi ecx
jb r-xdata
xor eax eax
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_42e4a5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_42e3c6
pop ebp
retn
sub_42e4cf
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_42e3c6
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_42e510
mov edi edi
push ebp
mov ebp esp
push ecx
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_42571f
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] ax
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_42571f
push 0x22
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov eax [ ebp + 0xc ]
push 0x2d
pop eax
mov [ edi ] ax
mov eax [ ebp + 0xc ]
neg ebx
adc eax ecx
lea esi [ edi + 0x2 ]
mov [ ebp - 0x4 ] 0x1
neg eax
jmp r-xdata
add ecx 0x30
add ecx 0x57
jmp r-xdata
mov [ ebp + 0x18 ] esi
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cx
mov ecx [ ebp - 0x4 ]
add esi 0x2
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
xor ecx ecx
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_437df0
mov [ ebp + 0xc ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] ax
sub esi 0x2
mov [ edi ] ax
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
movzx ecx [ esi ]
mov dx [ eax ]
mov [ esi ] dx
mov [ eax ] cx
add eax 0x2
sub esi 0x2
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_42e60f
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e510
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_42e644
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e510
pop edi
pop ebp
retn
sub_42e663
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ebx ebx
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
xor eax eax
mov eax esi
test edx edx
jne r-xdata
test edi edi
je r-xdata
add eax 0x2
dec edi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test ebx ebx
je r-xdata
sub eax edx
xor ecx ecx
mov [ eax ] cx
sub edx eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
jne r-xdata
dec edi
je r-xdata
movzx ecx [ edx ]
mov [ eax + edx ] cx
add edx 0x2
test cx cx
je r-xdata
jmp r-xdata
mov [ esi ] ax
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ esi + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
dec ebx
jne r-xdata
call sub_42b1b2
mov eax esi
jmp r-xdata
movzx ecx [ edx + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
sub_42e739
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_42e806
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_42e821
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_42b1b2
mov eax esi
sub_42e896
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_42b1b2
mov eax esi
sub_42e8f9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_42e947
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_4229cf
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_42e978
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_43deb2
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_429301
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_4229cf
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_429301
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_432628
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_43deb2
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_42b146
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_4229cf
pop ecx
inc esi
push esi
push eax
call sub_429301
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_4229cf
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_43deb2
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
sub_42eb33
push 0xc
push r--data
call sub_42ad20
push 0xe
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42eb9a
call sub_42ad65
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_4229cf
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_4229cf
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_42eba3
push 0xc
push r--data
call sub_42ad20
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_4229cf
push sub_421e20
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_4430c7
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_425c60
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_42ad65
retn
dec esi
mov eax [ ebp - 0x1c ]
cmp [ eax + esi ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax + esi ] bl
push [ ebp - 0x1c ]
call sub_4229cf
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ec8c
push 0x8
call sub_421e20
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_421e20
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_4229cf
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_42b385
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_42b146
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub_42ec95
push 0xc
push r--data
call sub_42ad20
push 0xe
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ecfc
call sub_42ad65
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_4229cf
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_4229cf
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_42ed05
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_4229cf
push sub_421e20
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4430c7
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_42ed38
push 0x10
push r--data
call sub_42ad20
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ee3b
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_42ed05
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_425c60
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_430500
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_421e20
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_42ad65
retn
push [ ebp - 0x1c ]
call sub_4229cf
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_421e20
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_4229cf
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_42b385
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_42b146
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
sub_42ee44
push 0x8
push r--data
call sub_42ad20
push 0xe
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ee8e
call sub_42ad65
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_4229cf
push esi
call sub_4229cf
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_42eea0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_42ef28
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_430759
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_425745
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_430759
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_430759
push 0x1
mov edi eax
call sub_430759
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_4306d3
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_42efc4
push 0x10
push r--data
call sub_42ad20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_42ad65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_42ef28
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f080
mov eax [ ebp - 0x1c ]
sub_42f088
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x9
jmp r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_42b1b2
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_4292bc
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_42ca9b
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_42571f
mov [ eax ] 0xc
call sub_425732
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_425732
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_425745
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_42571f
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_42ca9b
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_42ca9b
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_42ca9b
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_42f63f
push 0x10
push r--data
call sub_42ad20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_42ad65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_42f088
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_42b1b2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f72d
mov eax [ ebp - 0x1c ]
sub_42f740
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_42f76b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
push 0x16
pop eax
pop ebp
retn
sub_42f798
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
push 0x16
pop eax
pop ebp
retn
sub_42f7c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
push 0x16
pop eax
pop ebp
retn
sub_42f7f2
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
test ebx ebx
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov [ ebx ] 0x0
pop esi
pop ebx
pop ebp
retn
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
lea esi [ eax * 4 + rw-data ]
push [ esi ]
call sub_425c60
inc eax
pop ecx
mov [ edi ] eax
test ebx ebx
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
xor eax eax
jmp r-xdata
push [ esi ]
push [ ebp + 0x10 ]
push ebx
call sub_42b385
add esp 0xc
push 0x22
pop eax
jmp r-xdata
sub_42f8cf
push 0x2c
push r--data
call sub_42ad20
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_42f896
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_42f7c5
pop ecx
cmp eax ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
lea eax [ ebp - 0x24 ]
push eax
call sub_42f76b
pop ecx
cmp eax ebx
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_4229cf
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_42f798
pop ecx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
call sub_425be0
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_44392b
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
call sub_42ad65
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_432628
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_4438b7
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push esi
call sub_425c60
inc eax
push eax
call sub_4292bc
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
push esi
push esi
call sub_425c60
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_42b385
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
mov edi [ ebp - 0x1c ]
call sub_42f890
mov [ eax ] edi
mov edi [ ebp - 0x24 ]
call sub_42f884
mov [ eax ] edi
mov edi [ ebp - 0x28 ]
call sub_42f88a
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42fb52
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push eax
call sub_4229cf
pop ecx
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_4438b7
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_432628
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_42f890
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_42f884
mov [ eax ] esi
jmp r-xdata
inc esi
inc esi
push esi
call sub_4438b7
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_42fbe2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_42f798
pop ecx
test eax eax
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
pop ebx
sub edx eax
mov [ ebp - 0x8 ] edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
add eax esi
add eax [ ebp - 0x8 ]
mov edx edi
imul edx edx 0x16d
lea eax [ edx + eax - 0x63db ]
cdq
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
int3
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_42fdd9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_42f76b
pop ecx
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42b146
int3
cmp [ ebp - 0x4 ] esi
je r-xdata
pop esi
leave
retn
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
cmp edx 0x6b
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ edi + 0x1c ]
cmp ecx eax
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_42fbe2
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_42fbe2
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_42fbe2
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_42fbe2
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_42ffb0
push 0x8
push r--data
call sub_42ad20
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_42ad65
retn
push 0x6
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42fff6
call sub_42f8cf
inc [ rw-data ]
sub_430037
push 0xc
push r--data
call sub_42ad20
push 0x6
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_42fdd9
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43006f
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_430080
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_430132
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_43140f
add esp 0x14
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_444061
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_443efb
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_443efb
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_443efb
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_4303c9
push 0x10
push r--data
call sub_42ad20
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4304f3
mov eax edi
call sub_42ad65
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
push 0x38
call sub_4292bc
pop ecx
mov ecx [ rw-data ]
mov [ ecx + esi * 4 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ eax + esi * 4 ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ eax + esi * 4 ]
call sub_4229cf
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_422b21
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_42c95d
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_422b8f
pop ecx
pop ecx
sub_430500
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_430590
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_444195
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4441b4
jmp r-xdata
sub_430590
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4216fe
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_430500
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4305f2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_430622
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_430652
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4306d3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_425732
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_430759
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_4307c2
push 0xc
push r--data
call sub_42ad20
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430858
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_430861
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_430888
push 0x18
push r--data
call sub_42ad20
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_42c95d
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430a18
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_42ad65
retn
push 0x40
push 0x20
call sub_429301
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_4307c2
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_42ca1f
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_43095a
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_430a21
push 0xc
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_425745
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_430888
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_430652
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430b0f
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_42571f
mov [ eax ] 0x18
call sub_425732
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_42ad65
retn
sub_430b0f
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_430861
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_430b37
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_44456d
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_425732
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_425732
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_430888
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_425732
and [ eax ] 0x0
mov [ esi ] ebx
call sub_42571f
mov [ eax ] 0x18
call sub_42571f
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_425745
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_425745
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_42571f
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_42571f
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_430652
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_43788f
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] 0x0
call sub_42f088
add esp 0xc
test eax eax
jne r-xdata
call sub_425732
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_43788f
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_42ef28
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_425745
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_4306d3
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_4441b7
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_42f088
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_42ca9b
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_42ca9b
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_42ef28
pop ecx
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_43788f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_42d307
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_43788f
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_42ca9b
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_42ca9b
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_43126b
push 0x14
push r--data
call sub_42ad20
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x20 ] edi
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
call sub_430b37
add esp 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4312df
mov esi [ ebp - 0x24 ]
cmp esi edi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
mov eax [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] esi
jmp r-xdata
call sub_42ad65
retn
or eax 0xffffffff
jmp r-xdata
sub_4312df
cmp [ ebp - 0x20 ] edi
je r-xdata
retn
cmp [ ebp - 0x24 ] edi
je r-xdata
push [ ebp - 0x1c ]
call sub_430861
pop ecx
mov eax [ ebp - 0x1c ]
sar eax 0x5
mov ecx [ ebp - 0x1c ]
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_431319
push 0x14
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_42ad65
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_430b37
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4313af
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_4313af
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_430861
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_4313dd
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431319
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_43140f
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_431319
add esp 0x18
pop ebp
retn
sub_431430
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_431498
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_444803
pop ecx
cmp [ eax ] bl
je r-xdata
mov esi [ GetFullPathNameA@IAT ]
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi ebx
ja r-xdata
push ebx
push ebx
push ebx
push eax
call esi
cmp eax ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
mov edi [ ebp + 0x10 ]
cmp edi eax
ja r-xdata
call [ GetLastError@IAT ]
push eax
call sub_425745
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp edi 0xffffffff
jbe r-xdata
mov edi eax
pop ecx
mov eax ebx
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
call sub_42571f
mov [ eax ] 0x22
jmp r-xdata
push ebx
call sub_4229cf
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push edi
call sub_444896
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
push ebx
call sub_4229cf
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push edi
push [ ebp + 0xc ]
call esi
cmp eax edi
jb r-xdata
call sub_42571f
mov [ eax ] 0xc
jmp r-xdata
sub_43158f
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x1 ] 0x3a
push edi
mov ecx esi
jne r-xdata
mov dl [ ecx ]
cmp dl 0x5c
je r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ecx + 0x1 ] 0x0
je r-xdata
cmp dl 0x2f
jne r-xdata
mov edi 0x4040
test al 0x10
jne r-xdata
mov eax edi
shr eax 0x3
and eax 0x38
or edi eax
mov eax edi
shr eax 0x6
and eax 0x7
or eax edi
pop edi
pop esi
pop ebp
retn
push r--data
push esi
call sub_444acd
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi 0x8000
test dl dl
jne r-xdata
or edi 0x40
push r--data
push esi
call sub_444acd
pop ecx
pop ecx
test eax eax
je r-xdata
shl eax 0x7
not eax
and eax 0x80
or eax 0x100
push 0x2e
push esi
or edi eax
call sub_444b8e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push r--data
push esi
call sub_444acd
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_444acd
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_43164c
mov edi edi
push esi
call sub_425c60
pop ecx
cmp eax 0x5
jb r-xdata
xor eax eax
retn
mov al [ esi ]
cmp al 0x5c
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x5c
je r-xdata
cmp al 0x2f
jne r-xdata
mov al [ esi + 0x2 ]
cmp al 0x5c
je r-xdata
cmp al 0x2f
jne r-xdata
cmp al 0x2f
je r-xdata
lea eax [ esi + 0x3 ]
mov cl [ eax ]
xor dl dl
cmp cl dl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp [ eax ] dl
je r-xdata
cmp cl 0x2f
je r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
inc eax
mov cl [ eax ]
cmp cl dl
jne r-xdata
mov cl [ eax ]
cmp cl dl
je r-xdata
xor eax eax
inc eax
retn
cmp cl 0x5c
je r-xdata
cmp [ eax ] dl
je r-xdata
cmp cl 0x2f
je r-xdata
cmp [ eax + 0x1 ] dl
jne r-xdata
inc eax
mov cl [ eax ]
cmp cl dl
jne r-xdata
sub_4316c6
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_42571f
mov esi [ eax ]
call sub_42571f
push [ ebp + 0x10 ]
and [ eax ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431498
add esp 0xc
mov edi eax
call sub_42571f
test edi edi
je r-xdata
cmp [ eax ] 0x22
je r-xdata
mov [ eax ] esi
mov eax edi
jmp r-xdata
call sub_42571f
push 0x0
push [ ebp + 0xc ]
mov [ eax ] esi
push 0x0
call sub_431498
mov ecx [ ebp + 0x14 ]
add esp 0xc
mov [ ecx ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_431726
mov edi edi
push ebp
mov ebp esp
sub esp 0x26c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x26c ] ebx
cmp esi ebx
jne r-xdata
cmp edi ebx
je r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
push r--data
push esi
call sub_4323f1
pop ecx
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
cmp [ esi + 0x1 ] 0x3a
jne r-xdata
call sub_42571f
push 0x2
pop esi
mov [ eax ] esi
call sub_425732
mov [ eax ] esi
jmp r-xdata
call sub_432109
mov al [ esi ]
cmp al bl
je r-xdata
test [ ebp - 0x258 ] 0x400
je r-xdata
push r--data
push esi
mov [ ebp - 0x25c ] ebx
call sub_4323f1
pop ecx
pop ecx
test eax eax
je r-xdata
movsx eax al
push eax
call sub_432319
pop ecx
sub eax 0x60
jmp r-xdata
cmp [ esi + 0x2 ] bl
je r-xdata
cmp [ ebp - 0x244 ] ebx
jne r-xdata
cmp [ ebp - 0x234 ] 0xa000000c
jne r-xdata
lea eax [ ebp - 0x25c ]
push eax
push 0x104
lea eax [ ebp - 0x108 ]
push esi
push eax
call sub_4316c6
mov esi eax
add esp 0x10
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
mov [ ebp - 0x268 ] eax
lea eax [ ebp - 0x258 ]
push eax
push ebx
push esi
call [ FindFirstFileExA@IAT ]
mov [ ebp - 0x25c ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x244 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x240 ] ebx
jne r-xdata
or [ ebp - 0x25c ] 0xffffffff
push ebx
push 0x40
push ebx
lea eax [ ebp - 0x25c ]
push esi
push eax
call sub_43140f
add esp 0x14
test eax eax
jne r-xdata
cmp [ ebp - 0x25c ] ebx
je r-xdata
push esi
call sub_425c60
pop ecx
cmp eax 0x3
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_425745
pop ecx
push [ ebp - 0x25c ]
call [ FindClose@IAT ]
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x264 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x1c ] ebx
jmp r-xdata
cmp [ ebp - 0x25c ] 0xffffffff
je r-xdata
push [ ebp - 0x25c ]
call sub_4229cf
pop ecx
jmp r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x1
jbe r-xdata
call sub_43164c
test eax eax
je r-xdata
movzx eax [ ebp - 0x10c ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x10e ]
push eax
movzx eax [ ebp - 0x110 ]
push eax
movzx eax [ ebp - 0x112 ]
push eax
movzx eax [ ebp - 0x116 ]
push eax
movzx eax [ ebp - 0x118 ]
push eax
call sub_444ed1
add esp 0x1c
mov [ edi + 0x1c ] eax
cmp [ ebp - 0x24c ] ebx
jne r-xdata
push edi
push [ ebp - 0x25c ]
call sub_444ba5
push [ ebp - 0x25c ]
mov esi eax
call sub_42efc4
add esp 0xc
mov eax esi
jmp r-xdata
cmp [ ebp - 0x25c ] ebx
je r-xdata
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x24c ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x248 ] ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
push 0xffffffff
push ebx
push ebx
push ebx
push 0x1
push 0x1
push 0x7bc
mov [ ebp - 0x258 ] 0x10
mov [ ebp - 0x23c ] ebx
mov [ ebp - 0x238 ] ebx
mov [ ebp - 0x22c ] bl
call sub_444ed1
mov esi [ ebp - 0x260 ]
add esp 0x1c
mov [ edi + 0x1c ] eax
mov [ edi + 0x18 ] eax
mov [ edi + 0x20 ] eax
jmp r-xdata
push [ ebp - 0x25c ]
call sub_4229cf
pop ecx
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x264 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
jmp r-xdata
push esi
push [ ebp - 0x258 ]
call sub_43158f
mov [ edi + 0x6 ] ax
xor eax eax
inc eax
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x238 ]
pop ecx
pop ecx
mov [ edi + 0x14 ] eax
cmp [ ebp - 0x23c ] ebx
je r-xdata
movzx eax [ ebp - 0x10c ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x10e ]
push eax
movzx eax [ ebp - 0x110 ]
push eax
movzx eax [ ebp - 0x112 ]
push eax
movzx eax [ ebp - 0x116 ]
push eax
movzx eax [ ebp - 0x118 ]
push eax
call sub_444ed1
add esp 0x1c
mov [ edi + 0x18 ] eax
cmp [ ebp - 0x254 ] ebx
jne r-xdata
xor eax eax
mov [ edi + 0x4 ] ax
mov [ edi + 0xc ] ax
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x268 ]
dec eax
mov [ edi ] eax
mov [ edi + 0x10 ] eax
mov eax [ ebp - 0x26c ]
jmp r-xdata
or [ ebp - 0x26c ] 0xffffffff
mov [ edi + 0x14 ] ebx
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x254 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x250 ] ebx
jne r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x264 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
jmp r-xdata
movzx eax [ ebp - 0x10c ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x10e ]
push eax
movzx eax [ ebp - 0x110 ]
push eax
movzx eax [ ebp - 0x112 ]
push eax
movzx eax [ ebp - 0x116 ]
push eax
movzx eax [ ebp - 0x118 ]
push eax
call sub_444ed1
add esp 0x1c
push [ ebp - 0x25c ]
mov [ edi + 0x20 ] eax
call [ FindClose@IAT ]
sub_431b50
push 0x68
push r--data
call sub_4450e0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x6c ] edi
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x64 ] ebx
xor eax eax
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
push 0x30
push ebx
push esi
call sub_4264e0
add esp 0xc
cmp edi 0xfffffffe
jne r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x16
cmp edi ebx
jl r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x9
jmp r-xdata
call sub_445128
retn
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x9
jmp r-xdata
cmp edi [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
call sub_42b1b2
mov eax edi
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
mov [ ebp - 0x68 ] eax
and edi 0x1f
shl edi 0x6
mov eax [ eax ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push [ ebp - 0x6c ]
call sub_4307c2
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x68 ]
mov eax [ eax ]
test [ eax + edi + 0x4 ] 0x1
jne r-xdata
push [ eax + edi ]
call [ GetFileType@IAT ]
and eax 0xffff7fff
cmp eax 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x9
xor eax eax
mov [ esi + 0x6 ] ax
mov [ esi + 0xc ] ax
mov [ esi + 0xa ] ax
mov [ esi + 0x4 ] ax
inc eax
mov [ esi + 0x8 ] ax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x68 ]
mov eax [ eax ]
push [ eax + edi ]
call [ GetFileInformationByHandle@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_425745
pop ecx
jmp r-xdata
movzx eax [ esi + 0x6 ]
test [ ebp - 0x60 ] 0x1
je r-xdata
mov ecx 0x2000
jmp r-xdata
cmp eax 0x3
je r-xdata
or [ ebp - 0x64 ] 0xffffffff
or eax 0x1b6
or eax 0x124
jmp r-xdata
mov [ esi + 0x6 ] cx
mov ecx [ ebp - 0x6c ]
mov [ esi ] ecx
mov [ esi + 0x10 ] ecx
xor ecx ecx
inc ecx
mov [ esi + 0x8 ] cx
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi + 0xc ] cx
mov [ esi + 0xa ] cx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
cmp eax 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x48 ] ebx
jne r-xdata
mov [ esi + 0x6 ] ax
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push ebx
lea eax [ ebp - 0x68 ]
push eax
push ebx
push ebx
push ebx
mov eax [ ebp - 0x68 ]
mov eax [ eax ]
push [ eax + edi ]
call [ PeekNamedPipe@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x68 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
mov [ esi + 0x14 ] ebx
jmp r-xdata
mov ecx 0x1000
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431e98
mov eax [ ebp - 0x64 ]
push 0xffffffff
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x26 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
call sub_431ea2
add esp 0x1c
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] edx
cmp [ ebp - 0x54 ] ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x50 ] ebx
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x24 ]
mov [ esi + 0x1c ] eax
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x26 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
call sub_431ea2
add esp 0x1c
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
cmp [ ebp - 0x5c ] ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x26 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
call sub_431ea2
add esp 0x1c
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] edx
mov eax [ ebp - 0x3c ]
mov [ esi + 0x14 ] eax
movzx eax [ esi + 0x6 ]
or eax 0x8000
mov [ esi + 0x6 ] ax
mov [ esi ] ebx
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_431ea2
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
add esi 0xfffff894
push edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] eax
cmp esi 0x46
jl r-xdata
call sub_42571f
mov [ eax ] 0x16
or eax 0xffffffff
or edx eax
cmp esi 0x44c
jg r-xdata
lea eax [ ebx - 0x1 ]
cmp eax 0xb
ja r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
cmp [ ebp + 0x18 ] 0x3b
ja r-xdata
cmp [ ebp + 0x1c ] 0x3b
ja r-xdata
cmp [ ebp + 0x10 ] 0x1
jl r-xdata
lea eax [ ebx * 4 + rw-data ]
mov ecx [ eax - 0x4 ]
mov eax [ eax ]
sub eax ecx
mov edi 0x190
cmp eax [ ebp + 0x10 ]
jge r-xdata
add ecx [ ebp + 0x10 ]
mov eax esi
and eax 0x80000003
mov [ ebp - 0x2c ] ecx
jns r-xdata
mov eax esi
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ esi + 0x76c ]
cdq
mov ecx edi
idiv ecx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ esi + 0x76c ]
cdq
mov ebx edi
idiv ebx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
call sub_42ffb0
lea eax [ ebp - 0x34 ]
push eax
call sub_42f76b
pop ecx
test eax eax
jne r-xdata
cmp ebx 0x2
jle r-xdata
mov ebx [ ebp - 0x38 ]
cmp ebx 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
lea eax [ ebp - 0x3c ]
push eax
call sub_42f798
pop ecx
test eax eax
jne r-xdata
inc [ ebp - 0x2c ]
cmp [ ebp + 0x10 ] 0x1d
jg r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_42f7c5
pop ecx
test eax eax
jne r-xdata
lea eax [ esi + 0x12b ]
cdq
idiv edi
push 0x64
pop ebx
push 0x0
push 0x16d
mov edi eax
lea eax [ esi - 0x1 ]
cdq
idiv ebx
sub edi eax
lea eax [ esi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ edi + eax - 0x11 ]
cdq
mov ebx eax
mov [ ebp - 0x30 ] edx
mov eax esi
cdq
sub eax 0x46
sbb edx 0x0
push edx
push eax
call sub_42b3f0
add ebx eax
mov eax [ ebp - 0x30 ]
adc eax edx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x2c ]
cdq
add ebx eax
mov eax [ ebp - 0x30 ]
adc eax edx
xor edi edi
push edi
push 0x18
push eax
push ebx
call sub_42b3f0
mov ecx eax
mov eax [ ebp + 0x14 ]
mov ebx edx
cdq
push edi
add ecx eax
push 0x3c
adc ebx edx
push ebx
push ecx
call sub_42b3f0
mov ecx eax
mov eax [ ebp + 0x18 ]
mov ebx edx
cdq
push edi
add ecx eax
push 0x3c
adc ebx edx
push ebx
push ecx
call sub_42b3f0
mov ecx [ ebp + 0x1c ]
mov edi eax
mov eax [ ebp - 0x40 ]
mov ebx edx
cdq
add edi eax
adc ebx edx
mov eax ecx
cdq
add edi eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
adc ebx edx
mov [ ebp - 0x14 ] esi
dec eax
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] ecx
je r-xdata
mov eax [ ebp - 0x3c ]
cdq
add edi eax
adc ebx edx
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov eax edi
mov edx ebx
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_430037
pop ecx
test eax eax
je r-xdata
sub_432109
mov edi edi
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x214 ] 0x0
push ebx
push esi
push edi
mov edi [ GetCurrentDirectoryW@IAT ]
lea ebx [ ebp - 0x210 ]
mov eax ebx
push eax
push 0x105
call edi
mov esi eax
cmp esi 0x104
jle r-xdata
xor edi edi
test esi esi
je r-xdata
lea eax [ esi + 0x1 ]
push 0x2
push eax
mov [ ebp - 0x218 ] eax
call sub_429301
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0xc
cmp [ ebx + 0x2 ] 0x3a
jne r-xdata
mov [ ebp - 0x214 ] 0x1
test esi esi
je r-xdata
call sub_42571f
mov [ eax ] 0xc
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
push ebx
call sub_4229cf
pop ecx
cmp [ ebp - 0x214 ] 0x0
je r-xdata
movzx eax [ ebx ]
cmp eax 0x61
jb r-xdata
push ebx
push [ ebp - 0x218 ]
call edi
mov esi eax
lea edi [ eax - 0x40 ]
jmp r-xdata
cmp eax 0x7a
ja r-xdata
add eax 0xffffffe0
sub_4321d7
push 0x18
push r--data
call sub_4450e0
mov esi [ ebp + 0x8 ]
cmp esi 0x1
jl r-xdata
call sub_425732
mov [ eax ] 0xf
call sub_42571f
mov [ eax ] 0xd
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
cmp esi 0x1a
jle r-xdata
call sub_445128
retn
push 0x7
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
add esi 0x40
mov [ ebp - 0x24 ] si
push 0x3a
pop eax
mov [ ebp - 0x22 ] ax
xor eax eax
mov [ ebp - 0x20 ] ax
lea eax [ ebp - 0x24 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_425745
pop ecx
or [ ebp - 0x28 ] 0xffffffff
and [ ebp - 0x28 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43226a
mov eax [ ebp - 0x28 ]
sub_432273
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_428932
mov ebx [ ebp + 0x8 ]
cmp ebx 0xff
jbe r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + ebx + 0x1d ] 0x10
je r-xdata
mov eax ebx
shr eax 0x8
movzx ecx al
mov [ ebp - 0x4 ] al
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x3 ] bl
test [ ecx + eax + 0x1d ] 0x4
jne r-xdata
mov eax ebx
movzx eax [ eax + ebx + 0x11d ]
jmp r-xdata
push 0x1
push [ eax + 0x4 ]
lea ecx [ ebp - 0x8 ]
push 0x2
push ecx
push 0x2
lea ecx [ ebp - 0x4 ]
push ecx
push 0x100
push [ eax + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
call sub_428bcf
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
add eax ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_43232c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov esi [ ebp - 0xc ]
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437560
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ecx ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ecx ]
neg eax
sbb eax eax
and eax ecx
push edi
cmp [ eax ] bl
jne r-xdata
mov dl [ eax ]
movzx edi dl
test [ edi + esi + 0x1d ] 0x4
je r-xdata
cmp [ eax ] bl
jne r-xdata
cmp dl [ ecx ]
je r-xdata
cmp dl [ ecx ]
jne r-xdata
pop edi
movzx eax [ ecx ]
test [ eax + esi + 0x1d ] 0x4
je r-xdata
inc eax
lea edx [ eax + 0x1 ]
cmp [ edx ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
je r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
inc ecx
cmp [ ecx ] bl
je r-xdata
mov eax edx
jmp r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
sub_432408
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4264e0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_428912
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_421e20
pop ecx
cmp eax ebx
je r-xdata
call sub_437be0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_4324ef
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_432408
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4325d0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_44418c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_44418c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_432628
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_4326dd
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
pop ebp
retn
sub_432710
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_4327ca
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_42e978
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_42e978
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_42e978
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_42e978
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_432fc9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_4229cf
push [ esi + 0x8 ]
call sub_4229cf
push [ esi + 0xc ]
call sub_4229cf
push [ esi + 0x10 ]
call sub_4229cf
push [ esi + 0x14 ]
call sub_4229cf
push [ esi + 0x18 ]
call sub_4229cf
push [ esi ]
call sub_4229cf
push [ esi + 0x20 ]
call sub_4229cf
push [ esi + 0x24 ]
call sub_4229cf
push [ esi + 0x28 ]
call sub_4229cf
push [ esi + 0x2c ]
call sub_4229cf
push [ esi + 0x30 ]
call sub_4229cf
push [ esi + 0x34 ]
call sub_4229cf
push [ esi + 0x1c ]
call sub_4229cf
push [ esi + 0x38 ]
call sub_4229cf
push [ esi + 0x3c ]
call sub_4229cf
add esp 0x40
push [ esi + 0x40 ]
call sub_4229cf
push [ esi + 0x44 ]
call sub_4229cf
push [ esi + 0x48 ]
call sub_4229cf
push [ esi + 0x4c ]
call sub_4229cf
push [ esi + 0x50 ]
call sub_4229cf
push [ esi + 0x54 ]
call sub_4229cf
push [ esi + 0x58 ]
call sub_4229cf
push [ esi + 0x5c ]
call sub_4229cf
push [ esi + 0x60 ]
call sub_4229cf
push [ esi + 0x64 ]
call sub_4229cf
push [ esi + 0x68 ]
call sub_4229cf
push [ esi + 0x6c ]
call sub_4229cf
push [ esi + 0x70 ]
call sub_4229cf
push [ esi + 0x74 ]
call sub_4229cf
push [ esi + 0x78 ]
call sub_4229cf
push [ esi + 0x7c ]
call sub_4229cf
add esp 0x40
push [ esi + 0x80 ]
call sub_4229cf
push [ esi + 0x84 ]
call sub_4229cf
push [ esi + 0x88 ]
call sub_4229cf
push [ esi + 0x8c ]
call sub_4229cf
push [ esi + 0x90 ]
call sub_4229cf
push [ esi + 0x94 ]
call sub_4229cf
push [ esi + 0x98 ]
call sub_4229cf
push [ esi + 0x9c ]
call sub_4229cf
push [ esi + 0xa0 ]
call sub_4229cf
push [ esi + 0xa4 ]
call sub_4229cf
push [ esi + 0xa8 ]
call sub_4229cf
push [ esi + 0xbc ]
call sub_4229cf
push [ esi + 0xc0 ]
call sub_4229cf
push [ esi + 0xc4 ]
call sub_4229cf
push [ esi + 0xc8 ]
call sub_4229cf
push [ esi + 0xcc ]
call sub_4229cf
add esp 0x40
push [ esi + 0xd0 ]
call sub_4229cf
push [ esi + 0xb8 ]
call sub_4229cf
push [ esi + 0xd8 ]
call sub_4229cf
push [ esi + 0xdc ]
call sub_4229cf
push [ esi + 0xe0 ]
call sub_4229cf
push [ esi + 0xe4 ]
call sub_4229cf
push [ esi + 0xe8 ]
call sub_4229cf
push [ esi + 0xec ]
call sub_4229cf
push [ esi + 0xd4 ]
call sub_4229cf
push [ esi + 0xf0 ]
call sub_4229cf
push [ esi + 0xf4 ]
call sub_4229cf
push [ esi + 0xf8 ]
call sub_4229cf
push [ esi + 0xfc ]
call sub_4229cf
push [ esi + 0x100 ]
call sub_4229cf
push [ esi + 0x104 ]
call sub_4229cf
push [ esi + 0x108 ]
call sub_4229cf
add esp 0x40
push [ esi + 0x10c ]
call sub_4229cf
push [ esi + 0x110 ]
call sub_4229cf
push [ esi + 0x114 ]
call sub_4229cf
push [ esi + 0x118 ]
call sub_4229cf
push [ esi + 0x11c ]
call sub_4229cf
push [ esi + 0x120 ]
call sub_4229cf
push [ esi + 0x124 ]
call sub_4229cf
push [ esi + 0x128 ]
call sub_4229cf
push [ esi + 0x12c ]
call sub_4229cf
push [ esi + 0x130 ]
call sub_4229cf
push [ esi + 0x134 ]
call sub_4229cf
push [ esi + 0x138 ]
call sub_4229cf
push [ esi + 0x13c ]
call sub_4229cf
push [ esi + 0x140 ]
call sub_4229cf
push [ esi + 0x144 ]
call sub_4229cf
push [ esi + 0x148 ]
call sub_4229cf
add esp 0x40
push [ esi + 0x14c ]
call sub_4229cf
push [ esi + 0x150 ]
call sub_4229cf
push [ esi + 0x154 ]
call sub_4229cf
push [ esi + 0x158 ]
call sub_4229cf
push [ esi + 0x15c ]
call sub_4229cf
push [ esi + 0x160 ]
call sub_4229cf
add esp 0x18
sub_433340
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_429301
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_4327ca
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_432fc9
push edi
call sub_4229cf
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_4333bd
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_4333ed
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
push esi
call sub_4229cf
pop ecx
sub_433456
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_429301
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_4292bc
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_4229cf
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_4292bc
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42e978
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_4333ed
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_4229cf
push [ esi + 0xbc ]
call sub_4229cf
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_4229cf
push [ ebp - 0x8 ]
call sub_4229cf
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_433646
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_433676
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4229cf
pop ecx
push esi
call sub_4229cf
pop ecx
sub_433774
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_429301
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_4292bc
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_4229cf
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_4292bc
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42e978
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42e978
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42e978
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_4229cf
push [ ebp - 0x8 ]
call sub_4229cf
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_433676
push ebx
call sub_4229cf
push [ ebp - 0x8 ]
call sub_4229cf
push [ ebp - 0x4 ]
call sub_4229cf
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_4229cf
push [ esi + 0xb0 ]
call sub_4229cf
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_433ad7
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_433b06
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_4264e0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_433b6a
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_4324ef
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_428bcf
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_428bcf
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_4264e0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_433cfa
push 0xc
push r--data
call sub_42ad20
call sub_42a0de
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_433d95
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_42ad65
retn
push 0x20
call sub_429c09
cmp esi rw-data
je r-xdata
push esi
call sub_4229cf
pop ecx
sub_433d9e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_428932
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_433e1a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_433d9e
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_433b06
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4264e0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_433ad7
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_433b6a
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4264e0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_433ad7
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_434003
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_434041
push 0x14
push r--data
call sub_42ad20
or [ ebp - 0x20 ] 0xffffffff
call sub_42a0de
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_433cfa
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_433d9e
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_4292bc
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_42ad65
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_433e1a
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_4229cf
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_4229cf
pop ecx
push 0xd
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4341a2
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_4229cf
pop ecx
sub_4341f9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_434266
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_445230
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_4342dc
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_42eea0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_42eea0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_4438b7
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_434360
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_434385
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_4343b6
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_4343d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42a0de
mov edx edi
mov esi eax
call sub_434385
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_445230
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_434360
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_434478
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_4343b6
push esi
mov edi eax
call sub_425c60
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_4344d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42a0de
mov edx edi
lea esi [ eax + 0x9c ]
call sub_434385
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_445230
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_445230
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_445230
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_445359
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_445230
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_425c60
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_434360
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_425c60
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_434478
pop ecx
pop ecx
test eax eax
je r-xdata
sub_4346a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42a0de
mov edx edi
lea esi [ eax + 0x9c ]
call sub_434385
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_445230
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_445230
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_434478
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_434764
push [ esi + 0x4 ]
call sub_425c60
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4343d1
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_434790
push [ esi ]
call sub_425c60
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_425c60
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_4343b6
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_4344d3
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_4347f7
push [ esi ]
call sub_425c60
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_4343b6
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_4346a4
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_434833
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_42a0de
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_434266
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_4342dc
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_425c60
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4343d1
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_4347f7
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_434266
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_434790
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_4347f7
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_434790
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_42b385
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_4294a7
add esp 0x10
sub_434a4a
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_434a86
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_434af6
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_435ebe ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_435f3e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_437412 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_437492
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_437560
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_4375d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor edx edx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
add esi 0x2
xor edi edi
cmp [ esi ] di
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
movzx eax [ esi ]
xor ecx ecx
inc ecx
push edi
cmp ax dx
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_445c85
add esp 0x14
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
push 0x20
pop edi
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] di
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
add esi 0x2
push 0x3
push esi
push r--data
call sub_445e28
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x6
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] di
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] di
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_445d8a
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_445d8a
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_445d8a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_43788f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_430759
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_42571f
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_425745
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_437904
push 0x10
push r--data
call sub_42ad20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_42ad65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_425732
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_43788f
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4379d0
mov eax [ ebp - 0x1c ]
sub_4379d8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push esi
push edi
call sub_42b35f
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
cmp [ edi + 0x4 ] ebx
jge r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
push esi
call sub_437904
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
pop esi
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
mov [ ebp - 0xc ] ebx
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx esi
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax ebx
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
inc ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
and [ ebp - 0xc ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0x8 ]
call sub_437904
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_437904
add esp 0xc
test eax eax
jns r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_437b6c
push 0xc
push r--data
call sub_42ad20
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4379d8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_437bc7
mov eax [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
call sub_42ad65
retn
sub_437c0c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_428932
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_438766
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4324ef
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_437cc4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437c0c
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_437cf6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_42571f
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_429ec9
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_437d78
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_424f97
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_4326dd
pop ecx
mov ebx eax
call sub_42571f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_4264e0
add esp 0xc
sub_437df0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_437e9c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_42571f
mov [ eax ] 0xc
call sub_42571f
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_429ef1
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_42571f
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_4256dd
pop ecx
mov [ edi ] eax
call sub_42b1b2
call esi
push eax
call sub_4256dd
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_437f8c
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_437fb0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_437ff0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_438040
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_42adb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_437fb0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_437ff0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4380fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_438351
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_4383b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_42571f
mov [ eax ] 0x9
call sub_42b1b2
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_43840f
push 0xc
push r--data
call sub_42ad20
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_422a09
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_422b21
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_422a09
add eax ebx
push eax
call sub_43dbc1
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_422a09
add eax ebx
push eax
call sub_42b76d
mov [ ebp - 0x1c ] eax
call sub_422a09
add eax ebx
push eax
push edi
call sub_43dc5d
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4384a3
mov eax [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
call sub_42ad65
retn
sub_438531
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
neg edx
sbb edx edx
and edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_438571
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x2a
call sub_42571f
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_42571f
push 0x22
pop esi
mov [ eax ] esi
call sub_42b1b2
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_4264e0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_4264e0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4386e3
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_428932
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_438571
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_438734
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp + 0xc ]
call sub_425b9b
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_438571
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
sub_438766
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_438985
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4389ab
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4389d1
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4389f7
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_438a1d
mov edi edi
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi + 0x8 ]
cmp al 0x70
je r-xdata
xor ecx ecx
cmp al bl
sete cl
mov eax ecx
cmp bl 0x70
je r-xdata
cmp al 0x73
je r-xdata
xor edx edx
inc edx
cmp al 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp bl 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax 0x810
and ecx eax
neg ecx
sbb ecx ecx
and edx eax
neg ecx
neg edx
sbb edx edx
neg edx
cmp ecx edx
jne r-xdata
mov dl 0x64
cmp al dl
je r-xdata
test edx edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x69
je r-xdata
xor eax eax
inc eax
cmp bl 0x69
je r-xdata
cmp al dl
je r-xdata
cmp al 0x6f
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp bl 0x6f
je r-xdata
cmp al 0x69
je r-xdata
cmp al 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp bl 0x75
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x78
je r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp bl 0x78
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x58
je r-xdata
cmp al 0x78
je r-xdata
cmp bl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x69
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x6f
je r-xdata
cmp bl dl
je r-xdata
cmp bl 0x75
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x58
jne r-xdata
sub_438b48
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_42b1fb
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_438b7b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_438b48
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_438ba1
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_438b48
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_438b48
sub_438c18
mov edi edi
push ebp
mov ebp esp
sub esp 0x8d8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x87c ]
mov [ ebp - 0x89c ] esi
mov [ ebp - 0x854 ] eax
mov [ ebp - 0x8b8 ] edi
mov [ ebp - 0x850 ] edi
mov [ ebp - 0x8a0 ] edi
mov [ ebp - 0x8b4 ] edi
mov [ ebp - 0x8a8 ] edi
call sub_428932
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x898 ] edi
call sub_42571f
mov [ ebp - 0x8bc ] eax
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x870 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
push esi
call sub_42b35f
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x874 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x880 ] edi
mov [ ebp - 0x8d8 ] ebx
mov [ ebp - 0x864 ] edi
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov eax [ ebp - 0x8d8 ]
or [ ebp - 0x894 ] 0xffffffff
or [ ebp - 0x86c ] 0xffffffff
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x888 ] edi
mov bl [ eax ]
mov [ ebp - 0x8ac ] edi
mov [ ebp - 0x8b0 ] edi
mov [ ebp - 0x890 ] edi
mov [ ebp - 0x858 ] edi
mov [ ebp - 0x85c ] bl
test bl bl
je r-xdata
cmp [ ebp - 0x860 ] edi
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
inc [ ebp - 0x864 ]
cmp [ ebp - 0x864 ] 0x2
jge r-xdata
mov edi eax
jmp r-xdata
cmp [ ebp - 0x870 ] 0x0
je r-xdata
xor edi edi
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor edi edi
jmp r-xdata
inc edi
cmp [ ebp - 0x880 ] 0x0
mov [ ebp - 0x884 ] edi
jl r-xdata
mov eax [ ebp - 0x880 ]
mov eax [ ebp - 0x874 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x864 ] 0x1
jne r-xdata
xor esi esi
cmp [ ebp - 0x8ac ] esi
je r-xdata
lea eax [ ebx - 0x20 ]
cmp al 0x58
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
cmp [ ebp - 0x860 ] 0x1
jne r-xdata
cmp [ ebp - 0x8ac ] 0x7
jne r-xdata
xor edx edx
xor eax eax
movsx eax bl
movzx eax [ eax + r--data ]
and eax 0xf
xor edx edx
jmp r-xdata
cmp [ ebp - 0x864 ] esi
jne r-xdata
cmp eax 0x8
je r-xdata
cmp [ edi ] 0x25
je r-xdata
mov ecx [ ebp - 0x8ac ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
xor esi esi
shr eax 0x4
inc esi
mov [ ebp - 0x8ac ] eax
cmp eax esi
jne r-xdata
cmp [ ebp - 0x894 ] esi
jl r-xdata
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8ac ]
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x860 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x854 ]
lea eax [ ebp - 0x648 ]
mov edi [ ebp - 0x884 ]
mov al [ edi ]
mov [ ebp - 0x85c ] al
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x860 ] esi
jne r-xdata
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push edi
call sub_446239
add esp 0xc
test eax eax
jle r-xdata
mov [ eax ] edx
add edx 0x4
dec ecx
je r-xdata
mov bl [ ebp - 0x85c ]
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push edi
call sub_446239
mov ecx [ ebp - 0x898 ]
add esp 0xc
dec eax
cmp [ ebp - 0x864 ] 0x0
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x86c ] eax
mov [ ebp - 0x884 ] edx
jne r-xdata
and [ ebp - 0x860 ] 0x0
xor edx edx
mov eax [ ebp - 0x898 ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ eax - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
mov edi edx
xor edx edx
test eax eax
js r-xdata
cmp [ ebp - 0x864 ] 0x0
jne r-xdata
dec ecx
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0x860 ] esi
jmp r-xdata
push 0x640
lea eax [ ebp - 0x64c ]
push 0x0
push eax
call sub_4264e0
add esp 0xc
mov [ eax ] edx
add edx 0x8
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x64
jge r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x854 ] edx
cmp esi [ ebp - 0x894 ]
jle r-xdata
dec ecx
je r-xdata
cmp eax [ ebp - 0x894 ]
jle r-xdata
dec ecx
dec ecx
jne r-xdata
mov [ ebp - 0x894 ] eax
sub_439f3c
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_42b1fb
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_439f6f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_439f3c
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_439f95
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_439f3c
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_439f3c
sub_439ff7
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x254 ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x23c ] eax
call sub_428932
call sub_42571f
mov [ ebp - 0x264 ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x248 ] 0x0
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
push esi
call sub_42b35f
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x228 ] esi
mov [ ebp - 0x244 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
cmp [ ebp - 0x248 ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x244 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x244 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x244 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x244 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_43ac0b ]
mov edi [ ebp - 0x21c ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x23c ] 0x0
lea eax [ ebp - 0x254 ]
push eax
movzx eax dl
push eax
call sub_438766
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x238 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x238 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jns r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_439f3c
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_439f3c
mov al [ ebx ]
inc ebx
mov [ ebp - 0x240 ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x238 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
add ebx 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add ebx 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x220 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x228 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x258 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x258 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov ecx [ ebp - 0x210 ]
test cl 0x40
je r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x21c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x274 ] 0x1
mov [ ebp - 0x211 ] dl
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x220 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push [ ebp - 0x260 ]
call sub_4229cf
and [ ebp - 0x260 ] 0x0
pop ecx
mov eax [ ebp - 0x238 ]
sub eax [ ebp - 0x228 ]
sub eax [ ebp - 0x234 ]
mov [ ebp - 0x268 ] eax
test cl 0xc
jne r-xdata
test ecx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x268 ] eax
jge r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x234 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_439f95
test [ ebp - 0x210 ] 0x8
pop ecx
pop ecx
je r-xdata
mov edi eax
jmp r-xdata
test cl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x254 ]
push eax
push [ ebp - 0x274 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x268 ]
lea eax [ ebp - 0x280 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
add [ ebp - 0x21c ] 0x4
mov eax [ ebp - 0x21c ]
mov esi [ eax - 0x4 ]
call sub_43855b
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x228 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x220 ] ecx
je r-xdata
mov edi [ ebp - 0x21c ]
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x228 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x23c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_4386c6
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x244 ] 0x0
inc eax
add eax 0x2
mov edi [ ebp - 0x264 ]
push eax
push [ ebp - 0x220 ]
lea eax [ ebp - 0x224 ]
call sub_439f95
pop ecx
pop ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_439f3c
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_4292bc
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x260 ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x234 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x220 ]
mov [ ebp - 0x270 ] eax
test edi edi
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x268 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x220 ] ebx
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ebx
call sub_437df0
add ecx 0x30
mov [ ebp - 0x268 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x278 ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx ebx
mov al 0x30
dec edi
call sub_439f3c
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_425c60
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x258 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x278 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_439f95
cmp [ ebp - 0x270 ] 0x0
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_439f3c
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x270 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x278 ]
push eax
add esi 0x2
call sub_4386c6
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x220 ]
mov ecx [ ebp - 0x220 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_43ac2b
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_4462ca
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_43ac6d
push 0xc
push r--data
call sub_42ad20
push 0x3
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_43ac2b
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43acaa
mov ax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_43acb3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_438766
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_42571f
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_43ade3
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_446300
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_43ae12
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_43ade3
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_43ae39
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_43ade3
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_43ade3
pop ecx
sub_43aea0
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_428932
call sub_42571f
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x44c ] bl
movzx ecx [ esi ]
xor edx edx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x41c ] ecx
cmp cx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x41c ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_43ba48 ]
movsx eax [ edx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop edx
mov [ ebp - 0x460 ] eax
cmp eax edx
ja r-xdata
mov edx [ ebp - 0x460 ]
mov edi [ ebp - 0x420 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push ecx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_43ade3
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] edx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea ebx [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x420 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
test eax eax
je r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_4229cf
and [ ebp - 0x43c ] 0x0
mov edi [ ebp - 0x430 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x428 ]
mov [ ebp - 0x41c ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x428 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_43ae39
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x470 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x468 ]
movsx eax [ ebp - 0x41c ]
push [ ebp - 0x40c ]
mov [ ebp - 0x420 ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x408 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
call sub_43855b
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_438766
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x428 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x8
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_43acb3
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x460 ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x418 ]
call sub_43ae39
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_43ade3
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_4292bc
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc ebx
mov [ ebp - 0x410 ] ebx
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ebx
call sub_437df0
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_43ade3
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_43ade3
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_425c60
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_43acb3
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_43ade3
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_43ba68
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_446300
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_43ba97
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_43ba68
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_43babe
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_43ba68
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_43ba68
pop ecx
sub_43bb25
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
call sub_428932
call sub_42571f
mov [ ebp - 0x464 ] eax
test esi esi
jne r-xdata
xor esi esi
cmp edi esi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x440 ] 0x0
je r-xdata
movzx edx [ edi ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x414 ] esi
mov [ ebp - 0x43c ] esi
mov [ ebp - 0x458 ] esi
mov [ ebp - 0x420 ] edx
cmp dx si
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop ecx
add edi ecx
mov [ ebp - 0x460 ] edi
cmp [ ebp - 0x418 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x43c ] esi
je r-xdata
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0x43c ] 0x7
jne r-xdata
xor eax eax
movzx eax dx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov esi [ ebp - 0x43c ]
imul eax eax 0x9
movzx eax [ eax + esi + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x43c ] eax
cmp eax esi
je r-xdata
mov edi [ ebp - 0x460 ]
mov ebx [ ebp - 0x41c ]
jmp [ eax * 4 + jump_table_43c6c5 ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x42c ]
push edx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x430 ] 0x1
call sub_43ba68
pop ecx
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
movzx eax [ edi ]
xor esi esi
mov [ ebp - 0x420 ] eax
cmp ax si
je r-xdata
or [ ebp - 0x408 ] ecx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x428 ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x428 ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x428 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x40c ] eax
test eax eax
jns r-xdata
movzx eax [ edi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x428 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ edi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ edi + 0x2 ] 0x32
jne r-xdata
add edi 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x40c ] esi
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add edi 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add edi ecx
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x420 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax ecx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
cmp eax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x454 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
mov ecx [ ebp - 0x40c ]
or [ ebp - 0x408 ] 0x40
lea edi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x414 ] eax
test ecx ecx
jns r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x420 ] edx
sub eax ecx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_4229cf
and [ ebp - 0x458 ] 0x0
pop ecx
mov edi [ ebp - 0x428 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x424 ]
mov [ ebp - 0x420 ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ecx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ecx
je r-xdata
cmp eax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x42c ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_43babe
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp ecx eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
mov esi [ DecodePointer@IAT ]
add ebx 0x8
mov [ ebp - 0x470 ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x468 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
call sub_43855b
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x430 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ecx
jne r-xdata
cmp eax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_438766
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x430 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x424 ] 0x1
cmp ecx 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov ecx eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x430 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_43acb3
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x43c ] 0x0
add eax ecx
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x42c ]
lea eax [ ebp - 0x418 ]
call sub_43babe
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x420 ]
jmp r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_43ba68
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
lea esi [ ecx + 0x15d ]
push esi
call sub_4292bc
mov edx [ ebp - 0x420 ]
pop ecx
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x418 ]
mov [ ebx ] eax
mov ax [ ebp - 0x418 ]
mov [ ebx ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc edi
mov [ ebp - 0x410 ] edi
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x420 ]
cdq
push edx
push eax
push edi
push ebx
call sub_437df0
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x420 ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x42c ]
lea esi [ ebp - 0x418 ]
call sub_43ba68
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_43ba68
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_425c60
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_43acb3
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_43ba68
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_43c6e5
mov edi edi
push ebp
mov ebp esp
push esi
mov si [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
movzx eax [ edi + 0x8 ]
cmp eax 0x70
je r-xdata
xor ecx ecx
cmp ax si
sete cl
mov eax ecx
cmp si 0x70
je r-xdata
cmp eax 0x73
je r-xdata
xor edx edx
inc edx
cmp eax 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp si 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp si 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov ecx [ ebp + 0x14 ]
shr eax 0x5
shr ecx 0x5
not eax
not ecx
xor eax ecx
test al 0x1
jne r-xdata
push 0x69
pop edi
push 0x64
pop edx
cmp ax dx
je r-xdata
test edx edx
jne r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp ax di
je r-xdata
xor eax eax
inc eax
cmp si di
je r-xdata
cmp ax dx
je r-xdata
cmp eax 0x6f
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp si 0x6f
je r-xdata
cmp ax di
je r-xdata
cmp eax 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp si 0x75
je r-xdata
cmp eax 0x6f
je r-xdata
cmp eax 0x78
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp si 0x78
je r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x58
je r-xdata
cmp si 0x58
je r-xdata
cmp eax 0x78
je r-xdata
cmp si dx
je r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x58
je r-xdata
cmp si di
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp si 0x6f
je r-xdata
cmp si dx
je r-xdata
cmp si 0x75
je r-xdata
cmp si 0x78
je r-xdata
cmp si 0x58
jne r-xdata
sub_43c830
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_446300
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_43c85f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_43c830
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_43c886
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_43c830
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_43c830
pop ecx
sub_43c8ed
mov edi edi
push ebp
mov ebp esp
sub esp 0xad0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0xa70 ]
mov [ ebp - 0xaa0 ] ebx
mov [ ebp - 0xa4c ] eax
mov [ ebp - 0xab0 ] edi
mov [ ebp - 0xa48 ] edi
mov [ ebp - 0xa98 ] edi
mov [ ebp - 0xab8 ] edi
mov [ ebp - 0xa9c ] edi
call sub_428932
or [ ebp - 0xa54 ] 0xffffffff
mov [ ebp - 0xa94 ] edi
call sub_42571f
mov [ ebp - 0xac4 ] eax
cmp ebx edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0xa64 ] 0x0
je r-xdata
mov [ ebp - 0xa74 ] edi
mov [ ebp - 0xad0 ] esi
mov [ ebp - 0xa5c ] edi
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xa68 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ebx [ esi ]
or [ ebp - 0xa90 ] 0xffffffff
or [ ebp - 0xa78 ] 0xffffffff
or [ ebp - 0xa54 ] 0xffffffff
mov [ ebp - 0xa88 ] edi
mov [ ebp - 0xaac ] edi
mov [ ebp - 0xab4 ] edi
mov [ ebp - 0xa84 ] edi
mov [ ebp - 0xa50 ] edi
mov [ ebp - 0xa7c ] esi
mov [ ebp - 0xa58 ] ebx
cmp bx di
je r-xdata
cmp [ ebp - 0xa54 ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
inc [ ebp - 0xa5c ]
cmp [ ebp - 0xa5c ] 0x2
jge r-xdata
jmp r-xdata
cmp [ ebp - 0xa64 ] 0x0
je r-xdata
mov esi [ ebp - 0xad0 ]
xor edi edi
jmp r-xdata
push 0x2
pop edx
add esi edx
cmp [ ebp - 0xa74 ] 0x0
mov [ ebp - 0xa7c ] esi
jl r-xdata
mov eax [ ebp - 0xa74 ]
mov eax [ ebp - 0xa68 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xa5c ] 0x1
jne r-xdata
cmp [ ebp - 0xaac ] 0x0
je r-xdata
lea eax [ ebx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0xa54 ] 0x1
jne r-xdata
cmp [ ebp - 0xaac ] 0x7
jne r-xdata
xor eax eax
movzx eax bx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
cmp edi 0x8
je r-xdata
cmp [ esi ] 0x25
je r-xdata
mov ecx [ ebp - 0xaac ]
imul eax eax 0x9
movzx edi [ eax + ecx + r--data ]
shr edi 0x4
mov [ ebp - 0xaac ] edi
cmp edi 0x1
jne r-xdata
xor edi edi
cmp [ ebp - 0xa90 ] edi
jl r-xdata
cmp edi 0x7
ja r-xdata
mov ecx [ ebp - 0xa78 ]
jmp [ edi * 4 + jump_table_43dba1 ]
cmp [ ebp - 0xa54 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xa4c ]
lea esi [ ebp - 0x640 ]
mov esi [ ebp - 0xa7c ]
movzx eax [ esi ]
mov [ ebp - 0xa58 ] eax
test ax ax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
xor eax eax
or [ ebp - 0xa50 ] 0xffffffff
mov [ ebp - 0xac0 ] eax
mov [ ebp - 0xab8 ] eax
mov [ ebp - 0xa84 ] eax
mov [ ebp - 0xa98 ] eax
mov [ ebp - 0xa48 ] eax
mov [ ebp - 0xa9c ] eax
jmp r-xdata
movzx eax bx
sub eax 0x20
je r-xdata
cmp bx 0x2a
jne r-xdata
and [ ebp - 0xa50 ] 0x0
jmp r-xdata
cmp bx 0x2a
jne r-xdata
movzx eax bx
cmp eax 0x49
je r-xdata
movzx eax bx
cmp eax 0x64
jg r-xdata
cmp [ ebp - 0xa54 ] 0x1
jne r-xdata
push 0xa
lea eax [ ebp - 0xa94 ]
push eax
push esi
call sub_4466c4
add esp 0xc
test eax eax
jle r-xdata
mov [ esi ] eax
add eax 0x4
dec ecx
je r-xdata
mov ebx [ ebp - 0xa58 ]
cmp [ ebp - 0xa5c ] 0x1
jne r-xdata
cmp [ ebp - 0xa54 ] 0x1
je r-xdata
or [ ebp - 0xa48 ] edx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0xa84 ]
imul eax eax 0xa
movzx ecx bx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0xa84 ] eax
jmp r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa50 ]
imul eax eax 0xa
movzx ecx bx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0xa50 ] eax
jmp r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
push 0xa
lea eax [ ebp - 0xa94 ]
push eax
push esi
call sub_4466c4
mov ecx [ ebp - 0xa94 ]
add esp 0xc
dec eax
cmp [ ebp - 0xa5c ] 0x0
lea edx [ ecx + 0x2 ]
mov [ ebp - 0xa78 ] eax
mov [ ebp - 0xa7c ] edx
jne r-xdata
and [ ebp - 0xa54 ] 0x0
push 0x2
pop edx
mov eax [ ebp - 0xa94 ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ esi - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp - 0xaa0 ]
push ebx
lea esi [ ebp - 0xa74 ]
mov [ ebp - 0xa9c ] 0x1
call sub_43c830
jmp r-xdata
cmp [ ebp - 0xa54 ] 0xffffffff
jne r-xdata
or [ ebp - 0xa48 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
push 0xa
lea eax [ ebp - 0xa94 ]
push eax
push esi
call sub_4466c4
mov ecx [ ebp - 0xa94 ]
add esp 0xc
dec eax
cmp [ ebp - 0xa5c ] 0x0
lea edx [ ecx + 0x2 ]
mov [ ebp - 0xa7c ] edx
jne r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
push 0xa
lea eax [ ebp - 0xa94 ]
push eax
push esi
call sub_4466c4
mov ecx [ ebp - 0xa94 ]
add esp 0xc
dec eax
cmp [ ebp - 0xa5c ] 0x0
lea edx [ ecx + 0x2 ]
mov [ ebp - 0xa7c ] edx
je r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0xa48 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0xa48 ] 0x40
cmp eax 0x53
jg r-xdata
push 0x2
mov esi edx
pop edx
test eax eax
js r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
mov [ esi ] eax
add eax 0x8
jmp r-xdata
dec ecx
je r-xdata
pop ecx
jmp r-xdata
or [ ebp - 0xa48 ] 0x1
jmp r-xdata
sub eax edx
je r-xdata
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov eax [ eax ]
test eax eax
js r-xdata
mov [ ebp - 0xa84 ] eax
test eax eax
jge r-xdata
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov eax [ eax ]
mov [ ebp - 0xa50 ] eax
test eax eax
jge r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0xa48 ] 0x8000
mov [ ebp - 0xa7c ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0xa50 ]
cmp ebx 0xffffffff
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0xa50 ] 0x8
cmp eax 0x65
jl r-xdata
test ebx 0x1000
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
sub eax 0x58
je r-xdata
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0xa54 ] 0x1
jmp r-xdata
push 0x640
lea eax [ ebp - 0x644 ]
push 0x0
push eax
call sub_4264e0
add esp 0xc
mov [ ebp - 0xa4c ] eax
dec ecx
je r-xdata
or [ ebp - 0xa48 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0xa48 ] 0x4
neg [ ebp - 0xa84 ]
jmp r-xdata
cmp [ ecx ] 0x24
jne r-xdata
or [ ebp - 0xa50 ] 0xffffffff
jmp r-xdata
or [ ebp - 0xa48 ] 0x10000
jmp r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0xa48 ] 0xffff7fff
mov [ ebp - 0xa7c ] esi
jmp r-xdata
or [ ebp - 0xa48 ] 0x10
jmp r-xdata
add esi edx
or [ ebp - 0xa48 ] 0x1000
mov [ ebp - 0xa7c ] esi
jmp r-xdata
or [ ebp - 0xa48 ] 0x800
jmp r-xdata
xor edi edi
cmp [ ebp - 0xa54 ] edi
jne r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0xa80 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0xa48 ] 0x80
mov [ ebp - 0xa80 ] 0x10
je r-xdata
cmp [ ebp - 0xa54 ] 0x1
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x20
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
je r-xdata
cmp ecx 0x63
ja r-xdata
mov ecx [ ebp - 0xa4c ]
add ecx 0x8
mov [ ebp - 0xa4c ] ecx
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
jmp r-xdata
mov [ ebp - 0xab0 ] 0x7
jmp r-xdata
sub eax edx
je r-xdata
test [ ebp - 0xa48 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
cmp eax 0x64
jge r-xdata
dec ecx
dec ecx
jne r-xdata
or [ ebp - 0xa48 ] 0x8
jmp r-xdata
cmp [ ebp - 0xa78 ] 0x64
jge r-xdata
cmp eax 0x6f
je r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
mov [ ebp - 0xab0 ] 0x27
mov ebx [ ebp - 0xa48 ]
push 0x30
pop eax
mov [ ebp - 0xaa8 ] ax
mov eax [ ebp - 0xab0 ]
add eax 0x51
mov [ ebp - 0xaa6 ] ax
mov [ ebp - 0xa98 ] edx
jmp r-xdata
cmp [ ebp - 0xab8 ] 0x0
jne r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
or [ ebp - 0xa48 ] 0x40
cmp [ ebp - 0xa54 ] 0x1
jne r-xdata
cmp eax 0x69
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
cmp ecx 0x63
ja r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
test bl 0x40
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0xa48 ] 0x20
add ebx 0x20
mov [ ebp - 0xac0 ] 0x1
mov [ ebp - 0xa58 ] ebx
sub eax edx
je r-xdata
cmp eax [ ebp - 0xa90 ]
jle r-xdata
mov [ esi ] eax
lea eax [ ebp - 0xa4c ]
push eax
call sub_438c03
mov eax [ ebp - 0xa4c ]
pop ecx
jmp r-xdata
cmp eax [ ebp - 0xa90 ]
jle r-xdata
cmp eax 0x75
je r-xdata
cmp [ ebp - 0xa5c ] edi
jne r-xdata
test [ ebp - 0xa48 ] 0x20
mov [ ebp - 0xa60 ] eax
je r-xdata
cmp [ ebp - 0xab4 ] 0x0
je r-xdata
mov eax [ ebp - 0xa48 ]
test al 0x40
je r-xdata
cmp [ ebp - 0xa50 ] 0x0
lea edi [ ebp - 0xa44 ]
mov eax 0x200
mov [ ebp - 0xa60 ] edi
mov [ ebp - 0xa80 ] eax
jge r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
cmp eax 0x6e
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
mov eax [ ebp - 0xa78 ]
add eax eax
mov ecx [ ebp + eax * 8 - 0x640 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
jmp r-xdata
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
jne r-xdata
test [ ebp - 0xa48 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
sub eax edx
jne r-xdata
test [ ebp - 0xa48 ] 0x830
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0xa90 ] eax
inc edi
add esi 0x10
cmp edi [ ebp - 0xa90 ]
jle r-xdata
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
je r-xdata
mov [ ebp - 0xa90 ] eax
cmp eax 0x78
je r-xdata
add ecx ecx
mov eax [ ebp + ecx * 8 - 0x640 ]
mov eax [ eax ]
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] edi
jne r-xdata
cmp [ ebp - 0xa60 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
push [ ebp - 0xab4 ]
call sub_4229cf
and [ ebp - 0xab4 ] 0x0
mov edi [ ebp - 0xa84 ]
sub edi [ ebp - 0xa88 ]
sub edi [ ebp - 0xa98 ]
mov [ ebp - 0xa80 ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0xa50 ] 0x6
jmp r-xdata
cmp ecx 0x63
ja r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp eax 0x6f
jne r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
movzx eax [ eax - 0x4 ]
jmp r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
jne r-xdata
push ebx
push [ ebp - 0xa58 ]
push 0x3
jmp r-xdata
mov [ ecx ] 0x3
jmp r-xdata
cmp [ ebp - 0xa50 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
mov [ ebp - 0xa9c ] 0x1
jne r-xdata
or [ ebp - 0xa48 ] 0x20
jmp r-xdata
sub eax edx
jne r-xdata
mov [ ecx ] 0x1
push 0x2a
pop ecx
mov [ ebp + eax * 8 - 0x63c ] cx
push [ ebp - 0xa48 ]
push 0x2a
push 0x1
jmp r-xdata
cmp eax 0x58
je r-xdata
push [ ebp - 0xa48 ]
push [ ebp - 0xa58 ]
jmp r-xdata
mov [ ecx ] edx
mov cx [ ebp - 0xa58 ]
mov [ ebp + eax * 8 - 0x63c ] cx
mov eax [ ebp - 0xa60 ]
mov [ ebp - 0xa9c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xa60 ] eax
mov esi [ ebp - 0xa60 ]
mov [ ebp - 0xa88 ] edi
cmp ebx edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xa60 ] eax
push [ ebp - 0xa98 ]
mov edi [ ebp - 0xac4 ]
mov ebx [ ebp - 0xaa0 ]
lea eax [ ebp - 0xaa8 ]
push eax
lea eax [ ebp - 0xa74 ]
call sub_43c886
test [ ebp - 0xa48 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0xa50 ] eax
jle r-xdata
cmp bx 0x67
jne r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov esi [ eax - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0xa48 ]
mov [ ebp - 0xa80 ] 0x8
test bl bl
jns r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
xor edx edx
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
push ebx
push [ ebp - 0xa58 ]
push 0x4
jmp r-xdata
mov [ ecx ] 0x4
jmp r-xdata
push ecx
call sub_43c6e5
add esp 0x10
test eax eax
je r-xdata
mov cx [ ebp - 0xa58 ]
mov [ ebp + eax * 8 - 0x63c ] cx
mov [ ebp + eax * 8 - 0x638 ] ebx
jmp r-xdata
and [ ebp - 0xa48 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0xa50 ] eax
jle r-xdata
mov [ ebp - 0xa50 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0xa48 ] 0x100
test eax eax
jae r-xdata
add ecx ecx
mov eax [ ebp + ecx * 8 - 0x640 ]
mov eax [ eax ]
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xa60 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
movzx eax [ eax - 0x4 ]
jmp r-xdata
push ecx
call sub_43c6e5
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0xaac ] 0x0
push 0x2
jmp r-xdata
cmp ebx edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
cmp [ ebp - 0xa9c ] 0x0
jne r-xdata
test [ ebp - 0xa48 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0xaa8 ] cx
mov [ ebp - 0xa98 ] 0x1
mov ebx 0xa3
cmp [ ebp - 0xa50 ] ebx
jle r-xdata
mov [ ebp - 0xa50 ] eax
mov [ ebp - 0xa50 ] 0x1
jmp r-xdata
cmp [ ebp - 0xa78 ] 0x63
ja r-xdata
mov eax [ ebp - 0xa4c ]
add eax 0x8
mov [ ebp - 0xa4c ] eax
mov ecx [ eax - 0x8 ]
mov [ ebp - 0xacc ] ecx
mov eax [ eax - 0x4 ]
jmp r-xdata
push [ ebp - 0xa48 ]
push ebx
push 0x7
mov [ ecx ] 0x7
mov [ ebp + eax * 8 - 0x63c ] bx
jmp r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
call sub_43855b
test eax eax
je r-xdata
test ebx 0x8000
je r-xdata
or ebx 0x200
mov [ ebp - 0xa48 ] ebx
jmp r-xdata
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov eax [ eax ]
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov eax [ eax ]
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
movzx eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
movsx eax [ eax ]
jmp r-xdata
jmp r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0xa50 ] eax
mov [ ecx ] edx
push [ ebp - 0xa48 ]
push ebx
mov [ ebp - 0xa88 ] eax
test [ ebp - 0xa48 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0xa60 ] ecx
je r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
test [ ebp - 0xa48 ] 0x20
mov [ ebp - 0xabc ] eax
je r-xdata
jmp r-xdata
dec ebx
cmp [ eax ] di
je r-xdata
sub eax [ ebp - 0xa60 ]
lea ecx [ ebp - 0xa70 ]
movzx eax al
push ecx
push eax
call sub_438766
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0xa88 ]
mov edi [ ebp - 0xac4 ]
push [ ebp - 0xa60 ]
mov ebx [ ebp - 0xaa0 ]
lea eax [ ebp - 0xa74 ]
call sub_43c886
pop ecx
pop ecx
mov ebx [ ebp - 0xa88 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0xa80 ]
jmp r-xdata
mov eax [ ebp - 0xaa0 ]
push 0x20
lea esi [ ebp - 0xa74 ]
dec edi
call sub_43c830
cmp [ ebp - 0xa74 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov ebx [ ebp - 0xa58 ]
mov esi [ ebp - 0xa50 ]
add esi 0x15d
push esi
call sub_4292bc
pop ecx
mov [ ebp - 0xab4 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov ecx [ eax ]
mov [ ebp - 0xacc ] ecx
mov eax [ eax + 0x4 ]
mov esi [ DecodePointer@IAT ]
mov [ ebp - 0xac8 ] eax
lea eax [ ebp - 0xa70 ]
push eax
push [ ebp - 0xac0 ]
movsx eax bl
push [ ebp - 0xa50 ]
push eax
push [ ebp - 0xa80 ]
lea eax [ ebp - 0xacc ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0xa48 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov ecx [ ebp - 0xa48 ]
mov [ ebp + eax * 8 - 0x638 ] ecx
jmp r-xdata
add ecx ecx
mov eax [ ebp + ecx * 8 - 0x640 ]
mov esi [ eax ]
test [ ebp - 0xa48 ] 0x20
je r-xdata
mov [ ecx ] 0x1
push ebx
push [ ebp - 0xa58 ]
lea esi [ ebp - 0x845 ]
and [ ebp - 0xa98 ] eax
mov ecx [ ebp - 0xa48 ]
mov [ ebp + eax * 8 - 0x638 ] ecx
jmp r-xdata
and [ ebp - 0xa9c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0xa9c ] 0x1
jmp r-xdata
add ecx ecx
mov eax [ ebp + ecx * 8 - 0x640 ]
movzx eax [ eax ]
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
jne r-xdata
mov [ ebp - 0xa44 ] ax
mov [ ebp - 0xaa4 ] al
lea eax [ ebp - 0xa70 ]
push eax
mov eax [ ebp - 0xa70 ]
mov [ ebp - 0xaa3 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0xaa4 ]
push eax
lea eax [ ebp - 0xa44 ]
push eax
call sub_43acb3
add esp 0x10
test eax eax
jns r-xdata
add eax edx
inc esi
inc [ ebp - 0xa88 ]
cmp [ ebp - 0xa88 ] ebx
jl r-xdata
inc esi
test [ ebp - 0xa48 ] 0x4
je r-xdata
mov edi [ ebp - 0xa60 ]
test edi edi
jg r-xdata
mov [ ebp - 0xa50 ] ebx
mov [ ebp - 0xa60 ] eax
mov [ ebp - 0xa80 ] esi
mov edi eax
jmp r-xdata
cmp [ ebp - 0xa58 ] 0x67
jne r-xdata
cmp [ ebp - 0xa50 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa74 ]
mov [ esi ] eax
mov ax [ ebp - 0xa74 ]
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp - 0xa80 ]
cdq
push edx
push eax
push ebx
push edi
call sub_437df0
add ecx 0x30
mov [ ebp - 0xa88 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
sar eax 0x1
push [ ebp - 0xa48 ]
push ebx
jmp r-xdata
mov [ ecx ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa44 ]
mov [ ebp - 0xa60 ] eax
mov [ ebp - 0xa88 ] 0x1
jmp r-xdata
mov [ ebp - 0xab8 ] 0x1
jmp r-xdata
jmp r-xdata
mov edi [ ebp - 0xa80 ]
jmp r-xdata
or [ ebp - 0xa74 ] 0xffffffff
jmp r-xdata
push [ ebp - 0xabc ]
mov eax [ ebp - 0xaa0 ]
lea esi [ ebp - 0xa74 ]
call sub_43c830
add edi [ ebp - 0xa58 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0xa74 ]
mov eax ebx
dec edi
call sub_43c830
cmp [ ebp - 0xa74 ] 0xffffffff
pop ecx
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0xa70 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0xab8 ] 0x1
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0xab0 ]
lea eax [ ebp - 0x845 ]
sub eax esi
inc esi
test [ ebp - 0xa48 ] 0x200
mov [ ebp - 0xa88 ] eax
mov [ ebp - 0xa60 ] esi
je r-xdata
push 0x1
mov [ ebp + eax * 8 - 0x63c ] bx
jmp r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0xa74 ] 0x0
jl r-xdata
lea eax [ ebp - 0xa70 ]
push eax
mov eax [ ebp - 0xa70 ]
push [ eax + 0xac ]
lea eax [ ebp - 0xabc ]
push edi
push eax
dec ebx
call sub_43acb3
add esp 0x10
mov [ ebp - 0xa58 ] eax
test eax eax
jle r-xdata
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0xa48 ] 0x100
inc edi
mov [ ebp - 0xa60 ] edi
lea eax [ ebp - 0xa70 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0xa50 ]
dec [ ebp - 0xa50 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0xaa0 ]
push 0x20
lea esi [ ebp - 0xa74 ]
dec edi
call sub_43c830
cmp [ ebp - 0xa74 ] 0xffffffff
pop ecx
je r-xdata
call sub_425c60
pop ecx
jmp r-xdata
dec [ ebp - 0xa60 ]
mov eax [ ebp - 0xa60 ]
inc [ ebp - 0xa88 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_43dbc1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_42b35f
push eax
call sub_4383b9
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_422a09
add eax 0x20
cmp esi eax
jne r-xdata
call sub_422a09
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_4292bc
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_43dc5d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_422f38
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_43dc91
push 0xc
push r--data
call sub_42ad20
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
setne al
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0xc ] esi
push esi
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_43dbc1
mov edi eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push esi
push edi
call sub_43dc5d
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43dd11
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_43ddd8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_428912
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_421e20
pop ecx
cmp eax esi
je r-xdata
call sub_437be0
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_43deb2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43ddd8
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43def2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_43df11
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_43df39
mov ecx [ rw-data ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rw-data ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
add eax eax
inc ecx
lea eax [ edx + eax * 8 - 0x41 ]
mov [ rw-data ] ecx
mov dl [ ecx ]
sub_43df9b
mov ecx [ rw-data ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rw-data ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rw-data ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
lea esi [ ecx + 0xfffe ]
inc ecx
mov [ rw-data ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rw-data ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_43e45b ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ ecx + 0x1 ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
mov bl 0x1
cmp al 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
inc ecx
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
lea eax [ ecx + 0xfffe ]
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rw-data ] eax
call sub_43df9b
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_43e572
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
jne r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rw-data
call sub_43e572
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_43e70a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_43e78f
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_43e7e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_43e807
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_43e83c
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rw-data ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rw-data ] ecx
mov eax r--data
xor edx edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x4
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
mov [ rw-data ] edx
mov eax rw-data
pop ebp
retn
imul eax eax 0xc
add eax rw-data
pop ebp
retn
sub_43e8e3
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_43e90e
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_43e92a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_43e964
mov edi edi
push esi
mov esi edx
test esi esi
je r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_43e97a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_43e9a4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rw-data ] edx
mov [ rw-data ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rw-data ] esi
mov [ rw-data ] edx
pop esi
jmp r-xdata
mov [ rw-data ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rw-data ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
pop ebp
retn 0x14
sub_43ea13
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_442892
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_43ea4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_442892
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_43ea9d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
je r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_43ead4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rw-data
call sub_43e572
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_43e78f
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_43eb27
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_43e83c
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_43eb6c
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rw-data
call sub_43e572
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
lea edx [ esi + edi - 0x1 ]
push edx
push esi
call [ eax + 0x8 ]
mov eax esi
jmp r-xdata
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
sub_43ebcb
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rw-data
call sub_43e572
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_43ec13
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rw-data
call sub_43e572
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_43e78f
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_43ec60
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_43e83c
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_43ec97
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rw-data
call sub_43e572
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_43ece1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_43eb27
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
pop ebp
retn 0x8
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_43ed30
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rw-data
call sub_43e572
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_43edba
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43ea9d
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_43ede3
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_44376f
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
call sub_43ead4
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_43ee27
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_43ec60
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_43e83c
pop ecx
push eax
mov ecx esi
call sub_43ebcb
jmp r-xdata
sub_43ee69
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub eax ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push ebx
mov ecx rw-data
je r-xdata
pop edi
push 0x8
call sub_43e572
cmp eax ebx
je r-xdata
push 0xc
call sub_43e572
cmp eax ebx
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_43ed30
jmp r-xdata
mov [ esi ] eax
cmp eax ebx
jne r-xdata
sub_43eeec
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_43ee69
sub_43ef19
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
cmp ecx edx
jbe r-xdata
push ecx
push eax
mov ecx esi
call sub_43ee69
sub_43ef56
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_43ee69
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rw-data ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_43f015
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_437df0
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_43ee69
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn 0x8
sub_43f083
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp eax ecx
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_437df0
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_43ee69
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_43f11e
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_43ee27
mov eax esi
pop esi
pop ebp
retn 0x8
sub_43f142
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_43ee27
jmp r-xdata
push ecx
mov ecx esi
call sub_43ebcb
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_43f185
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_43ec13
jmp r-xdata
push 0x0
push 0x8
mov ecx rw-data
call sub_43e572
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_43e78f
jmp r-xdata
movsx eax al
push eax
call sub_43ee27
jmp r-xdata
push eax
mov ecx edi
call sub_43ebcb
sub_43f1ec
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_43ee69
sub_43f219
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_43ee69
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_43f24e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
sub eax 0x41
inc [ rw-data ]
cmp eax 0xe
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov edx [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and edx 0xffff0002
push 0x2
pop ecx
or edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
shr edx 0x1
not edx
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_43e553
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f219
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax ecx
jne r-xdata
push 0x7
jmp r-xdata
sub_43f316
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
cmp al 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
push r--data
call sub_43ef19
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_43f361
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_43f142
mov eax esi
pop esi
pop ebp
retn 0x8
sub_43f385
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_43f185
mov eax esi
pop esi
pop ebp
retn 0x8
sub_43f3a9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rw-data
call sub_43e572
test eax eax
je r-xdata
push ebx
call sub_43f1ec
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_43ebcb
sub_43f3fb
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rw-data
call sub_43e572
cmp eax ebx
je r-xdata
push esi
call sub_43f219
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_43ed30
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_43ebcb
sub_43f45f
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_43f3a9
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_43ee27
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rw-data ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_4435be
mov eax [ rw-data ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ rw-data ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rw-data ] edi
call sub_43ece1
push eax
mov ecx esi
call sub_43f142
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_43f142
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_43ec97
mov eax [ rw-data ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_43f565
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_43f3fb
lea eax [ ebp - 0x8 ]
push eax
call sub_4421fc
pop ecx
push eax
mov ecx esi
call sub_43f142
push 0x7d
mov ecx esi
call sub_43f3a9
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rw-data ]
sub_43f5b9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp + 0x8 ]
leave
retn
sub_43f5dd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43eb27
mov ecx eax
call sub_43f361
mov eax [ ebp + 0x8 ]
leave
retn
sub_43f601
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp + 0x8 ]
leave
retn
sub_43f625
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_43f3a9
mov eax esi
pop esi
pop ebp
retn 0x8
sub_43f649
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_43f3fb
mov eax esi
pop esi
pop ebp
retn 0x8
sub_43f66d
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ecx ] 0x51
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov ebx r--data
mov [ rw-data ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop ebx
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ ecx ]
sub eax 0x2f
cdq
inc ecx
push edx
mov [ rw-data ] ecx
push eax
test ebx ebx
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_43f015
lea ecx [ ebp - 0x8 ]
call sub_43f015
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_43f601
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push edi
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
pop edi
pop esi
cmp al 0x50
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movsx eax al
shld edi esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
adc edi edx
inc ecx
mov esi eax
mov [ rw-data ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_43f015
lea ecx [ ebp - 0x18 ]
call sub_43f015
lea ecx [ ebp - 0x8 ]
call sub_43f083
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_43f083
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_43f601
add esp 0xc
jmp r-xdata
sub_43f7b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
jmp [ eax * 4 + jump_table_43f87f ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rw-data ]
movsx eax [ eax ]
inc [ rw-data ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_43f219
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_43f89f
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rw-data ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_43f45f
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_43ef19
mov eax [ ebp + 0x8 ]
leave
retn
cmp al 0x40
je r-xdata
inc [ rw-data ]
cmp al 0x5a
je r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f649
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
sub_43f97f
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
sub esp 0x18
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_43ef19
mov ecx eax
call sub_43f11e
mov ecx eax
cmp al 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43f89f
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_43ef19
mov ecx eax
call sub_43f361
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
call sub_43f625
mov eax [ ebp + 0x8 ]
leave
retn
sub_43fa09
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0xffff0000
push ebx
xor ebx ebx
xor ecx ecx
inc [ rw-data ]
mov eax [ rw-data ]
mov dl [ eax ]
movsx eax dl
push esi
mov esi eax
sub esi 0x41
push edi
mov edi 0xffff00ff
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rw-data ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
mov eax r--data
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov [ ecx ] eax
mov eax r--data
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] edi
mov [ eax ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x3e
mov [ ebp - 0xc ] ebx
call sub_43ee69
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
cmp dl bl
je r-xdata
mov [ eax ] ebx
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ rw-data ]
mov dl [ edx + 0x1 ]
cmp dl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
je r-xdata
add [ rw-data ] 0x2
add eax 0xffffffd0
movsx edx dl
add eax eax
lea esi [ edx + eax * 8 - 0x30 ]
cmp esi 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] 0xffff00ff
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x2c
mov [ ebp - 0xc ] ebx
call sub_43ee69
push ebx
push esi
lea ecx [ ebp - 0x1c ]
call sub_43f015
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43f361
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] ecx
push 0x5e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_43f3a9
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
inc [ rw-data ]
jmp r-xdata
mov [ ebp - 0x14 ] ecx
push 0x3e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_43f3a9
mov edx [ rw-data ]
cmp [ edx ] 0x24
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_43ee27
inc [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_43fbd1
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x38
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
call sub_43df39
mov [ ebp - 0x4 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x38 ]
push 0x5d
push eax
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_43f3fb
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_43ee27
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_43f3a9
lea eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_4431fb
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push 0x5d
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_43f3fb
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_43eeec
mov ecx eax
call sub_43f11e
mov ecx eax
call sub_43f625
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_4435be
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_43f66d
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x5b
lea ecx [ ebp - 0x38 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x5d
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_43f3a9
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_43f142
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_43f3a9
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call sub_43f361
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_43fdc7
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43f66d
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_43eeec
mov ecx eax
call sub_43f361
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_43f625
mov eax [ ebp + 0x8 ]
leave
retn
sub_43fe46
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43ea13
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_43f3a9
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f361
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_43eb27
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
je r-xdata
inc [ rw-data ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_43f3fb
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_4421fc
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_43f3a9
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_43f142
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_43f3a9
push ebx
mov ecx esi
call sub_43ee27
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_43ffa5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_43ef19
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
cmp al 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
cmp al 0x5f
jne r-xdata
inc [ rw-data ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43f66d
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43f66d
mov eax [ rw-data ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
push 0x1
mov [ rw-data ] eax
call sub_43eb27
mov eax [ ebp + 0x8 ]
leave
retn
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rw-data ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_440058
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
jmp r-xdata
push [ ebp + 0x8 ]
call sub_43f66d
pop ecx
pop ecx
inc [ rw-data ]
lea eax [ ebp - 0x8 ]
push eax
call sub_43f66d
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_43f5b9
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_4400aa
mov edi edi
push ebp
mov ebp esp
sub esp 0xc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov bl [ eax ]
inc [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movsx edi bl
cmp edi 0x44
jg r-xdata
cmp edi 0x45
je r-xdata
je r-xdata
push esi
call sub_441f8e
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_440058
test [ rw-data ] 0x4000
pop ecx
je r-xdata
sub edi 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp edi 0x4a
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
lea ecx [ ebp - 0xc ]
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_43eb6c
lea eax [ ebp - 0x14 ]
push eax
call sub_4438b7
push eax
call [ rw-data ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rw-data ]
sub edi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_43eeec
cmp bl 0x48
jl r-xdata
cmp edi 0x51
je r-xdata
push r--data
jmp r-xdata
push r--data
push eax
jmp r-xdata
push esi
call sub_440058
jmp r-xdata
dec edi
je r-xdata
sub edi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp edi 0x52
jne r-xdata
call sub_43ef19
mov ecx eax
call sub_43f361
push r--data
push esi
lea ecx [ ebp - 0x88 ]
call sub_43f649
jmp r-xdata
mov ecx esi
call sub_43ef19
jmp r-xdata
pop ecx
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
dec edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call sub_440058
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_43f142
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_43f3a9
dec edi
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_441f8e
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_43f142
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_43f3a9
push 0x0
lea eax [ ebp - 0x88 ]
push 0x0
push eax
call sub_440dd4
lea eax [ ebp - 0x80 ]
push eax
call sub_440058
mov eax [ ebp - 0x88 ]
mov [ esi ] eax
mov eax [ ebp - 0x84 ]
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_441f8e
pop ecx
push eax
push esi
push r--data
lea ecx [ ebp - 0x90 ]
call sub_43ef19
jmp r-xdata
inc [ rw-data ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_440058
lea eax [ ebp - 0x88 ]
push eax
call sub_440058
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_440058
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_43f142
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_43f3a9
dec edi
je r-xdata
mov ecx eax
call sub_43f361
jmp r-xdata
push 0x1
mov ecx esi
call sub_43eb27
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jg r-xdata
lea eax [ ebp - 0xb8 ]
push eax
call sub_440058
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_43f142
dec edi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_43eb6c
test eax eax
jne r-xdata
dec edi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push esi
lea ecx [ ebp - 0x80 ]
call sub_43f625
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
push 0x65
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_43ef19
mov ecx eax
call sub_43f625
sub_44039a
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
xor ecx ecx
sub esp 0x18
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_43f5dd
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_4431fb
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_43fbd1
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_43f601
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_43ef19
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_440498
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rw-data ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rw-data ] bl
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_43f3a9
mov eax [ rw-data ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rw-data ] eax
push ecx
mov ecx [ rw-data ]
lea eax [ ebp - 0x74 ]
push eax
call sub_43ece1
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rw-data ] eax
push r--data
push eax
mov ecx esi
call sub_43f142
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rw-data ]
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x3c ] edi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x40 ] ebx
call sub_4435be
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_440058
test [ rw-data ] 0x4000
pop ecx
je r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_4400aa
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
call sub_43f3fb
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_43eb6c
lea eax [ ebp - 0x14 ]
push eax
call sub_4438b7
push eax
call [ rw-data ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_43ec97
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
call sub_43f3fb
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_43f219
jmp r-xdata
sub_4406a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0xc ] ecx
push esi
xor esi esi
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ rw-data ] eax
cmp edx 0x41
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_43f219
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rw-data ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x5f
jne r-xdata
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx 0x4f
jg r-xdata
and [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_440dd4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rw-data ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_440498
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x20 ]
call sub_43eeec
mov ecx eax
call sub_43f361
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_43f142
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_43f3a9
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_43ef19
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f142
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_43f3a9
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_43f219
push ebx
lea eax [ ebp - 0x70 ]
push ebx
push eax
call sub_4406a7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x20 ]
call sub_43ef19
mov ecx [ ebp - 0x1c ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rw-data ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_43f219
cmp ecx 0x59
jle r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_43f219
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx 0x41
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_43f11e
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_43ffa5
mov ecx [ ebp - 0x1c ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_43f219
mov eax [ rw-data ]
movsx eax [ eax ]
inc [ rw-data ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_43ef19
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_44376f
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push 0x20
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_43f3a9
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_4411ee
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
lea eax [ ebp - 0x80 ]
push eax
call sub_441f8e
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_43f361
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_440058
pop ecx
mov ecx eax
call sub_43f625
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
push 0x2c
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_440058
pop ecx
mov ecx eax
call sub_43f625
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_440058
pop ecx
mov ecx eax
call sub_43f625
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
push 0x29
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_43f66d
pop ecx
pop ecx
mov ecx eax
call sub_43f625
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_43f625
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_43f3fb
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
dec [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
sub_440c7d
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xa8
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x50 ] 0xffffffff
or [ ebp - 0x7c ] 0xffffffff
or [ ebp - 0xa8 ] 0xffffffff
push ebx
mov ebx [ rw-data ]
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x50 ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0x7c ]
push edi
mov edi [ rw-data ]
mov [ rw-data ] ecx
add eax 0x2
lea ecx [ ebp - 0xa8 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_440dd4
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4406a7
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rw-data ] edi
pop edi
mov [ rw-data ] esi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ rw-data ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call sub_440498
pop ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x3c
lea ecx [ ebp - 0x24 ]
call sub_43eeec
mov ecx eax
call sub_43f361
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43f142
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_43f3a9
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_43f3a9
inc [ rw-data ]
sub_440dd4
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
mov cl [ ebx ]
movsx eax cl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x38 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
push edi
mov edi 0xffff0000
and [ ebp - 0x18 ] edi
cmp cl 0x3f
jne r-xdata
mov ecx [ rw-data ]
push eax
inc ebx
push esi
mov [ rw-data ] ebx
call sub_43ece1
mov eax esi
jmp r-xdata
mov eax r--data
mov esi eax
mov ecx ebx
mov [ ebp - 0x20 ] 0x12
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_440c7d
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rw-data ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
dec eax
xor ecx ecx
mov [ rw-data ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_43ec60
jmp r-xdata
mov eax r--data
push 0xc
mov ecx ebx
mov esi eax
pop ebx
add ebx 0x13
mov [ rw-data ] ebx
jmp r-xdata
inc ecx
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
call sub_440058
test [ rw-data ] 0x4000
pop ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_43ec97
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rw-data ] 0xd
inc ecx
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_43eb6c
lea eax [ ebp - 0x14 ]
push eax
call sub_4438b7
push eax
call [ rw-data ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x40
push rw-data
lea ecx [ ebp - 0x34 ]
call sub_43ef56
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
push r--data
call sub_43f219
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_43f3fb
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_43f142
jmp r-xdata
push eax
call sub_43f219
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
and ecx edi
inc [ rw-data ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_440fea
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
mov edi 0xffff00ff
and [ esi + 0x4 ] edi
push eax
mov [ esi ] ebx
call sub_440dd4
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] eax
cmp al bl
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rw-data ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4421fc
pop ecx
mov ecx eax
call sub_43f649
mov ecx eax
call sub_43f361
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_43eb27
mov ecx eax
call sub_43f649
mov ecx eax
call sub_43f361
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_43ec60
jmp r-xdata
sub_4410de
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x20
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rw-data ]
push r--data
call sub_43ef19
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rw-data ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_440fea
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_43f142
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_43f219
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov edi ecx
call sub_43f7b3
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_4411ee
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_440dd4
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_4406a7
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_440c7d
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_441238
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_43e553
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_43ef19
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_43ee27
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_43f3fb
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_43f3fb
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_440fea
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f142
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
sub_4412d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
call sub_43df9b
mov ecx [ ebp + 0xc ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x14 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x14 ] 0x1
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] edi
jmp r-xdata
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push 0x1
push [ ebp + 0x8 ]
call sub_43f5dd
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x20 ]
call sub_43f142
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] ebx
and [ ebp - 0xc ] edi
cmp [ ebp - 0xc ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_43fe46
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_43f3fb
jmp r-xdata
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_43f66d
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
push 0x7b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_43f3a9
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_43f142
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_43f649
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_441238
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_43e70a
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x3c ] esi
and [ ebp - 0x44 ] esi
and [ ebp - 0xc ] esi
and [ ebp - 0x24 ] esi
and [ ebp - 0x2c ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x30 ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_441238
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_43f565
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_43f66d
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x7b
lea eax [ ebp - 0x38 ]
push eax
call sub_43f625
mov ecx eax
call sub_43f361
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
lea eax [ ebp - 0x48 ]
push eax
call sub_43f316
mov esi 0x1000
pop ecx
test [ rw-data ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_43f3fb
lea eax [ ebp - 0x48 ]
push eax
call sub_43f24e
mov eax [ rw-data ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x2c
lea ecx [ ebp - 0x38 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_43f3fb
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_44383e
pop ecx
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_43f66d
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_43f24e
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_43e70a
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_43f66d
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_43f66d
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_43f66d
add esp 0x18
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x34 ] esi
xor edi edi
mov [ ebp - 0x38 ] edi
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_43f24e
pop ecx
mov ecx eax
call sub_43f361
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_43ea4c
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_43e70a
call sub_43ea4c
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rw-data ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_43f3a9
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_43f142
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
xor edi edi
push edi
push 0x8
mov ecx rw-data
call sub_43e572
cmp eax edi
je r-xdata
lea eax [ ebp - 0x50 ]
push edi
push eax
call sub_43ede3
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
test [ rw-data ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test [ rw-data ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_43f66d
pop ecx
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_43ede3
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x20
lea ecx [ ebp - 0x50 ]
call sub_43eeec
mov ecx eax
call sub_43f361
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rw-data ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_43f89f
pop ecx
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x28
lea ecx [ ebp - 0x50 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x29
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_43f3a9
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_43f3fb
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp eax edx
je r-xdata
call sub_43f97f
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_43e70a
call sub_43f97f
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
test esi esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
call sub_43f3a9
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_43f3a9
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_43f142
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rw-data ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_43f3a9
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_43f3fb
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_43f142
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_441f8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rw-data ] esi
je r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rw-data ] 0xffffdfff
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_44376f
or [ rw-data ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
lea eax [ ebp - 0xc ]
push eax
call sub_4411ee
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_441f8e
mov eax [ rw-data ]
pop ecx
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_4421fc
mov eax [ ebp - 0x14 ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rw-data ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_43f3fb
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_43f142
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ rw-data ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call sub_43f142
mov eax [ rw-data ]
cmp [ eax ] 0x40
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4421fc
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ esp ] r--data
call sub_43f3fb
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_43f142
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test [ rw-data ] ecx
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4412d4
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0xffff0000
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_4412d4
pop ecx
pop ecx
jmp r-xdata
sub_4421fc
mov edi edi
push ebp
mov ebp esp
sub esp 0xb8
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xffff00ff
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] edi
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rw-data ] bl
je r-xdata
push esi
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea eax [ ebp - 0x48 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_43eb27
mov ecx eax
call sub_43f649
mov ecx eax
call sub_43f361
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_43ec60
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x90 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x20 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x48 ]
push esi
push eax
lea eax [ ebp - 0x40 ]
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x5b
lea ecx [ ebp - 0x98 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x88 ]
push esi
dec ecx
push eax
mov [ rw-data ] ecx
lea eax [ ebp - 0x38 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_440dd4
add esp 0xc
push 0x40
push rw-data
lea ecx [ ebp - 0x30 ]
call sub_43ef56
push esi
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_43ec97
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_441f8e
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x60
lea ecx [ ebp - 0x58 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_43f3a9
push esi
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
call sub_43f361
mov [ rw-data ] eax
push esi
lea eax [ ebp - 0xb0 ]
push eax
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_4406a7
add esp 0xc
mov ecx eax
call sub_43f361
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x5d
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rw-data ] ecx
call sub_440dd4
add esp 0xc
mov ecx eax
call sub_43f625
mov ecx eax
call sub_43f361
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_43fdc7
pop ecx
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx eax
sub_4424b3
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov cl [ eax ]
sub esp 0x38
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_43f5dd
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rw-data ] eax
cmp ebx 0x29
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
test ebx ebx
js r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_43f5dd
mov eax [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
mov [ rw-data ] eax
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
pop ebx
leave
retn
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
jle r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_43eb27
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_4421fc
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_43f24e
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_43e70a
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_43f24e
pop ecx
mov ecx eax
call sub_43f361
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_441238
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_43e70a
call sub_441238
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_43f142
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_43eb27
mov ecx eax
call sub_43f361
jmp r-xdata
cmp al 0x40
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
push ebx
push 0x8
mov ecx rw-data
call sub_43e572
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_43f3a9
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
pop edi
pop esi
call sub_43ea4c
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_43e70a
jmp r-xdata
call sub_43ea4c
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_43ede3
lea eax [ ebp - 0x38 ]
push eax
call sub_43f89f
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_43f3a9
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f142
mov eax [ rw-data ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_43f97f
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_43e70a
call sub_43f97f
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f142
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f142
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_43eb27
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_442892
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x38 ] esi
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_43eb27
mov esi [ ebp + 0xc ]
cmp [ esi ] edi
je r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
mov [ ebp - 0x1c ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
xor edx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_43fa09
mov ecx [ ebp - 0x2c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push [ ebp + 0x8 ]
call sub_43f5dd
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_43eb27
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_43f3a9
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_43f361
jmp r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
mov edx [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_43fa09
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_43f3a9
push 0x8
call sub_43e553
add esp 0x4
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xc ]
push 0xa
call sub_43e553
add esp 0x4
push eax
lea ecx [ ebp - 0x1c ]
call sub_43f219
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
call sub_43f3a9
push 0xa
call sub_43e553
add esp 0x4
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_43f649
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rw-data ] ecx
test edx edx
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov esi [ ebp + 0x10 ]
push esi
lea ecx [ ebp - 0xc ]
call sub_43ef19
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_43f142
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
je r-xdata
push 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_43f3a9
push 0x9
call sub_43e553
add esp 0x4
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x20 ] ecx
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_43f3a9
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_43f142
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_43e553
add esp 0x4
push eax
lea ecx [ ebp - 0x14 ]
call sub_43f219
push eax
call sub_43f649
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
call sub_43f3a9
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_43f142
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_441238
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_43e70a
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_441238
pop ecx
mov ecx eax
call sub_43f361
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_43ee27
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_4421fc
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_43e70a
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_43eb27
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_4421fc
pop ecx
mov ecx eax
call sub_43f361
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
mov ebx 0x100
cmp [ ebp + 0x18 ] edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
inc [ rw-data ]
cmp al 0x40
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
mov ecx [ esi + 0x4 ]
test ebx ecx
jne r-xdata
push eax
test ecx 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_43eeec
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_43f3a9
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_43f361
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_43eeec
mov ecx eax
call sub_43f361
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43f142
sub_442e31
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp - 0xc ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rw-data ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x20 ]
push eax
call sub_441f8e
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
call sub_43f219
test [ rw-data ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rw-data ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_441f8e
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_43eb6c
mov eax [ rw-data ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_440c7d
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rw-data ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rw-data ]
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rw-data ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_442f70
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_43eb27
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_43f3fb
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_43f142
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
mov esi [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_442892
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_44039a
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_43ef19
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_43f142
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_43f3a9
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4424b3
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_43f142
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f142
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_4430c7
push 0x64
push r--data
call sub_42ad20
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_42c95d
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_43e9a4
lea ecx [ ebp - 0x74 ]
call sub_442e31
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_43df11
mov [ ebp - 0x4 ] 0xfffffffe
call sub_443158
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_443161
push 0x64
push r--data
call sub_42ad20
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_42c95d
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_42ca1f
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_43e9a4
lea ecx [ ebp - 0x74 ]
call sub_442e31
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_43df11
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4431f2
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_4431fb
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_43f5dd
add esp 0xc
inc [ rw-data ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] 0x0
cmp eax 0x4e
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_43f219
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_43f3fb
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_4435b3 ]
jmp [ eax * 4 + jump_table_44359b ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_442f70
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rw-data ]
push eax
call sub_4410de
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_442f70
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_43f3fb
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x24 ]
call sub_43eeec
mov ecx eax
call sub_43f361
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43f142
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_43f219
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_43f219
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x24 ]
call sub_43ef19
mov ecx eax
call sub_43f361
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4d
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_43f219
push r--data
lea ecx [ ebp - 0xc ]
call sub_43f3fb
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x4c
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
cmp eax 0x48
jl r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jg r-xdata
dec [ rw-data ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_43ec60
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_4431fb
push eax
push r--data
push [ ebp + 0x8 ]
call sub_43f601
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
push r--data
jmp r-xdata
sub_4435be
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
movsx eax [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
add [ rw-data ] 0x2
mov eax [ rw-data ]
movsx eax [ eax ]
mov esi [ ebp + 0xc ]
cmp eax 0x51
jg r-xdata
cmp al bl
je r-xdata
push r--data
dec eax
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x8 ]
call sub_43f219
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4431fb
push r--data
lea ecx [ ebp - 0x8 ]
call sub_43f219
cmp [ esi ] ebx
je r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_43f3a9
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_43f3a9
inc [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rw-data ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_442f70
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
push r--data
call sub_43ef19
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_43f5dd
inc [ rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_4424b3
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
jmp r-xdata
inc [ rw-data ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_44039a
jmp r-xdata
dec eax
jne r-xdata
add esp 0xc
inc [ rw-data ]
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
push esi
push eax
mov [ ebp - 0x8 ] ebx
call sub_442892
push eax
push [ ebp + 0x8 ]
call sub_4431fb
add esp 0x1c
jmp r-xdata
sub_44376f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_43ead4
mov eax [ rw-data ]
mov al [ eax ]
xor ecx ecx
cmp al cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push 0x1
call sub_43eb27
cmp al 0x3f
je r-xdata
inc [ rw-data ]
and [ ebp - 0xc ] 0xffff0000
push ecx
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_442892
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4435be
add esp 0x1c
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rw-data ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4435be
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_43ef19
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_43ef19
jmp r-xdata
mov ecx eax
call sub_43f361
sub_44383e
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rw-data
call sub_43e572
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_44376f
lea eax [ ebp - 0x10 ]
push eax
call sub_43ea13
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_43f3a9
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_43f361
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_44392b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_425c60
pop ecx
mov edi eax
jmp r-xdata
call sub_446b52
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_425c60
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_446b38
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_4439b2
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] ebx
cmp eax ebx
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop esi
pop ebx
pop ebp
retn
cmp eax ebx
je r-xdata
jmp r-xdata
push edi
push [ ebp + 0x10 ]
call sub_44392b
mov edi eax
pop ecx
cmp edi ebx
je r-xdata
mov [ eax ] bl
xor eax eax
jmp r-xdata
push edi
call sub_425c60
inc eax
pop ecx
mov [ esi ] eax
cmp [ ebp + 0xc ] ebx
je r-xdata
pop edi
cmp eax [ ebp + 0xc ]
jbe r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
push 0x22
pop eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
int3
sub_443a3d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi eax
xor esi esi
cmp edi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] esi
cmp eax esi
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push ebx
push [ ebp + 0xc ]
call sub_44392b
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_425c60
lea esi [ eax + 0x1 ]
push 0x1
push esi
call sub_444896
mov [ edi ] eax
xor edi edi
add esp 0xc
cmp eax edi
jne r-xdata
pop ebx
push ebx
push esi
push eax
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
call sub_42571f
mov [ eax ] 0xc
call sub_42571f
mov eax [ eax ]
push edi
push edi
push edi
push edi
push edi
call sub_42b146
int3
mov eax [ ebp + 0x8 ]
cmp eax edi
je r-xdata
mov [ eax ] esi
sub_443ad9
push 0x10
push r--data
call sub_42ad20
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi 0x7fff
push esi
push [ ebp + 0x8 ]
call sub_446be9
pop ecx
pop ecx
cmp eax esi
sbb eax eax
neg eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
jmp r-xdata
push 0x7
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_44392b
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_443b4a
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_443b53
push 0xc
push r--data
call sub_42ad20
push 0x7
call sub_42ca1f
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
mov [ edi ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx ebx
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
ja r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_443c17
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
xor eax eax
xor eax eax
inc eax
jmp r-xdata
cmp ecx ebx
jne r-xdata
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_44392b
pop ecx
mov esi eax
cmp esi ebx
je r-xdata
mov [ ecx ] bl
mov [ ebp - 0x1c ] ebx
push esi
call sub_425c60
pop ecx
inc eax
mov [ edi ] eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42b385
add esp 0xc
cmp eax ebx
jne r-xdata
mov [ ebp - 0x1c ] 0x22
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
sub_443c20
push 0xc
push r--data
call sub_42ad20
push 0x7
call sub_42ca1f
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
mov [ edi ] esi
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
xor eax eax
cmp [ ebp + 0x10 ] esi
setne al
cmp eax esi
je r-xdata
mov [ eax ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_443cee
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
push [ ebp + 0x10 ]
call sub_44392b
pop ecx
mov ebx eax
cmp ebx esi
je r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
push ebx
call sub_425c60
lea esi [ eax + 0x1 ]
push 0x1
push esi
call sub_444896
add esp 0xc
mov [ edi ] eax
xor edi edi
cmp eax edi
jne r-xdata
push ebx
push esi
push eax
call sub_42b385
add esp 0xc
cmp eax edi
jne r-xdata
call sub_42571f
mov [ eax ] 0xc
call sub_42571f
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_42b146
mov eax [ ebp + 0xc ]
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] edi
mov [ eax ] esi
sub_443cf7
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_428932
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445359
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx edx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
mov si bx
jmp r-xdata
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx edx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx ecx [ edi ]
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx ecx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_443f15
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437492
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
movzx ecx [ ebx ]
dec [ ebp + 0x10 ]
movzx eax cl
inc ebx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ esi ]
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test cx cx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
movzx ecx cx
inc ebx
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
shl eax 0x8
movzx edx dl
or ax dx
movzx eax ax
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_444080
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4440a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4216fe
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4440e5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4440e5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4440a0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_444195
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4441b4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_44418c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_444195
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4441b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_42ca9b
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_42571f
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_42ca9b
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_42ca9b
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42ca9b
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_444470
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_42571f
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_430759
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_42571f
mov [ eax ] 0xd
call sub_425732
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_425732
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_42571f
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_42cc0a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_444470
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_44436d
push 0x10
push r--data
call sub_42ad20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_425732
and [ eax ] 0x0
push 0x9
pop eax
jmp r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
push 0x9
pop esi
mov [ eax ] esi
cmp ebx [ rw-data ]
jb r-xdata
call sub_42ad65
retn
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
push ebx
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
jl r-xdata
call sub_42571f
push 0x9
pop esi
mov [ eax ] esi
mov [ ebp - 0x1c ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4441b7
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_425732
and [ eax ] 0x0
call sub_42571f
push 0x16
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44444c
mov eax [ ebp - 0x1c ]
call sub_42b1b2
mov eax esi
jmp r-xdata
sub_444454
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_44436d
add esp 0xc
neg eax
sbb eax eax
pop ebp
retn
sub_444470
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_44452b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
push eax
push rw-data
call [ InterlockedExchange@IAT ]
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
push 0x16
pop eax
pop ebp
retn
sub_44456d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
push 0x16
pop eax
pop ebp
retn
sub_44459a
push 0x10
push r--data
call sub_42ad20
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
test ebx ebx
js r-xdata
call sub_42571f
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_42571f
mov [ eax ] 0x9
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
call sub_42b1b2
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
call sub_42ad65
retn
cmp eax 0x20000
je r-xdata
push ebx
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42571f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push ebx
call sub_444470
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44467d
mov eax [ ebp - 0x1c ]
sub_444685
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
add eax 0x40
push 0x3a
mov [ ebp - 0xc ] ax
pop eax
mov [ ebp - 0xa ] ax
push 0x5c
pop eax
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0xc ]
push eax
call [ GetDriveTypeW@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
leave
retn
sub_4446df
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_432109
mov ebx eax
push ebx
call sub_444685
pop ecx
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
test eax eax
jg r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_425732
mov [ eax ] 0xf
call sub_42571f
mov [ eax ] 0xd
call sub_42b1b2
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] 0x2e
add bl 0x40
mov [ ebp + 0x8 ] bl
mov [ ebp + 0x9 ] 0x2e3a
mov [ ebp + 0xb ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov [ edi ] 0x0
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
jmp r-xdata
pop ebx
leave
retn
call [ GetLastError@IAT ]
push eax
call sub_425745
pop ecx
test edi edi
je r-xdata
push esi
mov esi [ GetFullPathNameA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push edi
push [ ebp - 0x4 ]
lea eax [ ebp + 0x8 ]
push eax
call esi
test eax eax
je r-xdata
test ebx ebx
je r-xdata
pop edi
cmp eax [ ebp + 0x10 ]
jle r-xdata
cmp eax [ ebp - 0x4 ]
jl r-xdata
push 0x1
push [ ebp + 0x10 ]
call sub_444896
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ ebp + 0x10 ] eax
mov eax edi
jmp r-xdata
call sub_42571f
mov [ eax ] 0x22
mov [ edi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push edi
push [ ebp + 0x10 ]
lea eax [ ebp + 0x8 ]
push eax
call esi
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] 0xc
call sub_425732
mov [ eax ] 0x8
jmp r-xdata
pop esi
xor eax eax
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_444803
push 0xc
push r--data
call sub_42ad20
push 0x7
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_4446df
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_444843
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_44484c
push 0xc
push r--data
call sub_42ad20
push 0x7
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4446df
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44488d
mov eax [ ebp - 0x1c ]
call sub_42ad65
retn
sub_444896
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437cf6
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_42571f
test eax eax
je r-xdata
call sub_42571f
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_4448d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_428932
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x8 ] bl
je r-xdata
mov eax 0x7fffffff
leave
retn
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi 0x200
push esi
lea eax [ ebp - 0x14 ]
push eax
push ebx
push edx
call sub_445170
add esp 0xc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx ecx
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ edx ] 0x0
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov esi edx
movzx esi [ ecx + 0x11d ]
jmp r-xdata
push 0x1
push [ eax + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x2
push ecx
push 0x2
dec edx
push edx
push edi
push [ eax + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call sub_428bcf
add esp 0x24
cmp eax 0x1
jne r-xdata
xor esi esi
jmp r-xdata
mov edx ecx
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
movzx ecx [ ebx ]
movzx edx cl
inc ebx
test [ edx + eax + 0x1d ] 0x4
je r-xdata
cmp eax 0x2
jne r-xdata
movzx esi [ ebp - 0x4 ]
jmp r-xdata
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
push 0x1
push [ eax + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x2
push ecx
push 0x2
lea ecx [ ebx - 0x1 ]
push ecx
push edi
push [ eax + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call sub_428bcf
add esp 0x24
cmp eax 0x1
jne r-xdata
xor ecx ecx
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx 0x100
imul ax cx
movzx ecx [ ebp - 0x3 ]
add ax cx
movzx esi ax
inc [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
jmp r-xdata
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
cmp cx si
jne r-xdata
cmp eax 0x2
jne r-xdata
movzx ecx [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
pop edi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx 0x100
imul ax cx
movzx ecx [ ebp - 0x3 ]
add ax cx
movzx ecx ax
mov eax [ ebp - 0x10 ]
inc ebx
jmp r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx [ edx ]
movzx esi cl
inc edx
test [ esi + eax + 0x1d ] 0x4
mov [ ebp + 0x8 ] edx
je r-xdata
sub_444ae4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
xor ebx ebx
xor edi edi
call sub_428932
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] bl
je r-xdata
mov dl [ ecx ]
movzx eax dl
test [ eax + esi + 0x1d ] 0x4
je r-xdata
push [ ebp + 0xc ]
push ecx
call sub_446c10
pop ecx
pop ecx
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp + 0xc ] eax
inc ecx
mov dl [ ecx ]
test dl dl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
pop edi
pop ebx
leave
retn
inc ecx
test dl dl
jne r-xdata
mov edi ecx
test edi edi
jmp r-xdata
movzx ebx dl
shl eax 0x8
or eax ebx
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp - 0x4 ] dl
je r-xdata
jne r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
mov eax edi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_444ba5
push 0x64
push r--data
call sub_4450e0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x68 ] edi
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x64 ] ebx
xor eax eax
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
push 0x24
push ebx
push esi
call sub_4264e0
add esp 0xc
cmp edi 0xfffffffe
jne r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x16
cmp edi ebx
jl r-xdata
call sub_425732
mov [ eax ] ebx
call sub_42571f
mov [ eax ] 0x9
jmp r-xdata
call sub_445128
retn
call sub_425732
mov [ eax ] ebx
cmp edi [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
call sub_42b1b2
mov eax edi
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
and edi 0x1f
shl edi 0x6
mov eax [ ebx ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push [ ebp - 0x68 ]
call sub_4307c2
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
jne r-xdata
call sub_425732
and [ eax ] 0x0
jmp r-xdata
push [ eax + edi ]
call [ GetFileType@IAT ]
and eax 0xffff7fff
cmp eax 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x9
call sub_42571f
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
mov [ esi + 0x6 ] ax
mov [ esi + 0xc ] ax
mov [ esi + 0xa ] ax
mov [ esi + 0x4 ] ax
inc eax
mov [ esi + 0x8 ] ax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
push [ eax + edi ]
call [ GetFileInformationByHandle@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_425745
pop ecx
jmp r-xdata
movzx eax [ esi + 0x6 ]
test [ ebp - 0x60 ] 0x1
je r-xdata
mov ecx 0x2000
jmp r-xdata
cmp eax 0x3
je r-xdata
or [ ebp - 0x64 ] 0xffffffff
or eax 0x1b6
or eax 0x124
jmp r-xdata
mov [ esi + 0x6 ] cx
mov ecx [ ebp - 0x68 ]
mov [ esi ] ecx
mov [ esi + 0x10 ] ecx
xor ecx ecx
inc ecx
mov [ esi + 0x8 ] cx
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi + 0xc ] cx
mov [ esi + 0xa ] cx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ecx
mov [ esi + 0x18 ] ecx
cmp eax 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x48 ] edi
jne r-xdata
mov [ esi + 0x6 ] ax
xor edi edi
cmp [ ebp - 0x4c ] edi
jne r-xdata
push ecx
lea eax [ ebp - 0x6c ]
push eax
push ecx
push ecx
push ecx
mov eax [ ebx ]
push [ eax + edi ]
call [ PeekNamedPipe@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x6c ]
mov [ esi + 0x14 ] eax
jmp r-xdata
mov [ esi + 0x14 ] ecx
jmp r-xdata
mov ecx 0x1000
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_444ec7
mov eax [ ebp - 0x64 ]
push 0xffffffff
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x26 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
call sub_444ed1
add esp 0x1c
mov [ esi + 0x1c ] eax
cmp [ ebp - 0x54 ] edi
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x50 ] edi
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x26 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
call sub_444ed1
add esp 0x1c
mov [ esi + 0x18 ] eax
cmp [ ebp - 0x5c ] edi
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x58 ] edi
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x26 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
call sub_444ed1
add esp 0x1c
mov [ esi + 0x20 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0x14 ] eax
movzx eax [ esi + 0x6 ]
or eax 0x8000
mov [ esi + 0x6 ] ax
mov [ esi ] edi
mov [ esi + 0x10 ] edi
jmp r-xdata
sub_444ed1
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
add esi 0xfffff894
push edi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x3c ] eax
cmp esi 0x46
jl r-xdata
call sub_42571f
mov [ eax ] 0x16
or eax 0xffffffff
cmp esi 0x8a
jg r-xdata
lea eax [ ebx - 0x1 ]
cmp eax 0xb
ja r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
cmp [ ebp + 0x18 ] 0x3b
ja r-xdata
cmp [ ebp + 0x1c ] 0x3b
ja r-xdata
cmp [ ebp + 0x10 ] 0x1
jl r-xdata
lea eax [ ebx * 4 + rw-data ]
mov ecx [ eax - 0x4 ]
mov eax [ eax ]
sub eax ecx
mov edi 0x190
cmp eax [ ebp + 0x10 ]
jge r-xdata
add ecx [ ebp + 0x10 ]
mov eax esi
and eax 0x80000003
mov [ ebp - 0x2c ] ecx
jns r-xdata
mov eax esi
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ esi + 0x76c ]
cdq
mov ecx edi
idiv ecx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ esi + 0x76c ]
cdq
mov ebx edi
idiv ebx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
call sub_42ffb0
lea eax [ ebp - 0x38 ]
push eax
call sub_42f76b
pop ecx
test eax eax
jne r-xdata
cmp ebx 0x2
jle r-xdata
mov ebx [ ebp - 0x30 ]
cmp ebx 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
lea eax [ ebp - 0x34 ]
push eax
call sub_42f798
pop ecx
test eax eax
jne r-xdata
inc [ ebp - 0x2c ]
cmp [ ebp + 0x10 ] 0x1d
jg r-xdata
lea eax [ ebp - 0x3c ]
push eax
call sub_42f7c5
pop ecx
test eax eax
jne r-xdata
lea eax [ esi + 0x12b ]
cdq
idiv edi
push 0x64
pop ebx
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x14 ] esi
mov edi eax
lea eax [ esi - 0x1 ]
cdq
idiv ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x20 ] ebx
sub edi eax
lea eax [ esi - 0x1 ]
cdq
and edx 0x3
add eax edx
mov edx esi
imul edx edx 0x16d
sar eax 0x2
add eax ecx
add eax edi
add edx eax
imul edx edx 0x18
add edx ebx
mov ecx [ ebp - 0x30 ]
imul edx edx 0x3c
mov eax [ ebp + 0x1c ]
mov edi edx
mov edx [ ebp + 0x18 ]
add edi edx
imul edi edi 0x3c
add edi [ ebp - 0x3c ]
dec ecx
cmp [ ebp + 0x20 ] 0x1
lea edi [ edi + eax + 0x7c558180 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
je r-xdata
add edi [ ebp - 0x34 ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov eax edi
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_430037
pop ecx
test eax eax
je r-xdata
sub_4450e0
push sub_42adb0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_445137
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_445170
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_445137
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_446c4a
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_446c4a
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_445230
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445170
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_445137
sub_445277
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_446d90
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_446c4a
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_446c4a
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_445359
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445277
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_446d90
sub_4453ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_44456d
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_425732
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_425732
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_430888
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_425732
and [ eax ] 0x0
mov [ esi ] ebx
call sub_42571f
mov [ eax ] 0x18
call sub_42571f
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_425745
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_425745
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_42571f
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_42571f
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_430652
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_43788f
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
and [ ebp - 0x28 ] 0x0
push 0x1
lea eax [ ebp - 0x28 ]
push eax
push [ esi ]
call sub_42f088
add esp 0xc
test eax eax
jne r-xdata
call sub_425732
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_43788f
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x1a
jne r-xdata
push [ esi ]
call sub_42ef28
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_425745
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_4306d3
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_4441b7
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_42f088
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_42ca9b
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_42ca9b
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_42ef28
pop ecx
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_43788f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_42d307
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_43788f
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_42ca9b
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_42ca9b
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_445ae1
push 0x14
push r--data
call sub_42ad20
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x20 ] edi
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
call sub_4453ac
add esp 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445b55
mov esi [ ebp - 0x24 ]
cmp esi edi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
mov eax [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] esi
jmp r-xdata
call sub_42ad65
retn
or eax 0xffffffff
jmp r-xdata
sub_445b55
cmp [ ebp - 0x20 ] edi
je r-xdata
retn
cmp [ ebp - 0x24 ] edi
je r-xdata
push [ ebp - 0x1c ]
call sub_430861
pop ecx
mov eax [ ebp - 0x1c ]
sar eax 0x5
mov ecx [ ebp - 0x1c ]
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_445b8f
push 0x14
push r--data
call sub_42ad20
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_42ad65
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_4453ac
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445c25
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_445c25
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_430861
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_445c53
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445b8f
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_445c85
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_445b8f
add esp 0x18
pop ebp
retn
sub_445ca5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
push edi
cmp [ ebp + 0x10 ] eax
je r-xdata
pop edi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
mov eax 0x7fffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_446df1
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_446df1
add esp 0x10
add ebx 0x2
add edi 0x2
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
sub ebx edi
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test si si
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
add edi 0x2
dec [ ebp + 0x10 ]
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
cmp si ax
je r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_445d8a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445ca5
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
dec [ ebp + 0x10 ]
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
cmp dx ax
je r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_445e28
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_445e6a
push 0x10
push r--data
call sub_42ad20
call sub_422a09
lea esi [ eax + 0x20 ]
mov [ ebp - 0x1c ] esi
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push esi
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_43dbc1
mov edi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_43dc5d
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445ee7
mov eax [ ebp - 0x20 ]
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
call sub_42ad65
retn
sub_445f9a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_44600e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_428932
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_437c0c
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_42571f
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_446239
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_44600e
add esp 0x14
pop ebp
retn
sub_446281
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_44600e
add esp 0x14
pop ebp
retn
sub_446300
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_42b35f
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_446ea4
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_42b35f
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
push esi
call sub_42b35f
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_42b35f
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_42b35f
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_42b35f
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_42b35f
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_42b35f
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_42b35f
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_42b35f
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4386c6
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_42b35f
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_42b35f
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_42b1fb
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_446487
push 0xc
push r--data
call sub_42ad20
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
mov [ ebp + 0xc ] esi
push esi
call sub_422ae0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_446300
pop ecx
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4464ed
mov ax [ ebp - 0x1c ]
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
mov eax 0xffff
jmp r-xdata
call sub_42ad65
retn
sub_446502
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_445f9a
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_447018
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_447018
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_42571f
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_447018
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_44672c
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_428932
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_437c0c
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_437df0
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_42571f
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_42b3f0
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_4469c9
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_44672c
add esp 0x14
pop ebp
retn
sub_446a11
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_44672c
add esp 0x14
pop ebp
retn
sub_446a5a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_447444
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447486
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_446b52
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_429301
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_4229cf
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_44764b
pop ecx
pop ecx
test eax eax
jns r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_4229cf
pop ecx
mov [ ebp - 0x4 ] esi
sub_446be9
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_446c10
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_446c4a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_428932
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_42571f
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_438766
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_437c0c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_428bcf
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_446d5f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_446c4a
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_446d90
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_446df1
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_428932
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_44788d
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_446ea4
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_42b35f
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_42571f
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_42571f
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_422a09
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_42d307
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_4383b9
pop ecx
test eax eax
jne r-xdata
call sub_422a09
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_42d307
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_42ca52
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_42cb20
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_447018
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_4471b8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_4471d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
test edi edi
jle r-xdata
cmp edi 0xffffffff
jge r-xdata
mov ecx edi
mov esi [ ebp + 0x18 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add edi eax
mov [ ebp + 0x14 ] edi
inc eax
test ecx ecx
jne r-xdata
cmp esi 0xffffffff
jl r-xdata
mov ecx esi
mov eax edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
and [ ebp - 0x28 ] 0x0
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
or eax 0xffffffff
sub eax ecx
add esi eax
mov [ ebp + 0x18 ] esi
jmp r-xdata
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp edi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
inc ebx
cmp esi ebx
jle r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push edi
push [ ebp - 0x24 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
cmp edi ebx
jle r-xdata
mov eax ebx
jmp r-xdata
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x1c ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
test edi edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x1c ]
call sub_428912
mov eax [ ebp - 0x28 ]
pop ecx
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_421e20
pop ecx
test eax eax
je r-xdata
call sub_437be0
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_428912
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_421e20
pop ecx
test eax eax
je r-xdata
call sub_437be0
mov eax esp
test eax eax
je r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
add eax 0x8
sub_447444
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
push [ ebp + 0x24 ]
mov edx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4471d6
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_447486
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_447444
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445277
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_42571f
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_447570
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447486
add esp 0x10
pop ebp
retn
pop ebp
jmp sub_445359
sub_447599
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_446b38
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_4475eb
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_429301
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x9
call sub_429c09
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
pop esi
sub edi esi
push eax
call sub_4478bc
mov [ esi ] eax
add esi 0x4
mov eax [ edi + esi ]
pop ecx
test eax eax
jne r-xdata
sub_44764b
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
or eax 0xffffffff
jmp r-xdata
call sub_42571f
mov [ eax ] 0x16
push 0x3d
push esi
call sub_4479be
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_4475eb
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_447599
mov edi eax
pop ecx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_4292bc
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_446b52
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_4229cf
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_4229cf
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_4292bc
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_42939b
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_42939b
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_425c60
pop ecx
add eax 0x2
push eax
call sub_429301
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4229cf
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_425c60
pop ecx
add eax 0x2
push eax
push edi
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_4229cf
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_42571f
mov [ eax ] 0x2a
sub_44788d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_4479d5
pop ecx
pop ecx
sub_4478bc
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_425c60
lea esi [ eax + 0x1 ]
push esi
call sub_421e20
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42b146
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_44790e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_447a10
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_4479d5
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_447a10
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_447b80
cmp [ esp + 0x8 ] 0x0
mov edx [ esp + 0x4 ]
mov eax ecx
ja r-xdata
mov ecx 0x1
jmp r-xdata
cmp edx 0xfffffffe
jbe r-xdata
mov [ eax ] cl
test cl cl
je r-xdata
xor ecx ecx
mov [ eax + 0x4 ] edx
retn 0x8
mov ecx 0xfffffffe
mov [ eax + 0x4 ] ecx
retn 0x8
sub_447cf0
mov eax [ rw-data ]
push esi
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
mov esi [ TlsGetValue@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
xor eax eax
jmp r-xdata
mov eax 0x1
pop esi
retn
cmp [ eax + 0x48 ] 0x0
je r-xdata
sub_447d30
mov eax [ rw-data ]
push esi
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
mov esi [ TlsGetValue@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
xor eax eax
jmp r-xdata
mov eax 0x1
pop esi
retn
mov eax [ eax + 0x44 ]
push 0x0
push eax
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
sub_447d90
mov eax [ rw-data ]
push esi
mov esi [ TlsGetValue@IAT ]
push edi
mov edi ecx
cmp eax 0xffffffff
je r-xdata
xor eax eax
push eax
call esi
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
mov [ eax + 0x48 ] 0x0
xor eax eax
mov [ eax + 0x48 ] al
mov eax edi
pop edi
pop esi
retn
push eax
call esi
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov [ edi ] al
test al al
je r-xdata
sub_447e00
mov eax [ rw-data ]
push edi
mov edi ecx
cmp eax 0xffffffff
je r-xdata
pop edi
retn
push esi
mov esi [ TlsGetValue@IAT ]
push eax
call esi
test eax eax
je r-xdata
pop esi
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
mov cl [ edi ]
mov [ eax + 0x48 ] cl
mov cl [ edi ]
xor eax eax
pop esi
mov [ eax + 0x48 ] cl
pop edi
retn
sub_447e40
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ TlsGetValue@IAT ]
mov [ eax + 0x48 ] 0x1
xor eax eax
mov [ eax + 0x48 ] 0x1
mov eax esi
pop esi
retn 0x4
sub_447e80
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push esi
mov esi [ TlsGetValue@IAT ]
push eax
call esi
test eax eax
je r-xdata
pop esi
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
mov [ eax + 0x48 ] 0x0
xor eax eax
mov [ eax + 0x48 ] al
pop esi
retn
sub_448140
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov dl al
and dl 0xf
add dl 0x41
mov [ ecx ] dl
mov edx eax
sar edx 0x4
and dl 0xf
add dl 0x41
mov [ ecx + 0x1 ] dl
mov edx eax
sar edx 0x8
and dl 0xf
add dl 0x41
mov [ ecx + 0x2 ] dl
mov edx eax
sar edx 0xc
and dl 0xf
add dl 0x41
mov [ ecx + 0x3 ] dl
mov edx eax
sar edx 0x10
and dl 0xf
add dl 0x41
mov [ ecx + 0x4 ] dl
mov edx eax
sar edx 0x14
and dl 0xf
add dl 0x41
mov [ ecx + 0x5 ] dl
mov edx eax
sar edx 0x18
sar eax 0x1c
and dl 0xf
and al 0xf
add dl 0x41
add al 0x41
mov [ ecx + 0x6 ] dl
mov [ ecx + 0x7 ] al
mov [ ecx + 0x8 ] 0x0
retn
sub_4481c0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov dl al
and dl 0xf
add dl 0x41
mov [ ecx ] dl
mov edx eax
shr edx 0x4
and dl 0xf
add dl 0x41
mov [ ecx + 0x1 ] dl
mov edx eax
shr edx 0x8
and dl 0xf
add dl 0x41
mov [ ecx + 0x2 ] dl
mov edx eax
shr edx 0xc
and dl 0xf
add dl 0x41
mov [ ecx + 0x3 ] dl
mov edx eax
shr edx 0x10
and dl 0xf
add dl 0x41
mov [ ecx + 0x4 ] dl
mov edx eax
shr edx 0x14
and dl 0xf
add dl 0x41
mov [ ecx + 0x5 ] dl
mov edx eax
shr edx 0x18
shr eax 0x1c
and dl 0xf
and al 0xf
add dl 0x41
add al 0x41
mov [ ecx + 0x6 ] dl
mov [ ecx + 0x7 ] al
mov [ ecx + 0x8 ] 0x0
retn
sub_448240
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop esi
retn
sub_448290
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop esi
retn
sub_4482f0
mov ecx [ esp + 0x4 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
add esp 0xc
retn
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call sub_4223bd
push r--data
lea edx [ esp + 0x4 ]
push edx
mov [ esp + 0x8 ] r--data
call sub_425ceb
lea eax [ ecx * 8 ]
push eax
call sub_423fd3
add esp 0x4
test eax eax
jne r-xdata
sub_448360
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x1d ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x1d ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x1d ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x1d ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x1d ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov [ eax ] edx
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x1d ] 0x0
je r-xdata
retn
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x1d ] 0x0
je r-xdata
mov [ eax ] edx
retn
sub_448670
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov ecx 0xd
mov esi r--data
mov edi ebx
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
movsw [ edi ] [ esi ]
lea eax [ ebx + 0x36 ]
push eax
push ecx
movsb [ edi ] [ esi ]
call sub_448140
add esp 0x8
add ebx 0x3e
push ebx
call [ GetCurrentProcessId@IAT ]
push eax
call sub_4481c0
add esp 0x8
pop edi
pop esi
pop ebx
retn
sub_4486b0
push ebx
mov ebx [ esp + 0x8 ]
cmp [ ebx ] 0x0
jne r-xdata
push ebx
push 0x0
push 0x100002
call [ OpenEventA@IAT ]
pop ebx
retn
push esi
push edi
mov ecx 0xd
mov esi r--data
mov edi ebx
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
movsw [ edi ] [ esi ]
lea eax [ ebx + 0x36 ]
push eax
push ecx
movsb [ edi ] [ esi ]
call sub_448140
add esp 0x8
lea edx [ ebx + 0x3e ]
push edx
call [ GetCurrentProcessId@IAT ]
push eax
call sub_4481c0
add esp 0x8
pop edi
pop esi
sub_448710
push ebx
mov ebx [ esp + 0x8 ]
cmp [ ebx ] 0x0
jne r-xdata
push ebx
push 0x0
push 0x1
push 0x0
call [ CreateEventA@IAT ]
pop ebx
retn
push esi
push edi
mov ecx 0xd
mov esi r--data
mov edi ebx
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
movsw [ edi ] [ esi ]
lea eax [ ebx + 0x36 ]
push eax
push ecx
movsb [ edi ] [ esi ]
call sub_448140
add esp 0x8
lea edx [ ebx + 0x3e ]
push edx
call [ GetCurrentProcessId@IAT ]
push eax
call sub_4481c0
add esp 0x8
pop edi
pop esi
sub_448770
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov edx [ esi + 0x4 ]
push edi
mov edi ecx
xor eax eax
[ edi ] edx
test eax eax
jne r-xdata
pop edi
xor al al
pop esi
retn
cmp [ esi + 0xc ] eax
jne r-xdata
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push ecx
lea eax [ esi + 0x10 ]
push eax
call sub_4486b0
mov edi eax
mov eax [ esi + 0xc ]
add esp 0x8
test eax eax
je r-xdata
pop edi
mov al 0x1
pop esi
retn
push esi
call [ ResetEvent@IAT ]
mov [ esi + 0xc ] edi
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_4487d0
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov edx eax
xchg [ edx ] ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
mov edx 0x1
[ ecx ] edx
mov [ esi + 0x8 ] 0x1
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
mov ecx [ eax + 0x4 ]
cmp ecx 0x1
jle r-xdata
pop esi
retn
push esi
call [ SetEvent@IAT ]
push edi
push eax
lea eax [ esi + 0x10 ]
push eax
call sub_448710
mov edi eax
mov eax [ esi + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov [ esi + 0xc ] edi
pop edi
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_448840
mov eax [ esp + 0x4 ]
push esi
xor ecx ecx
mov edx eax
xchg [ edx ] ecx
mov esi [ esp + 0xc ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push edi
push eax
lea eax [ esi + 0x10 ]
push eax
call sub_4486b0
mov edi eax
mov eax [ esi + 0xc ]
add esp 0x8
test eax eax
je r-xdata
pop esi
retn
push esi
call [ SetEvent@IAT ]
mov [ esi + 0xc ] edi
pop edi
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_448890
push ebp
mov ebp esp
push 0xffffffff
push sub_453d08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x74 ] eax
xor eax eax
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] 0xc15730e2
mov [ ebp - 0x68 ] 0x7f0725e3
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] al
mov edi [ WaitForSingleObject@IAT ]
mov [ ebp - 0x4 ] eax
lea ecx [ ecx ]
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x68 ]
mov edx ebx
xor eax eax
[ edx ] ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4216fe
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x60 ]
push 0xffffffff
push eax
call edi
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov ecx 0x1
[ eax ] ecx
mov eax [ ebx ]
mov [ ebp - 0x64 ] 0x1
cmp eax [ ebp - 0x6c ]
je r-xdata
push eax
call [ ResetEvent@IAT ]
cmp [ ebp - 0x5c ] al
jne r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0x6c ]
je r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov edx [ ebp - 0x6c ]
mov eax ebx
xchg [ eax ] edx
mov eax [ ebp - 0x60 ]
test eax eax
jne r-xdata
lea eax [ ebx + 0x4 ]
mov ecx 0x1
[ eax ] ecx
mov [ ebp - 0x64 ] 0x1
lea edx [ ebp - 0x5c ]
push edx
push 0x0
push 0x100002
call [ OpenEventA@IAT ]
mov esi eax
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
mov ecx 0xd
mov esi r--data
lea edi [ ebp - 0x5c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x26 ]
push eax
push ebx
movsb [ edi ] [ esi ]
call sub_448140
add esp 0x8
lea ecx [ ebp - 0x1e ]
push ecx
call [ GetCurrentProcessId@IAT ]
push eax
call sub_4481c0
add esp 0x8
lea edx [ ebp - 0x5c ]
push ebx
push edx
call sub_448710
mov esi eax
mov eax [ ebp - 0x60 ]
add esp 0x8
test eax eax
je r-xdata
push eax
call [ SetEvent@IAT ]
mov eax [ ebx + 0x4 ]
cmp eax 0x1
jle r-xdata
mov eax esi
mov [ ebp - 0x60 ] eax
test esi esi
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x5c ]
push ebx
push ecx
call sub_448710
mov esi eax
mov eax [ ebp - 0x60 ]
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
call [ ebp - 0x74 ]
cmp [ ebp - 0x64 ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
push eax
call [ CloseHandle@IAT ]
push eax
call [ CloseHandle@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov eax esi
mov [ ebp - 0x60 ] eax
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_448aa0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_448ae0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_448b50
push ecx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
pop ecx
retn
push esi
mov esi [ TlsGetValue@IAT ]
push eax
call esi
test eax eax
je r-xdata
pop esi
mov ecx [ rw-data ]
cmp ecx 0xffffffff
jne r-xdata
push ecx
call esi
mov ecx [ rw-data ]
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp [ eax + 0x48 ] 0x0
je r-xdata
push ecx
call esi
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ eax + 0x44 ]
push 0x0
push eax
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
push eax
call esi
xor eax eax
jmp r-xdata
mov eax [ eax + 0x44 ]
push eax
call [ ResetEvent@IAT ]
push r--data
lea ecx [ esp + 0xb ]
xor al al
push ecx
mov [ esp + 0xf ] al
call sub_425ceb
sub_448bf0
push esi
mov esi [ ecx + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_448c90
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi ecx
test eax eax
je r-xdata
mov esi [ edi ]
mov [ edi ] eax
test esi esi
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx 0x1
[ ecx ] edx
mov eax edi
pop edi
pop esi
retn 0x4
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x0
mov ecx esi
call eax
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_448df0
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
jne r-xdata
cmp ecx 0x7fffffff
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0x80000000
jne r-xdata
xor eax eax
retn
mov eax 0x5
mov eax 0x2
cmp ecx 0x7fffffff
je r-xdata
mov eax 0x1
retn
retn
sub_448e50
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0x1d ] 0x0
jne r-xdata
retn 0x4
mov edx [ esp + 0x4 ]
mov edx [ edx ]
mov eax ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
cmp [ ecx + 0xc ] edx
jae r-xdata
cmp [ ecx + 0x1d ] 0x0
je r-xdata
sub_448e90
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov edx 0x1fffffff
sar eax 0x3
mov ecx eax
shr ecx 0x1
sub edx ecx
cmp edx eax
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn 0x4
mov eax ecx
mov ecx [ esp + 0x4 ]
cmp eax ecx
jae r-xdata
sub_448ef0
mov ecx [ esp + 0x4 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
add esp 0xc
retn 0x4
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call sub_4223bd
push r--data
lea edx [ esp + 0x4 ]
push edx
mov [ esp + 0x8 ] r--data
call sub_425ceb
lea eax [ ecx * 8 ]
push eax
call sub_423fd3
add esp 0x4
test eax eax
jne r-xdata
sub_449010
sub esp 0x10
push esi
push 0x20
mov esi ecx
call sub_423fd3
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
lea eax [ esp + 0x4 ]
mov [ esp + 0x4 ] ecx
push eax
lea ecx [ esp + 0xc ]
call sub_4223bd
push r--data
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x10 ] r--data
call sub_425ceb
int3
mov edx [ esi + 0x4 ]
mov [ eax ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] cx
pop esi
add esp 0x10
retn
sub_4490f0
mov edx [ esp + 0x4 ]
mov eax ecx
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn 0x4
push esi
add ecx 0x4
mov esi 0x1
[ ecx ] esi
pop esi
sub_449120
push ebp
mov ebp esp
push 0xffffffff
push sub_453d30
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_423fd3
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4491c0
push ebp
mov ebp esp
push 0xffffffff
push sub_453d50
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_423fd3
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_449320
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov [ esi + 0x8 ] edx
test eax eax
je r-xdata
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov eax [ esp + 0xc ]
mov eax esi
pop esi
retn 0xc
push edi
mov edi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
sub_4493c0
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ecx ] r--data
call sub_422419
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test al al
je r-xdata
mov [ esi + 0x4 ] 0x0
sub_449410
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ecx ] r--data
call sub_422419
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test al al
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423b7f
add esp 0x4
mov [ esi + 0x4 ] 0x0
sub_449470
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ecx ] r--data
call sub_422419
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test al al
je r-xdata
mov [ esi + 0x4 ] 0x0
sub_4494c0
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ecx ] r--data
call sub_422419
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test al al
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423b7f
add esp 0x4
mov [ esi + 0x4 ] 0x0
sub_449560
mov eax [ esp + 0x4 ]
push edi
mov edi ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov eax edi
pop edi
retn 0x4
push esi
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
pop esi
mov eax edi
pop edi
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x0
mov ecx esi
call eax
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_4495c0
push esi
mov esi [ ecx ]
mov [ ecx ] 0x0
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x0
mov ecx esi
call eax
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_449630
push esi
mov esi [ ecx + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_449740
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x1d ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov ebx edx
jne r-xdata
cmp [ edx + 0x1d ] 0x0
je r-xdata
push esi
push edi
mov edi [ ebp ]
lea esp [ esp ]
mov eax [ edx ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ edx + 0x1d ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ esp + 0xc ]
pop ebp
mov [ eax ] ebx
mov [ eax + 0x4 ] edx
pop ebx
retn 0x8
mov ecx [ ebp ]
lea ecx [ ecx ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
mov ebx eax
mov eax [ eax ]
cmp edi esi
jae r-xdata
cmp [ eax + 0x1d ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
mov edx eax
mov eax [ eax ]
jmp r-xdata
mov esi [ eax + 0xc ]
cmp esi edi
jae r-xdata
pop edi
pop esi
mov edx eax
cmp ecx [ eax + 0xc ]
jae r-xdata
cmp [ eax + 0x1d ] 0x0
je r-xdata
sub_449800
mov ecx [ esp + 0x4 ]
push edi
mov edi [ esp + 0xc ]
cmp ecx edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0x14 ]
mov edx [ esi ]
cmp ecx edi
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
inc edx
mov [ esi ] edx
cmp [ ecx + 0x1d ] 0x0
jne r-xdata
pop esi
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
mov ecx eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esp + 0xc ] ecx
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
mov ecx eax
mov [ esp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
jmp r-xdata
sub_449890
push ecx
push esi
mov esi ecx
xor eax eax
push edi
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
push 0x1
lea eax [ esp + 0xc ]
push eax
lea ecx [ esi + 0x14 ]
mov [ esi + 0x10 ] 0xffffffff
mov [ esp + 0x10 ] r--data
call sub_422335
mov [ esi + 0x14 ] r--data
pop edi
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov eax esi
pop esi
pop ecx
retn
sub_4498e0
push ecx
push esi
mov esi ecx
xor eax eax
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
push edi
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
mov [ esi + 0x10 ] 0xffffffff
mov [ esp + 0xc ] r--data
call sub_4223bd
mov [ esi + 0x14 ] r--data
pop edi
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov eax esi
pop esi
pop ecx
retn
sub_449930
push 0xffffffff
push sub_453d78
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
lea eax [ edi + 0x14 ]
push eax
lea ecx [ esi + 0x14 ]
mov [ esp + 0x1c ] 0x0
call sub_4224c5
mov [ esi + 0x14 ] r--data
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
sub_4499d0
push 0xffffffff
push sub_453da8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
lea eax [ edi + 0x14 ]
push eax
lea ecx [ esi + 0x14 ]
mov [ esp + 0x1c ] 0x0
call sub_4224c5
mov [ esi + 0x14 ] r--data
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
sub_449a70
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov edx [ eax + 0x4 ]
lea ecx [ esi + 0x14 ]
mov [ edx + esi + 0x20 ] r--data
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x4 ]
lea edx [ eax - 0x8 ]
mov [ eax + esi + 0x1c ] edx
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ecx ] r--data
call sub_422419
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test al al
je r-xdata
mov [ esi + 0x4 ] 0x0
sub_449b00
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov edx [ eax + 0x4 ]
lea ecx [ esi + 0x14 ]
mov [ edx + esi + 0x20 ] r--data
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x4 ]
lea edx [ eax - 0x8 ]
mov [ eax + esi + 0x1c ] edx
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ecx ] r--data
call sub_422419
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test al al
je r-xdata
mov [ esi + 0x4 ] 0x0
sub_449b90
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ esp + 0x8 ]
mov ecx [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x8 ] ecx
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0xc ] edx
retn 0x8
push esi
add ecx 0x4
mov esi 0x1
[ ecx ] esi
pop esi
sub_449bd0
push ecx
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
lea ecx [ esp + 0xc ]
call sub_449120
mov ecx [ esp + 0x18 ]
mov esi [ eax ]
mov edx [ ecx ]
mov [ ecx ] esi
mov [ eax ] edx
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
push edi
push edi
push eax
call sub_403d30
add esp 0xc
pop edi
pop esi
pop ecx
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_449c40
push ecx
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
lea ecx [ esp + 0xc ]
call sub_4491c0
mov ecx [ esp + 0x18 ]
mov esi [ eax ]
mov edx [ ecx ]
mov [ ecx ] esi
mov [ eax ] edx
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
push edi
push edi
push eax
call sub_403d30
add esp 0xc
pop edi
pop esi
pop ecx
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_449cb0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
test edx edx
je r-xdata
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
retn 0x4
push esi
add edx 0x4
mov esi 0x1
[ edx ] esi
pop esi
sub_449cf0
push ecx
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
call sub_449600
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
mov eax [ esi + 0x20 ]
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ecx
retn 0x4
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edi [ esp + 0x10 ]
mov [ edi ] eax
test esi esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_449d50
push ecx
push ebx
push esi
lea eax [ esp + 0x8 ]
push eax
call sub_449600
cmp [ eax ] 0x0
mov esi [ esp + 0x8 ]
setne bl
test esi esi
je r-xdata
pop esi
mov al bl
pop ebx
pop ecx
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_449da0
push esi
mov esi [ ecx ]
mov [ ecx ] 0x0
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x0
mov ecx esi
call eax
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_449de0
push 0xffffffff
push sub_453dd8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0x8 ]
push eax
call sub_449600
mov esi [ esp + 0x8 ]
mov [ esp + 0x14 ] 0x0
test esi esi
je r-xdata
mov [ esp + 0x14 ] 0xffffffff
test esi esi
je r-xdata
mov eax [ esi + 0x44 ]
push eax
call [ SetEvent@IAT ]
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_449e70
push 0xffffffff
push sub_453e08
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0xc ]
push eax
call sub_449600
mov esi [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
test esi esi
je r-xdata
xor bl bl
mov eax [ esi + 0x44 ]
push 0x0
push eax
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
mov al bl
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x10
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esp + 0x18 ] 0xffffffff
test esi esi
je r-xdata
sub_449f10
push ecx
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
call sub_449600
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
or edi 0xffffffff
mov edi [ esi + 0x8 ]
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ecx
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
test esi esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_449f80
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
push 0x0
push 0x3938700
push ecx
push eax
call sub_42b430
push 0x0
push 0x3c
push edx
push eax
call sub_430080
retn
sub_449fa0
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
push 0x0
push 0xf4240
push ecx
push eax
call sub_42b430
push 0x0
push 0x3c
push edx
push eax
call sub_430080
retn
sub_449fc0
push esi
mov esi [ ecx ]
push edi
mov edi [ ecx + 0x4 ]
push 0x0
push 0xf4240
push edi
push esi
call sub_42b430
push 0x0
push 0xf4240
push edx
push eax
call sub_42b3f0
sub esi eax
sbb edi edx
mov edx edi
pop edi
mov eax esi
pop esi
retn
sub_449ff0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push edi
test eax eax
je r-xdata
mov [ esi ] ecx
mov edi [ esi + 0x4 ]
mov [ esi + 0x4 ] eax
test edi edi
je r-xdata
lea edx [ eax + 0x4 ]
mov edi 0x1
[ edx ] edi
pop edi
mov eax esi
pop esi
retn 0x4
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
sub_44a070
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp edx 0x80000000
je r-xdata
cmp ecx 0xfffffffe
jne r-xdata
cmp edx 0x7fffffff
je r-xdata
mov eax edx
cmp ecx 0xfffffffe
jne r-xdata
push 0x14
push 0x1dd76000
mov eax edx
push eax
push ecx
call sub_430080
push edx
push eax
push 0x0
push 0x0
push 0x0
call sub_409d80
mov ecx [ esp + 0x18 ]
mov [ ecx ] eax
add esp 0x14
mov [ ecx + 0x4 ] edx
mov eax ecx
retn
cmp edx 0x7fffffff
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x7fffffff
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp eax 0x80000000
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x5
cmp eax 0x7fffffff
lea eax [ ecx + 0x3 ]
je r-xdata
lea eax [ ecx + 0x1 ]
jmp r-xdata
push esi
mov esi [ esp + 0x8 ]
push eax
push esi
call sub_409a20
add esp 0x8
mov eax esi
pop esi
retn
sub_44a120
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x8
mov edx [ esp + 0x8 ]
mov edx [ edx ]
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp [ eax + 0xc ] edx
jae r-xdata
cmp [ eax + 0x1d ] 0x0
je r-xdata
sub_44a1b0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ esp + 0x8 ]
mov ecx [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x8 ] ecx
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0xc ] edx
retn 0x8
push esi
add ecx 0x4
mov esi 0x1
[ ecx ] esi
pop esi
sub_44a210
push 0xffffffff
push sub_453e4c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
push eax
mov ecx esi
call sub_449930
mov ecx [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov edx [ ecx + 0x4 ]
mov [ edx + esi + 0x20 ] r--data
mov eax [ esi + 0x20 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x1c ] 0x0
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x14
retn 0x8
mov [ esi + 0x20 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x8 ] 0x1
sub_44a2e0
push 0xffffffff
push sub_453e8c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
push eax
mov ecx esi
call sub_4499d0
mov ecx [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov edx [ ecx + 0x4 ]
mov [ edx + esi + 0x20 ] r--data
mov eax [ esi + 0x20 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x1c ] 0x0
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x14
retn 0x8
mov [ esi + 0x20 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x8 ] 0x1
sub_44a3f0
push 0xffffffff
push sub_453ed4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
xor eax eax
mov [ esp + 0xc ] eax
cmp [ esp + 0x28 ] eax
je r-xdata
mov edi [ esp + 0x24 ]
push edi
mov ecx esi
call sub_449930
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x20 ] r--data
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x8 ]
push edi
push esi
mov [ esp + 0x24 ] 0x1
mov [ eax + esi + 0x1c ] ecx
call sub_403ac0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn 0x8
mov [ esi + 0x20 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] 0x1
sub_44a4a0
push 0xffffffff
push sub_453f11
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] r--data
mov ecx [ esi - 0x24 ]
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] r--data
mov [ esp + 0x10 ] ecx
test ecx ecx
je r-xdata
mov eax [ esi - 0x20 ]
mov ecx [ esi - 0x1c ]
mov edx [ esi - 0x18 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
lea eax [ esi - 0x14 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x44 ] 0x1
call sub_4224c5
mov eax [ esp + 0x2c ]
mov [ esp + 0xc ] r--data
mov [ esp + 0x20 ] r--data
mov ecx [ eax + 0x4 ]
mov [ esp + ecx + 0x2c ] r--data
mov edx [ esp + 0x2c ]
mov eax [ edx + 0x4 ]
push r--data
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + eax + 0x30 ] 0x0
mov [ esp + 0x48 ] 0xffffffff
call sub_425ceb
int3
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
sub_44a580
push 0xffffffff
push sub_453f54
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
xor eax eax
mov [ esp + 0xc ] eax
cmp [ esp + 0x28 ] eax
je r-xdata
mov edi [ esp + 0x24 ]
push edi
mov ecx esi
call sub_4499d0
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x20 ] r--data
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x8 ]
push edi
push esi
mov [ esp + 0x24 ] 0x1
mov [ eax + esi + 0x1c ] ecx
call sub_403ac0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn 0x8
mov [ esi + 0x20 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] 0x1
sub_44a630
push 0xffffffff
push sub_453f91
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] r--data
mov ecx [ esi - 0x24 ]
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] r--data
mov [ esp + 0x10 ] ecx
test ecx ecx
je r-xdata
mov eax [ esi - 0x20 ]
mov ecx [ esi - 0x1c ]
mov edx [ esi - 0x18 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
lea eax [ esi - 0x14 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x44 ] 0x1
call sub_4224c5
mov eax [ esp + 0x2c ]
mov [ esp + 0xc ] r--data
mov [ esp + 0x20 ] r--data
mov ecx [ eax + 0x4 ]
mov [ esp + ecx + 0x2c ] r--data
mov edx [ esp + 0x2c ]
mov eax [ edx + 0x4 ]
push r--data
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + eax + 0x30 ] 0x0
mov [ esp + 0x48 ] 0xffffffff
call sub_425ceb
int3
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
sub_44a710
push 0xffffffff
push sub_453fd4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
xor eax eax
mov [ esp + 0xc ] eax
cmp [ esp + 0x2c ] eax
je r-xdata
mov edi [ esp + 0x24 ]
push edi
mov ecx esi
call sub_449930
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x20 ] r--data
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x8 ]
push edi
push esi
mov [ esp + 0x24 ] 0x1
mov [ eax + esi + 0x1c ] ecx
call sub_403ac0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn 0xc
mov [ esi + 0x20 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] 0x1
sub_44a7c0
push 0xffffffff
push sub_454014
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
xor eax eax
mov [ esp + 0xc ] eax
cmp [ esp + 0x2c ] eax
je r-xdata
mov edi [ esp + 0x24 ]
push edi
mov ecx esi
call sub_4499d0
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x20 ] r--data
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x8 ]
push edi
push esi
mov [ esp + 0x24 ] 0x1
mov [ eax + esi + 0x1c ] ecx
call sub_403ac0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn 0xc
mov [ esi + 0x20 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] 0x1
sub_44a870
push 0xffffffff
push sub_45403b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax + 0x4 ]
lea eax [ edx + ecx + 0x20 ]
xor eax eax
jmp r-xdata
mov [ esi ] eax
lea eax [ esi + 0x4 ]
mov [ eax ] 0x0
push eax
push ecx
push esi
mov [ esp + 0x20 ] 0x0
call sub_449bd0
add esp 0xc
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_44a8f0
push 0xffffffff
push sub_45406b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax + 0x4 ]
lea eax [ edx + ecx + 0x20 ]
xor eax eax
jmp r-xdata
mov [ esi ] eax
lea eax [ esi + 0x4 ]
mov [ eax ] 0x0
push eax
push ecx
push esi
mov [ esp + 0x20 ] 0x0
call sub_449c40
add esp 0xc
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_44a970
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x8
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
test edx edx
je r-xdata
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
push esi
add edx 0x4
mov esi 0x1
[ edx ] esi
pop esi
sub_44a9f0
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x1d ] 0x0
push edi
mov edi [ esp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ esp + 0x10 ] edx
cmp edx eax
je r-xdata
push esi
mov esi [ edi ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x4 ]
mov edx [ eax ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
pop edi
pop ecx
retn 0x8
mov ecx [ edi ]
cmp ecx [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
mov edx [ eax ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
pop edi
pop ecx
retn 0x8
cmp [ eax + 0xc ] esi
jae r-xdata
pop esi
cmp [ eax + 0x1d ] 0x0
je r-xdata
sub_44aa60
push ecx
mov eax [ esp + 0xc ]
mov ecx [ eax ]
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ eax ] ecx
mov ecx [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x4 ]
mov [ esp ] 0x0
mov [ eax + 0x8 ] ecx
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0xc ] edx
pop ecx
retn
push esi
add ecx 0x4
mov esi 0x1
[ ecx ] esi
pop esi
sub_44aac0
push 0xffffffff
push sub_45410e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x6c ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ esp + 0x10 ] edi
mov ebx r--data
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] 0xffffffff
mov esi 0x1
push esi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x7c ] edi
mov [ esp + 0x18 ] r--data
call sub_422335
mov [ esp + 0x20 ] r--data
mov [ esp + 0x34 ] r--data
mov [ esp + 0x74 ] esi
mov [ esp + 0x60 ] r--data
mov [ esp + 0x68 ] r--data
mov ecx [ esp + 0x24 ]
mov eax 0x2
mov [ esp + 0x74 ] al
mov [ esp + 0x10 ] eax
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ecx
cmp ecx edi
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x30 ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] eax
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x78 ] 0x3
call sub_4224c5
mov edx [ esp + 0x60 ]
mov [ esp + 0x40 ] r--data
mov [ esp + 0x54 ] r--data
mov eax [ edx + 0x4 ]
mov [ esp + eax + 0x60 ] r--data
mov ecx [ esp + 0x60 ]
mov eax [ ecx + 0x4 ]
lea edx [ eax - 0x8 ]
mov [ esp + eax + 0x5c ] edx
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
mov [ esp + 0x7c ] 0x4
call sub_403ac0
add esp 0x8
test [ rw-data ] 0x1
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] 0x7c
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov eax [ rw-data ]
mov esi [ esp + 0x7c ]
mov [ esi ] eax
mov ecx [ rw-data ]
mov eax ecx
mov [ esi + 0x4 ] ecx
cmp eax edi
je r-xdata
or [ rw-data ] esi
mov ebx 0x6
push 0x2c
mov [ esp + 0x78 ] bl
call sub_423fd3
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
cmp esi edi
je r-xdata
lea ecx [ esp + 0x40 ]
call sub_449a70
lea ecx [ esp + 0x34 ]
mov [ esp + 0x68 ] r--data
mov [ esp + 0x74 ] 0xffffffff
mov [ esp + 0x20 ] r--data
mov [ esp + 0x34 ] r--data
call sub_422419
mov ecx [ esp + 0x24 ]
mov [ esp + 0x20 ] ebx
cmp ecx edi
je r-xdata
add eax 0x4
mov edx 0x1
[ eax ] edx
xor eax eax
mov [ esp + 0x18 ] edi
jmp r-xdata
mov [ esi + 0x20 ] r--data
mov [ esi + 0x28 ] r--data
lea edx [ esp + 0x40 ]
push edx
mov ecx esi
mov [ esp + 0x78 ] 0x8
mov [ esp + 0x14 ] ebx
call sub_449930
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x20 ] r--data
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
mov [ eax + esi + 0x1c ] edi
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x4 ]
lea ecx [ edx + esi + 0x20 ]
mov [ esp + 0x74 ] 0x7
mov eax esi
mov [ esp + 0x18 ] ecx
mov eax esi
mov ecx [ esp + 0x6c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x68
retn
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov [ esp + 0x1c ] edi
lea edx [ esp + 0x1c ]
push edx
push eax
lea eax [ esp + 0x20 ]
push eax
mov [ esp + 0x80 ] 0x9
call sub_449bd0
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
add esp 0xc
mov [ esp + 0x74 ] bl
mov [ rw-data ] ecx
mov [ rw-data ] eax
cmp eax edi
je r-xdata
push sub_456700
call sub_4264c6
add esp 0x4
mov ebx r--data
add eax 0x4
mov edx 0x1
[ eax ] edx
mov esi [ esp + 0x1c ]
cmp esi edi
je r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_44adb0
push 0xffffffff
push sub_4541ae
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x6c ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ esp + 0x10 ] edi
mov ebx r--data
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] 0xffffffff
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x78 ] edi
mov [ esp + 0x14 ] r--data
call sub_4223bd
mov [ esp + 0x20 ] r--data
mov [ esp + 0x34 ] r--data
mov esi 0x1
mov [ esp + 0x74 ] esi
mov [ esp + 0x60 ] r--data
mov [ esp + 0x68 ] r--data
mov ecx [ esp + 0x24 ]
mov eax 0x2
mov [ esp + 0x74 ] al
mov [ esp + 0x10 ] eax
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ecx
cmp ecx edi
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x30 ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] eax
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x78 ] 0x3
call sub_4224c5
mov edx [ esp + 0x60 ]
mov [ esp + 0x40 ] r--data
mov [ esp + 0x54 ] r--data
mov eax [ edx + 0x4 ]
mov [ esp + eax + 0x60 ] r--data
mov ecx [ esp + 0x60 ]
mov eax [ ecx + 0x4 ]
lea edx [ eax - 0x8 ]
mov [ esp + eax + 0x5c ] edx
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
mov [ esp + 0x7c ] 0x4
call sub_403ac0
add esp 0x8
test [ rw-data ] 0x1
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] 0x7c
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov eax [ rw-data ]
mov esi [ esp + 0x7c ]
mov [ esi ] eax
mov ecx [ rw-data ]
mov eax ecx
mov [ esi + 0x4 ] ecx
cmp eax edi
je r-xdata
or [ rw-data ] esi
mov ebx 0x6
push 0x2c
mov [ esp + 0x78 ] bl
call sub_423fd3
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
cmp esi edi
je r-xdata
lea ecx [ esp + 0x40 ]
call sub_449b00
lea ecx [ esp + 0x34 ]
mov [ esp + 0x68 ] r--data
mov [ esp + 0x74 ] 0xffffffff
mov [ esp + 0x20 ] r--data
mov [ esp + 0x34 ] r--data
call sub_422419
mov ecx [ esp + 0x24 ]
mov [ esp + 0x20 ] ebx
cmp ecx edi
je r-xdata
add eax 0x4
mov edx 0x1
[ eax ] edx
xor eax eax
mov [ esp + 0x18 ] edi
jmp r-xdata
mov [ esi + 0x20 ] r--data
mov [ esi + 0x28 ] r--data
lea edx [ esp + 0x40 ]
push edx
mov ecx esi
mov [ esp + 0x78 ] 0x8
mov [ esp + 0x14 ] ebx
call sub_4499d0
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x20 ] r--data
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
mov [ eax + esi + 0x1c ] edi
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x4 ]
lea ecx [ edx + esi + 0x20 ]
mov [ esp + 0x74 ] 0x7
mov eax esi
mov [ esp + 0x18 ] ecx
mov eax esi
mov ecx [ esp + 0x6c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x68
retn
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov [ esp + 0x1c ] edi
lea edx [ esp + 0x1c ]
push edx
push eax
lea eax [ esp + 0x20 ]
push eax
mov [ esp + 0x80 ] 0x9
call sub_449c40
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
add esp 0xc
mov [ esp + 0x74 ] bl
mov [ rw-data ] ecx
mov [ rw-data ] eax
cmp eax edi
je r-xdata
push sub_4566c0
call sub_4264c6
add esp 0x4
mov ebx r--data
add eax 0x4
mov edx 0x1
[ eax ] edx
mov esi [ esp + 0x1c ]
cmp esi edi
je r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_44b0a0
push 0xffffffff
push sub_4541ff
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x2c
mov [ esp + 0x10 ] 0x0
call sub_423fd3
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x1c ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn
mov [ esi + 0x20 ] r--data
add edi 0xffffffd8
mov [ esi + 0x28 ] r--data
mov eax 0x1
push edi
mov ecx esi
mov [ esp + 0x20 ] al
mov [ esp + 0x10 ] eax
call sub_449930
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x20 ] r--data
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x8 ]
push edi
push esi
mov [ esp + 0x24 ] 0x2
mov [ eax + esi + 0x1c ] ecx
call sub_403ac0
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
add esp 0x8
lea eax [ eax + esi + 0x20 ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn
sub_44b180
push 0xffffffff
push sub_45424f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x2c
mov [ esp + 0x10 ] 0x0
call sub_423fd3
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x1c ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn
mov [ esi + 0x20 ] r--data
add edi 0xffffffd8
mov [ esi + 0x28 ] r--data
mov eax 0x1
push edi
mov ecx esi
mov [ esp + 0x20 ] al
mov [ esp + 0x10 ] eax
call sub_4499d0
mov eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x20 ] r--data
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x8 ]
push edi
push esi
mov [ esp + 0x24 ] 0x2
mov [ eax + esi + 0x1c ] ecx
call sub_403ac0
mov edx [ esi + 0x20 ]
mov eax [ edx + 0x4 ]
add esp 0x8
lea eax [ eax + esi + 0x20 ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn
sub_44b260
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
retn
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
test edx edx
je r-xdata
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
push esi
add edx 0x4
mov esi 0x1
[ edx ] esi
pop esi
sub_44b2a0
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x8
add eax 0x8
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_44b2f0
push ecx
mov eax [ rw-data ]
push esi
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ecx
retn
push eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
lea ecx [ esi + 0x10 ]
call sub_44a9f0
mov eax [ esp + 0x4 ]
cmp eax [ esi + 0x14 ]
je r-xdata
add eax 0x10
pop esi
pop ecx
retn
sub_44b330
push ecx
mov eax [ esp + 0x8 ]
mov [ esp + 0x8 ] eax
mov eax [ rw-data ]
push esi
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ecx
retn
push eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esi + 0x10 ]
call sub_44a9f0
mov eax [ esp + 0x4 ]
cmp eax [ esi + 0x14 ]
je r-xdata
add eax 0x10
je r-xdata
mov eax [ eax + 0x8 ]
pop esi
pop ecx
retn
sub_44b380
sub esp 0xc
push esi
push 0x20
mov esi ecx
call sub_423fd3
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x0
call sub_4223bd
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_425ceb
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x1c ] 0x0
test ecx ecx
je r-xdata
pop esi
add esp 0xc
retn 0x4
mov edx [ esp + 0x14 ]
mov esi [ edx ]
mov [ ecx ] esi
mov esi [ edx + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edx + 0x8 ]
mov [ ecx + 0x8 ] esi
test esi esi
je r-xdata
mov edx [ edx + 0xc ]
mov [ ecx + 0xc ] edx
push edi
add esi 0x4
mov edi 0x1
[ esi ] edi
pop edi
sub_44b420
push ecx
mov eax [ esp ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push 0x0
push ecx
mov ecx [ esp + 0x14 ]
push edx
push eax
push ecx
call sub_44b2a0
add esp 0x1c
retn
sub_44b450
push 0xffffffff
push sub_454278
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
push 0x8
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ edx ]
mov edx [ esp + 0x24 ]
mov edx [ edx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x1c
retn
push 0x1
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] r--data
call sub_422335
mov [ esp + 0x8 ] r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0x20 ] 0x0
call sub_4102c0
sub_44b4e0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push 0x0
add ecx 0xc
push ecx
mov ecx [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_44b2a0
add esp 0x18
retn 0xc
sub_44b510
mov eax [ ecx + 0x8 ]
push esi
push edi
cmp eax 0xffffffe
jb r-xdata
inc eax
push ebx
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x20 ]
mov [ ebp + 0x4 ] eax
mov edx [ ecx + 0x4 ]
xor bl bl
cmp eax edx
jne r-xdata
mov edi [ esp + 0x18 ]
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
cmp [ esp + 0x18 ] bl
je r-xdata
mov [ edx + 0x4 ] ebp
mov eax [ ecx + 0x4 ]
mov [ eax ] ebp
mov edx [ ecx + 0x4 ]
jmp r-xdata
push edi
call sub_423b7f
add esp 0x4
push r--data
call sub_420bb6
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov [ eax + 0x8 ] ebp
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] ebp
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x8 ] ebp
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ ebp + 0x4 ]
mov eax ebp
cmp [ edx + 0x1c ] bl
jne r-xdata
mov [ edx ] ebp
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x14 ]
mov [ eax ] ebp
pop ebp
pop ebx
pop edi
mov [ ecx + 0x1c ] 0x1
pop esi
retn 0x10
lea ebx [ ebx ]
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov esi [ esi ]
cmp [ esi + 0x1c ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x1c ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x1c ] 0x1
mov [ esi + 0x1c ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x1c ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x1c ] 0x1
mov [ esi + 0x1c ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x1c ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x1c ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x1c ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x1d ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x1d ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x1c ] bl
je r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x1c ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x1c ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x1d ] bl
jne r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x1d ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_44b770
push ebp
mov ebp esp
push 0xffffffff
push sub_4542a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp eax 0x1fffffff
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x3
cmp ecx eax
jae r-xdata
push r--data
call sub_420bb6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push eax
mov ecx edi
call sub_448ef0
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push 0x0
mov ebx eax
mov eax [ esi + 0x4 ]
push edi
push ebx
push eax
push ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
call sub_44b2a0
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x18
sar edi 0x3
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebx + eax * 8 ]
lea edx [ ebx + edi * 8 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] edx
mov [ esi ] ebx
push eax
call sub_423b7f
add esp 0x4
sub_44b840
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x1d ] 0x0
mov esi ecx
mov cl 0x1
mov [ esp + 0x18 ] cl
jne r-xdata
mov ebp esi
mov [ esp + 0x1c ] ebp
test cl cl
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0xc ]
jae r-xdata
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x1c ]
cmp esi [ eax ]
jne r-xdata
cmp edx [ eax + 0xc ]
setb cl
cmp [ eax + 0xc ] edx
setae cl
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x18 ]
push ebx
push esi
push ecx
lea edx [ esp + 0x28 ]
push edx
mov ecx edi
call sub_44b510
mov ecx [ eax ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
retn 0xc
call sub_448360
mov ebp [ esp + 0x1c ]
push ebx
push esi
push 0x1
push ecx
mov ecx edi
call sub_44b510
mov edx [ eax ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
retn 0xc
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov [ esp + 0x18 ] cl
test cl cl
je r-xdata
push ebx
call sub_423b7f
mov eax [ esp + 0x18 ]
add esp 0x4
pop edi
pop esi
mov [ eax ] ebp
pop ebp
mov [ eax + 0x4 ] 0x0
pop ebx
retn 0xc
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
cmp [ esp + 0x1c ] 0x0
mov esi eax
je r-xdata
cmp [ eax + 0x1d ] 0x0
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_44b950
push 0xffffffff
push sub_4542c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ TlsGetValue@IAT ]
mov ebx eax
xor ebx ebx
jmp r-xdata
mov [ esp + 0x24 ] 0xffffffff
test ebx ebx
je r-xdata
mov edi edi
mov [ esp + 0x14 ] ebx
mov [ esp + 0x24 ] 0x0
test ebx ebx
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
lea edx [ ebx + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x0
mov ecx ebx
call eax
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ebp [ ebx + 0x14 ]
mov esi [ ebp ]
cmp esi ebp
je r-xdata
lea ecx [ ecx ]
mov edi [ ebx + 0xc ]
mov eax [ edi + 0x4 ]
mov [ ebx + 0xc ] eax
mov ecx [ edi ]
test ecx ecx
je r-xdata
push sub_447c40
push rw-data
call sub_448890
mov eax [ rw-data ]
add esp 0x8
cmp eax 0xffffffff
je r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
cmp [ esi + 0x1d ] 0x0
mov edi esi
jne r-xdata
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov esi [ edi ]
mov edx [ esi ]
mov eax [ edx ]
push 0x0
mov ecx esi
call eax
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x0
push eax
call [ TlsSetValue@IAT ]
mov ecx [ edi + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
push edi
lea ecx [ esp + 0x1c ]
push ecx
lea ecx [ ebx + 0x10 ]
call sub_40e7c0
cmp esi ebp
jne r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
jmp r-xdata
sub_44baf0
push ebp
mov ebp esp
push 0xffffffff
push sub_4542f0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push sub_447c40
push rw-data
call sub_448890
mov eax [ rw-data ]
mov esi [ ebp + 0x8 ]
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call edx
mov [ ebp - 0x4 ] 0xffffffff
call sub_44b950
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push eax
call [ TlsSetValue@IAT ]
sub_44bb80
push ebx
push edi
mov edi ecx
mov eax [ edi ]
lea ecx [ eax + 0x20 ]
push ecx
push 0x4
push eax
push sub_44baf0
push 0x0
push 0x0
call sub_44e95f
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
mov edx [ edi ]
push esi
add edx 0x4
mov eax 0x1
[ edx ] eax
mov esi [ edi ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop edi
xor al al
pop ebx
retn
mov [ esi + 0x8 ] ebx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edx
call [ ResumeThread@IAT ]
pop esi
pop edi
mov al 0x1
pop ebx
retn
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_44bbf0
push ebx
push edi
mov edi ecx
mov eax [ edi ]
mov ecx [ esp + 0xc ]
mov ecx [ ecx ]
lea edx [ eax + 0x20 ]
push edx
push 0x4
push eax
push sub_44baf0
push ecx
push 0x0
call sub_44e95f
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
mov eax [ edi ]
push esi
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov esi [ edi ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop edi
xor al al
pop ebx
retn 0x4
mov [ esi + 0x8 ] ebx
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push eax
call [ ResumeThread@IAT ]
pop esi
pop edi
mov al 0x1
pop ebx
retn 0x4
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_44bc70
mov eax [ ecx + 0x4 ]
mov edx [ esp + 0x4 ]
push esi
mov esi [ ecx ]
push edi
sub eax esi
mov edi 0x1fffffff
sar eax 0x3
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call sub_420bb6
pop edi
pop esi
retn 0x4
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
pop edi
pop esi
mov [ esp + 0x4 ] edx
jmp sub_44b770
mov edx eax
cmp edx eax
jae r-xdata
sub_44bcd0
mov eax [ esp + 0x8 ]
push esi
push edi
push 0x0
push eax
mov esi ecx
call sub_44b380
mov edi [ esp + 0x10 ]
push eax
push edi
mov ecx esi
call sub_44b840
mov eax edi
pop edi
pop esi
retn 0x8
sub_44bd00
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ esp + 0xc ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_44bc70
sub edi ecx
sar edi 0x3
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x8
pop edi
pop esi
retn 0x4
mov edx [ edi ]
mov [ eax ] edx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ esi ]
lea ecx [ eax + edi * 8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_44bc70
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
add [ esi + 0x4 ] 0x8
pop edi
pop esi
retn 0x4
sub_44bd70
push 0xffffffff
push sub_454340
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x64 ]
add ecx 0x7d2c
lea edx [ ecx * 4 + 0x3 ]
mov eax 0x396b06bd
mul edx
mov esi edx
shr esi 0xf
mov eax esi
imul esi esi 0x64
imul eax eax 0x23ab1
shr eax 0x2
sub ecx eax
lea edx [ ecx * 4 + 0x3 ]
mov eax 0x166db073
mul edx
mov ebx edx
shr ebx 0x7
mov eax ebx
imul eax eax 0x5b5
shr eax 0x2
sub ecx eax
mov edi ecx
lea ecx [ edi + edi * 4 + 0x2 ]
mov eax 0xd62b80d7
mul ecx
mov ecx edx
shr ecx 0x7
mov edx ecx
imul edx edx 0x99
add edx 0x2
mov eax 0xcccccccd
mul edx
shr edx 0x2
sub edi edx
mov eax 0xcccccccd
mul ecx
shr edx 0x3
lea eax [ edx + edx * 2 ]
add eax eax
add eax eax
sub ecx eax
add ecx 0x3
add esi ebx
movzx ebp cx
lea ecx [ esi + edx - 0x12c0 ]
movzx ecx cx
inc edi
lea edx [ ecx + 0x1 ]
movzx edi di
cmp edx 0x579
jge r-xdata
mov eax 0x2710
cmp cx ax
jbe r-xdata
lea ecx [ esp + 0x14 ]
call sub_403eb0
push eax
mov [ esp + 0x5c ] 0x0
call sub_410cf0
lea edx [ edi + 0x1 ]
cmp edx 0x2
jge r-xdata
lea ecx [ esp + 0x14 ]
call sub_403eb0
push eax
mov [ esp + 0x5c ] 0x1
call sub_410cf0
cmp edi 0x1f
jbe r-xdata
lea ecx [ esp + 0x20 ]
call sub_403d60
push eax
mov [ esp + 0x5c ] 0x2
call sub_4100c0
lea eax [ ebp + 0x1 ]
cmp eax 0x2
jge r-xdata
lea ecx [ esp + 0x2c ]
call sub_403d60
push eax
mov [ esp + 0x5c ] 0x3
call sub_4100c0
cmp ebp 0xc
jbe r-xdata
lea ecx [ esp + 0x38 ]
call sub_403fd0
push eax
mov [ esp + 0x5c ] 0x4
call sub_410d80
mov eax [ esp + 0x60 ]
mov [ eax ] cx
mov [ eax + 0x2 ] bp
mov [ eax + 0x4 ] di
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn
lea ecx [ esp + 0x44 ]
call sub_403fd0
push eax
mov [ esp + 0x5c ] 0x5
call sub_410d80
sub_44bfe0
sub esp 0x8
mov eax [ esp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
push eax
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call sub_449740
mov edi [ esp + 0x10 ]
mov ebx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
mov edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x1c ]
push eax
push edi
push ebx
call sub_449800
add esp 0x10
push edi
push ebx
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call sub_40ccc0
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
add esp 0x8
retn 0x4
sub_44c040
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
sub esp 0x8
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp edx 0x80000000
je r-xdata
cmp eax 0xfffffffe
jne r-xdata
cmp edx 0x7fffffff
je r-xdata
cmp eax 0xfffffffe
jne r-xdata
push 0x14
push 0x1dd76000
mov ecx edx
push ecx
push eax
call sub_42b430
push eax
lea eax [ esp + 0x4 ]
push eax
call sub_44bd70
lea ecx [ esp + 0x8 ]
push ecx
call sub_40ff70
mov ecx [ esp + 0x18 ]
mov [ ecx ] eax
add esp 0xc
mov eax ecx
add esp 0x8
retn 0x4
cmp edx 0x7fffffff
jne r-xdata
test eax eax
jne r-xdata
cmp edx 0x7fffffff
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp edx 0x80000000
jne r-xdata
push esi
mov esi [ esp + 0x10 ]
xor eax eax
push eax
mov ecx esi
call sub_4041d0
mov eax esi
pop esi
add esp 0x8
retn 0x4
mov eax 0x5
mov eax 0x2
cmp edx 0x7fffffff
je r-xdata
push esi
mov esi [ esp + 0x10 ]
mov eax 0x1
push eax
mov ecx esi
call sub_4041d0
mov eax esi
pop esi
add esp 0x8
retn 0x4
push esi
mov esi [ esp + 0x10 ]
push eax
mov ecx esi
call sub_4041d0
mov eax esi
pop esi
add esp 0x8
retn 0x4
sub_44c130
push esi
mov esi ecx
call [ GetTickCount@IAT ]
mov ecx [ esp + 0xc ]
mov [ esi ] eax
mov eax [ esp + 0x8 ]
lea edx [ esi + 0x18 ]
push sub_4042a0
push edx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] 0x1
call sub_40a100
add esp 0x8
mov eax esi
pop esi
retn 0x8
sub_44c170
sub esp 0x10
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
and eax [ esi + 0xc ]
cmp eax 0xffffffff
jne r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
mov [ eax ] 0x1
mov [ eax + 0x4 ] 0xfffffffe
pop esi
add esp 0x10
retn 0x4
lea ecx [ esp + 0x4 ]
push sub_4042a0
push ecx
call sub_40a100
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x18 ]
add esp 0x8
cmp [ esp + 0x8 ] ecx
jl r-xdata
push edi
call [ GetTickCount@IAT ]
sub eax [ esi ]
mov ecx [ esi + 0x8 ]
mov edi eax
mov eax [ esi + 0xc ]
xor edx edx
cmp edx eax
ja r-xdata
lea edx [ esp + 0x4 ]
push edx
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_40a030
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
add esp 0xc
push 0x0
push 0x3e8
push ecx
push edx
call sub_42b430
add eax 0x1
adc edx 0x0
mov [ esp + 0x10 ] edx
jne r-xdata
jg r-xdata
xor ecx ecx
mov [ esp + 0x14 ] ecx
jb r-xdata
mov ecx 0x1
jmp r-xdata
cmp eax 0xfffffffe
jbe r-xdata
mov eax [ esp + 0x18 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
pop esi
add esp 0x10
retn 0x4
cmp [ esp + 0x4 ] edx
jb r-xdata
mov [ eax + 0x4 ] ecx
pop esi
add esp 0x10
retn 0x4
mov ecx 0xfffffffe
sub ecx edi
sbb eax edx
test eax eax
jne r-xdata
cmp edi ecx
jae r-xdata
mov edx [ esp + 0x18 ]
mov [ edx ] cl
test cl cl
je r-xdata
xor ecx ecx
mov edx 0x1
jmp r-xdata
cmp ecx 0xfffffffe
jbe r-xdata
mov [ edx + 0x4 ] eax
mov eax edx
pop esi
add esp 0x10
retn 0x4
mov eax 0xfffffffe
mov eax [ esp + 0x1c ]
mov [ eax ] dl
pop edi
test dl dl
je r-xdata
xor edx edx
sub_44c2b0
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x2c ]
mov [ esi + 0x18 ] 0x1
call sub_405980
mov edi [ esi + 0x50 ]
mov esi [ edi ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x4
lea esp [ esp ]
mov ecx [ esi + 0x8 ]
call sub_405980
mov esi [ esi ]
cmp esi edi
jne r-xdata
sub_44c2f0
push ebx
mov bl [ esp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_4081c0
lea edi [ esi - 0x4 ]
push eax
push 0x8
push esi
call sub_44ea6f
test bl 0x1
je r-xdata
test bl 0x1
je r-xdata
mov ecx [ esi ]
mov eax 0x80000000
mov edx ecx
[ edx ] eax
test eax 0x40000000
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
push edi
call sub_421eb4
add esp 0x4
mov eax esi
pop esi
pop ebx
retn 0x4
push esi
call sub_423b7f
add esp 0x4
cmp eax 0x80000000
jle r-xdata
mov eax ecx
[ eax ] 0x1e
jb r-xdata
call sub_405210
push eax
call [ SetEvent@IAT ]
sub_44c380
push 0xffffffff
push sub_454368
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov [ esp + 0x14 ] 0x0
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0xffffffff
je r-xdata
push eax
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x14
retn
mov ecx [ esp + 0x20 ]
mov eax 0x80000000
mov edx ecx
[ edx ] eax
test eax 0x40000000
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x8 ] ecx
lea ecx [ esp + 0x4 ]
push ecx
lea ecx [ eax + 0x24 ]
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x8 ] edx
call sub_44bd00
cmp eax 0x80000000
jle r-xdata
mov eax ecx
[ eax ] 0x1e
jb r-xdata
call sub_405210
push eax
call [ SetEvent@IAT ]
sub_44c460
push 0xffffffff
push sub_454398
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea eax [ esi + 0x24 ]
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x0
call sub_40a8d0
lea ecx [ esi + 0x2c ]
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x18 ] 0x1
call sub_405980
mov edi [ esi + 0x50 ]
mov esi [ edi ]
cmp esi edi
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov [ esp + 0x1c ] 0xffffffff
je r-xdata
lea esp [ esp ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn
mov ecx [ esp + 0xc ]
mov eax 0x80000000
mov edx ecx
[ edx ] eax
test eax 0x40000000
jne r-xdata
mov ecx [ esi + 0x8 ]
call sub_405980
mov esi [ esi ]
cmp esi edi
jne r-xdata
cmp eax 0x80000000
jle r-xdata
mov eax ecx
[ eax ] 0x1e
jb r-xdata
call sub_405210
push eax
call [ SetEvent@IAT ]
sub_44c530
push 0xffffffff
push sub_4543ff
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x14 ] esi
mov [ esi ] r--data
mov ebx [ esi + 0x24 ]
mov ebp [ esi + 0x28 ]
mov [ esp + 0x28 ] 0x4
cmp ebx ebp
je r-xdata
mov edi [ esi + 0x34 ]
mov ebx [ esi + 0x38 ]
cmp edi ebx
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax 0x80000000
mov edx ecx
[ edx ] eax
test eax 0x40000000
jne r-xdata
mov eax [ esi + 0x44 ]
xor ebx ebx
mov [ esp + 0x28 ] 0x3
cmp eax ebx
je r-xdata
mov ecx [ edi ]
call sub_44c460
add edi 0x8
cmp edi ebx
jne r-xdata
mov ecx [ ebx ]
call sub_405980
add ebx 0x8
cmp ebx ebp
jne r-xdata
cmp eax 0x80000000
jle r-xdata
mov eax [ esi + 0x34 ]
mov [ esp + 0x28 ] 0x2
cmp eax ebx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax ecx
[ eax ] 0x1e
jb r-xdata
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov eax [ esi + 0x24 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esi + 0x38 ]
push edx
lea edx [ esi + 0x40 ]
push edx
push ecx
push eax
call sub_4143f0
mov eax [ esi + 0x34 ]
push eax
call sub_423b7f
add esp 0x14
push eax
call [ CloseHandle@IAT ]
lea edi [ ecx + 0x4 ]
mov ecx [ edi ]
test ecx ecx
jne r-xdata
lea edi [ esi + 0x10 ]
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esp + 0x18 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0x24 ]
push eax
mov ecx edi
mov [ esp + 0x34 ] 0x5
call sub_40ccc0
mov edi [ edi + 0x4 ]
push edi
call sub_423b7f
mov esi [ esi + 0x8 ]
add esp 0x4
mov [ esp + 0x28 ] 0xffffffff
cmp esi ebx
je r-xdata
push eax
call sub_423b7f
add esp 0x4
push ecx
call [ SetEvent@IAT ]
push ecx
push ecx
call sub_404940
mov ecx eax
add esp 0x8
mov edx ecx
xor eax eax
[ edi ] edx
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
cmp esi 0xffffffff
je r-xdata
push ecx
call [ CloseHandle@IAT ]
mov ecx edi
push esi
call [ CloseHandle@IAT ]
sub_44c700
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov esi [ esp + 0x2c ]
cmp [ esi + 0x10 ] 0x0
mov [ esp + 0xc ] 0x0
mov [ esp + 0x10 ] 0x0
je r-xdata
xor edx edx
xor ecx ecx
mov [ esp + 0x18 ] edx
xor eax eax
lea edx [ esp + 0x4 ]
mov [ esp + 0x1c ] ecx
add esi 0x18
push edx
mov ecx esi
mov [ esp + 0x18 ] eax
mov [ esp + 0x24 ] eax
call sub_44c040
mov eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
call sub_44bd70
mov dx [ esp + 0xc ]
add esp 0x8
lea eax [ esp + 0x4 ]
push eax
mov ecx esi
mov [ esp + 0x18 ] dx
call sub_44c040
mov ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x8 ]
push edx
call sub_44bd70
mov ax [ esp + 0xe ]
add esp 0x8
lea ecx [ esp + 0x4 ]
push ecx
mov ecx esi
mov [ esp + 0x1a ] ax
call sub_44c040
mov edx [ esp + 0x4 ]
push edx
lea eax [ esp + 0x8 ]
push eax
call sub_44bd70
mov cx [ esp + 0x10 ]
lea edx [ esp + 0xc ]
push esi
push edx
mov [ esp + 0x2a ] cx
call sub_44a070
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
add esp 0x10
push 0x0
push 0xd693a400
push eax
push ecx
call sub_42b430
lea edx [ esp + 0x4 ]
push esi
push edx
mov [ esp + 0x24 ] ax
call sub_44a070
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
add esp 0x8
push 0x0
push 0x3938700
push eax
push ecx
call sub_42b430
push 0x0
push 0x3c
push edx
push eax
call sub_430080
lea edx [ esp + 0x4 ]
push esi
push edx
mov [ esp + 0x26 ] ax
call sub_44a070
add esp 0x8
push 0x0
push 0xf4240
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
call sub_42b430
push 0x0
push 0x3c
push edx
push eax
call sub_430080
lea edx [ esp + 0xc ]
mov [ esp + 0x20 ] ax
push edx
lea eax [ esp + 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
test eax eax
jne r-xdata
call [ GetTickCount@IAT ]
sub eax [ esi ]
mov ecx [ esi + 0x8 ]
mov esi [ esi + 0xc ]
xor edx edx
sub ecx eax
sbb esi edx
js r-xdata
push edi
lea ecx [ esp + 0x8 ]
push esi
push ecx
call sub_44a070
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
add esp 0x8
push 0x0
push 0xf4240
push esi
push edi
call sub_42b430
push 0x0
push 0xf4240
push edx
push eax
call sub_42b3f0
sub edi eax
sbb esi edx
mov eax edi
mov edx edi
mov ecx esi
shld esi eax 0x2
add eax eax
add eax eax
add edx eax
mov eax [ esp + 0x10 ]
adc ecx esi
shld ecx edx 0x1
add edx edx
add eax edx
mov edx [ esp + 0x14 ]
pop edi
adc edx ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_4216fe
add esp 0x24
retn
xor edx edx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_4216fe
add esp 0x24
retn
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
pop esi
xor ecx esp
call sub_4216fe
add esp 0x24
retn
jg r-xdata
push 0xffffffff
push 0xffffd8f0
push esi
push ecx
call sub_42b3f0
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_4216fe
add esp 0x24
retn
test ecx ecx
je r-xdata
sub_44c940
push 0xffffffff
push sub_454428
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
xor eax eax
or edi 0xffffffff
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x70 ]
xor ebx ebx
xor ebp ebp
mov [ esp + 0x34 ] ebx
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x18 ] edi
cmp eax edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov [ esp + 0x1c ] ebx
mov [ esp + 0x34 ] eax
lea ebp [ ebx + 0x1 ]
mov [ esp + 0x14 ] ebx
mov eax [ esp + 0x7c ]
and eax [ esp + 0x80 ]
mov [ esp + 0x68 ] ebx
cmp eax edi
je r-xdata
mov esi [ TlsGetValue@IAT ]
push eax
call esi
cmp eax ebx
je r-xdata
cmp [ esp + 0x18 ] 0xffffffff
mov edi [ WaitForMultipleObjects@IAT ]
setne bl
mov [ esp + 0x24 ] 0x0
xor esi esi
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x78 ]
call sub_44c170
mov edi [ esp + 0x28 ]
cmp edi 0x14
jbe r-xdata
mov ecx [ rw-data ]
cmp ecx edi
jne r-xdata
test ebp ebp
je r-xdata
lea edx [ esp + 0x2c ]
push edx
lea ecx [ esp + 0x78 ]
call sub_44c170
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov [ esp + 0x24 ] ecx
cmp [ esp + 0x84 ] 0x0
jne r-xdata
push ebx
push ebx
push ebx
call [ CreateWaitableTimerA@IAT ]
mov esi eax
mov [ esp + 0x14 ] esi
test esi esi
je r-xdata
push ecx
call esi
mov ecx [ rw-data ]
xor eax eax
jmp r-xdata
push esi
call [ Sleep@IAT ]
test bl bl
je r-xdata
xor esi esi
call [ GetTickCount@IAT ]
lea ecx [ esp + 0x58 ]
push sub_4042a0
push ecx
mov [ esp + 0x48 ] eax
mov [ esp + 0x50 ] edi
mov [ esp + 0x54 ] esi
mov [ esp + 0x58 ] 0x1
call sub_40a100
mov ecx 0x8
lea esi [ esp + 0x48 ]
lea edi [ esp + 0x7c ]
add esp 0x8
[ edi ] [ esi ]
lea edx [ esp + 0x74 ]
push edx
call sub_44c700
add esp 0x4
push 0x0
push 0x0
push 0x0
mov [ esp + 0x30 ] eax
push 0x0
lea eax [ esp + 0x34 ]
push eax
push esi
mov [ esp + 0x40 ] edx
call [ SetWaitableTimer@IAT ]
test eax eax
setne al
test al al
je r-xdata
mov [ esp + 0x20 ] ebp
cmp ecx edi
jne r-xdata
cmp [ eax + 0x48 ] bl
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
add [ esp + 0x7c ] 0x2
adc [ esp + 0x80 ] 0xffffffff
mov eax esi
or eax 0xffffffff
jmp r-xdata
mov [ esp + 0x18 ] ebp
mov [ esp + ebp * 4 + 0x34 ] esi
inc ebp
jmp r-xdata
push ecx
call esi
xor eax eax
jmp r-xdata
test bl bl
jne r-xdata
jmp r-xdata
cmp [ esp + 0x84 ] 0x0
je r-xdata
cmp eax [ esp + 0x1c ]
je r-xdata
push eax
push 0x0
lea edx [ esp + 0x3c ]
push edx
push ebp
call edi
cmp eax ebp
jae r-xdata
mov eax [ eax + 0x44 ]
mov [ esp + ebp * 4 + 0x34 ] eax
inc ebp
mov eax [ esp + 0x14 ]
mov [ esp + 0x68 ] 0xffffffff
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x68 ] 0xffffffff
test eax eax
je r-xdata
cmp eax [ esp + 0x20 ]
je r-xdata
xor al al
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn
cmp eax 0xffffffff
je r-xdata
mov al 0x1
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
cmp eax [ esp + 0x18 ]
jne r-xdata
push eax
call [ CloseHandle@IAT ]
push eax
call [ CloseHandle@IAT ]
push eax
call [ TlsGetValue@IAT ]
xor eax eax
jmp r-xdata
mov eax [ eax + 0x44 ]
push eax
call [ ResetEvent@IAT ]
push r--data
lea ecx [ esp + 0x74 ]
xor al al
push ecx
mov [ esp + 0x78 ] al
call sub_425ceb
int3
sub_44cbe0
push ebp
mov ebp esp
push 0xffffffff
push sub_454469
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x4c
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
mov edi 0x1
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x1c ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_404d70
add [ esi + 0x4 ] edi
mov [ esi ] r--data
mov [ esi + 0x48 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] r--data
call sub_422335
mov [ ebp - 0x28 ] r--data
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x4 ] esi
call sub_4102c0
sub_44ccc0
push ebp
mov ebp esp
push 0xffffffff
push sub_454490
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
call sub_44cbe0
mov esi eax
push sub_447c40
push rw-data
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_448890
mov eax [ rw-data ]
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push eax
call [ TlsSetValue@IAT ]
sub_44cd50
mov eax [ rw-data ]
push esi
mov esi [ TlsGetValue@IAT ]
cmp eax 0xffffffff
je r-xdata
call sub_44ccc0
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
test eax eax
jne r-xdata
push eax
call esi
xor eax eax
pop esi
retn
pop esi
retn
sub_44cd80
push 0xffffffff
push sub_4544b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x44 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
lea eax [ esp + 0x14 ]
push eax
call sub_449600
mov ebp [ esp + 0x14 ]
xor eax eax
mov [ esp + 0x4c ] eax
cmp ebp eax
je r-xdata
xor al al
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn
mov [ esp + 0x24 ] eax
or eax 0xffffffff
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov eax 0xfffffffe
lea edx [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x7fffffff
mov [ esp + 0x20 ] eax
call sub_40caf0
mov eax [ ebp + 0x8 ]
sub esp 0x20
mov edi esp
mov ecx 0x8
lea esi [ esp + 0x44 ]
push eax
[ edi ] [ esi ]
call sub_44c940
mov esi [ ebx ]
mov edi [ HeapFree@IAT ]
add esp 0x24
mov [ ebx ] 0x0
mov ebx [ GetProcessHeap@IAT ]
test esi esi
je r-xdata
mov [ esp + 0x4c ] 0xffffffff
lea ecx [ ebp + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn
mov eax [ ebp ]
mov edx [ eax ]
push 0x0
mov ecx ebp
call edx
push ebp
push 0x0
call ebx
push eax
call edi
mov edx [ esi ]
mov eax [ edx ]
push 0x0
mov ecx esi
call eax
push esi
push 0x0
call ebx
push eax
call edi
sub_44ceb0
push 0xffffffff
push sub_4544e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov ebx ecx
lea eax [ esp + 0x14 ]
push eax
call sub_449600
mov edi [ esp + 0x14 ]
mov [ esp + 0x24 ] 0x0
test edi edi
je r-xdata
xor al al
sub esp 0x20
mov [ esp + 0x38 ] esp
mov esi esp
call [ GetTickCount@IAT ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x50 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] 0x1
add esi 0x18
push sub_4042a0
push esi
call sub_40a100
mov eax [ edi + 0x8 ]
add esp 0x8
push eax
call sub_44c940
add esp 0x24
test al al
jne r-xdata
mov esi [ ebx ]
mov ebp [ GetProcessHeap@IAT ]
mov [ ebx ] 0x0
mov ebx [ HeapFree@IAT ]
test esi esi
je r-xdata
mov eax [ esp + 0x34 ]
mov [ eax ] 0x0
mov [ esp + 0x24 ] 0xffffffff
lea ecx [ edi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ esp + 0x34 ]
mov [ ecx ] 0x1
mov [ esp + 0x24 ] 0xffffffff
lea edx [ edi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x0
mov ecx edi
call edx
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov al 0x1
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x0
mov ecx edi
call eax
push edi
push 0x0
call ebp
push eax
call ebx
mov edx [ esi ]
mov eax [ edx ]
push 0x0
mov ecx esi
call eax
push esi
push 0x0
call ebp
push eax
call ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0xc
sub_44d000
mov eax [ rw-data ]
push esi
mov esi [ TlsGetValue@IAT ]
cmp eax 0xffffffff
je r-xdata
call sub_44ccc0
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
test eax eax
jne r-xdata
push eax
call esi
xor eax eax
lea esi [ eax + 0xc ]
lea eax [ esp + 0x8 ]
push esi
push eax
call sub_44b450
add esp 0x8
mov [ esi ] eax
pop esi
retn
lea esi [ eax + 0xc ]
lea eax [ esp + 0x8 ]
push esi
push eax
call sub_44b450
add esp 0x8
mov [ esi ] eax
pop esi
retn
sub_44d060
push 0xffffffff
push sub_454528
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov edi [ TlsGetValue@IAT ]
mov [ esp + 0x38 ] 0x0
cmp eax 0xffffffff
je r-xdata
call sub_44ccc0
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call edi
mov esi eax
test esi esi
jne r-xdata
push eax
call edi
mov esi eax
xor esi esi
jmp r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x44 ]
push eax
sub esp 0x8
mov eax esp
mov [ eax ] ecx
mov edx [ esp + 0x54 ]
mov [ eax + 0x4 ] edx
mov eax [ esp + 0x54 ]
mov [ esp + 0x58 ] esp
test eax eax
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_449320
push eax
lea edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_44aa60
add esp 0xc
push 0x0
push eax
lea ecx [ esi + 0x10 ]
mov [ esp + 0x40 ] 0x2
call sub_44b380
push eax
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esi + 0x10 ]
call sub_44b840
mov eax [ esp + 0x28 ]
mov [ esp + 0x38 ] 0x1
test eax eax
je r-xdata
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov esi [ esp + 0x18 ]
mov [ esp + 0x38 ] 0x0
test esi esi
je r-xdata
mov esi eax
add eax 0x4
or edx 0xffffffff
[ eax ] edx
jne r-xdata
mov esi [ esp + 0x48 ]
mov [ esp + 0x38 ] 0xffffffff
test esi esi
je r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x30
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
sub_44d1f0
mov eax [ rw-data ]
sub esp 0x8
push esi
mov esi [ TlsGetValue@IAT ]
cmp eax 0xffffffff
je r-xdata
call sub_44ccc0
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call esi
test eax eax
jne r-xdata
push eax
call esi
xor eax eax
jmp r-xdata
lea esi [ eax + 0x10 ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call sub_449740
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push edx
push eax
lea ecx [ esp + 0xc ]
push ecx
mov ecx esi
call sub_40ccc0
pop esi
add esp 0x8
retn
sub_44d250
push 0xffffffff
push sub_454558
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ebx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x24 ] ebx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
test ecx ecx
jne r-xdata
push eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
je r-xdata
push eax
sub esp 0x8
mov eax esp
mov [ eax ] ecx
mov edx [ esp + 0x38 ]
mov [ eax + 0x4 ] edx
mov eax [ esp + 0x38 ]
mov [ esp + 0x30 ] esp
test eax eax
je r-xdata
test eax eax
je r-xdata
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esi + 0x10 ]
call sub_44a9f0
mov esi [ esi + 0x14 ]
mov eax [ esp + 0x10 ]
cmp eax esi
je r-xdata
push ebx
call sub_44d060
add esp 0x10
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov esi [ esp + 0x2c ]
mov [ esp + 0x1c ] 0xffffffff
test esi esi
je r-xdata
lea esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp [ esp + 0x28 ] 0x0
mov edi [ esp + 0x30 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
lea ecx [ esp + 0x28 ]
push ecx
mov ecx esi
call sub_449ff0
mov [ esi + 0x8 ] edi
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push ebx
call sub_44d1f0
add esp 0x4
jmp r-xdata
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_44d3a0
push 0xffffffff
push sub_454588
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4c ]
mov [ fs : 0x0 ] eax
mov esi ecx
call [ GetCurrentThreadId@IAT ]
mov edi eax
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
call sub_449cf0
cmp edi [ eax ]
jne r-xdata
mov ecx [ esp + 0x60 ]
mov edx [ esp + 0x5c ]
lea eax [ esp + 0xf ]
push eax
push ecx
push edx
mov ecx esi
call sub_44ceb0
neg al
sbb al al
and al [ esp + 0xf ]
mov ecx [ esp + 0x4c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x3c ]
xor ecx esp
call sub_4216fe
add esp 0x4c
retn 0x8
call sub_44d750
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x1c ]
mov esi eax
mov edi 0x24
mov [ esp + 0x14 ] r--data
call sub_4223bd
xor eax eax
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] eax
mov [ esp + 0x2c ] al
mov [ esp + 0x18 ] r--data
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x58 ] eax
call sub_410210
sub_44d4f0
push esi
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
call sub_447ee0
cmp esi 0x3
jne r-xdata
mov eax 0x1
pop esi
retn 0xc
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
push ecx
push esi
push edx
call eax
pop esi
retn 0xc
mov eax [ r--data ]
test eax eax
je r-xdata
call j_sub_44b950
jmp r-xdata
sub_44d600
mov edx [ esp + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
sub esp 0x8
push edx
lea edx [ esp + 0x4 ]
push edx
call eax
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
xor eax eax
add esp 0x8
retn 0x8
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
mov eax 0x1
add esp 0x8
retn 0x8
sub_44d750
push 0xffffffff
push sub_4545be
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
sub_44d7c0
push 0xffffffff
push sub_4545ee
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
sub_44d830
push 0xffffffff
push sub_45461e
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax 0x1
mov [ esi ] 0x0
test [ rw-data ] al
jne r-xdata
mov eax esi
mov [ esi + 0x4 ] rw-data
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x14 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
sub_44d8b0
push 0xffffffff
push sub_45464e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
sub_44d930
push 0xffffffff
push sub_45467e
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
cmp esi 0x10b
jg r-xdata
cmp esi 0x2714
jg r-xdata
je r-xdata
lea eax [ esi - 0x2719 ]
cmp eax 0x38
ja r-xdata
je r-xdata
mov esi [ esp + 0x18 ]
push 0x16
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
cmp esi 0xd4
ja r-xdata
mov eax 0x1
test [ rw-data ] al
jne r-xdata
movzx edx [ eax + lookup_table_44e26c ]
jmp [ edx * 4 + jump_table_44e1f0 ]
mov esi [ esp + 0x18 ]
push 0x4
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
cmp esi 0x3f5
jg r-xdata
movzx eax [ esi + lookup_table_44e0f4 ]
jmp [ eax * 4 + jump_table_44e0ac ]
mov eax [ esp + 0x18 ]
mov [ eax ] esi
mov [ eax + 0x4 ] rw-data
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x14 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
mov esi [ esp + 0x18 ]
push 0x26
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x18
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0xd
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x64
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x65
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x66
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x67
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x9
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x6a
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x6b
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x6c
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x6d
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0xe
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x6e
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x70
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x71
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x73
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x74
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x75
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x76
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x77
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x7b
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x7e
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x80
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x82
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x87
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x88
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x8a
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x8c
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov eax esi
sub eax 0x4d5
je r-xdata
je r-xdata
mov esi [ esp + 0x18 ]
push 0x0
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x11
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x13
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x29
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x1c
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x2
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x28
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x27
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0xc
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0xb
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x12
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x5
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
push 0x10
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
sub eax 0x48c
je r-xdata
lea eax [ esi - 0x3e3 ]
cmp eax 0x11
ja r-xdata
sub eax 0x3
jne r-xdata
movzx ecx [ eax + lookup_table_44e1dc ]
jmp [ ecx * 4 + jump_table_44e1cc ]
mov esi [ esp + 0x18 ]
push 0x69
push esi
call sub_44d8b0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
sub_44e28b
or cl [ ebx ]
or al 0xd
push ds
push cs
push ds
movups xmm2 [ ecx ]
adc dl [ ebx ]
adc al 0x15
push ss
pop ss
sbb [ ecx ] bl
push ds
push ds
sbb bl [ ebx ]
push ds
sbb al 0x1e
sbb eax 0xcccccccc
int3
sub_44e2e0
push 0xffffffff
push sub_4546e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x54 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x64 ]
mov ebx [ esp + 0x68 ]
xor edi edi
mov [ esp + 0x14 ] edi
test [ rw-data ] 0x1
lea ebp [ edi + 0xf ]
jne r-xdata
push ebx
call sub_4262e6
add esp 0x4
cmp eax edi
je r-xdata
or [ rw-data ] 0x1
push 0xd
push r--data
mov ecx rw-data
mov [ esp + 0x64 ] edi
mov [ rw-data ] ebp
mov [ rw-data ] edi
mov [ rw-data ] 0x0
call sub_40bfc0
push r-xdata
call sub_4264c6
add esp 0x4
mov [ esp + 0x5c ] 0xffffffff
push 0xffffffff
push edi
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] edi
mov [ esp + 0x24 ] 0x0
call sub_40bf00
lea eax [ esp + 0x18 ]
mov ebx 0x2
mov ecx eax
mov [ esp + 0x48 ] ebp
mov [ esp + 0x44 ] edi
mov [ esp + 0x34 ] 0x0
lea ebx [ ecx + 0x1 ]
nop
test bl 0x1
je r-xdata
and ebx 0xfffffffd
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx ebx
push ecx
push eax
lea ecx [ esp + 0x3c ]
call sub_40bfc0
lea eax [ esp + 0x34 ]
mov ebx 0x1
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x54 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x3c ]
xor ecx esp
call sub_4216fe
add esp 0x4c
retn 0x8
cmp [ esp + 0x48 ] 0x10
jb r-xdata
mov [ esp + 0x2c ] ebp
mov [ esp + 0x28 ] edi
mov [ esp + 0x18 ] 0x0
mov eax [ esp + 0x18 ]
push eax
call sub_423b7f
add esp 0x4
mov [ esi + 0x14 ] ebp
mov [ esi + 0x10 ] edi
push eax
mov ecx esi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x60 ] ebx
mov [ esi ] 0x0
call sub_409160
or ebx 0x4
test bl 0x2
je r-xdata
mov ecx [ esp + 0x34 ]
push ecx
call sub_423b7f
add esp 0x4
sub_44e460
push 0xffffffff
push sub_454739
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x44 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x58 ]
mov esi [ esp + 0x54 ]
xor ebx ebx
push ebx
push ebx
lea eax [ esp + 0x1c ]
push eax
push 0x400
push ecx
push ebx
mov [ esp + 0x30 ] ebx
push 0x1300
mov [ esp + 0x38 ] esi
mov [ esp + 0x30 ] ebx
call [ FormatMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov ebp ecx
mov [ esp + 0x20 ] ebp
mov edi 0x1
mov [ esp + 0x4c ] edi
cmp eax ebx
jne r-xdata
mov eax ecx
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] ebx
mov [ esp + 0x24 ] bl
lea edi [ eax + 0x1 ]
push 0xd
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push r--data
mov ecx esi
mov [ esi ] bl
call sub_40bfc0
mov [ esp + 0x18 ] edi
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax edi
push eax
push ecx
lea ecx [ esp + 0x2c ]
call sub_40bfc0
mov eax [ esp + 0x34 ]
mov [ esp + 0x4c ] 0x2
cmp eax ebx
je r-xdata
push ebp
mov [ esp + 0x50 ] bl
call [ LocalFree@IAT ]
mov eax esi
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_4216fe
add esp 0x3c
retn 0x8
lea edx [ esp + 0x24 ]
mov edi 0xf
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_409160
cmp [ esp + 0x38 ] 0x10
mov [ esp + 0x18 ] 0x1
jb r-xdata
mov edx [ esp + 0x38 ]
mov edi [ esp + 0x24 ]
mov ecx edi
cmp edx 0x10
jae r-xdata
mov [ esp + 0x38 ] edi
mov [ esp + 0x34 ] ebx
mov [ esp + 0x24 ] bl
mov eax [ esp + 0x24 ]
push eax
call sub_423b7f
add esp 0x4
cmp [ ecx + eax - 0x1 ] 0xa
je r-xdata
lea ecx [ esp + 0x24 ]
push 0xffffffff
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_409340
mov eax [ esp + 0x34 ]
cmp eax ebx
jne r-xdata
mov ecx edi
cmp edx 0x10
jae r-xdata
jmp r-xdata
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
lea ecx [ esp + 0x24 ]
cmp eax ebx
je r-xdata
mov ecx edi
cmp edx 0x10
jae r-xdata
cmp [ ecx + eax - 0x1 ] 0x2e
jne r-xdata
lea ecx [ esp + 0x24 ]
push 0xffffffff
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_409340
sub_44e8fa
mov edi edi
push ebp
mov ebp esp
push esi
call sub_429f23
call sub_429f1d
push eax
call sub_429f03
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_42a0f8
mov esi [ ebp + 0x8 ]
push esi
call sub_429f1d
push eax
call sub_429f57
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_44e8b9
sub_44e95f
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_429f23
push 0x214
push 0x1
call sub_429301
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
jmp r-xdata
push esi
call sub_4229cf
pop ecx
test ebx ebx
je r-xdata
call sub_42a0de
push [ eax + 0x6c ]
push esi
call sub_429fb1
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_425745
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_44e8fa
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_44ea11
push 0x14
push r--data
call sub_42ad20
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_44ea6f
push 0xc
push r--data
call sub_42ad20
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44eaba
call sub_42ad65
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_44eb70
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_44ec20
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_44eca0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_446d5f
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_428e19
test eax eax
movsx eax [ esi ]
push eax
call sub_446d5f
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_44ed14
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_428932
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_44ed96
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_44edb2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_44f971
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_44f7f2
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_44ee0e
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_425c60
inc eax
push eax
push esi
add esi edi
push esi
call sub_421a80
add esp 0x10
sub_44ee53
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_428932
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_42571f
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_42571f
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_44ee0e
pop esi
mov [ eax ] esi
call sub_42b1b2
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_421a80
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_44efb4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_44fbce
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_42571f
mov [ eax ] ebx
call sub_42b1b2
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_44ee53
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_44fa68
add esp 0x10
test eax eax
je r-xdata
sub_44f07b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44efb4
add esp 0x18
pop ebp
retn
sub_44f09b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_428932
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_42571f
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_42571f
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_42b1b2
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_44f07b
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_446c10
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_44fd40
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_44fd40
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_4264e0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_44fd40
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_44fc60
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_44fc60
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_44fc60
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_44f411
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f09b
add esp 0x18
pop ebp
retn
sub_44f431
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_428932
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_425c60
inc eax
push eax
push esi
push ebx
call sub_421a80
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_425c60
inc eax
push eax
push esi
push ebx
call sub_421a80
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_44ee0e
push edi
push 0x30
push ebx
call sub_4264e0
add esp 0xc
sub_44f534
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_44fbce
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_42571f
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_42571f
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_44fa68
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_44f431
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_44f612
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_44fbce
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_42571f
mov [ eax ] edi
call sub_42b1b2
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_44fa68
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_44ee53
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_44f431
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_44f6ff
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f612
add esp 0x18
pop ebp
retn
sub_44f71f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44efb4
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f534
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f09b
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f612
jmp r-xdata
sub_44f7a7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f71f
add esp 0x1c
pop ebp
retn
sub_44f7ca
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_44fd5f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_42b146
sub_44f7f2
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_428932
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_451718
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_4505ba
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
sub_44f8b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_428932
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push 0x1
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_451718
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_45105c
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
sub_44f971
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_428932
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_451718
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_450b0b
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
sub_44fa30
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ rw-data ]
test eax 0xfffffffe
je r-xdata
mov [ rw-data ] eax
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_44fa68
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_42571f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_42b1b2
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_425c60
inc eax
push eax
push edi
push esi
call sub_421a80
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_44fb1b
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_44fbce
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_44fb1b
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_451ec0
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_42b385
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
sub_44fc60
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_44fd40
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_44fd5f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_45323f
call sub_45323f
mov [ esi ] eax
jmp r-xdata
call sub_42571f
push 0x16
pop esi
mov [ eax ] esi
call sub_42b1b2
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_45323f
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_44fdbe
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
pop esi
pop ebp
retn
sub_44fde2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ ebp + 0x8 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
pop ebp
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_44fe2b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
mov edi [ ebp + 0x8 ]
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov ecx [ edi + eax * 4 ]
xor ebx ebx
lea esi [ ecx + edx ]
cmp esi ecx
jb r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
dec eax
jns r-xdata
mov [ edi + eax * 4 ] esi
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov ecx [ edi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor ebx ebx
cmp edx ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp edx 0x1
jae r-xdata
mov [ edi + eax * 4 ] edx
sub_44fe98
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
lea ebx [ edx + eax ]
lea eax [ edi + 0x1 ]
sar ebx 0x5
and eax 0x8000001f
jns r-xdata
mov esi [ ebp + 0x8 ]
push 0x1f
pop ecx
sub ecx eax
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ esi + ebx * 4 ] eax
je r-xdata
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi + ebx * 4 ] eax
inc ebx
cmp ebx ecx
jge r-xdata
or edx 0xffffffff
shl edx cl
mov eax ebx
not edx
test [ esi + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
sub ecx ebx
lea edi [ esi + ebx * 4 ]
xor eax eax
[ edi ]
jne r-xdata
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
and [ ebp + 0xc ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
mov ecx [ esi + eax * 4 ]
lea edi [ ecx + edx ]
cmp edi ecx
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ esi + eax * 4 ] 0x0
jmp r-xdata
mov [ ebp + 0xc ] 0x1
cmp edi edx
jae r-xdata
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov [ esi + eax * 4 ] edi
jmp r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ esi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor edi edi
cmp edx ecx
jb r-xdata
xor edi edi
inc edi
cmp edx 0x1
jae r-xdata
mov [ esi + eax * 4 ] edx
mov ecx edi
sub_44ff84
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
pop ebp
retn
sub_44ffb4
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_44ffd3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
and edx 0x1f
sub esp 0xc
add eax edx
mov edx [ ebp + 0xc ]
push esi
sar eax 0x5
and edx 0x8000001f
push edi
jns r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp + 0xc ] 0x0
mov edi [ ebp + 0x8 ]
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
push ebx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp + 0xc ]
mov ebx [ edi + ecx * 4 ]
and ebx esi
mov [ ebp - 0xc ] ebx
mov ebx [ edi + ecx * 4 ]
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0xc ]
or ebx [ ebp - 0x8 ]
mov [ edi + ecx * 4 ] ebx
mov ebx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
shl ebx cl
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x3
mov [ ebp - 0x8 ] ebx
jl r-xdata
push 0x2
pop ecx
mov edx ecx
sub edx eax
lea edx [ edi + edx * 4 ]
pop ebx
and [ edi + ecx * 4 ] 0x0
mov esi [ edx ]
mov [ edi + ecx * 4 ] esi
jmp r-xdata
cmp ecx eax
jl r-xdata
pop edi
pop esi
leave
retn
sub edx 0x4
dec ecx
jns r-xdata
sub_45006b
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
and ecx 0x8000
mov [ ebp - 0x3c ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
push ebx
mov ebx [ ebp + 0x10 ]
and edx 0x7fff
sub edx 0x3fff
shl eax 0x10
push esi
push edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
and [ ebp - 0x30 ] 0x0
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax edx
movsd [ edi ] [ esi ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x28 ] eax
jns r-xdata
xor esi esi
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x34 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x34 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ ebp + eax * 4 - 0x10 ] esi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
push 0x1f
pop ecx
sub ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
shl esi cl
mov ecx [ ebp - 0x3c ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0x10 ]
cmp ebx 0x40
jne r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x20 ]
mov edx eax
sub edx [ ebx + 0x8 ]
cmp ecx edx
jge r-xdata
inc [ ebp - 0x20 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
cmp ebx 0x20
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
cmp ecx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x30 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x24 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x24 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov ecx [ ebp - 0x38 ]
mov [ ecx ] esi
cmp ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx eax
cdq
and edx 0x1f
movsd [ edi ] [ esi ]
lea esi [ edx + eax ]
mov edx ecx
sar esi 0x5
and edx 0x8000001f
jns r-xdata
xor esi esi
mov [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x24 ] edx
jmp r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebp - 0x20 ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x34 ] eax
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
test ecx ecx
je r-xdata
mov [ ebp - 0x30 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x30 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x24 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x30 ]
jns r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ ebp + eax * 4 - 0x10 ]
mov ecx eax
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x20 ]
or eax [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl eax cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] eax
jl r-xdata
mov edx [ ebp - 0x34 ]
mov edi edx
push 0x2
shl edi 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edi
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
cmp edi 0x1
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edi [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp ecx esi
jl r-xdata
mov edi [ ebx + 0x8 ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] eax
jns r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp ecx edx
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp edx eax
jl r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebx ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov [ ebp - 0x34 ] ecx
test [ ebp + eax * 4 - 0x10 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x34 ]
or edx 0xffffffff
shl edx cl
push 0x3
pop ecx
and [ ebp + eax * 4 - 0x10 ] edx
inc eax
cmp eax ecx
jge r-xdata
or esi 0xffffffff
shl esi cl
mov edx eax
not esi
test [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
lea esi [ edx + eax ]
lea edx [ ecx + 0x1 ]
sar esi 0x5
and edx 0x8000001f
jns r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx 0x3
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
lea esi [ edi + edx ]
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp esi edx
jae r-xdata
cmp ecx esi
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
dec eax
jns r-xdata
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_4505ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_450b0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_45105c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0xa ]
and [ ebp - 0x20 ] 0x0
mov eax edx
and eax 0x7fff
and edx 0x8000
push esi
mov esi [ ecx + 0x6 ]
mov [ ebp - 0x14 ] eax
mov eax edx
mov edx [ ecx + 0x2 ]
movzx ecx [ ecx ]
shl ecx 0x10
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] ecx
test ecx ecx
jns r-xdata
mov ecx 0x7fff
cmp [ ebp - 0x14 ] cx
jne r-xdata
test ecx 0x7fffffff
je r-xdata
or eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x20 ]
mov [ edi ] edx
pop edi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn
mov [ ebp - 0x20 ] 0x1
lea ecx [ edx + 0x1 ]
xor esi esi
cmp ecx edx
jb r-xdata
xor esi esi
inc esi
cmp ecx 0x1
jae r-xdata
mov esi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
and [ ebp - 0x1c ] 0x0
lea ecx [ ebp + ecx * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] ecx
mov ecx esi
mov [ ebp - 0x1c ] 0x1
cmp esi 0x1
jae r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
dec [ ebp - 0x18 ]
mov [ ecx ] esi
mov ecx [ ebp - 0x1c ]
jns r-xdata
inc [ ebp - 0x14 ]
mov esi 0x80000000
jmp r-xdata
mov edx [ ebp - 0xc ]
sub_451139
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
pop ebp
retn
sub_45116c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr edx 0x1
shr ecx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_45119e
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
movzx edx [ ebx + 0xa ]
push esi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x20 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
push edi
movzx esi si
mov edi 0x7fff
mov [ ebp - 0x30 ] esi
cmp cx di
jae r-xdata
xor edx edx
xor ecx ecx
cmp [ ebp - 0x20 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx di
jae r-xdata
mov edi 0xbffd
cmp si di
ja r-xdata
mov edi 0x3fbf
cmp si di
ja r-xdata
mov edi 0x7fffffff
test cx cx
jne r-xdata
xor ecx ecx
xor ecx ecx
inc esi
mov [ ebp - 0x30 ] esi
test [ eax + 0x8 ] edi
jne r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x1c ] ecx
lea edi [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x5
inc esi
mov [ ebp - 0x30 ] esi
test [ ebx + 0x8 ] edi
jne r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] ecx
jne r-xdata
add edi 0x2
inc [ ebp - 0x1c ]
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
add ebx 0x8
mov [ ebp - 0x24 ] ebx
lea ebx [ eax + ecx ]
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp dx cx
jne r-xdata
cmp [ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add ecx ecx
mov [ ebp - 0x28 ] edx
test edx edx
jle r-xdata
add esi 0xc002
mov edi 0xffff
test si si
jle r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi ecx
jae r-xdata
cmp [ ebx ] ecx
je r-xdata
mov [ eax + 0xa ] cx
jmp r-xdata
add esi edi
test si si
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
sub [ ebp - 0x24 ] 0x2
add ebx 0x2
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x14 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx esi
neg ecx
movzx ecx cx
mov [ ebp - 0x14 ] ecx
add esi ecx
test si si
jg r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
add ebx ebx
or ebx ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add esi edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
test si si
jg r-xdata
mov edx [ ebp - 0x24 ]
movzx edx [ edx ]
movzx ecx [ ebx ]
and [ ebp - 0x14 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea esi [ edx + ecx ]
cmp esi edx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp - 0x30 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec [ ebp - 0x14 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x2c ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp si cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov cx [ ebp - 0xe ]
or esi [ ebp - 0x20 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] si
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] di
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc esi
jmp r-xdata
sub_451419
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx rw-data
sub ecx 0x60
xor edx edx
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4216fe
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
neg [ ebp + 0xc ]
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
xor ecx ecx
mov [ eax ] cx
push ebx
push esi
push edi
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x24 ]
mov ebx ecx
mov ecx 0x8000
cmp [ ebx ] cx
jb r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp - 0x24 ] 0x54
sar [ ebp + 0xc ] 0x3
and ecx 0x7
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebx
movzx ecx [ eax + 0xa ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
movzx edx [ ebx + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x30 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea edi [ edx + ecx ]
movzx edi di
mov [ ebp - 0x28 ] edi
cmp cx si
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x1a ]
lea ebx [ ebp - 0x1c ]
xor edx edx
xor ecx ecx
cmp [ ebp - 0x30 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx si
jae r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor ecx ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ eax + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ ebp - 0x34 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
add esi 0x2
inc [ ebp - 0x34 ]
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x0
jg r-xdata
lea edx [ ebx + 0x8 ]
add ecx eax
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] ecx
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ eax ] esi
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
add ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp edi ecx
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor ecx ecx
mov [ eax + 0xa ] cx
jmp r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x3c ] 0x2
sub [ ebp - 0x40 ] 0x2
dec [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x44 ] 0x0
mov [ esi - 0x4 ] edi
je r-xdata
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] esi
mov [ eax ] esi
jmp r-xdata
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ecx
test di di
jg r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x40 ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea edi [ edx + ecx ]
cmp edi edx
jb r-xdata
mov edi [ ebp - 0x28 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x38 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp di cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x38 ] esi
je r-xdata
mov cx [ ebp - 0xe ]
or edi [ ebp - 0x30 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] di
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov edx 0xffff
cmp [ ebp - 0x6 ] dx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
sub_451718
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_42571f
mov [ eax ] 0x16
call sub_42b1b2
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_451dc4 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_453866
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_451df4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push edx
xor edx edx
push edx
push edx
push edx
push [ ebp + 0x14 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_451718
mov edi eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_45105c
add esp 0x28
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_4216fe
leave
retn
or edi 0x2
sub_451e4f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ edi + 0x4 ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ecx + 0x1 ]
xor esi esi
cmp edx ecx
jb r-xdata
mov [ eax ] esi
test ebx ebx
je r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov ecx [ edi + 0x8 ]
add [ eax + 0x8 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_451ec0
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4216fe
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42b146
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_42b385
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_4527b8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
xor esi esi
cmp [ ebp + 0x8 ] 0x9001f
jne r-xdata
and eax 0xfff7ffff
push eax
push [ ebp + 0x8 ]
push esi
call sub_44fd5f
add esp 0xc
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
pop esi
leave
retn
push esi
push esi
push esi
push esi
push esi
call sub_42b146
fwait
fnstcw [ ebp - 0x4 ]
movzx ecx [ ebp - 0x4 ]
and ecx 0x1f3d
mov edx 0x23d
cmp cx dx
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
and ecx 0xfec0
cmp ecx 0x1e80
je r-xdata
sub_45282b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
push ebx
movzx edx cx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebx 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebx
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
pop ebp
retn
or eax 0x40000
test [ ebp + 0x8 ] 0x1000
pop edi
pop esi
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_4528ca
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_452958
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_45299b
xor eax eax
test dl dl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx edx
je r-xdata
push 0x10
pop eax
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov edi 0x100
test edi edx
je r-xdata
or eax 0x1
mov ecx edx
mov esi 0x6000
and ecx esi
je r-xdata
or eax 0x80000
pop edi
and edx 0x8040
sub edx 0x40
pop esi
pop ebx
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax edi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
retn
sub edx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x1000000
retn
or eax 0x300
jmp r-xdata
sub_452a3b
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_452adb
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_452b2a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
fwait
fnstsw [ ebp - 0x4 ]
mov al [ ebp - 0x4 ]
xor edx edx
mov esi 0x80000
test al 0x3f
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test al 0x1
je r-xdata
mov eax edx
stmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
or eax edx
jmp r-xdata
test cl 0x1
je r-xdata
test al 0x8
je r-xdata
or edx 0x8
pop esi
leave
retn
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x10
je r-xdata
or edx 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x20
je r-xdata
or edx 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x2
je r-xdata
or edx 0x1
test cl 0x20
je r-xdata
or eax 0x2
or edx esi
test cl 0x2
je r-xdata
or eax 0x1
or eax esi
sub_452bbc
mov edi edi
push esi
call sub_42de6e
mov esi [ eax ]
fninit
call sub_44f7ca
push 0x1f80
call sub_453b0c
pop ecx
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test [ eax ] 0x10008
je r-xdata
and [ eax + 0x20 ] 0x0
mov [ eax + 0x24 ] 0xffff
sub_452bf4
call sub_453aee
xor ecx ecx
test al 0x3f
je r-xdata
mov eax ecx
retn
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_452c2f
mov edi edi
push ebp
mov ebp esp
push ecx
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_452c7f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp + 0xc ] 0x308031f
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
xor eax eax
test cl cl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx ecx
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi ecx
je r-xdata
or eax 0x1
mov edx ecx
mov edi 0x6000
and edx edi
je r-xdata
or eax 0x80000
mov esi 0x8040
and ecx esi
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax esi
cmp edx 0x4000
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_452a3b
push eax
mov [ ebp - 0x4 ] eax
call sub_453b0c
pop ecx
stmxcsr [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
xor eax eax
test dl dl
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp edx edi
jne r-xdata
test ebx edx
je r-xdata
push 0x10
pop eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
cmp edx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov ebx 0x100
test ebx edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx esi
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax ebx
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_452df5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
fwait
fnstsw [ ebp + 0x8 ]
mov al [ ebp + 0x8 ]
xor ecx ecx
test al 0x3f
je r-xdata
pop esi
pop ebp
retn
call sub_452bf4
mov [ esi ] eax
mov [ edx ] ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_452e4f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x0
je r-xdata
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov al [ ebp - 0x4 ]
xor edx edx
push esi
mov esi 0x80000
test al 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffffc0
ldmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or eax edx
pop esi
leave
retn
test cl 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test cl 0x20
je r-xdata
or eax 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test cl 0x2
je r-xdata
or eax 0x1
or edx esi
or eax esi
sub_452f28
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
push esi
xor edx edx
push edi
mov edi 0x300
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
test bl 0x1
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
xor esi esi
cmp [ rw-data ] esi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
and eax 0x308031f
mov [ ebp - 0x10 ] eax
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x1000
je r-xdata
or esi 0x2
movzx eax bx
mov ecx eax
mov esi 0xc00
and ecx esi
je r-xdata
or edx 0x80000
test eax 0x100
je r-xdata
or esi 0x1
and eax edi
je r-xdata
cmp ecx 0x400
je r-xdata
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
or edx 0x20000
cmp eax 0x200
jne r-xdata
or edx 0x100
cmp ecx 0x800
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ebx
and ebx edx
or ebx eax
cmp ebx edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp ecx esi
jne r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
call sub_4528ca
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor ebx ebx
test dl 0x1
je r-xdata
or edx edi
jmp r-xdata
call sub_452a3b
push eax
mov [ ebp + 0x10 ] eax
call sub_453b0c
pop ecx
stmxcsr [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ebx
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test dl 0x8
je r-xdata
or ebx 0x8
test ecx 0x400
je r-xdata
or edx 0x8
test dl 0x10
je r-xdata
or ebx 0x4
test ecx 0x800
je r-xdata
or edx 0x4
test dl 0x20
je r-xdata
or ebx 0x2
test ecx 0x1000
je r-xdata
or edx 0x2
test dl 0x2
je r-xdata
or ebx 0x1
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
movzx ecx dx
mov eax ecx
and eax esi
je r-xdata
or ebx 0x80000
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
and ecx ebx
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or ebx 0x20000
cmp ecx 0x200
jne r-xdata
or ebx 0x100
cmp eax 0x800
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or ebx 0x40000
test edx 0x1000
je r-xdata
or ebx 0x10000
jmp r-xdata
or ebx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
or ebx edi
jmp r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_45323f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_4528ca
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_452a3b
push eax
mov [ ebp - 0xc ] eax
call sub_453b0c
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_453551
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and edi 0xfff7ffff
fwait
fnstcw [ ebp + 0xc ]
mov bx [ ebp + 0xc ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
je r-xdata
or edx 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov eax edi
not eax
mov ecx edi
and ecx [ ebp + 0x8 ]
and eax edx
or eax ecx
mov [ ebp - 0x10 ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_4528ca
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ ebp - 0x10 ] edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_452a3b
push eax
mov [ ebp - 0x8 ] eax
call sub_453b0c
pop ecx
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor eax eax
test dl dl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or edx 0x300
jmp r-xdata
test edx 0x200
je r-xdata
push 0x10
pop eax
mov ecx eax
xor ecx [ ebp - 0x10 ]
or eax [ ebp - 0x10 ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
or eax 0x80000000
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx ebx
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax esi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_453866
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_453a6b
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_453a96
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_453b0c
push 0x8
push r--data
call sub_42ad20
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_42ad65
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_453bc6
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
call sub_453aee
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0xc ]
not eax
or eax 0xffff807f
and eax esi
or eax ecx
push eax
call sub_453b0c
pop ecx
sub_4562fb
mov edi edi
push esi
push edi
call sub_422a09
mov edi rw-data
mov ecx edi
lea esi [ eax + 0x20 ]
call sub_40c400
push 0x0
push esi
mov ecx edi
mov [ rw-data ] r--data
call sub_40ab30
push sub_4565e5
call sub_4264c6
pop ecx
pop edi
pop esi
retn
sub_4563f0
push 0xffffffff
push sub_45477e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov [ rw-data ] rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
sub_456460
push 0xffffffff
push sub_4547ae
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov [ rw-data ] rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
sub_4564d0
push 0xffffffff
push sub_4547de
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov [ rw-data ] rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
sub_456540
push 0xffffffff
push sub_45480e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov [ rw-data ] rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push r-xdata
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_4264c6
add esp 0x4
sub_456640
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_456680
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_4566c0
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_456700
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_40197f
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
inc eax
cmp eax 0x10
jl r-xdata
mov cl [ eax + r--data ]
cmp cl [ ebp + 0x8 ]
je r-xdata
or eax 0xffffffff
sub_402680
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_422419
mov esp ebp
pop ebp
retn
sub_4026d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_4026e0
push ebp
mov ebp esp
pop ebp
retn
sub_402730
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_421710
add esp 0xc
pop ebp
retn
sub_402750
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_421a80
add esp 0xc
pop ebp
retn
sub_402770
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
movsx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4264e0
add esp 0xc
pop ebp
retn
sub_402790
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ eax ] dl
pop ebp
retn
sub_402820
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_402830
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn
sub_402840
push ebp
mov ebp esp
xor eax eax
mov edx 0x80000000
pop ebp
retn
sub_402850
push ebp
mov ebp esp
or eax 0xffffffff
mov edx 0x7fffffff
pop ebp
retn
sub_402860
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_402870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_4028e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_422419
mov esp ebp
pop ebp
retn
sub_402960
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4028e0
mov esp ebp
pop ebp
retn
sub_4029e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_422419
mov esp ebp
pop ebp
retn
sub_402bf0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_423326
mov esp ebp
pop ebp
retn
sub_402c00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_402c10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_402c50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_402d60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_4206e6
add esp 0x4
mov esp ebp
pop ebp
retn
sub_402d80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_402e80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx 0x18
call sub_406c50
mov esp ebp
pop ebp
retn
sub_402f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
call eax
mov esp ebp
pop ebp
retn
sub_402fb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_402d80
mov esp ebp
pop ebp
retn
sub_402fd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
mov esp ebp
pop ebp
retn
sub_402fe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_402ff0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_403060
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_402d80
mov esp ebp
pop ebp
retn
sub_403380
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_4033c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_4034c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_403500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4029e0
mov esp ebp
pop ebp
retn
sub_403640
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_403550
mov esp ebp
pop ebp
retn 0x4
sub_403660
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov esp ebp
pop ebp
retn
sub_4037a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4038a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403500
mov esp ebp
pop ebp
retn
sub_403960
push ebp
mov ebp esp
push 0xa
mov ecx [ ebp + 0x8 ]
call sub_406e50
mov ecx [ ebp + 0x8 ]
call sub_406f70
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_403a00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403a50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_407560
mov esp ebp
pop ebp
retn
sub_403a70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_403b90
push ebp
mov ebp esp
pop ebp
retn
sub_403bd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_403cc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403d30
push ebp
mov ebp esp
pop ebp
retn
sub_403d40
push ebp
mov ebp esp
lea ecx [ ebp + 0x8 ]
call sub_4075b0
pop ebp
retn
sub_403d50
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn
sub_403e50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402960
mov esp ebp
pop ebp
retn
sub_403e90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
mov esp ebp
pop ebp
retn
sub_403f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402960
mov esp ebp
pop ebp
retn
sub_404090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402960
mov esp ebp
pop ebp
retn
sub_404270
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_404280
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4227ef
add esp 0x4
pop ebp
retn
sub_4043d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4078c0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404420
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
pop ebp
retn
sub_404430
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4077a0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404450
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_407950
add esp 0x4
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_404470
push ebp
mov ebp esp
push 0x2
mov ecx [ ebp + 0x8 ]
call sub_4043d0
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_404530
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_4046f4
mov ecx [ ebp - 0x38 ]
call sub_422352
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40470c
mov eax r-xdata
retn
sub_404790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_4045d0
mov esp ebp
pop ebp
retn
sub_404c00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_404c10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_404a80
add esp 0x4
mov esp ebp
pop ebp
retn
sub_404c50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404b70
mov esp ebp
pop ebp
retn
sub_404c70
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
[ ecx ] eax
setb dl
movzx eax dl
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_404d50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_403ce0
mov esp ebp
pop ebp
retn
sub_404e40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
mov ecx 0x1
[ eax ] ecx
pop ebp
retn
sub_404ec0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4079a0
mov esp ebp
pop ebp
retn
sub_404ee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_403ce0
mov esp ebp
pop ebp
retn
sub_404f60
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_404f80
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_404fa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn
sub_405280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4054e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
mov ecx 0x1
[ eax ] ecx
mov esp ebp
pop ebp
retn
sub_405500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
or ecx 0xffffffff
[ eax ] ecx
mov esp ebp
pop ebp
retn
sub_405580
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xc ]
mov esp ebp
pop ebp
retn
sub_405630
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x10
mov ecx 0x1
[ eax ] ecx
pop ebp
retn
sub_4056d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_404c50
mov ecx [ ebp - 0x4 ]
call sub_404c50
mov esp ebp
pop ebp
retn
j_sub_4058ef
jmp sub_4058ef
sub_4058ef
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_407f30
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_405910
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_407b90
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_406a19
mov eax r-xdata
retn
sub_406a40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_403ce0
mov esp ebp
pop ebp
retn
sub_406b30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_409310
mov esp ebp
pop ebp
retn 0x4
sub_406b50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_409230
mov esp ebp
pop ebp
retn 0x4
sub_406b70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_409260
mov esp ebp
pop ebp
retn 0x4
sub_406bf0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x10 ] 0x0
sete cl
mov al cl
mov esp ebp
pop ebp
retn
sub_406c10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406c30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_409550
mov esp ebp
pop ebp
retn
sub_406c80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx - 0x8 ] r--data
mov esp ebp
pop ebp
retn
sub_406ca0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call [ ebp + 0x8 ]
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_406ddc
push 0x1
push 0x4
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
mov edx [ ebp - 0x3c ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_407000
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_406f06
push 0x1
push 0x4
mov edx [ ebp - 0x2c ]
mov eax [ edx ]
mov ecx [ ebp - 0x2c ]
add ecx [ eax + 0x4 ]
call sub_407000
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_406fe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_403780
mov esp ebp
pop ebp
retn
sub_4070a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_420ee3
mov esp ebp
pop ebp
retn
sub_4070c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_420eec
mov esp ebp
pop ebp
retn
sub_4070e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_402810
mov esp ebp
pop ebp
retn 0x4
sub_407100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_402810
mov esp ebp
pop ebp
retn 0x4
sub_407120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
xor edx edx
mov esp ebp
pop ebp
retn
sub_407130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_402810
mov esp ebp
pop ebp
retn
sub_407480
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_407490
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn
sub_4074a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_4074b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4074c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4074d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4074e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4074f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_407500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_407510
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_407520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_407530
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_407540
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_407560
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4099c0
mov esp ebp
pop ebp
retn
sub_4075a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_407740
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp + 0x8 ]
call sub_409d00
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4078e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a0e0
mov esp ebp
pop ebp
retn
sub_407930
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_409e90
movzx eax al
neg eax
sbb eax eax
add eax 0x1
pop ebp
retn
sub_407950
push ebp
mov ebp esp
push sub_4042a0
mov eax [ ebp + 0x8 ]
push eax
call sub_40a100
add esp 0x8
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_407a30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a2d0
mov ecx [ ebp - 0x4 ]
call sub_40a380
mov esp ebp
pop ebp
retn
sub_407c20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_407f30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_4051b0
mov esp ebp
pop ebp
retn
sub_407f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a5d0
mov esp ebp
pop ebp
retn
sub_407f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a5e0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_407ff0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a630
mov ecx [ ebp - 0x4 ]
call sub_40a6c0
mov esp ebp
pop ebp
retn
sub_408070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a750
mov esp ebp
pop ebp
retn
sub_408090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a770
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_408170
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_406480
mov esp ebp
pop ebp
retn
sub_409520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_409530
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_409540
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_409680
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4037a0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4096a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
call eax
mov esp ebp
pop ebp
retn
sub_409750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx ]
mov esp ebp
pop ebp
retn
sub_409770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
mov eax [ ecx ]
mov esp ebp
pop ebp
retn
sub_409ac0
push ebp
mov ebp esp
call sub_40c760
pop ebp
retn
sub_409b40
push ebp
mov ebp esp
call sub_40c7f0
pop ebp
retn
sub_409bc0
push ebp
mov ebp esp
call sub_40c880
pop ebp
retn
sub_409c40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_409c60
push ebp
mov ebp esp
call sub_402830
push eax
mov ecx [ ebp + 0x8 ]
call sub_409c40
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_409c80
push ebp
mov ebp esp
call sub_402820
push eax
mov ecx [ ebp + 0x8 ]
call sub_409c40
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_409ca0
push ebp
mov ebp esp
call sub_402830
sub eax 0x1
push eax
mov ecx [ ebp + 0x8 ]
call sub_409c40
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_409cc0
push ebp
mov ebp esp
call sub_402830
sub eax 0x2
push eax
mov ecx [ ebp + 0x8 ]
call sub_409c40
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_409ce0
push ebp
mov ebp esp
call sub_402820
add eax 0x1
push eax
mov ecx [ ebp + 0x8 ]
call sub_409c40
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_409d10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_40c9b0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_409d30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_40c900
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40a2c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a380
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_40a390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_40a460
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a570
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_40a5d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_40a630
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d1c0
mov esp ebp
pop ebp
retn
sub_40a700
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a710
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_423b7f
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_40a750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_40d2a0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40a7c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_40a8b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a9b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
sub_40aec0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d350
mov esp ebp
pop ebp
retn
sub_40b020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_402d80
mov esp ebp
pop ebp
retn
sub_40bad0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov esp ebp
pop ebp
retn
sub_40bb60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov esp ebp
pop ebp
retn
sub_40bb80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
mov edx [ ecx + 0xc ]
mov esp ebp
pop ebp
retn
sub_40bc40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_402fb0
mov esp ebp
pop ebp
retn
sub_40bcc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax 0x3
mov esp ebp
pop ebp
retn 0x10
sub_40bd70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40e2b0
mov esp ebp
pop ebp
retn 0x4
sub_40c290
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_420bb6
sub_40c2a1
mov esp ebp
pop ebp
retn
sub_40c2b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_420c03
sub_40c2c1
mov esp ebp
pop ebp
retn
sub_40c2d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_423b7f
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_40c345
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40c370
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov esp ebp
pop ebp
retn
sub_40c5f0
push ebp
mov ebp esp
call sub_402850
push edx
push eax
mov ecx [ ebp + 0x8 ]
call sub_409a00
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40c610
push ebp
mov ebp esp
call sub_402840
push edx
push eax
mov ecx [ ebp + 0x8 ]
call sub_409a00
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40c650
push ebp
mov ebp esp
call sub_402850
sub eax 0x2
sbb edx 0x0
push edx
push eax
mov ecx [ ebp + 0x8 ]
call sub_409a00
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40c670
push ebp
mov ebp esp
call sub_402840
add eax 0x1
adc edx 0x0
push edx
push eax
mov ecx [ ebp + 0x8 ]
call sub_409a00
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40c750
push ebp
mov ebp esp
call sub_40e690
pop ebp
retn
sub_40c760
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn
sub_40c7e0
push ebp
mov ebp esp
call sub_40e6a0
pop ebp
retn
sub_40c7f0
push ebp
mov ebp esp
mov eax 0x578
pop ebp
retn
sub_40c870
push ebp
mov ebp esp
call sub_40e6b0
pop ebp
retn
sub_40c880
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn
sub_40ca70
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403d40
add esp 0x8
pop ebp
retn
sub_40cc20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e650
mov esp ebp
pop ebp
retn
sub_40ce20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40ce30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_423b7f
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_40ce80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40ce90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_423b7f
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_40cee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40cef0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_423b7f
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_40d060
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
sub eax [ ecx ]
sar eax 0x2
mov esp ebp
pop ebp
retn
sub_40d080
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
mov esp ebp
pop ebp
retn
sub_40d0a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_40f0a0
mov esp ebp
pop ebp
retn
sub_40d120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_420bb6
sub_40d131
mov esp ebp
pop ebp
retn
sub_40d140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_423b7f
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_40d160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
neg eax
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f0d0
mov esp ebp
pop ebp
retn 0x4
sub_40d1b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_40d2a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x8
pop ebp
retn
sub_40d2e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40d2f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_411050
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40d350
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_40e180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xc ]
mov esp ebp
pop ebp
retn
sub_40e1a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xd ]
mov esp ebp
pop ebp
retn
sub_40e40d
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_409420
push 0x0
push 0x0
call sub_425ceb
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_40e690
push ebp
mov ebp esp
mov eax 0x1f
pop ebp
retn
sub_40e6a0
push ebp
mov ebp esp
mov eax 0x2710
pop ebp
retn
sub_40e6b0
push ebp
mov ebp esp
mov eax 0xc
pop ebp
retn
sub_40e7b0
push ebp
mov ebp esp
call sub_403d50
pop ebp
retn
sub_40efb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_40eff0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40efd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x1c
pop ebp
retn
sub_40f060
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_411140
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40f080
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4111a0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40f0d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f9c0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40f0f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x9
call sub_40f9e0
mov esp ebp
pop ebp
retn
sub_40f320
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40f330
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40f3e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
call eax
mov esp ebp
pop ebp
retn
sub_40f400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
call eax
mov esp ebp
pop ebp
retn
sub_40f4b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_411200
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40f7b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_40f010
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40f920
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0xc
pop ebp
retn
sub_40f9b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40fa30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40fa90
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40fa50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_40fed1
push 0x1
push 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_407000
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_4100b7
add al [ ecx ]
add al [ edx ]
add [ edx ] eax
add esp ecx
int3
sub_4107e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_410870
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_412470
pop ebp
retn
sub_4109e0
push ebp
mov ebp esp
pop ebp
retn
sub_411030
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_411040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_411100
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_411110
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4123f0
pop ebp
retn
sub_411130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4112b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4112d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4127d0
mov ecx [ ebp - 0x4 ]
add ecx 0x28
call sub_403a70
mov esp ebp
pop ebp
retn
sub_411500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412950
mov ecx [ ebp - 0x4 ]
add ecx 0x28
call sub_403a70
mov esp ebp
pop ebp
retn
sub_4116a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412ad0
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
call sub_403a70
mov esp ebp
pop ebp
retn
sub_411930
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412c60
mov ecx [ ebp - 0x4 ]
add ecx 0x28
call sub_403a70
mov esp ebp
pop ebp
retn
sub_411b00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412e40
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
call sub_403a70
mov esp ebp
pop ebp
retn
sub_411cd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413070
mov ecx [ ebp - 0x4 ]
add ecx 0x28
call sub_403a70
mov esp ebp
pop ebp
retn
sub_411ea0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4131f0
mov ecx [ ebp - 0x4 ]
add ecx 0x28
call sub_403a70
mov esp ebp
pop ebp
retn
sub_4123f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_414480
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_412470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_414570
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_4124c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_413410
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4124e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_412dc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_413330
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x1
mov esp ebp
pop ebp
retn
sub_412f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_412ff0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_413410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_413c90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_413ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_413dea
mov ecx [ ebp - 0x50 ]
call sub_40f460
push 0x0
push 0x0
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4141e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_414240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_414250
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_4142a0
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn
sub_4143a0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_4143e0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_414470
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_414480
push ebp
mov ebp esp
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_414610
pop ebp
retn
sub_4144e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_414570
push ebp
mov ebp esp
pop ebp
retn
sub_414640
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_414660
mov esp ebp
pop ebp
retn
sub_414660
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_414680
mov esp ebp
pop ebp
retn
sub_414680
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404d50
mov esp ebp
pop ebp
retn
sub_4150c0
mov eax [ ebp + 0x8 ]
push eax
call sub_415540
add esp 0x4
push 0x0
push 0x0
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_415100
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_415180
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_415190
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_415400
pop ebp
retn
sub_4151b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4153c0
pop ebp
retn
sub_4151d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4153e0
pop ebp
retn
sub_4151f0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_41536c
push 0x1
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x8
call sub_40a710
push 0x0
push 0x0
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4153c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4156b0
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_4153e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4156c0
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_415400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4156d0
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_415450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_415540
add esp 0x4
mov esp ebp
pop ebp
retn
sub_415470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn 0x4
sub_415480
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn
sub_415490
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
call sub_415500
mov esp ebp
pop ebp
retn
sub_4154e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403bd0
mov esp ebp
pop ebp
retn
sub_415590
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_41562e
mov edx [ ebp - 0x14 ]
push edx
call sub_404d20
add esp 0x4
push 0x0
push 0x0
call sub_425ceb
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4156b0
push ebp
mov ebp esp
pop ebp
retn
sub_4156c0
push ebp
mov ebp esp
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_415720
pop ebp
retn
sub_4156d0
push ebp
mov ebp esp
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_415750
pop ebp
retn
sub_415860
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4158a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44c530
mov esp ebp
pop ebp
retn
sub_4158c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4158d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_4158f0
mov esp ebp
pop ebp
retn 0x4
sub_4158f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_415900
sub ecx [ ecx - 0x4 ]
sub ecx 0x4c
jmp sub_4121f0
sub_415910
sub ecx 0xc
jmp sub_412070
sub_415920
sub ecx [ ecx - 0x4 ]
sub ecx 0x4c
jmp sub_412130
sub_415930
sub ecx [ ecx - 0x4 ]
jmp sub_412be0
sub_415940
sub ecx [ ecx - 0x4 ]
jmp sub_412a60
sub_415950
sub ecx [ ecx - 0x4 ]
jmp sub_412f50
sub_415960
sub ecx 0x30
jmp sub_4121f0
sub_415970
sub ecx 0x30
jmp sub_412160
sub_415980
sub ecx 0x30
jmp sub_412130
sub_415990
sub ecx [ ecx - 0x4 ]
jmp sub_4128e0
sub_4159a0
sub ecx [ ecx - 0x4 ]
jmp sub_413250
sub_4159b0
sub ecx [ ecx - 0x4 ]
jmp sub_4130d0
sub_4159c0
sub ecx 0xc
jmp sub_4121c0
sub_4159d0
sub ecx [ ecx - 0x4 ]
jmp sub_412cc0
sub_4159e0
sub ecx 0xc
jmp sub_412100
sub_4159f0
sub ecx [ ecx - 0x4 ]
jmp sub_4129b0
sub_415a00
sub ecx [ ecx - 0x4 ]
jmp sub_412ea0
sub_415a10
sub ecx [ ecx - 0x4 ]
sub ecx 0x28
jmp sub_4122b0
sub_415a20
sub ecx [ ecx - 0x4 ]
jmp sub_412b30
sub_415a30
sub ecx [ ecx - 0x4 ]
jmp sub_412830
sub_415a40
sub ecx [ ecx - 0x4 ]
sub ecx 0x28
jmp sub_412250
sub_415a50
sub ecx 0xc
jmp sub_4120a0
sub_415a60
sub ecx 0xc
jmp sub_4122b0
sub_415a70
sub ecx 0x30
jmp sub_412220
sub_415a80
sub ecx [ ecx - 0x4 ]
sub ecx 0x28
jmp sub_412190
sub_415a90
sub ecx 0xc
jmp sub_412250
sub_415aa0
sub ecx [ ecx - 0x4 ]
sub ecx 0x28
jmp sub_4120d0
sub_415ab0
sub ecx 0xc
jmp sub_4122e0
sub_415ac0
sub ecx [ ecx - 0x4 ]
jmp sub_413180
sub_415ad0
sub ecx 0xc
jmp sub_412280
sub_415ae0
sub ecx 0xc
jmp sub_412190
sub_415af0
sub ecx [ ecx - 0x4 ]
sub ecx 0x28
jmp sub_412070
sub_415b00
sub ecx [ ecx - 0x4 ]
jmp sub_413300
sub_415b10
sub ecx [ ecx - 0x4 ]
jmp sub_412d70
sub_415b20
sub ecx 0xc
jmp sub_4120d0
sub_415b30
push eax
push ecx
call sub_4246dd
add esp 0x8
retn
sub_415b40
push eax
call sub_4246b9
add esp 0x4
retn
sub_415b50
push eax
call sub_425044
add esp 0x4
retn
sub_415cf0
push eax
call sub_4229cf
pop ecx
retn
sub_415d00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
call sub_421e20
add esp 0x4
pop ebp
retn
sub_415d20
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_4229cf
add esp 0x4
pop ebp
retn
sub_415d40
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
imul eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call sub_424f97
add esp 0x8
pop ebp
retn
sub_415d60
mov eax r--data
retn
j_sub_415d80
jmp sub_415d80
sub_415f90
mov eax 0x8421085
mul ecx
mov eax ecx
sub eax edx
shr eax 0x1
add eax edx
shr eax 0xe
lea ecx [ ecx + eax * 4 ]
lea eax [ eax + ecx + 0x85 ]
retn
sub_416050
push ebp
mov ebp esp
push eax
mov eax [ ebp + 0x8 ]
push ecx
call sub_415fb0
add esp 0x8
pop ebp
retn
j_sub_4160b0
jmp sub_4160b0
sub_416490
xor eax eax
mov eax [ eax * 8 + rw-data ]
retn
inc eax
cmp eax 0xa
jb r-xdata
cmp [ eax * 8 + rw-data ] ecx
je r-xdata
xor eax eax
retn
sub_417fc2
adc eax 0x19181716
sbb bl [ ebx ]
sbb al 0x1d
and [ ecx ] esp
and [ ecx ] esp
and [ ecx ] esp
and [ ecx ] esp
push ds
pop ds
and ah cl
int3
sub_41b1a0
mov eax [ eax + 0x6c ]
retn
sub_41b1b0
mov eax [ eax + 0x18 ]
retn
sub_41b9d0
push ebp
mov ebp esp
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
call sub_41b3b0
add esp 0xc
pop ebp
retn
sub_41ba40
push eax
push ecx
call sub_424c9a
add esp 0x8
retn
sub_41c9b0
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x10 ]
retn
sub_41d540
push ebp
mov ebp esp
push eax
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
call sub_41d030
add esp 0xc
pop ebp
retn
sub_41df70
mov [ ecx ] al
shr eax 0x8
mov [ ecx + 0x1 ] al
retn
sub_41df80
mov edx eax
shr edx 0x8
mov [ ecx + 0x1 ] dl
mov edx eax
mov [ ecx ] al
shr edx 0x10
shr eax 0x18
mov [ ecx + 0x2 ] dl
mov [ ecx + 0x3 ] al
retn
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
__imp_GetTickCount
jmp [ GetTickCount@IAT ]
Sleep
jmp [ Sleep@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
sub_42025a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_423fd3
sub_4202ec
mov edi edi
push esi
call sub_425c2c
mov esi [ eax + 0x8 ]
call sub_425be0
mov edx eax
mov eax esi
pop esi
retn
sub_420302
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_420265
sub_42030d
mov eax ecx
mov [ eax ] r--data
retn
sub_420316
mov [ ecx ] r--data
retn
sub_42031d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp ecx [ ebp + 0x8 ]
sete al
pop ebp
retn 0x4
sub_420350
mov eax [ ecx ]
retn
sub_420353
mov eax [ ecx + 0x4 ]
retn
sub_420357
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_42036d
mov eax [ ecx ]
retn
sub_420370
mov eax [ ecx + 0x4 ]
retn
sub_420395
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_4203e9
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_4203f9
mov eax [ ecx + 0x4 ]
retn
sub_4203fd
mov [ ecx ] r--data
retn
sub_420404
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_420414
mov eax [ ecx + 0x4 ]
retn
sub_420418
mov [ ecx ] r--data
retn
sub_42041f
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax ] r--data
mov [ eax + 0x8 ] r--data
retn
sub_420436
mov eax [ ecx + 0x8 ]
retn
sub_42043a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_42044e
mov [ ecx ] r--data
retn
sub_420455
mov eax rw-data
retn
sub_42045b
mov eax rw-data
retn
sub_420461
mov eax rw-data
retn
sub_42061e
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x3c ]
mov [ ecx + 0x3c ] edx
pop ebp
retn 0x4
sub_420685
mov eax ecx
retn 0x4
sub_42068a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_42069a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_4206b0
mov ecx [ ecx + 0x4 ]
call sub_402d00
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_42075d
mov eax [ rw-data ]
retn
sub_4207ed
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_4207f5
mov eax [ ecx ]
test eax eax
jne r-xdata
retn
lea eax [ ecx + 0x4 ]
sub_420aab
call sub_420a1c
mov eax rw-data
retn
j_sub_422419#2
jmp sub_422419
j_sub_422419#3
jmp sub_422419
j_sub_422419
jmp sub_422419
sub_420be6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4224c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420cf6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4224c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420d13
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4224c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420ddc
mov edi edi
push esi
mov esi ecx
and [ esi ] 0x0
push rw-data
call sub_4216de
pop ecx
mov eax esi
pop esi
retn
sub_420e1b
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_4216ee
pop ecx
sub_420e32
push rw-data
call sub_4216de
pop ecx
retn
sub_420e5f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
imul eax eax 0x18
add eax rw-data
push eax
call sub_4216ee
pop ecx
pop ebp
retn
sub_420e7a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x3
imul eax eax 0x18
add eax rw-data
push eax
call sub_4216de
pop ecx
pop ebp
retn
sub_420e96
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x3
imul eax eax 0x18
add eax rw-data
push eax
call sub_4216ee
pop ecx
pop ebp
retn
sub_420ecc
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_4216ce
push [ esi ]
call sub_423b7f
pop ecx
pop ecx
pop esi
retn
sub_420ee3
push [ ecx ]
call sub_4216de
pop ecx
retn
sub_420eec
push [ ecx ]
call sub_4216ee
pop ecx
retn
sub_420f2c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4216de
pop ecx
pop ebp
retn
sub_420f3e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4216ee
pop ecx
pop ebp
retn
j_sub_42774f
jmp sub_42774f
sub_4210e3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_420f93
sub_4210ee
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42103b
sub_4210f9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42103b
sub_4214a0
push r-xdata
call sub_4264c6
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_421658
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_4216be
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_4216ce
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_4216de
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_4216ee
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_421eb4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_423b7f
sub_421ebf
mov edi edi
push ebp
mov ebp esp
call sub_42a0de
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_421ed1
call sub_42a0de
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_422091
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_42a492
pop ecx
pop ecx
retn
sub_4220a5
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_429bfa
push eax
call sub_429bd5
sub_4220bf
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_42ad65
retn
_start
call sub_42af3f
jmp sub_421f62
sub_422220
push esi
call sub_422b53
pop ecx
retn
sub_42231c
push esi
call sub_422b53
pop ecx
retn
sub_422324
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_422335
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_422352
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_42239f
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_4229cf
pop ecx
sub_422419
mov [ ecx ] r--data
jmp sub_42239f
sub_422442
mov [ ecx ] r--data
jmp sub_42239f
sub_42246b
mov [ ecx ] r--data
jmp sub_42239f
sub_422476
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_42244d
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_422493
mov [ ecx ] r--data
jmp sub_42239f
sub_422511
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4224c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_422555
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4224c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_422599
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_422555
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42289a
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c375
add esp 0x10
pop ebp
retn
sub_422973
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_42c46f
pop ecx
pop ecx
pop ebp
retn
sub_422988
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_42c4a8
pop ecx
pop ecx
pop ebp
retn
sub_42299d
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c48b
add esp 0xc
pop ebp
retn
sub_4229b6
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c4c4
add esp 0xc
pop ebp
retn
sub_422ac0
call sub_423115
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_4229cf
pop ecx
retn
call sub_42c7f1
sub_422d00
push [ ebp + 0xc ]
call sub_422b53
pop ecx
retn
sub_422f2e
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_42308a
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_422b8f
pop ecx
pop ecx
retn
sub_4230b9
push 0x1
call sub_42c92e
pop ecx
retn
sub_42310b
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_423115
push 0x1
call sub_422fe8
pop ecx
retn
sub_42320a
push esi
call sub_422b53
pop ecx
retn
sub_4232fe
push esi
call sub_422b53
pop ecx
retn
sub_423326
call sub_42a0de
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_42d896
sub_423b17
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_423b21
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_429c4d
push 0x1
push 0x0
call sub_429685
add esp 0xc
jmp sub_429652
call eax
sub_423b72
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_423dc6
push [ ebp + 0x14 ]
call sub_422b53
pop ecx
retn
sub_423e16
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_42eba3
pop ecx
pop ecx
pop ebp
retn 0x4
sub_423e2a
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_42eb33
pop ecx
retn
sub_423e5b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_42ed38
pop ecx
pop ecx
pop ebp
retn 0x4
sub_423e71
push ecx
call sub_42ec95
pop ecx
retn
sub_423ede
lea eax [ ecx + 0x8 ]
retn
sub_423ee2
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_423eed
mov eax ecx
retn 0x4
sub_423fcb
push esi
call sub_422b53
pop ecx
retn
sub_424400
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_4246b9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42440a
pop ecx
pop ebp
retn
sub_4246cb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
call sub_42440a
pop ecx
pop ebp
retn
sub_4249bc
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42498c
sub_424a79
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_424a83
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4249c7
add esp 0xc
pop ebp
retn
sub_424ecf
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_424d13
add esp 0x14
pop ebp
retn
sub_424f70
push [ ebp + 0x18 ]
call sub_422b53
pop ecx
retn
sub_424f7a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_424eec
add esp 0x14
pop ebp
retn
sub_42515c
push [ ebp - 0x1c ]
call sub_422b53
pop ecx
retn
sub_42518c
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425095
add esp 0x14
pop ebp
retn
sub_425b9b
call sub_42a0de
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_42d896
sub_425bc4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_425b9b
sub_425be0
call sub_42a0de
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_42d896
sub_425c06
call sub_42a0de
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_42d896
sub_425c2c
call sub_42a0de
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_42d896
sub_425d69
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_425d70
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_425d77
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_425e74
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x28 ]
push 0x0
push [ eax + 0x18 ]
call sub_4275b0
add esp 0x10
pop ebp
retn 0x4
sub_42628c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4262a0
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4216fe
jmp sub_42628c
sub_4262af
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4216fe
jmp sub_42628c
sub_4264c0
call sub_42990b
retn
sub_4264c6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42648a
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_42655a
mov eax [ rw-data ]
retn
sub_426560
mov eax rw-data
retn
sub_4265ea
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_4266c0
push 0xd
call sub_42c92e
pop ecx
retn
sub_4266cc
push 0xc
call sub_42c92e
pop ecx
retn
sub_4266d5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_426613
sub_42677a
push 0xc
call sub_42c92e
pop ecx
retn
sub_426786
push 0xd
call sub_42c92e
pop ecx
retn
j_sub_4266e0
jmp sub_4266e0
sub_426794
xor eax eax
retn
sub_427333
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42723e
sub_427470
push 0xc
call sub_42c92e
pop ecx
retn
sub_42747c
push 0xc
call sub_42c92e
pop ecx
retn
sub_4274ad
and [ esi + 0x70 ] 0xffffffef
retn
sub_4274d0
mov [ ecx ] r--data
jmp sub_422419
sub_42762e
push [ ebp - 0x14 ]
call sub_427561
pop ecx
retn
sub_427672
call sub_42a0de
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_42a0de
dec [ eax + 0x90 ]
sub_427714
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_42771d
mov esp [ ebp - 0x18 ]
call sub_43252f
sub_42774f
call sub_42a0de
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_4279a5
push 0x10
pop eax
retn
sub_4279a9
push 0x8
push r--data
call sub_42ad20
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
sub_4279c1
push [ ebp - 0x14 ]
call sub_427561
pop ecx
retn
sub_4279cb
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
sub_4279db
push 0x8
push r--data
call sub_42ad20
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
sub_4279f4
push [ ebp - 0x14 ]
call sub_427561
pop ecx
retn
sub_4279fe
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
sub_427a0e
push 0x8
push r--data
call sub_42ad20
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
sub_427a26
push [ ebp - 0x14 ]
call sub_427561
pop ecx
retn
sub_427a30
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
sub_427a61
push [ ebp - 0x14 ]
call sub_427561
pop ecx
retn
sub_427a6b
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ad65
retn
sub_427af1
push 0x4
mov eax sub_453cda
call sub_4261e7
call sub_42a0de
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_432568
call sub_43257b
sub_427c82
mov eax [ ebp - 0x14 ]
call sub_42768c
retn
sub_427ef9
xor eax eax
inc eax
retn
sub_427efd
mov esp [ ebp - 0x18 ]
call sub_43252f
sub_427f92
xor eax eax
inc eax
retn
sub_427f96
mov esp [ ebp - 0x18 ]
call sub_43252f
sub_4285d7
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4224c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42878e
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_428798
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4286da
add esp 0xc
pop ebp
retn
sub_4288f2
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_4288fc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_4289b9
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4289c7
mov eax ecx
retn
sub_428c15
mov eax [ rw-data ]
retn
sub_428c1b
call sub_42a0de
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_42d896
sub_4291dc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_4291ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_4292a7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
sub_4294f8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4293ed
pop ebp
retn
sub_4298af
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_4298ea
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4298bf
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_429902
push 0x8
call sub_42ca1f
pop ecx
retn
sub_42990b
push 0x8
call sub_42c92e
pop ecx
retn
sub_429baa
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_42c92e
pop ecx
sub_429bbf
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_429a7f
add esp 0xc
pop ebp
retn
sub_429bd5
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_429a7f
add esp 0xc
pop ebp
retn
sub_429beb
push 0x1
push 0x0
push 0x0
call sub_429a7f
add esp 0xc
retn
sub_429bfa
push 0x1
push 0x1
push 0x0
call sub_429a7f
add esp 0xc
retn
sub_429c09
mov edi edi
push ebp
mov ebp esp
call sub_429dfc
push [ ebp + 0x8 ]
call sub_429c4d
pop ecx
push 0xff
call sub_429bd5
int3
sub_429e35
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_429e53
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
sub_429e67
mov eax [ rw-data ]
retn
sub_429e6d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_429eb3
push 0x0
call sub_429e7c
pop ecx
retn
sub_429ebc
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_429ef1
push 0x0
call [ EncodePointer@IAT ]
retn
sub_429efa
call [ TlsAlloc@IAT ]
retn 0x4
sub_429f03
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_429f57
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_42a053
push 0xd
call sub_42c92e
pop ecx
retn
sub_42a05c
push 0xc
call sub_42c92e
pop ecx
retn
sub_42a212
push 0xd
call sub_42c92e
pop ecx
retn
sub_42a21e
push 0xc
call sub_42c92e
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_42a45e
push sub_42a41c
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_42a737
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42ad65
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_42ad80
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_4216fe
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4216fe
sub_42afda
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42b139
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_42b16b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b146
int3
sub_42b1f0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42b185
sub_42b733
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_42b745
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_42b75a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_42c3f9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c375
add esp 0x10
pop ebp
retn
sub_42c46f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_42b76d
call sub_42c413
add esp 0x10
pop ebp
retn
sub_42c48b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_42b76d
call sub_42c413
add esp 0x10
pop ebp
retn
sub_42c4a8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_438c18
call sub_42c413
add esp 0x10
pop ebp
retn
sub_42c4c4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_438c18
call sub_42c413
add esp 0x10
pop ebp
retn
sub_42c675
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c5fe
add esp 0x14
pop ebp
retn
sub_42c884
push 0x1
call sub_42c92e
pop ecx
retn
sub_42c92e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42c945
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_4298ea
sub_42ca16
push 0xa
call sub_42c92e
pop ecx
retn
sub_42cc00
push [ ebp + 0x8 ]
call sub_430861
pop ecx
retn
sub_42d3d3
push ebx
call sub_430861
pop ecx
retn
sub_42d4ac
push ebx
call sub_430861
pop ecx
retn
sub_42d903
push 0xc
call sub_42c92e
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_42dad1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42da58
add esp 0x14
pop ebp
retn
sub_42dcd3
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_42dcdd
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dd1b
add esp 0x10
pop ebp
retn
sub_42dcf9
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dd3b
add esp 0x10
pop ebp
retn
sub_42dd15
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dd3b
add esp 0x10
pop ebp
retn
sub_42dd30
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dd5b
add esp 0x10
pop ebp
retn
sub_42dd4c
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dd5b
add esp 0x10
pop ebp
retn
sub_42dd67
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_42de01
push edi
call sub_42c92e
pop ecx
retn
sub_42de58
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_42de65
call sub_42a0de
add eax 0x64
retn
sub_42de6e
call sub_42a0de
add eax 0x60
retn
sub_42e07c
push 0x0
call sub_42c92e
pop ecx
retn
sub_42e21e
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_42c92e
pop ecx
sub_42e4f6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_42e3c6
pop ebp
retn
sub_42e938
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42eb24
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42eb9a
push 0xe
call sub_42c92e
pop ecx
retn
sub_42ec8c
push 0xe
call sub_42c92e
pop ecx
retn
sub_42ecfc
push 0xe
call sub_42c92e
pop ecx
retn
sub_42ee3b
push 0xe
call sub_42c92e
pop ecx
retn
sub_42ee8e
push 0xe
call sub_42c92e
pop ecx
retn
sub_42f080
push ebx
call sub_430861
pop ecx
retn
sub_42f72d
push ebx
call sub_430861
pop ecx
retn
sub_42f88a
mov eax rw-data
retn
sub_42f896
mov eax rw-data
retn
sub_42f89c
mov edi edi
push ebp
mov ebp esp
call sub_42f884
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42f8ad
mov edi edi
push ebp
mov ebp esp
call sub_42f88a
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42f8be
mov edi edi
push ebp
mov ebp esp
call sub_42f890
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42fb52
push 0x7
call sub_42c92e
pop ecx
retn
sub_42fff6
push 0x6
call sub_42c92e
pop ecx
retn
sub_42ffff
push 0x8
push r--data
call sub_42ad20
push 0x6
call sub_42ca1f
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_42f8cf
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43002e
call sub_42ad65
retn
sub_43002e
push 0x6
call sub_42c92e
pop ecx
retn
sub_43006f
push 0x6
call sub_42c92e
pop ecx
retn
sub_4304f3
push 0x1
call sub_42c92e
pop ecx
retn
sub_4305d6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_430500
add esp 0xc
pop ebp
retn 0x4
sub_430609
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_444195
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_43063b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_430500
add esp 0xc
pop ebp
retn 0x8
sub_430858
push 0xa
call sub_42c92e
pop ecx
retn
sub_43095a
push 0xa
call sub_42c92e
pop ecx
retn
sub_430a18
push 0xb
call sub_42c92e
pop ecx
retn
sub_431e98
push [ ebp - 0x6c ]
call sub_430861
pop ecx
retn
sub_43226a
push 0x7
call sub_42c92e
pop ecx
retn
sub_432319
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_432273
pop ecx
pop ecx
pop ebp
retn
sub_4323f1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43232c
add esp 0xc
pop ebp
retn
sub_43252f
push 0x8
push r--data
call sub_42ad20
call sub_42a0de
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_429652
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_43254f
xor eax eax
inc eax
retn
sub_432568
call sub_42a0de
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_43252f
call eax
sub_43257b
push 0x8
push r--data
call sub_42ad20
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_43252f
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_43259f
xor eax eax
inc eax
retn
sub_4325b3
push sub_43252f
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_43261c
mov eax rw-data
retn
sub_432622
mov eax rw-data
retn
sub_433ad4
xor eax eax
retn
sub_433d95
push 0xd
call sub_42c92e
pop ecx
retn
sub_4341a2
push 0xd
call sub_42c92e
pop ecx
retn
sub_4341db
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_434041
pop ecx
mov [ rw-data ] 0x1
sub_4342c8
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_434a24
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_434a34
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_4375a0
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_4375b2
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_4375c4
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_4379d0
push ebx
call sub_430861
pop ecx
retn
sub_437bc7
push [ ebp + 0x8 ]
call sub_422b53
pop ecx
retn
sub_437bf6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_42f740
sub_437e85
and [ rw-data ] 0x0
retn
sub_437e8d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4380cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_43814f
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438168
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438180
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438199
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4381b1
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4381ca
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4381e2
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4381fe
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438219
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438235
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438250
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_43826c
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438287
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4382a3
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4382be
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4382d7
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4382ef
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438308
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438320
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_438339
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_4380fc
add esp 0x10
pop ebp
retn
sub_4383a6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_438351
pop ecx
pop ecx
pop ebp
retn
sub_4384a3
call sub_422a09
add eax 0x20
push eax
push 0x1
call sub_422b8f
pop ecx
pop ecx
retn
sub_4384b6
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445eef
add esp 0xc
pop ebp
retn
sub_4384cf
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445f0c
add esp 0xc
pop ebp
retn
sub_4384e8
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_445f0c
add esp 0xc
pop ebp
retn
sub_438500
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445f29
add esp 0xc
pop ebp
retn
sub_438519
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_445f29
add esp 0xc
pop ebp
retn
sub_43855b
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_43879e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_438766
pop ecx
pop ecx
pop ebp
retn
sub_4387b1
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_4387c7
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_4387dd
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_4387f0
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_438803
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_438816
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_438829
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_43883c
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_43884f
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_438865
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_43887b
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_43888e
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_4388a1
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_4388b4
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_4388c7
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_4388dd
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_4388f3
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_438909
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_43891f
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_438935
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_43894b
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_43895e
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_438971
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_438c03
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_43acaa
push 0x3
call sub_42c92e
pop ecx
retn
sub_43adc9
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43acb3
add esp 0x10
pop ebp
retn
sub_43dd11
push [ ebp + 0xc ]
call sub_422b53
pop ecx
retn
sub_43dd1b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43aea0
call sub_43dc91
add esp 0x14
pop ebp
retn
sub_43dd3b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43bb25
call sub_43dc91
add esp 0x14
pop ebp
retn
sub_43dd5b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43c8ed
call sub_43dc91
add esp 0x14
pop ebp
retn
sub_43dd7b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43aea0
call sub_43dc91
add esp 0x14
pop ebp
retn
sub_43dd9a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43bb25
call sub_43dc91
add esp 0x14
pop ebp
retn
sub_43ddb9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43c8ed
call sub_43dc91
add esp 0x14
pop ebp
retn
sub_43deec
mov eax ecx
and [ eax ] 0x0
retn
sub_43e47f
mov eax [ rw-data ]
not eax
and eax 0x1
retn
sub_43e48a
mov eax [ rw-data ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_43e497
mov eax [ rw-data ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_43e4a5
mov eax [ rw-data ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_43e4b3
mov eax [ rw-data ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_43e4c1
mov eax [ rw-data ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_43e4cf
mov eax [ rw-data ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_43e4e1
mov eax [ rw-data ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_43e4ef
mov eax [ rw-data ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_43e4fd
mov eax [ rw-data ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_43e50b
mov eax [ rw-data ]
and eax 0x1000
retn
sub_43e516
mov eax [ rw-data ]
and eax 0x2000
retn
sub_43e521
mov eax [ rw-data ]
and eax 0x4000
retn
sub_43e52c
mov eax [ rw-data ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_43e53a
mov eax [ rw-data ]
and eax 0x10000
retn
sub_43e545
mov eax [ rw-data ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_43e5fa
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_43e60b
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_43e623
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_43e62d
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_43e635
movsx eax [ ecx + 0x4 ]
retn
sub_43e63a
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_43e644
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_43e64e
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_43e65f
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_43e66c
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_43e67d
or [ ecx + 0x4 ] 0x800
retn
sub_43e685
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_43e68f
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_43e699
or [ ecx + 0x4 ] 0x1000
retn
sub_43e6a1
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_43e6ab
or [ ecx + 0x4 ] 0x2000
retn
sub_43e6b3
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_43e6bd
or [ ecx + 0x4 ] 0x4000
retn
sub_43e6c5
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_43e6cf
or [ ecx + 0x4 ] 0x8000
retn
sub_43e6d7
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_43e6f2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_43e729
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_43e741
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_43e74a
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_43e750
mov eax ecx
mov [ eax ] r--data
retn
sub_43e759
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_43e770
xor eax eax
inc eax
retn
sub_43e774
mov al [ ecx + 0x4 ]
retn
sub_43e778
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_43e7b9
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_43e7cf
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor al al
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x4 ]
sub_43e82c
mov eax [ ecx + 0x8 ]
retn
sub_43e830
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_43e8c2
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_43e956
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_43ea86
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_43e572
pop ebp
retn
sub_43ed87
mov eax [ ecx + 0x8 ]
retn
sub_43ed8b
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_43ed9d
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43ea9d
add esp 0x10
pop ebp
retn 0x8
sub_43ee14
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43ea13
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_43fe04
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_43f66d
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43fe1a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_43f66d
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43fe30
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_43f66d
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_440481
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43fe46
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4410cb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_440fea
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_443069
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_442f70
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_443089
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_442f70
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4430a9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_442f70
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_443158
push 0x5
call sub_42c92e
pop ecx
retn
sub_4431f2
push 0x5
call sub_42c92e
pop ecx
retn
sub_4438b7
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_446239
add esp 0xc
pop ebp
retn
sub_4438cd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_446264
add esp 0x10
pop ebp
retn
sub_4438e6
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4438b7
sub_4438f1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4438cd
sub_4438fc
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4469c9
add esp 0xc
pop ebp
retn
sub_443912
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4469f4
add esp 0x10
pop ebp
retn
sub_443b4a
push 0x7
call sub_42c92e
pop ecx
retn
sub_443c17
push 0x7
call sub_42c92e
pop ecx
retn
sub_443cee
push 0x7
call sub_42c92e
pop ecx
retn
sub_443efb
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_443cf7
add esp 0x10
pop ebp
retn
sub_444061
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_443f15
add esp 0x10
pop ebp
retn
sub_444169
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4440a0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4441b4
call eax
retn
sub_44444c
push ebx
call sub_430861
pop ecx
retn
sub_44467d
push ebx
call sub_430861
pop ecx
retn
sub_444843
push 0x7
call sub_42c92e
pop ecx
retn
sub_44488d
push 0x7
call sub_42c92e
pop ecx
retn
sub_444acd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4448d6
add esp 0xc
pop ebp
retn
sub_444b8e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444ae4
add esp 0xc
pop ebp
retn
sub_444ec7
push [ ebp - 0x68 ]
call sub_430861
pop ecx
retn
sub_445128
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_4216fe
jmp sub_42ad65
sub_445e61
push 0x2
call sub_429c09
sub_445ee7
push esi
call sub_422b53
pop ecx
retn
sub_445eef
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_42b76d
call sub_445e6a
add esp 0x10
pop ebp
retn
sub_445f0c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_439ff7
call sub_445e6a
add esp 0x10
pop ebp
retn
sub_445f29
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_438c18
call sub_445e6a
add esp 0x10
pop ebp
retn
sub_445f46
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_42b76d
call sub_445e6a
add esp 0x10
pop ebp
retn
sub_445f62
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_439ff7
call sub_445e6a
add esp 0x10
pop ebp
retn
sub_445f7e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_438c18
call sub_445e6a
add esp 0x10
pop ebp
retn
sub_445fef
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_445f9a
sub_445ffa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445f9a
pop ecx
pop ecx
pop ebp
retn
sub_446264
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_44600e
add esp 0x14
pop ebp
retn
sub_4462ad
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_44600e
add esp 0x14
pop ebp
retn
sub_4462ca
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_4462e9
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_4464ed
push [ ebp + 0xc ]
call sub_422b53
pop ecx
retn
sub_4464f7
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_446487
sub_4466c4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446502
add esp 0x10
pop ebp
retn
sub_4466de
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446502
add esp 0x10
pop ebp
retn
sub_4466f8
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446502
add esp 0x10
pop ebp
retn
sub_446712
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446502
add esp 0x10
pop ebp
retn
sub_4469f4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_44672c
add esp 0x14
pop ebp
retn
sub_446a3d
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_44672c
add esp 0x14
pop ebp
retn
sub_446b38
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446a5a
add esp 0x10
pop ebp
retn
sub_446c3d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_446e91
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_446df1
pop ecx
pop ecx
pop ebp
retn
sub_4479be
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44790e
add esp 0xc
pop ebp
retn
sub_447ad0
push eax
call sub_4227ef
add esp 0x4
retn
sub_447ae0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_447af0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_447b00
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_447b10
add ecx 0x4
mov eax 0x1
[ ecx ] eax
retn
sub_447b20
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
test edx edx
je r-xdata
retn 0x4
add edx 0x4
mov ecx 0x1
[ edx ] ecx
__imp_GetTickCount_447b40
jmp [ GetTickCount@IAT ]
sub_447b50
mov eax ecx
mov [ eax ] 0x0
retn
sub_447b60
mov eax [ ecx ]
retn
sub_447b70
mov eax [ ecx + 0x44 ]
push eax
call [ SetEvent@IAT ]
retn
sub_447bc0
mov eax [ ecx + 0x8 ]
and eax [ ecx + 0xc ]
cmp eax 0xffffffff
jne r-xdata
xor eax eax
retn
mov eax 0x1
retn
sub_447be0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_447bf0
mov eax ecx
xor ecx ecx
mov [ eax ] 0xc15730e2
mov [ eax + 0x4 ] 0x7f0725e3
mov [ eax + 0x8 ] cl
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] cl
retn
sub_447c10
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_447c30
retn 0x4
sub_447c40
call sub_44d530
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
retn
sub_447c60
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ TlsFree@IAT ]
mov [ rw-data ] 0xffffffff
sub_447c80
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ TlsGetValue@IAT ]
retn
xor eax eax
retn
sub_447ca0
mov edx [ esp + 0x8 ]
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn 0x8
sub_447cc0
sub esp 0x24
lea eax [ esp ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ esp + 0x14 ]
add esp 0x24
retn
sub_447ce0
call [ GetCurrentThreadId@IAT ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
mov eax ecx
retn
sub_447d80
push 0x0
call [ Sleep@IAT ]
retn
sub_447ec0
retn
sub_447ed0
retn
sub_447ee0
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ TlsFree@IAT ]
mov [ rw-data ] 0xffffffff
sub_447f00
mov eax [ ecx ]
retn
sub_447f10
mov eax [ ecx ]
neg eax
sbb eax eax
neg eax
dec eax
retn
sub_447f20
mov eax [ ecx ]
retn
sub_447f30
mov eax ecx
mov [ eax ] 0x0
retn
sub_447f40
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
test edx edx
je r-xdata
retn 0x4
add edx 0x4
mov ecx 0x1
[ edx ] ecx
sub_447f60
mov eax [ ecx ]
retn
sub_447f70
mov eax [ ecx ]
retn
sub_447f80
mov eax [ ecx ]
neg eax
sbb eax eax
neg eax
dec eax
retn
sub_447f90
mov edx [ esp + 0x4 ]
mov eax [ ecx ]
push esi
mov esi [ edx ]
mov [ ecx ] esi
mov [ edx ] eax
pop esi
retn 0x4
sub_447fb0
mov eax [ ecx ]
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
retn
sub_447fc0
mov eax [ ecx + 0x8 ]
retn
sub_447fd0
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov edx [ esp + 0x8 ]
cmp ecx [ edx ]
sbb eax eax
neg eax
retn 0x8
sub_447ff0
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x4 ]
jae r-xdata
xor eax eax
retn 0x4
cmp [ ecx ] eax
ja r-xdata
mov eax 0x1
retn 0x4
sub_448010
retn 0x8
sub_448020
mov eax [ esp + 0x4 ]
retn
sub_448030
mov eax [ esp + 0x4 ]
add eax 0x8
retn
sub_448040
mov eax [ ecx ]
mov edx [ esp + 0x4 ]
xor ecx ecx
cmp eax [ edx ]
sete al
retn 0x4
sub_448050
mov eax ecx
add [ eax ] 0x8
retn
sub_448060
mov eax [ ecx ]
retn
sub_448070
mov eax ecx
add [ eax ] 0x8
retn
sub_448080
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
sar eax 0x3
retn
sub_448090
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x3
retn
sub_4480a0
push r--data
call sub_420bb6
sub_4480d0
retn 0x4
sub_4480e0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x8
sub_4480f0
retn 0x4
sub_448100
mov eax [ ecx ]
add eax 0xc
retn
sub_448110
mov eax ecx
mov [ eax ] 0x0
retn
sub_448120
mov eax 0x1fffffff
retn
sub_448130
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x8
sub_448270
mov eax [ esp + 0x4 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
retn
sub_4482c0
mov eax [ esp + 0x4 ]
retn
sub_4482d0
mov eax [ esp + 0x4 ]
retn
sub_4482e0
mov eax [ esp + 0x4 ]
retn
sub_448350
mov eax 0xfffffff
retn
sub_4483c0
mov eax [ esp + 0x4 ]
retn
sub_4483d0
mov eax [ esp + 0x4 ]
retn
sub_4483e0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
retn 0x8
sub_448400
mov eax [ esp + 0x4 ]
retn
sub_448410
mov eax [ esp + 0x4 ]
retn
sub_448420
mov eax [ esp + 0x4 ]
retn
sub_448430
mov eax [ esp + 0x4 ]
retn
sub_448440
mov eax [ esp + 0x4 ]
retn
sub_448450
mov eax [ esp + 0x4 ]
retn
sub_448460
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
retn 0x8
sub_448480
mov eax [ esp + 0x4 ]
retn
sub_448490
mov eax [ esp + 0x4 ]
retn
sub_4484a0
xor eax eax
retn
sub_4484b0
mov eax [ esp + 0x4 ]
retn
sub_4484c0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
retn 0x8
sub_4484e0
mov eax [ esp + 0x4 ]
retn
sub_4484f0
mov eax [ esp + 0x4 ]
retn
sub_448500
mov eax [ esp + 0x4 ]
retn
sub_448510
mov eax [ esp + 0x4 ]
retn
sub_448520
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x8 ] ecx
retn
sub_448530
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] ecx
retn
sub_448540
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x10 ] ecx
retn
sub_448550
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x8 ] ecx
retn
sub_448560
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] ecx
retn
sub_448570
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x10 ] ecx
retn
sub_448580
mov eax ecx
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
retn 0x4
sub_4485a0
xor eax eax
retn 0x4
sub_4485b0
xor eax eax
retn
sub_4485c0
mov eax ecx
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
retn 0x4
sub_4485e0
xor eax eax
retn 0x4
sub_4485f0
xor eax eax
retn
sub_448600
mov [ ecx ] r--data
retn
sub_448610
mov [ ecx ] r--data
retn
sub_448620
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_448640
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_448660
mov eax [ esp + 0x4 ]
retn
sub_448b20
push sub_447c40
push rw-data
call sub_448890
mov eax [ rw-data ]
add esp 0x8
cmp eax 0xffffffff
je r-xdata
retn
mov ecx [ esp + 0x4 ]
push ecx
push eax
call [ TlsSetValue@IAT ]
sub_448c30
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_40ff70
mov [ esi ] eax
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_448c50
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
retn 0x4
add ecx 0x4
mov edx 0x1
[ ecx ] edx
sub_448c80
xor eax eax
cmp [ ecx + 0x8 ] eax
sete al
retn
sub_448ce0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
retn 0x4
add ecx 0x4
mov edx 0x1
[ ecx ] edx
sub_448d10
mov eax [ ecx ]
add eax 0x8
retn
sub_448d20
mov eax ecx
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_448d30
mov eax [ ecx ]
mov edx [ esp + 0x4 ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn 0x4
sub_448d40
mov eax ecx
add [ eax ] 0x8
retn
sub_448d50
mov eax [ ecx ]
retn
sub_448d60
mov eax ecx
add [ eax ] 0x8
retn
sub_448d70
mov eax [ esp + 0x4 ]
add eax 0xc
retn
sub_448d80
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x8
sub_448d90
mov eax [ ecx ]
retn
sub_448da0
mov eax [ ecx ]
mov edx [ esp + 0x4 ]
xor ecx ecx
cmp eax [ edx ]
sete al
retn 0x4
sub_448db0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x8
sub_448dc0
mov eax [ ecx ]
mov edx [ esp + 0x4 ]
xor ecx ecx
cmp eax [ edx ]
sete al
retn 0x4
sub_448dd0
mov eax [ ecx ]
add eax 0xc
retn
sub_448de0
mov eax ecx
mov [ eax ] 0x0
retn
sub_448e30
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
push 0x14
push 0x1dd76000
push ecx
push eax
call sub_430080
retn
sub_448e80
mov eax 0x1fffffff
retn
sub_448ec0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x8
sub_448ed0
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
push 0x14
push 0x1dd76000
push ecx
push eax
call sub_42b430
retn
sub_448f50
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
retn 0x8
sub_448f70
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push esi
mov esi [ edx ]
mov [ eax ] esi
mov [ edx ] ecx
pop esi
retn
sub_448f90
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
retn 0x8
sub_448fb0
mov eax 0xfffffff
retn
sub_448fc0
push esi
mov esi ecx
call sub_448360
mov eax esi
pop esi
retn
sub_448fd0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
retn 0x8
sub_448ff0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
retn 0x8
sub_449090
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x8 ] ecx
retn
sub_4490a0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] ecx
retn
sub_4490b0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x10 ] ecx
retn
sub_4490c0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x8 ] ecx
retn
sub_4490d0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] ecx
retn
sub_4490e0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x10 ] ecx
retn
sub_449199
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_425ceb
int3
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_449239
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_425ceb
int3
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_449300
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_40ff70
mov [ esi ] eax
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_449390
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
retn 0x4
add ecx 0x4
mov edx 0x1
[ ecx ] edx
sub_449400
sub ecx 0x14
jmp sub_449410
sub_4494b0
sub ecx 0x14
jmp sub_4494c0
sub_449520
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
retn 0x4
add ecx 0x4
mov edx 0x1
[ ecx ] edx
sub_449550
mov eax ecx
mov [ eax ] 0x0
retn
sub_449600
push ecx
mov ecx [ ecx ]
mov eax [ esp + 0x8 ]
mov [ esp ] 0x0
mov [ eax ] ecx
test ecx ecx
je r-xdata
pop ecx
retn 0x4
add ecx 0x4
mov edx 0x1
[ ecx ] edx
sub_449700
push esi
mov esi ecx
call sub_40fa90
mov eax esi
pop esi
retn
sub_449710
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
mov esi [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] esi
mov [ ecx + 0x4 ] edx
pop esi
retn 0x4
sub_449730
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x8
sub_4497d0
push esi
mov esi ecx
call sub_448360
mov eax esi
pop esi
retn
sub_4497e0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
retn 0x8
sub_449870
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_449ae0
sub ecx [ ecx - 0x4 ]
sub ecx 0x28
jmp sub_44a390
sub_449af0
sub ecx 0x14
jmp sub_44a390
sub_449b70
sub ecx [ ecx - 0x4 ]
sub ecx 0x28
jmp sub_44a3c0
sub_449b80
sub ecx 0x14
jmp sub_44a3c0
sub_449f60
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
push 0x0
push 0xd693a400
push ecx
push eax
call sub_42b430
retn
sub_44a050
mov eax [ ecx ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_44a060
mov ecx [ ecx ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_44a150
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push eax
push esi
call sub_449740
mov eax esi
pop esi
retn 0x8
sub_44a170
push ecx
mov eax [ esp ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_449800
add esp 0x14
retn
sub_44a190
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x8
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_44a1f0
push esi
mov esi ecx
call sub_449a70
mov [ esi + 0x28 ] r--data
pop esi
retn
sub_44a2c0
push esi
mov esi ecx
call sub_449b00
mov [ esi + 0x28 ] r--data
pop esi
retn
sub_44a390
push esi
mov esi ecx
call sub_449a70
test [ esp + 0x8 ] 0x1
mov [ esi + 0x28 ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423b7f
add esp 0x4
sub_44a3c0
push esi
mov esi ecx
call sub_449b00
test [ esp + 0x8 ] 0x1
mov [ esi + 0x28 ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423b7f
add esp 0x4
sub_44a9b0
sub ecx [ ecx - 0x4 ]
jmp sub_44a630
sub_44a9d0
push esi
mov esi [ esp + 0x8 ]
push ecx
push esi
call sub_44a070
add esp 0x8
mov eax esi
pop esi
retn 0x4
sub_44aaa0
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
retn
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_44b2d0
sub ecx [ ecx - 0x4 ]
jmp sub_44b0a0
sub_44b2e0
sub ecx [ ecx - 0x4 ]
jmp sub_44b180
sub_44b827
mov eax [ ebp - 0x14 ]
push eax
call sub_423b7f
add esp 0x4
push 0x0
push 0x0
call sub_425ceb
int3
sub_44bb72
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
j_sub_44b950
jmp sub_44b950
sub_44bf20
sub esp 0x8
mov eax [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov [ esp ] eax
lea eax [ esp ]
push eax
add ecx 0x24
mov [ esp + 0x8 ] edx
call sub_44bd00
add esp 0x8
retn 0x8
sub_44bf50
sub esp 0x8
mov eax [ ecx ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
call sub_44bd70
mov eax [ esp + 0x14 ]
mov dx [ esp + 0x8 ]
mov [ eax ] dx
add esp 0x10
retn 0x4
sub_44bf80
sub esp 0x8
mov eax [ ecx ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
call sub_44bd70
mov eax [ esp + 0x14 ]
mov dx [ esp + 0xa ]
mov [ eax ] dx
add esp 0x10
retn 0x4
sub_44bfb0
sub esp 0x8
mov eax [ ecx ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
call sub_44bd70
mov eax [ esp + 0x14 ]
mov dx [ esp + 0xc ]
mov [ eax ] dx
add esp 0x10
retn 0x4
sub_44c290
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44c040
mov eax esi
pop esi
retn
sub_44c440
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44c040
mov eax esi
pop esi
retn 0x4
sub_44c6c0
push esi
mov esi ecx
call sub_404d70
inc [ esi + 0x4 ]
mov [ esi ] r--data
mov [ esi + 0x48 ] 0x0
mov eax esi
pop esi
retn
sub_44c6e0
retn
j_sub_44c530
jmp sub_44c530
sub_44cc87
mov edx [ ebp - 0x14 ]
push edx
call sub_404d20
add esp 0x4
push 0x0
push 0x0
call sub_425ceb
int3
sub_44cca0
push esi
mov esi ecx
call sub_44c530
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423b7f
add esp 0x4
sub_44cd32
mov eax [ ebp - 0x14 ]
push eax
call sub_448290
add esp 0x4
push 0x0
push 0x0
call sub_425ceb
int3
sub_44d480
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_404490
add esp 0x4
push 0x0
push eax
mov ecx esi
call sub_44d3a0
pop esi
retn 0x4
sub_44d4a0
push ecx
mov eax [ __tls_directory ]
mov [ esp ] eax
xor eax eax
pop ecx
retn
sub_44d4b0
push j_sub_44b950
call sub_4264c6
add esp 0x4
call sub_447ec0
xor eax eax
retn
sub_44d4d0
call sub_447ee0
xor eax eax
retn
_TLS_Entry_0
cmp [ esp + 0x8 ] 0x3
jne r-xdata
retn 0xc
call j_sub_44b950
sub_44d530
retn
sub_44d540
mov eax ecx
retn
sub_44d550
retn
sub_44d560
mov [ ecx ] r--data
retn
sub_44d570
xor eax eax
cmp ecx [ esp + 0x4 ]
sete al
retn 0x4
sub_44d580
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423b7f
add esp 0x4
sub_44d5a0
mov edx [ esp + 0x8 ]
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn 0x8
sub_44d5c0
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
xor eax eax
retn
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
mov eax 0x1
retn
sub_44d5e0
mov eax [ ecx + 0x4 ]
retn
sub_44d5f0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x8
sub_44d640
mov eax [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
retn 0x8
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax 0x1
retn 0x8
sub_44d660
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_44d670
mov eax [ ecx ]
push eax
call [ LocalFree@IAT ]
retn
sub_44d680
mov eax ecx
mov [ eax ] r--data
retn
sub_44d690
mov [ ecx ] r--data
retn
sub_44d6a0
mov eax ecx
mov [ eax ] r--data
retn
sub_44d6b0
mov [ ecx ] r--data
retn
sub_44d6c0
mov eax r--data
retn
sub_44d6d0
mov eax r--data
retn
sub_44d6e0
mov eax [ esp + 0x4 ]
retn
sub_44d6f0
mov eax [ esp + 0x4 ]
retn
sub_44d700
mov eax ecx
mov [ eax ] r--data
retn
sub_44d710
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423b7f
add esp 0x4
sub_44d730
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423b7f
add esp 0x4
sub_44e2b0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_409160
mov eax esi
pop esi
retn 0x4
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
WaitForMultipleObjects
jmp [ WaitForMultipleObjects@IAT ]
ReleaseSemaphore
jmp [ ReleaseSemaphore@IAT ]
DuplicateHandle
jmp [ DuplicateHandle@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
CreateEventA
jmp [ CreateEventA@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
CreateSemaphoreA
jmp [ CreateSemaphoreA@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedCompareExchange
jmp [ InterlockedCompareExchange@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
SetFileTime
jmp [ SetFileTime@IAT ]
LocalFileTimeToFileTime
jmp [ LocalFileTimeToFileTime@IAT ]
SystemTimeToFileTime
jmp [ SystemTimeToFileTime@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
FindClose
jmp [ FindClose@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
GetDriveTypeA
jmp [ GetDriveTypeA@IAT ]
FindFirstFileExA
jmp [ FindFirstFileExA@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
GetTimeZoneInformation
jmp [ GetTimeZoneInformation@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetFileInformationByHandle
jmp [ GetFileInformationByHandle@IAT ]
PeekNamedPipe
jmp [ PeekNamedPipe@IAT ]
GetCurrentDirectoryW
jmp [ GetCurrentDirectoryW@IAT ]
SetCurrentDirectoryW
jmp [ SetCurrentDirectoryW@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
GetDriveTypeW
jmp [ GetDriveTypeW@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
OpenEventA
jmp [ OpenEventA@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetWaitableTimer
jmp [ SetWaitableTimer@IAT ]
CreateWaitableTimerA
jmp [ CreateWaitableTimerA@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
sub_44e89a
mov edi edi
push ebp
mov ebp esp
call sub_42a065
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_42a227
pop ecx
sub_44e8b9
push 0xc
push r--data
call sub_42ad20
call sub_42a0de
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_44e89a
sub_44e8ee
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_429bd5
int3
sub_44e9ff
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_43252f
xor eax eax
retn
sub_44ea34
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_43252f
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_44eaba
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44ea11
ExitThread
jmp [ ExitThread@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
sub_44eade
mov eax sub_44f7a7
mov [ rw-data ] eax
mov [ rw-data ] sub_44ee40
mov [ rw-data ] sub_44edf4
mov [ rw-data ] sub_44ee2d
mov [ rw-data ] sub_44ed96
mov [ rw-data ] eax
mov [ rw-data ] sub_44f71f
mov [ rw-data ] sub_44edb2
mov [ rw-data ] sub_44ed14
mov [ rw-data ] sub_44eca0
retn
sub_44eb3e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
sub_44eb53
mov edi edi
push ebp
mov ebp esp
call sub_44eade
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_44f7ca
sub_44ec95
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_446c10
sub_44edf4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44edb2
add esp 0x10
pop ebp
retn
sub_44ee2d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_44eca0
pop ecx
pop ecx
pop ebp
retn
sub_44ee40
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_44ed14
pop ecx
pop ecx
pop ebp
retn
sub_44f5f5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f534
add esp 0x14
pop ebp
retn
sub_44f89a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f7f2
add esp 0xc
pop ebp
retn
sub_44f95a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f8b1
add esp 0xc
pop ebp
retn
sub_44fa19
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f971
add esp 0xc
pop ebp
retn
sub_44fa62
mov eax [ rw-data ]
retn
sub_44ffa3
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
pop ebp
retn
sub_452b1e
push 0x1f80
call sub_453b0c
pop ecx
retn
sub_453a4a
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_453a5a
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_453aee
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
stmxcsr [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
sub_453b39
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_453b7e
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
leave
retn
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
sub_453b9b
xor eax eax
cmp [ rw-data ] eax
je r-xdata
retn
call sub_453aee
and eax 0x3f
sub_453bae
xor eax eax
cmp [ rw-data ] eax
je r-xdata
retn
call sub_453aee
and eax 0x3f
jmp sub_453b7e
sub_453bfd
mov edi edi
push ebp
mov ebp esp
call sub_453aee
mov ecx [ ebp + 0x8 ]
and ecx 0x3f
or eax ecx
push eax
call sub_453b0c
pop ecx
pop ebp
retn
sub_453c20
lea ecx [ ebp - 0x10 ]
jmp sub_420e1b
sub_453c28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453c43
lea ecx [ ebp - 0x10 ]
jmp sub_420e1b
sub_453c4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453c66
lea ecx [ ebp - 0x10 ]
jmp sub_420e1b
sub_453c6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453c89
mov ecx [ ebp - 0x10 ]
jmp sub_402d80
sub_453c91
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_406c30
sub_453c9c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453cb7
lea ecx [ ebp - 0x10 ]
jmp sub_420e1b
sub_453cbf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453cda
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453d00
lea ecx [ ebp - 0x6c ]
jmp sub_447c10
sub_453d08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453d30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453d50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453d70
mov ecx [ ebp - 0x10 ]
jmp sub_403a50
sub_453d78
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453da0
mov ecx [ ebp - 0x10 ]
jmp sub_403a50
sub_453da8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453dd0
lea ecx [ ebp - 0x10 ]
jmp sub_407b20
sub_453dd8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453e00
lea ecx [ ebp - 0x10 ]
jmp sub_407b20
sub_453e08
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453e30
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_403a70
sub_453e4c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453e70
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_403a70
sub_453e8c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453eb0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_403a70
sub_453ecc
mov ecx [ ebp - 0x10 ]
jmp sub_4493c0
sub_453ed4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453ef0
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x3c ] 0xfffffffe
lea ecx [ ebp - 0x10 ]
jmp sub_403a70
sub_453f09
lea ecx [ ebp - 0x38 ]
jmp sub_403a50
sub_453f11
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453f30
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_403a70
sub_453f4c
mov ecx [ ebp - 0x10 ]
jmp sub_449470
sub_453f54
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453f70
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x3c ] 0xfffffffe
lea ecx [ ebp - 0x10 ]
jmp sub_403a70
sub_453f89
lea ecx [ ebp - 0x38 ]
jmp sub_403a50
sub_453f91
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453fb0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_403a70
sub_453fcc
mov ecx [ ebp - 0x10 ]
jmp sub_4493c0
sub_453fd4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_453ff0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_403a70
sub_45400c
mov ecx [ ebp - 0x10 ]
jmp sub_449470
sub_454014
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454030
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_403ce0
sub_45403b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454060
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_403ce0
sub_45406b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454090
lea ecx [ ebp - 0x58 ]
jmp sub_403a50
sub_454098
lea ecx [ ebp - 0x58 ]
jmp sub_4493c0
sub_4540a0
mov eax [ ebp - 0x68 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x68 ] 0xfffffffd
lea ecx [ ebp - 0x10 ]
jmp sub_403a70
sub_4540b9
lea ecx [ ebp - 0x38 ]
jmp sub_403a50
sub_4540c1
lea ecx [ ebp - 0x38 ]
jmp sub_4493c0
sub_4540c9
lea ecx [ ebp - 0x38 ]
jmp sub_44a1f0
sub_4540d1
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4540df
mov eax [ ebp - 0x64 ]
push eax
call sub_423b7f
pop ecx
retn
sub_4540ea
mov eax [ ebp - 0x68 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x68 ] 0xfffffffb
mov ecx [ ebp - 0x64 ]
add ecx 0x28
jmp sub_403a70
sub_454106
lea ecx [ ebp - 0x5c ]
jmp sub_403ce0
sub_45410e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x68 ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454130
lea ecx [ ebp - 0x58 ]
jmp sub_403a50
sub_454138
lea ecx [ ebp - 0x58 ]
jmp sub_449470
sub_454140
mov eax [ ebp - 0x68 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x68 ] 0xfffffffd
lea ecx [ ebp - 0x10 ]
jmp sub_403a70
sub_454159
lea ecx [ ebp - 0x38 ]
jmp sub_403a50
sub_454161
lea ecx [ ebp - 0x38 ]
jmp sub_449470
sub_454169
lea ecx [ ebp - 0x38 ]
jmp sub_44a2c0
sub_454171
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_45417f
mov eax [ ebp - 0x64 ]
push eax
call sub_423b7f
pop ecx
retn
sub_45418a
mov eax [ ebp - 0x68 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x68 ] 0xfffffffb
mov ecx [ ebp - 0x64 ]
add ecx 0x28
jmp sub_403a70
sub_4541a6
lea ecx [ ebp - 0x5c ]
jmp sub_403ce0
sub_4541ae
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x68 ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4541d0
mov eax [ ebp - 0x10 ]
push eax
call sub_423b7f
pop ecx
retn
sub_4541db
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_403a70
sub_4541f7
mov ecx [ ebp - 0x10 ]
jmp sub_4493c0
sub_4541ff
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454220
mov eax [ ebp - 0x10 ]
push eax
call sub_423b7f
pop ecx
retn
sub_45422b
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_403a70
sub_454247
mov ecx [ ebp - 0x10 ]
jmp sub_449470
sub_45424f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454270
lea ecx [ ebp - 0x18 ]
jmp sub_402680
sub_454278
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4542a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4542c0
lea ecx [ ebp - 0x14 ]
jmp sub_407b20
sub_4542c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4542f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454310
lea ecx [ ebp - 0x48 ]
jmp sub_403f70
sub_454318
lea ecx [ ebp - 0x48 ]
jmp sub_403f70
sub_454320
lea ecx [ ebp - 0x3c ]
jmp sub_403e50
sub_454328
lea ecx [ ebp - 0x30 ]
jmp sub_403e50
sub_454330
lea ecx [ ebp - 0x24 ]
jmp sub_404090
sub_454338
lea ecx [ ebp - 0x18 ]
jmp sub_404090
sub_454340
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454360
lea ecx [ ebp + 0x8 ]
jmp sub_4081c0
sub_454368
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454390
lea ecx [ ebp - 0x14 ]
jmp sub_4081c0
sub_454398
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4543c0
mov ecx [ ebp - 0x18 ]
add ecx 0x8
jmp sub_404c50
sub_4543cb
mov ecx [ ebp - 0x18 ]
add ecx 0x10
jmp sub_404ec0
sub_4543d6
mov ecx [ ebp - 0x18 ]
add ecx 0x24
jmp sub_407a30
sub_4543e1
mov ecx [ ebp - 0x18 ]
add ecx 0x34
jmp sub_407a80
sub_4543ec
mov ecx [ ebp - 0x18 ]
add ecx 0x44
jmp sub_404c50
sub_4543f7
mov ecx [ ebp - 0x14 ]
jmp sub_40a2a0
sub_4543ff
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454420
lea ecx [ ebp - 0x58 ]
jmp sub_404c50
sub_454428
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454450
lea ecx [ ebp - 0x28 ]
jmp sub_402680
sub_454458
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_4026e0
add esp 0x8
retn
sub_454469
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454490
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4544b0
lea ecx [ ebp - 0x3c ]
jmp sub_407b20
sub_4544b8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40 ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4544e0
lea ecx [ ebp - 0x14 ]
jmp sub_407b20
sub_4544e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454510
lea ecx [ ebp + 0x8 ]
jmp sub_404d50
sub_454518
lea ecx [ ebp - 0x28 ]
jmp sub_414680
sub_454520
lea ecx [ ebp - 0x1c ]
jmp sub_449630
sub_454528
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454550
lea ecx [ ebp + 0x8 ]
jmp sub_404d50
sub_454558
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454580
lea ecx [ ebp - 0x40 ]
jmp sub_4048f0
sub_454588
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x48 ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4216fe
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4545b0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4545be
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4545e0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4545ee
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454610
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_45461e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454640
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_45464e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454670
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_45467e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4546a0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4546ae
mov eax [ ebp - 0x4c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x4c ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_406b10
sub_4546c7
mov eax [ ebp - 0x4c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x4c ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_406b10
sub_4546e0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x50 ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4216fe
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454710
lea ecx [ ebp - 0x30 ]
jmp sub_44d670
sub_454718
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_406b10
sub_454731
lea ecx [ ebp - 0x2c ]
jmp sub_406b10
sub_454739
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40 ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4216fe
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454770
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_45477e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4547a0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4547ae
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4547d0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4547de
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454800
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_45480e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454830
lea ecx [ ebp - 0x10 ]
jmp sub_407560
sub_454838
lea ecx [ ebp - 0x18 ]
jmp sub_407560
sub_454840
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454860
mov ecx [ ebp - 0x10 ]
jmp sub_420e1b
sub_454868
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_406c30
sub_454873
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_406c30
sub_45487e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_406c30
sub_454889
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_406c30
sub_454894
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4548b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4548d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4548f0
mov ecx [ ebp - 0x10 ]
jmp sub_402d80
sub_4548f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454920
mov ecx [ ebp - 0x1c ]
jmp sub_420e1b
sub_454928
mov ecx [ ebp - 0x1c ]
add ecx 0x4
jmp sub_406c30
sub_454933
mov ecx [ ebp - 0x1c ]
add ecx 0xc
jmp sub_406c30
sub_45493e
mov ecx [ ebp - 0x1c ]
add ecx 0x14
jmp sub_406c30
sub_454949
mov ecx [ ebp - 0x1c ]
add ecx 0x1c
jmp sub_406c30
sub_454954
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454970
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454990
mov eax [ ebp - 0x14 ]
push eax
call sub_423b7f
pop ecx
retn
sub_45499b
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x3c ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
jmp sub_402ad0
sub_4549b4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4549d0
mov eax [ ebp - 0x14 ]
push eax
call sub_423b7f
pop ecx
retn
sub_4549db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454a00
mov eax [ ebp - 0x14 ]
push eax
call sub_423b7f
pop ecx
retn
sub_454a0b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454a30
mov ecx [ ebp - 0x10 ]
jmp sub_402680
sub_454a38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454a60
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454a7c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454aa0
mov ecx [ ebp - 0x10 ]
jmp sub_4029e0
sub_454aa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454ad0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454aec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454b10
lea ecx [ ebp - 0x18 ]
jmp sub_420e1b
sub_454b18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454b40
lea ecx [ ebp - 0x18 ]
jmp sub_420e1b
sub_454b48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454b70
lea ecx [ ebp - 0x18 ]
jmp sub_420e1b
sub_454b78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454ba0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_403ce0
sub_454bab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454bd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454bf0
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_420ecc
sub_454bfb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454c20
lea ecx [ ebp - 0x14 ]
jmp sub_402e30
sub_454c28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454c50
mov ecx [ ebp - 0x14 ]
jmp sub_409520
sub_454c58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454c80
lea ecx [ ebp - 0x30 ]
jmp sub_406b10
sub_454c88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454cb0
lea ecx [ ebp - 0x3c ]
jmp sub_406b10
sub_454cb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454ce0
mov ecx [ ebp - 0x10 ]
jmp sub_407b20
sub_454ce8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454d10
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454d2c
mov ecx [ ebp - 0x14 ]
jmp sub_412c20
sub_454d34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454d50
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454d6c
mov ecx [ ebp - 0x14 ]
jmp sub_412910
sub_454d74
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454d90
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454dac
mov ecx [ ebp - 0x14 ]
jmp sub_412c20
sub_454db4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454dd0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454dec
mov ecx [ ebp - 0x14 ]
jmp sub_412910
sub_454df4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454e10
mov eax [ ebp - 0x18 ]
push eax
call sub_423b7f
pop ecx
retn
sub_454e1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454e40
mov eax [ ebp - 0x18 ]
push eax
call sub_423b7f
pop ecx
retn
sub_454e4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454e70
mov ecx [ ebp - 0x14 ]
jmp sub_409520
sub_454e78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454ea0
mov ecx [ ebp - 0x10 ]
jmp sub_404090
sub_454ea8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454ed0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454eec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454f10
mov ecx [ ebp - 0x10 ]
jmp sub_403f70
sub_454f18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454f40
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454f5c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454f80
mov ecx [ ebp - 0x10 ]
jmp sub_4029e0
sub_454f88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454fb0
mov ecx [ ebp - 0x10 ]
jmp sub_403e50
sub_454fb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_454fe0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_454ffc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455020
lea ecx [ ebp - 0x2c ]
jmp sub_412c20
sub_455028
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455050
lea ecx [ ebp - 0x2c ]
jmp sub_412910
sub_455058
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455080
lea ecx [ ebp - 0x48 ]
jmp sub_402e30
sub_455088
lea ecx [ ebp - 0x3c ]
jmp sub_406b10
sub_455090
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4550c0
lea ecx [ ebp - 0x34 ]
jmp sub_406b10
sub_4550c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4550f0
mov ecx [ ebp - 0x10 ]
jmp sub_407050
sub_4550f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455120
mov ecx [ ebp - 0x10 ]
sub ecx 0x58
jmp sub_406c80
sub_45512b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455150
mov ecx [ ebp - 0x10 ]
jmp sub_40a450
sub_455158
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455180
mov ecx [ ebp - 0x10 ]
jmp sub_40a2a0
sub_455188
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4551b0
mov ecx [ ebp - 0x14 ]
jmp sub_409520
sub_4551b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4551e0
mov ecx [ ebp - 0x20 ]
jmp sub_407ff0
sub_4551e8
mov ecx [ ebp - 0x20 ]
add ecx 0xc
jmp sub_405ce0
sub_4551f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455210
lea ecx [ ebp - 0x1c ]
jmp sub_402680
sub_455218
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455240
lea ecx [ ebp - 0x30 ]
jmp sub_406b10
sub_455248
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455270
lea ecx [ ebp - 0x18 ]
jmp sub_4029e0
sub_455278
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4552a0
lea ecx [ ebp - 0x2c ]
jmp sub_406b10
sub_4552a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4552d0
lea ecx [ ebp - 0x2c ]
jmp sub_406b10
sub_4552d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455300
lea ecx [ ebp - 0x2c ]
jmp sub_406b10
sub_455308
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455330
mov eax [ ebp - 0x14 ]
push eax
call sub_423b7f
pop ecx
retn
sub_45533b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455360
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_45537c
mov ecx [ ebp - 0x14 ]
jmp sub_4131b0
sub_455384
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4553a0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_4553bc
mov ecx [ ebp - 0x14 ]
jmp sub_413030
sub_4553c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4553e0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_4553fc
mov ecx [ ebp - 0x14 ]
jmp sub_412790
sub_455404
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455420
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_45543c
mov ecx [ ebp - 0x14 ]
jmp sub_4131b0
sub_455444
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455460
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_45547c
mov ecx [ ebp - 0x14 ]
jmp sub_413030
sub_455484
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4554a0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_403a70
sub_4554bc
mov ecx [ ebp - 0x14 ]
jmp sub_412790
sub_4554c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4554e0
mov eax [ ebp - 0x18 ]
push eax
call sub_423b7f
pop ecx
retn
sub_4554eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455510
mov eax [ ebp - 0x18 ]
push eax
call sub_423b7f
pop ecx
retn
sub_45551b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455540
mov eax [ ebp - 0x18 ]
push eax
call sub_423b7f
pop ecx
retn
sub_45554b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455570
mov ecx [ ebp - 0x10 ]
jmp sub_404840
sub_455578
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4555a0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_403a70
sub_4555bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4555e0
mov ecx [ ebp - 0x10 ]
jmp sub_4048f0
sub_4555e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455610
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_403a70
sub_45562c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455650
lea ecx [ ebp - 0x18 ]
jmp sub_420e1b
sub_455658
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455680
lea ecx [ ebp - 0x14 ]
jmp sub_402e30
sub_455688
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4556b0
lea ecx [ ebp - 0x80 ]
jmp sub_402e30
sub_4556b8
lea ecx [ ebp - 0x50 ]
jmp sub_406b10
sub_4556c0
lea ecx [ ebp - 0x6c ]
jmp sub_406b10
sub_4556c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf4 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4556f0
lea ecx [ ebp - 0x70 ]
jmp sub_402e30
sub_4556f8
lea ecx [ ebp - 0x6c ]
jmp sub_406b10
sub_455700
lea ecx [ ebp - 0x2c ]
jmp sub_406b10
sub_455708
lea ecx [ ebp - 0x48 ]
jmp sub_406b10
sub_455710
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455740
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455760
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_403a70
sub_45577c
mov ecx [ ebp - 0x14 ]
jmp sub_412e00
sub_455784
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4557a0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_403a70
sub_4557bc
mov ecx [ ebp - 0x14 ]
jmp sub_412a90
sub_4557c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4557e0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_403a70
sub_4557fc
mov ecx [ ebp - 0x14 ]
jmp sub_412e00
sub_455804
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455820
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_403a70
sub_45583c
mov ecx [ ebp - 0x14 ]
jmp sub_412a90
sub_455844
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455860
mov eax [ ebp - 0x18 ]
push eax
call sub_423b7f
pop ecx
retn
sub_45586b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455890
mov eax [ ebp - 0x18 ]
push eax
call sub_423b7f
pop ecx
retn
sub_45589b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4558c0
lea ecx [ ebp - 0x2c ]
jmp sub_4131b0
sub_4558c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4558f0
lea ecx [ ebp - 0x2c ]
jmp sub_413030
sub_4558f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455920
lea ecx [ ebp - 0x2c ]
jmp sub_412790
sub_455928
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455950
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455970
lea ecx [ ebp - 0x18 ]
jmp sub_404090
sub_455978
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4559a0
lea ecx [ ebp - 0x18 ]
jmp sub_403f70
sub_4559a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4559d0
lea ecx [ ebp - 0x18 ]
jmp sub_403e50
sub_4559d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455a00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455a20
mov ecx [ ebp - 0x10 ]
jmp sub_40d3c0
sub_455a28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455a50
mov ecx [ ebp - 0x10 ]
jmp sub_40d3c0
sub_455a58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455a80
lea ecx [ ebp - 0x1c ]
jmp sub_40af90
sub_455a88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455ab0
lea ecx [ ebp - 0x1c ]
jmp sub_40af90
sub_455ab8
lea ecx [ ebp - 0x24 ]
jmp sub_402e30
sub_455ac0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455ae0
lea ecx [ ebp - 0x2c ]
jmp sub_406b10
sub_455ae8
lea ecx [ ebp - 0x38 ]
jmp sub_403e50
sub_455af0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455b20
lea ecx [ ebp - 0x54 ]
jmp sub_412e00
sub_455b28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455b50
lea ecx [ ebp - 0x54 ]
jmp sub_412a90
sub_455b58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455b80
lea ecx [ ebp - 0x30 ]
jmp sub_40af90
sub_455b88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455bb0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_406fe0
sub_455bcc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455bf0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x60
jmp sub_406fe0
sub_455c0c
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_406c80
sub_455c17
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_408350
sub_455c22
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455c40
lea ecx [ ebp - 0x40 ]
jmp sub_4048f0
sub_455c48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455c70
lea ecx [ ebp - 0x40 ]
jmp sub_4048f0
sub_455c78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455ca0
lea ecx [ ebp - 0x40 ]
jmp sub_4048f0
sub_455ca8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455cd0
lea ecx [ ebp - 0x40 ]
jmp sub_4048f0
sub_455cd8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455d00
lea ecx [ ebp - 0x40 ]
jmp sub_4048f0
sub_455d08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455d30
lea ecx [ ebp - 0x40 ]
jmp sub_4048f0
sub_455d38
lea ecx [ ebp - 0x70 ]
jmp sub_4048f0
sub_455d40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455d70
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_404c50
sub_455d7b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_404ec0
sub_455d86
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_407a30
sub_455d91
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_407a80
sub_455d9c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455dc0
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_4026e0
add esp 0x8
retn
sub_455dd1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455df0
mov ecx [ ebp - 0x18 ]
jmp sub_407b20
sub_455df8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455e20
lea ecx [ ebp - 0x40 ]
jmp sub_404840
sub_455e28
lea ecx [ ebp - 0x70 ]
jmp sub_404840
sub_455e30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455e60
lea ecx [ ebp - 0x40 ]
jmp sub_404840
sub_455e68
lea ecx [ ebp - 0x70 ]
jmp sub_404840
sub_455e70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455ea0
mov ecx [ ebp - 0x10 ]
jmp sub_407ff0
sub_455ea8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455ed0
lea ecx [ ebp - 0x40 ]
jmp sub_404840
sub_455ed8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455f00
lea ecx [ ebp - 0x40 ]
jmp sub_404840
sub_455f08
lea ecx [ ebp - 0x70 ]
jmp sub_404840
sub_455f10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455f40
lea ecx [ ebp - 0x10 ]
jmp sub_407f30
sub_455f48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455f70
mov ecx [ ebp - 0x10 ]
jmp sub_404c50
sub_455f78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455fa0
lea ecx [ ebp - 0x10 ]
jmp sub_407f30
sub_455fa8
mov eax [ ebp - 0x1c ]
push eax
call sub_423b7f
pop ecx
retn
sub_455fb3
lea ecx [ ebp - 0x14 ]
jmp sub_407bc0
sub_455fbb
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_407bc0
sub_455fd4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_455ff0
lea ecx [ ebp - 0x14 ]
jmp sub_412de0
sub_455ff8
lea ecx [ ebp - 0x1c ]
jmp sub_405930
sub_456000
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_456020
lea ecx [ ebp - 0x40 ]
jmp sub_404840
sub_456028
lea ecx [ ebp - 0x70 ]
jmp sub_404840
sub_456030
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_4216fe
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_456060
lea ecx [ ebp - 0x14 ]
jmp sub_408110
sub_456068
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_456090
lea ecx [ ebp - 0x10 ]
jmp sub_408170
sub_456098
mov eax [ ebp - 0x1c ]
push eax
call sub_423b7f
pop ecx
retn
sub_4560a3
lea ecx [ ebp - 0x14 ]
jmp sub_412fb0
sub_4560ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_4560d0
lea ecx [ ebp - 0x14 ]
jmp sub_4081c0
sub_4560d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_456100
mov eax [ ebp - 0x4c ]
push eax
call sub_423b7f
pop ecx
retn
sub_45610b
lea ecx [ ebp - 0x3c ]
jmp sub_406a40
sub_456113
lea ecx [ ebp - 0x34 ]
jmp sub_406590
sub_45611b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_4216fe
mov eax r--data
jmp sub_425e08
sub_456140
push ebp
mov ebp esp
mov ecx rw-data
call sub_4074b0
pop ebp
retn
sub_456150
push ebp
mov ebp esp
mov ecx rw-data
call sub_4074c0
pop ebp
retn
sub_456160
push ebp
mov ebp esp
mov ecx rw-data
call sub_4074d0
pop ebp
retn
sub_456170
push ebp
mov ebp esp
mov ecx rw-data
call sub_4074e0
pop ebp
retn
sub_456180
push ebp
mov ebp esp
mov ecx rw-data
call sub_4074f0
pop ebp
retn
sub_456190
push ebp
mov ebp esp
mov ecx rw-data
call sub_407500
pop ebp
retn
sub_4561a0
push ebp
mov ebp esp
mov ecx rw-data
call sub_407510
pop ebp
retn
sub_4561b0
push ebp
mov ebp esp
mov ecx rw-data
call sub_407520
pop ebp
retn
sub_4561c0
push ebp
mov ebp esp
mov ecx rw-data
call sub_407530
pop ebp
retn
sub_4561d0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_4561e0
push ebp
mov ebp esp
push ecx
mov esp ebp
pop ebp
retn
sub_4561f0
push ebp
mov ebp esp
call sub_44d7c0
mov [ rw-data ] eax
pop ebp
retn
sub_456200
push ebp
mov ebp esp
call sub_44d7c0
mov [ rw-data ] eax
pop ebp
retn
sub_456210
push ebp
mov ebp esp
call sub_44d750
mov [ rw-data ] eax
pop ebp
retn
sub_456220
push ebp
mov ebp esp
mov ecx rw-data
call sub_405280
pop ebp
retn
sub_456230
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_402c50
pop ebp
retn
sub_456250
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_402c50
pop ebp
retn
sub_456270
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_402c50
pop ebp
retn
sub_456290
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_402c50
pop ebp
retn
sub_4562b0
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_402c50
pop ebp
retn
sub_4562c1
push sub_4565b0
call sub_4264c6
pop ecx
retn
sub_4562cd
push sub_4565bb
call sub_4264c6
pop ecx
retn
sub_4562d9
push sub_4565c6
call sub_4264c6
pop ecx
retn
sub_4562e5
mov ecx rw-data
call sub_420d30
push sub_4565d1
call sub_4264c6
pop ecx
retn
sub_456335
push 0x1
push 0x0
push rw-data
mov ecx rw-data
call sub_409580
push sub_4565db
call sub_4264c6
pop ecx
retn
sub_456354
mov ecx rw-data
jmp sub_420630
sub_45635e
push sub_4565f9
call sub_4264c6
pop ecx
retn
sub_45636a
push sub_4565ef
call sub_4264c6
pop ecx
retn
sub_456376
mov ecx rw-data
call sub_420d30
push sub_456603
call sub_4264c6
pop ecx
retn
sub_45638c
mov ecx rw-data
call sub_420d30
push sub_45660d
call sub_4264c6
pop ecx
retn
sub_4563a2
push sub_456617
call sub_4264c6
pop ecx
retn
sub_4563b0
push rw-data
call sub_44aac0
push sub_456680
call sub_4264c6
add esp 0x8
retn
sub_4563d0
push rw-data
call sub_44adb0
push sub_456640
call sub_4264c6
add esp 0x8
retn
sub_4565b0
mov [ rw-data ] r--data
retn
sub_4565bb
mov [ rw-data ] r--data
retn
sub_4565c6
mov [ rw-data ] r--data
retn
sub_4565d1
mov ecx rw-data
jmp sub_420d61
sub_4565db
mov ecx rw-data
jmp sub_409080
sub_4565e5
mov ecx rw-data
jmp sub_408350
sub_4565ef
mov ecx rw-data
jmp sub_402e30
sub_4565f9
mov ecx rw-data
jmp sub_42084d
sub_456603
mov ecx rw-data
jmp sub_420d61
sub_45660d
mov ecx rw-data
jmp sub_420d61
sub_456617
mov ecx rw-data
jmp sub_421658
sub_456621
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_422419
