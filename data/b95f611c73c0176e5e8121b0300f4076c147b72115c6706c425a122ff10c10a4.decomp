sub_10113b1f
mov [ esp + 0x8 ] cl
mov [ esp + 0x20 ] 0x8c2cca9b
pushad
jmp rwxdata
jmp rwxdata
mov [ esp ] 0x54d1
mov [ esp + 0x3c ] 0xc8026074
mov [ esp + 0x18 ] 0x1e
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x4 ] edx
push [ esp ]
push 0x278841c6
pushfd
lea esp [ esp + 0x10 ]
jmp sub_101f9218
sub_1011c927
mov [ esp + 0x20 ] 0x617eca98
pushad
mov [ esp + 0x3c ] 0x4cb63edc
mov [ esp + 0x4 ] 0xce
pushfd
mov [ esp + 0x4 ] cl
mov [ esp + 0x8 ] al
lea esp [ esp + 0x40 ]
jmp rwxdata
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x4 ] bl
mov [ esp + 0x4 ] edx
pushad
push esp
push 0xfbf3e6b1
lea esp [ esp + 0x2c ]
jmp sub_101f9218
sub_101f622f
push 0x1a6ca97
pushfd
lea esp [ esp + 0x4 ]
js rwxdata
push ecx
mov [ esp ] 0x25ae55da
pushad
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
push 0x25ae55da
push 0x6718635
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_101f975d
sub_101f7687
pushad
mov [ ebp ] ax
pushfd
pushfd
push ebx
mov [ esp ] 0xdf49
lea esp [ esp + 0x34 ]
jmp rwxdata
btr dx si
pushad
pushfd
mov al [ esi - 0x1 ]
push 0xdcfa0c0b
ror dh 0x7
sub al bl
pushfd
btc dx sp
inc dx
not al
sbb dl 0x5a
neg al
rcr dl 0x1
ror dl 0x5
xor al 0x7f
bsf dx ax
bswap edx
lea edx [ ebx - 0x703d4d2e ]
lea esi [ esi - 0x1 ]
dec dx
clc
sub bl al
ror dx cl
clc
lea edx [ ebp - 0x65a25d ]
movzx eax al
lea edx [ ecx - 0x5a7ec1b6 ]
call sub_101f87b1
sub_101f789a
add ebp 0x8
push 0x4c3879a1
mov [ ss : eax ] edx
push 0x83f79ed9
push eax
lea esp [ esp + 0x1c ]
jmp rwxdata
btr dx si
pushad
pushfd
mov al [ esi - 0x1 ]
push 0xdcfa0c0b
ror dh 0x7
sub al bl
pushfd
btc dx sp
inc dx
not al
sbb dl 0x5a
neg al
rcr dl 0x1
ror dl 0x5
xor al 0x7f
bsf dx ax
bswap edx
lea edx [ ebx - 0x703d4d2e ]
lea esi [ esi - 0x1 ]
dec dx
clc
sub bl al
ror dx cl
clc
lea edx [ ebp - 0x65a25d ]
movzx eax al
lea edx [ ecx - 0x5a7ec1b6 ]
call sub_101f87b1
sub_101f7cf6
test dl 0x99
shl eax 0x7
cmp ah bl
cmp ah bh
bt dx di
shr ecx 0x19
bt bp bp
clc
bt di 0x1
cmc
or eax ecx
cmc
jmp sub_101f973b
sub_101f7f2b
rol dx cl
mov [ esp + 0x4 ] ebp
pushad
movzx ebp cl
xchg [ esp + 0x20 ] esi
ror si cl
pop esi
pop esi
mov [ esp + 0x14 ] ecx
pop ebp
seto dh
stc
mov [ esp + 0xc ] ebx
ror si cl
xchg [ esp + 0x8 ] edi
btc esi 0x6
xchg si bp
mov [ esp + 0x4 ] eax
not edx
push [ esp ]
rol ebp cl
call sub_101f8cde
sub_101f8402
push [ esp ]
pushfd
pop [ esp + 0x14 ]
pushfd
mov [ esp ] bl
mov [ esp + 0x8 ] 0x6925
pushad
push [ esp + 0x38 ]
pop [ ebp ]
push [ esp ]
mov [ esp + 0x4 ] dx
lea esp [ esp + 0x40 ]
jmp sub_101f76a8
sub_101f84b8
movzx di cl
mov esp eax
movzx di bl
pushad
jmp rwxdata
pushfd
pop [ esp + 0x1c ]
pushad
mov [ esp + 0x38 ] esi
mov [ esp ] 0xf93c
mov esi edx
bswap di
jmp rwxdata
movsx di bl
pushfd
lea edi [ ecx + eax - 0x40 ]
pushfd
mov [ esp + 0x3c ] edi
pushfd
push ebx
mov edi eax
call sub_101f79ba
sub_101f87b1
rcl dx 0x1
mov edx [ eax * 4 + rwxdata ]
cmc
rol edx 0x13
pushfd
test dl dl
add edx 0x0
jmp rwxdata
mov [ esp ] 0x47
mov [ esp + 0x30 ] edx
push 0x2ccbc9f2
pushfd
push [ esp + 0x38 ]
retn 0x3c
sub_101f8b82
mov edi [ esp + 0x8 ]
or si 0x6d65
cmc
sub si si
mov esi [ esp + 0xc ]
clc
push [ esp + 0x10 ]
popfd
pushad
push 0xe93ac774
push [ esp + 0x14 ]
lea esp [ esp + 0x3c ]
jmp rwxdata
btr dx si
pushad
pushfd
mov al [ esi - 0x1 ]
push 0xdcfa0c0b
ror dh 0x7
sub al bl
pushfd
btc dx sp
inc dx
not al
sbb dl 0x5a
neg al
rcr dl 0x1
ror dl 0x5
xor al 0x7f
bsf dx ax
bswap edx
lea edx [ ebx - 0x703d4d2e ]
lea esi [ esi - 0x1 ]
dec dx
clc
sub bl al
ror dx cl
clc
lea edx [ ebp - 0x65a25d ]
movzx eax al
lea edx [ ecx - 0x5a7ec1b6 ]
call sub_101f87b1
sub_101f8bb1
[ edi ] [ esi ]
rcl di 0xd
inc di
cmp bl 0x9
mov edi [ esp + 0x54 ]
ror si cl
shl si cl
mov esi [ esp + 0x58 ]
cld
clc
cmp ah 0x92
push [ esp + 0x5c ]
popfd
mov [ esp ] dl
lea esp [ esp + 0x60 ]
jmp rwxdata
btr dx si
pushad
pushfd
mov al [ esi - 0x1 ]
push 0xdcfa0c0b
ror dh 0x7
sub al bl
pushfd
btc dx sp
inc dx
not al
sbb dl 0x5a
neg al
rcr dl 0x1
ror dl 0x5
xor al 0x7f
bsf dx ax
bswap edx
lea edx [ ebx - 0x703d4d2e ]
lea esi [ esi - 0x1 ]
dec dx
clc
sub bl al
ror dx cl
clc
lea edx [ ebp - 0x65a25d ]
movzx eax al
lea edx [ ecx - 0x5a7ec1b6 ]
call sub_101f87b1
sub_101f8cde
xchg [ esp + 0x8 ] ebx
bts si dx
clc
pushfd
rcr bp cl
push [ rwxdata ]
pop [ esp + 0x8 ]
push esi
pushfd
mov [ esp + 0xc ] 0x0
lea esi [ edx * 4 + 0x12c40c40 ]
pushfd
movzx si cl
pop esi
mov esi [ esp + 0x3c ]
movsx bp cl
ror esi 0x10
bswap bp
dec esi
cmp ax si
shld dx sp 0x5
add al bh
xor esi 0xda89bbcd
shrd bp bp 0x5
movsx di al
lea ebp [ esp + 0xc ]
rcl di 0x4
test bh dl
or al bh
inc bh
sub esp 0xb4
push 0xadb93263
shl di cl
ror bl cl
lea edi [ esp + 0x4 ]
add esp 0x4
clc
bts bx sp
rol dx 0xd
mov ebx esi
cmp cl 0x4
ror al cl
adc dh bh
add esi [ ebp ]
btr dx si
pushad
pushfd
mov al [ esi - 0x1 ]
push 0xdcfa0c0b
ror dh 0x7
sub al bl
pushfd
btc dx sp
inc dx
not al
sbb dl 0x5a
neg al
rcr dl 0x1
ror dl 0x5
xor al 0x7f
bsf dx ax
bswap edx
lea edx [ ebx - 0x703d4d2e ]
lea esi [ esi - 0x1 ]
dec dx
clc
sub bl al
ror dx cl
clc
lea edx [ ebp - 0x65a25d ]
movzx eax al
lea edx [ ecx - 0x5a7ec1b6 ]
call sub_101f87b1
sub_101f8dc4
mov [ esp + 0x8 ] 0xd52b
lea esp [ esp + 0xc ]
ja rwxdata
btr dx si
pushad
pushfd
mov al [ esi - 0x1 ]
push 0xdcfa0c0b
ror dh 0x7
sub al bl
pushfd
btc dx sp
inc dx
not al
sbb dl 0x5a
neg al
rcr dl 0x1
ror dl 0x5
xor al 0x7f
bsf dx ax
bswap edx
lea edx [ ebx - 0x703d4d2e ]
lea esi [ esi - 0x1 ]
dec dx
clc
sub bl al
ror dx cl
clc
lea edx [ ebp - 0x65a25d ]
movzx eax al
lea edx [ ecx - 0x5a7ec1b6 ]
call sub_101f87b1
cmp bp 0x489
dec al
setne dl
mov edx esp
dec cl
setne ch
js rwxdata
bts cx 0x5
lea ecx [ edi + 0x40 ]
push 0x3ca606c
rcr di cl
sub ecx edx
lea edi [ esp + 0x62756991 ]
das
sar edi cl
setg ah
lea eax [ ebp - 0x80 ]
rcr di cl
and al 0xfc
bsf di bp
btc edi esp
sub eax ecx
jmp rwxdata
and ecx 0x99e309f3
lea ecx [ edi + 0x40 ]
shr ax cl
sub ecx edx
das
jmp rwxdata
call sub_101f84b8
cmc
rcl ah 0x4
lea eax [ ebp - 0x80 ]
clc
stc
cmp dl bl
and al 0xfc
not di
not di
rcl edi 0xb
bsf di bp
sub eax ecx
call sub_101f8f67
sub_101f8f67
pop edi
pushfd
mov esp eax
mov di 0xa277
lea edi [ edi - 0x6f85eb50 ]
movsx di bl
bswap di
pushfd
cld
push esi
push 0x3270e257
mov esi edx
not di
lea edi [ ecx + eax - 0x40 ]
std
mov [ esp ] 0x68
mov [ esp ] bp
mov [ esp ] edi
not edi
movsx di cl
call sub_101f90ca
sub_101f91fe
mov [ ebp ] eax
mov [ esp ] 0x7f88
mov [ esp + 0x4 ] ah
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
btr dx si
pushad
pushfd
mov al [ esi - 0x1 ]
push 0xdcfa0c0b
ror dh 0x7
sub al bl
pushfd
btc dx sp
inc dx
not al
sbb dl 0x5a
neg al
rcr dl 0x1
ror dl 0x5
xor al 0x7f
bsf dx ax
bswap edx
lea edx [ ebx - 0x703d4d2e ]
lea esi [ esi - 0x1 ]
dec dx
clc
sub bl al
ror dx cl
clc
lea edx [ ebp - 0x65a25d ]
movzx eax al
lea edx [ ecx - 0x5a7ec1b6 ]
call sub_101f87b1
sub_101f973b
cmp cl 0x76
xor al [ edx ]
push edi
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] di
inc edx
pushfd
pushfd
dec [ ebp ]
push 0xfcff6c51
pushad
call sub_101f8104
sub_1011c921
pushad
sub_1011c922
push 0xcad69080
_TLS_Entry_0
jmp sub_101f622f
_start
pushad
mov [ esp + 0x4 ] dh
call sub_10113b1f
sub_101f76a8
bsr eax ecx
lea eax [ edi + 0x50 ]
cmc
stc
call sub_101f96be
sub_101f76ed
call sub_101f8bb1
sub_101f7748
call sub_101f7687
sub_101f774d
push [ esp + 0x3c ]
pop [ ebp ]
mov [ esp + 0x4 ] ax
mov [ esp ] 0x45
lea esp [ esp + 0x40 ]
jmp sub_101f76a8
sub_101f79ba
mov [ esp ] ecx
pushfd
cld
call sub_101f76ed
sub_101f8104
pushfd
lea esp [ esp + 0x3c ]
jne rwxdata
or cx sp
mov ecx eax
call sub_101f7cf6
pushad
call sub_101f91fe
j_sub_101f9065
jmp sub_101f9065
sub_101f8c07
mov [ esp + 0x4 ] bh
[ edi ] [ esi ]
movzx si bl
bts si bx
jmp sub_101f8b82
sub_101f9065
mov [ ebp ] ax
mov [ esp ] dl
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x3c ]
jmp sub_101f76a8
sub_101f90ca
mov edi eax
mov [ esp ] 0x20
cld
mov [ esp ] 0x19
call sub_101f8c07
sub_101f9218
movzx edx cl
pushfd
push 0x541ba192
call sub_101f7f2b
sub_101f96be
pushfd
cmp ebp eax
call sub_101f8dc4
sub_101f975d
push [ esp ]
push [ esp ]
jmp rwxdata
mov [ esp + 0x8 ] edx
mov [ esp ] 0xa0
pushad
lea esp [ esp + 0x28 ]
jmp sub_101f9218
